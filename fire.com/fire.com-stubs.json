{
  "mappings" : [ {
    "id" : "dcf05956-1e30-483b-a3b9-1ef162080059",
    "name" : "List transactions for an account (v3)",
    "request" : {
      "urlPath" : "/v3/accounts/2649131628441908282/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"links\" : [ {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  } ],\n  \"content\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"g9vu1g02z85l4g954wj8g1ltzimhpoethykpmmy9i9p40f8lwk87pya2ja547uu3l5uo1bbg99bcnhyeujsc3i8hzynec08oitwnrhfxuur1tdl9qw2ve6qoyyt063ce3mzfnk1usacvcvne9la1d6m94mmg5eer43mj29n8sgqrx\",\n        \"additionalDataDe124\" : \"wqvhby5rf5aecb8zdwdn7qhtzj5fhf726onq1etp6u8mvqzdt27ufnyj683xe461kfnnhw7s2wv6y8ylazqr83bfd2kq4ojjunvp8cls8lo5ppqjafdeu3qja75qcme1134uxttpq0q0zwt2k1dbci55ewiy6bm2zh6ca\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-06-16T10:45:41.671727Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"wuad0na65vmbz26g1v1wra3\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-03T12:45:51.671Z\",\n      \"maskedPan\" : \"ta045ft6xt5177xi\",\n      \"provider\" : \"wj46dvpdbqayy0bagwra4si8j1wic8hvl\",\n      \"cardId\" : 4301176996658771500,\n      \"embossBusinessName\" : \"David Schmidt\",\n      \"alias\" : \"3xw137hkcur5nxcs2w65pm589zubgqab2kmifk3jdw53sqhiclpmczxoazgnr407pcnp2f3px81kdytta9uc\",\n      \"embossCardName\" : \"Jordan Swaniawski III\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcf05956-1e30-483b-a3b9-1ef162080059",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.673323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsByIdv3",
          "schema" : {
            "properties" : {
              "content" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "items" : {
                  "properties" : {
                    "href" : {
                      "description" : "https://api.fire.com/business/v3/accounts/1/transactions?startAfter=eyJpY2F",
                      "example" : "The URL of the linked page",
                      "type" : "string"
                    },
                    "rel" : {
                      "description" : "The relationship of this link to the current object - self, next, prev page.",
                      "example" : "self",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv3",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d6134c6d-e02d-4ceb-a162-e4d595eb7ece",
    "name" : "Returns list of all users on your fire.com account",
    "request" : {
      "urlPath" : "/v1/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"LIVE\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"LIVE\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"LIVE\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"FROZEN\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6134c6d-e02d-4ceb-a162-e4d595eb7ece",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.67153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUsers",
          "schema" : {
            "items" : {
              "properties" : {
                "emailAddress" : {
                  "description" : "email address for user",
                  "example" : "user@example.com",
                  "type" : "string"
                },
                "firstName" : {
                  "description" : "User first name",
                  "example" : "Colm",
                  "type" : "string"
                },
                "id" : {
                  "description" : "The User ID for this User",
                  "example" : 14059,
                  "format" : "int64",
                  "type" : "integer"
                },
                "lastName" : {
                  "description" : "User second name",
                  "example" : "User",
                  "type" : "string"
                },
                "lastlogin" : {
                  "description" : "Timestamp on when user last logged in.",
                  "example" : "2012-01-20T11:21:35.000Z",
                  "type" : "string"
                },
                "mobileApplicationDetails" : {
                  "properties" : {
                    "OS" : {
                      "description" : "Operating system of device.",
                      "enum" : [ "Android", "IOS", "OTHER" ],
                      "type" : "string"
                    },
                    "businessUserId" : {
                      "description" : "Business user ID",
                      "example" : "14059",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "clientID" : {
                      "description" : "Client ID of user.",
                      "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                      "type" : "string"
                    },
                    "deviceName" : {
                      "description" : "type of device.",
                      "enum" : [ "iPhone", "Android", "Other" ],
                      "type" : "string"
                    },
                    "deviceOSVersion" : {
                      "description" : "OS version for device.",
                      "example" : "14.4",
                      "type" : "string"
                    },
                    "mobileApplicationId" : {
                      "description" : "Mobile application id for user.",
                      "example" : "18967",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "status" : {
                      "description" : "Status of user",
                      "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "mobileApplication",
                  "type" : "object"
                },
                "mobileNumber" : {
                  "description" : "User mobile number",
                  "example" : "+353871234567",
                  "type" : "string"
                },
                "role" : {
                  "description" : "User role",
                  "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                  "type" : "string"
                },
                "status" : {
                  "description" : "Status of user",
                  "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                  "type" : "string"
                },
                "userCvl" : {
                  "description" : "Users Cvl type ID (shows up when status is LIVE)",
                  "example" : "FULL",
                  "type" : "string"
                }
              },
              "title" : "user",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "36a2d8d0-1a5c-469a-8a2b-877d82e7cdca",
    "name" : "Returns details of a specific fire.com user.",
    "request" : {
      "urlPath" : "/v1/user/8583966801603678681",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"FROZEN\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36a2d8d0-1a5c-469a-8a2b-877d82e7cdca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.67099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "properties" : {
              "emailAddress" : {
                "description" : "email address for user",
                "example" : "user@example.com",
                "type" : "string"
              },
              "firstName" : {
                "description" : "User first name",
                "example" : "Colm",
                "type" : "string"
              },
              "id" : {
                "description" : "The User ID for this User",
                "example" : 14059,
                "format" : "int64",
                "type" : "integer"
              },
              "lastName" : {
                "description" : "User second name",
                "example" : "User",
                "type" : "string"
              },
              "lastlogin" : {
                "description" : "Timestamp on when user last logged in.",
                "example" : "2012-01-20T11:21:35.000Z",
                "type" : "string"
              },
              "mobileApplicationDetails" : {
                "properties" : {
                  "OS" : {
                    "description" : "Operating system of device.",
                    "enum" : [ "Android", "IOS", "OTHER" ],
                    "type" : "string"
                  },
                  "businessUserId" : {
                    "description" : "Business user ID",
                    "example" : "14059",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "clientID" : {
                    "description" : "Client ID of user.",
                    "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                    "type" : "string"
                  },
                  "deviceName" : {
                    "description" : "type of device.",
                    "enum" : [ "iPhone", "Android", "Other" ],
                    "type" : "string"
                  },
                  "deviceOSVersion" : {
                    "description" : "OS version for device.",
                    "example" : "14.4",
                    "type" : "string"
                  },
                  "mobileApplicationId" : {
                    "description" : "Mobile application id for user.",
                    "example" : "18967",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "status" : {
                    "description" : "Status of user",
                    "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                    "type" : "string"
                  }
                },
                "title" : "mobileApplication",
                "type" : "object"
              },
              "mobileNumber" : {
                "description" : "User mobile number",
                "example" : "+353871234567",
                "type" : "string"
              },
              "role" : {
                "description" : "User role",
                "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                "type" : "string"
              },
              "status" : {
                "description" : "Status of user",
                "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                "type" : "string"
              },
              "userCvl" : {
                "description" : "Users Cvl type ID (shows up when status is LIVE)",
                "example" : "FULL",
                "type" : "string"
              }
            },
            "title" : "user",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "df68091b-6a50-4b70-a21b-be1f32dae72d",
    "name" : "Get Payment Details",
    "request" : {
      "urlPath" : "/v1/payments/ad81f249-80f0-31fb-98c9-c5105143675c",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 1000,\n  \"additionalFields\" : \"ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2\",\n  \"description\" : \"Gym Fees Oct 2020\",\n  \"type\" : \"OTHER\",\n  \"webhookUrl\" : \"https://example.com/webhook\",\n  \"icanTo\" : 42,\n  \"transactionType\" : \"PAYMENT\",\n  \"orderDetails\" : {\n    \"deliveryCity\" : \"London\",\n    \"comment2\" : \"Additional comments about the transaction\",\n    \"productId\" : \"ZFDAA-1221\",\n    \"comment1\" : \"Additional comments about the transaction\",\n    \"orderId\" : \"6c28a47d-4502-4111\",\n    \"variableReference\" : \"John Doe\",\n    \"merchantCustomerIdentification\" : 8303863544,\n    \"customerNumber\" : \"123645\",\n    \"merchantNumber\" : \"1234567\",\n    \"deliveryPostCode\" : \"EC15155\",\n    \"deliveryCountry\" : \"GB\",\n    \"deliveryAddressLine2\" : \"The Way\",\n    \"deliveryAddressLine1\" : \"12 The Street\"\n  },\n  \"paymentUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"maxNumberPayments\" : 1,\n  \"mandatoryFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"collectFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"expiry\" : \"2024-10-22T07:48:56.460Z\",\n  \"returnUrl\" : \"https://example.com/callback\",\n  \"myRef\" : \"Fees\",\n  \"paymentRequestCode\" : \"1234abcd\",\n  \"status\" : \"AWAITING_MULTI_AUTHORISATION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df68091b-6a50-4b70-a21b-be1f32dae72d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.670644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPaymentDetails",
          "schema" : {
            "properties" : {
              "additionalFields" : {
                "description" : "These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.",
                "example" : "ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2",
                "type" : "string"
              },
              "amount" : {
                "description" : "The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).",
                "example" : 1000,
                "format" : "int64",
                "type" : "integer"
              },
              "collectFields" : {
                "description" : "For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "description" : {
                "description" : "A public facing description of the request. This will be shown to the user when they tap or scan the request.",
                "example" : "Gym Fees Oct 2020",
                "type" : "string"
              },
              "expiry" : {
                "description" : "This is the expiry of the payment request. After this time, the payment cannot be paid.",
                "example" : "2024-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "icanTo" : {
                "description" : "The ican of the account to collect the funds into. Must be one of your fire.com Accounts.",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "mandatoryFields" : {
                "description" : "For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "maxNumberPayments" : {
                "description" : "The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.",
                "example" : 1,
                "type" : "integer"
              },
              "myRef" : {
                "description" : "An internal description of the request.",
                "example" : "Fees",
                "type" : "string"
              },
              "orderDetails" : {
                "properties" : {
                  "comment1" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "comment2" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "customerNumber" : {
                    "description" : "Use this field to store a customer number for the transaction (for example).",
                    "example" : "123645",
                    "type" : "string"
                  },
                  "deliveryAddressLine1" : {
                    "description" : "The first line of the delivery address.",
                    "example" : "12 The Street",
                    "type" : "string"
                  },
                  "deliveryAddressLine2" : {
                    "description" : "The second line of the delivery address.",
                    "example" : "The Way",
                    "type" : "string"
                  },
                  "deliveryCity" : {
                    "description" : "Delivery address city",
                    "example" : "London",
                    "type" : "string"
                  },
                  "deliveryCountry" : {
                    "description" : "2-digit code for the country",
                    "example" : "GB",
                    "type" : "string"
                  },
                  "deliveryPostCode" : {
                    "description" : "Delivery address post code",
                    "example" : "EC15155",
                    "type" : "string"
                  },
                  "merchantCustomerIdentification" : {
                    "description" : "This is a reference you use to uniquely identify each of your customers.",
                    "example" : 8303863544,
                    "type" : "string"
                  },
                  "merchantNumber" : {
                    "description" : "Your Merchant Number (if applicable).",
                    "example" : "1234567",
                    "type" : "string"
                  },
                  "orderId" : {
                    "description" : "Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.",
                    "example" : "6c28a47d-4502-4111",
                    "type" : "string"
                  },
                  "productId" : {
                    "description" : "Use this field to store a product id for the transaction (for example).",
                    "example" : "ZFDAA-1221",
                    "type" : "string"
                  },
                  "variableReference" : {
                    "description" : "Use this field to store any other reference for the transaction (for example, a phone number).",
                    "example" : "John Doe",
                    "type" : "string"
                  }
                },
                "title" : "orderDetails",
                "type" : "object"
              },
              "paymentRequestCode" : {
                "description" : "The code that was returned when you created the payment request.",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "paymentUuid" : {
                "description" : "A unique id for the transaction.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "returnUrl" : {
                "description" : "The merchant return URL where the customer will be re-directed to with the result of the transaction.",
                "example" : "https://example.com/callback",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the transaction",
                "enum" : [ "AWAITING_AUTHORISATION", "AUTHORISED", "AWAITING_MULTI_AUTHORISATION", "NOT_AUTHORISED", "PAID", "REJECTED", "ACCEPTED", "RECEIVED" ],
                "type" : "string"
              },
              "transactionType" : {
                "description" : "The type of payment request payment",
                "enum" : [ "REFUND_REQUEST", "PAYMENT" ],
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created",
                "enum" : [ "OTHER" ],
                "type" : "string"
              },
              "webhookUrl" : {
                "description" : "A URL to be called in the background with the details of the payment after the payment is complete",
                "example" : "https://example.com/webhook",
                "type" : "string"
              }
            },
            "title" : "paymentRequest",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "e02bf1ab-b720-47f1-ba33-dc5c23bd0264",
    "name" : "Create a Fire Open Payment request",
    "request" : {
      "urlPath" : "/v1/paymentrequests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : \"1234abcd\",\n  \"type\" : \"OTHER\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e02bf1ab-b720-47f1-ba33-dc5c23bd0264",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.670121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "newPaymentRequest",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.\n",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created.",
                "enum" : [ "OTHER" ],
                "type" : "string"
              }
            },
            "title" : "newPaymentRequestResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "6e408ade-b48b-4c21-ad68-fe0fd5b0d82c",
    "name" : "List all Payee Bank Accounts",
    "request" : {
      "urlPath" : "/v1/payees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"fundingSources\" : [ {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e408ade-b48b-4c21-ad68-fe0fd5b0d82c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.670046Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPayees",
          "schema" : {
            "properties" : {
              "fundingSources" : {
                "items" : {
                  "properties" : {
                    "accountHolderName" : {
                      "description" : "The name on the payee bank account.",
                      "example" : "Joe Bloggs",
                      "type" : "string"
                    },
                    "accountName" : {
                      "description" : "The alias attributed to the payee, usually set by the user when creating the payee.",
                      "example" : "Joe",
                      "type" : "string"
                    },
                    "accountNumber" : {
                      "description" : "The Account Number of the account if currency is GBP.",
                      "example" : "12345678",
                      "type" : "string"
                    },
                    "bic" : {
                      "description" : "The BIC of the account if currency is EUR.",
                      "example" : "BOFIIE2DXXX",
                      "type" : "string"
                    },
                    "createdBy" : {
                      "description" : "The creation source of the payee.",
                      "enum" : [ "CUSTOMER", "LODGEMENT", "DIRECT DEBIT", "OPEN BANKING", "FIRE OPEN PAYMENT", "FIRE DIRECT" ],
                      "example" : "CUSTOMER",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the payee was created. ISO Date Time.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "iban" : {
                      "description" : "The IBAN of the account if currency is EUR.",
                      "example" : "IE86BOFI90535211111111",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "Identifier for the fire.com payee bank account (assigned by fire.com).",
                      "example" : 742,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "nsc" : {
                      "description" : "The Sort Code of the account if currency is GBP.",
                      "example" : "998822",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.\n  * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.\n  * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.\n  * 'CLOSED'\n  * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.\n",
                      "enum" : [ "CREATED", "LIVE", "CLOSED", "ARCHIVED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    }
                  },
                  "title" : "payee",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of payees in the list.",
                "example" : 1,
                "type" : "integer"
              }
            },
            "title" : "payeeBankAccounts",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c42311e4-7aaf-4cd1-bb84-564677932eee",
    "name" : "Cancel a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/ffa5abca-e953-3b6a-9fc9-cfeb355a30fc/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c42311e4-7aaf-4cd1-bb84-564677932eee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.669752Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelMandateByUuid"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "2163b969-f44a-4130-8ed5-a865e2b365e6",
    "name" : "Activate a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/ae26e0b7-48a8-3ede-a296-4db3a175b330/activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2163b969-f44a-4130-8ed5-a865e2b365e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.669713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "activateMandate"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "6b2df261-dde6-47c6-9f77-52c08c15a788",
    "name" : "Update a direct debit mandate alias - 204",
    "request" : {
      "urlPath" : "/v1/mandates/d7e9ba4e-a073-3d2c-b961-2fdcd4234b82",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6b2df261-dde6-47c6-9f77-52c08c15a788",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.669672Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateMandateAlias"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "755edf90-975e-4d90-bce3-3c071144ca54",
    "name" : "Get direct debit mandate details",
    "request" : {
      "urlPath" : "/v1/mandates/e1ff2541-9c66-3b1a-a127-58f579acd0fb",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"originatorReference\" : \"VODA-123456\",\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 1,\n  \"latestDirectDebitAmount\" : 2,\n  \"numberOfDirectDebitCollected\" : 2,\n  \"valueOfDirectDebitCollected\" : 2,\n  \"originatorAlias\" : \"Vodaphone PLC\",\n  \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateReference\" : \"CRZ-102190123\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n  \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n  \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n  \"alias\" : \"Vodaphone\",\n  \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n  \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "755edf90-975e-4d90-bce3-3c071144ca54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.669605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getMandate",
          "schema" : {
            "properties" : {
              "alias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCancelled" : {
                "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCompleted" : {
                "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "fireRejectionReason" : {
                "description" : "Rejection reason if transaction is rejected",
                "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "latestDirectDebitAmount" : {
                "description" : "The value of largest direct debit collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "latestDirectDebitDate" : {
                "description" : "The date of latest direct debit collected",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateReference" : {
                "description" : "the reference of the mandate",
                "example" : "CRZ-102190123",
                "type" : "string"
              },
              "mandateUuid" : {
                "description" : "The UUID for the mandate",
                "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                "type" : "string"
              },
              "numberOfDirectDebitCollected" : {
                "description" : "The number of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "originatorAlias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone PLC",
                "type" : "string"
              },
              "originatorLogoUrlLarge" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoLarge",
                "type" : "string"
              },
              "originatorLogoUrlSmall" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoSmall",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeCancelReason" : {
                "description" : "Reason for cancelation",
                "example" : "e.g. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeCancelReasonCode" : {
                "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "Identifier for the fire.com account (assigned by fire.com)",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfDirectDebitCollected" : {
                "description" : "The value of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandate",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "769b5257-d79c-4fb2-a2d6-e10c07b38e7f",
    "name" : "List all direct debit mandates",
    "request" : {
      "urlPath" : "/v1/mandates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"mandates\" : [ {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "769b5257-d79c-4fb2-a2d6-e10c07b38e7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.66921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitMandates",
          "schema" : {
            "properties" : {
              "mandates" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCancelled" : {
                      "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCompleted" : {
                      "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "fireRejectionReason" : {
                      "description" : "Rejection reason if transaction is rejected",
                      "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                      "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "latestDirectDebitAmount" : {
                      "description" : "The value of largest direct debit collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "latestDirectDebitDate" : {
                      "description" : "The date of latest direct debit collected",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateReference" : {
                      "description" : "the reference of the mandate",
                      "example" : "CRZ-102190123",
                      "type" : "string"
                    },
                    "mandateUuid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                      "type" : "string"
                    },
                    "numberOfDirectDebitCollected" : {
                      "description" : "The number of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "originatorAlias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone PLC",
                      "type" : "string"
                    },
                    "originatorLogoUrlLarge" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoLarge",
                      "type" : "string"
                    },
                    "originatorLogoUrlSmall" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoSmall",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeCancelReason" : {
                      "description" : "Reason for cancelation",
                      "example" : "e.g. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeCancelReasonCode" : {
                      "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                      "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "Identifier for the fire.com account (assigned by fire.com)",
                      "example" : 1,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "valueOfDirectDebitCollected" : {
                      "description" : "The value of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "mandate",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandates",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "3f5fa257-865c-4ced-9f2c-a19db90e3278",
    "name" : "Reject a direct debit payment - 204",
    "request" : {
      "urlPath" : "/v1/directdebits/faa4e918-12dd-3379-aa31-f1cfa0238511/reject",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3f5fa257-865c-4ced-9f2c-a19db90e3278",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.668721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rejectDirectDebit"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "c55c8ac9-d9ce-49df-9edc-ec71806f93c2",
    "name" : "Get the details of a direct debit",
    "request" : {
      "urlPath" : "/v1/directdebits/f323284d-b296-30e3-a5af-85d41c4cdb8d",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directDebitReference\" : \"VODA-ABC453-1\",\n  \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n  \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n  \"originatorReference\" : \"VODA-123456\",\n  \"amount\" : 100,\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 42,\n  \"isDDIC\" : false,\n  \"originatorAlias\" : \"Three\",\n  \"type\" : \"FIRST_COLLECTION\",\n  \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n  \"targetPayeeId\" : 12,\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c55c8ac9-d9ce-49df-9edc-ec71806f93c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.668669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitByUuid",
          "schema" : {
            "properties" : {
              "amount" : {
                "description" : "Value of the payment",
                "example" : 100,
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "directDebitReference" : {
                "description" : "The direct debit reference.",
                "example" : "VODA-ABC453-1",
                "type" : "string"
              },
              "directDebitUuid" : {
                "description" : "The UUID for the direct debit payment",
                "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                "type" : "string"
              },
              "isDDIC" : {
                "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                "example" : false,
                "type" : "boolean"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateUUid" : {
                "description" : "The UUID for the mandate",
                "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                "type" : "string"
              },
              "originatorAlias" : {
                "description" : "The Alias of the party who sets up the direct debit.",
                "example" : "Three",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeRejectReason" : {
                "description" : "Reason why rejected",
                "example" : "eg. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeRejectReasonCode" : {
                "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                "type" : "string"
              },
              "status" : {
                "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "The ican of your fire account that the money was taken from",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "targetPayeeId" : {
                "description" : "The payee that was created when the DD was processed",
                "example" : 12,
                "format" : "int64",
                "type" : "integer"
              },
              "type" : {
                "description" : "The type of the direct debit.",
                "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                "example" : "FIRST_COLLECTION",
                "type" : "string"
              }
            },
            "title" : "directDebit",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "83e49372-600e-47dd-aae0-0ca6d48d911e",
    "name" : "Get all DD payments associated with a direct debit mandate",
    "request" : {
      "urlPath" : "/v1/directdebits",
      "method" : "GET",
      "queryParameters" : {
        "mandateUuid" : {
          "equalTo" : "fb73d19e-0f32-3e2e-8642-457f25dc5431"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"directdebits\" : [ {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83e49372-600e-47dd-aae0-0ca6d48d911e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.66834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitsForMandateUuid",
          "schema" : {
            "properties" : {
              "directdebits" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "Value of the payment",
                      "example" : 100,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitReference" : {
                      "description" : "The direct debit reference.",
                      "example" : "VODA-ABC453-1",
                      "type" : "string"
                    },
                    "directDebitUuid" : {
                      "description" : "The UUID for the direct debit payment",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "isDDIC" : {
                      "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateUUid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                      "type" : "string"
                    },
                    "originatorAlias" : {
                      "description" : "The Alias of the party who sets up the direct debit.",
                      "example" : "Three",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeRejectReason" : {
                      "description" : "Reason why rejected",
                      "example" : "eg. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeRejectReasonCode" : {
                      "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                      "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                      "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "The ican of your fire account that the money was taken from",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "targetPayeeId" : {
                      "description" : "The payee that was created when the DD was processed",
                      "example" : 12,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the direct debit.",
                      "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                      "example" : "FIRST_COLLECTION",
                      "type" : "string"
                    }
                  },
                  "title" : "directDebit",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "directDebits",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "c8902034-0a76-48ba-b8f7-a8c396f5cc8a",
    "name" : "Unblock a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/1230970745484181942/unblock",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c8902034-0a76-48ba-b8f7-a8c396f5cc8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.667686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "unblockCard"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "636bd9e4-3a38-4192-8d92-5f235c574c71",
    "name" : "List Card Transactions. - 403",
    "request" : {
      "urlPath" : "/v1/cards/609311426725143896/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "636bd9e4-3a38-4192-8d92-5f235c574c71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.667658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "c9da06da-7fa5-45cf-a18a-c7459ada3a6a",
    "name" : "List Card Transactions. - 401",
    "request" : {
      "urlPath" : "/v1/cards/4900374681652522007/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c9da06da-7fa5-45cf-a18a-c7459ada3a6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.667637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "8d8d84e2-5e1b-4e8c-a2ed-76ffadadccc5",
    "name" : "List Card Transactions. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards/2676826801318668790/transactions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 6743807176409101153,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-09-08T06:30:59.659Z\",\n      \"maskedPan\" : \"crd8gs0w716tgblbgupyi5h2r7wthvplxl01we41v2x2v133s3lb39tc7uly42v5mfub1xwi3gk7sa5wf6y\",\n      \"provider\" : \"aag9m4vnggm1784n8onuosqd3a4xcb5lt8bg8177haq80bbi46r0tklwb1cgjlyzj77aq2qz6zksz1redsnkxtxm5dcmyd2hkpvcpl\",\n      \"cardId\" : 3907218393068080081,\n      \"embossBusinessName\" : \"Candis Jerde\",\n      \"alias\" : \"34ati8ao7myv0bygqw0s1pudvl91h5tzrfqh\",\n      \"embossCardName\" : \"Rosamond McClure\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"6rv7bl5xdfj74a1d3fwzajqzt1zex6hpplh0dx8deimy9s68bsrdlbtiawpia0kbipv3fww0fekk7j1rq1jrv3820qg4zhrcaly4d3ihz6hy7rxuyw7945p63dhnnca23fkotucmyqev53gxagwfbdtoz\",\n        \"additionalDataDe124\" : \"ov0htfticezq3g3p8z2vl86fgfqp1720o1lbvbur59infi\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2023-01-09T09:30:41.660262Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"b0peca6434tf05rlui88jqdcbv1vippz1t1498b0mqjj3e4b8sh96q0uqwh94et2n1agiry0vj208l8vzaeuf5g3hy6lqsad9rkw53n7tw\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-12-28T17:35:11.66Z\",\n      \"maskedPan\" : \"ddjcfwvgc68u3qdqfbozrldixrkqg2cs623v5oi7zgtt72sbs5ppzn3nshsdj2y\",\n      \"provider\" : \"02lakf8hnbhwqok56l3f83b63ehbh8pb9e6muiwemgkqwkxwjesn3m1oqf5ffn1jk81mnqaenpl60yg51b593wfr6qx832xtlt0wqzsu7np44jeq1dsz2mg0iyhkoy5xbdcq72k9979wzjubi4yslb0\",\n      \"cardId\" : 5116507631935116432,\n      \"embossBusinessName\" : \"Lorette Rippin Sr.\",\n      \"alias\" : \"goqteq28sfi0xxqk2a733am9koitu4n3g270tsy3byrbajhjs9krhqmww1mj5cgatgtj4ve75reolzmw53ddqdc1tv6nv5ptom2xr8vvl5k4w5w67vmclrkt6nbtddxvk6cr6donch5m4ubtrqjaa5vr\",\n      \"embossCardName\" : \"Faustina Hackett\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-01-31T19:30:09.66Z\",\n      \"maskedPan\" : \"svq2wzaeyp7v2dag46nwfif3rsc9ml7j3z0fjgx2zbkhsmr625id3r8foz3yl0nr26x1yxhn007mux2dm0vup1ka2qe48226wdwlt2ukaorue\",\n      \"provider\" : \"zqw12r4hz363wpks0fng3vkgyarzpbyoc5e7cx4p7zrea8w3sq8ksgysmofzzkmyxdizxj8vnpc95on4fspmvf9lg75m4npkq25jr3rv81gpur3oihf0wvhslqln4ojr2fzp\",\n      \"cardId\" : 4363249251567608702,\n      \"embossBusinessName\" : \"Miss Hayden Durgan\",\n      \"alias\" : \"axs3s8\",\n      \"embossCardName\" : \"Miss Ellis Weber\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"a6gialfe53zv9ssqhyvtqnpqbwcj7tw0i328vg1zlrl1s39d4y9xxblhh0lvfqxls7xepev8dndchmj966tq33ueg1h9is451l\",\n        \"additionalDataDe124\" : \"xm4gatwtdq4qdcm1kobybp4cgq74gjmpxgkfj\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-09-19T12:16:41.660926Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"gc4uzq1q09ycuci66k9l495t8cfswf6cghrhxin12nm45u1kvfz20wmc2cha8spfi8tlggfhx6imujxigqaqvyhmxxwgwi83bgqdc4n32cud27o1yl6gt88kf6xqwl0nj2mbthh2gl\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-11T07:32:33.661Z\",\n      \"maskedPan\" : \"zq7uaimcdrlyl49c4emkqpsm4qaaeqee2ul97xw3hw22xdhqp4r6fv9j2s6rfdm72g2itkdq6s6ow3tkh6kbfzieknf4derzyud4x2gluahpaxcnvm5bjwcv694tnixv\",\n      \"provider\" : \"zyyl6tk1vnyia4sdgkk1ic4e7tw9w0bifbbtr1muxj1lhy7hg1zcafnk1u1555wwwr4wytsjtxdwyqf47lnrat4hwnwb0hjh71kxre4lsfg1rzv4b2kr2eqh5a9y8ciecl\",\n      \"cardId\" : 7015005515753193508,\n      \"embossBusinessName\" : \"Sylvester Deckow\",\n      \"alias\" : \"3hxwqngtvf3zylf9g22j8l8urftpaecnyew\",\n      \"embossCardName\" : \"Mr. Mauricio Bernier\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-17T13:00:54.661Z\",\n      \"maskedPan\" : \"50ffui2w\",\n      \"provider\" : \"e01eh0vodho0x142puij229u44i7punzb0gk5uqzuvcj8qwlpm9rwq3zna515qrtbwxmvij85ef1aupzbfp2gi45eft3eyfo00pb5qh3deqh03shgrq9w44y1zfui9fh1t45hvw0fb8oueu1fi4ft9o\",\n      \"cardId\" : 821518766584288815,\n      \"embossBusinessName\" : \"Miss Megan McClure\",\n      \"alias\" : \"z0u0lq8ibt3eyoguhbrnfq13jbyujgpcj3lk6kdhj5gqa2wxywmhg4zc2px8hqo2ojo9\",\n      \"embossCardName\" : \"Vera Paucek\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-04-03T04:54:13.661Z\",\n      \"maskedPan\" : \"6ppvpurmqnagpibi8y6806nzhed2ir270gjvt5fhwxa97t9vo6wgix5hdlwg9asdgm2saof0re1rokz3akyzg1x68u3097peg4mlhfck\",\n      \"provider\" : \"hb5lsu0ms0oqtlaxvs9vvfc9ftdqhu5baq0stvddzh\",\n      \"cardId\" : 8798763015909786232,\n      \"embossBusinessName\" : \"Neil Altenwerth\",\n      \"alias\" : \"mquuatk9h93q7pkvm3xxf1jie8unr9lkds9inww0kjntlk9hx3v2w6cgwyeiaxowa7judn8dkcj9h1afb7q6wpvdvewo04xl30160nsc24l\",\n      \"embossCardName\" : \"Elijah Armstrong\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 610907971897662848,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-03-18T07:06:59.661Z\",\n      \"maskedPan\" : \"y1fmuogkf11okc6ncq92ux58s2mrkcl7imktr5x6o2bmw93afk9sndrbc1r2wq4w614usudy5dl9xllsc056hnr\",\n      \"provider\" : \"g346ot039qtu4gvqvu8l85w6upoeg9qo8sbr0o79n4xpiqrt3jpf0brutmud0ajsty\",\n      \"cardId\" : 4928240399759618032,\n      \"embossBusinessName\" : \"Dr. Leonora Bartell\",\n      \"alias\" : \"vt8bnvkwz8r4uu5g492ylqpovpj6fdmqemfl5pfl7qvpf7nythzcua280awy1ict1mz83fzp\",\n      \"embossCardName\" : \"Nga Labadie\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 4338455571940514521,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-10-30T15:53:52.662Z\",\n      \"maskedPan\" : \"r3k4nexdrp031dovx1tc1vt5izcp\",\n      \"provider\" : \"pyfu5updii27rgfzp084spdp6m6vnjwwf9ntwl7vg27836fypwdmujnzb2sorvbosje97txd2372vimg3sbxy5p97jr4tk9m7nb2le9u0ub\",\n      \"cardId\" : 307795210558175979,\n      \"embossBusinessName\" : \"Manie Haag II\",\n      \"alias\" : \"18old7dm4uxvutcssfg0jsyuk8bf1\",\n      \"embossCardName\" : \"Bobbie Denesik\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-11T04:24:48.662Z\",\n      \"maskedPan\" : \"c64fbcg0lnsv37piy4ak2yo3bxe14cdx96c2sp07kfn5vbz6jiqakdgzgmcsfr4jauddwvs2t8ol37sjquo7\",\n      \"provider\" : \"bm8mh4k0lrgv9uj0uc95iadv4tq1szc6pscp1c683osysfs7csra5eodv7jhbyn55w8q82\",\n      \"cardId\" : 8283430622452180305,\n      \"embossBusinessName\" : \"Ralph Roob\",\n      \"alias\" : \"g659eu1e95yko5t6c5k1l\",\n      \"embossCardName\" : \"Stan Hahn\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-25T19:57:15.662Z\",\n      \"maskedPan\" : \"6s7ijmyd52l9n8sbgv37q8t54styo8pu6fgrejhqh0et3q7hby7p0sx4b09taw79kyl7grcgkw8stcc2xj2\",\n      \"provider\" : \"t87ijtm1qk9bqkcs3\",\n      \"cardId\" : 552916591932654661,\n      \"embossBusinessName\" : \"Virginia Rodriguez\",\n      \"alias\" : \"l0ye876vojndg38wl591ccmhet9ziy9tervqyxtyia6znu0js86zng27ctmldw0kxvwlbk7g6v5xrjzuvm0q4gb1zde04u849tgeoerxly6axci6607aubrd6tcwx5azrnotlx1028in3fch3sobzb8aepsytpxwi\",\n      \"embossCardName\" : \"Carmine Jacobson\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"f2dy8wuvr2lrh323g\",\n        \"additionalDataDe124\" : \"lqkm4o7o859eztn51clrmd9tssswa79l7aov3ws7haa4da6j90snjtnga1hcih0rh7d5lt4s0sg8rlp6zjwwi0avy3944a95wxfnl7cpzp485ekj3lrv8nu4eoxmb93u60kxznirswhana7etmghwdcwlpc10wkjpoe4xl3iqh\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-08-18T09:26:41.662822Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"bw10i3v7ejmgkh3heh1az0e2o3b0nzgc2xgfhkqh8jkdc9tc57ywj3twlgm1u3z3mxgtdblgd6gnnlqgsaa4x8wogy5o\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-13T12:27:34.662Z\",\n      \"maskedPan\" : \"yv9w0f41mn4wjiwz762u6sjbem0rp90jggcf8tbc7331765o68or28d0ddbx5wq0xfzfcgugg98pgy1rjdt8kyf71wb80btx64utkqr0177gi82v96olfysxcopj957te2yps1pczfbx0n6wc7ahg178qtboy6ltem7jog\",\n      \"provider\" : \"vrmtj6rzumxgxvfhcufc4oj91j59axgvachzzecd7dfenu2xhot1edi3khgoa3oxi5g4s3u\",\n      \"cardId\" : 4848499193947428497,\n      \"embossBusinessName\" : \"Lakendra Hayes\",\n      \"alias\" : \"35rkxn7rkgwi2s3qs95fgzani8g6ly63p0856yyshqzbv7jywv2wh\",\n      \"embossCardName\" : \"Reed Kling\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 6395528195910758077,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-12T22:22:56.663Z\",\n      \"maskedPan\" : \"607h3cfd1er4uf7hkvgtrcq6galffaspdc6dop7ilv12djwp4dfsuinprpzk30lfbtgcral75swb3t565dks6kbypm77j37ska5uk41s5r3h39lf0gnutzk4deixt5hfhr90f6zta\",\n      \"provider\" : \"rz7o8pz8zc8klb86gh2eadoy5hrdvvhmt15chresqz59591zd116ont6ol7h53xldknlfuq0mtsl9lp1ztf2dzdwh6a6av1c\",\n      \"cardId\" : 5012172561892216928,\n      \"embossBusinessName\" : \"Miss Twyla Powlowski\",\n      \"alias\" : \"ouoi6byjmt5asthco1ipaklit6dwk0z6s1ivbulbewh6db6sp5i\",\n      \"embossCardName\" : \"Candelaria Mills\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 1577226796757516443,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-10-10T20:46:15.663Z\",\n      \"maskedPan\" : \"vnmhtrgr2b\",\n      \"provider\" : \"wqbtwmiu0xs2p7fljt8mb384ghxqqc4dtt3bk94ndw0sa08pn9xnkbviuo0dwt\",\n      \"cardId\" : 2823869876897067023,\n      \"embossBusinessName\" : \"Marilynn Douglas II\",\n      \"alias\" : \"19m8qrj69pk36q1ibo66dgkst82cuagz5lgw9mvpr0ytbdmj9dpmia8429w27b9m5ct8eiofskdb2yrc48ur4hxx5hsehgijso2vpvw4ixs2\",\n      \"embossCardName\" : \"Richard McClure\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-09-30T05:02:55.663Z\",\n      \"maskedPan\" : \"5qtu5gqzmw0nrkwen45omlz2rdx433b2llhesotafdgt72gxkvtphqeqmvroa6u6663i6etghg6yfv68nndl7jzaahipg2zz1a28vbsbqfuws70lqvsl6xiy9xlvxvgy4jurl7f4h\",\n      \"provider\" : \"ypxa42adn3wdqvpbkxulyb88\",\n      \"cardId\" : 3588525873737556073,\n      \"embossBusinessName\" : \"Janet Predovic MD\",\n      \"alias\" : \"3g0uw0t9lvaikqujy6wxo70hu08nwold4fkrso8lh7yapchkq2v9j7t90hz3hycqwhd4ms4ylntv0jgbj0z11dg40tungndc0vkemkb8mr2mbedkij628kpu63\",\n      \"embossCardName\" : \"Lacy Medhurst\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-01-02T08:25:35.663Z\",\n      \"maskedPan\" : \"24efwl1vr2oxmr69fovlybfgoofjg953m3w4xt0734wo80le3r0718hsk0nmlpnwzap5v\",\n      \"provider\" : \"xvo2428vren69shg00ov9a1hd41vso4gq17cbna5hw1pdkoqnuzc\",\n      \"cardId\" : 901935353688538618,\n      \"embossBusinessName\" : \"Loreta Botsford\",\n      \"alias\" : \"v1tp4q5lb8unw2r2iyzhhfcz7363910kxa7uk5c5qttqrs2bmt27hqowgoeavx0xv53ytpara1ntnrrocls648owkoq6mhoeevkhri5afcjwtxwqxi9eee0cktj4si6wxgrfqlzv206a4hws33mab6kyjbtkqupxwnwn2\",\n      \"embossCardName\" : \"Sal Kilback\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-10-22T16:18:49.664Z\",\n      \"maskedPan\" : \"sx9ed0aviuwluuqr6v36u8grye3grt81yyf20kjbcf2thmpjb5ccdin3p9fz\",\n      \"provider\" : \"cv3exqqv0sprzv2u6pipp7kkiap2dy945fynkv2ummjn8sm6ojskuxhyionrhprelrgacqd05xqmvgvjw2r7muf29d05cuw8iyuqxvcf1gxkzyhmma41sokcbwe7mzw1ixq8uizlaf05pszuqg6nt565ol33cu25jvqfrj20sn4w5ga743htpevro56225kojoesx\",\n      \"cardId\" : 5507654299678241806,\n      \"embossBusinessName\" : \"Cristopher Hintz\",\n      \"alias\" : \"3049aih0qv49vq7dy8vvxr7r6prligsj6al3wz5xsmwh5tj6gx1y4xguxbliwtcj7f0tmn3nx5xdocklmed76k1kajne6setjqqedlpxyz4aib8kl07tnvwn4tgpvcy61zam\",\n      \"embossCardName\" : \"Mr. Laraine Hirthe\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 7013503122404534675,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-12-19T00:33:48.664Z\",\n      \"maskedPan\" : \"cl0mkgfhd3pbfbz7x7k8frs4cqmdja96p52tlkc9s55bgi93smm89h3aszl3hyrskzxfqctend30jtkgz1m6rfb2i1j0udzyxsst\",\n      \"provider\" : \"4vseketm4ze3k0zvbkrchz7g947b7xv0nxojuet8pisho8ia77w68mxnmkl73cna6uj7bda2o4r9cg4f6vuax7udbmaepmwr2i1804pxo\",\n      \"cardId\" : 4282941953080237963,\n      \"embossBusinessName\" : \"Jack Altenwerth\",\n      \"alias\" : \"c87axnbguh7afas69smah4kgj96ov0axhzelvr381okgh15ch89\",\n      \"embossCardName\" : \"Lucien Dickens\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"kzeoulok55kxh5sayfb2uxcoi2f4v35lly3zj02ypm2529kmgmen7x8637lyqw9xebs23df06soab4w3l1oqw8gmigubvpy87x62ajrrdlp9cxo24a3z1jdpc9z4\",\n        \"additionalDataDe124\" : \"m72bplaxal0t4o7amxr\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-09-10T08:24:41.664608Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"ucdcxxmb4hxtpbgmympzy3q7eec4k5t75e54zgwnvc7ydnooxkb0jhf0mibnqgb2ol7qvyeayvfbmul1d6m20nj7djmfihlfbu3oithpukj85d40sn8995qr7lj2v3ani15tkf53fo6ylvxn0d39kgb\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-09T01:14:25.664Z\",\n      \"maskedPan\" : \"9xznzm7i2ca5eqtyl6tpfixy4d3xnr7\",\n      \"provider\" : \"s0ywnz1g4r7q717jrx40rl5cdi3dd0fhzqvjvi1y6zzauszt2cfhchmqr25qtz0qjzxgd9jxaws2nnlq460fz31vmqymxoojc2yjvix50yvl7nhg16geex77s0ziyepo71cawyg3o6nsda3x94lxl8s37f3\",\n      \"cardId\" : 6696711004306411438,\n      \"embossBusinessName\" : \"Marcellus O'Kon\",\n      \"alias\" : \"hdiqmh2h42hjyc6wj7646g3k8yjwou4sxy5sles1qxj2pdgzmoqiinq46fbiie3x6cu0sciydz4w6vhol49ga4uqc5zlgucisjtw911m\",\n      \"embossCardName\" : \"Ms. Lanelle Nader\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 4383687406963359797,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-06-28T16:15:56.664Z\",\n      \"maskedPan\" : \"63y3vaypfb06539z8l2czl32tzl8f0cckg0oc5d16bnp7dg1zxonvkrqapxq64wkmn481hj3irxszpphypiiuez6ngyzc4p5d15nfaiv8flvhqaweaoek4bm6hzxbl2ngxwdelkbya8pdqi5hr9a5sbdhk4lddt5v\",\n      \"provider\" : \"x7nwrfkaoaz8xh5o2ld2tmd4sfvf2adcuc6zzvz\",\n      \"cardId\" : 3551603798860465394,\n      \"embossBusinessName\" : \"Dr. Sammie Green\",\n      \"alias\" : \"cgdud9jspg6s3k4n\",\n      \"embossCardName\" : \"Ardith Borer\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"9rld5h9odldc01ocoafxviprfmjz1fhjbzgkyuwzbub8s5db4mb83svizrq1bwx6uoyrt5bwbqtcu93mi6plq8sybos9dllm94dbpbec0h8yenp07m9wsa77a6tp0h0\",\n        \"additionalDataDe124\" : \"e8ga5wbn6y8er66ksl8dq1nofydaqwc93dmvsmho72cwvv4j7mzketnh2ca94yp6ge6yuu1dov3agjij2st3w2nset0mo9s7jrb7rdqfwd1ypbke25inukcxfpyz22xbkkfmsujdwc1u1pkxi3sulmcuyc9ungmfsps376h1v8o56gs3\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-03-18T09:01:41.665214Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"0lstq\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-18T16:26:57.665Z\",\n      \"maskedPan\" : \"dp8z95l02xvcmkcy7sp83mun5m4cgv2bd7qggapwtmebf85kmtacvcq5c0e7nh0a7hrgzxylcmh59yzl6oyycpx78k7aohgiptxc8q3pq7pcv8v5m8n1bqmdqmfishpb55b0hhd2tovj10l4jp2qfj1aqujdiasdg4\",\n      \"provider\" : \"7xrim7rir55l0a5ft6xmfl6xmrbaftmc9hi6i684ubmgrnzc08cez5twj934r1b9px5srf2lkt0cxv79u2hibksls0sho10gz71a366mx7osi1y74pqccran9m5famtuiki2lmvjs1a9ap7qhxxqkh73npt0tjbyjccjd3lv2vygxc6tyaq3g\",\n      \"cardId\" : 8439534960978479831,\n      \"embossBusinessName\" : \"Rosaura Ferry IV\",\n      \"alias\" : \"wnrkb9sny1o2e8xf165p3qzrdth9okdfql9x9haj34tf9k98hv5i3hpo1n4dyb5r54gm7t1malqx6mmcflao5u9xsm9rj9ghzdibqt7zzelk26cc3yex7qs3blicx73t7krgn1mvti8h7akceobcv1sidqd9jsdmrlpu8eampswiyllw\",\n      \"embossCardName\" : \"Ian Bernhard\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-03-31T18:40:48.665Z\",\n      \"maskedPan\" : \"m3vhxsnm5slu6qotrchkafqunm4zmd6cwde0mjnngzhsd5\",\n      \"provider\" : \"plqobofrhq\",\n      \"cardId\" : 3701135054608240791,\n      \"embossBusinessName\" : \"Mrs. Riley Wiegand\",\n      \"alias\" : \"xrf1lg9cpdf6kaj1njd9xruwoqeampsuyes8id1tvwqhzaf3orlw1rapyk0zpzlvzmwujabcx480kvvsy16r7ts7ahc2zo54k4f8bqlksjmzposrai7ffcr3xa9bxmbysecsw\",\n      \"embossCardName\" : \"Ms. Devon Vandervort\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"naslcte2xz9ptdha1phowhplzdiyv7n\",\n        \"additionalDataDe124\" : \"rttn3hyambcwsmfi7\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-03-20T10:16:41.665809Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"4q6s4z8q2w1v5n4gjtrzpgic23m3m2fmw88vb3s1u3i\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-09-15T11:26:55.665Z\",\n      \"maskedPan\" : \"x0cqa6deu4bk8nze6j\",\n      \"provider\" : \"4fznndz37au7wy3pmb6d6eicsewz9hikrd6hqz9uuqwaniatx1coesqu9z0vwehl23fq7lkthgy9esbbwxb81c6m3flen2xw3u5niomft3k7fojx5v3q0emk8a1afezugk9bejea5nj3v5u0j6x13se8oorxopxfwmluc33goguupw0gu4htlzi6x\",\n      \"cardId\" : 4889329478258198171,\n      \"embossBusinessName\" : \"Noelle Yundt IV\",\n      \"alias\" : \"aymyze7q1q3kfq2epo5gyawz29yp8k5mtvb2knyjrp55wvg0yfnjruk8mct86edltp2lvnofnwz2pwaqyn54titon1amxi6eyhw1c9tihs05nnlb2p7j2nf145sad76o\",\n      \"embossCardName\" : \"Ms. Malka Mills\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d8d84e2-5e1b-4e8c-a2ed-76ffadadccc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.667526Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions",
          "schema" : {
            "items" : {
              "properties" : {
                "dateRangeTo" : {
                  "description" : "milisecond timestamp of date range to value.",
                  "example" : 1547744156603,
                  "type" : "integer"
                },
                "total" : {
                  "description" : "The total number of card transactions in the list.",
                  "example" : 1,
                  "type" : "integer"
                },
                "transactions" : {
                  "items" : {
                    "properties" : {
                      "amountAfterCharges" : {
                        "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "amountBeforeCharges" : {
                        "description" : "Amount of the transaction before the fees and taxes were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "balance" : {
                        "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                        "example" : 8500,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "batchItemDetails" : {
                        "description" : "Details of the batch run if this transaction was part of a batch.",
                        "properties" : {
                          "batchItemPublicUuid" : {
                            "description" : "The UUID for this item in the batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "batchName" : {
                            "description" : "The optional name given to the batch at creation time.",
                            "example" : "Payroll 2022-11",
                            "type" : "string"
                          },
                          "batchPublicUuid" : {
                            "description" : "The UUID for this batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "jobNumber" : {
                            "description" : "The optional job number given to the batch to link it to your own system.",
                            "example" : "2018-01-PR",
                            "type" : "string"
                          }
                        },
                        "title" : "batchItemDetails",
                        "type" : "object"
                      },
                      "card" : {
                        "description" : "Details of the card used (if applicable)",
                        "properties" : {
                          "alias" : {
                            "type" : "string"
                          },
                          "cardId" : {
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "embossBusinessName" : {
                            "type" : "string"
                          },
                          "embossCardName" : {
                            "type" : "string"
                          },
                          "expiryDate" : {
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "maskedPan" : {
                            "type" : "string"
                          },
                          "provider" : {
                            "type" : "string"
                          }
                        },
                        "title" : "relatedCard",
                        "type" : "object"
                      },
                      "currency" : {
                        "description" : "The currency.",
                        "properties" : {
                          "code" : {
                            "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                            "enum" : [ "EUR", "GBP" ],
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "The name of the currency",
                            "example" : "Euro",
                            "type" : "string"
                          }
                        },
                        "title" : "currency",
                        "type" : "object"
                      },
                      "date" : {
                        "description" : "Date of the transaction",
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "dateAcknowledged" : {
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "directDebitDetails" : {
                        "description" : "Details of the direct debit (if applicable)",
                        "properties" : {
                          "directDebitReference" : {
                            "description" : "The direct debit reference.",
                            "example" : "VODA-ABC453-1",
                            "type" : "string"
                          },
                          "directDebitUuid" : {
                            "description" : "The UUID for the direct debit payment",
                            "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                            "type" : "string"
                          },
                          "mandateReference" : {
                            "description" : "the reference of the mandate",
                            "example" : "CRZ-102190123",
                            "type" : "string"
                          },
                          "mandateUUid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                            "type" : "string"
                          },
                          "mandateUuid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                            "type" : "string"
                          },
                          "originatorAlias" : {
                            "description" : "The Alias of the party who sets up the direct debit.",
                            "example" : "Three",
                            "type" : "string"
                          },
                          "originatorLogoUrlLarge" : {
                            "description" : "URL pointing to a large version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorLogoUrlSmall" : {
                            "description" : "URL pointing to a small version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorName" : {
                            "description" : "The creator of the party who sets up the direct debit.",
                            "example" : "Vodafone PLC",
                            "type" : "string"
                          },
                          "originatorReference" : {
                            "description" : "Set by party who sets up the direct debit.",
                            "example" : "VODA-123456",
                            "type" : "string"
                          }
                        },
                        "title" : "directDebitDetails",
                        "type" : "object"
                      },
                      "eventUuid" : {
                        "description" : "An internal Fire reference for the transaction (UUID)",
                        "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                        "type" : "string"
                      },
                      "feeAmount" : {
                        "description" : "The amount of the fee, if any.",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "fxTradeDetails" : {
                        "description" : "Details of the FX trade (if applicable)",
                        "properties" : {
                          "buyAmount" : {
                            "description" : "amount of buyCurrency being bought",
                            "example" : 359,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "buyCurrency" : {
                            "description" : "currency which is being bought",
                            "example" : "GBP",
                            "type" : "string"
                          },
                          "fixedSide" : {
                            "description" : "type of trade - BUY or SELL",
                            "example" : "SELL",
                            "type" : "string"
                          },
                          "provider" : {
                            "description" : "The FX provider used to make the trade.",
                            "example" : "TCC",
                            "type" : "string"
                          },
                          "rate4d" : {
                            "description" : "exchange rate",
                            "example" : 7180,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellAmount" : {
                            "description" : "amount of sellCurrency being sold",
                            "example" : 500,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellCurrency" : {
                            "description" : "currency which is being sold",
                            "example" : "EUR",
                            "type" : "string"
                          }
                        },
                        "title" : "fxTrade",
                        "type" : "object"
                      },
                      "ican" : {
                        "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                        "example" : 1951,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "myRef" : {
                        "description" : "The comment/reference on the transaction",
                        "example" : "Transfer to main account",
                        "type" : "string"
                      },
                      "paymentRequestPublicCode" : {
                        "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                        "example" : "1abcdefg",
                        "type" : "string"
                      },
                      "proprietarySchemeDetails" : {
                        "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                        "items" : {
                          "properties" : {
                            "data" : {
                              "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                              "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                              "type" : "string"
                            },
                            "type" : {
                              "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                              "example" : "SCT",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "title" : "proprietarySchemeDetails",
                        "type" : "array"
                      },
                      "refId" : {
                        "description" : "The id of the transaction.",
                        "example" : 26774,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "relatedParty" : {
                        "description" : "Details of the related third party involved in the transaction.",
                        "oneOf" : [ {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "identifier for the fire.com account (assigned by fire.com)",
                                  "example" : 42,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "FIRE_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyFireAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "EXTERNAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyExternalAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "The account number of the Withdrawl account in reference",
                                  "example" : "00000000",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "The Alias name of the Withdrawl account in reference",
                                  "example" : "Smyth and Co.",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "IE76CPAY99119900000000",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "The ID number of the Withdrawl account in reference",
                                  "example" : 123,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                  "example" : "991199",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyPayee",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "cardMerchant" : {
                              "properties" : {
                                "acquirerIdDe32" : {
                                  "example" : 6011329,
                                  "type" : "string"
                                },
                                "additionalAmtDe54" : {
                                  "type" : "string"
                                },
                                "additionalDataDe124" : {
                                  "type" : "string"
                                },
                                "additionalDataDe48" : {
                                  "example" : "010X610500000",
                                  "type" : "string"
                                },
                                "authCodeDe38" : {
                                  "example" : "177449",
                                  "type" : "string"
                                },
                                "authorisedByGps" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "avsResult" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "billAmt" : {
                                  "example" : -1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "billCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "expiryDate" : {
                                  "type" : "string"
                                },
                                "mccCode" : {
                                  "example" : "5521",
                                  "type" : "string"
                                },
                                "merchIdDe42" : {
                                  "example" : 13152429,
                                  "type" : "string"
                                },
                                "merchNameDe43" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "mtId" : {
                                  "example" : "0100",
                                  "type" : "string"
                                },
                                "posDataDe22" : {
                                  "example" : "051",
                                  "type" : "string"
                                },
                                "posDataDe61" : {
                                  "example" : 1000030037299999,
                                  "type" : "string"
                                },
                                "posTermnlDe41" : {
                                  "example" : "80266721",
                                  "type" : "string"
                                },
                                "procCode" : {
                                  "example" : "000000",
                                  "type" : "string"
                                },
                                "recordDataDe120" : {
                                  "type" : "string"
                                },
                                "respCodeDe39" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "retRefNoDe37" : {
                                  "example" : 10900006720,
                                  "type" : "string"
                                },
                                "statusCode" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "token" : {
                                  "example" : "976307363",
                                  "type" : "string"
                                },
                                "txnAmt4d" : {
                                  "example" : 1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "txnCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "txnCtry" : {
                                  "example" : "IRL",
                                  "type" : "string"
                                },
                                "txnDesc" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "txnStatCode" : {
                                  "example" : "A",
                                  "type" : "string"
                                },
                                "txnType" : {
                                  "example" : "A",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyCardPayment",
                          "type" : "object"
                        } ],
                        "title" : "relatedParty"
                      },
                      "taxAmount" : {
                        "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "txnId" : {
                        "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                        "example" : 30157,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "type" : {
                        "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                        "example" : "WITHDRAWAL",
                        "type" : "string"
                      },
                      "yourRef" : {
                        "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                        "example" : "From John Smith",
                        "type" : "string"
                      }
                    },
                    "title" : "transaction",
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "title" : "cardTransactionsv1",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "16b6a5ba-6d76-46fa-a8f3-254651d4c904",
    "name" : "Block a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/2273612768638933184/block",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "16b6a5ba-6d76-46fa-a8f3-254651d4c904",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.659732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "blockCard"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "1b62297f-3f88-436a-9ff4-a6059902c388",
    "name" : "Create a new debit card.",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n  \"maskedPan\" : \"537455******1111\",\n  \"cardId\" : 51,\n  \"status\" : \"CREATED_ACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b62297f-3f88-436a-9ff4-a6059902c388",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.659702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createNewCard",
          "schema" : {
            "properties" : {
              "cardId" : {
                "example" : 51,
                "format" : "int64",
                "type" : "integer"
              },
              "expiryDate" : {
                "example" : "2019-01-31T00:00:00.000Z",
                "format" : "date-time",
                "type" : "string"
              },
              "maskedPan" : {
                "example" : "537455******1111",
                "type" : "string"
              },
              "status" : {
                "enum" : [ "CREATED_ACTIVE", "CREATED_INACTIVE" ],
                "example" : "CREATED_ACTIVE",
                "type" : "string"
              }
            },
            "title" : "newCardResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "959d638d-5404-4e03-a5ca-80117d08582e",
    "name" : "View List of Cards. - 403",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "959d638d-5404-4e03-a5ca-80117d08582e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.659624Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "9706964f-6eee-44be-b172-538209ff276b",
    "name" : "View List of Cards. - 401",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "9706964f-6eee-44be-b172-538209ff276b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.659609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "c041b5f6-8bbb-4834-ac22-017d3ad4ad59",
    "name" : "View List of Cards. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cards\" : [ {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c041b5f6-8bbb-4834-ac22-017d3ad4ad59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.659578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards",
          "schema" : {
            "properties" : {
              "cards" : {
                "items" : {
                  "properties" : {
                    "blocked" : {
                      "description" : "Whether the card is blocked or not",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "cardId" : {
                      "description" : "card id assigned by fire.com",
                      "example" : 51,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "dateCreated" : {
                      "description" : "The date-time the card was created",
                      "example" : "2017-01-19T16:38:15.803Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "emailAddress" : {
                      "description" : "card user email address",
                      "example" : "user@example.com",
                      "type" : "string"
                    },
                    "eurIcan" : {
                      "description" : "identifier for the eur fire.com account (assigned by fire.com)",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "expiryDate" : {
                      "description" : "card expiry date",
                      "example" : "2019-01-31T00:00:00.000Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "firstName" : {
                      "description" : "card user first name",
                      "example" : "John",
                      "type" : "string"
                    },
                    "gbpIcan" : {
                      "description" : "identifier for the gbp fire.com account (assigned by fire.com)",
                      "example" : 2152,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastName" : {
                      "description" : "card user last name",
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "maskedPan" : {
                      "description" : "card number (masked)",
                      "example" : "537455******1111",
                      "type" : "string"
                    },
                    "provider" : {
                      "description" : "card provider",
                      "enum" : [ "MASTERCARD" ],
                      "example" : "MASTERCARD",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "card status",
                      "enum" : [ "LIVE", "CREATED_ACTIVE", "CREATED_INACTIVE", "DEACTIVATED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    },
                    "statusReason" : {
                      "description" : "reason for card status",
                      "enum" : [ "LOST_CARD", "STOLEN_CARD", "CARD_DESTROYED" ],
                      "example" : "LOST_CARD",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "card user id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "card",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cards",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "8e60439e-a38f-44cc-9f0a-8e09ef0c55e8",
    "name" : "Remove a Payment from the Batch (Internal Transfer) - 200",
    "request" : {
      "urlPath" : "/v1/batches/aa62c380-808a-3f98-ba98-ed553be6d7c7/internaltransfers/085bab2e-bd36-3159-88ba-f6484b846047",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8e60439e-a38f-44cc-9f0a-8e09ef0c55e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.659315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteInternalTransferBatchPayment"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f9d66da2-caa7-41c4-88ba-3a2600d539c7",
    "name" : "Add an internal transfer payment to the batch",
    "request" : {
      "urlPath" : "/v1/batches/bc876efc-dddc-349e-a650-3782d07bc9e6/internaltransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9d66da2-caa7-41c4-88ba-3a2600d539c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.659261Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addInternalTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "e48f3a2f-3d67-4cfc-b8ab-8d3d71f67e13",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/41cd0960-524a-34c8-8192-1a6e536639c9/internaltransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e48f3a2f-3d67-4cfc-b8ab-8d3d71f67e13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.65919Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchInternalTrasnfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "c07a27b6-de91-489f-a577-f3ab337e9ff4",
    "name" : "Remove a Payment from the Batch (Bank Transfers) - 200",
    "request" : {
      "urlPath" : "/v1/batches/bcbf6bbb-4aac-3425-8644-0f0f9b91646f/banktransfers/80b2d8a2-c1b1-3630-98d2-714a6266f73c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c07a27b6-de91-489f-a577-f3ab337e9ff4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.658883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteBankTransferBatchPayment"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "2f76b3fe-5124-444c-b73b-c7a1090d25de",
    "name" : "Add a bank transfer payment to the batch.",
    "request" : {
      "urlPath" : "/v1/batches/74f90521-7082-3c0b-b266-4a7dabd5aed5/banktransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f76b3fe-5124-444c-b73b-c7a1090d25de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.658826Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addBankTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "36f1395f-acca-457c-9820-a307aae4fc2e",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/1707d457-462f-38b8-80f4-4015fe8c3a8c/banktransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36f1395f-acca-457c-9820-a307aae4fc2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.658753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchBankTransfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "62f2ec93-65d3-4ce1-82db-56ea9258599a",
    "name" : "List Approvers for a Batch",
    "request" : {
      "urlPath" : "/v1/batches/125b0162-c4df-3b6b-9110-9d0bd3c48c74/approvals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approvals\" : [ {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62f2ec93-65d3-4ce1-82db-56ea9258599a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.658371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofApproversForBatch",
          "schema" : {
            "properties" : {
              "approvals" : {
                "items" : {
                  "properties" : {
                    "emailAddress" : {
                      "description" : "User email address",
                      "example" : "jane.doe@example.com",
                      "type" : "string"
                    },
                    "firstName" : {
                      "example" : "Jane",
                      "type" : "string"
                    },
                    "lastName" : {
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mobileNumber" : {
                      "example" : 353871234567,
                      "type" : "string"
                    },
                    "status" : {
                      "example" : "PENDING_APPROVAL",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "User id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "batchApprovers",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "4fbf8be9-fb43-4eca-ab68-2ba6803de99f",
    "name" : "Submit a batch for approval - 204",
    "request" : {
      "urlPath" : "/v1/batches/ba1b5868-4355-31eb-a356-565b04f390ef",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4fbf8be9-fb43-4eca-ab68-2ba6803de99f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.658139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "submitBatch"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "e71c72e5-1274-4bcf-93d6-07df0d7f0a13",
    "name" : "Get details of a single Batch",
    "request" : {
      "urlPath" : "/v1/batches/d99f53a3-57b6-3a6e-a21e-577d682cddc7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchName\" : \"January 2018 Payroll\",\n  \"valueOfItemsSubmitted\" : 10000,\n  \"numberOfItemsFailed\" : 0,\n  \"numberOfItemsSucceeded\" : 1,\n  \"type\" : \"BANK_TRANSFER\",\n  \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n  \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n  \"numberOfItemsSubmitted\" : 1,\n  \"callbackUrl\" : \"https://my.webserver.com/cb/payroll\",\n  \"currency\" : \"EUR\",\n  \"sourceName\" : \"Payment API\",\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n  \"jobNumber\" : \"2018-01-PR\",\n  \"valueOfItemsSucceeded\" : 10000,\n  \"status\" : \"COMPLETE\",\n  \"valueOfItemsFailed\" : 0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e71c72e5-1274-4bcf-93d6-07df0d7f0a13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.658092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDetailsSingleBatch",
          "schema" : {
            "properties" : {
              "batchName" : {
                "description" : "An optional name you give to the batch at creation time",
                "example" : "January 2018 Payroll",
                "type" : "string"
              },
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              },
              "callbackUrl" : {
                "description" : "An optional POST URL that all events for this batch will be sent to.",
                "example" : "https://my.webserver.com/cb/payroll",
                "type" : "string"
              },
              "currency" : {
                "description" : "All payments in the batch must be the same currency - either EUR or GBP",
                "example" : "EUR",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "jobNumber" : {
                "description" : "An optional job number you can give to the batch to help link it to your own system.",
                "example" : "2018-01-PR",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "numberOfItemsFailed" : {
                "description" : "Once processed, a count of the number of items that didn’t process successfully.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSubmitted" : {
                "description" : "A count of the number of items in the batch",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSucceeded" : {
                "description" : "Once processed, a count of the number of items that processed successfully.",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "sourceName" : {
                "description" : "A string describing where the batch originated - for instance the name of the API token that was used, or showing that the batch was automatically created by fire.com (in the case of a new payee batch).",
                "example" : "Payment API",
                "type" : "string"
              },
              "status" : {
                "description" : "status of the batch object",
                "enum" : [ "PENDING_APPROVAL", "REJECTED", "COMPLETE", "OPEN", "CANCELLED", "PENDING_PARENT_BATCH_APPROVAL", "READY_FOR_PROCESSING", "PROCESSING" ],
                "example" : "COMPLETE",
                "type" : "string"
              },
              "type" : {
                "description" : "The type of the batch - can be one of the listed 3",
                "enum" : [ "INTERNAL_TRANSFER", "BANK_TRANSFER", "NEW_PAYEE" ],
                "type" : "string"
              },
              "valueOfItemsFailed" : {
                "description" : "Once processed, a sum of the value of items that didn’t process successfully. Specified in pence or cent.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSubmitted" : {
                "description" : "A sum of the value of items in the batch. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSucceeded" : {
                "description" : "Once processed, a sum of the value of items that processed successfully. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batch",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "bdaff041-ff88-4aba-9994-4706264b9398",
    "name" : "Cancel a batch - 200",
    "request" : {
      "urlPath" : "/v1/batches/a9992d97-1aa6-3d0e-a789-4a2bccf6f967",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bdaff041-ff88-4aba-9994-4706264b9398",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.657823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelBatchPayment"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "1449ca38-a0a8-467f-b50c-02fcddd3210f",
    "name" : "Create a new batch of payments",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1449ca38-a0a8-467f-b50c-02fcddd3210f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.657751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createBatchPayment",
          "schema" : {
            "properties" : {
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              }
            },
            "title" : "newBatchResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "001d2991-8b6e-451d-af02-eba319ac7855",
    "name" : "List batches",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "001d2991-8b6e-451d-af02-eba319ac7855",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.657695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBatches",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "f4cef4cd-c5c3-4665-a70a-4330d4072dfc",
    "name" : "Get list of ASPSPs / Banks",
    "request" : {
      "urlPath" : "/v1/aspsps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 10,\n  \"aspsps\" : [ {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4cef4cd-c5c3-4665-a70a-4330d4072dfc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.657395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListOfAspsps",
          "schema" : {
            "properties" : {
              "aspsps" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the ASPSP / bank.",
                      "example" : "Demo Bank",
                      "type" : "string"
                    },
                    "aspspUuid" : {
                      "description" : "The UUID associated with the ASPSP / bank.",
                      "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                      "type" : "string"
                    },
                    "country" : {
                      "properties" : {
                        "code" : {
                          "description" : "The 2-letter code for the country - e.g. `IE`, `GP`...",
                          "example" : "GB",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the country",
                          "example" : "United Kingdom",
                          "type" : "string"
                        }
                      },
                      "title" : "country",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the ASPSP / bank was created.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The date the ASPSP / bank was last updated.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "logoUrl" : {
                      "description" : "A link to the ASPSP / bank's logo in SVG format.",
                      "example" : "https://assets.fire.com/pisp/demo.svg",
                      "type" : "string"
                    }
                  },
                  "title" : "aspsp",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of ASPSPs in the list.",
                "example" : 10,
                "type" : "integer"
              }
            },
            "title" : "aspsps",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "5f1ca7b2-fca6-4dea-8bd8-d80b2b345404",
    "name" : "Authenticate with the API.",
    "request" : {
      "urlPath" : "/v1/apps/accesstokens",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiApplicationId\" : 433,\n  \"permissions\" : [ \"PERM_BUSINESSES_GET_ACCOUNTS\", \"PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS\" ],\n  \"businessId\" : 248,\n  \"expiry\" : \"2020-10-22T07:48:56.460Z\",\n  \"accessToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f1ca7b2-fca6-4dea-8bd8-d80b2b345404",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.657025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "authenticate",
          "schema" : {
            "properties" : {
              "accessToken" : {
                "description" : "The App Bearer Access Token you can use in further API calls.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "apiApplicationId" : {
                "description" : "The ID of the application you are using.",
                "example" : 433,
                "format" : "int64",
                "type" : "integer"
              },
              "businessId" : {
                "description" : "The business ID for the business.",
                "example" : 248,
                "format" : "int64",
                "type" : "integer"
              },
              "expiry" : {
                "description" : "The expiry date and time for this token (ISO-8601).",
                "example" : "2020-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "permissions" : {
                "description" : "The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.",
                "example" : [ "PERM_BUSINESSES_GET_ACCOUNTS", "PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS" ],
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "title" : "accessToken",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "c30674f1-c806-4442-b04e-8e821cb0c9b2",
    "name" : "Create a new API Application",
    "request" : {
      "urlPath" : "/v1/apps",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clientId\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"numberOfPayeeApprovalsRequired\" : 1,\n  \"clientKey\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"ican\" : 4503960173629950246,\n  \"expiry\" : \"2019-08-22T07:48:56.460Z\",\n  \"applicationId\" : 45345,\n  \"numberOfPaymentApprovalsRequired\" : 1,\n  \"enabled\" : true,\n  \"refreshToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c30674f1-c806-4442-b04e-8e821cb0c9b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.656913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createApiApplication",
          "schema" : {
            "properties" : {
              "applicationId" : {
                "description" : "The ID of the API Application",
                "example" : 45345,
                "format" : "int64",
                "type" : "integer"
              },
              "clientId" : {
                "description" : "The Client ID of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "clientKey" : {
                "description" : "The Client Key of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Whether or not this API Application can be used",
                "example" : true,
                "type" : "boolean"
              },
              "expiry" : {
                "description" : "The date that this API Application can no longer be used.",
                "example" : "2019-08-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "ican" : {
                "description" : "The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.",
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfPayeeApprovalsRequired" : {
                "description" : "Number of approvals required to create a payee in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "numberOfPaymentApprovalsRequired" : {
                "description" : "Number of approvals required to process a payment in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "refreshToken" : {
                "description" : "The Refresh Token of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              }
            },
            "title" : "apiApplication",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "b1f9650b-7f00-4bd7-882e-fe791dcdc673",
    "name" : "Filtered list of transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/8489835663636270799/transactions/filter",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4263636442534123034"
        },
        "transactionTypes" : {
          "equalTo" : "a50cbivhhrj7tl52ww9ad7wurvsnd1ev5izkdybf9i7x1c50mkpxahaftm89rjyckf1y2z0b2byia9qe7nx4npssew0rr4yyvtlmpcr5ccpumviea5r"
        },
        "dateRangeTo" : {
          "equalTo" : "4717727019195439582"
        },
        "searchKeyword" : {
          "equalTo" : "yys"
        },
        "dateRangeFrom" : {
          "equalTo" : "6696267083049226638"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-02-13T15:34:58.654Z\",\n      \"maskedPan\" : \"6lufj55763zogdlfapwslzmhg6ydaky4249w9bf35b8yw59rthvi1wsf72c0wi7clzsdfdmbpgsr6hsfa\",\n      \"provider\" : \"u548tboyy2twt7pga6snijkslxa7i8f8i1asryasph7mg979ahn8zeovvjwtz4m4823jxqy5gevmwf7r2i4xbgh369mxr0i9j940rkkp0abbdzvluzn7\",\n      \"cardId\" : 7301518534406450950,\n      \"embossBusinessName\" : \"Karma O'Reilly\",\n      \"alias\" : \"vd13iopwq6d83qjb0xv02bjyuhko170z2dpb2m8r95wt64mi34c22nelspwrp9jtb3px4osfxabavvu819zdu0zvnnsrhh\",\n      \"embossCardName\" : \"Crissy Renner\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-12-24T12:08:40.655Z\",\n      \"maskedPan\" : \"e42wk7qcnaf7zddh9pubyic86g2salubrmr743eceuphn8vsfrg80ncnmg2uaevtpwd7gssno78bf14iizmlr9gnuwgt1pexgse6vr\",\n      \"provider\" : \"0ctf6x9981kod87ehelxefjymrlbuv7vowyi3s6bn267k3y257iw6djfb1z4o8ypdlcejyegyh4rma6\",\n      \"cardId\" : 4193329439068908153,\n      \"embossBusinessName\" : \"Amparo Pfannerstill\",\n      \"alias\" : \"x46p57fiuzf2am42teb60gzomrbj25ik28wpegqs81377dyuoors9494bcm4r1vggdk2s8c6b4imrg2nedbmy6zp3ay2lopjfz\",\n      \"embossCardName\" : \"Jake Feeney\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"7rit0kaa57sqzkbdmgjp6kkxllaenk23moxt9xjnfx4d06jrhjb1a8je94ll9i729du2bl4dmzuhgxko9aug\",\n        \"additionalDataDe124\" : \"yjvkk8s42w3w31j6d5av5hldxzucfdpmuhltoq\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-11-26T11:02:41.655251Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"oa4p7f2enheo70epqs29zbr4dwignzajt9joj8f3zzzk2kpw00ejxhnt3fiozgb\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-01T05:00:29.655Z\",\n      \"maskedPan\" : \"06j0pm5shkvamafnn5dc0l8yo9hliaow06mueo0d4v19bofzxdcf9bxb9lk74zyfgaz4wnafs5y3\",\n      \"provider\" : \"4lk9n6wse09f1kxj6ijnmid6atzlwq0am344flfri5eszfkic94dtcmng5glpn7sdmvda2ngjujom3g809exx0ytlhlqrgirceo7sj1vyejmt5f9v002lreim4xr7g2j8hsf4t7oye3rn1g1x2fejpkfmb209s5s4pbsoc\",\n      \"cardId\" : 1866774416447219486,\n      \"embossBusinessName\" : \"Luis Jacobi Sr.\",\n      \"alias\" : \"mcyqwa886544sc9bulybn4c7k0dt1ji83iqohjmgt2mvtba8oy5pj3z8q4g7kpfdae56djr553bqnrqzwgh80ylybfel287e16vww7xzw85z1v5zfaetjv00wjt1lylz1og63qhtw5bwk0ud554hi1mb51354ab\",\n      \"embossCardName\" : \"Ms. Demetra Wisoky\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1f9650b-7f00-4bd7-882e-fe791dcdc673",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.656717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsFilteredById",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "09e19b44-5230-4e42-85ad-7f38ba24e56e",
    "name" : "List transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/3077585380739538811/transactions",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "406090461881766586"
        },
        "limit" : {
          "equalTo" : "7639793523394161414"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-06-20T22:28:20.652Z\",\n      \"maskedPan\" : \"if4rojwg2w0t3h6nwy28pm30nloyzwujchr1linhepb7l69gsgmurunwou6okicago5sgocgxzmf1xeii1rjznyrbs6mw5957wmvn3q8sxl4vcprkhpabf01rmsolg89h2ec0\",\n      \"provider\" : \"eszj867e7u049gn1uwbr58m0oll0x6iupgn4f5ggv9yqls886z4hhzjhvgh39qx4b6dwabqsulurzsmzybgjtujanyrjxvnwa0l2bdt3glqj6c71y3lyvoisc1egdwi6050vnbxt69qvbxxnfhzlbfgv77zf8e1mg4lh\",\n      \"cardId\" : 5194034871688487876,\n      \"embossBusinessName\" : \"Dr. Tawana Balistreri\",\n      \"alias\" : \"vpjy159s9uy22otptb04w0jespwocm1glhh1m9s59z1odeufzhq6g3w69vpb6agup7hvqlrv844xv57zykqktduofj7spmhgz3dnsaef6svip7h9sffr66qae0wmmu4ai\",\n      \"embossCardName\" : \"Francisco Brown\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-19T06:09:03.653Z\",\n      \"maskedPan\" : \"g1f46ct54qmhr0xb6qfimovesdpuax9l1yjebc4etaehblodvrtgsgk6wdiqejwxvc4hz1rhdf9yc005gruwokr41lcl1p3hzmrv4wjbo2j8itqm094e7u1ovofz7mpx11wlqn3uhrzy5t6lkt\",\n      \"provider\" : \"fkjheg803tazfg73xai0usjoz4bl22v7ity3vye7vskdgf1gifziw84kryp8kvqgzu6ygx7wqvgmbfbagl67125bp4vno3zu2vidq3iu7s5tzs0cp1fy5yo2kw8mwrygb7uagvwiccj90bdcjnnhi5zovutm06aj6fm0uyh8b6b4vvi6gyxzjq2azs8xjw467f6z1m\",\n      \"cardId\" : 8129540540339187282,\n      \"embossBusinessName\" : \"Stephania Wyman\",\n      \"alias\" : \"n0v7qymqxn8u42i0vk7al6dqwb4gv8uzy1000s73kcfyx05eab8s7or1a2pi71ervu1pv6fuxarkzqdd5f22zvep40hdlq2oliundsa2p1t0bu44d8ze9pxjb51vrql1q2b212js81nmd3vx7k6tapl5zoj65phbgelz85e0uhbbr19cm9b3dj1zgrdpewrxgpb4s\",\n      \"embossCardName\" : \"Marc Prohaska\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09e19b44-5230-4e42-85ad-7f38ba24e56e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.654438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsByIdv1",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "f7f74a9a-d231-4bf8-bd1c-54e64233d7cd",
    "name" : "Retrieve the details of a fire.com Account - 401",
    "request" : {
      "urlPath" : "/v1/accounts/7422937956901101882",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "f7f74a9a-d231-4bf8-bd1c-54e64233d7cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.652565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "4520b08d-6dab-4ec9-96e2-0f020f52f8e0",
    "name" : "Retrieve the details of a fire.com Account (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts/3527572972834208506",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4520b08d-6dab-4ec9-96e2-0f020f52f8e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.652531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "2d3d25f0-7d24-4754-800e-805ef4865fd1",
    "name" : "Add a new account",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d3d25f0-7d24-4754-800e-805ef4865fd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.652303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAccount",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "d10bbab7-b750-484f-be92-18fc0aa553ca",
    "name" : "List all fire.com Accounts - 401",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "d10bbab7-b750-484f-be92-18fc0aa553ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.652087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "265fde4d-4997-4a42-bc46-fbbadbab17ef",
    "name" : "List all fire.com Accounts (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accounts\" : [ {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"BREXIT_MIGRATED\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"BREXIT_MIGRATED\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "265fde4d-4997-4a42-bc46-fbbadbab17ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:41.652041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts",
          "schema" : {
            "properties" : {
              "accounts" : {
                "items" : {
                  "properties" : {
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 23950,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "cbic" : {
                      "description" : "the BIC of the account (provided if currency is EUR).",
                      "example" : "CPAYIE2D",
                      "type" : "string"
                    },
                    "ccan" : {
                      "description" : "the Account Number of the account.",
                      "example" : "11111111",
                      "type" : "string"
                    },
                    "ciban" : {
                      "description" : "the IBAN of the account (provided if currency is EUR).",
                      "example" : "IE54CPAY99119911111111",
                      "type" : "string"
                    },
                    "cnsc" : {
                      "description" : "the Sort Code of the account.",
                      "example" : "232221",
                      "type" : "string"
                    },
                    "colour" : {
                      "deprecated" : true,
                      "description" : "Internal Use",
                      "example" : "ORANGE",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "defaultAccount" : {
                      "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "directDebitsAllowed" : {
                      "description" : "Whether or not direct debits can be set up on this account.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "fopOnly" : {
                      "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com)",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "name" : {
                      "description" : "the name the user gives to the account to help them identify it.",
                      "example" : "Main Account",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                      "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                      "type" : "string"
                    }
                  },
                  "title" : "Account",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "accounts",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  } ]
}