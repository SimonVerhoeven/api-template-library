{
  "mappings" : [ {
    "id" : "b41b1ef7-7b7f-3b09-9695-8d1b974ecde7",
    "name" : "List transactions for an account (v3)",
    "request" : {
      "urlPath" : "/v3/accounts/8425113662008047438/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"links\" : [ {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  } ],\n  \"content\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-10T10:36:31.969Z\",\n      \"maskedPan\" : \"ivab7ljrfyplfqm16yirayc6bgvbaz6uowtvpv4303iex7nbmarbvumjwg1utg38bry4eros30b6r849xtoe925tmeogcmuyn44qn10rhndcmdr5r9o0pb3rs0wb0exlkz8m7240ch2hl5yswko27pn4vrnmwj6tucdmf94fuq2vyhimpsjfrz8hp7od62ieuwb\",\n      \"provider\" : \"umbxhsj9wkc3xma25l86srvqtw77zjmeg9zr9knxrdgid7e7ynncidpmh5brcrfcls46pd529zp7za96zwb1eloymcb6kdd2zbhqqme92x7x2y34sya5hgg1cfddb79gnubn4sthisb\",\n      \"cardId\" : 1199865035214428904,\n      \"embossBusinessName\" : \"Marshall Bernhard\",\n      \"alias\" : \"yh8p0lumbbut4hswjlli9bgj\",\n      \"embossCardName\" : \"Micheline Rempel\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 5721599369655051982,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-23T13:13:22.969Z\",\n      \"maskedPan\" : \"9xugmihbr85m3lnclqp6jkgs5baqf57h3o9ubsu0zuhl4d6auyogvt9s90xktorcvfif0v7tqq9y6fp6i9clic8r6oi07mf2068fcbl3zzf75bbr2rvv2uyogwfnddybkmlo2kocyeohpl1\",\n      \"provider\" : \"moetmi4dvewfljuffw4ai5vrdy11iolawpwl0w3queio5gw26gk78jcr49sek9rjusnv6pb5ugabicqr13nzn5j2zcnz46zp2qby85e65mxzzktrrnxivbz6n5utox3gahwm5vdxruyvpjm2fnjsy26lf6i6eal0oaogpsoyiy584qzjnbsu2angzlqxyg6ovasb\",\n      \"cardId\" : 4814826433950211466,\n      \"embossBusinessName\" : \"Brianne Rice DVM\",\n      \"alias\" : \"57fi947m60u1owesg07ore3lpm2617mbfc0x1ndxn4k7lopyc5rxmxbm21nzsnaadxha8jecdd8pj9ooqjn42imk7873aztpcqfum3ubxuy6d87bevxzbh\",\n      \"embossCardName\" : \"Chase Schmidt II\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-08-01T05:34:50.97Z\",\n      \"maskedPan\" : \"8rifi6d7235dklzfj5rpfhnw2ve0j5wndygcjm9kt0d8au5kfret58w2bwimgc6d90uku9cbwxeav6j5thn5rcyvi\",\n      \"provider\" : \"ak1a1s7khpsgguqffgviphxr2qc7zhxkvzrlpmeddj7txezbwjtcmmzx3u15ebs7mi23sq78syyqmj65qffmo\",\n      \"cardId\" : 1795111408385519293,\n      \"embossBusinessName\" : \"Eddie Mante\",\n      \"alias\" : \"lnxau9\",\n      \"embossCardName\" : \"Jimmy Cummings\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 5252089167602560281,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-02-01T05:50:42.97Z\",\n      \"maskedPan\" : \"u6zeyomjy6qkzsa39v32pw623vjzhepgbgkxzh6nhcjjbwg3mk6qoudnfr7i0p071yrv116h677yhrfqybionktci51v85c7hzcmuys6piv7ny6huzmsq\",\n      \"provider\" : \"gfqqzzfukz89tvolidjzjp3u6cv32axugae24zbywo3sdqsgbm8ahyy6d05x6qpxbikhfacvk95qloxoy792ysjkwi8tjfhiishr5jqq2kyx5t1wfnyjthaidsk3928\",\n      \"cardId\" : 2332823139301673765,\n      \"embossBusinessName\" : \"Jonell Schulist IV\",\n      \"alias\" : \"r76abpmqzh8uxd4bza9fnz1arktsc6zvhy0j4e58golpfh0c0ls2i2l5nagzzytrdx5sgrz6887a855coapogxnuonejkc6e7\",\n      \"embossCardName\" : \"Miss Kristi Howell\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-08T04:49:09.97Z\",\n      \"maskedPan\" : \"rx4ffqexvlopy7shstngzfry1kh38naqplyswo9bk0lz5560qax2ixowebyjg0vgk7kz409sfgw63567n0hao7ch8csz2k3hw9ne69q1t\",\n      \"provider\" : \"jmudqgsu\",\n      \"cardId\" : 3871343455809624523,\n      \"embossBusinessName\" : \"Emerson Cummerata\",\n      \"alias\" : \"gdm0ldvxx89qsgmwtsa8dj2l4me7n0ocb0xm22qeoboj33044pfkue1kl8haq6d5ykcxtxbm854e6amzgrh8gqlqhjv7y6o\",\n      \"embossCardName\" : \"Dr. Somer Douglas\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-04T01:47:52.97Z\",\n      \"maskedPan\" : \"8imduvhzy0x4stekil4gccwzq81m6gfedme4umrn987y3hldnnbep25x3ai9wezav8ez8vggi2v2hnco3k53qrja0darkd6lhmyy1awuovxz3b3ps1dpo0amgkqc9se4bhbxpaf9fp4po2xc04zi24517j9sbgo35q41vbg\",\n      \"provider\" : \"2yck9s0sp3o8by7vkyzlksw6v9e67ldc1xb1dk1p5ughb9zras93atczkm576jobx\",\n      \"cardId\" : 3261476159740222135,\n      \"embossBusinessName\" : \"Augustine Bogisich\",\n      \"alias\" : \"95c3odzx7\",\n      \"embossCardName\" : \"Georgianne Friesen\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-09-14T22:28:34.971Z\",\n      \"maskedPan\" : \"n8jrdy9\",\n      \"provider\" : \"imra1tvv2mxc5rshwp8y1ms5hxrq7cvfen92dc2khbm5vme6gjxri21zo91dd9ft3jjskludbw90vvft4y2nz56bsnzptnw5me27kbo5n9mea758nq1er3a05v8ldt9g3savqnzstqx1hl6sq3rcsp5jvmulqcny1pncqoz0iyiaid5g01z55e3wsqz9xvdet90qd\",\n      \"cardId\" : 8581161676004681086,\n      \"embossBusinessName\" : \"Angel Corkery III\",\n      \"alias\" : \"ahk0fb9ph1zklkqselmlr1upgrfyplwhd837tlo4fwqai7ucgk084s5jrag7l0p7gkf3omuvkysnmqil6nvbbdqa2od5ldwzpytx\",\n      \"embossCardName\" : \"Tamie Pfannerstill\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"5o84otj4nkivaau9720kgguiq5b6a7xk1yx47hufokpp4oyulu0n46giou47nudjjzwjcpuhw4xxoanvvykbi0kvohqdi49v63igc0j5obfa1xa4uzkmmd7csqmwmxdepvy723lh7bp1ck0lpu5yarx3qubpd01a1919gd83\",\n        \"additionalDataDe124\" : \"djpd2g3arvl1o4hd1nvgv\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-04-04T16:40:32.971338Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"xysk6j645fiw3dfvcjdbcx8hu77md8mczz6ksj083suf4elcuo2ggy4y3rbl26lfjpz1ydzck5ceixdmgc7a9h26t3cqb8fhow92co2l059qe7e9e6gilkntw7aqi\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-12T21:40:00.971Z\",\n      \"maskedPan\" : \"eregildpbxcnnwivgakmabk3upouzno0gb47dmo6sodboj9x2cwcuxfnxu55lv5hugytc83ju101jwxakhyu2lfg2sjg6r106ee8pc6dfnlfdc2zb44c1xmaskdtx\",\n      \"provider\" : \"6h3lc51mr8hxxoqgt3oylo00q9p2iu0xxkbu02vu3yspwhqudxz1v4ls2xt8if18buewd2jbiazveuh6ufvf90gv7ekrjsqf0c0rcznim9ivu66lz0solc7e9cg1fbwir99mnnde9fscwxy6xcy3hopseq660jq15ndr48t\",\n      \"cardId\" : 2660086062402857166,\n      \"embossBusinessName\" : \"Senaida Reichert\",\n      \"alias\" : \"eepcfe7vqxsv7r750byrkqhsvfzogm6ld6sml0e1ii1\",\n      \"embossCardName\" : \"Rudy Bashirian\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b41b1ef7-7b7f-3b09-9695-8d1b974ecde7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTransactionsByIdv3",
          "schema" : {
            "properties" : {
              "content" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "items" : {
                  "properties" : {
                    "href" : {
                      "description" : "https://api.fire.com/business/v3/accounts/1/transactions?startAfter=eyJpY2F",
                      "example" : "The URL of the linked page",
                      "type" : "string"
                    },
                    "rel" : {
                      "description" : "The relationship of this link to the current object - self, next, prev page.",
                      "example" : "self",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv3",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "e762a204-58ab-37ba-8970-61fb3ef816f3",
    "name" : "Returns list of all users on your fire.com account",
    "request" : {
      "urlPath" : "/v1/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"LIVE\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"LIVE\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"CLOSED\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"SMS_CODE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"SMS_CODE_SENT\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e762a204-58ab-37ba-8970-61fb3ef816f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUsers",
          "schema" : {
            "items" : {
              "properties" : {
                "emailAddress" : {
                  "description" : "email address for user",
                  "example" : "user@example.com",
                  "type" : "string"
                },
                "firstName" : {
                  "description" : "User first name",
                  "example" : "Colm",
                  "type" : "string"
                },
                "id" : {
                  "description" : "The User ID for this User",
                  "example" : 14059,
                  "format" : "int64",
                  "type" : "integer"
                },
                "lastName" : {
                  "description" : "User second name",
                  "example" : "User",
                  "type" : "string"
                },
                "lastlogin" : {
                  "description" : "Timestamp on when user last logged in.",
                  "example" : "2012-01-20T11:21:35.000Z",
                  "type" : "string"
                },
                "mobileApplicationDetails" : {
                  "properties" : {
                    "OS" : {
                      "description" : "Operating system of device.",
                      "enum" : [ "Android", "IOS", "OTHER" ],
                      "type" : "string"
                    },
                    "businessUserId" : {
                      "description" : "Business user ID",
                      "example" : "14059",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "clientID" : {
                      "description" : "Client ID of user.",
                      "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                      "type" : "string"
                    },
                    "deviceName" : {
                      "description" : "type of device.",
                      "enum" : [ "iPhone", "Android", "Other" ],
                      "type" : "string"
                    },
                    "deviceOSVersion" : {
                      "description" : "OS version for device.",
                      "example" : "14.4",
                      "type" : "string"
                    },
                    "mobileApplicationId" : {
                      "description" : "Mobile application id for user.",
                      "example" : "18967",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "status" : {
                      "description" : "Status of user",
                      "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "mobileApplication",
                  "type" : "object"
                },
                "mobileNumber" : {
                  "description" : "User mobile number",
                  "example" : "+353871234567",
                  "type" : "string"
                },
                "role" : {
                  "description" : "User role",
                  "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                  "type" : "string"
                },
                "status" : {
                  "description" : "Status of user",
                  "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                  "type" : "string"
                },
                "userCvl" : {
                  "description" : "Users Cvl type ID (shows up when status is LIVE)",
                  "example" : "FULL",
                  "type" : "string"
                }
              },
              "title" : "user",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "0e884f29-86be-3c6a-b69f-26626794d70d",
    "name" : "Returns details of a specific fire.com user.",
    "request" : {
      "urlPath" : "/v1/user/2966753873756577017",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"SMS_CODE_SENT\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e884f29-86be-3c6a-b69f-26626794d70d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "properties" : {
              "emailAddress" : {
                "description" : "email address for user",
                "example" : "user@example.com",
                "type" : "string"
              },
              "firstName" : {
                "description" : "User first name",
                "example" : "Colm",
                "type" : "string"
              },
              "id" : {
                "description" : "The User ID for this User",
                "example" : 14059,
                "format" : "int64",
                "type" : "integer"
              },
              "lastName" : {
                "description" : "User second name",
                "example" : "User",
                "type" : "string"
              },
              "lastlogin" : {
                "description" : "Timestamp on when user last logged in.",
                "example" : "2012-01-20T11:21:35.000Z",
                "type" : "string"
              },
              "mobileApplicationDetails" : {
                "properties" : {
                  "OS" : {
                    "description" : "Operating system of device.",
                    "enum" : [ "Android", "IOS", "OTHER" ],
                    "type" : "string"
                  },
                  "businessUserId" : {
                    "description" : "Business user ID",
                    "example" : "14059",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "clientID" : {
                    "description" : "Client ID of user.",
                    "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                    "type" : "string"
                  },
                  "deviceName" : {
                    "description" : "type of device.",
                    "enum" : [ "iPhone", "Android", "Other" ],
                    "type" : "string"
                  },
                  "deviceOSVersion" : {
                    "description" : "OS version for device.",
                    "example" : "14.4",
                    "type" : "string"
                  },
                  "mobileApplicationId" : {
                    "description" : "Mobile application id for user.",
                    "example" : "18967",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "status" : {
                    "description" : "Status of user",
                    "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                    "type" : "string"
                  }
                },
                "title" : "mobileApplication",
                "type" : "object"
              },
              "mobileNumber" : {
                "description" : "User mobile number",
                "example" : "+353871234567",
                "type" : "string"
              },
              "role" : {
                "description" : "User role",
                "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                "type" : "string"
              },
              "status" : {
                "description" : "Status of user",
                "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                "type" : "string"
              },
              "userCvl" : {
                "description" : "Users Cvl type ID (shows up when status is LIVE)",
                "example" : "FULL",
                "type" : "string"
              }
            },
            "title" : "user",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d4e382e5-a362-37c3-a325-b4fbbf4a006b",
    "name" : "Get Payment Details",
    "request" : {
      "urlPath" : "/v1/payments/f625851f-3469-3d34-8dac-be1eb7719d7b",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 1000,\n  \"additionalFields\" : \"ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2\",\n  \"description\" : \"Gym Fees Oct 2020\",\n  \"type\" : \"OTHER\",\n  \"webhookUrl\" : \"https://example.com/webhook\",\n  \"icanTo\" : 42,\n  \"transactionType\" : \"PAYMENT\",\n  \"orderDetails\" : {\n    \"deliveryCity\" : \"London\",\n    \"comment2\" : \"Additional comments about the transaction\",\n    \"productId\" : \"ZFDAA-1221\",\n    \"comment1\" : \"Additional comments about the transaction\",\n    \"orderId\" : \"6c28a47d-4502-4111\",\n    \"variableReference\" : \"John Doe\",\n    \"merchantCustomerIdentification\" : 8303863544,\n    \"customerNumber\" : \"123645\",\n    \"merchantNumber\" : \"1234567\",\n    \"deliveryPostCode\" : \"EC15155\",\n    \"deliveryCountry\" : \"GB\",\n    \"deliveryAddressLine2\" : \"The Way\",\n    \"deliveryAddressLine1\" : \"12 The Street\"\n  },\n  \"paymentUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"maxNumberPayments\" : 1,\n  \"mandatoryFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"collectFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"expiry\" : \"2024-10-22T07:48:56.460Z\",\n  \"returnUrl\" : \"https://example.com/callback\",\n  \"myRef\" : \"Fees\",\n  \"paymentRequestCode\" : \"1234abcd\",\n  \"status\" : \"PAID\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4e382e5-a362-37c3-a325-b4fbbf4a006b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getPaymentDetails",
          "schema" : {
            "properties" : {
              "additionalFields" : {
                "description" : "These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.",
                "example" : "ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2",
                "type" : "string"
              },
              "amount" : {
                "description" : "The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).",
                "example" : 1000,
                "format" : "int64",
                "type" : "integer"
              },
              "collectFields" : {
                "description" : "For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "description" : {
                "description" : "A public facing description of the request. This will be shown to the user when they tap or scan the request.",
                "example" : "Gym Fees Oct 2020",
                "type" : "string"
              },
              "expiry" : {
                "description" : "This is the expiry of the payment request. After this time, the payment cannot be paid.",
                "example" : "2024-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "icanTo" : {
                "description" : "The ican of the account to collect the funds into. Must be one of your fire.com Accounts.",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "mandatoryFields" : {
                "description" : "For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "maxNumberPayments" : {
                "description" : "The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.",
                "example" : 1,
                "type" : "integer"
              },
              "myRef" : {
                "description" : "An internal description of the request.",
                "example" : "Fees",
                "type" : "string"
              },
              "orderDetails" : {
                "properties" : {
                  "comment1" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "comment2" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "customerNumber" : {
                    "description" : "Use this field to store a customer number for the transaction (for example).",
                    "example" : "123645",
                    "type" : "string"
                  },
                  "deliveryAddressLine1" : {
                    "description" : "The first line of the delivery address.",
                    "example" : "12 The Street",
                    "type" : "string"
                  },
                  "deliveryAddressLine2" : {
                    "description" : "The second line of the delivery address.",
                    "example" : "The Way",
                    "type" : "string"
                  },
                  "deliveryCity" : {
                    "description" : "Delivery address city",
                    "example" : "London",
                    "type" : "string"
                  },
                  "deliveryCountry" : {
                    "description" : "2-digit code for the country",
                    "example" : "GB",
                    "type" : "string"
                  },
                  "deliveryPostCode" : {
                    "description" : "Delivery address post code",
                    "example" : "EC15155",
                    "type" : "string"
                  },
                  "merchantCustomerIdentification" : {
                    "description" : "This is a reference you use to uniquely identify each of your customers.",
                    "example" : 8303863544,
                    "type" : "string"
                  },
                  "merchantNumber" : {
                    "description" : "Your Merchant Number (if applicable).",
                    "example" : "1234567",
                    "type" : "string"
                  },
                  "orderId" : {
                    "description" : "Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.",
                    "example" : "6c28a47d-4502-4111",
                    "type" : "string"
                  },
                  "productId" : {
                    "description" : "Use this field to store a product id for the transaction (for example).",
                    "example" : "ZFDAA-1221",
                    "type" : "string"
                  },
                  "variableReference" : {
                    "description" : "Use this field to store any other reference for the transaction (for example, a phone number).",
                    "example" : "John Doe",
                    "type" : "string"
                  }
                },
                "title" : "orderDetails",
                "type" : "object"
              },
              "paymentRequestCode" : {
                "description" : "The code that was returned when you created the payment request.",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "paymentUuid" : {
                "description" : "A unique id for the transaction.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "returnUrl" : {
                "description" : "The merchant return URL where the customer will be re-directed to with the result of the transaction.",
                "example" : "https://example.com/callback",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the transaction",
                "enum" : [ "AWAITING_AUTHORISATION", "AUTHORISED", "AWAITING_MULTI_AUTHORISATION", "NOT_AUTHORISED", "PAID", "REJECTED", "ACCEPTED", "RECEIVED" ],
                "type" : "string"
              },
              "transactionType" : {
                "description" : "The type of payment request payment",
                "enum" : [ "REFUND_REQUEST", "PAYMENT" ],
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created",
                "enum" : [ "OTHER" ],
                "type" : "string"
              },
              "webhookUrl" : {
                "description" : "A URL to be called in the background with the details of the payment after the payment is complete",
                "example" : "https://example.com/webhook",
                "type" : "string"
              }
            },
            "title" : "paymentRequest",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "21b62c87-866a-3ed6-b184-a320b487a786",
    "name" : "Create a Fire Open Payment request",
    "request" : {
      "urlPath" : "/v1/paymentrequests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : \"1234abcd\",\n  \"type\" : \"OTHER\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21b62c87-866a-3ed6-b184-a320b487a786",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "newPaymentRequest",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.\n",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created.",
                "enum" : [ "OTHER" ],
                "type" : "string"
              }
            },
            "title" : "newPaymentRequestResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "229e1ee8-ca06-3916-b733-dedf4eb56b15",
    "name" : "List all Payee Bank Accounts",
    "request" : {
      "urlPath" : "/v1/payees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"fundingSources\" : [ {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "229e1ee8-ca06-3916-b733-dedf4eb56b15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getPayees",
          "schema" : {
            "properties" : {
              "fundingSources" : {
                "items" : {
                  "properties" : {
                    "accountHolderName" : {
                      "description" : "The name on the payee bank account.",
                      "example" : "Joe Bloggs",
                      "type" : "string"
                    },
                    "accountName" : {
                      "description" : "The alias attributed to the payee, usually set by the user when creating the payee.",
                      "example" : "Joe",
                      "type" : "string"
                    },
                    "accountNumber" : {
                      "description" : "The Account Number of the account if currency is GBP.",
                      "example" : "12345678",
                      "type" : "string"
                    },
                    "bic" : {
                      "description" : "The BIC of the account if currency is EUR.",
                      "example" : "BOFIIE2DXXX",
                      "type" : "string"
                    },
                    "createdBy" : {
                      "description" : "The creation source of the payee.",
                      "enum" : [ "CUSTOMER", "LODGEMENT", "DIRECT DEBIT", "OPEN BANKING", "FIRE OPEN PAYMENT", "FIRE DIRECT" ],
                      "example" : "CUSTOMER",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the payee was created. ISO Date Time.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "iban" : {
                      "description" : "The IBAN of the account if currency is EUR.",
                      "example" : "IE86BOFI90535211111111",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "Identifier for the fire.com payee bank account (assigned by fire.com).",
                      "example" : 742,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "nsc" : {
                      "description" : "The Sort Code of the account if currency is GBP.",
                      "example" : "998822",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.\n  * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.\n  * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.\n  * 'CLOSED'\n  * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.\n",
                      "enum" : [ "CREATED", "LIVE", "CLOSED", "ARCHIVED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    }
                  },
                  "title" : "payee",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of payees in the list.",
                "example" : 1,
                "type" : "integer"
              }
            },
            "title" : "payeeBankAccounts",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "ee3386da-7c63-39a2-b2bc-dbfe8be34317",
    "name" : "Cancel a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/59c93878-b27b-3177-b0b7-41d5f4179cc3/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ee3386da-7c63-39a2-b2bc-dbfe8be34317",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cancelMandateByUuid"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8aa94dd2-38bc-3378-9305-c42aac25e658",
    "name" : "Activate a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/021e63e7-0ca4-3679-8c84-44026f5da5bc/activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8aa94dd2-38bc-3378-9305-c42aac25e658",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "activateMandate"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "1bc20eb6-2ac3-3912-b8b1-bd1ae441d6ae",
    "name" : "Update a direct debit mandate alias - 204",
    "request" : {
      "urlPath" : "/v1/mandates/25a08ea9-7178-341f-9637-b2ec85594b36",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "1bc20eb6-2ac3-3912-b8b1-bd1ae441d6ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateMandateAlias"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "c0784a73-6c92-3419-b233-9d6b92bc7285",
    "name" : "Get direct debit mandate details",
    "request" : {
      "urlPath" : "/v1/mandates/6d0431f7-19b6-3ee3-9d30-0336408c9ac7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"originatorReference\" : \"VODA-123456\",\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 1,\n  \"latestDirectDebitAmount\" : 2,\n  \"numberOfDirectDebitCollected\" : 2,\n  \"valueOfDirectDebitCollected\" : 2,\n  \"originatorAlias\" : \"Vodaphone PLC\",\n  \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateReference\" : \"CRZ-102190123\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n  \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n  \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n  \"alias\" : \"Vodaphone\",\n  \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n  \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0784a73-6c92-3419-b233-9d6b92bc7285",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getMandate",
          "schema" : {
            "properties" : {
              "alias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCancelled" : {
                "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCompleted" : {
                "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "fireRejectionReason" : {
                "description" : "Rejection reason if transaction is rejected",
                "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "latestDirectDebitAmount" : {
                "description" : "The value of largest direct debit collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "latestDirectDebitDate" : {
                "description" : "The date of latest direct debit collected",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateReference" : {
                "description" : "the reference of the mandate",
                "example" : "CRZ-102190123",
                "type" : "string"
              },
              "mandateUuid" : {
                "description" : "The UUID for the mandate",
                "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                "type" : "string"
              },
              "numberOfDirectDebitCollected" : {
                "description" : "The number of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "originatorAlias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone PLC",
                "type" : "string"
              },
              "originatorLogoUrlLarge" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoLarge",
                "type" : "string"
              },
              "originatorLogoUrlSmall" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoSmall",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeCancelReason" : {
                "description" : "Reason for cancelation",
                "example" : "e.g. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeCancelReasonCode" : {
                "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "Identifier for the fire.com account (assigned by fire.com)",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfDirectDebitCollected" : {
                "description" : "The value of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandate",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "5435d2dc-b733-3d45-b4ba-d5d16f1d3c0d",
    "name" : "List all direct debit mandates",
    "request" : {
      "urlPath" : "/v1/mandates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"mandates\" : [ {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5435d2dc-b733-3d45-b4ba-d5d16f1d3c0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getDirectDebitMandates",
          "schema" : {
            "properties" : {
              "mandates" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCancelled" : {
                      "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCompleted" : {
                      "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "fireRejectionReason" : {
                      "description" : "Rejection reason if transaction is rejected",
                      "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                      "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "latestDirectDebitAmount" : {
                      "description" : "The value of largest direct debit collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "latestDirectDebitDate" : {
                      "description" : "The date of latest direct debit collected",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateReference" : {
                      "description" : "the reference of the mandate",
                      "example" : "CRZ-102190123",
                      "type" : "string"
                    },
                    "mandateUuid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                      "type" : "string"
                    },
                    "numberOfDirectDebitCollected" : {
                      "description" : "The number of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "originatorAlias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone PLC",
                      "type" : "string"
                    },
                    "originatorLogoUrlLarge" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoLarge",
                      "type" : "string"
                    },
                    "originatorLogoUrlSmall" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoSmall",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeCancelReason" : {
                      "description" : "Reason for cancelation",
                      "example" : "e.g. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeCancelReasonCode" : {
                      "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                      "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "Identifier for the fire.com account (assigned by fire.com)",
                      "example" : 1,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "valueOfDirectDebitCollected" : {
                      "description" : "The value of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "mandate",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandates",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "c92d91c7-f332-3b6c-8e1a-2af620134f71",
    "name" : "Reject a direct debit payment - 204",
    "request" : {
      "urlPath" : "/v1/directdebits/59ad60f8-9869-3295-9d57-c78e816eaf32/reject",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c92d91c7-f332-3b6c-8e1a-2af620134f71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "rejectDirectDebit"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "ffb7ef6a-8a09-3321-808f-ca60cfdd10e1",
    "name" : "Get the details of a direct debit",
    "request" : {
      "urlPath" : "/v1/directdebits/ccf47990-9138-3560-9d1b-76741d1b9ad5",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directDebitReference\" : \"VODA-ABC453-1\",\n  \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n  \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n  \"originatorReference\" : \"VODA-123456\",\n  \"amount\" : 100,\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 42,\n  \"isDDIC\" : false,\n  \"originatorAlias\" : \"Three\",\n  \"type\" : \"FIRST_COLLECTION\",\n  \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n  \"targetPayeeId\" : 12,\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffb7ef6a-8a09-3321-808f-ca60cfdd10e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getDirectDebitByUuid",
          "schema" : {
            "properties" : {
              "amount" : {
                "description" : "Value of the payment",
                "example" : 100,
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "directDebitReference" : {
                "description" : "The direct debit reference.",
                "example" : "VODA-ABC453-1",
                "type" : "string"
              },
              "directDebitUuid" : {
                "description" : "The UUID for the direct debit payment",
                "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                "type" : "string"
              },
              "isDDIC" : {
                "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                "example" : false,
                "type" : "boolean"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateUUid" : {
                "description" : "The UUID for the mandate",
                "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                "type" : "string"
              },
              "originatorAlias" : {
                "description" : "The Alias of the party who sets up the direct debit.",
                "example" : "Three",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeRejectReason" : {
                "description" : "Reason why rejected",
                "example" : "eg. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeRejectReasonCode" : {
                "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                "type" : "string"
              },
              "status" : {
                "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "The ican of your fire account that the money was taken from",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "targetPayeeId" : {
                "description" : "The payee that was created when the DD was processed",
                "example" : 12,
                "format" : "int64",
                "type" : "integer"
              },
              "type" : {
                "description" : "The type of the direct debit.",
                "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                "example" : "FIRST_COLLECTION",
                "type" : "string"
              }
            },
            "title" : "directDebit",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "6a2e4150-46c0-37a4-8651-1e4434e41df3",
    "name" : "Get all DD payments associated with a direct debit mandate",
    "request" : {
      "urlPath" : "/v1/directdebits",
      "method" : "GET",
      "queryParameters" : {
        "mandateUuid" : {
          "equalTo" : "b601084e-2da8-3266-96d6-fd510e0e8d1d"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"directdebits\" : [ {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a2e4150-46c0-37a4-8651-1e4434e41df3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getDirectDebitsForMandateUuid",
          "schema" : {
            "properties" : {
              "directdebits" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "Value of the payment",
                      "example" : 100,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitReference" : {
                      "description" : "The direct debit reference.",
                      "example" : "VODA-ABC453-1",
                      "type" : "string"
                    },
                    "directDebitUuid" : {
                      "description" : "The UUID for the direct debit payment",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "isDDIC" : {
                      "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateUUid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                      "type" : "string"
                    },
                    "originatorAlias" : {
                      "description" : "The Alias of the party who sets up the direct debit.",
                      "example" : "Three",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeRejectReason" : {
                      "description" : "Reason why rejected",
                      "example" : "eg. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeRejectReasonCode" : {
                      "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                      "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                      "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "The ican of your fire account that the money was taken from",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "targetPayeeId" : {
                      "description" : "The payee that was created when the DD was processed",
                      "example" : 12,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the direct debit.",
                      "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                      "example" : "FIRST_COLLECTION",
                      "type" : "string"
                    }
                  },
                  "title" : "directDebit",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "directDebits",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "e439c75e-766d-37a6-a62e-c943ad842428",
    "name" : "Unblock a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/1265337029787735730/unblock",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e439c75e-766d-37a6-a62e-c943ad842428",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "unblockCard"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "0fdc7b97-c122-393c-af1a-d44b5a939d7f",
    "name" : "List Card Transactions. - 403",
    "request" : {
      "urlPath" : "/v1/cards/5196325521160318029/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "0fdc7b97-c122-393c-af1a-d44b5a939d7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "14f5ffe5-925a-3658-9f2e-4affff4d4f95",
    "name" : "List Card Transactions. - 401",
    "request" : {
      "urlPath" : "/v1/cards/39562485542815524/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "14f5ffe5-925a-3658-9f2e-4affff4d4f95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "ef987cf3-d672-3731-abaf-93aec1c63037",
    "name" : "List Card Transactions. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards/9162355318139040313/transactions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"rdnjs4mujsqrcwym7e1gc03gq5\",\n        \"additionalDataDe124\" : \"6mpfiuel4elow0a2k6iewl2jebpuwituaxitvavlsa8swmjm4fbem0s4afx6pqqx64vfny5rxfqios999xigrpoxwao69zwtuc9648h96a9oeui\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-09-23T16:25:32.957614Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"htvcwpohicj8tojnr6gg5pazcuqg8hbx3zyofdvjtah57ugcthhpp3248dgutdvuhoib1ql8lvg51lpqxxx2ejja4yeu5o298lfsie20eal1f1ewtrcxksy2k2cvuuv6sl5tqurwxp1xl68q63epfcenwhebevfu9\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-11-21T15:33:40.957Z\",\n      \"maskedPan\" : \"il1ffbjc2q1m80x79ax22y4keeil0emnfozql14rxpk2vkmefg2vzafvlgqb090n6539592zgbjfe6279sgmq2phhes1t1e2wbz2uexobahi28km3or4xqbj7d4vqppqp6mrsuea5x8r0xgjvou1fe8zjg2crro2cv397o0yb6emppvbb7n\",\n      \"provider\" : \"agmyt92avwvn3pbnuz379txsx8fotmk4bnk4qr0j4w0tzqtekwv8ntrmz9npbzj30opy5akbd7\",\n      \"cardId\" : 5368928196497038152,\n      \"embossBusinessName\" : \"Jutta Christiansen\",\n      \"alias\" : \"mkeh5xy8yun2yrzy5lvfr13a9bq3jh7x2gxvzhmukbb0z0s7tyk40ce0q97dy2lq1bh41omg9y12mmkpu7zuhnf80jghictypfp0x2pb2dpxfj18k0au8cd28j80thfd\",\n      \"embossCardName\" : \"Trenton Heathcote Jr.\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-22T10:24:50.958Z\",\n      \"maskedPan\" : \"zbfhfu1fbmjd3stnj3iwj2hsi2l5nmptdkt4npvuygmffbzzxjplhcjbmastonmw185dyywm8vzxyukpo97u3ykyspgx7sc1shjs89sn667heo8oglhkmo\",\n      \"provider\" : \"uolaveqnbx6jh0g1hfy4tt4lho7t1r6sf5ep8ayqdglhew0unb15k4vl7wp6tix0yt5kavosk8fn7jc3sptsy4fu1c5aeyfyi17rufux\",\n      \"cardId\" : 9023613785046462594,\n      \"embossBusinessName\" : \"Berenice Hettinger\",\n      \"alias\" : \"by4eqql2o0j0yj0z70cfdxwx4ahcsijq636jsrz0md486g2uxfw6791xs02sx5lkju2m4gw66gx65i0htu8tx7y2t1c5evo5oace19n44xh2ptx184o7qrwa57vygz19yb7jn19y0h0dtwi6yxdgvhynthrrxevkcdd6ylpvpyqeywzkqh99ach21b09v8264chyrxn1\",\n      \"embossCardName\" : \"Ja Langosh\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-12T12:47:42.958Z\",\n      \"maskedPan\" : \"1n90jb8k2zggvf36d1bdj699rnba\",\n      \"provider\" : \"ir55uderwkbcm6hfj75eyy64hr0fjixldm9\",\n      \"cardId\" : 2967210650113248687,\n      \"embossBusinessName\" : \"Keira Sauer\",\n      \"alias\" : \"ys4fg1bklam6i3bbp25yuy7ti6u5ctc8anb9pik5x8htjufh62m08hb1m3zi4puvfxffix4wfma9qbx5gbmeecvw2ell305m5y178spk2ft4zergllm2u5vi9z717se5q\",\n      \"embossCardName\" : \"Chantelle Reinger\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 5555970090252591221,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-04-19T23:55:14.958Z\",\n      \"maskedPan\" : \"n9qke15r3t06qya9cqeedt6vwzqu4j5vwsicv1hdnk171kzz6zpswjkdflnqvc7aoc0dxnb0uq1mplenlgwpup6iwbzsi6hcf2ejh3e4229eshwd4gk8k37u2u53ihzzcmipi4qi181kxbwqg49mxasi71sipddy83pkb8klftt8glmpdv33kc\",\n      \"provider\" : \"n0bw1cpazyus4gkz40wk1rjwbxh59zehwvaqjd4tggcxxv7dm5gic80i4yyxu3t6scz4zcl3ik9evhwaiqk4nm120v8j1pkihe78mi610g9qn3elgz8or8kbyars1sroxyhsvp47kuhjfsisco1cvql9gd8em8y5ps5ajruc8jrsjsgrhcdybp5ew1\",\n      \"cardId\" : 8554541850791087236,\n      \"embossBusinessName\" : \"Ignacio Jones DVM\",\n      \"alias\" : \"7pppjk7y331qrzi9u4j1cact820rkn1c3trlpkjbrw6\",\n      \"embossCardName\" : \"Alan Kihn\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"l8s1k6ea991ub45gydd0t73ps9zgbjo329vkjrh1ifvw8f873awp5mxhkcctrrposo7smkfi98nwspp5v4emvthhow1pedahzl06snthv5qmm0umjukxr168s23rzpdfch7070vybgwv8pcmhnxc1li3pstgj63t5ygkcslk1y06v\",\n        \"additionalDataDe124\" : \"pzljuepwq2rb7im0yhp2agyg8ha3j1e6mj13ke0hwt7r9j001urx7ttonlejk8zgspg8704053foug\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-05-20T13:19:32.958938Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"v4mufsjqbkllimjr47sbnzy9ljpa572y73eumf0a50qcdrd1fd3oh5g0oc876njs5ozet0inatqghzx0tlfsm5f6kudemfv910a6k1wkpfst3obs33mhdhdj4vr5tfjyziraf8bxfcquh7iidoq4lb\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-01-16T15:20:02.959Z\",\n      \"maskedPan\" : \"fjdf9bb8fznfz0u9iw8t51sqmyet6mnltbkc8mbhyeq57j08vijk6b0ope6fwu57zwnfcsxp7nwcw2kuiyhmt11jzpis5owjlps5w9cfg58lrwuhj9y7rdwuczqimgjt6u20gkpt\",\n      \"provider\" : \"h691ug1ktwg8l4f9wur827gyvrwd1h3gl3cah11yvktmxlrpcc2n7fsxkfp7fr8jh4xf16pbltvoquyxl99ly0b11fa4l49pglf5sdgbovktk3r1vznc46520dbtxqr83m9k0ucy0\",\n      \"cardId\" : 1176021476584861556,\n      \"embossBusinessName\" : \"Drew MacGyver DVM\",\n      \"alias\" : \"qnbpvq49qvqomwe3y3zpvhdmaxs8658ztpnv761md5pf7d87fjlqaaoaagpxg5i5lmx1ft8ugf9j9uavea7\",\n      \"embossCardName\" : \"Terry Anderson\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 5416105641933982967,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-20T21:41:51.959Z\",\n      \"maskedPan\" : \"tsh8b6nyini2vwpr41aia6l8oi3y0aa0s8fdpgppip3csxw3rydyo97hd4j93k0une1mdkcx9ln5vt1a\",\n      \"provider\" : \"zc7mg\",\n      \"cardId\" : 4751253011610547439,\n      \"embossBusinessName\" : \"Ms. Delpha Gleason\",\n      \"alias\" : \"c4wi8cf4dyndx9t9ugd254alapoolx9nvacp1d6vbvqchhx114vjkitr2poalxuu2idacc5t130vzn9gssw5vnmmkpcaumamnmn9w4ge0g74sj2mxes6a8ctwwg2rj5sb3y\",\n      \"embossCardName\" : \"Dorthey Koch\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-02-23T23:50:08.959Z\",\n      \"maskedPan\" : \"1w44dudxpwyjay92brt49lcdag3ei8bsk6lq36lg49jq5eilounk690n0c5xs\",\n      \"provider\" : \"de2tq1b1amvjfacuj1xvd5scb5f6q21rx5qk9mrmeqwo08sd53bsq84892ufl1aja229l10m0h63jp2ka2wljkjtwdtli4ue1b0jkiy9lpm8eguzn1ftwed0gikj\",\n      \"cardId\" : 5459077734253825439,\n      \"embossBusinessName\" : \"Giuseppina Roob\",\n      \"alias\" : \"ivjvn1uw2okf171b34qo5ov52y5s348o5jfs6stgoko6qcp\",\n      \"embossCardName\" : \"Linnie Langworth\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-11-20T21:26:52.959Z\",\n      \"maskedPan\" : \"o5698rxbks9lz7j31b35sqbywwkg6liig5vlztra9y68ayzez39hjodn3vsp8llnqt31001bzvbusgrqju4vyuuonaqte69wnoyf5e1tw2kl98c1fkbt4wyc6vmddg163crt8qjkg8kbf8se\",\n      \"provider\" : \"rluc6hhl0378two1j4o1orroun567f9sofd2u7ny5e0sa3i1v3vjtmtf15sm79xqlhdg1upwffytyx036d9n66vlf3ip58ewysdrqeuunfdjqypuibw5gl3dd4wklvdu0hu6m9py\",\n      \"cardId\" : 5356238939128696151,\n      \"embossBusinessName\" : \"Bart Greenholt\",\n      \"alias\" : \"bz1yl91ry7v4ex7ca5xwws9xiqa1q7ezpoqiz2gp0uxk36tqb827e9hdatxkktibx1dxmeu9wlu23vwcf4wcntue3m96fx0c3ijt60v3qhzdma6luub3c2g3ol8mve4u53vg9wf861go3xhep6y01ez5lsgmgf\",\n      \"embossCardName\" : \"Hubert Borer DDS\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 7007246949200355023,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-25T13:12:45.96Z\",\n      \"maskedPan\" : \"v3r2fnknm8d6yvxti8cu01s4yjhtoczo7ocs0lr8vblb6eekv3wqgyxpy9f4x2t4aagbuinzzopupgq15ylli3lys76sugzof2bv2w1f8opi60sln0bq4k\",\n      \"provider\" : \"iknq5innmty15yuiyyyhhflkm9zj4qj3jnri1056erb9w81hag8mt865upyyvu2iwirva5mqaxsg9ad1sbmt499wsr22\",\n      \"cardId\" : 9211894998519329017,\n      \"embossBusinessName\" : \"Prince Hagenes II\",\n      \"alias\" : \"4bw60wvd9tc5\",\n      \"embossCardName\" : \"Miss Dawne Sporer\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-06-08T19:18:30.96Z\",\n      \"maskedPan\" : \"ly5bzproqfygrxqx2l2u5ena39a2nd5e12swfq0wa01kwzw0q3g3onvacuh9osgfzizdmuwkhf6e1go8730qng8je8n7yh2ivoxzjikv4bma6xlw8imobvclutw52kzcm9rvfl42xe8rbr3pxc\",\n      \"provider\" : \"9ik6rhby8w9q3u6hrz2cs953c0pvvp4ngmr1ziptj8bhp9skbwg50bq7poj39xn2e4iqbe8k382kvuh0lgdylqzicck5x3ekw020becfv2adrkwe7wdrkofva9hf0p26lhe5unlj7j0x7udhv4n4tdieyjhqimpr18fjxs7nbe8gja355bsd0\",\n      \"cardId\" : 7348219016247601028,\n      \"embossBusinessName\" : \"Mr. Kareem Wilkinson\",\n      \"alias\" : \"q71pofl8tuf3jle5wuq27lvd51uh1wym9o6db42u1gpzy1vi2wvs8ggsuk8y9bqh8su9oa3nudefxomnaere\",\n      \"embossCardName\" : \"Mrs. Terrell Labadie\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-06-11T19:55:12.96Z\",\n      \"maskedPan\" : \"vwsbf\",\n      \"provider\" : \"13h3wc32lzrscwxfroseg7guoppewyy5538u078qxa8cd9zycjob1xbv9yfg6t3q43amz0zb0mdzeegy1kb9ub7qby6yv1mrprklcssp6vrinrpkb4iudx3nzoqt9jx35y1ipicvdx9n0zg\",\n      \"cardId\" : 1339659674932049888,\n      \"embossBusinessName\" : \"Emery Treutel\",\n      \"alias\" : \"qekpifp4u3tjz66n7vkhrhcnojf81343pqw0wmbjwsopax5t4mlcigre1az6gx1ol8qho2nfnaecun42wt91zbpp028myzyhp99qo8e5o2228zxxh04u4g07v0845plrpt6xdai0eb8d8tm79pn9z9r8ps67n4ommn8obiolpz5vqplzb2x\",\n      \"embossCardName\" : \"Mrs. Maida Gerlach\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"6561d40sd678fsznbwlarlid4u756ia5ohpfe3m0txzv5dbc9u3vv139281rq\",\n        \"additionalDataDe124\" : \"s0ihwx18yejonp56gw2gaoru6afk91w25wt5891szps2ayo73qav89g0bzorltrs2tj455qwgk1eb1a47377heg7dar49gmau6l2wy6s5xn9gqzqo1qke0wkip4bqfm\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2023-01-26T14:08:32.960914Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"um3r8smkgoghb59l8rmrt1v91vwkc4xo3xvcee6kw3l3rblg5tfdzbmh0k1wdrxcdqukk1peb3b5rc4a1xqvahxbzpc9euzbws2qqzpsnmhzw3mxlx7ukj8dreb0lq3zhn5z\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-08-02T04:09:46.961Z\",\n      \"maskedPan\" : \"gr4b7bfir5yfnos2pdw78rkylx0vluget9gbhzedb7v4rgvocivpmihdzof16sm131avkz3fwnu5dpqriaa5zc77yz8kaxa69m7x83zlsppvy30765ligzu7fqh78h3ml0t5yi5z9e2swd51tz\",\n      \"provider\" : \"1vmu2hu8fjxjqmtumx2si75bk\",\n      \"cardId\" : 6672363656886036914,\n      \"embossBusinessName\" : \"Quinton Kertzmann\",\n      \"alias\" : \"vggp6asfjzlpvceuxs3mznj0ju6g3ibuho3jhyjhpfs98pm3a0ax0gpizb3n4pdxz5fyldhod7ds1e3kvgdwa6a00yhrbpi9nht64aoyr29hzzwwmor\",\n      \"embossCardName\" : \"Josephina Friesen\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-10T12:46:51.961Z\",\n      \"maskedPan\" : \"8ab7syu17073auy293ued37s9zdaogqpfvmhrg02d4uq6yizrg33ykjbgtuaihl3amqqms70hjvkvks342z0lcfdey8svl1hqgcxrh5v6hzziw6dgh477njn34roxehoi47w8vp4tsh9fqrhhk7r9dr80vimi3r7yo8uie6mta6cynjo9wjv8m39sp6yzse2yhbaxii\",\n      \"provider\" : \"wuawienp8e1bkpr3t09kaisp6jh6z0j5g5pcr7kxfntzvhstu2iicwtzybesdxyxvvm9z4a20od1217x16bzq8w40io6055halk7s4n8ghas\",\n      \"cardId\" : 2032364688176551605,\n      \"embossBusinessName\" : \"Jeffry Baumbach DVM\",\n      \"alias\" : \"6d83bkri9em8psj6ebclsxavsfl1g356\",\n      \"embossCardName\" : \"Derrick Durgan DDS\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 1306363431314025868,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-26T11:59:41.961Z\",\n      \"maskedPan\" : \"sw684up1urei6f8e4bss\",\n      \"provider\" : \"gkcl4j0xmj8o9x2lhw5f1dzn7y62dtm69gyy0mn6\",\n      \"cardId\" : 6414852580134481826,\n      \"embossBusinessName\" : \"Ms. Leroy Leffler\",\n      \"alias\" : \"pf8cekbkaicxe72hy2be5m5nrounqwlfjcujal23uhpkhupbec07t4u2rksp3wlhjwr3beypdny3ohe3zvy0j8tnx2s97voq942i866pzihxqgx40b0e4hvccy5ibwbg6q47qtv0gghqhw1xtke7w4puw5sxa8q4gvork1uyonwbq5sl2\",\n      \"embossCardName\" : \"Mr. Ellamae Durgan\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 8230148605574174611,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-10-07T22:20:07.961Z\",\n      \"maskedPan\" : \"8mv9zam4k2dnz\",\n      \"provider\" : \"1jardq8spnqxrm9h041otfdw1xuqm\",\n      \"cardId\" : 5636689320909145182,\n      \"embossBusinessName\" : \"Roland Hauck\",\n      \"alias\" : \"7fe564ndt24kxpui4xtxrmv3dj0492kbrlj3ub7s251ktzguzfala5ui1ulslbl8ng9mh3q7zvdi6j19rtgwfnyivtco8bk\",\n      \"embossCardName\" : \"Louisa Hettinger\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-09T17:44:04.962Z\",\n      \"maskedPan\" : \"1c2nmffglrskozezy0lsdmjvqwzgfge\",\n      \"provider\" : \"bakbgot7jzhhfnupr0vgwhj779mt43vnjtshksyf238hehbtv0f8m5xgyhmt6r42fodfpokejgdz77l0s77qu95elhq4e5ifnjwq624zsad105y88wtqx\",\n      \"cardId\" : 3660667221853119149,\n      \"embossBusinessName\" : \"Brandie Crona\",\n      \"alias\" : \"uvq2euhafcek8cz4j08jyjgakl\",\n      \"embossCardName\" : \"Ralph Heller II\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-04T04:33:10.962Z\",\n      \"maskedPan\" : \"vacv2nzdr3xq5ygwkr5apwyg1n8wvdz8qg\",\n      \"provider\" : \"w8ete32gnkou677p2foh8cx7w0gr9y6ydd178cqc0ztq9tfrjny9t28c259z3z6zn1fdb3hfnmy7rmo1zps61c8l40nqa\",\n      \"cardId\" : 6639683671060454299,\n      \"embossBusinessName\" : \"Ms. Cory Hintz\",\n      \"alias\" : \"6st256sftiiljbfvwo4dvjyn6kj8msdxo3r08yegkr9ja62krkugtvjn4eggal2c9s2tm0zgb265o5drz8qjctp75dd4wvjxqsk3mxv9f2rtykz2ml0xub3rheoxerb7qvzfoqch\",\n      \"embossCardName\" : \"Rayford Jerde\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-12-24T16:33:31.962Z\",\n      \"maskedPan\" : \"70lfws5m2z0l75h1dcocqup9unuuwsnms28vnt2o2wm19unwioj4udapf3ne2nvjhtk71bz3uke2a964cz0ejorjkgztd4h0ixs8areunqvg7v4i1gcm4yu9r823ddt0k60ll5oruyekkkq6cxa1yk1luw59jeutt\",\n      \"provider\" : \"6s3gwz9elo3apbrpbqduw2ifdggmj06jwxfhzf0uuazh749vlq8ilx3f50uamu5wqqi9h2v4vqmk7lzcsesv1xtj8hz9kvvuzdogr493h3yvs7qg04px3\",\n      \"cardId\" : 8367461199249031982,\n      \"embossBusinessName\" : \"Ms. Malcolm Beer\",\n      \"alias\" : \"mte5y587axg524vomqq339b029hdfae8z56o9h80r1hh40xwcgq6gfhudc0xsb2gqpld67974o2i7m5w7mhzzhpj9xtw4gis5os38u2tpg\",\n      \"embossCardName\" : \"Troy Wunsch\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-26T01:51:43.962Z\",\n      \"maskedPan\" : \"zcmn7o6nnkezo6ols3ktpc763fwk8m16xnh8ajgxmff2s7iiwegbfmy8fudm97icksfpzypnv3x70zgqnx68wwjgaptycuia7q7iegxrxd013pqbjyj3bd8o8k8yltvj60m3s6gfset0ye0uebe4myyyljo17lrhhgahhb24d07w\",\n      \"provider\" : \"jz7qasvk0n763elgnh1c8rl9htz5wtpzwwsu5kvqm6mpcs9lgzyh7r354bbn25h8vsig16rcmtj6x0s3pp9puz0yvke9luss7it0j5axmjtasi5hxl0spyclf2pver4exk40bh\",\n      \"cardId\" : 8360543664490241271,\n      \"embossBusinessName\" : \"Nichole Fadel\",\n      \"alias\" : \"hexvavhwor8ervrrqanyn0z8a12c4yhp16rxnyp26vpyiqej4mf2eqin5273gwuyigho4dzkfvnz65l0t3o4euwpfdq8p1zg8hmbhbmf561ezgue516477yuy6gw1n9srdul4gkq5lvhff524g5ridjhp5bsstbpbox48w\",\n      \"embossCardName\" : \"Juan Wilderman\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-30T06:53:29.963Z\",\n      \"maskedPan\" : \"j0ihoipgoqzagi7lhl6805ym19m06mz1cutos8ljzbenk101n0hofyhktm0ftnb6bs1d25lstlpmjl1pxa2ybjvr3vla1ejageou81xavdkaud01n3kzr3q32jc5cc9c8iywwcli03whcl\",\n      \"provider\" : \"0jhnzmeiiematj22evfbxr8ixnds4vbrz4sg7gryo2xuv2j6fxgz5w7kqs3wbnnkrmwvgumqjwq0kprjfnxak47wa1ple2drwpfz6cgadsv9uwjlisewzl01m6d6hnc9t93ced0eonrortrdron2979hx\",\n      \"cardId\" : 6391180258050755890,\n      \"embossBusinessName\" : \"Emilio Schiller\",\n      \"alias\" : \"zgng\",\n      \"embossCardName\" : \"Whitney Stanton\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-03-08T01:07:50.963Z\",\n      \"maskedPan\" : \"belhpadqvsq2sdyo0mflxwk1sfkbwfakt8myttyu4t6bq4ntghz3qh99cfjbgimf0lbmb94ifixbb7kkg819qg0kcokxksgj2viw81182phz79pl8ob0ny09hbg06p1qdgpwyi1evo5ynsnwo7jrlr9\",\n      \"provider\" : \"uhfvvyhnvbzd335fe5cs8u2dhd8zeyni01loe\",\n      \"cardId\" : 6773940887624115236,\n      \"embossBusinessName\" : \"Tristan Cruickshank\",\n      \"alias\" : \"6cdmq5f95e77kgwv3c7kvdz3ozreebb\",\n      \"embossCardName\" : \"Dwain Cremin\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 4043802164129634053,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-11-15T13:21:48.963Z\",\n      \"maskedPan\" : \"s4mrx5gvyk283kevdw736xajs88ezhubo8kzssgx\",\n      \"provider\" : \"czggmwdibnutggimq9fbbs6yh08xotj1v3tsbfrtgopuxpmcj0g0l8\",\n      \"cardId\" : 680172209279332555,\n      \"embossBusinessName\" : \"Kristofer Spencer\",\n      \"alias\" : \"qqu2t1jiv0y9j6bsmxkl23kk2eqwx4rx4u7y3dldcdlqfnnayl4ks4o6hlcfhcpgufqtmo43u8yg4r5jrs6l81gp77lx0ew1cw5m5lcztfpv3vqdyk0pvrycztjajejoeau\",\n      \"embossCardName\" : \"Ms. Siobhan Walsh\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef987cf3-d672-3731-abaf-93aec1c63037",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getListofCardTransactions",
          "schema" : {
            "items" : {
              "properties" : {
                "dateRangeTo" : {
                  "description" : "milisecond timestamp of date range to value.",
                  "example" : 1547744156603,
                  "type" : "integer"
                },
                "total" : {
                  "description" : "The total number of card transactions in the list.",
                  "example" : 1,
                  "type" : "integer"
                },
                "transactions" : {
                  "items" : {
                    "properties" : {
                      "amountAfterCharges" : {
                        "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "amountBeforeCharges" : {
                        "description" : "Amount of the transaction before the fees and taxes were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "balance" : {
                        "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                        "example" : 8500,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "batchItemDetails" : {
                        "description" : "Details of the batch run if this transaction was part of a batch.",
                        "properties" : {
                          "batchItemPublicUuid" : {
                            "description" : "The UUID for this item in the batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "batchName" : {
                            "description" : "The optional name given to the batch at creation time.",
                            "example" : "Payroll 2022-11",
                            "type" : "string"
                          },
                          "batchPublicUuid" : {
                            "description" : "The UUID for this batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "jobNumber" : {
                            "description" : "The optional job number given to the batch to link it to your own system.",
                            "example" : "2018-01-PR",
                            "type" : "string"
                          }
                        },
                        "title" : "batchItemDetails",
                        "type" : "object"
                      },
                      "card" : {
                        "description" : "Details of the card used (if applicable)",
                        "properties" : {
                          "alias" : {
                            "type" : "string"
                          },
                          "cardId" : {
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "embossBusinessName" : {
                            "type" : "string"
                          },
                          "embossCardName" : {
                            "type" : "string"
                          },
                          "expiryDate" : {
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "maskedPan" : {
                            "type" : "string"
                          },
                          "provider" : {
                            "type" : "string"
                          }
                        },
                        "title" : "relatedCard",
                        "type" : "object"
                      },
                      "currency" : {
                        "description" : "The currency.",
                        "properties" : {
                          "code" : {
                            "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                            "enum" : [ "EUR", "GBP" ],
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "The name of the currency",
                            "example" : "Euro",
                            "type" : "string"
                          }
                        },
                        "title" : "currency",
                        "type" : "object"
                      },
                      "date" : {
                        "description" : "Date of the transaction",
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "dateAcknowledged" : {
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "directDebitDetails" : {
                        "description" : "Details of the direct debit (if applicable)",
                        "properties" : {
                          "directDebitReference" : {
                            "description" : "The direct debit reference.",
                            "example" : "VODA-ABC453-1",
                            "type" : "string"
                          },
                          "directDebitUuid" : {
                            "description" : "The UUID for the direct debit payment",
                            "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                            "type" : "string"
                          },
                          "mandateReference" : {
                            "description" : "the reference of the mandate",
                            "example" : "CRZ-102190123",
                            "type" : "string"
                          },
                          "mandateUUid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                            "type" : "string"
                          },
                          "mandateUuid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                            "type" : "string"
                          },
                          "originatorAlias" : {
                            "description" : "The Alias of the party who sets up the direct debit.",
                            "example" : "Three",
                            "type" : "string"
                          },
                          "originatorLogoUrlLarge" : {
                            "description" : "URL pointing to a large version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorLogoUrlSmall" : {
                            "description" : "URL pointing to a small version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorName" : {
                            "description" : "The creator of the party who sets up the direct debit.",
                            "example" : "Vodafone PLC",
                            "type" : "string"
                          },
                          "originatorReference" : {
                            "description" : "Set by party who sets up the direct debit.",
                            "example" : "VODA-123456",
                            "type" : "string"
                          }
                        },
                        "title" : "directDebitDetails",
                        "type" : "object"
                      },
                      "eventUuid" : {
                        "description" : "An internal Fire reference for the transaction (UUID)",
                        "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                        "type" : "string"
                      },
                      "feeAmount" : {
                        "description" : "The amount of the fee, if any.",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "fxTradeDetails" : {
                        "description" : "Details of the FX trade (if applicable)",
                        "properties" : {
                          "buyAmount" : {
                            "description" : "amount of buyCurrency being bought",
                            "example" : 359,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "buyCurrency" : {
                            "description" : "currency which is being bought",
                            "example" : "GBP",
                            "type" : "string"
                          },
                          "fixedSide" : {
                            "description" : "type of trade - BUY or SELL",
                            "example" : "SELL",
                            "type" : "string"
                          },
                          "provider" : {
                            "description" : "The FX provider used to make the trade.",
                            "example" : "TCC",
                            "type" : "string"
                          },
                          "rate4d" : {
                            "description" : "exchange rate",
                            "example" : 7180,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellAmount" : {
                            "description" : "amount of sellCurrency being sold",
                            "example" : 500,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellCurrency" : {
                            "description" : "currency which is being sold",
                            "example" : "EUR",
                            "type" : "string"
                          }
                        },
                        "title" : "fxTrade",
                        "type" : "object"
                      },
                      "ican" : {
                        "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                        "example" : 1951,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "myRef" : {
                        "description" : "The comment/reference on the transaction",
                        "example" : "Transfer to main account",
                        "type" : "string"
                      },
                      "paymentRequestPublicCode" : {
                        "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                        "example" : "1abcdefg",
                        "type" : "string"
                      },
                      "proprietarySchemeDetails" : {
                        "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                        "items" : {
                          "properties" : {
                            "data" : {
                              "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                              "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                              "type" : "string"
                            },
                            "type" : {
                              "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                              "example" : "SCT",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "title" : "proprietarySchemeDetails",
                        "type" : "array"
                      },
                      "refId" : {
                        "description" : "The id of the transaction.",
                        "example" : 26774,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "relatedParty" : {
                        "description" : "Details of the related third party involved in the transaction.",
                        "oneOf" : [ {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "identifier for the fire.com account (assigned by fire.com)",
                                  "example" : 42,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "FIRE_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyFireAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "EXTERNAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyExternalAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "The account number of the Withdrawl account in reference",
                                  "example" : "00000000",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "The Alias name of the Withdrawl account in reference",
                                  "example" : "Smyth and Co.",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "IE76CPAY99119900000000",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "The ID number of the Withdrawl account in reference",
                                  "example" : 123,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                  "example" : "991199",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyPayee",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "cardMerchant" : {
                              "properties" : {
                                "acquirerIdDe32" : {
                                  "example" : 6011329,
                                  "type" : "string"
                                },
                                "additionalAmtDe54" : {
                                  "type" : "string"
                                },
                                "additionalDataDe124" : {
                                  "type" : "string"
                                },
                                "additionalDataDe48" : {
                                  "example" : "010X610500000",
                                  "type" : "string"
                                },
                                "authCodeDe38" : {
                                  "example" : "177449",
                                  "type" : "string"
                                },
                                "authorisedByGps" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "avsResult" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "billAmt" : {
                                  "example" : -1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "billCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "expiryDate" : {
                                  "type" : "string"
                                },
                                "mccCode" : {
                                  "example" : "5521",
                                  "type" : "string"
                                },
                                "merchIdDe42" : {
                                  "example" : 13152429,
                                  "type" : "string"
                                },
                                "merchNameDe43" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "mtId" : {
                                  "example" : "0100",
                                  "type" : "string"
                                },
                                "posDataDe22" : {
                                  "example" : "051",
                                  "type" : "string"
                                },
                                "posDataDe61" : {
                                  "example" : 1000030037299999,
                                  "type" : "string"
                                },
                                "posTermnlDe41" : {
                                  "example" : "80266721",
                                  "type" : "string"
                                },
                                "procCode" : {
                                  "example" : "000000",
                                  "type" : "string"
                                },
                                "recordDataDe120" : {
                                  "type" : "string"
                                },
                                "respCodeDe39" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "retRefNoDe37" : {
                                  "example" : 10900006720,
                                  "type" : "string"
                                },
                                "statusCode" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "token" : {
                                  "example" : "976307363",
                                  "type" : "string"
                                },
                                "txnAmt4d" : {
                                  "example" : 1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "txnCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "txnCtry" : {
                                  "example" : "IRL",
                                  "type" : "string"
                                },
                                "txnDesc" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "txnStatCode" : {
                                  "example" : "A",
                                  "type" : "string"
                                },
                                "txnType" : {
                                  "example" : "A",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyCardPayment",
                          "type" : "object"
                        } ],
                        "title" : "relatedParty"
                      },
                      "taxAmount" : {
                        "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "txnId" : {
                        "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                        "example" : 30157,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "type" : {
                        "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                        "example" : "WITHDRAWAL",
                        "type" : "string"
                      },
                      "yourRef" : {
                        "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                        "example" : "From John Smith",
                        "type" : "string"
                      }
                    },
                    "title" : "transaction",
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "title" : "cardTransactionsv1",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "25f63312-e037-380b-aae9-24949d7aacb8",
    "name" : "Block a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/1679934010236489645/block",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "25f63312-e037-380b-aae9-24949d7aacb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "blockCard"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "9a788010-363d-34e8-83e3-952393f4e47c",
    "name" : "Create a new debit card.",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n  \"maskedPan\" : \"537455******1111\",\n  \"cardId\" : 51,\n  \"status\" : \"CREATED_ACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a788010-363d-34e8-83e3-952393f4e47c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createNewCard",
          "schema" : {
            "properties" : {
              "cardId" : {
                "example" : 51,
                "format" : "int64",
                "type" : "integer"
              },
              "expiryDate" : {
                "example" : "2019-01-31T00:00:00.000Z",
                "format" : "date-time",
                "type" : "string"
              },
              "maskedPan" : {
                "example" : "537455******1111",
                "type" : "string"
              },
              "status" : {
                "enum" : [ "CREATED_ACTIVE", "CREATED_INACTIVE" ],
                "example" : "CREATED_ACTIVE",
                "type" : "string"
              }
            },
            "title" : "newCardResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "d69ef2a1-7980-3a07-ad7d-5b5980af4c8d",
    "name" : "View List of Cards. - 403",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "d69ef2a1-7980-3a07-ad7d-5b5980af4c8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "3f475f3e-dbc0-329f-9cdf-b4e03e983614",
    "name" : "View List of Cards. - 401",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "3f475f3e-dbc0-329f-9cdf-b4e03e983614",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "4f7b69c3-f98b-35d7-872c-8b14fd1235d3",
    "name" : "View List of Cards. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cards\" : [ {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f7b69c3-f98b-35d7-872c-8b14fd1235d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getListofCards",
          "schema" : {
            "properties" : {
              "cards" : {
                "items" : {
                  "properties" : {
                    "blocked" : {
                      "description" : "Whether the card is blocked or not",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "cardId" : {
                      "description" : "card id assigned by fire.com",
                      "example" : 51,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "dateCreated" : {
                      "description" : "The date-time the card was created",
                      "example" : "2017-01-19T16:38:15.803Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "emailAddress" : {
                      "description" : "card user email address",
                      "example" : "user@example.com",
                      "type" : "string"
                    },
                    "eurIcan" : {
                      "description" : "identifier for the eur fire.com account (assigned by fire.com)",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "expiryDate" : {
                      "description" : "card expiry date",
                      "example" : "2019-01-31T00:00:00.000Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "firstName" : {
                      "description" : "card user first name",
                      "example" : "John",
                      "type" : "string"
                    },
                    "gbpIcan" : {
                      "description" : "identifier for the gbp fire.com account (assigned by fire.com)",
                      "example" : 2152,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastName" : {
                      "description" : "card user last name",
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "maskedPan" : {
                      "description" : "card number (masked)",
                      "example" : "537455******1111",
                      "type" : "string"
                    },
                    "provider" : {
                      "description" : "card provider",
                      "enum" : [ "MASTERCARD" ],
                      "example" : "MASTERCARD",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "card status",
                      "enum" : [ "LIVE", "CREATED_ACTIVE", "CREATED_INACTIVE", "DEACTIVATED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    },
                    "statusReason" : {
                      "description" : "reason for card status",
                      "enum" : [ "LOST_CARD", "STOLEN_CARD", "CARD_DESTROYED" ],
                      "example" : "LOST_CARD",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "card user id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "card",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cards",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "0533656f-8448-322e-8b39-ee4d20823b3b",
    "name" : "Remove a Payment from the Batch (Internal Transfer) - 200",
    "request" : {
      "urlPath" : "/v1/batches/91fa7370-982e-36d6-89da-92711f97362b/internaltransfers/6ff84020-5212-383c-ae8c-d7789450d855",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0533656f-8448-322e-8b39-ee4d20823b3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteInternalTransferBatchPayment"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "bd23fd63-5845-332a-8942-a68acbd6830e",
    "name" : "Add an internal transfer payment to the batch",
    "request" : {
      "urlPath" : "/v1/batches/fdeb890c-389e-3f08-928f-ae64897a72be/internaltransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd23fd63-5845-332a-8942-a68acbd6830e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addInternalTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "0e9cb20b-0d44-3a25-a2c1-90d8df0ee9f5",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/123b6028-02b8-3b12-9a3c-f270103f6952/internaltransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e9cb20b-0d44-3a25-a2c1-90d8df0ee9f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getItemsBatchInternalTrasnfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "9cc73408-5751-351f-9b16-9de4a2706553",
    "name" : "Remove a Payment from the Batch (Bank Transfers) - 200",
    "request" : {
      "urlPath" : "/v1/batches/455adece-a8d2-3277-843b-744c75574ffc/banktransfers/5f23b202-ad69-32cd-9b0d-c260dcbcfed0",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9cc73408-5751-351f-9b16-9de4a2706553",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteBankTransferBatchPayment"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "fb0cf0fd-b1ae-3beb-a623-8252aa9a41f0",
    "name" : "Add a bank transfer payment to the batch.",
    "request" : {
      "urlPath" : "/v1/batches/8c9361ad-9047-3b97-b825-c4c16ee98249/banktransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb0cf0fd-b1ae-3beb-a623-8252aa9a41f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addBankTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "ba1a5831-a249-32fd-8180-445cacad046b",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/44f3ecd3-7f07-3a22-bf0b-a11c2c1b98cd/banktransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba1a5831-a249-32fd-8180-445cacad046b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getItemsBatchBankTransfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "5829dc2e-c9c4-3181-b88d-40ec113aefce",
    "name" : "List Approvers for a Batch",
    "request" : {
      "urlPath" : "/v1/batches/833ea581-29d6-30ef-9395-efe70e1647f5/approvals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approvals\" : [ {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5829dc2e-c9c4-3181-b88d-40ec113aefce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getListofApproversForBatch",
          "schema" : {
            "properties" : {
              "approvals" : {
                "items" : {
                  "properties" : {
                    "emailAddress" : {
                      "description" : "User email address",
                      "example" : "jane.doe@example.com",
                      "type" : "string"
                    },
                    "firstName" : {
                      "example" : "Jane",
                      "type" : "string"
                    },
                    "lastName" : {
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mobileNumber" : {
                      "example" : 353871234567,
                      "type" : "string"
                    },
                    "status" : {
                      "example" : "PENDING_APPROVAL",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "User id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "batchApprovers",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "a4d1e622-96cb-348d-ad82-00c964fcef2f",
    "name" : "Submit a batch for approval - 204",
    "request" : {
      "urlPath" : "/v1/batches/0aff1f77-4ca1-3d02-85fc-fa8696003e91",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a4d1e622-96cb-348d-ad82-00c964fcef2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "submitBatch"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "13939667-489b-3d96-b6d2-fd3cd60694a7",
    "name" : "Get details of a single Batch",
    "request" : {
      "urlPath" : "/v1/batches/10de8eeb-e2b5-333d-9b91-d7b8be4bab6f",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchName\" : \"January 2018 Payroll\",\n  \"valueOfItemsSubmitted\" : 10000,\n  \"numberOfItemsFailed\" : 0,\n  \"numberOfItemsSucceeded\" : 1,\n  \"type\" : \"NEW_PAYEE\",\n  \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n  \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n  \"numberOfItemsSubmitted\" : 1,\n  \"callbackUrl\" : \"https://my.webserver.com/cb/payroll\",\n  \"currency\" : \"EUR\",\n  \"sourceName\" : \"Payment API\",\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n  \"jobNumber\" : \"2018-01-PR\",\n  \"valueOfItemsSucceeded\" : 10000,\n  \"status\" : \"COMPLETE\",\n  \"valueOfItemsFailed\" : 0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13939667-489b-3d96-b6d2-fd3cd60694a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getDetailsSingleBatch",
          "schema" : {
            "properties" : {
              "batchName" : {
                "description" : "An optional name you give to the batch at creation time",
                "example" : "January 2018 Payroll",
                "type" : "string"
              },
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              },
              "callbackUrl" : {
                "description" : "An optional POST URL that all events for this batch will be sent to.",
                "example" : "https://my.webserver.com/cb/payroll",
                "type" : "string"
              },
              "currency" : {
                "description" : "All payments in the batch must be the same currency - either EUR or GBP",
                "example" : "EUR",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "jobNumber" : {
                "description" : "An optional job number you can give to the batch to help link it to your own system.",
                "example" : "2018-01-PR",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "numberOfItemsFailed" : {
                "description" : "Once processed, a count of the number of items that didn’t process successfully.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSubmitted" : {
                "description" : "A count of the number of items in the batch",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSucceeded" : {
                "description" : "Once processed, a count of the number of items that processed successfully.",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "sourceName" : {
                "description" : "A string describing where the batch originated - for instance the name of the API token that was used, or showing that the batch was automatically created by fire.com (in the case of a new payee batch).",
                "example" : "Payment API",
                "type" : "string"
              },
              "status" : {
                "description" : "status of the batch object",
                "enum" : [ "PENDING_APPROVAL", "REJECTED", "COMPLETE", "OPEN", "CANCELLED", "PENDING_PARENT_BATCH_APPROVAL", "READY_FOR_PROCESSING", "PROCESSING" ],
                "example" : "COMPLETE",
                "type" : "string"
              },
              "type" : {
                "description" : "The type of the batch - can be one of the listed 3",
                "enum" : [ "INTERNAL_TRANSFER", "BANK_TRANSFER", "NEW_PAYEE" ],
                "type" : "string"
              },
              "valueOfItemsFailed" : {
                "description" : "Once processed, a sum of the value of items that didn’t process successfully. Specified in pence or cent.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSubmitted" : {
                "description" : "A sum of the value of items in the batch. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSucceeded" : {
                "description" : "Once processed, a sum of the value of items that processed successfully. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batch",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "37694afd-705e-35bb-9daa-96a7c5dcf04e",
    "name" : "Cancel a batch - 200",
    "request" : {
      "urlPath" : "/v1/batches/62f99bb4-345e-3ace-bc05-d29d6e1923a9",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "37694afd-705e-35bb-9daa-96a7c5dcf04e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cancelBatchPayment"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "79e776b9-fad2-3444-a25e-56d4055cbd85",
    "name" : "Create a new batch of payments",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79e776b9-fad2-3444-a25e-56d4055cbd85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createBatchPayment",
          "schema" : {
            "properties" : {
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              }
            },
            "title" : "newBatchResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "509e6c16-95b6-3d20-9943-a86449d73dd6",
    "name" : "List batches",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "509e6c16-95b6-3d20-9943-a86449d73dd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getBatches",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "47300ea7-2cf6-3ad7-aef9-6aeba6c01e35",
    "name" : "Get list of ASPSPs / Banks",
    "request" : {
      "urlPath" : "/v1/aspsps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 10,\n  \"aspsps\" : [ {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47300ea7-2cf6-3ad7-aef9-6aeba6c01e35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getListOfAspsps",
          "schema" : {
            "properties" : {
              "aspsps" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the ASPSP / bank.",
                      "example" : "Demo Bank",
                      "type" : "string"
                    },
                    "aspspUuid" : {
                      "description" : "The UUID associated with the ASPSP / bank.",
                      "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                      "type" : "string"
                    },
                    "country" : {
                      "properties" : {
                        "code" : {
                          "description" : "The 2-letter code for the country - e.g. `IE`, `GP`...",
                          "example" : "GB",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the country",
                          "example" : "United Kingdom",
                          "type" : "string"
                        }
                      },
                      "title" : "country",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the ASPSP / bank was created.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The date the ASPSP / bank was last updated.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "logoUrl" : {
                      "description" : "A link to the ASPSP / bank's logo in SVG format.",
                      "example" : "https://assets.fire.com/pisp/demo.svg",
                      "type" : "string"
                    }
                  },
                  "title" : "aspsp",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of ASPSPs in the list.",
                "example" : 10,
                "type" : "integer"
              }
            },
            "title" : "aspsps",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "4a021595-014c-33a8-b3e4-95036a0e7b8b",
    "name" : "Authenticate with the API.",
    "request" : {
      "urlPath" : "/v1/apps/accesstokens",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiApplicationId\" : 433,\n  \"permissions\" : [ \"PERM_BUSINESSES_GET_ACCOUNTS\", \"PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS\" ],\n  \"businessId\" : 248,\n  \"expiry\" : \"2020-10-22T07:48:56.460Z\",\n  \"accessToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a021595-014c-33a8-b3e4-95036a0e7b8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "authenticate",
          "schema" : {
            "properties" : {
              "accessToken" : {
                "description" : "The App Bearer Access Token you can use in further API calls.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "apiApplicationId" : {
                "description" : "The ID of the application you are using.",
                "example" : 433,
                "format" : "int64",
                "type" : "integer"
              },
              "businessId" : {
                "description" : "The business ID for the business.",
                "example" : 248,
                "format" : "int64",
                "type" : "integer"
              },
              "expiry" : {
                "description" : "The expiry date and time for this token (ISO-8601).",
                "example" : "2020-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "permissions" : {
                "description" : "The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.",
                "example" : [ "PERM_BUSINESSES_GET_ACCOUNTS", "PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS" ],
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "title" : "accessToken",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "ebe1e309-2c93-3266-a745-01a9c44a6ad7",
    "name" : "Create a new API Application",
    "request" : {
      "urlPath" : "/v1/apps",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clientId\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"numberOfPayeeApprovalsRequired\" : 1,\n  \"clientKey\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"ican\" : 584515717819437214,\n  \"expiry\" : \"2019-08-22T07:48:56.460Z\",\n  \"applicationId\" : 45345,\n  \"numberOfPaymentApprovalsRequired\" : 1,\n  \"enabled\" : true,\n  \"refreshToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebe1e309-2c93-3266-a745-01a9c44a6ad7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createApiApplication",
          "schema" : {
            "properties" : {
              "applicationId" : {
                "description" : "The ID of the API Application",
                "example" : 45345,
                "format" : "int64",
                "type" : "integer"
              },
              "clientId" : {
                "description" : "The Client ID of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "clientKey" : {
                "description" : "The Client Key of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Whether or not this API Application can be used",
                "example" : true,
                "type" : "boolean"
              },
              "expiry" : {
                "description" : "The date that this API Application can no longer be used.",
                "example" : "2019-08-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "ican" : {
                "description" : "The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.",
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfPayeeApprovalsRequired" : {
                "description" : "Number of approvals required to create a payee in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "numberOfPaymentApprovalsRequired" : {
                "description" : "Number of approvals required to process a payment in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "refreshToken" : {
                "description" : "The Refresh Token of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              }
            },
            "title" : "apiApplication",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "628adfcb-83ba-312b-834e-2cd047dcd78f",
    "name" : "Filtered list of transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/2978869787989820982/transactions/filter",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4383139136574224443"
        },
        "transactionTypes" : {
          "equalTo" : "cz1rlfxwoldi573aq0evsdilb1ysrfi7du8bytdcyigyx8ciw80oo4pt0brlwmgm99ad8fovky9dh1d5ztcgj4doc7k3jb43p5hh1b2tz6fvwrhg4ne0ry1kbcsu2aekw5r2lipgbelg5kpazdes68d1x7ip73gz8ruumgg6n"
        },
        "dateRangeTo" : {
          "equalTo" : "1050816016295881244"
        },
        "searchKeyword" : {
          "equalTo" : "dpavy7v7pand58qp5tvnryim8dintx9kf5cgbk6dsu2u5ilrcne6lucgdz2d24bds45kejwof3wqtj7vk4hmjamcz5jct9dxzbj1t9cvmq0l"
        },
        "dateRangeFrom" : {
          "equalTo" : "1074237137510969097"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 6631311643147246206,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-20T22:16:15.951Z\",\n      \"maskedPan\" : \"8edw9cfathro9n3p2juf850e0f2evg9x1tuz7r1\",\n      \"provider\" : \"jaw5vobsgb40807cxkmae7v4n61f96349dsmnoav5iaait0p9roq9gcm2nmv7babrptnkbykn7ux1qfy24hx3es4bcjvk9y7d80so1v81xoipm8m13in01wz8kvad9amfo3edtarozc8jyw\",\n      \"cardId\" : 1053771482483959012,\n      \"embossBusinessName\" : \"Dr. Alfred Green\",\n      \"alias\" : \"835yinmgqr8kb3hoq67nrdesnipj1ax\",\n      \"embossCardName\" : \"Billy Heidenreich\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-02-25T13:30:23.951Z\",\n      \"maskedPan\" : \"9j4uk6qc9euapm5f8uwaatuysqy7arm570map\",\n      \"provider\" : \"23dz9xxrbea4vf7uc9q1ksiql70kxp9hqwj72s5mt0e71avs4pf2dhvk\",\n      \"cardId\" : 5104523005211981944,\n      \"embossBusinessName\" : \"Nathanael Mante\",\n      \"alias\" : \"5to6owqsdei9d86r5tdt7nnohvjouu5ytc9hphs2bvrirrd2mlq6rvujpnfw2gs40jid5qxo72\",\n      \"embossCardName\" : \"Geraldo Block\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-09-03T11:23:06.952Z\",\n      \"maskedPan\" : \"08bh054zz93c9\",\n      \"provider\" : \"5rrkkntnxxue0uouhdjicm5vtqp0agixqn33bjx2kedd6bw3x19n3qnrx1czaimcl\",\n      \"cardId\" : 453240160793186717,\n      \"embossBusinessName\" : \"Allena McClure\",\n      \"alias\" : \"k9ak9u13y5pg32o66qz246fbm22bte46g882yhnc063pst09cmcm2k57hou868f94l152n6c8et2tanh0le7x23cw28ypineybq462bbjw0jkjhcp8j4b3pmvxkm7pg1iz79anjxk90zf664pxg6r5fhfck79luq3jrkidp3zjgjnb3bsic0w26qjvaatmahtaaemm\",\n      \"embossCardName\" : \"Milan Hyatt\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"syx6nixafquxnx1y62zlhl4kc1348vys4fve3ryyp1izv2rgapzgcw86p76wdw2rc0atotyz7zkysgccvkynlakzunhui54qgzvu2ckd755oe9ojrsakgksnak9a8mzpo1qfxor54zdmf7zw9dwpvw1f1nx45fzt51uu4\",\n        \"additionalDataDe124\" : \"bwen78s2u0ff9ve5mnc5pjyvjsdocyb0hn1zpw1ldrnwcodnofhpvc7m2bv60nvw8at3kiox27k8lxzjxl1twh0dhtpezamd8pptcnbzdsrk4i25lyeqp3rj1n6v4mq\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-08-03T15:58:32.952429Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"nadub322kssg28ftzy5cwalrc0cvhgvlcwfb5blzg6ib2ik3bjgsq0i13jv45myino3g2n236nnvm6bkiy5aff\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-19T00:06:39.952Z\",\n      \"maskedPan\" : \"6wh42fi5vtp5ruryzmq9237uexik657qo0lsrsgbhpzfwllrf6nkkgvrownxn91au7re7v70kfl453wv04fbmam6x3q99imkc3vvtobl0hmilwhobjk3xw7qxsqag9blmllruzjpxp1ogxr2tdlhlijn0pzpgdkl7d6v9tcxr8xiz9zt0o6rt\",\n      \"provider\" : \"jvbyw2m1th7nyrxz70qlfzcl73acr2u1opwldyym83vaptdl0j0xn2af45lmyooisqsbqkk5je0mk\",\n      \"cardId\" : 4593503695221045371,\n      \"embossBusinessName\" : \"Jimmie Hand\",\n      \"alias\" : \"yk4qi2lq2p8u9tzptpcp3n9dc8uf3vko8e3uihb1hrtvxhh9gi3asxjaa1qdg3w4wmohi0rya1pz8txprs840l1t19sh0d9lmegi668bfc1jw6bct2ot3ba09un9xdhwjxfy04hab68x9vn4w2twgy\",\n      \"embossCardName\" : \"Edris Langworth\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "628adfcb-83ba-312b-834e-2cd047dcd78f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTransactionsFilteredById",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "53a279a7-4d63-3a4e-964b-a2d062cfa77a",
    "name" : "List transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/7683944045881743532/transactions",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "132429178449429474"
        },
        "limit" : {
          "equalTo" : "1414172176381203238"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"bib6mh2vc1bxvbik5ng4mnmmvn9bfvkndzj17fg920ud44us9m7mg5qtsba01pbrbmyem1l335nzwpm5kxnwh4kyhj91bm0dfa2xnrssppww3nhqtzughpx5dmpvmx2\",\n        \"additionalDataDe124\" : \"varhq5o91ktbxr6wsu4li2ymso41q96ak0r0skwhm5vacyte5y4gmweep1ol2obb74947yswv34g1mu7vsdg8v06657upu\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-09-07T15:32:32.947701Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"gikp3vxjvuylzt0s47lfzwe30dwgc2iaqu3fh960qiabwwdfn8t4gs73vqg27ohlfgyccqb5653avfbwqkgzl21qo07vnc2kqclt7lbqknymoetq2ttk\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-29T23:51:56.947Z\",\n      \"maskedPan\" : \"gvkxbbcfkcctqlkb3h3p4150ki4n4pqd85o3z7b7hr14b2zohk6cfype9qkiwynn626gzhhr6c1eb32rbt8jz7p2zwt9mkw02vdrxxlgntgo4n7cb3mawkh9nt2henb1pkb4qsva3b1ktnlui04evtyz8ppj0ksd2hanmtn5j\",\n      \"provider\" : \"b4fzho5943sjwxy3jhl07hyoz5oyu53f7j3gxwx6nb4yxn84vdkp21jcczvyfftgsqgmz0ofsen08m47k3k0szunouupy43ujw\",\n      \"cardId\" : 6785753309846498394,\n      \"embossBusinessName\" : \"Dong Frami\",\n      \"alias\" : \"czcmb3a5sv6n1qdhgx6mvwu8m9euoeykvnq5oojewlv3uhuet4ixtfu5jjzay6f213odtias3v555wq7fe3b3hum0v7zfiv1k3uezgkjpfw151xp5dboe4udzbujr\",\n      \"embossCardName\" : \"Latia Koch\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-06-29T21:59:41.948Z\",\n      \"maskedPan\" : \"p6opddyr5ijlm1ta6ivsacudsxrxhvurus\",\n      \"provider\" : \"zwvz4qly90pwxx58jhxeloai0ilc71zzoygi7jmqf28sq7zodsom5yz5861tg5ebf0uc84qyy1hzcrmg5uu79v3aosc331y9au1815p9sc4yh4p1s5u4nm7k01cv4\",\n      \"cardId\" : 6309538935716802205,\n      \"embossBusinessName\" : \"Yaeko Runolfsson\",\n      \"alias\" : \"b9l6d46uyvm9gl26tlkaj4j0kdvbmpasz8tk6azu7dbmhscpc1xxlt7ymwg3aka2xy5yizubyex9fg56li0zoniyvxs1dlazrrcsyciczbj5d4x1pgsadepxkfpfnc7gyay6x781lo5xn4wh42twcfju5b4gnq4pitvkw6ofi5zftwpjaqvzshlaity\",\n      \"embossCardName\" : \"Miss Gustavo Nitzsche\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-02T06:36:35.948Z\",\n      \"maskedPan\" : \"64qzfm7hn5fgyd96u77w168v1us5wxvi02hktkl5etud7oaeg074w70zx49njlbhk8awio9qt1w5t6e8zc38wkhez06r8qkb7ut5zf8sby946sm4ra2tum67m3ovvxz9c4i5i112ld\",\n      \"provider\" : \"npr1lshw47gkmkr245syjcv458xqub0m9vkofwzikf0aaetauo1g1k24je0ugku4ppl12w7yah263ko1t9rl9hh0nv2ytxxsbyurp0zno32jtsauzwghot57bvvi1d3vz33e8go18tqz5drddc2\",\n      \"cardId\" : 2116284734331362576,\n      \"embossBusinessName\" : \"Cayla Klocko\",\n      \"alias\" : \"rwslujf6y75h9coy9bl7gc\",\n      \"embossCardName\" : \"Hobert Pollich\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 5778294529676429719,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-27T20:04:44.948Z\",\n      \"maskedPan\" : \"2r0y0c3yavsa95tzg48uolll5km30pqei5xuck83054j7cmylaizlgloco2jpkbf3x6az6eksbxmdjpi2iyjfccdntcps9t0p5uahdjiyl12brb8iajw3tqdtscje4w88r02v6d1az2alib\",\n      \"provider\" : \"jjf9sbj43l156epu0bi5yjrnvzgm9fljmc2eo8rdfif9wq5585mhvei2la93762cpz84fzhryj9q2mjhb7bmdr8vee58qsvw11dq\",\n      \"cardId\" : 6265033452382600620,\n      \"embossBusinessName\" : \"Joseph Funk\",\n      \"alias\" : \"xwgfhmzu9nkqfwhp2c366499rwgpyla3cy4hx6kqeooa4hnf24uupszzf3a356voegs4pirsmlmka4tc654xn1h1bkvt77amdukopeiv93oseguf1osnn1krhw8cdfqgynxty7743e4maq3wtpa0ho4s0znemb5258ljb4zq7y8ihgnl4rq8ekl871eh\",\n      \"embossCardName\" : \"Alisia Emmerich\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 2608589786579026994,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-28T18:59:34.949Z\",\n      \"maskedPan\" : \"klc098bwx5f1wrxhrsdn17cmx6v8iokmcpghlrd3hddc6fc4tw0ue0z8uq3i0b5p1574p7597y3i5lmoyu\",\n      \"provider\" : \"dhlwxrfmhkhype1u0o11m1ktvp1yc1sa4kriedu7mun3x21232ogthnlre2osgnyourfouivynsa7mkjepf7ezhullobpny47jq6u6ai68h6zzs7yp3j6z58b6sft3csws4b5mcs0exoc4a4der7hklj7\",\n      \"cardId\" : 3965440900333104032,\n      \"embossBusinessName\" : \"Jeanine Buckridge\",\n      \"alias\" : \"yol3e5dhhrdynu\",\n      \"embossCardName\" : \"Dewey Luettgen\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-03-24T23:04:07.949Z\",\n      \"maskedPan\" : \"nwffu66t8zfb1xupvhcybndeziznr213mddyq0og83qv5wfyosm19nxthfvdid4crgwaz2j1mxw34b6nejbyk19ptwv16qleag8wklok3q0wqggzn5n4fcxtt5470iqprqtzfnbuf1ft59t39vronuktm7x\",\n      \"provider\" : \"3krq4q3wpeszvscnbylrs859y5szmhydzisl7npp4z2fjk36jgi1k4haicjlgrp7hhy21ix6edk74jy2o7eakgu9zaosztw3lvm5244cgpwa8i09d5ngalnzajtnthhggtcaahp36lfrkglobw7y92lzn334dqfw2ngpt34ye65s42l2luzwdzvu9ul6ftvki\",\n      \"cardId\" : 325778383869418851,\n      \"embossBusinessName\" : \"Carl Will\",\n      \"alias\" : \"f8boy19m37yf54hd0epqkf7c17s1oa\",\n      \"embossCardName\" : \"Miss Georgene Kerluke\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"ogpi6cy1qa5y1ocgja86yf194moi7sicj32kvzs20hnx4dg8yekg4ivaa4r96h91ldj\",\n        \"additionalDataDe124\" : \"aks8vthoqrq2c0rvvg35eq9z4ejshuq00swyz9vyx0j6rss1n1ugm5q5p8uuzis2kpfjdc84la1jpmscp7743f34c0b6xab24eufxpa68yz4pp3noz1a7z4xtnvh8xzh33pz31efcixh055n4xkcrpk8gex58kg35jv6i30ko\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-03-31T13:27:32.949627Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"gdk2ai2xph8jqz0gd9nke5ab88dcvxdel9k21vf5cmz83h9ivnsx4gpg0t29nklys83qsll4337hgh8i11v\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-09-09T03:46:39.949Z\",\n      \"maskedPan\" : \"jm8mrcfckeciigoqyctp4ilvmh858xf1j1ep1xpauss4jvofwlykg4uaxvcc9agv1j5uwheywitt98rnvpkj7d8gl3v3xr3i0lgr7bezoa3jghftxeo0kwqt2712pbgpiif27oo6f6ukp9ymih79799qo93x46bstgmizmtadv2mv5h5wiolhotfzun\",\n      \"provider\" : \"1r20pwbzx3h45tlv6nqjs5woaa1du4vsjt7uw4ay0tv274cd55fud2ll6q5wdpgd6ho\",\n      \"cardId\" : 7660881119865269617,\n      \"embossBusinessName\" : \"Sergio Schimmel\",\n      \"alias\" : \"kpvt32wsdyjkgkd2nua1idm5etyoqbsf7lrdxqwf34ygqyggzi145jrtiggrxqi8m1123nel2h5yk6gpk\",\n      \"embossCardName\" : \"Mohammed Boyer\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53a279a7-4d63-3a4e-964b-a2d062cfa77a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getTransactionsByIdv1",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "4bd91a2f-9537-30ee-a268-6f5b67a38ac5",
    "name" : "Retrieve the details of a fire.com Account - 401",
    "request" : {
      "urlPath" : "/v1/accounts/8703532756037598905",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "4bd91a2f-9537-30ee-a268-6f5b67a38ac5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountById"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "eab1292b-0721-3721-ab93-ed87822e2636",
    "name" : "Retrieve the details of a fire.com Account (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts/7944259981373255208",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eab1292b-0721-3721-ab93-ed87822e2636",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccountById",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "93250b6b-d041-3436-b649-5ca2da2bf8ce",
    "name" : "Add a new account",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93250b6b-d041-3436-b649-5ca2da2bf8ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "addAccount",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "6fa7845c-14e2-3af3-bfc7-ea5cfb8ce609",
    "name" : "List all fire.com Accounts - 401",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "6fa7845c-14e2-3af3-bfc7-ea5cfb8ce609",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccounts"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "c6bb9996-0223-366e-bbb4-1c329dfa3711",
    "name" : "List all fire.com Accounts (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accounts\" : [ {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"BREXIT_MIGRATED\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"BREXIT_MIGRATED\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"BREXIT_MIGRATED\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6bb9996-0223-366e-bbb4-1c329dfa3711",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getAccounts",
          "schema" : {
            "properties" : {
              "accounts" : {
                "items" : {
                  "properties" : {
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 23950,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "cbic" : {
                      "description" : "the BIC of the account (provided if currency is EUR).",
                      "example" : "CPAYIE2D",
                      "type" : "string"
                    },
                    "ccan" : {
                      "description" : "the Account Number of the account.",
                      "example" : "11111111",
                      "type" : "string"
                    },
                    "ciban" : {
                      "description" : "the IBAN of the account (provided if currency is EUR).",
                      "example" : "IE54CPAY99119911111111",
                      "type" : "string"
                    },
                    "cnsc" : {
                      "description" : "the Sort Code of the account.",
                      "example" : "232221",
                      "type" : "string"
                    },
                    "colour" : {
                      "deprecated" : true,
                      "description" : "Internal Use",
                      "example" : "ORANGE",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "defaultAccount" : {
                      "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "directDebitsAllowed" : {
                      "description" : "Whether or not direct debits can be set up on this account.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "fopOnly" : {
                      "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com)",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "name" : {
                      "description" : "the name the user gives to the account to help them identify it.",
                      "example" : "Main Account",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                      "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                      "type" : "string"
                    }
                  },
                  "title" : "Account",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "accounts",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  } ]
}