{
  "mappings" : [ {
    "id" : "f62da2db-657a-4854-8295-6e129239d602",
    "name" : "Returns list of all users on your fire.com account",
    "request" : {
      "urlPath" : "/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"SMS_SENT\"\n  },\n  \"status\" : \"INVITE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"SMS_SENT\"\n  },\n  \"status\" : \"FROZEN\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"SMS_SENT\"\n  },\n  \"status\" : \"LIVE\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"FROZEN\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"INVITE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"CLOSED\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"LIVE\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"SMS_CODE_SENT\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f62da2db-657a-4854-8295-6e129239d602",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUsers",
          "schema" : {
            "items" : {
              "properties" : {
                "emailAddress" : {
                  "description" : "email address for user",
                  "example" : "user@example.com",
                  "type" : "string"
                },
                "firstName" : {
                  "description" : "User first name",
                  "example" : "Colm",
                  "type" : "string"
                },
                "id" : {
                  "description" : "The User ID for this User",
                  "example" : 14059,
                  "format" : "int64",
                  "type" : "integer"
                },
                "lastName" : {
                  "description" : "User second name",
                  "example" : "User",
                  "type" : "string"
                },
                "lastlogin" : {
                  "description" : "Timestamp on when user last logged in.",
                  "example" : "2012-01-20T11:21:35.000Z",
                  "type" : "string"
                },
                "mobileApplicationDetails" : {
                  "properties" : {
                    "OS" : {
                      "description" : "Operating system of device.",
                      "enum" : [ "Android", "IOS", "OTHER" ],
                      "type" : "string"
                    },
                    "businessUserId" : {
                      "description" : "Business user ID",
                      "example" : "14059",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "clientID" : {
                      "description" : "Client ID of user.",
                      "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                      "type" : "string"
                    },
                    "deviceName" : {
                      "description" : "type of device.",
                      "enum" : [ "iPhone", "Android", "Other" ],
                      "type" : "string"
                    },
                    "deviceOSVersion" : {
                      "description" : "OS version for device.",
                      "example" : "14.4",
                      "type" : "string"
                    },
                    "mobileApplicationId" : {
                      "description" : "Mobile application id for user.",
                      "example" : "18967",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "status" : {
                      "description" : "Status of user",
                      "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "MobileApplication",
                  "type" : "object"
                },
                "mobileNumber" : {
                  "description" : "User mobile number",
                  "example" : "+353871234567",
                  "type" : "string"
                },
                "role" : {
                  "description" : "User role",
                  "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                  "type" : "string"
                },
                "status" : {
                  "description" : "Status of user",
                  "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                  "type" : "string"
                },
                "userCvl" : {
                  "description" : "Users Cvl type ID (shows up when status is LIVE)",
                  "example" : "FULL",
                  "type" : "string"
                }
              },
              "title" : "User",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "7cc1b37e-7b9d-448c-b851-192ed8af1f04",
    "name" : "Returns details of a specific fire.com user.",
    "request" : {
      "urlPath" : "/user/2.4455003468288303E307",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7cc1b37e-7b9d-448c-b851-192ed8af1f04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "properties" : {
              "emailAddress" : {
                "description" : "email address for user",
                "example" : "user@example.com",
                "type" : "string"
              },
              "firstName" : {
                "description" : "User first name",
                "example" : "Colm",
                "type" : "string"
              },
              "id" : {
                "description" : "The User ID for this User",
                "example" : 14059,
                "format" : "int64",
                "type" : "integer"
              },
              "lastName" : {
                "description" : "User second name",
                "example" : "User",
                "type" : "string"
              },
              "lastlogin" : {
                "description" : "Timestamp on when user last logged in.",
                "example" : "2012-01-20T11:21:35.000Z",
                "type" : "string"
              },
              "mobileApplicationDetails" : {
                "properties" : {
                  "OS" : {
                    "description" : "Operating system of device.",
                    "enum" : [ "Android", "IOS", "OTHER" ],
                    "type" : "string"
                  },
                  "businessUserId" : {
                    "description" : "Business user ID",
                    "example" : "14059",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "clientID" : {
                    "description" : "Client ID of user.",
                    "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                    "type" : "string"
                  },
                  "deviceName" : {
                    "description" : "type of device.",
                    "enum" : [ "iPhone", "Android", "Other" ],
                    "type" : "string"
                  },
                  "deviceOSVersion" : {
                    "description" : "OS version for device.",
                    "example" : "14.4",
                    "type" : "string"
                  },
                  "mobileApplicationId" : {
                    "description" : "Mobile application id for user.",
                    "example" : "18967",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "status" : {
                    "description" : "Status of user",
                    "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                    "type" : "string"
                  }
                },
                "title" : "MobileApplication",
                "type" : "object"
              },
              "mobileNumber" : {
                "description" : "User mobile number",
                "example" : "+353871234567",
                "type" : "string"
              },
              "role" : {
                "description" : "User role",
                "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                "type" : "string"
              },
              "status" : {
                "description" : "Status of user",
                "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                "type" : "string"
              },
              "userCvl" : {
                "description" : "Users Cvl type ID (shows up when status is LIVE)",
                "example" : "FULL",
                "type" : "string"
              }
            },
            "title" : "User",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0736a683-2f1c-4aab-ba82-4917bb1eb9ee",
    "name" : "Get Payment Details",
    "request" : {
      "urlPath" : "/payments/28945ca9-927c-32b7-ad5e-ecb3de135601",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 1000,\n  \"additionalFields\" : \"ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2\",\n  \"description\" : \"Gym Fees Oct 2020\",\n  \"type\" : \"OTHER\",\n  \"webhookUrl\" : \"https://example.com/webhook\",\n  \"icanTo\" : 42,\n  \"transactionType\" : \"REFUND_REQUEST\",\n  \"orderDetails\" : {\n    \"deliveryCity\" : \"London\",\n    \"comment2\" : \"Additional comments about the transaction\",\n    \"productId\" : \"ZFDAA-1221\",\n    \"comment1\" : \"Additional comments about the transaction\",\n    \"orderId\" : \"6c28a47d-4502-4111\",\n    \"variableReference\" : \"John Doe\",\n    \"merchantCustomerIdentification\" : \"08303863544\",\n    \"customerNumber\" : \"123645\",\n    \"merchantNumber\" : \"1234567\",\n    \"deliveryPostCode\" : \"EC15155\",\n    \"deliveryCountry\" : \"GB\",\n    \"deliveryAddressLine2\" : \"The Way\",\n    \"deliveryAddressLine1\" : \"12 The Street\"\n  },\n  \"paymentUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"maxNumberPayments\" : 1,\n  \"mandatoryFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"collectFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"expiry\" : \"2024-10-22T07:48:56.460Z\",\n  \"returnUrl\" : \"https://example.com/callback\",\n  \"myRef\" : \"Fees\",\n  \"paymentRequestCode\" : \"1234abcd\",\n  \"status\" : \"AUTHORISED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0736a683-2f1c-4aab-ba82-4917bb1eb9ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.367012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPaymentDetails",
          "schema" : {
            "properties" : {
              "additionalFields" : {
                "description" : "These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.",
                "example" : "ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2",
                "type" : "string"
              },
              "amount" : {
                "description" : "The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).",
                "example" : 1000,
                "format" : "int64",
                "type" : "integer"
              },
              "collectFields" : {
                "description" : "For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "currency" : {
                "$ref" : "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
              },
              "description" : {
                "description" : "A public facing description of the request. This will be shown to the user when they tap or scan the request.",
                "example" : "Gym Fees Oct 2020",
                "type" : "string"
              },
              "expiry" : {
                "description" : "This is the expiry of the payment request. After this time, the payment cannot be paid.",
                "example" : "2024-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "icanTo" : {
                "description" : "The ican of the account to collect the funds into. Must be one of your fire.com Accounts.",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "mandatoryFields" : {
                "description" : "For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "maxNumberPayments" : {
                "description" : "The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.",
                "example" : 1,
                "type" : "integer"
              },
              "myRef" : {
                "description" : "An internal description of the request.",
                "example" : "Fees",
                "type" : "string"
              },
              "orderDetails" : {
                "$ref" : "#/paths/~1paymentrequests/post/requestBody/content/application~1json/schema/properties/orderDetails"
              },
              "paymentRequestCode" : {
                "description" : "The code that was returned when you created the payment request.",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "paymentUuid" : {
                "description" : "A unique id for the transaction.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "returnUrl" : {
                "description" : "The merchant return URL where the customer will be re-directed to with the result of the transaction.",
                "example" : "https://example.com/callback",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the transaction",
                "enum" : [ "AWAITING_AUTHORISATION", "AUTHORISED", "AWAITING_MULTI_AUTHORISATION", "NOT_AUTHORISED", "PAID", "REJECTED", "ACCEPTED", "RECEIVED" ],
                "type" : "string"
              },
              "transactionType" : {
                "description" : "The type of payment request payment",
                "enum" : [ "REFUND_REQUEST", "PAYMENT" ],
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created",
                "enum" : [ "OTHER" ],
                "type" : "string"
              },
              "webhookUrl" : {
                "description" : "A URL to be called in the background with the details of the payment after the payment is complete",
                "example" : "https://example.com/webhook",
                "type" : "string"
              }
            },
            "title" : "PaymentRequest",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c3957ce5-d6a5-43a8-a2c0-5830381a74c2",
    "name" : "Create a Fire Open Payment request",
    "request" : {
      "urlPath" : "/paymentrequests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : \"1234abcd\",\n  \"type\" : \"OTHER\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3957ce5-d6a5-43a8-a2c0-5830381a74c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.366755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "newPaymentRequest",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.\n",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created.",
                "enum" : [ "OTHER" ],
                "type" : "string"
              }
            },
            "title" : "NewPaymentRequestResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9c663ccb-686c-4d88-b70c-f619a749992b",
    "name" : "List all Payee Bank Accounts",
    "request" : {
      "urlPath" : "/payees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n  \"accountName\" : \"Joe\",\n  \"createdBy\" : \"CUSTOMER\",\n  \"iban\" : \"IE86BOFI90535211111111\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"id\" : 742,\n  \"accountNumber\" : \"dobdn9cwx69dyia5e6azu1yfi8j0lczyknw0h9e02zk5vtjoda701efc5jsiihtpsf68mc\",\n  \"accountHolderName\" : \"Joe Bloggs\",\n  \"bic\" : \"BOFIIE2DXXX\",\n  \"nsc\" : \"dm93wpna5iqcbhe1qu94vd3xrv85bteq457wdanp1daotuk4gk38t2baa3tvy5p656tl9c7h9o4ceis6m3apozdjnpte7e7vqb34ccoz12vpc4mqtfsg5v\",\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c663ccb-686c-4d88-b70c-f619a749992b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.366693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPayees",
          "schema" : {
            "properties" : {
              "accountHolderName" : {
                "description" : "The name on the payee bank account.",
                "example" : "Joe Bloggs",
                "type" : "string"
              },
              "accountName" : {
                "description" : "The alias attributed to the payee, usually set by the user when creating the payee.",
                "example" : "Joe",
                "type" : "string"
              },
              "accountNumber" : {
                "description" : "The Account Number of the account if currency is GBP.",
                "type" : "string"
              },
              "bic" : {
                "description" : "The BIC of the account if currency is EUR.",
                "example" : "BOFIIE2DXXX",
                "type" : "string"
              },
              "createdBy" : {
                "description" : "The creation source of the payee.",
                "enum" : [ "CUSTOMER", "LODGEMENT", "DIRECT DEBIT", "OPEN BANKING", "FIRE OPEN PAYMENT", "FIRE DIRECT" ],
                "example" : "CUSTOMER",
                "type" : "string"
              },
              "currency" : {
                "$ref" : "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
              },
              "dateCreated" : {
                "description" : "The date the payee was created. Milliseconds since the epoch (1970).",
                "example" : "2019-08-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "iban" : {
                "description" : "The IBAN of the account if currency is EUR.",
                "example" : "IE86BOFI90535211111111",
                "type" : "string"
              },
              "id" : {
                "description" : "Identifier for the fire.com payee bank account (assigned by fire.com).",
                "example" : 742,
                "format" : "int64",
                "type" : "integer"
              },
              "nsc" : {
                "description" : "The Sort Code of the account if currency is GBP.",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.\n  * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.\n  * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.\n  * 'CLOSED'\n  * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.\n",
                "enum" : [ "CREATED", "LIVE", "CLOSED", "ARCHIVED" ],
                "example" : "LIVE",
                "type" : "string"
              }
            },
            "title" : "Payee",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b564e9ef-27bd-41c7-bfcc-72ab4d495605",
    "name" : "Cancel a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/mandates/9c32f59e-1233-377b-aa5c-a4cecd1f24ef/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b564e9ef-27bd-41c7-bfcc-72ab4d495605",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.366545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelMandateByUuid"
        }
      }
    }
  }, {
    "id" : "aaaeaed2-fe39-4303-b250-0179a8d32ef6",
    "name" : "Activate a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/mandates/21045ce1-c04a-3740-9693-ff6ed280b87e/activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "aaaeaed2-fe39-4303-b250-0179a8d32ef6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "activateMandate"
        }
      }
    }
  }, {
    "id" : "99b181c7-e525-4595-96e1-b8ef0c038ef9",
    "name" : "Update a direct debit mandate alias - 204",
    "request" : {
      "urlPath" : "/mandates/a2f8d19d-63b0-3930-805f-aedd93ff23fa",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "99b181c7-e525-4595-96e1-b8ef0c038ef9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.366475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateMandateAlias"
        }
      }
    }
  }, {
    "id" : "8405e80a-d016-496a-99c4-e181dc3f1c28",
    "name" : "Get direct debit mandate details",
    "request" : {
      "urlPath" : "/mandates/b19f8be5-68c3-3292-9d0a-33db46efc641",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"originatorReference\" : \"VODA-123456\",\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 1,\n  \"latestDirectDebitAmount\" : 2,\n  \"numberOfDirectDebitCollected\" : 2,\n  \"valueOfDirectDebitCollected\" : 2,\n  \"originatorAlias\" : \"Vodaphone PLC\",\n  \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateReference\" : \"CRZ-102190123\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n  \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n  \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n  \"alias\" : \"Vodaphone\",\n  \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n  \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8405e80a-d016-496a-99c4-e181dc3f1c28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36643Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getMandate",
          "schema" : {
            "properties" : {
              "alias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone",
                "type" : "string"
              },
              "currency" : {
                "$ref" : "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
              },
              "dateCancelled" : {
                "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCompleted" : {
                "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "fireRejectionReason" : {
                "description" : "Rejection reason if transaction is rejected",
                "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "latestDirectDebitAmount" : {
                "description" : "The value of largest direct debit collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "latestDirectDebitDate" : {
                "description" : "The date of latest direct debit collected",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateReference" : {
                "description" : "the reference of the mandate",
                "example" : "CRZ-102190123",
                "type" : "string"
              },
              "mandateUuid" : {
                "description" : "The UUID for the  mandate",
                "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                "type" : "string"
              },
              "numberOfDirectDebitCollected" : {
                "description" : "The number of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "originatorAlias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone PLC",
                "type" : "string"
              },
              "originatorLogoUrlLarge" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoLarge",
                "type" : "string"
              },
              "originatorLogoUrlSmall" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoSmall",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeCancelReason" : {
                "description" : "Reason for cancelation",
                "example" : "e.g. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeCancelReasonCode" : {
                "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "Identifier for the fire.com account (assigned by fire.com)",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfDirectDebitCollected" : {
                "description" : "The value of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "Mandate",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3ddce503-b8e3-47e6-bf03-91903227b8d4",
    "name" : "List all direct debit mandates",
    "request" : {
      "urlPath" : "/mandates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"mandates\" : [ {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ddce503-b8e3-47e6-bf03-91903227b8d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.366208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitMandates",
          "schema" : {
            "properties" : {
              "mandates" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone",
                      "type" : "string"
                    },
                    "currency" : {
                      "$ref" : "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                    },
                    "dateCancelled" : {
                      "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCompleted" : {
                      "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "fireRejectionReason" : {
                      "description" : "Rejection reason if transaction is rejected",
                      "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                      "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "latestDirectDebitAmount" : {
                      "description" : "The value of largest direct debit collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "latestDirectDebitDate" : {
                      "description" : "The date of latest direct debit collected",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateReference" : {
                      "description" : "the reference of the mandate",
                      "example" : "CRZ-102190123",
                      "type" : "string"
                    },
                    "mandateUuid" : {
                      "description" : "The UUID for the  mandate",
                      "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                      "type" : "string"
                    },
                    "numberOfDirectDebitCollected" : {
                      "description" : "The number of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "originatorAlias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone PLC",
                      "type" : "string"
                    },
                    "originatorLogoUrlLarge" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoLarge",
                      "type" : "string"
                    },
                    "originatorLogoUrlSmall" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoSmall",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeCancelReason" : {
                      "description" : "Reason for cancelation",
                      "example" : "e.g. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeCancelReasonCode" : {
                      "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                      "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "Identifier for the fire.com account (assigned by fire.com)",
                      "example" : 1,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "valueOfDirectDebitCollected" : {
                      "description" : "The value of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "Mandate",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "Mandates",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5dee367f-005e-4604-a92c-0a0b05fb2ecd",
    "name" : "Reject a direct debit payment - 204",
    "request" : {
      "urlPath" : "/directdebits/d7334a64-1585-3d9a-85d9-88c6e6ba0ce3/reject",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5dee367f-005e-4604-a92c-0a0b05fb2ecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rejectDirectDebit"
        }
      }
    }
  }, {
    "id" : "7a75a75e-39cd-4559-b5ad-b476a623510d",
    "name" : "Get the deails of a direct debit",
    "request" : {
      "urlPath" : "/directdebits/fda02493-6d96-345c-a924-1646d971e06a",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directDebitReference\" : \"VODA-ABC453-1\",\n  \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n  \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n  \"originatorReference\" : \"VODA-123456\",\n  \"amount\" : 100,\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 42,\n  \"isDDIC\" : false,\n  \"originatorAlias\" : \"Three\",\n  \"type\" : \"FIRST_COLLECTION\",\n  \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n  \"targetPayeeId\" : 12,\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a75a75e-39cd-4559-b5ad-b476a623510d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitByUuid",
          "schema" : {
            "properties" : {
              "amount" : {
                "description" : "Value of the payment",
                "example" : 100,
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "$ref" : "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "directDebitReference" : {
                "description" : "The direct debit reference.",
                "example" : "VODA-ABC453-1",
                "type" : "string"
              },
              "directDebitUuid" : {
                "description" : "The UUID for the direct debit payment",
                "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                "type" : "string"
              },
              "isDDIC" : {
                "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                "example" : false,
                "type" : "boolean"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateUUid" : {
                "description" : "The UUID for the mandate",
                "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                "type" : "string"
              },
              "originatorAlias" : {
                "description" : "The Alias of the party who sets up the direct debit.",
                "example" : "Three",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeRejectReason" : {
                "description" : "Reason why rejected",
                "example" : "eg. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeRejectReasonCode" : {
                "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                "type" : "string"
              },
              "status" : {
                "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "The ican of your fire account that the money was taken from",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "targetPayeeId" : {
                "description" : "The payee that was created when the DD was processed",
                "example" : 12,
                "format" : "int64",
                "type" : "integer"
              },
              "type" : {
                "description" : "The type of the direct debit.",
                "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                "example" : "FIRST_COLLECTION",
                "type" : "string"
              }
            },
            "title" : "DirectDebit",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9ca6ae65-55bd-4e6f-852f-bf2a9fa826e4",
    "name" : "Get all DD payments associated with a direct debit mandate",
    "request" : {
      "urlPath" : "/directdebits",
      "method" : "GET",
      "queryParameters" : {
        "mandateUuid" : {
          "equalTo" : "05107676-116d-379d-af7c-1ea3af032dfa"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"directdebits\" : [ {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ca6ae65-55bd-4e6f-852f-bf2a9fa826e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365545Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitsForMandateUuid",
          "schema" : {
            "properties" : {
              "directdebits" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "Value of the payment",
                      "example" : 100,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "currency" : {
                      "$ref" : "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitReference" : {
                      "description" : "The direct debit reference.",
                      "example" : "VODA-ABC453-1",
                      "type" : "string"
                    },
                    "directDebitUuid" : {
                      "description" : "The UUID for the direct debit payment",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "isDDIC" : {
                      "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateUUid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                      "type" : "string"
                    },
                    "originatorAlias" : {
                      "description" : "The Alias of the party who sets up the direct debit.",
                      "example" : "Three",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeRejectReason" : {
                      "description" : "Reason why rejected",
                      "example" : "eg. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeRejectReasonCode" : {
                      "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                      "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                      "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "The ican of your fire account that the money was taken from",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "targetPayeeId" : {
                      "description" : "The payee that was created when the DD was processed",
                      "example" : 12,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the direct debit.",
                      "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                      "example" : "FIRST_COLLECTION",
                      "type" : "string"
                    }
                  },
                  "title" : "DirectDebit",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "DirectDebits",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "94ef048e-002b-4b0b-984f-5af7b387d130",
    "name" : "Create a new debit card.",
    "request" : {
      "urlPath" : "/cards",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n  \"maskedPan\" : \"537455******1111\",\n  \"cardId\" : 51,\n  \"status\" : \"CREATED_ACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94ef048e-002b-4b0b-984f-5af7b387d130",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createNewCard",
          "schema" : {
            "properties" : {
              "cardId" : {
                "example" : 51,
                "format" : "int64",
                "type" : "integer"
              },
              "expiryDate" : {
                "example" : "2019-01-31T00:00:00.000Z",
                "format" : "date-time",
                "type" : "string"
              },
              "maskedPan" : {
                "example" : "537455******1111",
                "type" : "string"
              },
              "status" : {
                "enum" : [ "CREATED_ACTIVE", "CREATED_INACTIVE" ],
                "example" : "CREATED_ACTIVE",
                "type" : "string"
              }
            },
            "title" : "NewCardResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a07fdd5-9171-4b55-b585-d567bb9e3b92",
    "name" : "View List of Cards. - 403",
    "request" : {
      "urlPath" : "/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "4a07fdd5-9171-4b55-b585-d567bb9e3b92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    }
  }, {
    "id" : "c03c1c9e-733f-4692-8202-c8ea8c0e9ef7",
    "name" : "View List of Cards. - 401",
    "request" : {
      "urlPath" : "/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "c03c1c9e-733f-4692-8202-c8ea8c0e9ef7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    }
  }, {
    "id" : "7353185f-0c02-4f9c-bf9a-1eeea65ee985",
    "name" : "View List of Cards. (application/json)",
    "request" : {
      "urlPath" : "/cards",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cards\" : [ {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7353185f-0c02-4f9c-bf9a-1eeea65ee985",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.365011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards",
          "schema" : {
            "properties" : {
              "cards" : {
                "items" : {
                  "properties" : {
                    "blocked" : {
                      "description" : "Whether the card is blocked or not",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "cardId" : {
                      "description" : "card id assigned by fire.com",
                      "example" : 51,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "dateCreated" : {
                      "description" : "The date-time the card was created",
                      "example" : "2017-01-19T16:38:15.803Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "emailAddress" : {
                      "description" : "card user email address",
                      "example" : "user@example.com",
                      "type" : "string"
                    },
                    "eurIcan" : {
                      "description" : "identifier for the eur fire.com account (assigned by fire.com)",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "expiryDate" : {
                      "description" : "card expiry date",
                      "example" : "2019-01-31T00:00:00.000Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "firstName" : {
                      "description" : "card user first name",
                      "example" : "John",
                      "type" : "string"
                    },
                    "gbpIcan" : {
                      "description" : "identifier for the gbp fire.com account (assigned by fire.com)",
                      "example" : 2152,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastName" : {
                      "description" : "card user last name",
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "maskedPan" : {
                      "description" : "card number (masked)",
                      "example" : "537455******1111",
                      "type" : "string"
                    },
                    "provider" : {
                      "description" : "card provider",
                      "enum" : [ "MASTERCARD" ],
                      "example" : "MASTERCARD",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "card status",
                      "enum" : [ "LIVE", "CREATED_ACTIVE", "CREATED_INACTIVE", "DEACTIVATED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    },
                    "statusReason" : {
                      "description" : "reason for card status",
                      "enum" : [ "LOST_CARD", "STOLEN_CARD", "CARD_DESTROYED" ],
                      "example" : "LOST_CARD",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "card user id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "Card",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "Cards",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5776f1ec-9e66-4060-9d63-99e56243d21d",
    "name" : "Remove a Payment from the Batch (Internal Transfer) - 200",
    "request" : {
      "urlPath" : "/batches/d686d5a9-1bb8-37d2-8c2e-bc44aeaae222/internaltransfers/3b8a2df1-e0f8-3abf-8c93-cd5542e058d4",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5776f1ec-9e66-4060-9d63-99e56243d21d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364739Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteInternalTransferBatchPayment"
        }
      }
    }
  }, {
    "id" : "6ca3e729-0e03-4b67-bd70-0a8884719ade",
    "name" : "Add payment for an internal transfers",
    "request" : {
      "urlPath" : "/batches/0e031d84-fb05-39d1-9f5f-e0f6394c72d0/internaltransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ca3e729-0e03-4b67-bd70-0a8884719ade",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addInternalTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "NewBatchItemResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "11440931-4fea-4ec6-bf58-8d2fe4e95c9b",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/batches/10360e73-7e3e-3ddd-aa11-690e87d059de/internaltransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11440931-4fea-4ec6-bf58-8d2fe4e95c9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchInternalTrasnfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "BatchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "BatchItems",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "32ae7248-4379-4e69-97aa-0798db0701ba",
    "name" : "Remove a Payment from the Batch (Bank Transfers) - 200",
    "request" : {
      "urlPath" : "/batches/3d87f857-883b-3d47-a18f-f0444e019f3c/banktransfers/69af3099-ecfe-34c1-bffe-625ee92a39bf",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "32ae7248-4379-4e69-97aa-0798db0701ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteBankTransferBatchPayment"
        }
      }
    }
  }, {
    "id" : "53a04be1-d0ff-4604-beda-f4220eba96dd",
    "name" : "Add payment for an bank transfers",
    "request" : {
      "urlPath" : "/batches/307ba8ce-f250-3ed3-a616-fed790b682b4/banktransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53a04be1-d0ff-4604-beda-f4220eba96dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addBankTransferBatchPayment"
        }
      }
    }
  }, {
    "id" : "1d364306-60bc-44ac-ba2d-e2d752cc248d",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/batches/a9aea901-0be9-3c45-b3d3-fc15f6bfb2b2/banktransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d364306-60bc-44ac-ba2d-e2d752cc248d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.364193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchBankTransfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "BatchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "BatchItems",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "34f9a5de-70a7-4810-b679-b6a45a458f28",
    "name" : "List Approvers for a Batch",
    "request" : {
      "urlPath" : "/batches/2e5f2331-29ce-30ef-9154-b8f6fe77bf80/approvals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approvals\" : [ {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34f9a5de-70a7-4810-b679-b6a45a458f28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofApproversForBatch",
          "schema" : {
            "properties" : {
              "approvals" : {
                "items" : {
                  "properties" : {
                    "emailAddress" : {
                      "description" : "User email address",
                      "example" : "jane.doe@example.com",
                      "type" : "string"
                    },
                    "firstName" : {
                      "example" : "Jane",
                      "type" : "string"
                    },
                    "lastName" : {
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mobileNumber" : {
                      "example" : 353871234567,
                      "type" : "string"
                    },
                    "status" : {
                      "example" : "PENDING_APPROVAL",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "User id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "BatchApprovers",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bb7a7593-2155-49f9-92df-7e3ade941eca",
    "name" : "Get details of a single Batch",
    "request" : {
      "urlPath" : "/batches/3b89294b-c82b-330a-ad3c-7e431192593c",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 10000,\n  \"amountAfterCharges\" : 10000,\n  \"icanFrom\" : 2150,\n  \"icanTo\" : 1002,\n  \"result\" : {\n    \"code\" : 500001,\n    \"message\" : \"SUCCESS\"\n  },\n  \"feeAmount\" : 0,\n  \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n  \"ref\" : \"Testing a transfer via batch\",\n  \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n  \"refId\" : 123782,\n  \"taxAmount\" : 0,\n  \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n  \"status\" : \"SUCCEEDED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb7a7593-2155-49f9-92df-7e3ade941eca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDetailsSingleBatch",
          "schema" : {
            "properties" : {
              "amount" : {
                "description" : "The amount of funds to send. In cent or pence",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              },
              "amountAfterCharges" : {
                "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              },
              "batchItemUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "feeAmount" : {
                "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "icanFrom" : {
                "description" : "The Fire account ID of the source account.",
                "example" : 2150,
                "format" : "int64",
                "type" : "integer"
              },
              "icanTo" : {
                "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                "example" : 1002,
                "format" : "int64",
                "type" : "integer"
              },
              "lastUpdated" : {
                "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "ref" : {
                "description" : "The reference on the transaction.",
                "example" : "Testing a transfer via batch",
                "type" : "string"
              },
              "refId" : {
                "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                "example" : 123782,
                "format" : "int64",
                "type" : "integer"
              },
              "result" : {
                "description" : "The outcome of the attempted transaction.",
                "properties" : {
                  "code" : {
                    "example" : 500001,
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "message" : {
                    "example" : "SUCCESS",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "status" : {
                "description" : "status of the batch if internal trasnfer",
                "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                "example" : "SUCCEEDED",
                "type" : "string"
              },
              "taxAmount" : {
                "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "BatchItem",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8effcc27-b8d9-4e63-afe6-75b8a1701cef",
    "name" : "Cancel a batch - 200",
    "request" : {
      "urlPath" : "/batches/8d2432a9-216c-374d-9a0d-303c0b67d183",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8effcc27-b8d9-4e63-afe6-75b8a1701cef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelBatchPayment"
        }
      }
    }
  }, {
    "id" : "45bb5177-c2af-4cdc-af11-b35573ba6e09",
    "name" : "Submit a batch for approval - 204",
    "request" : {
      "urlPath" : "/batches",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "45bb5177-c2af-4cdc-af11-b35573ba6e09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "submitBatch"
        }
      }
    }
  }, {
    "id" : "b4a07f6c-be8b-464a-9769-686628921155",
    "name" : "Create a new bath of payments",
    "request" : {
      "urlPath" : "/batches",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4a07f6c-be8b-464a-9769-686628921155",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createBatchPayment",
          "schema" : {
            "properties" : {
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              }
            },
            "title" : "NewBatchResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "26aeef97-3d3d-4f72-825a-dfe31f49ac6b",
    "name" : "List batches",
    "request" : {
      "urlPath" : "/batches",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26aeef97-3d3d-4f72-825a-dfe31f49ac6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.363463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBatches",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "BatchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "BatchItems",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "907a783f-87f5-4a60-9a6c-6182d90c3666",
    "name" : "Get list of ASPSPs / Banks",
    "request" : {
      "urlPath" : "/aspsps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 10,\n  \"aspsps\" : [ {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "907a783f-87f5-4a60-9a6c-6182d90c3666",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.362934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListOfAspsps",
          "schema" : {
            "properties" : {
              "aspsps" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the ASPSP / bank.",
                      "example" : "Demo Bank",
                      "type" : "string"
                    },
                    "aspspUuid" : {
                      "description" : "The UUID associated with the ASPSP / bank.",
                      "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                      "type" : "string"
                    },
                    "country" : {
                      "properties" : {
                        "code" : {
                          "description" : "The 2-letter code for the country - e.g. `IE`, `GP`...",
                          "example" : "GB",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the country",
                          "example" : "United Kingdom",
                          "type" : "string"
                        }
                      },
                      "title" : "Country",
                      "type" : "object"
                    },
                    "currency" : {
                      "$ref" : "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
                    },
                    "dateCreated" : {
                      "description" : "The date the ASPSP / bank was created.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The date the ASPSP / bank was last updated.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "logoUrl" : {
                      "description" : "A link to the ASPSP / bank's logo in SVG format.",
                      "example" : "https://assets.fire.com/pisp/demo.svg",
                      "type" : "string"
                    }
                  },
                  "title" : "Aspsp",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of ASPSPs in the list.",
                "example" : 10,
                "type" : "integer"
              }
            },
            "title" : "Aspsps",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5c9b04c7-acc6-4cba-95e7-c2b21ba2f31b",
    "name" : "Authenticate with the API.",
    "request" : {
      "urlPath" : "/apps/accesstokens",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiApplicationId\" : 433,\n  \"permissions\" : [ \"PERM_BUSINESSES_GET_ACCOUNTS\", \"PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS\" ],\n  \"businessId\" : 248,\n  \"expiry\" : \"2020-10-22T07:48:56.460Z\",\n  \"accessToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c9b04c7-acc6-4cba-95e7-c2b21ba2f31b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.3628Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "authenticate",
          "schema" : {
            "properties" : {
              "accessToken" : {
                "description" : "The App Bearer Access Token you can use in further API calls.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "apiApplicationId" : {
                "description" : "The ID of the application you are using.",
                "example" : 433,
                "format" : "int64",
                "type" : "integer"
              },
              "businessId" : {
                "description" : "The business ID for the business.",
                "example" : 248,
                "format" : "int64",
                "type" : "integer"
              },
              "expiry" : {
                "description" : "The expiry date and time for this token (ISO-8601).",
                "example" : "2020-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "permissions" : {
                "description" : "The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.",
                "example" : [ "PERM_BUSINESSES_GET_ACCOUNTS", "PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS" ],
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "title" : "AccessToken",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "90464511-5fa7-427a-a8ba-98571ef14947",
    "name" : "Create a new API Application",
    "request" : {
      "urlPath" : "/apps",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clientId\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"numberOfPayeeApprovalsRequired\" : 1,\n  \"clientKey\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"ican\" : 8733609506755375756,\n  \"expiry\" : \"2019-08-22T07:48:56.460Z\",\n  \"applicationId\" : 45345,\n  \"numberOfPaymentApprovalsRequired\" : 1,\n  \"enabled\" : true,\n  \"refreshToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90464511-5fa7-427a-a8ba-98571ef14947",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.362707Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createApiApplication",
          "schema" : {
            "properties" : {
              "applicationId" : {
                "description" : "The ID of the API Application",
                "example" : 45345,
                "format" : "int64",
                "type" : "integer"
              },
              "clientId" : {
                "description" : "The Client ID of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "clientKey" : {
                "description" : "The Client Key of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Whether or not this API Application can be used",
                "example" : true,
                "type" : "boolean"
              },
              "expiry" : {
                "description" : "The date that this API Application can no longer be used.",
                "example" : "2019-08-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "ican" : {
                "description" : "The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.",
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfPayeeApprovalsRequired" : {
                "description" : "Number of approvals required to create a payee in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "numberOfPaymentApprovalsRequired" : {
                "description" : "Number of approvals required to process a payment in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "refreshToken" : {
                "description" : "The Refresh Token of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              }
            },
            "title" : "ApiApplication",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8cc89eca-3002-48f7-9a3f-0623fa10def8",
    "name" : "Filtered list of transactions for an account",
    "request" : {
      "urlPath" : "/accounts/3045383380758336610/transactions/filter",
      "method" : "GET",
      "queryParameters" : {
        "transactionTypes" : {
          "equalTo" : "cokdxvtl3j2b5ebxd21id9yb7gu3hf26rg8yuglfuazowx0"
        },
        "dateRangeTo" : {
          "equalTo" : "1.208513975353153E308"
        },
        "searchKeyword" : {
          "equalTo" : "3au32ssia9v91ffl0p2lutbj4qtipdkiqaqs1vyhss2j9vfje43886jpkhriijrblt87z313swk6d9ss7x4bjyygsfmrhdvdsxpn409fomqgl4o4ih6artga3hc"
        },
        "dateRangeFrom" : {
          "equalTo" : "6.712643837415217E307"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8cc89eca-3002-48f7-9a3f-0623fa10def8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.362587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsFilteredById"
        }
      }
    }
  }, {
    "id" : "3a6c14db-6ff1-47b7-95a2-53f624a835a3",
    "name" : "List transactions for an account",
    "request" : {
      "urlPath" : "/accounts/1272220722464345953/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2021-04-13T11:06:32.437Z\",\n  \"amountAfterCharges\" : 5000,\n  \"paymentRequestPublicCode\" : \"1abcdefg\",\n  \"relatedParty\" : {\n    \"type\" : \"WITHDRAWAL_ACCOUNT\",\n    \"account\" : {\n      \"iban\" : \"IE76CPAY99119900000000\",\n      \"alias\" : \"Smyth and Co.\",\n      \"id\" : 123,\n      \"accountNumber\" : 0,\n      \"bic\" : \"CPAYIE2D\",\n      \"nsc\" : 991199\n    }\n  },\n  \"type\" : \"WITHDRAWAL\",\n  \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n  \"feeAmount\" : 0,\n  \"fxTradeDetails\" : {\n    \"buyAmount\" : 359,\n    \"rate4d\" : 7180,\n    \"fixedSide\" : \"SELL\",\n    \"sellAmount\" : 500,\n    \"sellCurrency\" : \"EUR\",\n    \"buyCurrency\" : \"GBP\"\n  },\n  \"balance\" : 8500,\n  \"ican\" : 1951,\n  \"amountBeforeCharges\" : 5000,\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"refId\" : 26774,\n  \"taxAmount\" : 0,\n  \"card\" : {\n    \"expiryDate\" : \"2023-10-23T14:06:04.361Z\",\n    \"maskedPan\" : \"b927v2ekohbzj4045i8enqov3fh5ssjza5sbzge9y6l6i3pkrpl9q1kjbwh3xs6bhohebqcjh4z1yy8p8dfefqojbbv8o3eflame273hbhetydmchir96gg9v378qonmum95t75fu2suzdzgcfzr9jfpjx5sfbhl0ts\",\n    \"provider\" : \"305u2mhj6muqqa5o0buo7a4szq5qc11fhhgxlbx91b9na619w4k4g68vbsh259r6ijuefz5icnvt5ubmvpycvefbqza7gai3v0tn79fik9wj0pb03pgahzwhwqc3cgc34in3htdqlyw1ybcviu6tsjkcpujk9nuh4u35ingi768rztzmqes040a1df48rsre\",\n    \"cardId\" : 5.534579574561765E307,\n    \"embossBusinessName\" : \"Garry Turcotte\",\n    \"alias\" : \"27xwwkj2elkuxn7lcxh553jbxd6yb15wvpkbyk18rslcclxhu5ryj7knxwsy2g5a72pey338g8p03kwftolpeu07453nufwduq0u4ehkpkri1roo1zyfcyidpwyzipyk0u4bcl06ywch54hmz8az7xez0a\",\n    \"embossCardName\" : \"Allen Osinski\"\n  },\n  \"myRef\" : \"Transfer to main account\",\n  \"txnId\" : 30157\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a6c14db-6ff1-47b7-95a2-53f624a835a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.362424Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsById",
          "schema" : {
            "properties" : {
              "amountAfterCharges" : {
                "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                "example" : 5000,
                "format" : "int64",
                "type" : "integer"
              },
              "amountBeforeCharges" : {
                "description" : "Amount of the transaction before the fees and taxes were applied.",
                "example" : 5000,
                "format" : "int64",
                "type" : "integer"
              },
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 8500,
                "format" : "int64",
                "type" : "integer"
              },
              "card" : {
                "properties" : {
                  "alias" : {
                    "type" : "string"
                  },
                  "cardId" : {
                    "format" : "int64",
                    "type" : "number"
                  },
                  "embossBusinessName" : {
                    "type" : "string"
                  },
                  "embossCardName" : {
                    "type" : "string"
                  },
                  "expiryDate" : {
                    "format" : "date-time",
                    "type" : "string"
                  },
                  "maskedPan" : {
                    "type" : "string"
                  },
                  "provider" : {
                    "type" : "string"
                  }
                },
                "title" : "RelatedCard",
                "type" : "object"
              },
              "currency" : {
                "$ref" : "#/paths/~1accounts/get/responses/200/content/application~1json/schema/properties/accounts/items/properties/currency"
              },
              "date" : {
                "description" : "Date of the transaction",
                "example" : "2021-04-13T11:06:32.437Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateAcknowledged" : {
                "example" : "2021-04-13T11:06:32.437Z",
                "format" : "date-time",
                "type" : "string"
              },
              "feeAmount" : {
                "description" : "The amount of the fee, if any.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "fxTradeDetails" : {
                "properties" : {
                  "buyAmount" : {
                    "description" : "amount of buyCurrency being bought",
                    "example" : 359,
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "buyCurrency" : {
                    "description" : "currency which is being bought",
                    "example" : "GBP",
                    "type" : "string"
                  },
                  "fixedSide" : {
                    "description" : "type of trade",
                    "example" : "SELL",
                    "type" : "string"
                  },
                  "rate4d" : {
                    "description" : "exchange rate",
                    "example" : 7180,
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "sellAmount" : {
                    "description" : "amount of sellCurrency being sold",
                    "example" : 500,
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "sellCurrency" : {
                    "description" : "currency which is being sold",
                    "example" : "EUR",
                    "type" : "string"
                  }
                },
                "title" : "FxTrade",
                "type" : "object"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                "example" : 1951,
                "format" : "int64",
                "type" : "integer"
              },
              "myRef" : {
                "description" : "The comment/reference on the transaction",
                "example" : "Transfer to main account",
                "type" : "string"
              },
              "paymentRequestPublicCode" : {
                "description" : "The code that was returned when you created the payment request.",
                "example" : "1abcdefg",
                "type" : "string"
              },
              "refId" : {
                "description" : "The id of the transaction.",
                "example" : 26774,
                "format" : "int64",
                "type" : "integer"
              },
              "relatedParty" : {
                "oneOf" : [ {
                  "properties" : {
                    "account" : {
                      "properties" : {
                        "accountNumber" : {
                          "description" : "the Account Number of the account.",
                          "example" : "11111111",
                          "type" : "string"
                        },
                        "alias" : {
                          "description" : "the name the user gives to the account to help them identify it.",
                          "example" : "Main Account",
                          "type" : "string"
                        },
                        "bic" : {
                          "description" : "the BIC of the account (provided if currency is EUR).",
                          "example" : "CPAYIE2D",
                          "type" : "string"
                        },
                        "iban" : {
                          "description" : "the IBAN of the account (provided if currency is EUR).",
                          "example" : "IE54CPAY99119911111111",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "identifier for the fire.com account (assigned by fire.com)",
                          "example" : 42,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "nsc" : {
                          "description" : "the Sort Code of the account.",
                          "example" : "232221",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : {
                      "enum" : [ "FIRE_ACCOUNT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "RelatedPartyFireAccount",
                  "type" : "object"
                }, {
                  "properties" : {
                    "account" : {
                      "properties" : {
                        "accountNumber" : {
                          "type" : "string"
                        },
                        "alias" : {
                          "type" : "string"
                        },
                        "bic" : {
                          "type" : "string"
                        },
                        "iban" : {
                          "type" : "string"
                        },
                        "id" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "nsc" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : {
                      "enum" : [ "EXTERNAL_ACCOUNT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "RelatedPartyExternalAccount",
                  "type" : "object"
                }, {
                  "properties" : {
                    "account" : {
                      "properties" : {
                        "accountNumber" : {
                          "description" : "The account number of the Withdrawl account in reference",
                          "example" : 0,
                          "type" : "string"
                        },
                        "alias" : {
                          "description" : "The Alias name of the Withdrawl account in reference",
                          "example" : "Smyth and Co.",
                          "type" : "string"
                        },
                        "bic" : {
                          "description" : "The BIC of the Withdrawl account in reference",
                          "example" : "CPAYIE2D",
                          "type" : "string"
                        },
                        "iban" : {
                          "description" : "The BIC of the Withdrawl account in reference",
                          "example" : "IE76CPAY99119900000000",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "The ID number of the Withdrawl account in reference",
                          "example" : 123,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "nsc" : {
                          "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                          "example" : 991199,
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : {
                      "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "RelatedPartyPayee",
                  "type" : "object"
                }, {
                  "properties" : {
                    "cardMerchant" : {
                      "properties" : {
                        "acquirerIdDe32" : {
                          "example" : "06011319",
                          "type" : "string"
                        },
                        "additionalAmtDe54" : {
                          "type" : "string"
                        },
                        "additionalDataDe124" : {
                          "type" : "string"
                        },
                        "additionalDataDe48" : {
                          "example" : "010X610500000",
                          "type" : "string"
                        },
                        "authCodeDe38" : {
                          "example" : "177449",
                          "type" : "string"
                        },
                        "authorisedByGps" : {
                          "example" : "N",
                          "type" : "string"
                        },
                        "avsResult" : {
                          "example" : "N",
                          "type" : "string"
                        },
                        "billAmt" : {
                          "example" : -1000,
                          "format" : "int64",
                          "type" : "number"
                        },
                        "billCcy" : {
                          "example" : "978",
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "type" : "string"
                        },
                        "mccCode" : {
                          "example" : "5521",
                          "type" : "string"
                        },
                        "merchIdDe42" : {
                          "example" : "013152429",
                          "type" : "string"
                        },
                        "merchNameDe43" : {
                          "example" : "ABC Coffee Shop",
                          "type" : "string"
                        },
                        "mtId" : {
                          "example" : "0100",
                          "type" : "string"
                        },
                        "posDataDe22" : {
                          "example" : "051",
                          "type" : "string"
                        },
                        "posDataDe61" : {
                          "example" : "000001000030037299999",
                          "type" : "string"
                        },
                        "posTermnlDe41" : {
                          "example" : "80266721",
                          "type" : "string"
                        },
                        "procCode" : {
                          "example" : "000000",
                          "type" : "string"
                        },
                        "recordDataDe120" : {
                          "type" : "string"
                        },
                        "respCodeDe39" : {
                          "example" : "00",
                          "type" : "string"
                        },
                        "retRefNoDe37" : {
                          "example" : "010900006720",
                          "type" : "string"
                        },
                        "statusCode" : {
                          "example" : "00",
                          "type" : "string"
                        },
                        "token" : {
                          "example" : "976307363",
                          "type" : "string"
                        },
                        "txnAmt4d" : {
                          "example" : 1000,
                          "format" : "int64",
                          "type" : "number"
                        },
                        "txnCcy" : {
                          "example" : "978",
                          "type" : "string"
                        },
                        "txnCtry" : {
                          "example" : "IRL",
                          "type" : "string"
                        },
                        "txnDesc" : {
                          "example" : "ABC Coffee Shop",
                          "type" : "string"
                        },
                        "txnStatCode" : {
                          "example" : "A",
                          "type" : "string"
                        },
                        "txnType" : {
                          "example" : "A",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : {
                      "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                      "type" : "string"
                    }
                  },
                  "title" : "RelatedPartyCardPayment",
                  "type" : "object"
                } ],
                "title" : "RelatedParty"
              },
              "taxAmount" : {
                "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "txnId" : {
                "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                "example" : 30157,
                "format" : "int64",
                "type" : "integer"
              },
              "type" : {
                "description" : "Retrieve a filtered list of transactions against an account.\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                "example" : "WITHDRAWAL",
                "type" : "string"
              }
            },
            "title" : "Transaction",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b1aa5699-80da-4976-a185-c63b2422815d",
    "name" : "Retrieve the details of a fire.com Account - 401",
    "request" : {
      "urlPath" : "/accounts/562557969447979421",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "b1aa5699-80da-4976-a185-c63b2422815d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.36157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById"
        }
      }
    }
  }, {
    "id" : "1d7d3d5e-a832-423b-bbc6-92b24f70fa5a",
    "name" : "Retrieve the details of a fire.com Account (application/json)",
    "request" : {
      "urlPath" : "/accounts/1377661125543812745",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"colour\" : \"ORANGE\",\n  \"ccan\" : \"11111111\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d7d3d5e-a832-423b-bbc6-92b24f70fa5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.361536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "Currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b80fb57-b371-4534-ba04-92431d6ab3d3",
    "name" : "Add a new account",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"colour\" : \"ORANGE\",\n  \"ccan\" : \"11111111\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"status\" : \"MIGRATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b80fb57-b371-4534-ba04-92431d6ab3d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.361389Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAccount",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "Currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ed039708-f2b3-4fb2-ae88-13cf82103c34",
    "name" : "List all fire.com Accounts - 401",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ed039708-f2b3-4fb2-ae88-13cf82103c34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.361255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts"
        }
      }
    }
  }, {
    "id" : "95c1284c-9a7d-4e16-9e59-42e27682cd77",
    "name" : "List all fire.com Accounts (application/json)",
    "request" : {
      "urlPath" : "/accounts",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accounts\" : [ {\n    \"colour\" : \"ORANGE\",\n    \"ccan\" : \"11111111\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"colour\" : \"ORANGE\",\n    \"ccan\" : \"11111111\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"colour\" : \"ORANGE\",\n    \"ccan\" : \"11111111\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"status\" : \"MIGRATED\"\n  }, {\n    \"colour\" : \"ORANGE\",\n    \"ccan\" : \"11111111\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95c1284c-9a7d-4e16-9e59-42e27682cd77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:40.361189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts",
          "schema" : {
            "properties" : {
              "accounts" : {
                "items" : {
                  "properties" : {
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 23950,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "cbic" : {
                      "description" : "the BIC of the account (provided if currency is EUR).",
                      "example" : "CPAYIE2D",
                      "type" : "string"
                    },
                    "ccan" : {
                      "description" : "the Account Number of the account.",
                      "example" : "11111111",
                      "type" : "string"
                    },
                    "ciban" : {
                      "description" : "the IBAN of the account (provided if currency is EUR).",
                      "example" : "IE54CPAY99119911111111",
                      "type" : "string"
                    },
                    "cnsc" : {
                      "description" : "the Sort Code of the account.",
                      "example" : "232221",
                      "type" : "string"
                    },
                    "colour" : {
                      "deprecated" : true,
                      "description" : "Internal Use",
                      "example" : "ORANGE",
                      "type" : "string"
                    },
                    "currency" : {
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "Currency",
                      "type" : "object"
                    },
                    "defaultAccount" : {
                      "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "directDebitsAllowed" : {
                      "description" : "Whether or not direct debits can be set up on this account.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com)",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "name" : {
                      "description" : "the name the user gives to the account to help them identify it.",
                      "example" : "Main Account",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                      "enum" : [ "LIVE", "MIGRATED" ],
                      "type" : "string"
                    }
                  },
                  "title" : "Account",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "Accounts",
            "type" : "object"
          }
        }
      }
    }
  } ]
}