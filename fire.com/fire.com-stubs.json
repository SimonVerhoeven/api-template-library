{
  "mappings" : [ {
    "id" : "219223cd-fe4c-4130-aab4-8a0a6c04517f",
    "name" : "List transactions for an account (v3)",
    "request" : {
      "urlPath" : "/v3/accounts/2551858461635469629/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"links\" : [ {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  }, {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  } ],\n  \"content\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-02T17:24:19.855Z\",\n      \"maskedPan\" : \"m8okdv2km8c7g22afny75c8fhsmw2h\",\n      \"provider\" : \"f8uop4ojdbntpltbgrcg84xbs3g9kast79yyzp2fv862up0043nyzbeson9ykdtw3sqcgnjgekj9ixnqph9izx8l3ja7ahfj7n77fjrhitctiy629f5sv\",\n      \"cardId\" : 7561361991189601069,\n      \"embossBusinessName\" : \"Dr. Dudley Russel\",\n      \"alias\" : \"ku9b04n5u9xdmkj3ofzqvh8bbozmoelmbgox0hom6duo03ow5x4277b5aaqxjs0bcys0uqheyqgty91x71flcj8pfkwwggqu0dqcbh3etpevrcgzio78awr1spk77q3zy\",\n      \"embossCardName\" : \"Chery Bayer Jr.\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-03-20T10:02:06.855Z\",\n      \"maskedPan\" : \"9050nitb1vl9ad99oii0l\",\n      \"provider\" : \"owx8\",\n      \"cardId\" : 7886536884140380654,\n      \"embossBusinessName\" : \"Mr. Adolph Wyman\",\n      \"alias\" : \"2prwsmtpb9tjfagens7xlhv1l7p6fd2gdohumht3j0lp8z9nn9r4se8yvj6ywcntmb8nww3cczv0i1v9xuek1hu51qyr7ezszhjv1kpx763eng5zeqzx629gi7frsj4t42kygf74gmx8xcjp5ac6hpilvzjwozhhm31jrvon3vc5zdebzx\",\n      \"embossCardName\" : \"Dr. Jannet Fahey\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"o5tbn7ryoyr4oeiop3o902xruklid1oy3n8t1do85rtyq9sex4bfm5vh9uk4nqfalt0mrob0jnu3pytt03efi2xfoxfi1f4uopitjlx5njl8fha44h1jpnvk26nbjxhj0vuk36c7wemmhi1ozpbp7ihc3tf6oighf\",\n        \"additionalDataDe124\" : \"n2jowmfc4fr0mmxoilbuflr7w9xrs7y\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-06-24T12:49:00.856027Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"gvawrbuekh9wg3fsn86dj48x9dpyvyda6xod1lui3cp1rxr96apfrtw5r48zq8bjbzlwnrbyyzdhb8sf5sw8hcnh2w5f1l12dvh1eg5c7ewgqsod5ske64xe2\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-09T00:46:11.856Z\",\n      \"maskedPan\" : \"riljw7vfxwbk0w0hszg46cbw9luq4xtfevhsa0utd79k6k6lo2a77rc6s6ehjtfk8ln6amfkhof224yr1xq9fy\",\n      \"provider\" : \"np3inl2hjz3bielirgt261o6j2qxqis7cbzbzdh3rhjjlxinysdwl5\",\n      \"cardId\" : 2465732436826793075,\n      \"embossBusinessName\" : \"Thad Price\",\n      \"alias\" : \"e2c2hf2xk27tfjx07scdvzhgtgc377clybq3ea6jcd6odwvhu85ttkfs\",\n      \"embossCardName\" : \"Latanya Schuppe\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-08-08T22:46:11.856Z\",\n      \"maskedPan\" : \"f8x4xcmk4pmjwbu75d5w9c6te5ifm67p4dzucitqp4w5e8rmuz4rkt59ki3sp5l9ksad5s1do2lnwmz\",\n      \"provider\" : \"y1jnj1csk987q20a1r7giudus8p7xnsnkjm7v8hgbss1u5phum86gzo5vadaimgbi8u00dbfwjwjqhlnma\",\n      \"cardId\" : 1005855391224652895,\n      \"embossBusinessName\" : \"Spencer Corwin\",\n      \"alias\" : \"v1odzy7d2p2sut0posbtslbbazxdd31fxj9ywh8qlvet\",\n      \"embossCardName\" : \"Miss Sally Metz\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-27T01:34:22.856Z\",\n      \"maskedPan\" : \"g63uxumhpmjfn5xm6reb6qy13xcs3lovqo1gseslw0dkhdno7sgujry3bqlwl7trip81wx2yqdxq82l3klsqvl76s4plyykutwrmh7zusub5ayibtzrsag1s\",\n      \"provider\" : \"g2aivpgs4ad6s2997rzzcwtn9ood5slffzmob9z0jk5joj0t101vc2jnco0sme4hk2dhhq6iqwpj3qlr\",\n      \"cardId\" : 8463196886821836987,\n      \"embossBusinessName\" : \"Kristopher Weimann\",\n      \"alias\" : \"wypcxedcyi8nk4wx4wgb2169gc2\",\n      \"embossCardName\" : \"Rosaline DuBuque\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "219223cd-fe4c-4130-aab4-8a0a6c04517f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.858239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsByIdv3",
          "schema" : {
            "properties" : {
              "content" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "items" : {
                  "properties" : {
                    "href" : {
                      "description" : "https://api.fire.com/business/v3/accounts/1/transactions?startAfter=eyJpY2F",
                      "example" : "The URL of the linked page",
                      "type" : "string"
                    },
                    "rel" : {
                      "description" : "The relationship of this link to the current object - self, next, prev page.",
                      "example" : "self",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv3",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4dca349c-4230-4fe0-9488-28dc65a05c13",
    "name" : "Returns list of all users on your fire.com account",
    "request" : {
      "urlPath" : "/v1/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"CLOSED\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"FROZEN\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"CLOSED\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"INVITE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"FROZEN\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"FROZEN\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"CLOSED\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4dca349c-4230-4fe0-9488-28dc65a05c13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.855147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUsers",
          "schema" : {
            "items" : {
              "properties" : {
                "emailAddress" : {
                  "description" : "email address for user",
                  "example" : "user@example.com",
                  "type" : "string"
                },
                "firstName" : {
                  "description" : "User first name",
                  "example" : "Colm",
                  "type" : "string"
                },
                "id" : {
                  "description" : "The User ID for this User",
                  "example" : 14059,
                  "format" : "int64",
                  "type" : "integer"
                },
                "lastName" : {
                  "description" : "User second name",
                  "example" : "User",
                  "type" : "string"
                },
                "lastlogin" : {
                  "description" : "Timestamp on when user last logged in.",
                  "example" : "2012-01-20T11:21:35.000Z",
                  "type" : "string"
                },
                "mobileApplicationDetails" : {
                  "properties" : {
                    "OS" : {
                      "description" : "Operating system of device.",
                      "enum" : [ "Android", "IOS", "OTHER" ],
                      "type" : "string"
                    },
                    "businessUserId" : {
                      "description" : "Business user ID",
                      "example" : "14059",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "clientID" : {
                      "description" : "Client ID of user.",
                      "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                      "type" : "string"
                    },
                    "deviceName" : {
                      "description" : "type of device.",
                      "enum" : [ "iPhone", "Android", "Other" ],
                      "type" : "string"
                    },
                    "deviceOSVersion" : {
                      "description" : "OS version for device.",
                      "example" : "14.4",
                      "type" : "string"
                    },
                    "mobileApplicationId" : {
                      "description" : "Mobile application id for user.",
                      "example" : "18967",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "status" : {
                      "description" : "Status of user",
                      "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "mobileApplication",
                  "type" : "object"
                },
                "mobileNumber" : {
                  "description" : "User mobile number",
                  "example" : "+353871234567",
                  "type" : "string"
                },
                "role" : {
                  "description" : "User role",
                  "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                  "type" : "string"
                },
                "status" : {
                  "description" : "Status of user",
                  "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                  "type" : "string"
                },
                "userCvl" : {
                  "description" : "Users Cvl type ID (shows up when status is LIVE)",
                  "example" : "FULL",
                  "type" : "string"
                }
              },
              "title" : "user",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "7d507e38-fcbc-4fdc-8c10-2906f308ab7a",
    "name" : "Returns details of a specific fire.com user.",
    "request" : {
      "urlPath" : "/v1/user/7005920701632828389",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d507e38-fcbc-4fdc-8c10-2906f308ab7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.854386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "properties" : {
              "emailAddress" : {
                "description" : "email address for user",
                "example" : "user@example.com",
                "type" : "string"
              },
              "firstName" : {
                "description" : "User first name",
                "example" : "Colm",
                "type" : "string"
              },
              "id" : {
                "description" : "The User ID for this User",
                "example" : 14059,
                "format" : "int64",
                "type" : "integer"
              },
              "lastName" : {
                "description" : "User second name",
                "example" : "User",
                "type" : "string"
              },
              "lastlogin" : {
                "description" : "Timestamp on when user last logged in.",
                "example" : "2012-01-20T11:21:35.000Z",
                "type" : "string"
              },
              "mobileApplicationDetails" : {
                "properties" : {
                  "OS" : {
                    "description" : "Operating system of device.",
                    "enum" : [ "Android", "IOS", "OTHER" ],
                    "type" : "string"
                  },
                  "businessUserId" : {
                    "description" : "Business user ID",
                    "example" : "14059",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "clientID" : {
                    "description" : "Client ID of user.",
                    "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                    "type" : "string"
                  },
                  "deviceName" : {
                    "description" : "type of device.",
                    "enum" : [ "iPhone", "Android", "Other" ],
                    "type" : "string"
                  },
                  "deviceOSVersion" : {
                    "description" : "OS version for device.",
                    "example" : "14.4",
                    "type" : "string"
                  },
                  "mobileApplicationId" : {
                    "description" : "Mobile application id for user.",
                    "example" : "18967",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "status" : {
                    "description" : "Status of user",
                    "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                    "type" : "string"
                  }
                },
                "title" : "mobileApplication",
                "type" : "object"
              },
              "mobileNumber" : {
                "description" : "User mobile number",
                "example" : "+353871234567",
                "type" : "string"
              },
              "role" : {
                "description" : "User role",
                "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                "type" : "string"
              },
              "status" : {
                "description" : "Status of user",
                "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                "type" : "string"
              },
              "userCvl" : {
                "description" : "Users Cvl type ID (shows up when status is LIVE)",
                "example" : "FULL",
                "type" : "string"
              }
            },
            "title" : "user",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "80339e52-861f-4af8-9a40-683e0a1a49ab",
    "name" : "Get Payment Details",
    "request" : {
      "urlPath" : "/v1/payments/15796b10-37f5-315e-ade1-10a61c1ec6ac",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 1000,\n  \"additionalFields\" : \"ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2\",\n  \"description\" : \"Gym Fees Oct 2020\",\n  \"type\" : \"OTHER\",\n  \"webhookUrl\" : \"https://example.com/webhook\",\n  \"icanTo\" : 42,\n  \"transactionType\" : \"REFUND_REQUEST\",\n  \"orderDetails\" : {\n    \"deliveryCity\" : \"London\",\n    \"comment2\" : \"Additional comments about the transaction\",\n    \"productId\" : \"ZFDAA-1221\",\n    \"comment1\" : \"Additional comments about the transaction\",\n    \"orderId\" : \"6c28a47d-4502-4111\",\n    \"variableReference\" : \"John Doe\",\n    \"merchantCustomerIdentification\" : 8303863544,\n    \"customerNumber\" : \"123645\",\n    \"merchantNumber\" : \"1234567\",\n    \"deliveryPostCode\" : \"EC15155\",\n    \"deliveryCountry\" : \"GB\",\n    \"deliveryAddressLine2\" : \"The Way\",\n    \"deliveryAddressLine1\" : \"12 The Street\"\n  },\n  \"paymentUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"maxNumberPayments\" : 1,\n  \"mandatoryFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"collectFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"expiry\" : \"2024-10-22T07:48:56.460Z\",\n  \"returnUrl\" : \"https://example.com/callback\",\n  \"myRef\" : \"Fees\",\n  \"paymentRequestCode\" : \"1234abcd\",\n  \"status\" : \"PAID\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80339e52-861f-4af8-9a40-683e0a1a49ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.854038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPaymentDetails",
          "schema" : {
            "properties" : {
              "additionalFields" : {
                "description" : "These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.",
                "example" : "ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2",
                "type" : "string"
              },
              "amount" : {
                "description" : "The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).",
                "example" : 1000,
                "format" : "int64",
                "type" : "integer"
              },
              "collectFields" : {
                "description" : "For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "description" : {
                "description" : "A public facing description of the request. This will be shown to the user when they tap or scan the request.",
                "example" : "Gym Fees Oct 2020",
                "type" : "string"
              },
              "expiry" : {
                "description" : "This is the expiry of the payment request. After this time, the payment cannot be paid.",
                "example" : "2024-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "icanTo" : {
                "description" : "The ican of the account to collect the funds into. Must be one of your fire.com Accounts.",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "mandatoryFields" : {
                "description" : "For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "maxNumberPayments" : {
                "description" : "The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.",
                "example" : 1,
                "type" : "integer"
              },
              "myRef" : {
                "description" : "An internal description of the request.",
                "example" : "Fees",
                "type" : "string"
              },
              "orderDetails" : {
                "properties" : {
                  "comment1" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "comment2" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "customerNumber" : {
                    "description" : "Use this field to store a customer number for the transaction (for example).",
                    "example" : "123645",
                    "type" : "string"
                  },
                  "deliveryAddressLine1" : {
                    "description" : "The first line of the delivery address.",
                    "example" : "12 The Street",
                    "type" : "string"
                  },
                  "deliveryAddressLine2" : {
                    "description" : "The second line of the delivery address.",
                    "example" : "The Way",
                    "type" : "string"
                  },
                  "deliveryCity" : {
                    "description" : "Delivery address city",
                    "example" : "London",
                    "type" : "string"
                  },
                  "deliveryCountry" : {
                    "description" : "2-digit code for the country",
                    "example" : "GB",
                    "type" : "string"
                  },
                  "deliveryPostCode" : {
                    "description" : "Delivery address post code",
                    "example" : "EC15155",
                    "type" : "string"
                  },
                  "merchantCustomerIdentification" : {
                    "description" : "This is a reference you use to uniquely identify each of your customers.",
                    "example" : 8303863544,
                    "type" : "string"
                  },
                  "merchantNumber" : {
                    "description" : "Your Merchant Number (if applicable).",
                    "example" : "1234567",
                    "type" : "string"
                  },
                  "orderId" : {
                    "description" : "Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.",
                    "example" : "6c28a47d-4502-4111",
                    "type" : "string"
                  },
                  "productId" : {
                    "description" : "Use this field to store a product id for the transaction (for example).",
                    "example" : "ZFDAA-1221",
                    "type" : "string"
                  },
                  "variableReference" : {
                    "description" : "Use this field to store any other reference for the transaction (for example, a phone number).",
                    "example" : "John Doe",
                    "type" : "string"
                  }
                },
                "title" : "orderDetails",
                "type" : "object"
              },
              "paymentRequestCode" : {
                "description" : "The code that was returned when you created the payment request.",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "paymentUuid" : {
                "description" : "A unique id for the transaction.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "returnUrl" : {
                "description" : "The merchant return URL where the customer will be re-directed to with the result of the transaction.",
                "example" : "https://example.com/callback",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the transaction",
                "enum" : [ "AWAITING_AUTHORISATION", "AUTHORISED", "AWAITING_MULTI_AUTHORISATION", "NOT_AUTHORISED", "PAID", "REJECTED", "ACCEPTED", "RECEIVED" ],
                "type" : "string"
              },
              "transactionType" : {
                "description" : "The type of payment request payment",
                "enum" : [ "REFUND_REQUEST", "PAYMENT" ],
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created",
                "enum" : [ "OTHER" ],
                "type" : "string"
              },
              "webhookUrl" : {
                "description" : "A URL to be called in the background with the details of the payment after the payment is complete",
                "example" : "https://example.com/webhook",
                "type" : "string"
              }
            },
            "title" : "paymentRequest",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "7148d6a4-a57e-4ac0-9d0c-37b9ae01047b",
    "name" : "Create a Fire Open Payment request",
    "request" : {
      "urlPath" : "/v1/paymentrequests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : \"1234abcd\",\n  \"type\" : \"OTHER\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7148d6a4-a57e-4ac0-9d0c-37b9ae01047b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.853505Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "newPaymentRequest",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.\n",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created.",
                "enum" : [ "OTHER" ],
                "type" : "string"
              }
            },
            "title" : "newPaymentRequestResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "27aa980e-51a6-4a4d-bdfc-7f8fd4018bc5",
    "name" : "List all Payee Bank Accounts",
    "request" : {
      "urlPath" : "/v1/payees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"fundingSources\" : [ {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27aa980e-51a6-4a4d-bdfc-7f8fd4018bc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.853425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPayees",
          "schema" : {
            "properties" : {
              "fundingSources" : {
                "items" : {
                  "properties" : {
                    "accountHolderName" : {
                      "description" : "The name on the payee bank account.",
                      "example" : "Joe Bloggs",
                      "type" : "string"
                    },
                    "accountName" : {
                      "description" : "The alias attributed to the payee, usually set by the user when creating the payee.",
                      "example" : "Joe",
                      "type" : "string"
                    },
                    "accountNumber" : {
                      "description" : "The Account Number of the account if currency is GBP.",
                      "example" : "12345678",
                      "type" : "string"
                    },
                    "bic" : {
                      "description" : "The BIC of the account if currency is EUR.",
                      "example" : "BOFIIE2DXXX",
                      "type" : "string"
                    },
                    "createdBy" : {
                      "description" : "The creation source of the payee.",
                      "enum" : [ "CUSTOMER", "LODGEMENT", "DIRECT DEBIT", "OPEN BANKING", "FIRE OPEN PAYMENT", "FIRE DIRECT" ],
                      "example" : "CUSTOMER",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the payee was created. ISO Date Time.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "iban" : {
                      "description" : "The IBAN of the account if currency is EUR.",
                      "example" : "IE86BOFI90535211111111",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "Identifier for the fire.com payee bank account (assigned by fire.com).",
                      "example" : 742,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "nsc" : {
                      "description" : "The Sort Code of the account if currency is GBP.",
                      "example" : "998822",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.\n  * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.\n  * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.\n  * 'CLOSED'\n  * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.\n",
                      "enum" : [ "CREATED", "LIVE", "CLOSED", "ARCHIVED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    }
                  },
                  "title" : "payee",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of payees in the list.",
                "example" : 1,
                "type" : "integer"
              }
            },
            "title" : "payeeBankAccounts",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "888826f9-d0b6-4416-9137-394aec20eea5",
    "name" : "Cancel a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/197ee68e-c726-3521-93c9-a1c71db70c1e/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "888826f9-d0b6-4416-9137-394aec20eea5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.853139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelMandateByUuid"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "d33772c6-febb-4164-a592-0cc6666a5f88",
    "name" : "Activate a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/a129721b-08b5-36a2-9633-7c2baab19dcf/activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d33772c6-febb-4164-a592-0cc6666a5f88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.853099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "activateMandate"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b68625ac-5eeb-4260-8b5b-8026998c837a",
    "name" : "Update a direct debit mandate alias - 204",
    "request" : {
      "urlPath" : "/v1/mandates/395def3d-22ec-3981-a72a-3a40ba95ea28",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b68625ac-5eeb-4260-8b5b-8026998c837a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.853057Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateMandateAlias"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "8510c43f-ea56-4c0d-87ca-9e24535e2c21",
    "name" : "Get direct debit mandate details",
    "request" : {
      "urlPath" : "/v1/mandates/4760393b-3f26-3353-a504-e7441380ba81",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"originatorReference\" : \"VODA-123456\",\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 1,\n  \"latestDirectDebitAmount\" : 2,\n  \"numberOfDirectDebitCollected\" : 2,\n  \"valueOfDirectDebitCollected\" : 2,\n  \"originatorAlias\" : \"Vodaphone PLC\",\n  \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateReference\" : \"CRZ-102190123\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n  \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n  \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n  \"alias\" : \"Vodaphone\",\n  \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n  \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8510c43f-ea56-4c0d-87ca-9e24535e2c21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.853005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getMandate",
          "schema" : {
            "properties" : {
              "alias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCancelled" : {
                "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCompleted" : {
                "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "fireRejectionReason" : {
                "description" : "Rejection reason if transaction is rejected",
                "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "latestDirectDebitAmount" : {
                "description" : "The value of largest direct debit collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "latestDirectDebitDate" : {
                "description" : "The date of latest direct debit collected",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateReference" : {
                "description" : "the reference of the mandate",
                "example" : "CRZ-102190123",
                "type" : "string"
              },
              "mandateUuid" : {
                "description" : "The UUID for the mandate",
                "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                "type" : "string"
              },
              "numberOfDirectDebitCollected" : {
                "description" : "The number of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "originatorAlias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone PLC",
                "type" : "string"
              },
              "originatorLogoUrlLarge" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoLarge",
                "type" : "string"
              },
              "originatorLogoUrlSmall" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoSmall",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeCancelReason" : {
                "description" : "Reason for cancelation",
                "example" : "e.g. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeCancelReasonCode" : {
                "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "Identifier for the fire.com account (assigned by fire.com)",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfDirectDebitCollected" : {
                "description" : "The value of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandate",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "c0c43858-ae86-444f-8df1-ea9eb398c031",
    "name" : "List all direct debit mandates",
    "request" : {
      "urlPath" : "/v1/mandates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"mandates\" : [ {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0c43858-ae86-444f-8df1-ea9eb398c031",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.852614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitMandates",
          "schema" : {
            "properties" : {
              "mandates" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCancelled" : {
                      "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCompleted" : {
                      "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "fireRejectionReason" : {
                      "description" : "Rejection reason if transaction is rejected",
                      "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                      "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "latestDirectDebitAmount" : {
                      "description" : "The value of largest direct debit collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "latestDirectDebitDate" : {
                      "description" : "The date of latest direct debit collected",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateReference" : {
                      "description" : "the reference of the mandate",
                      "example" : "CRZ-102190123",
                      "type" : "string"
                    },
                    "mandateUuid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                      "type" : "string"
                    },
                    "numberOfDirectDebitCollected" : {
                      "description" : "The number of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "originatorAlias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone PLC",
                      "type" : "string"
                    },
                    "originatorLogoUrlLarge" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoLarge",
                      "type" : "string"
                    },
                    "originatorLogoUrlSmall" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoSmall",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeCancelReason" : {
                      "description" : "Reason for cancelation",
                      "example" : "e.g. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeCancelReasonCode" : {
                      "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                      "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "Identifier for the fire.com account (assigned by fire.com)",
                      "example" : 1,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "valueOfDirectDebitCollected" : {
                      "description" : "The value of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "mandate",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandates",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "3646a74a-fc56-44d2-8986-0e70fd176db2",
    "name" : "Reject a direct debit payment - 204",
    "request" : {
      "urlPath" : "/v1/directdebits/62e9f048-9cd0-326d-876f-7e296159e631/reject",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3646a74a-fc56-44d2-8986-0e70fd176db2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.852194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rejectDirectDebit"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "893f2f43-1420-416d-9ea2-ea7f3adcb955",
    "name" : "Get the details of a direct debit",
    "request" : {
      "urlPath" : "/v1/directdebits/4ad2b4d7-a6dd-3452-9779-6f8b09a1afc1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directDebitReference\" : \"VODA-ABC453-1\",\n  \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n  \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n  \"originatorReference\" : \"VODA-123456\",\n  \"amount\" : 100,\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 42,\n  \"isDDIC\" : false,\n  \"originatorAlias\" : \"Three\",\n  \"type\" : \"FIRST_COLLECTION\",\n  \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n  \"targetPayeeId\" : 12,\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "893f2f43-1420-416d-9ea2-ea7f3adcb955",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.85214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitByUuid",
          "schema" : {
            "properties" : {
              "amount" : {
                "description" : "Value of the payment",
                "example" : 100,
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "directDebitReference" : {
                "description" : "The direct debit reference.",
                "example" : "VODA-ABC453-1",
                "type" : "string"
              },
              "directDebitUuid" : {
                "description" : "The UUID for the direct debit payment",
                "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                "type" : "string"
              },
              "isDDIC" : {
                "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                "example" : false,
                "type" : "boolean"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateUUid" : {
                "description" : "The UUID for the mandate",
                "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                "type" : "string"
              },
              "originatorAlias" : {
                "description" : "The Alias of the party who sets up the direct debit.",
                "example" : "Three",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeRejectReason" : {
                "description" : "Reason why rejected",
                "example" : "eg. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeRejectReasonCode" : {
                "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                "type" : "string"
              },
              "status" : {
                "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "The ican of your fire account that the money was taken from",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "targetPayeeId" : {
                "description" : "The payee that was created when the DD was processed",
                "example" : 12,
                "format" : "int64",
                "type" : "integer"
              },
              "type" : {
                "description" : "The type of the direct debit.",
                "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                "example" : "FIRST_COLLECTION",
                "type" : "string"
              }
            },
            "title" : "directDebit",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "7471ea74-dfe8-4bf7-b304-5d324e52824e",
    "name" : "Get all DD payments associated with a direct debit mandate",
    "request" : {
      "urlPath" : "/v1/directdebits",
      "method" : "GET",
      "queryParameters" : {
        "mandateUuid" : {
          "equalTo" : "f98040a1-1d1e-3d72-8a3d-0bffacd08a3b"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"directdebits\" : [ {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7471ea74-dfe8-4bf7-b304-5d324e52824e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.851816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitsForMandateUuid",
          "schema" : {
            "properties" : {
              "directdebits" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "Value of the payment",
                      "example" : 100,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitReference" : {
                      "description" : "The direct debit reference.",
                      "example" : "VODA-ABC453-1",
                      "type" : "string"
                    },
                    "directDebitUuid" : {
                      "description" : "The UUID for the direct debit payment",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "isDDIC" : {
                      "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateUUid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                      "type" : "string"
                    },
                    "originatorAlias" : {
                      "description" : "The Alias of the party who sets up the direct debit.",
                      "example" : "Three",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeRejectReason" : {
                      "description" : "Reason why rejected",
                      "example" : "eg. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeRejectReasonCode" : {
                      "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                      "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                      "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "The ican of your fire account that the money was taken from",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "targetPayeeId" : {
                      "description" : "The payee that was created when the DD was processed",
                      "example" : 12,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the direct debit.",
                      "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                      "example" : "FIRST_COLLECTION",
                      "type" : "string"
                    }
                  },
                  "title" : "directDebit",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "directDebits",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "bd4e6397-42a6-4684-abfa-bfd1135aeb99",
    "name" : "Unblock a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/65100146832495187/unblock",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bd4e6397-42a6-4684-abfa-bfd1135aeb99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.851403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "unblockCard"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "33b97e2a-84f2-401b-a386-16aeff2659ea",
    "name" : "List Card Transactions. - 403",
    "request" : {
      "urlPath" : "/v1/cards/3065476137234913282/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "33b97e2a-84f2-401b-a386-16aeff2659ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.851372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "af08d5ce-cc70-443b-a6b6-0ec30eb67ddd",
    "name" : "List Card Transactions. - 401",
    "request" : {
      "urlPath" : "/v1/cards/5164053446293209530/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "af08d5ce-cc70-443b-a6b6-0ec30eb67ddd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.851349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "f2449225-f458-441d-9719-dd75be479215",
    "name" : "List Card Transactions. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards/7906011638878248291/transactions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-13T08:37:36.847Z\",\n      \"maskedPan\" : \"rkg0m4gu2h16sdbpxp6md16nlidzy0jgx7tl0ufobbdfo6xotsezg44wxrkb0d5td0hgs0aafc0vwprlqsu5nfc52ttcmqdbrkgiv3oeq476f9m\",\n      \"provider\" : \"xz1j2pobkh0z0ynd4ltez2a331hblojg9hjh6s\",\n      \"cardId\" : 7082980696597702817,\n      \"embossBusinessName\" : \"Mr. Porfirio Schroeder\",\n      \"alias\" : \"3affu\",\n      \"embossCardName\" : \"Evelin Ziemann V\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-07-07T11:32:59.847Z\",\n      \"maskedPan\" : \"62vex4saj2x8r6sz34r06vqmwvanyu6ey4mxiwwhd4cgykt3y0juypg6dillgke50zab2cyu6595tnt6ws9mqw29r6p3g\",\n      \"provider\" : \"ezd75g4r4pmbfr16lflh21od40bfxlbyuyhjlw62lxa0egn9s6162\",\n      \"cardId\" : 5858917787441964162,\n      \"embossBusinessName\" : \"Latonia Davis\",\n      \"alias\" : \"tx5vgcnvcouebhgd66sbiev48wa79axz4vc\",\n      \"embossCardName\" : \"Angelo Farrell\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-22T11:48:36.847Z\",\n      \"maskedPan\" : \"p588640at3ljdvnh9vcowdb308ci8uou3hojbw52qrfi9fyhzcjxhq\",\n      \"provider\" : \"1hcbr5nq39423lig4dxevaq6et79ymy3k1vip9jm35prhp0f6mj7rqa57c8whun8q6s68ibwy40mtqj0tvswedbwqq6poepzmfm1o0n9asdlcnnxtyst58ugrlobkvjr6dt2mse592c35hjqt0\",\n      \"cardId\" : 2263597841473519716,\n      \"embossBusinessName\" : \"Hyman Weber\",\n      \"alias\" : \"qf2qm0qmzp3yhlgkj212gpeflyf7beg9jxw13gqlbrz9yx3mocaw6pngg1dh2q3rl5im6c4hm50y9d13dlqkqq854wj7pdilyi8v086fg1nmh87\",\n      \"embossCardName\" : \"Shannon Barton\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"fsewspmvlucq1j9y3pgoj04mqwcmfeokp66rmv4wm5m8ovl4e15a1mzh8wfxlge2mm1pzdiaur7hvgh\",\n        \"additionalDataDe124\" : \"vy76c5zngmkh2m0ha8knxsi8ot9tkkgkffx205z1tbhj6n3sb06tyvde7prdh33thzkb789wyp6adzhscqnb8i33u7arsmyi6zxf6h142hdnhr725pl9ge2mk4qhdffaevnsfw4k5tmjluv1\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-08-28T13:00:00.847864Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"d78damco1ouj8cxmao0m128egceo82j497u656\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-08-31T19:29:11.848Z\",\n      \"maskedPan\" : \"b13huanpbzjkgserg\",\n      \"provider\" : \"h19refei33htsufy9n65ejz79n0b5tw13vmy67u8xxn2hm005jq1q\",\n      \"cardId\" : 7685557204725482128,\n      \"embossBusinessName\" : \"Haydee Homenick\",\n      \"alias\" : \"srbh0w49b0s11lv5n7tamzo39qumpdk71589i2tzdel39zdbwh58pouww6x7tqv258fh375k3yz9wbh0irzrcbc5lv\",\n      \"embossCardName\" : \"Shon Zemlak IV\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"jifo0dhsdo80lqoeglsj70dmrzzs91o9quyy531jygetk4n2b0qoaui7nopmpqoepldnemvwfrd6qhshug7rizpplbmr38r8azoojzsn3zkw19i2aty24126hp5qweyu2kvkv6e8sftag3m3r3qkzqykf08g3t4q94j0hm130jb\",\n        \"additionalDataDe124\" : \"jql15olk490fe56llibbqmvxjqbrv0gaen0e3fqyv0fqy5vakiprnb5fc84ed15ca76aci1wruiefd84vft58sm368q8i9mwjm7n4sd46oyncxvk00px4fvm2xn51b04mzg4ftkrquhmmewm8vvb5snc38yamn\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2023-01-22T11:43:00.848299Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"eoqnk4ldvihbcmzzxpp5bm9xwlz2uomjkgftis66hpqlm7zer3glsavfb9e93roeb9gsnhyju7nue9wz118xl9nsju625m065pwyuj29xpojjx1prwxe72cpr9h4gob10rzjj55xsd1bievu5aj7d6ao89mgd6dwxrtif\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-08-20T11:23:21.848Z\",\n      \"maskedPan\" : \"qqp5gz0p8wnwo5e531xyjlg\",\n      \"provider\" : \"x871curm810myvfbunzl1u2utarvg2o39jmrpif3m0eau05fz6ft67yw\",\n      \"cardId\" : 4795244477333698486,\n      \"embossBusinessName\" : \"Wilfred Rice\",\n      \"alias\" : \"aa0kt7h1hzn1lcr7qprzsr2c2tb66sjkr80fzai4uqorp65vnu5wzo4pa81v0snjex\",\n      \"embossCardName\" : \"Pasty Hackett\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-01-27T03:46:51.848Z\",\n      \"maskedPan\" : \"st88zott5ruw0sodg77otr6b0gqhx0xnbqqrcq4vvs4dl17ps1p0mv12ipnv0gljoslhf26st75ontboc0ekvnfaxqwycdmmxb916fz48w77ozwn5bbsvve6vr5tsdnqkiv7r6xmmu85g0p5\",\n      \"provider\" : \"3xwrdklwz257x2fx4roz8t2s212dv7q9ddj8wfamctexxe7w\",\n      \"cardId\" : 5734696798515590395,\n      \"embossBusinessName\" : \"Mrs. Nettie Nienow\",\n      \"alias\" : \"0lc4o7eafn9jqq310mawnml4v0awlbk7bdxc2dpmhe6qcy\",\n      \"embossCardName\" : \"September Kiehn\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"tir3lv4oocjwxr36761uyh6q15ad9uhwm6q5tiv3emt956dahg7ylyz531i09wr1uys7vb7b\",\n        \"additionalDataDe124\" : \"ouwmbqwiwqb4x0yt7a1rl7gmhmo2ouv2mrfww12huur85z97h8931dn6si6qgt9wuvde4t8uvro5a86p4k7smu9ls8jwmtqad7cbwcqhc7a2u886kgjupah5f4f1vmymueqsi3tq5ct4ca8hk212hi8ofi2g23uarwdccppl2t2yxbanel\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-09-02T13:25:00.84898Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"knz62a1r842rg8djq3s7604mxcntxwrx59wxpu7j46uqgtcxjdi1wtrkw226f72e6zkm8bpomlebs392yd0lra2zubrtzeybgeqo58c45i5fkc02fn8ish3pboin09tmm9jft2x6eroqte15jow5xw0n\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-09-15T22:19:56.849Z\",\n      \"maskedPan\" : \"278w0viplxalj3a94noo3ufg2wq2joodyj7ygjcjfinaapgh4g15hgk0w4pdt3eq2urcmj8aizy70ix4ii5fb4xolylxzis3b0o0ld2f2g3ordixmkd6bkhjx6xv1ybdowrm0oa50snh4bldt3smi3iplbi8ie0093s88kl9fc22nyj\",\n      \"provider\" : \"5yqu3nnh5h2w6ti4wyt9js68e9939neezahywvk9n3kjlfnot8cmti89j671e6jhwi5fwp8ot\",\n      \"cardId\" : 7734451548072149645,\n      \"embossBusinessName\" : \"Miss Marcelino Thompson\",\n      \"alias\" : \"qpvc9vbngtjdx6du172yw8lr1179nbkquwsn1un66vagh1uvyjk51oct8504cp57uzwcd1u7gku0thw6mff29a12n8fdx6c5ikf1d65tj7\",\n      \"embossCardName\" : \"Buddy Pfeffer\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 6548405381477384898,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-15T17:57:01.849Z\",\n      \"maskedPan\" : \"v3uxahcvhp7s57vtbf4nuq6qaslaing8pvhp1oertlv4inhx1d2drnmy1yud3jrx1tzqu0ds9orfdr53gvwlc4tpjmxfdgyx8n4fwbhqxpuzamwrkcwokpwzy5i23mqqi4rx3zrxcoedu8t6k\",\n      \"provider\" : \"vf80hmyzz8dl8xr48zoz2yrwype5r3kmra211vii8zoi2mo00yln53sk7uwb9om87ijpwspzqrfzsehat0nwaky6i3tse9j3aj6svnwhopykhfmnchdj9jaln0jqebunlx9abjehm9ttisf6sp5iu0njk03v9onz8bagilnut3jac29s6zcndyupulhqf46wefxt6ww\",\n      \"cardId\" : 1083421478557616156,\n      \"embossBusinessName\" : \"King Dietrich DDS\",\n      \"alias\" : \"ude4hprnbs7wy3cp25c88r2xi2nc96nhw7qohbg1qwdg2p1bx4gg62yykn75eidq94b\",\n      \"embossCardName\" : \"Cythia Lueilwitz\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-06-05T13:20:05.849Z\",\n      \"maskedPan\" : \"sam4llr8qz78kbmejdu44caygk8kxmw6yk51cllb4xh05fnxfkfeyuy3l59aepz5u9xw7svfaztz7rcm8tsz6sxv39jaiqeg964d\",\n      \"provider\" : \"3copjuet68rw0xbiufng93ccn6btw6wkax3ms38llvvpd8e9qaof9bonxpqjcy7f54f0xb8ai069rry8h5oi9wxbihftax7w10pjgeujhr1f47o5zjlowv697ls0f31\",\n      \"cardId\" : 5519783328178943611,\n      \"embossBusinessName\" : \"Kirk Torphy\",\n      \"alias\" : \"xwkfcel6qtmz3e54aq2o49vgfaq2qrt6y77mjvdidlu568ow8gh1t5lsbgj1nekx56hfxej7uekb1x2q2s1zypw209km5aj7fdgubc44fkdsjxoqlb0xchvreles5scd484g3sra0qpgm5\",\n      \"embossCardName\" : \"Rodrigo Dach DVM\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2449225-f458-441d-9719-dd75be479215",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.851198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions",
          "schema" : {
            "items" : {
              "properties" : {
                "dateRangeTo" : {
                  "description" : "milisecond timestamp of date range to value.",
                  "example" : 1547744156603,
                  "type" : "integer"
                },
                "total" : {
                  "description" : "The total number of card transactions in the list.",
                  "example" : 1,
                  "type" : "integer"
                },
                "transactions" : {
                  "items" : {
                    "properties" : {
                      "amountAfterCharges" : {
                        "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "amountBeforeCharges" : {
                        "description" : "Amount of the transaction before the fees and taxes were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "balance" : {
                        "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                        "example" : 8500,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "batchItemDetails" : {
                        "description" : "Details of the batch run if this transaction was part of a batch.",
                        "properties" : {
                          "batchItemPublicUuid" : {
                            "description" : "The UUID for this item in the batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "batchName" : {
                            "description" : "The optional name given to the batch at creation time.",
                            "example" : "Payroll 2022-11",
                            "type" : "string"
                          },
                          "batchPublicUuid" : {
                            "description" : "The UUID for this batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "jobNumber" : {
                            "description" : "The optional job number given to the batch to link it to your own system.",
                            "example" : "2018-01-PR",
                            "type" : "string"
                          }
                        },
                        "title" : "batchItemDetails",
                        "type" : "object"
                      },
                      "card" : {
                        "description" : "Details of the card used (if applicable)",
                        "properties" : {
                          "alias" : {
                            "type" : "string"
                          },
                          "cardId" : {
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "embossBusinessName" : {
                            "type" : "string"
                          },
                          "embossCardName" : {
                            "type" : "string"
                          },
                          "expiryDate" : {
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "maskedPan" : {
                            "type" : "string"
                          },
                          "provider" : {
                            "type" : "string"
                          }
                        },
                        "title" : "relatedCard",
                        "type" : "object"
                      },
                      "currency" : {
                        "description" : "The currency.",
                        "properties" : {
                          "code" : {
                            "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                            "enum" : [ "EUR", "GBP" ],
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "The name of the currency",
                            "example" : "Euro",
                            "type" : "string"
                          }
                        },
                        "title" : "currency",
                        "type" : "object"
                      },
                      "date" : {
                        "description" : "Date of the transaction",
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "dateAcknowledged" : {
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "directDebitDetails" : {
                        "description" : "Details of the direct debit (if applicable)",
                        "properties" : {
                          "directDebitReference" : {
                            "description" : "The direct debit reference.",
                            "example" : "VODA-ABC453-1",
                            "type" : "string"
                          },
                          "directDebitUuid" : {
                            "description" : "The UUID for the direct debit payment",
                            "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                            "type" : "string"
                          },
                          "mandateReference" : {
                            "description" : "the reference of the mandate",
                            "example" : "CRZ-102190123",
                            "type" : "string"
                          },
                          "mandateUUid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                            "type" : "string"
                          },
                          "mandateUuid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                            "type" : "string"
                          },
                          "originatorAlias" : {
                            "description" : "The Alias of the party who sets up the direct debit.",
                            "example" : "Three",
                            "type" : "string"
                          },
                          "originatorLogoUrlLarge" : {
                            "description" : "URL pointing to a large version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorLogoUrlSmall" : {
                            "description" : "URL pointing to a small version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorName" : {
                            "description" : "The creator of the party who sets up the direct debit.",
                            "example" : "Vodafone PLC",
                            "type" : "string"
                          },
                          "originatorReference" : {
                            "description" : "Set by party who sets up the direct debit.",
                            "example" : "VODA-123456",
                            "type" : "string"
                          }
                        },
                        "title" : "directDebitDetails",
                        "type" : "object"
                      },
                      "eventUuid" : {
                        "description" : "An internal Fire reference for the transaction (UUID)",
                        "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                        "type" : "string"
                      },
                      "feeAmount" : {
                        "description" : "The amount of the fee, if any.",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "fxTradeDetails" : {
                        "description" : "Details of the FX trade (if applicable)",
                        "properties" : {
                          "buyAmount" : {
                            "description" : "amount of buyCurrency being bought",
                            "example" : 359,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "buyCurrency" : {
                            "description" : "currency which is being bought",
                            "example" : "GBP",
                            "type" : "string"
                          },
                          "fixedSide" : {
                            "description" : "type of trade - BUY or SELL",
                            "example" : "SELL",
                            "type" : "string"
                          },
                          "provider" : {
                            "description" : "The FX provider used to make the trade.",
                            "example" : "TCC",
                            "type" : "string"
                          },
                          "rate4d" : {
                            "description" : "exchange rate",
                            "example" : 7180,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellAmount" : {
                            "description" : "amount of sellCurrency being sold",
                            "example" : 500,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellCurrency" : {
                            "description" : "currency which is being sold",
                            "example" : "EUR",
                            "type" : "string"
                          }
                        },
                        "title" : "fxTrade",
                        "type" : "object"
                      },
                      "ican" : {
                        "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                        "example" : 1951,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "myRef" : {
                        "description" : "The comment/reference on the transaction",
                        "example" : "Transfer to main account",
                        "type" : "string"
                      },
                      "paymentRequestPublicCode" : {
                        "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                        "example" : "1abcdefg",
                        "type" : "string"
                      },
                      "proprietarySchemeDetails" : {
                        "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                        "items" : {
                          "properties" : {
                            "data" : {
                              "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                              "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                              "type" : "string"
                            },
                            "type" : {
                              "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                              "example" : "SCT",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "title" : "proprietarySchemeDetails",
                        "type" : "array"
                      },
                      "refId" : {
                        "description" : "The id of the transaction.",
                        "example" : 26774,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "relatedParty" : {
                        "description" : "Details of the related third party involved in the transaction.",
                        "oneOf" : [ {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "identifier for the fire.com account (assigned by fire.com)",
                                  "example" : 42,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "FIRE_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyFireAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "EXTERNAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyExternalAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "The account number of the Withdrawl account in reference",
                                  "example" : "00000000",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "The Alias name of the Withdrawl account in reference",
                                  "example" : "Smyth and Co.",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "IE76CPAY99119900000000",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "The ID number of the Withdrawl account in reference",
                                  "example" : 123,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                  "example" : "991199",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyPayee",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "cardMerchant" : {
                              "properties" : {
                                "acquirerIdDe32" : {
                                  "example" : 6011329,
                                  "type" : "string"
                                },
                                "additionalAmtDe54" : {
                                  "type" : "string"
                                },
                                "additionalDataDe124" : {
                                  "type" : "string"
                                },
                                "additionalDataDe48" : {
                                  "example" : "010X610500000",
                                  "type" : "string"
                                },
                                "authCodeDe38" : {
                                  "example" : "177449",
                                  "type" : "string"
                                },
                                "authorisedByGps" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "avsResult" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "billAmt" : {
                                  "example" : -1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "billCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "expiryDate" : {
                                  "type" : "string"
                                },
                                "mccCode" : {
                                  "example" : "5521",
                                  "type" : "string"
                                },
                                "merchIdDe42" : {
                                  "example" : 13152429,
                                  "type" : "string"
                                },
                                "merchNameDe43" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "mtId" : {
                                  "example" : "0100",
                                  "type" : "string"
                                },
                                "posDataDe22" : {
                                  "example" : "051",
                                  "type" : "string"
                                },
                                "posDataDe61" : {
                                  "example" : 1000030037299999,
                                  "type" : "string"
                                },
                                "posTermnlDe41" : {
                                  "example" : "80266721",
                                  "type" : "string"
                                },
                                "procCode" : {
                                  "example" : "000000",
                                  "type" : "string"
                                },
                                "recordDataDe120" : {
                                  "type" : "string"
                                },
                                "respCodeDe39" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "retRefNoDe37" : {
                                  "example" : 10900006720,
                                  "type" : "string"
                                },
                                "statusCode" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "token" : {
                                  "example" : "976307363",
                                  "type" : "string"
                                },
                                "txnAmt4d" : {
                                  "example" : 1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "txnCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "txnCtry" : {
                                  "example" : "IRL",
                                  "type" : "string"
                                },
                                "txnDesc" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "txnStatCode" : {
                                  "example" : "A",
                                  "type" : "string"
                                },
                                "txnType" : {
                                  "example" : "A",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyCardPayment",
                          "type" : "object"
                        } ],
                        "title" : "relatedParty"
                      },
                      "taxAmount" : {
                        "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "txnId" : {
                        "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                        "example" : 30157,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "type" : {
                        "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                        "example" : "WITHDRAWAL",
                        "type" : "string"
                      },
                      "yourRef" : {
                        "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                        "example" : "From John Smith",
                        "type" : "string"
                      }
                    },
                    "title" : "transaction",
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "title" : "cardTransactionsv1",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "93ef14a3-b163-4d8f-9738-400b16c6ff20",
    "name" : "Block a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/9121280885742890593/block",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "93ef14a3-b163-4d8f-9738-400b16c6ff20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.84675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "blockCard"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "b2d88162-2cf2-4589-92a0-841c7a9d84b9",
    "name" : "Create a new debit card.",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n  \"maskedPan\" : \"537455******1111\",\n  \"cardId\" : 51,\n  \"status\" : \"CREATED_ACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2d88162-2cf2-4589-92a0-841c7a9d84b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.846715Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createNewCard",
          "schema" : {
            "properties" : {
              "cardId" : {
                "example" : 51,
                "format" : "int64",
                "type" : "integer"
              },
              "expiryDate" : {
                "example" : "2019-01-31T00:00:00.000Z",
                "format" : "date-time",
                "type" : "string"
              },
              "maskedPan" : {
                "example" : "537455******1111",
                "type" : "string"
              },
              "status" : {
                "enum" : [ "CREATED_ACTIVE", "CREATED_INACTIVE" ],
                "example" : "CREATED_ACTIVE",
                "type" : "string"
              }
            },
            "title" : "newCardResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "618d9982-850e-47d3-95ea-becb93d7b434",
    "name" : "View List of Cards. - 403",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "618d9982-850e-47d3-95ea-becb93d7b434",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.846631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "252b7e20-9e48-427b-b96e-805e257a5e83",
    "name" : "View List of Cards. - 401",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "252b7e20-9e48-427b-b96e-805e257a5e83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.846613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "52a4fe60-4711-4918-ae50-c74cb623ac6b",
    "name" : "View List of Cards. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cards\" : [ {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52a4fe60-4711-4918-ae50-c74cb623ac6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.846576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards",
          "schema" : {
            "properties" : {
              "cards" : {
                "items" : {
                  "properties" : {
                    "blocked" : {
                      "description" : "Whether the card is blocked or not",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "cardId" : {
                      "description" : "card id assigned by fire.com",
                      "example" : 51,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "dateCreated" : {
                      "description" : "The date-time the card was created",
                      "example" : "2017-01-19T16:38:15.803Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "emailAddress" : {
                      "description" : "card user email address",
                      "example" : "user@example.com",
                      "type" : "string"
                    },
                    "eurIcan" : {
                      "description" : "identifier for the eur fire.com account (assigned by fire.com)",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "expiryDate" : {
                      "description" : "card expiry date",
                      "example" : "2019-01-31T00:00:00.000Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "firstName" : {
                      "description" : "card user first name",
                      "example" : "John",
                      "type" : "string"
                    },
                    "gbpIcan" : {
                      "description" : "identifier for the gbp fire.com account (assigned by fire.com)",
                      "example" : 2152,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastName" : {
                      "description" : "card user last name",
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "maskedPan" : {
                      "description" : "card number (masked)",
                      "example" : "537455******1111",
                      "type" : "string"
                    },
                    "provider" : {
                      "description" : "card provider",
                      "enum" : [ "MASTERCARD" ],
                      "example" : "MASTERCARD",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "card status",
                      "enum" : [ "LIVE", "CREATED_ACTIVE", "CREATED_INACTIVE", "DEACTIVATED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    },
                    "statusReason" : {
                      "description" : "reason for card status",
                      "enum" : [ "LOST_CARD", "STOLEN_CARD", "CARD_DESTROYED" ],
                      "example" : "LOST_CARD",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "card user id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "card",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cards",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "b7e14b0c-c955-4ded-ab45-b35456a4ca50",
    "name" : "Remove a Payment from the Batch (Internal Transfer) - 200",
    "request" : {
      "urlPath" : "/v1/batches/9ca28e29-d876-3bc6-ad51-c4ede284cabe/internaltransfers/27e9e5ec-70bc-37ad-a09f-046a81ca2c90",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b7e14b0c-c955-4ded-ab45-b35456a4ca50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.846145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteInternalTransferBatchPayment"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "fba42540-40ab-4d1b-8986-76aeb5212f3f",
    "name" : "Add an internal transfer payment to the batch",
    "request" : {
      "urlPath" : "/v1/batches/e8bb314b-0840-30ef-9636-f8f9a236d98a/internaltransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fba42540-40ab-4d1b-8986-76aeb5212f3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.846086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addInternalTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "b973289f-d700-4b02-9ba2-58db885e4dd2",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/d5bbb67d-f626-3065-9021-b90c1c09a8bc/internaltransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b973289f-d700-4b02-9ba2-58db885e4dd2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.846009Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchInternalTrasnfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "e7eb6a25-ffb3-4a09-a9ce-293c0161ef20",
    "name" : "Remove a Payment from the Batch (Bank Transfers) - 200",
    "request" : {
      "urlPath" : "/v1/batches/c33bf1f3-1f9e-3ba7-823f-df2074154d3e/banktransfers/87343663-3987-3281-8802-451344544eee",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e7eb6a25-ffb3-4a09-a9ce-293c0161ef20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.845684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteBankTransferBatchPayment"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "6f5c59f6-63ab-458e-9330-f7e15a030183",
    "name" : "Add a bank transfer payment to the batch.",
    "request" : {
      "urlPath" : "/v1/batches/7c0596ca-1fa9-3c26-b9a7-e3fb49ee7eef/banktransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f5c59f6-63ab-458e-9330-f7e15a030183",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.845622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addBankTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "9535ccc1-b812-4212-b60d-a0ad3c19243e",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/e96d17b6-3183-3089-8e63-c91d0759930a/banktransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9535ccc1-b812-4212-b60d-a0ad3c19243e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.845539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchBankTransfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "7317725e-8b89-4962-b61e-a42827dc3946",
    "name" : "List Approvers for a Batch",
    "request" : {
      "urlPath" : "/v1/batches/9b9bd307-884b-3f07-adc8-4118fa270709/approvals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approvals\" : [ {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  }, {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7317725e-8b89-4962-b61e-a42827dc3946",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.84517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofApproversForBatch",
          "schema" : {
            "properties" : {
              "approvals" : {
                "items" : {
                  "properties" : {
                    "emailAddress" : {
                      "description" : "User email address",
                      "example" : "jane.doe@example.com",
                      "type" : "string"
                    },
                    "firstName" : {
                      "example" : "Jane",
                      "type" : "string"
                    },
                    "lastName" : {
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mobileNumber" : {
                      "example" : 353871234567,
                      "type" : "string"
                    },
                    "status" : {
                      "example" : "PENDING_APPROVAL",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "User id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "batchApprovers",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "5f9937ac-7ae7-4eec-af08-0a5d357a637c",
    "name" : "Submit a batch for approval - 204",
    "request" : {
      "urlPath" : "/v1/batches/e56281bf-4fca-3f99-b26a-52ecbb400db2",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5f9937ac-7ae7-4eec-af08-0a5d357a637c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.844921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "submitBatch"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "4b025f1d-3f7a-4aca-a7d6-07e12eb20413",
    "name" : "Get details of a single Batch",
    "request" : {
      "urlPath" : "/v1/batches/0075fdce-5049-3df2-adb0-bac6b5ad7cd9",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchName\" : \"January 2018 Payroll\",\n  \"valueOfItemsSubmitted\" : 10000,\n  \"numberOfItemsFailed\" : 0,\n  \"numberOfItemsSucceeded\" : 1,\n  \"type\" : \"NEW_PAYEE\",\n  \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n  \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n  \"numberOfItemsSubmitted\" : 1,\n  \"callbackUrl\" : \"https://my.webserver.com/cb/payroll\",\n  \"currency\" : \"EUR\",\n  \"sourceName\" : \"Payment API\",\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n  \"jobNumber\" : \"2018-01-PR\",\n  \"valueOfItemsSucceeded\" : 10000,\n  \"status\" : \"COMPLETE\",\n  \"valueOfItemsFailed\" : 0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b025f1d-3f7a-4aca-a7d6-07e12eb20413",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.844872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDetailsSingleBatch",
          "schema" : {
            "properties" : {
              "batchName" : {
                "description" : "An optional name you give to the batch at creation time",
                "example" : "January 2018 Payroll",
                "type" : "string"
              },
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              },
              "callbackUrl" : {
                "description" : "An optional POST URL that all events for this batch will be sent to.",
                "example" : "https://my.webserver.com/cb/payroll",
                "type" : "string"
              },
              "currency" : {
                "description" : "All payments in the batch must be the same currency - either EUR or GBP",
                "example" : "EUR",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "jobNumber" : {
                "description" : "An optional job number you can give to the batch to help link it to your own system.",
                "example" : "2018-01-PR",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "numberOfItemsFailed" : {
                "description" : "Once processed, a count of the number of items that didn’t process successfully.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSubmitted" : {
                "description" : "A count of the number of items in the batch",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSucceeded" : {
                "description" : "Once processed, a count of the number of items that processed successfully.",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "sourceName" : {
                "description" : "A string describing where the batch originated - for instance the name of the API token that was used, or showing that the batch was automatically created by fire.com (in the case of a new payee batch).",
                "example" : "Payment API",
                "type" : "string"
              },
              "status" : {
                "description" : "status of the batch object",
                "enum" : [ "PENDING_APPROVAL", "REJECTED", "COMPLETE", "OPEN", "CANCELLED", "PENDING_PARENT_BATCH_APPROVAL", "READY_FOR_PROCESSING", "PROCESSING" ],
                "example" : "COMPLETE",
                "type" : "string"
              },
              "type" : {
                "description" : "The type of the batch - can be one of the listed 3",
                "enum" : [ "INTERNAL_TRANSFER", "BANK_TRANSFER", "NEW_PAYEE" ],
                "type" : "string"
              },
              "valueOfItemsFailed" : {
                "description" : "Once processed, a sum of the value of items that didn’t process successfully. Specified in pence or cent.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSubmitted" : {
                "description" : "A sum of the value of items in the batch. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSucceeded" : {
                "description" : "Once processed, a sum of the value of items that processed successfully. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batch",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "ed35241c-7f05-4d5e-aa4b-c85f94ee72ce",
    "name" : "Cancel a batch - 200",
    "request" : {
      "urlPath" : "/v1/batches/1519339d-7fb3-3937-9405-f2ac2171e331",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ed35241c-7f05-4d5e-aa4b-c85f94ee72ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.844591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelBatchPayment"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "6955b721-6416-428c-948b-5903ce986594",
    "name" : "Create a new batch of payments",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6955b721-6416-428c-948b-5903ce986594",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.84452Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createBatchPayment",
          "schema" : {
            "properties" : {
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              }
            },
            "title" : "newBatchResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "51b6369b-117e-4694-82fb-dda34677178a",
    "name" : "List batches",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51b6369b-117e-4694-82fb-dda34677178a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.844454Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBatches",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "4deea8e3-4ac5-4b93-a4ad-a7814317afce",
    "name" : "Get list of ASPSPs / Banks",
    "request" : {
      "urlPath" : "/v1/aspsps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 10,\n  \"aspsps\" : [ {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4deea8e3-4ac5-4b93-a4ad-a7814317afce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.844001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListOfAspsps",
          "schema" : {
            "properties" : {
              "aspsps" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the ASPSP / bank.",
                      "example" : "Demo Bank",
                      "type" : "string"
                    },
                    "aspspUuid" : {
                      "description" : "The UUID associated with the ASPSP / bank.",
                      "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                      "type" : "string"
                    },
                    "country" : {
                      "properties" : {
                        "code" : {
                          "description" : "The 2-letter code for the country - e.g. `IE`, `GP`...",
                          "example" : "GB",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the country",
                          "example" : "United Kingdom",
                          "type" : "string"
                        }
                      },
                      "title" : "country",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the ASPSP / bank was created.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The date the ASPSP / bank was last updated.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "logoUrl" : {
                      "description" : "A link to the ASPSP / bank's logo in SVG format.",
                      "example" : "https://assets.fire.com/pisp/demo.svg",
                      "type" : "string"
                    }
                  },
                  "title" : "aspsp",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of ASPSPs in the list.",
                "example" : 10,
                "type" : "integer"
              }
            },
            "title" : "aspsps",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "2c012075-7a27-4f7f-9861-651de87466ab",
    "name" : "Authenticate with the API.",
    "request" : {
      "urlPath" : "/v1/apps/accesstokens",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiApplicationId\" : 433,\n  \"permissions\" : [ \"PERM_BUSINESSES_GET_ACCOUNTS\", \"PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS\" ],\n  \"businessId\" : 248,\n  \"expiry\" : \"2020-10-22T07:48:56.460Z\",\n  \"accessToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c012075-7a27-4f7f-9861-651de87466ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.843719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "authenticate",
          "schema" : {
            "properties" : {
              "accessToken" : {
                "description" : "The App Bearer Access Token you can use in further API calls.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "apiApplicationId" : {
                "description" : "The ID of the application you are using.",
                "example" : 433,
                "format" : "int64",
                "type" : "integer"
              },
              "businessId" : {
                "description" : "The business ID for the business.",
                "example" : 248,
                "format" : "int64",
                "type" : "integer"
              },
              "expiry" : {
                "description" : "The expiry date and time for this token (ISO-8601).",
                "example" : "2020-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "permissions" : {
                "description" : "The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.",
                "example" : [ "PERM_BUSINESSES_GET_ACCOUNTS", "PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS" ],
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "title" : "accessToken",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "fcf8a61c-bd5c-4747-9278-b15f6061c2e2",
    "name" : "Create a new API Application",
    "request" : {
      "urlPath" : "/v1/apps",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clientId\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"numberOfPayeeApprovalsRequired\" : 1,\n  \"clientKey\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"ican\" : 1898238330551491707,\n  \"expiry\" : \"2019-08-22T07:48:56.460Z\",\n  \"applicationId\" : 45345,\n  \"numberOfPaymentApprovalsRequired\" : 1,\n  \"enabled\" : true,\n  \"refreshToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcf8a61c-bd5c-4747-9278-b15f6061c2e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.843594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createApiApplication",
          "schema" : {
            "properties" : {
              "applicationId" : {
                "description" : "The ID of the API Application",
                "example" : 45345,
                "format" : "int64",
                "type" : "integer"
              },
              "clientId" : {
                "description" : "The Client ID of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "clientKey" : {
                "description" : "The Client Key of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Whether or not this API Application can be used",
                "example" : true,
                "type" : "boolean"
              },
              "expiry" : {
                "description" : "The date that this API Application can no longer be used.",
                "example" : "2019-08-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "ican" : {
                "description" : "The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.",
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfPayeeApprovalsRequired" : {
                "description" : "Number of approvals required to create a payee in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "numberOfPaymentApprovalsRequired" : {
                "description" : "Number of approvals required to process a payment in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "refreshToken" : {
                "description" : "The Refresh Token of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              }
            },
            "title" : "apiApplication",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "aad2e144-18c5-4557-ad4f-0226a93ab923",
    "name" : "Filtered list of transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/5207170148176648231/transactions/filter",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "6604912012817780126"
        },
        "transactionTypes" : {
          "equalTo" : "9cj6gncm7d0nobdf442jslaxwc61gn"
        },
        "dateRangeTo" : {
          "equalTo" : "8983524733080805844"
        },
        "searchKeyword" : {
          "equalTo" : "y560eipe2gwgl4g5usyvuoedj7deo4f4o6u2by3a1sybil5g3bygaazi807e89jetdfseu2kyueubipqsei42y3i7s2p244h3526ku48fu522"
        },
        "dateRangeFrom" : {
          "equalTo" : "6957012239814534287"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-10-15T15:41:33.84Z\",\n      \"maskedPan\" : \"k06sowklm817kz4j9w39yhudn0bbgzs2ynav2dy9pwfbusrygwjmn86katmczd0s89y932mkl09a7lph5x9h48k74lp\",\n      \"provider\" : \"120dzfkmhufgg4zi90f2jy5w0z7bc56o37dghlsmxakkfdk4fyzvyqlhk7\",\n      \"cardId\" : 1095333927408309652,\n      \"embossBusinessName\" : \"Mardell Cronin II\",\n      \"alias\" : \"7s0snw59wsz02wz3lgzo42od4r07vxzlcut5ld091mtoz090g7z8plpidqjufjmf7zw476lk07d3fx28b727xoa0offnjokbwbh266bmn9dq4fnl7oinw2e7oykw\",\n      \"embossCardName\" : \"Gus Wilkinson\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2024-02-16T02:50:41.84Z\",\n      \"maskedPan\" : \"5j2m5v39ccaotum8rn8urbzg9va6a5e1mb7apslw4tjydlv8f4plh3yrm1nds869maqu6tqnrmca41k5knvvnijdum0fuha5pgyfqiv4o3j0btz9rrw0duqac8qdpdhecix0ju1q0gtv862jfbkjb0jmkdhehoj6af5iruvxm91osgv7syg5xzih384f2y\",\n      \"provider\" : \"cttceplrfjfoiq9qgshbpqla\",\n      \"cardId\" : 2901474248679962910,\n      \"embossBusinessName\" : \"Mrs. Dylan Deckow\",\n      \"alias\" : \"hir11e1w6nh5k18nskh063tkd65k8d5x71kzjgsofhgt2aste7yws8es3zdw8vjazxzr7dk0jttkt6rx5s3hzir7jm962rj6ycbhuwn1gpaqza5q17sajr1s1d7lmkkyzrtywqcv3r1vqu6al0cng6evnml1wirtznh\",\n      \"embossCardName\" : \"Dominick Torphy\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 4597135847900086720,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-24T02:14:24.841Z\",\n      \"maskedPan\" : \"md9u8xs7umcbrhwqaxazdnncdtznwj252xcu\",\n      \"provider\" : \"a1wskikey4fn1pptgindma1j3fccfbnns77dghneelyqj4zor8uix79ukhc9zlvorel3mk8yobjrv69sjx2jrx5rwkwzrmkz3yw7pfcd4kvmdy\",\n      \"cardId\" : 463324850056077560,\n      \"embossBusinessName\" : \"Shay Ledner\",\n      \"alias\" : \"woxavb44g0t8xoohgd0nnfvkpvbc9uejp1izymm02bxv33siy\",\n      \"embossCardName\" : \"Deanna Hauck\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"cwbmeotgu2ctf8jcdyeq39f0he2l6nt1zdnxbu12at7uh91y77ma6ofh6jh9v49ce2lvl7fg4u5lhqkspiy1ll4h782tob6zrdkxhozq9hi7osyvx534qr9i76weth2ss9qpmtf82iq0573vkrjy77zanoj3ztukmm\",\n        \"additionalDataDe124\" : \"37ycsaipho6fz1cxxvxv6w11rvhcii714axgmms1pnz7fhv168bf463f5sd09g8wixgo67\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2023-01-17T11:56:00.84135Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"y5nc77dd7r65tel33rrct2j9sf262ypopts67342o5dhe7e81y1tttubvlktq6x3orom8vxqauk3d4qlpc9uahq1tf2oio6v6jhkcx9o4noggkpd7kfejv7jhv6s4t5strhknnr0n068md4hqgqyf2vyodh8775nu0pxrbb3fw8uf2\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-26T22:05:13.841Z\",\n      \"maskedPan\" : \"ce5m5yr7f3gdu5bpbin62qc6b8ij1inap80algcpptrxwltijlj4n29ctmf03aexveu08hdd84748ea1rntff2gybwwvqfplqcttruz1\",\n      \"provider\" : \"b8btppcu9luykczvyx1575o6b4hyho9kzaeujfjh14ghwmsx11uq8s4yuaqg4x47dp3sr7thsb9vp\",\n      \"cardId\" : 2074508512019298924,\n      \"embossBusinessName\" : \"Reinaldo Homenick V\",\n      \"alias\" : \"unbi5paghrzzx9zzzr85rxdv0snoou7c4z0uqs63ypdppa40w9psiwx\",\n      \"embossCardName\" : \"Nelson Torphy\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 1490953971048151053,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-12-27T05:05:38.841Z\",\n      \"maskedPan\" : \"4g7abd7g9ev5cet0breo04s1qf1e3pcshfzq1kjy0tktagd7lgcw07rc5z8yt8mh6ft4bz76cwuy\",\n      \"provider\" : \"krb6hzwwvao9q5jsk2ov6dzv98tvya7rgt5a2tajh26l3a3i2l1qwhp9wt1e3eidhpb0f1qaqdhotan0vicxomflka8jrqngo689bvgrptcw40xykz58q6emsf1eislaon1kc2gg2kcuoybckbfwn91j0p5qs601176ahn6cip9\",\n      \"cardId\" : 8069787454372188475,\n      \"embossBusinessName\" : \"Micah Harber\",\n      \"alias\" : \"1ldhmbv3dvr5nd3d1lrfxdq9dsoaosdix126huaqb9sqea4rnqgjqul78fzavc67ynnan2z8giinqjokl6ang20nk2wxdun2tajk6sxtzl4kvi8y5h508f4jjmw0xc1vhnf5sg2l0qn04kmrlbeaanf0zev2xip6qkywn1ywg67zvws15x\",\n      \"embossCardName\" : \"Vashti Borer Sr.\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aad2e144-18c5-4557-ad4f-0226a93ab923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.843336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsFilteredById",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "83fbf7aa-f2e2-481f-bccc-317fe4909c6a",
    "name" : "List transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/4148626823616089333/transactions",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "673961821451184077"
        },
        "limit" : {
          "equalTo" : "4391334539618011378"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-12-15T03:02:46.836Z\",\n      \"maskedPan\" : \"yzrulra718q4gsrqzzl2ogjlhrj70b7ma7v6foujn9w3rkhb4hi0h597wtzrqdz7g0nkb2bowe615tvl8v9fl1swc1ow57u44cdldlqekh0izcatkt9f2kxkt9obekus2mvwac1l3wy3cl2o00hr4d\",\n      \"provider\" : \"ii4hu486v8j15gg1krou2abfp09xwmvrl\",\n      \"cardId\" : 5880881749320833398,\n      \"embossBusinessName\" : \"Bessie Prohaska\",\n      \"alias\" : \"p0vl9hqoao7k1nlxuu6tnb12zreus9\",\n      \"embossCardName\" : \"Sheba Franecki\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-05-24T21:54:59.836Z\",\n      \"maskedPan\" : \"d93q2dxir6pg8rhgsuh980v6imwymch5iw9n1ckjzmi4b0m4ugeh3iool5amxua3tnajfssku6iho8cgz53ih4rdcds9c0rc2a\",\n      \"provider\" : \"gyul2fwot2o28bnvtr8t202t1nw9ofqzsw7j7ld\",\n      \"cardId\" : 6107136283300738537,\n      \"embossBusinessName\" : \"Cyrus Oberbrunner\",\n      \"alias\" : \"efsido4zo7qpfd94p779woo7gjk0vjp0gozmte1os29dw6c\",\n      \"embossCardName\" : \"Latrice Pagac\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"kgvljkk6u013m0szc5setrbybnsholbckmbx\",\n        \"additionalDataDe124\" : \"toe03yzpk7zn607c4svodonbgolte661aadgo5c3wgh3qt4y1g\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-04-05T15:27:00.836684Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"866w8qcmyr5wldzem583ep0vsluwxi5tvudgjrc6l813nqjlxw3vkzwb4e7vx944zlk1e2lfdi0n9b6a347asm09pp75bug73zyygt1tbr\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-11-13T17:36:34.836Z\",\n      \"maskedPan\" : \"m7q5n300b99mh88fq553rg1o62peewqybhu9wb0d3ce3nbskts52xqu298z5gcz4x10xvwr7dmeer5rofcbwzccus53cbqm0g6p9wkh8pqi5ia34le4sgezljol97gnx16guzpn8wai5wmqzelipp8cquq05s7mzjqq5ftb6xntugy66yq19ej1uefs81orbz9zl9fmq\",\n      \"provider\" : \"i44j\",\n      \"cardId\" : 1434712601903031932,\n      \"embossBusinessName\" : \"Sina Hagenes\",\n      \"alias\" : \"k50ogo873q0q2ke2fp2we8ar0i7q5vuhog68vw2gdzg7fhrvegezyqhlhxdwcommvvsil4kdu6wakj28pljg75nh48x1tj8t13iwqr2562l7e596t1uwlhyinbcirxaqsojr1t8wq4jd66ispj27nyoo05pfc0u6et3rgaa6pcp23lkfat05nsz0q31cq6mtaj3c1e\",\n      \"embossCardName\" : \"Glenda Hills\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"50vzvjlg2th27ju2v56a1i2n6khops28bihqkelm0b3881wyt6dr6mc3bh8ufta885yzvkt5hv8rwbrf2\",\n        \"additionalDataDe124\" : \"dm5befkza5nabfgwp7lmzk6827cxyfslmbkeb9twc4z6tzhn6l13k60orw6wfc1ztzgew0xz2kcphd38o9yn3fiuawj7znwlu4c3nzbnu1umewoohvym9a1olv76ii4chw401qgou\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-10-13T15:40:00.83713Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"w8rh9mcqi3gdf0yuwcvkhzvy8ylrli4iuz6c2ry5tfeqlmcfqe5otooanduvimqm6l03davn5dnki6ffgdoaouz2fqof407kaa9lmfgro6g3mmuzxm327wazy502nn1zxsosdbv1hlxv92waptzo6un4e4m\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-06-11T05:20:19.837Z\",\n      \"maskedPan\" : \"ikuap74bew8v7rnrr4a8rpci5681jals0jf243gyelzsurwf5m4qus1trz7d\",\n      \"provider\" : \"1urwh8z5dlvsldhq79ihkh4c1akpuq5a6lhgfgkgpqmsu7taaedpkz9h1d4dnyg4fpq1mdmka4ewxr4zull3rke4bvlfuyo03oigu3j3fnzxj828nmv5y37o4gd3l51c2jmfo15mkvwawvvfllmlwd47y88ucg7a9zmo0vh\",\n      \"cardId\" : 5448277112237521247,\n      \"embossBusinessName\" : \"Perry Bosco\",\n      \"alias\" : \"zybkcc0xvt3sqofbbctqad8pmt7f4vq0v9t33q3nhc6\",\n      \"embossCardName\" : \"Kimber Runolfsdottir DVM\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-09T11:13:51.837Z\",\n      \"maskedPan\" : \"1gxj\",\n      \"provider\" : \"20eyksmne1ysrkk0d1e5icvdqj5lkoalnrwssa78xxv9o8gjqgbzn1i7kz3qtxti9n12bcx4fafsu29zup8q2a373zei1i4btnrsjv\",\n      \"cardId\" : 2698834387050855217,\n      \"embossBusinessName\" : \"Nina Dicki Sr.\",\n      \"alias\" : \"gs3hj57qp499gmypu3vygmlvso4ljun7zi632rch4vhk3nstuijkfakjqfaeol94xyr323l3e7my0yjlmjd36y07ux839p23160hcgqz\",\n      \"embossCardName\" : \"Daisy Walsh V\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-10-06T03:57:54.837Z\",\n      \"maskedPan\" : \"43zwul37l68zj8gmtet08xlzrliajs0m9oc7uoym9lbo5rpn981sv\",\n      \"provider\" : \"htso7fmctew3u9p77xpxij4o192op880vfwb20l7b8g6lhv6j04jpmdbocs13iq\",\n      \"cardId\" : 5506374499604532514,\n      \"embossBusinessName\" : \"Ted O'Connell\",\n      \"alias\" : \"c46h8gdj8dvwuvni2kbzgqbowni6je1l9f5xz7si918581r038qwt7thpkloaiau481rflx3rx1otsmiv4fwyc339ri2i0d80ogziamay0b26btm3061w2y9gse9vox8v6f5\",\n      \"embossCardName\" : \"Mr. Darren Koss\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-10-24T07:29:47.838Z\",\n      \"maskedPan\" : \"tbj05e6we9iwhwxthgn061p3xcr90ajqiiiaw88tjsc5mq2pd90cckcm6nodxfxi20yrq9hvoo0igji3pjxnjf\",\n      \"provider\" : \"zlc0v60m23jhy4adssgy8fa37k5f44324mz7ruxoos9ohm39hf057nxqosj30varyjapnwbxt84l1bk1u5va8n4me9g8sfmea3th2zcmp2wbty1oa2qrnrz8s5frbjjr4brzm5i1nz8c3p4kqyck07jej6pfg0i3jdkgh8zsrd5wdyb4xy3q33iqa0u49jxkjcy\",\n      \"cardId\" : 2096986541051752884,\n      \"embossBusinessName\" : \"Lindsay Dicki\",\n      \"alias\" : \"wq8a71oo9nksqpapytl9ze9tvoj3esrdow8d6s9e4s7862ew0c0zkvoiafw44zkb014t47wigl23qn0b7oxuidzu8gsang2vbh37bx1w8qj11gakjk0ogojkwqipvyt86z2nlydhxq4ioqgty1lnmgs9fxr1dny6xrqkkmjc327qtjlamur8p0dvo68hbecd3e9ouc8\",\n      \"embossCardName\" : \"Debera Orn\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 1774703109380707189,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-08-16T19:38:24.838Z\",\n      \"maskedPan\" : \"m5o7mxlydvhqtqa6doxyl5ft5nfgng86nehsjksu0lhd0a2shy0yu182dnzdxy7uvakzlmkhykc6lz7ud9s2uj0rm510nyz7o5y9rw9y3e674cmwtd02kaah1ptckqfacoy5nqvqwhsvdubtxe9r9fwk03ex9refmlwvj\",\n      \"provider\" : \"jfx63fqu9nmcgwp5hfgrnaoucxwlwc78oi813wz8lph\",\n      \"cardId\" : 1986211053600670605,\n      \"embossBusinessName\" : \"Danilo Spencer\",\n      \"alias\" : \"cbd5o1c7w6fgswy96qwab311ec0nnisrevh4if9hx2dgelywyjp4933ulkz5dwiwo6ketr4nzc6wy6m3l228bomg07jdxg9m4595n576s2vyemfarqhux4tvkttt9tbhpodfax9ossrl0kfrwwv\",\n      \"embossCardName\" : \"Rita Walker\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83fbf7aa-f2e2-481f-bccc-317fe4909c6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.840088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsByIdv1",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "2e995ebe-1461-4608-a086-acc8dc104068",
    "name" : "Retrieve the details of a fire.com Account - 401",
    "request" : {
      "urlPath" : "/v1/accounts/3366872985267627124",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "2e995ebe-1461-4608-a086-acc8dc104068",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.835831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "9fa4871f-8ea0-4cdf-9539-42acce6c393b",
    "name" : "Retrieve the details of a fire.com Account (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts/4306834028399152006",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fa4871f-8ea0-4cdf-9539-42acce6c393b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.835794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "fe121c3f-8efa-4c85-ba8e-70e3b26a8c76",
    "name" : "Add a new account",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"BREXIT_MIGRATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe121c3f-8efa-4c85-ba8e-70e3b26a8c76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.835544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAccount",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "713241c0-65f2-4601-a4b7-9563b5e22766",
    "name" : "List all fire.com Accounts - 401",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "713241c0-65f2-4601-a4b7-9563b5e22766",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.835313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "83dcbf77-e304-4895-aca1-2a79b5a7a3dc",
    "name" : "List all fire.com Accounts (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accounts\" : [ {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"BREXIT_MIGRATED\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"BREXIT_MIGRATED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83dcbf77-e304-4895-aca1-2a79b5a7a3dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:00.835245Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts",
          "schema" : {
            "properties" : {
              "accounts" : {
                "items" : {
                  "properties" : {
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 23950,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "cbic" : {
                      "description" : "the BIC of the account (provided if currency is EUR).",
                      "example" : "CPAYIE2D",
                      "type" : "string"
                    },
                    "ccan" : {
                      "description" : "the Account Number of the account.",
                      "example" : "11111111",
                      "type" : "string"
                    },
                    "ciban" : {
                      "description" : "the IBAN of the account (provided if currency is EUR).",
                      "example" : "IE54CPAY99119911111111",
                      "type" : "string"
                    },
                    "cnsc" : {
                      "description" : "the Sort Code of the account.",
                      "example" : "232221",
                      "type" : "string"
                    },
                    "colour" : {
                      "deprecated" : true,
                      "description" : "Internal Use",
                      "example" : "ORANGE",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "defaultAccount" : {
                      "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "directDebitsAllowed" : {
                      "description" : "Whether or not direct debits can be set up on this account.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "fopOnly" : {
                      "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com)",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "name" : {
                      "description" : "the name the user gives to the account to help them identify it.",
                      "example" : "Main Account",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                      "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                      "type" : "string"
                    }
                  },
                  "title" : "Account",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "accounts",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  } ]
}