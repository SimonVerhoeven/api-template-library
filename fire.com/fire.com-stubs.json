{
  "mappings" : [ {
    "id" : "7d373d33-1b0e-401a-b32a-76101b55719e",
    "name" : "List transactions for an account (v3)",
    "request" : {
      "urlPath" : "/v3/accounts/1544015780590830222/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"links\" : [ {\n    \"rel\" : \"self\",\n    \"href\" : \"The URL of the linked page\"\n  } ],\n  \"content\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"whzrbrwzkefypzdkx0wcts09mzjt78yxpaw43qwrjwvfzhvryp0xfjmedhsuwyoigbja7rkfmb9i1\",\n        \"additionalDataDe124\" : \"g62mzyuk7j86hvgkqzrqfk4eiuv1v2nc4zkvuig78\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-09-24T14:20:37.449823Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"eb1lgkd6l67j3spbi132nrmdnwrrei6l5111dpcrq8bd0hqn67tnx\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-10-19T23:13:59.449Z\",\n      \"maskedPan\" : \"crtrsa4o571qvmbkdgyewgiu879ye7z8cpqyhc333jbrctjnqfr9y2jbq34qspm2qbrdp73n7folcap66b6ms3fptl39ejp86f1ajgxtt7qfzi62y8p72gbqgop1u6o37y4cfawo2zh2l5dep2tjpwyfcqj8z5giuksb9hwim773udm4495m3zxz5hh\",\n      \"provider\" : \"2n1qts1ec8ubi8eywucy1nuiauriwvz1ee95bsfjqr2tl\",\n      \"cardId\" : 6071586258666887466,\n      \"embossBusinessName\" : \"Thao Swift\",\n      \"alias\" : \"uv0tbj7qy6i5cxmxmv4bf700r294xo2p37qb72olm3p4j9i11rz1f23fqj7gy98bhego\",\n      \"embossCardName\" : \"Malinda Kemmer\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-30T01:46:23.45Z\",\n      \"maskedPan\" : \"hjfnkp4ws9sg881f0jhgamphlpzcwrmwxd4t3b0vpu6y62wg68ek01iurdfr2mxz3aenbvzqxbhgd0r1mtu9gwg4ur210j14gs8dg3h1k3hrvpe09r043oopn2tqq28h3tw2m52wkeczar\",\n      \"provider\" : \"rba8i1mqbcpe2u9rdm4xv2911ra6frf1eudcfxn8vkfxelufraqgqo1atj6eh34mtgrf523c8rvk87f6z70swqx54ovl44tv4t5xkd04fzufwn3zigpl5yx4bi5pa4wlb8amjooi32s5xd2bfi57s29elbrrvpw72qwao\",\n      \"cardId\" : 8441388540747645137,\n      \"embossBusinessName\" : \"Meri Conroy\",\n      \"alias\" : \"liq5gncbwrso\",\n      \"embossCardName\" : \"Ms. Son Kulas\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"l2z7c243jm\",\n        \"additionalDataDe124\" : \"6sdrwlizdttmwp644o4vkxyjumbtny9lupedpl4f1xwkga2wayradc3lv3xpyrujbivjoc84z563h4omitzw85fh7qan9u714tbxfz69rw5na6e92p8j877gbvop2kl\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-05-08T14:33:37.450542Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"51fuexsijibcibsrkw62fixfwwjkdnafvu892zgpq55eyihiwesnhvvbrd8tt544yuo0qoh0mknp7ttub9npgxo2tokcj6u4p9z3donkg7lisdfjo1wt4op8kc9nsmhwqmmdkvkwcazji1orpd9ou12s6mdkc8xzrmzcaqa5q5mak57fce4\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-25T15:15:42.45Z\",\n      \"maskedPan\" : \"d3rqklfbbp2l5r1d6om8m0qrsa9r3jttfjstp5\",\n      \"provider\" : \"22dstqn5gp4zdcsy9gkmr9n85rcg8dx78gzj8q4xc5oyoep8mz1l1e9yk3i2uqw5kd80m506f1j9njnzf8d1cr7j5mia34lqjzavf2e0v\",\n      \"cardId\" : 962447130266916103,\n      \"embossBusinessName\" : \"Mirta Conn\",\n      \"alias\" : \"jngohnijzetk0klye333plhd1wy802uj0kkbsb21551352nldj\",\n      \"embossCardName\" : \"Mr. Jennine Windler\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 6087268999331261539,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-12T23:53:26.451Z\",\n      \"maskedPan\" : \"apkctsoc8u4bl\",\n      \"provider\" : \"xqi8bd902jqt4u2m9kchmxc0otqearn51lhldymncx694klv2hhre5m4z8dkblbxcntjy0yxx\",\n      \"cardId\" : 8834783528712663448,\n      \"embossBusinessName\" : \"Hazel Kuphal\",\n      \"alias\" : \"7feheo2ow2uffbio1d2jrjhftvv0ykl7e90f35o6\",\n      \"embossCardName\" : \"Chadwick Ebert\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"y2m5yrlzay545x7ynae47yhbbab7wzjzxme0pylr5j8tkv9dp6j0bejd9xcs19nprzekbgabb9co4lczs1mwk8eo4ssactyiklx84y6mgpk13g8nn7q7iikwljmndvk5i8zmzzq8579gqvliqjc\",\n        \"additionalDataDe124\" : \"ytceimvzy3g7ntvjnnkw048yjvexuafxb80a5cli4jr5xqe\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-10-24T14:43:37.451261Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"agyd50pkd38fe2ah5un3w5twacu8ikj8jrsfdh9zwz2s462ed6zjhvumbugyvmrwkt2hhlt\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-02-09T14:31:13.451Z\",\n      \"maskedPan\" : \"w8c3bne57vsu98od4m2ufjcc6l0owinzw6b9ts9v0673w3whomeephbyg0m3wwoyt1ql4wkuzlsslhf83k53uctr1eyfckxdj3lb4r9\",\n      \"provider\" : \"h5h1pglypgv5v4atsificr9c41utg4phcqckt2mjj9jg58x8erkh1ik5jpe8yqxi2swxicqk0z9892vazafch0px312b8sfuldb3r2wcstbbuphi1ew\",\n      \"cardId\" : 8561579706295116240,\n      \"embossBusinessName\" : \"Denny Fritsch\",\n      \"alias\" : \"7vt4r1pvnosabq84d6fgykba1fkaa4i8\",\n      \"embossCardName\" : \"Dr. Berry Hodkiewicz\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-11-12T07:34:58.451Z\",\n      \"maskedPan\" : \"pxvsorh41iwd3hmprqmtr7cv6qp5lis3u815\",\n      \"provider\" : \"phrircbv7w9jvsgfzyfs86tbdahvpe7zi96riqkqf5zjpau8s5thmdey03yztmvsw3olw3uamay875y7c0s4udvfj1k2bws2fthqaw6paj1yusw0epxsbjn6atxwj16z7lx3vo46kg99pvem0aqvmmk5w3kdacsz4klho3ovsgsp1\",\n      \"cardId\" : 9046342435177935415,\n      \"embossBusinessName\" : \"Syreeta Gerhold\",\n      \"alias\" : \"sy8pajltok6ilskrooj2n86hrehcqyzroug9k05ejq0lbu7fds3hl5bcs3bc0rfiszt7usjzq7yf68dforirply9\",\n      \"embossCardName\" : \"Ned Moore\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"ea181rh7gxpcyow1eq3vrqqjmv6guufea5xqucojsqhf1aa65kpt1jg7nog37h3585qyzehn91rx1g1xk4mrdulxdueifo8828bnwvvwfre6qkblhh99b4lx61j2ma8u3nt34tud8vqn89ry8xirbrwc5gkz83sv7pgosbiyqic1f\",\n        \"additionalDataDe124\" : \"xmyd3rfb2dwbnytzi9lt74mzh6b1uai5bwtak9si87q6\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2023-01-12T14:59:37.451982Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"k6kgczsc3tyw53p9y8y68nay81rbohvwuhbugpiscxxg6tsv4hm4e7uecvah92tm1kuuvc9cyad5jgrtp298kx4ructk0leqlamy6bev2c\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-09-13T17:44:20.452Z\",\n      \"maskedPan\" : \"cwdznui1qhi77vwm029slo22datqtzyqpn3aldg48f2ifwaq4tam7\",\n      \"provider\" : \"4oc13urgkl39uuw3saeolzqaw68r4g1j03g4ufsqjilhfds82xrg2ju25oz6wtrtm7lymunhskts2pqsgehkbrohjv8ew4yzxfma0xqpq3m780uphiitfpdfc8px14gp5fgp8mlmrgka5nodxgtzzf0dxlplizure0a2d3q1qan40vbj0xidavv965\",\n      \"cardId\" : 6797081975325839123,\n      \"embossBusinessName\" : \"Wade Schmeler\",\n      \"alias\" : \"g8e8wpoppwf47xx5yygfn9506173qmon6efdlnl9hbiyqzcgd07ss8hr81snakhb8xxynnw03a7tbxhz3497crs7lx6f93waif88my0uxjiydjl292ecyeu4x4vyz0mazizaw7qnnlisskg5qm60a\",\n      \"embossCardName\" : \"Kiera Von\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 1231837877396495324,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-28T17:17:43.452Z\",\n      \"maskedPan\" : \"waxqdjdm69yna4ym97gddjupq7v9zb6nbsv96kf867wxl9\",\n      \"provider\" : \"2h83tvb7sr1fs4rr34m7131td3zy41xjsaxm9a5vd7fxikqtzh3dca1626bof9tja7ur8y92r8urgptr1nmn87jorhr78o05x\",\n      \"cardId\" : 4696914331584049596,\n      \"embossBusinessName\" : \"Rodolfo Bednar\",\n      \"alias\" : \"724ifcutrzco6lcyqof19vuizsppqjsih6wn2v06hs19p\",\n      \"embossCardName\" : \"Shane Gleason\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d373d33-1b0e-401a-b32a-76101b55719e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.453489Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsByIdv3",
          "schema" : {
            "properties" : {
              "content" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              },
              "links" : {
                "items" : {
                  "properties" : {
                    "href" : {
                      "description" : "https://api.fire.com/business/v3/accounts/1/transactions?startAfter=eyJpY2F",
                      "example" : "The URL of the linked page",
                      "type" : "string"
                    },
                    "rel" : {
                      "description" : "The relationship of this link to the current object - self, next, prev page.",
                      "example" : "self",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv3",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9d0eded4-830d-4c10-88ec-a2d614efbad5",
    "name" : "Returns list of all users on your fire.com account",
    "request" : {
      "urlPath" : "/v1/users",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"FROZEN\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"FROZEN\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"READ_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"CLOSED\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"FULL_USER\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LOCKED\"\n  },\n  \"status\" : \"CLOSED\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"CLOSED\"\n  },\n  \"status\" : \"INVITE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"Android\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"SMS_SENT\"\n  },\n  \"status\" : \"FROZEN\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Android\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"SMS_SENT\"\n  },\n  \"status\" : \"SMS_CODE_SENT\"\n}, {\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"ADMIN\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"IOS\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"Other\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"SMS_SENT\"\n  },\n  \"status\" : \"LIVE\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d0eded4-830d-4c10-88ec-a2d614efbad5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.449676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUsers",
          "schema" : {
            "items" : {
              "properties" : {
                "emailAddress" : {
                  "description" : "email address for user",
                  "example" : "user@example.com",
                  "type" : "string"
                },
                "firstName" : {
                  "description" : "User first name",
                  "example" : "Colm",
                  "type" : "string"
                },
                "id" : {
                  "description" : "The User ID for this User",
                  "example" : 14059,
                  "format" : "int64",
                  "type" : "integer"
                },
                "lastName" : {
                  "description" : "User second name",
                  "example" : "User",
                  "type" : "string"
                },
                "lastlogin" : {
                  "description" : "Timestamp on when user last logged in.",
                  "example" : "2012-01-20T11:21:35.000Z",
                  "type" : "string"
                },
                "mobileApplicationDetails" : {
                  "properties" : {
                    "OS" : {
                      "description" : "Operating system of device.",
                      "enum" : [ "Android", "IOS", "OTHER" ],
                      "type" : "string"
                    },
                    "businessUserId" : {
                      "description" : "Business user ID",
                      "example" : "14059",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "clientID" : {
                      "description" : "Client ID of user.",
                      "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                      "type" : "string"
                    },
                    "deviceName" : {
                      "description" : "type of device.",
                      "enum" : [ "iPhone", "Android", "Other" ],
                      "type" : "string"
                    },
                    "deviceOSVersion" : {
                      "description" : "OS version for device.",
                      "example" : "14.4",
                      "type" : "string"
                    },
                    "mobileApplicationId" : {
                      "description" : "Mobile application id for user.",
                      "example" : "18967",
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "status" : {
                      "description" : "Status of user",
                      "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                      "type" : "string"
                    }
                  },
                  "title" : "mobileApplication",
                  "type" : "object"
                },
                "mobileNumber" : {
                  "description" : "User mobile number",
                  "example" : "+353871234567",
                  "type" : "string"
                },
                "role" : {
                  "description" : "User role",
                  "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                  "type" : "string"
                },
                "status" : {
                  "description" : "Status of user",
                  "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                  "type" : "string"
                },
                "userCvl" : {
                  "description" : "Users Cvl type ID (shows up when status is LIVE)",
                  "example" : "FULL",
                  "type" : "string"
                }
              },
              "title" : "user",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "87083410-9281-49c0-8cff-358adb51b5f6",
    "name" : "Returns details of a specific fire.com user.",
    "request" : {
      "urlPath" : "/v1/user/3060060618557941791",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firstName\" : \"Colm\",\n  \"lastName\" : \"User\",\n  \"emailAddress\" : \"user@example.com\",\n  \"role\" : \"CARD_ONLY\",\n  \"userCvl\" : \"FULL\",\n  \"lastlogin\" : \"2012-01-20T11:21:35.000Z\",\n  \"mobileNumber\" : \"+353871234567\",\n  \"id\" : 14059,\n  \"mobileApplicationDetails\" : {\n    \"businessUserId\" : \"14059\",\n    \"clientID\" : \"EBB10F29-A653-4DBA-9C8C-BA79F72F78B0\",\n    \"OS\" : \"OTHER\",\n    \"mobileApplicationId\" : \"18967\",\n    \"deviceName\" : \"iPhone\",\n    \"deviceOSVersion\" : \"14.4\",\n    \"status\" : \"LIVE\"\n  },\n  \"status\" : \"CLOSED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87083410-9281-49c0-8cff-358adb51b5f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.448944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "properties" : {
              "emailAddress" : {
                "description" : "email address for user",
                "example" : "user@example.com",
                "type" : "string"
              },
              "firstName" : {
                "description" : "User first name",
                "example" : "Colm",
                "type" : "string"
              },
              "id" : {
                "description" : "The User ID for this User",
                "example" : 14059,
                "format" : "int64",
                "type" : "integer"
              },
              "lastName" : {
                "description" : "User second name",
                "example" : "User",
                "type" : "string"
              },
              "lastlogin" : {
                "description" : "Timestamp on when user last logged in.",
                "example" : "2012-01-20T11:21:35.000Z",
                "type" : "string"
              },
              "mobileApplicationDetails" : {
                "properties" : {
                  "OS" : {
                    "description" : "Operating system of device.",
                    "enum" : [ "Android", "IOS", "OTHER" ],
                    "type" : "string"
                  },
                  "businessUserId" : {
                    "description" : "Business user ID",
                    "example" : "14059",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "clientID" : {
                    "description" : "Client ID of user.",
                    "example" : "EBB10F29-A653-4DBA-9C8C-BA79F72F78B0",
                    "type" : "string"
                  },
                  "deviceName" : {
                    "description" : "type of device.",
                    "enum" : [ "iPhone", "Android", "Other" ],
                    "type" : "string"
                  },
                  "deviceOSVersion" : {
                    "description" : "OS version for device.",
                    "example" : "14.4",
                    "type" : "string"
                  },
                  "mobileApplicationId" : {
                    "description" : "Mobile application id for user.",
                    "example" : "18967",
                    "format" : "int64",
                    "type" : "integer"
                  },
                  "status" : {
                    "description" : "Status of user",
                    "enum" : [ "LIVE", "CLOSED", "LOCKED", "SMS_SENT" ],
                    "type" : "string"
                  }
                },
                "title" : "mobileApplication",
                "type" : "object"
              },
              "mobileNumber" : {
                "description" : "User mobile number",
                "example" : "+353871234567",
                "type" : "string"
              },
              "role" : {
                "description" : "User role",
                "enum" : [ "ADMIN", "FULL_USER", "READ_ONLY", "CARD_ONLY" ],
                "type" : "string"
              },
              "status" : {
                "description" : "Status of user",
                "enum" : [ "LIVE", "CLOSED", "FROZEN", "INVITE_SENT", "SMS_CODE_SENT" ],
                "type" : "string"
              },
              "userCvl" : {
                "description" : "Users Cvl type ID (shows up when status is LIVE)",
                "example" : "FULL",
                "type" : "string"
              }
            },
            "title" : "user",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "484421fa-76fb-4217-977b-5986ae247ccd",
    "name" : "Get Payment Details",
    "request" : {
      "urlPath" : "/v1/payments/60b8f755-4cde-3671-852d-79aad1835ef1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"amount\" : 1000,\n  \"additionalFields\" : \"ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2\",\n  \"description\" : \"Gym Fees Oct 2020\",\n  \"type\" : \"OTHER\",\n  \"webhookUrl\" : \"https://example.com/webhook\",\n  \"icanTo\" : 42,\n  \"transactionType\" : \"REFUND_REQUEST\",\n  \"orderDetails\" : {\n    \"deliveryCity\" : \"London\",\n    \"comment2\" : \"Additional comments about the transaction\",\n    \"productId\" : \"ZFDAA-1221\",\n    \"comment1\" : \"Additional comments about the transaction\",\n    \"orderId\" : \"6c28a47d-4502-4111\",\n    \"variableReference\" : \"John Doe\",\n    \"merchantCustomerIdentification\" : 8303863544,\n    \"customerNumber\" : \"123645\",\n    \"merchantNumber\" : \"1234567\",\n    \"deliveryPostCode\" : \"EC15155\",\n    \"deliveryCountry\" : \"GB\",\n    \"deliveryAddressLine2\" : \"The Way\",\n    \"deliveryAddressLine1\" : \"12 The Street\"\n  },\n  \"paymentUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"maxNumberPayments\" : 1,\n  \"mandatoryFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"collectFields\" : \"ADDRESS|REFERENCE|COMMENT1\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"expiry\" : \"2024-10-22T07:48:56.460Z\",\n  \"returnUrl\" : \"https://example.com/callback\",\n  \"myRef\" : \"Fees\",\n  \"paymentRequestCode\" : \"1234abcd\",\n  \"status\" : \"REJECTED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "484421fa-76fb-4217-977b-5986ae247ccd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.448693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPaymentDetails",
          "schema" : {
            "properties" : {
              "additionalFields" : {
                "description" : "These fields will be dispalyed to the payer when using the hosted option. You can choose to display any of `ORDER_ID`, `PRODUCT_ID`, `CUSTOMER_ID`, `CUSTOMER_NUMBER` and `COMMENT2` to the payer.",
                "example" : "ORDER_ID|PRODUCT_ID|CUSTOMER_ID|CUSTOMER_NUMBER|COMMENT2",
                "type" : "string"
              },
              "amount" : {
                "description" : "The requested amount to pay. Note the last two digits represent pennies/cents, (e.g., £1.00 = 100).",
                "example" : 1000,
                "format" : "int64",
                "type" : "integer"
              },
              "collectFields" : {
                "description" : "For the hosted option, the payer will be asked to fill in these fields but they will not be mandatory. You can choose to collect any of the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "description" : {
                "description" : "A public facing description of the request. This will be shown to the user when they tap or scan the request.",
                "example" : "Gym Fees Oct 2020",
                "type" : "string"
              },
              "expiry" : {
                "description" : "This is the expiry of the payment request. After this time, the payment cannot be paid.",
                "example" : "2024-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "icanTo" : {
                "description" : "The ican of the account to collect the funds into. Must be one of your fire.com Accounts.",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "mandatoryFields" : {
                "description" : "For the hosted option, these fields will be madatory for the payer to fill in on the hosted payment page. You can choose to collect any the payer's `ADDRESS`, `REFERENCE` and/or `COMMENT1`. If you choose to collect these fields from the payer, you cannot set 'delivery’, 'variableReference’ or 'comment1’ fields respectively.",
                "example" : "ADDRESS|REFERENCE|COMMENT1",
                "type" : "string"
              },
              "maxNumberPayments" : {
                "description" : "The max number of people who can pay this request. Must be set to 1 for the ECOMMERCE_GOODS and ECOMMERCE_SERVICES types.",
                "example" : 1,
                "type" : "integer"
              },
              "myRef" : {
                "description" : "An internal description of the request.",
                "example" : "Fees",
                "type" : "string"
              },
              "orderDetails" : {
                "properties" : {
                  "comment1" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "comment2" : {
                    "description" : "This is your own comment for the transaction.",
                    "example" : "Additional comments about the transaction",
                    "type" : "string"
                  },
                  "customerNumber" : {
                    "description" : "Use this field to store a customer number for the transaction (for example).",
                    "example" : "123645",
                    "type" : "string"
                  },
                  "deliveryAddressLine1" : {
                    "description" : "The first line of the delivery address.",
                    "example" : "12 The Street",
                    "type" : "string"
                  },
                  "deliveryAddressLine2" : {
                    "description" : "The second line of the delivery address.",
                    "example" : "The Way",
                    "type" : "string"
                  },
                  "deliveryCity" : {
                    "description" : "Delivery address city",
                    "example" : "London",
                    "type" : "string"
                  },
                  "deliveryCountry" : {
                    "description" : "2-digit code for the country",
                    "example" : "GB",
                    "type" : "string"
                  },
                  "deliveryPostCode" : {
                    "description" : "Delivery address post code",
                    "example" : "EC15155",
                    "type" : "string"
                  },
                  "merchantCustomerIdentification" : {
                    "description" : "This is a reference you use to uniquely identify each of your customers.",
                    "example" : 8303863544,
                    "type" : "string"
                  },
                  "merchantNumber" : {
                    "description" : "Your Merchant Number (if applicable).",
                    "example" : "1234567",
                    "type" : "string"
                  },
                  "orderId" : {
                    "description" : "Use this field to store the order id for the transaction. The Order Id cannot be set unless the `maxNumberPayments` is 1.",
                    "example" : "6c28a47d-4502-4111",
                    "type" : "string"
                  },
                  "productId" : {
                    "description" : "Use this field to store a product id for the transaction (for example).",
                    "example" : "ZFDAA-1221",
                    "type" : "string"
                  },
                  "variableReference" : {
                    "description" : "Use this field to store any other reference for the transaction (for example, a phone number).",
                    "example" : "John Doe",
                    "type" : "string"
                  }
                },
                "title" : "orderDetails",
                "type" : "object"
              },
              "paymentRequestCode" : {
                "description" : "The code that was returned when you created the payment request.",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "paymentUuid" : {
                "description" : "A unique id for the transaction.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "returnUrl" : {
                "description" : "The merchant return URL where the customer will be re-directed to with the result of the transaction.",
                "example" : "https://example.com/callback",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the transaction",
                "enum" : [ "AWAITING_AUTHORISATION", "AUTHORISED", "AWAITING_MULTI_AUTHORISATION", "NOT_AUTHORISED", "PAID", "REJECTED", "ACCEPTED", "RECEIVED" ],
                "type" : "string"
              },
              "transactionType" : {
                "description" : "The type of payment request payment",
                "enum" : [ "REFUND_REQUEST", "PAYMENT" ],
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created",
                "enum" : [ "OTHER" ],
                "type" : "string"
              },
              "webhookUrl" : {
                "description" : "A URL to be called in the background with the details of the payment after the payment is complete",
                "example" : "https://example.com/webhook",
                "type" : "string"
              }
            },
            "title" : "paymentRequest",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "af662ca0-ba08-40ad-b99e-d2cfc01d822d",
    "name" : "Create a Fire Open Payment request",
    "request" : {
      "urlPath" : "/v1/paymentrequests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"code\" : \"1234abcd\",\n  \"type\" : \"OTHER\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af662ca0-ba08-40ad-b99e-d2cfc01d822d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.448313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "newPaymentRequest",
          "schema" : {
            "properties" : {
              "code" : {
                "description" : "The code for this request. Create a URL in this format: `https://payments.fire.com/{code}` and share to your customers.\n",
                "example" : "1234abcd",
                "maxLength" : 8,
                "minLength" : 8,
                "type" : "string"
              },
              "type" : {
                "description" : "The type of Fire Open Payment that was created.",
                "enum" : [ "OTHER" ],
                "type" : "string"
              }
            },
            "title" : "newPaymentRequestResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cebce90d-8e7c-4152-9d91-cbefe3e399cb",
    "name" : "List all Payee Bank Accounts",
    "request" : {
      "urlPath" : "/v1/payees",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"fundingSources\" : [ {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  }, {\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"accountName\" : \"Joe\",\n    \"createdBy\" : \"CUSTOMER\",\n    \"iban\" : \"IE86BOFI90535211111111\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"id\" : 742,\n    \"accountNumber\" : \"12345678\",\n    \"accountHolderName\" : \"Joe Bloggs\",\n    \"bic\" : \"BOFIIE2DXXX\",\n    \"nsc\" : \"998822\",\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cebce90d-8e7c-4152-9d91-cbefe3e399cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.448243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getPayees",
          "schema" : {
            "properties" : {
              "fundingSources" : {
                "items" : {
                  "properties" : {
                    "accountHolderName" : {
                      "description" : "The name on the payee bank account.",
                      "example" : "Joe Bloggs",
                      "type" : "string"
                    },
                    "accountName" : {
                      "description" : "The alias attributed to the payee, usually set by the user when creating the payee.",
                      "example" : "Joe",
                      "type" : "string"
                    },
                    "accountNumber" : {
                      "description" : "The Account Number of the account if currency is GBP.",
                      "example" : "12345678",
                      "type" : "string"
                    },
                    "bic" : {
                      "description" : "The BIC of the account if currency is EUR.",
                      "example" : "BOFIIE2DXXX",
                      "type" : "string"
                    },
                    "createdBy" : {
                      "description" : "The creation source of the payee.",
                      "enum" : [ "CUSTOMER", "LODGEMENT", "DIRECT DEBIT", "OPEN BANKING", "FIRE OPEN PAYMENT", "FIRE DIRECT" ],
                      "example" : "CUSTOMER",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the payee was created. ISO Date Time.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "iban" : {
                      "description" : "The IBAN of the account if currency is EUR.",
                      "example" : "IE86BOFI90535211111111",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "Identifier for the fire.com payee bank account (assigned by fire.com).",
                      "example" : 742,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "nsc" : {
                      "description" : "The Sort Code of the account if currency is GBP.",
                      "example" : "998822",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the payee. Only payees in LIVE status can be selected as a destination account for an outgoing payment.\n  * 'CREATED' - The payee has been set-up via Bank Transfer Received, Direct Debit, or Open Banking. This payee must be converted to LIVE status to select as a destination account for an outgoing payment.\n  * 'LIVE' - The payee can be selected as a destination account for an outgoing payment.\n  * 'CLOSED'\n  * 'ARCHIVED' - The payee has been deleted and must be added again to be selected as a destination account for an outgoing payment.\n",
                      "enum" : [ "CREATED", "LIVE", "CLOSED", "ARCHIVED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    }
                  },
                  "title" : "payee",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of payees in the list.",
                "example" : 1,
                "type" : "integer"
              }
            },
            "title" : "payeeBankAccounts",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b3fd032a-74db-4558-be22-486fa5aadaa1",
    "name" : "Cancel a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/75736279-19d7-3a0d-a241-7ccf879aa617/cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b3fd032a-74db-4558-be22-486fa5aadaa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.447992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelMandateByUuid"
        }
      }
    }
  }, {
    "id" : "aa5e118f-9a12-422e-a686-d231f7f1e622",
    "name" : "Activate a direct debit mandate - 204",
    "request" : {
      "urlPath" : "/v1/mandates/9af7ac42-2e5b-3bff-89d9-6b558a8eddf1/activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "aa5e118f-9a12-422e-a686-d231f7f1e622",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.447954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "activateMandate"
        }
      }
    }
  }, {
    "id" : "da27ff26-c415-4dbd-9197-d5335fc37010",
    "name" : "Update a direct debit mandate alias - 204",
    "request" : {
      "urlPath" : "/v1/mandates/b33977cd-cf46-37c7-87b7-ce549c21fa4b",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "da27ff26-c415-4dbd-9197-d5335fc37010",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.447916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateMandateAlias"
        }
      }
    }
  }, {
    "id" : "c22b14e8-91ee-4b28-aeff-8eeb251afba2",
    "name" : "Get direct debit mandate details",
    "request" : {
      "urlPath" : "/v1/mandates/96a8d71c-f39b-35d3-97fa-1dfc3108575e",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"originatorReference\" : \"VODA-123456\",\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 1,\n  \"latestDirectDebitAmount\" : 2,\n  \"numberOfDirectDebitCollected\" : 2,\n  \"valueOfDirectDebitCollected\" : 2,\n  \"originatorAlias\" : \"Vodaphone PLC\",\n  \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateReference\" : \"CRZ-102190123\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n  \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n  \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n  \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n  \"alias\" : \"Vodaphone\",\n  \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n  \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c22b14e8-91ee-4b28-aeff-8eeb251afba2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.447864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getMandate",
          "schema" : {
            "properties" : {
              "alias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCancelled" : {
                "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCompleted" : {
                "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "fireRejectionReason" : {
                "description" : "Rejection reason if transaction is rejected",
                "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "latestDirectDebitAmount" : {
                "description" : "The value of largest direct debit collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "latestDirectDebitDate" : {
                "description" : "The date of latest direct debit collected",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateReference" : {
                "description" : "the reference of the mandate",
                "example" : "CRZ-102190123",
                "type" : "string"
              },
              "mandateUuid" : {
                "description" : "The UUID for the mandate",
                "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                "type" : "string"
              },
              "numberOfDirectDebitCollected" : {
                "description" : "The number of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              },
              "originatorAlias" : {
                "description" : "The name of the alias",
                "example" : "Vodaphone PLC",
                "type" : "string"
              },
              "originatorLogoUrlLarge" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoLarge",
                "type" : "string"
              },
              "originatorLogoUrlSmall" : {
                "description" : "Logo url from party who sets up the direct debit.",
                "example" : "originatorLogoSmall",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeCancelReason" : {
                "description" : "Reason for cancelation",
                "example" : "e.g. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeCancelReasonCode" : {
                "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                "type" : "string"
              },
              "status" : {
                "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "Identifier for the fire.com account (assigned by fire.com)",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfDirectDebitCollected" : {
                "description" : "The value of direct debits collected",
                "example" : 2,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandate",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "faf8ad9a-95e1-4cf7-ace2-f49fe5c422c2",
    "name" : "List all direct debit mandates",
    "request" : {
      "urlPath" : "/v1/mandates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"mandates\" : [ {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"originatorReference\" : \"VODA-123456\",\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 1,\n    \"latestDirectDebitAmount\" : 2,\n    \"numberOfDirectDebitCollected\" : 2,\n    \"valueOfDirectDebitCollected\" : 2,\n    \"originatorAlias\" : \"Vodaphone PLC\",\n    \"latestDirectDebitDate\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCancelled\" : \"2016-12-15T22:56:05.937Z\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateReference\" : \"CRZ-102190123\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlLarge\" : \"originatorLogoLarge\",\n    \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n    \"dateCompleted\" : \"2016-12-15T22:56:05.937Z\",\n    \"originatorLogoUrlSmall\" : \"originatorLogoSmall\",\n    \"alias\" : \"Vodaphone\",\n    \"schemeCancelReason\" : \"e.g. Instruction cancelled by payer\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"fireRejectionReason\" : \"ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS\",\n    \"schemeCancelReasonCode\" : \"For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R\",\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faf8ad9a-95e1-4cf7-ace2-f49fe5c422c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.44759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitMandates",
          "schema" : {
            "properties" : {
              "mandates" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCancelled" : {
                      "description" : "Date the direct debit was canceled. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCompleted" : {
                      "description" : "Date the direct debit was completed. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "fireRejectionReason" : {
                      "description" : "Rejection reason if transaction is rejected",
                      "enum" : [ "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS", "DDIC", "ACCOUNT_NOT_FOUND", "ACCOUNT_NOT_LIVE", "CUSTOMER_NOT_FOUND", "BUSINESS_NOT_LIVE", "BUSINESS_NOT_FULL", "PERSONAL_USER_NOT_LIVE", "PERSONAL_USER_NOT_FULL", "MANDATE_ALREADY_EXISTS", "MANDATE_WITH_DIFERENT_ACCOUNT", "NULL_MANDATE_REFERENCE", "INVALID_ACCOUNT_CURRENCY", "INVALID_MANDATE_REFERENCE", "REQUESTED_BY_CUSTOMER_VIA_SUPPORT", "CUSTOMER_ACCOUNT_CLOSED", "CUSTOMER_DECEASED", "ACCOUNT_TRANSFERRED", "MANDATE_NOT_FOUND", "ACCOUNT_TRANSFERRED_TO_DIFFERENT_ACCOUNT", "INVALID_ACCOUNT_TYPE", "MANDATE_EXPIRED", "MANDATE_CANCELLED", "REQUESTED_BY_CUSTOMER" ],
                      "example" : "ACCOUNT_DOES_NOT_ACCEPT_DIRECT_DEBITS",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "latestDirectDebitAmount" : {
                      "description" : "The value of largest direct debit collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "latestDirectDebitDate" : {
                      "description" : "The date of latest direct debit collected",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateReference" : {
                      "description" : "the reference of the mandate",
                      "example" : "CRZ-102190123",
                      "type" : "string"
                    },
                    "mandateUuid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                      "type" : "string"
                    },
                    "numberOfDirectDebitCollected" : {
                      "description" : "The number of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "originatorAlias" : {
                      "description" : "The name of the alias",
                      "example" : "Vodaphone PLC",
                      "type" : "string"
                    },
                    "originatorLogoUrlLarge" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoLarge",
                      "type" : "string"
                    },
                    "originatorLogoUrlSmall" : {
                      "description" : "Logo url from party who sets up the direct debit.",
                      "example" : "originatorLogoSmall",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeCancelReason" : {
                      "description" : "Reason for cancelation",
                      "example" : "e.g. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeCancelReasonCode" : {
                      "description" : "The cancelation code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "example" : "For BACS (ADDACS) - 0|1|2|3|B|C|D|E|R",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The status of the mandate.\n* 'CREATED'\n* 'LIVE'\n* 'REJECT_REQUESTED'\n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'CANCEL_REQUESTED'\n* 'CANCEL_RECORD_IN_PROGRESS'\n* 'CANCEL_RECORDED'\n* 'CANCEL_FILE_CREATED'\n* 'CANCEL_FILE_SENT'\n* 'COMPLETE'\n* 'DORMANT'\n",
                      "enum" : [ "CREATED", "LIVE", "REJECT_REQUESTED", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "CANCEL_REQUESTED", "CANCEL_RECORD_IN_PROGRESS", "CANCEL_RECORDED", "CANCEL_FILE_CREATED", "CANCEL_FILE_SENT", "COMPLETE", "DORMANT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "Identifier for the fire.com account (assigned by fire.com)",
                      "example" : 1,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "valueOfDirectDebitCollected" : {
                      "description" : "The value of direct debits collected",
                      "example" : 2,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "mandate",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "mandates",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "55e4d7dc-ee3b-472e-b631-115de3274e0b",
    "name" : "Reject a direct debit payment - 204",
    "request" : {
      "urlPath" : "/v1/directdebits/2ad89e65-5c3c-34ac-9259-b2f6b1bf254f/reject",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "55e4d7dc-ee3b-472e-b631-115de3274e0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.447254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rejectDirectDebit"
        }
      }
    }
  }, {
    "id" : "82f80183-a4d5-425d-9058-07ff49427cbb",
    "name" : "Get the details of a direct debit",
    "request" : {
      "urlPath" : "/v1/directdebits/5b09d272-1d9f-3184-ad3e-e11e389fd5c8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"directDebitReference\" : \"VODA-ABC453-1\",\n  \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n  \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n  \"originatorReference\" : \"VODA-123456\",\n  \"amount\" : 100,\n  \"originatorName\" : \"Vodafone PLC\",\n  \"targetIcan\" : 42,\n  \"isDDIC\" : false,\n  \"originatorAlias\" : \"Three\",\n  \"type\" : \"FIRST_COLLECTION\",\n  \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n  \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n  \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n  \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n  \"targetPayeeId\" : 12,\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"RECIEVED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82f80183-a4d5-425d-9058-07ff49427cbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.447203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitByUuid",
          "schema" : {
            "properties" : {
              "amount" : {
                "description" : "Value of the payment",
                "example" : 100,
                "format" : "int64",
                "type" : "integer"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "dateCreated" : {
                "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "directDebitReference" : {
                "description" : "The direct debit reference.",
                "example" : "VODA-ABC453-1",
                "type" : "string"
              },
              "directDebitUuid" : {
                "description" : "The UUID for the direct debit payment",
                "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                "type" : "string"
              },
              "isDDIC" : {
                "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                "example" : false,
                "type" : "boolean"
              },
              "lastUpdated" : {
                "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                "example" : "2016-12-15T22:56:05.937Z",
                "format" : "date-time",
                "type" : "string"
              },
              "mandateUUid" : {
                "description" : "The UUID for the mandate",
                "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                "type" : "string"
              },
              "originatorAlias" : {
                "description" : "The Alias of the party who sets up the direct debit.",
                "example" : "Three",
                "type" : "string"
              },
              "originatorName" : {
                "description" : "The creator of the party who sets up the direct debit.",
                "example" : "Vodafone PLC",
                "type" : "string"
              },
              "originatorReference" : {
                "description" : "Set by party who sets up the direct debit.",
                "example" : "VODA-123456",
                "type" : "string"
              },
              "schemeRejectReason" : {
                "description" : "Reason why rejected",
                "example" : "eg. Instruction cancelled by payer",
                "type" : "string"
              },
              "schemeRejectReasonCode" : {
                "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                "type" : "string"
              },
              "status" : {
                "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                "example" : "RECIEVED",
                "type" : "string"
              },
              "targetIcan" : {
                "description" : "The ican of your fire account that the money was taken from",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "targetPayeeId" : {
                "description" : "The payee that was created when the DD was processed",
                "example" : 12,
                "format" : "int64",
                "type" : "integer"
              },
              "type" : {
                "description" : "The type of the direct debit.",
                "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                "example" : "FIRST_COLLECTION",
                "type" : "string"
              }
            },
            "title" : "directDebit",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9dd63817-6a5b-48f1-81c4-3c781c4ffd89",
    "name" : "Get all DD payments associated with a direct debit mandate",
    "request" : {
      "urlPath" : "/v1/directdebits",
      "method" : "GET",
      "queryParameters" : {
        "mandateUuid" : {
          "equalTo" : "11491a9f-4eea-3909-9de1-f87f5c8d284b"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"directdebits\" : [ {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  }, {\n    \"directDebitReference\" : \"VODA-ABC453-1\",\n    \"schemeRejectReason\" : \"eg. Instruction cancelled by payer\",\n    \"schemeRejectReasonCode\" : \"for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B\",\n    \"originatorReference\" : \"VODA-123456\",\n    \"amount\" : 100,\n    \"originatorName\" : \"Vodafone PLC\",\n    \"targetIcan\" : 42,\n    \"isDDIC\" : false,\n    \"originatorAlias\" : \"Three\",\n    \"type\" : \"FIRST_COLLECTION\",\n    \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"lastUpdated\" : \"2016-12-15T22:56:05.937Z\",\n    \"dateCreated\" : \"2016-12-15T22:56:05.937Z\",\n    \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n    \"targetPayeeId\" : 12,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"RECIEVED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dd63817-6a5b-48f1-81c4-3c781c4ffd89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.446974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDirectDebitsForMandateUuid",
          "schema" : {
            "properties" : {
              "directdebits" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "Value of the payment",
                      "example" : 100,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "Date the direct debit was created. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitReference" : {
                      "description" : "The direct debit reference.",
                      "example" : "VODA-ABC453-1",
                      "type" : "string"
                    },
                    "directDebitUuid" : {
                      "description" : "The UUID for the direct debit payment",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "isDDIC" : {
                      "description" : "DDIC is a Direct Debit Indemnity Claim (i.e.a refund). If if the DD is requested to be refunded it is marked isDDIC true.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "lastUpdated" : {
                      "description" : "Date the direct debit was last updated. Milliseconds since the epoch (1970).",
                      "example" : "2016-12-15T22:56:05.937Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mandateUUid" : {
                      "description" : "The UUID for the mandate",
                      "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                      "type" : "string"
                    },
                    "originatorAlias" : {
                      "description" : "The Alias of the party who sets up the direct debit.",
                      "example" : "Three",
                      "type" : "string"
                    },
                    "originatorName" : {
                      "description" : "The creator of the party who sets up the direct debit.",
                      "example" : "Vodafone PLC",
                      "type" : "string"
                    },
                    "originatorReference" : {
                      "description" : "Set by party who sets up the direct debit.",
                      "example" : "VODA-123456",
                      "type" : "string"
                    },
                    "schemeRejectReason" : {
                      "description" : "Reason why rejected",
                      "example" : "eg. Instruction cancelled by payer",
                      "type" : "string"
                    },
                    "schemeRejectReasonCode" : {
                      "description" : "The reject code returned by the bank indicating an issue with the direct debit. Each ARRUD code represents a rejection reason.",
                      "enum" : [ "0", "1", "2", "3", "4", "5", "6", "7", "8", "9", "A", "B" ],
                      "example" : "for BACS (ARUDD) 0|1|2|3|5|6|7|8|9|A|B",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "The statuses of the direct debit payments associated with the mandate.\n* 'RECIEVED' - Direct Debit has been recieved\n* 'REJECT_REQUESTED' - The direct debit has a rejected request associated with it\n* 'REJECT_READY_FOR_PROCESSING' \n* 'REJECT_RECORD_IN_PROGRESS'\n* 'REJECT_RECORDED'\n* 'REJECT_FILE_CREATED'\n* 'REJECT_FILE_SENT'\n* 'COLLECTED' - Direct debit collected\n* 'REFUND_REQUESTED' - Refund requested on direct debit\n* 'REFUND_RECORD_IN_PROGRESS' - Refund in progress on direct debit\n* 'REFUND_RECORDED'\n* 'REFUND_FILE_CREATED'\n* 'REFUND_FILE_SENT' \n",
                      "enum" : [ "RECIEVED", "REJECT_REQUESTED", "REJECT_READY_FOR_PROCESSING", "REJECT_RECORD_IN_PROGRESS", "REJECT_RECORDED", "REJECT_FILE_CREATED", "REJECT_FILE_SENT", "COLLECTED", "REFUND_REQUESTED", "REFUND_RECORD_IN_PROGRESS", "REFUND_RECORDED", "REFUND_FILE_CREATED", "REFUND_FILE_SENT" ],
                      "example" : "RECIEVED",
                      "type" : "string"
                    },
                    "targetIcan" : {
                      "description" : "The ican of your fire account that the money was taken from",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "targetPayeeId" : {
                      "description" : "The payee that was created when the DD was processed",
                      "example" : 12,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the direct debit.",
                      "enum" : [ "FIRST_COLLECTION", "ONGOING_COLLECTION", "REPRESENTED_COLLECTION", "FINAL_COLLECTION" ],
                      "example" : "FIRST_COLLECTION",
                      "type" : "string"
                    }
                  },
                  "title" : "directDebit",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "Number of direct debits found",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "directDebits",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2ee7d998-4058-4ee0-9024-4ee55eba7f3a",
    "name" : "Unblock a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/1607262524452310097/unblock",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "2ee7d998-4058-4ee0-9024-4ee55eba7f3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.446442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "unblockCard"
        }
      }
    }
  }, {
    "id" : "3fcea150-0d40-41fb-ada6-af0932ff1a41",
    "name" : "List Card Transactions. - 403",
    "request" : {
      "urlPath" : "/v1/cards/6558728506411786097/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "3fcea150-0d40-41fb-ada6-af0932ff1a41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.44642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    }
  }, {
    "id" : "ec38676b-235d-45cb-937a-f59b88bec435",
    "name" : "List Card Transactions. - 401",
    "request" : {
      "urlPath" : "/v1/cards/8627231273280780749/transactions",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "ec38676b-235d-45cb-937a-f59b88bec435",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.446399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions"
        }
      }
    }
  }, {
    "id" : "73de3145-2c8f-46e6-938f-4ae4fabca92f",
    "name" : "List Card Transactions. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards/6980286235805608117/transactions",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-03-08T03:03:42.441Z\",\n      \"maskedPan\" : \"ihasogunv2s5tkko7cj1l3ux7uyzt4vojzekqo34a4osgpomdnhiqx4bg8k27btpjjrm6mkvlfe4z26sk7xfo4x0ig9rka3kljroilh8w6o4fldw7wjrzx49m7lnje5nijg9qqzzmxncabmf3mrn7r27srdh92ufq5gywpavssnly3hac1\",\n      \"provider\" : \"c79wiha71v7u8h69l352gjmzmktieqm3x65qz3b3unu66kcly6xyzlvk68vptab8fbaoo799auchxysoydwlzwmkruegto6qah545l2twz0adokeukjvhfrkjthshbh47a5ul6zqb0nh11muorp9tnxw\",\n      \"cardId\" : 1385141805983699279,\n      \"embossBusinessName\" : \"Oscar Wolf\",\n      \"alias\" : \"l5d88trw164fmb2a85qq6fh3lbmwuc5eunuznzdmdlzg4s7paiqq\",\n      \"embossCardName\" : \"Ivory Windler\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-04-14T20:11:24.441Z\",\n      \"maskedPan\" : \"isqr23jhmjql3ja4bxk694ln7cehqgsfxhsyuuadebuucag00clceqvpm2ag9qqh20pfxxyj1j3shj4ry1wrhh1jfme5lw4f52vpsniacke6mf4th2mbh29x5ckl4zlq4cx5za6or0xt4qvmg991is376ox4p3uqp5ydsngfa114enzycd\",\n      \"provider\" : \"pkx7rzp1m925qdwnmdg1247k6yajjpfsip1lry6gnpywld0knxt1wo9kgoim0blm98g5ov6w6595av9fowiubm14fehfftxjt9pwc8ug9k4r0ump9ct\",\n      \"cardId\" : 334544830519750164,\n      \"embossBusinessName\" : \"Edra Murphy\",\n      \"alias\" : \"7h8o0aupi6qpdzyf26xwasktotrvz36gl6qlmug5561nu518wbugh5cv5qzyod1zl4nyogul2kff8opim73mvsubnesbc3vy2v1quqtei7437uaawl4q7zv6\",\n      \"embossCardName\" : \"Rosita Prosacco Jr.\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"eidm0\",\n        \"additionalDataDe124\" : \"9awg9igblsltnldems8bp77mf1013x60aooe4l51g2fygfvnhjpvj6qwx\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-11-07T15:01:37.442127Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"ga7zg5gwh9fbqjzgsq9v1as1djzcur3d707vt7e61p99cskakj3kkcmf175o6c4caafewiu1in00a7yverazgixl4gjf7q7z15r25jit4\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-21T07:13:02.442Z\",\n      \"maskedPan\" : \"rcw7i1vpxttyjp8cgmhdt45w735if3o162nylq81odoeln8roqz815npippikm211hxq8fbvwte42wet3lyzbxsdh67bv1dig\",\n      \"provider\" : \"n9onkzactqbfva0zg9ws8ra68w4vr1i2mbt4y5nsugc20edbellx1mxzo3a5zkey4qwt32hmu1nasvpv4oq8r7r4tuwltr77ruwib4s2is934xgyxrighadxgyzz4htpwgpn5ealgyt87bmh3x16gwn6jyxdsaj4zg3nyv1i1t0bmbyidb\",\n      \"cardId\" : 7194165763692881505,\n      \"embossBusinessName\" : \"Isabell Schultz\",\n      \"alias\" : \"n8z4gwct61xjjz5qt40buep790mvg0p6dup11y46ho94it8gj50d1o9yfmeccqvg64qrwrxx8b8cj8ey\",\n      \"embossCardName\" : \"Geri Hodkiewicz\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 6242657946173872975,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-01-21T19:15:37.442Z\",\n      \"maskedPan\" : \"ch6wo6r2d9743pb91r9ikxg6b7elj4rawglelw5tw8t0epoy2zrdkgsc2nqirl1ywegmlytbgesjx1o6inwvt957ocdwdt040yfkrygwtbsd250a742i9zbipfz7vydm3hugiatq6cx27p\",\n      \"provider\" : \"jtmiep9aqifgn51my626vc1mrd0xh5hkoiowesfbk7zuzd61n8uz7aii4fgz34kiul78feoriv84c2w5k669qo47f303x620367txi4fenr3b\",\n      \"cardId\" : 1038997251897180033,\n      \"embossBusinessName\" : \"Nellie Ward MD\",\n      \"alias\" : \"cckwssbal76g34lmpqc6ccobutj\",\n      \"embossCardName\" : \"Blake Ryan\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 3992243779057972227,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-03-24T04:39:37.442Z\",\n      \"maskedPan\" : \"rgzrgx2frfnbfg1j5zvwsk8e2y2g8reyfwpqfl5bu0gk262qtvniik0m8imm3ykn3wxsp5bpi399y38fqpk5q1le2lsadg29fhxhkxh4a7d6kqe39z35gr3h2041m4drqsjli7hx6yhrmp0lm7dzg7ntg7y6vyj21v\",\n      \"provider\" : \"x2uh0osh26azv1isng34x5xiev26n236wtlh36rthhd1wff36m7b2hg3tsk38ab6hl48wdbc5mwe7iahjh5zjz7puleuqqnla1ermse3xb8ox3\",\n      \"cardId\" : 8197829537778562563,\n      \"embossBusinessName\" : \"Ebonie Stanton\",\n      \"alias\" : \"2o5gocbugfl7lo1sai1q57i7j1j6iwg3tl8lottg\",\n      \"embossCardName\" : \"Suanne Barrows\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 3090807742333033220,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-27T04:37:26.443Z\",\n      \"maskedPan\" : \"uzcjkduv8yzba8wgmj1z5ynwqcnn0x\",\n      \"provider\" : \"w4iixibnoc64zkg42u72z5x4gdpoo4wodwbg9266qh2mgdwo6qawocrs3x7hsgd70tkftih8hxbqnf2ggyqscakdj3z4za9lax59i2xxhs4a4re4o692fm4n5\",\n      \"cardId\" : 6129659358751843155,\n      \"embossBusinessName\" : \"Leroy Tromp\",\n      \"alias\" : \"gzmobh76l74t3ygy3igxamrdu0ptbl2woinhhsyyibujvv7oeg7c9\",\n      \"embossCardName\" : \"Dr. Ollie Murphy\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_MERCHANT\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"zl1ld96yuxo5wfg00vpova07ld0gwzw6yze0732d1rs8nyfo585z684x0db0tlfm69mrxgiuomwjiw7v7v7njjqas7pffj6c6a7ex1zlzs5\",\n        \"additionalDataDe124\" : \"9efcz9wij4i7glnhpajtilnjp6pkggii7i3o4qmw82oyw49kw4swdnmv11eu29fjnver7wa68lx9vcanr32wghdsfc97wpt67b4tfq44dc45ty2ow1t5v137bib6qyg4ijhql1oii5i\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-12-02T17:19:37.443449Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"0ofvkopdquq733ec5x6xmdkc9nc5v4zsb4tqaimx1150tchzpattc1rgieye9ic6t7f94507wculzkh26k3f3\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-04-23T02:51:34.443Z\",\n      \"maskedPan\" : \"8835vovyx8rcry3jt293g3jk94x39vlodxxsbhosijyps1y8esemxmrc0xmwx1ecf6bo6zcjpzag8uev56ev7lgbfi693vxfg9hg4jfnwesj16qg23o7qvxlg7iov53a9t0s4gh8la3kptyahno1l0wp181\",\n      \"provider\" : \"j0naqi2c5sbetfa6aq7qtbradbhtzwafhye1ayblszcokirx7igs3wuq46ts5bq7zf6j7qlvt20pxffnn5wbc5xofa1yq7mswbwg5863m4p78etvsqwro\",\n      \"cardId\" : 5933884154583329180,\n      \"embossBusinessName\" : \"Larry Schulist II\",\n      \"alias\" : \"qxskxefha4ktd9w4eetxy5by7\",\n      \"embossCardName\" : \"Lili Smith\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}, {\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"EXTERNAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 3412130469673598147,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-09-01T21:55:34.443Z\",\n      \"maskedPan\" : \"ysc1n052c4m\",\n      \"provider\" : \"7bds2xlef6b0hagr89pncuyuhf1h4agquesav6r3a7h535ejnf37tooac3kt5cko04qp96lidnxloplodih164w0wdqhr7gml6lk9m3ekgrxre247byyrau64um02iqgaqp\",\n      \"cardId\" : 6785609112437296807,\n      \"embossBusinessName\" : \"Levi Pfeffer\",\n      \"alias\" : \"6hkdb64kyn0fpgqa2\",\n      \"embossCardName\" : \"Mohammad Deckow\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"9ed632wwrzz6wr2p9jv1aoajgn0d59zf1k4948k4qedvfr9sgwpvnab7e5uvzjvx476r2z3i9rzwerfplh\",\n        \"additionalDataDe124\" : \"4qfwllye0cl6rpvbd1ytdfz2s89axq3li3sfdd3m7ktzylq7ljuc40gxpckmitjurv738szwga0n40xk7ehvvx2aog8r21lxyfciexouaouma7n4o4c6c2\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2023-01-19T14:19:37.444212Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"5mdtu8emf4xtqklzqbd87oq5bnyg6lm7vlzubiuibgqwgvgxnih8wtgliiapg6m184znlf280ufjj2fj1zuxn7ztskcw95h38dmu2c5cdirqbm7z54ksgj7xpvwlpy7icvkx4ok1a87yg\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-05-15T20:27:14.444Z\",\n      \"maskedPan\" : \"gvu3sfm7qqfnzxjbvb3kzniqxo14a9du0s1juqe3qulkqn8w64tpdhctm08bs3qbvurbeu322fip3ffuu3ogfbuq6v2rqlsb6bwac6jtmtsmnf1gww0k1f0wodtylijafd48b648ztjkymqgqjulvlu8onskovb703o1wgwur5e6jui0e0d4s6cai703pr0nk90yel1\",\n      \"provider\" : \"hijk3kr5jjo5mnmlmwg8v4rp8lodutt68nc6tz5s\",\n      \"cardId\" : 5409845320275374969,\n      \"embossBusinessName\" : \"Jackeline Ebert\",\n      \"alias\" : \"tbhfed9jbq\",\n      \"embossCardName\" : \"Polly Larson IV\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-10-06T05:20:40.444Z\",\n      \"maskedPan\" : \"1flbt2cxdsqlnzd1ziut5yez79dl6ivp52mt5yh95jqz8bevhlnwwd5ahy2qt8z3hib7spi73b4obs632zi0ahecjyu8qxv6fqdmozhiqhc89lb9ifzlo9u8t21\",\n      \"provider\" : \"vt11il11m3x385tvxrvc2lmw9pfo1dnu2t4oesx6k5ft8serzy53ttjotu37mmzi1s1ou1bg4yhd3blkhd7cqqn49pwsy1jatmtk9ma6xjfxsz731q6zxsry5i0gfyg9uzdzwurwd06mga0focj4l7am5gqocpd7oiw7a2i0ihg1\",\n      \"cardId\" : 1415113834460406817,\n      \"embossBusinessName\" : \"Geoffrey Mills\",\n      \"alias\" : \"2ydz7xxy821pvu4cr9353sjza6qbflnmx3rjdslrpji71t3ptyhcdfv6mozj6428jfuulpdilkoib0w18rxvteth3dvpsn1jgnhwhjmexuwt5px40lwdalqkrkea\",\n      \"embossCardName\" : \"Naida Effertz\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-12-12T00:02:55.444Z\",\n      \"maskedPan\" : \"zolynvtuv9t03popar7zdipo6yq39vpp5ipl8eudk29fo2atk1belziu0b08kwoiww2tnm14o2hkq7vuh6bd0yjiaba2jj0nooe4bpa3y44gntcgpd77iytc4gqgztef01kvoje\",\n      \"provider\" : \"liq3ovksy9isihtsum0fh7gie9fgr0xdpxhhlsy0b4dwbg4z4ht6eixymv9vhkvryd6uzrbhiq\",\n      \"cardId\" : 4982781759493901518,\n      \"embossBusinessName\" : \"Lanny Olson DDS\",\n      \"alias\" : \"8g1qnuzkhwv22v1pkypdztbkonri3me8adjtegpcgc6s1kof8p389hd40am17lsixnmr4c4pf7tqpixq0a6q6d9rp0hebwpgnsopzwzebq2wu6rv02wm83jrjqh3mz906bo7eiu7rfi4sh25zcqb8p4y6beywa9gb2x911xw9axob5joe1s2zagv1c0pa9\",\n      \"embossCardName\" : \"Golda Schmitt\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"FIRE_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE54CPAY99119911111111\",\n        \"alias\" : \"Main Account\",\n        \"id\" : 42,\n        \"accountNumber\" : \"11111111\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"232221\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-07-26T06:27:07.445Z\",\n      \"maskedPan\" : \"1bqw4qke4huisnvsc1cc6marqe0vno6pb4kufve3ssa6enh3arcof8zu6kvgk5b1qxcirgvixiqr9x7arrluzabhtz700euup86hk7lm74jbr986dqx4qjonwx3qg6df4lp7hba37x032gft\",\n      \"provider\" : \"m69ll5wv2pfm93uad06nev0fbpmu71gu0q4djtviyv01xcuztgty6eqf0vmhp5x9mu4j7g5pd265ptytr03aochg4klh4phrts19bkimtavjxsijr7xqb31rpf80ljrbsns5v82jimhq1oyiiehv81jbppf495flkd7ol0y0e2iddsvcco4p106p\",\n      \"cardId\" : 3388253767974211980,\n      \"embossBusinessName\" : \"Billi Predovic\",\n      \"alias\" : \"2yp7zsysnsmzwqjorqmplro06sh3a76l0gbw9a8aflpdjgmdct0cosu4298xmy2xrdybfn38c3ahmlrd0aeqpx8d59ofevajprzl9ask9l9hj7ni16a6hc9e247wtuqj6howvwq8juu01n1q03pl7qhgeef8cyz1oz6jqxqu375zpk66lffqs6p8lbv0xs5slllv\",\n      \"embossCardName\" : \"Ross Schimmel\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73de3145-2c8f-46e6-938f-4ae4fabca92f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.446303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCardTransactions",
          "schema" : {
            "items" : {
              "properties" : {
                "dateRangeTo" : {
                  "description" : "milisecond timestamp of date range to value.",
                  "example" : 1547744156603,
                  "type" : "integer"
                },
                "total" : {
                  "description" : "The total number of card transactions in the list.",
                  "example" : 1,
                  "type" : "integer"
                },
                "transactions" : {
                  "items" : {
                    "properties" : {
                      "amountAfterCharges" : {
                        "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "amountBeforeCharges" : {
                        "description" : "Amount of the transaction before the fees and taxes were applied.",
                        "example" : 5000,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "balance" : {
                        "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                        "example" : 8500,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "batchItemDetails" : {
                        "description" : "Details of the batch run if this transaction was part of a batch.",
                        "properties" : {
                          "batchItemPublicUuid" : {
                            "description" : "The UUID for this item in the batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "batchName" : {
                            "description" : "The optional name given to the batch at creation time.",
                            "example" : "Payroll 2022-11",
                            "type" : "string"
                          },
                          "batchPublicUuid" : {
                            "description" : "The UUID for this batch.",
                            "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                            "type" : "string"
                          },
                          "jobNumber" : {
                            "description" : "The optional job number given to the batch to link it to your own system.",
                            "example" : "2018-01-PR",
                            "type" : "string"
                          }
                        },
                        "title" : "batchItemDetails",
                        "type" : "object"
                      },
                      "card" : {
                        "description" : "Details of the card used (if applicable)",
                        "properties" : {
                          "alias" : {
                            "type" : "string"
                          },
                          "cardId" : {
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "embossBusinessName" : {
                            "type" : "string"
                          },
                          "embossCardName" : {
                            "type" : "string"
                          },
                          "expiryDate" : {
                            "format" : "date-time",
                            "type" : "string"
                          },
                          "maskedPan" : {
                            "type" : "string"
                          },
                          "provider" : {
                            "type" : "string"
                          }
                        },
                        "title" : "relatedCard",
                        "type" : "object"
                      },
                      "currency" : {
                        "description" : "The currency.",
                        "properties" : {
                          "code" : {
                            "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                            "enum" : [ "EUR", "GBP" ],
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "The name of the currency",
                            "example" : "Euro",
                            "type" : "string"
                          }
                        },
                        "title" : "currency",
                        "type" : "object"
                      },
                      "date" : {
                        "description" : "Date of the transaction",
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "dateAcknowledged" : {
                        "example" : "2021-04-13T11:06:32.437Z",
                        "format" : "date-time",
                        "type" : "string"
                      },
                      "directDebitDetails" : {
                        "description" : "Details of the direct debit (if applicable)",
                        "properties" : {
                          "directDebitReference" : {
                            "description" : "The direct debit reference.",
                            "example" : "VODA-ABC453-1",
                            "type" : "string"
                          },
                          "directDebitUuid" : {
                            "description" : "The UUID for the direct debit payment",
                            "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                            "type" : "string"
                          },
                          "mandateReference" : {
                            "description" : "the reference of the mandate",
                            "example" : "CRZ-102190123",
                            "type" : "string"
                          },
                          "mandateUUid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                            "type" : "string"
                          },
                          "mandateUuid" : {
                            "description" : "The UUID for the mandate",
                            "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                            "type" : "string"
                          },
                          "originatorAlias" : {
                            "description" : "The Alias of the party who sets up the direct debit.",
                            "example" : "Three",
                            "type" : "string"
                          },
                          "originatorLogoUrlLarge" : {
                            "description" : "URL pointing to a large version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorLogoUrlSmall" : {
                            "description" : "URL pointing to a small version of the Originator Logo (if available)",
                            "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                            "type" : "string"
                          },
                          "originatorName" : {
                            "description" : "The creator of the party who sets up the direct debit.",
                            "example" : "Vodafone PLC",
                            "type" : "string"
                          },
                          "originatorReference" : {
                            "description" : "Set by party who sets up the direct debit.",
                            "example" : "VODA-123456",
                            "type" : "string"
                          }
                        },
                        "title" : "directDebitDetails",
                        "type" : "object"
                      },
                      "eventUuid" : {
                        "description" : "An internal Fire reference for the transaction (UUID)",
                        "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                        "type" : "string"
                      },
                      "feeAmount" : {
                        "description" : "The amount of the fee, if any.",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "fxTradeDetails" : {
                        "description" : "Details of the FX trade (if applicable)",
                        "properties" : {
                          "buyAmount" : {
                            "description" : "amount of buyCurrency being bought",
                            "example" : 359,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "buyCurrency" : {
                            "description" : "currency which is being bought",
                            "example" : "GBP",
                            "type" : "string"
                          },
                          "fixedSide" : {
                            "description" : "type of trade - BUY or SELL",
                            "example" : "SELL",
                            "type" : "string"
                          },
                          "provider" : {
                            "description" : "The FX provider used to make the trade.",
                            "example" : "TCC",
                            "type" : "string"
                          },
                          "rate4d" : {
                            "description" : "exchange rate",
                            "example" : 7180,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellAmount" : {
                            "description" : "amount of sellCurrency being sold",
                            "example" : 500,
                            "format" : "int64",
                            "type" : "integer"
                          },
                          "sellCurrency" : {
                            "description" : "currency which is being sold",
                            "example" : "EUR",
                            "type" : "string"
                          }
                        },
                        "title" : "fxTrade",
                        "type" : "object"
                      },
                      "ican" : {
                        "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                        "example" : 1951,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "myRef" : {
                        "description" : "The comment/reference on the transaction",
                        "example" : "Transfer to main account",
                        "type" : "string"
                      },
                      "paymentRequestPublicCode" : {
                        "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                        "example" : "1abcdefg",
                        "type" : "string"
                      },
                      "proprietarySchemeDetails" : {
                        "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                        "items" : {
                          "properties" : {
                            "data" : {
                              "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                              "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                              "type" : "string"
                            },
                            "type" : {
                              "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                              "example" : "SCT",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "title" : "proprietarySchemeDetails",
                        "type" : "array"
                      },
                      "refId" : {
                        "description" : "The id of the transaction.",
                        "example" : 26774,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "relatedParty" : {
                        "description" : "Details of the related third party involved in the transaction.",
                        "oneOf" : [ {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "identifier for the fire.com account (assigned by fire.com)",
                                  "example" : 42,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "FIRE_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyFireAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "the Account Number of the account.",
                                  "example" : "11111111",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "the name the user gives to the account to help them identify it.",
                                  "example" : "Main Account",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "the BIC of the account (provided if currency is EUR).",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "the IBAN of the account (provided if currency is EUR).",
                                  "example" : "IE54CPAY99119911111111",
                                  "type" : "string"
                                },
                                "id" : {
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "the Sort Code of the account.",
                                  "example" : "232221",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "EXTERNAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyExternalAccount",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "account" : {
                              "properties" : {
                                "accountNumber" : {
                                  "description" : "The account number of the Withdrawl account in reference",
                                  "example" : "00000000",
                                  "type" : "string"
                                },
                                "alias" : {
                                  "description" : "The Alias name of the Withdrawl account in reference",
                                  "example" : "Smyth and Co.",
                                  "type" : "string"
                                },
                                "bic" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "CPAYIE2D",
                                  "type" : "string"
                                },
                                "iban" : {
                                  "description" : "The BIC of the Withdrawl account in reference",
                                  "example" : "IE76CPAY99119900000000",
                                  "type" : "string"
                                },
                                "id" : {
                                  "description" : "The ID number of the Withdrawl account in reference",
                                  "example" : 123,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "nsc" : {
                                  "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                  "example" : "991199",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyPayee",
                          "type" : "object"
                        }, {
                          "properties" : {
                            "cardMerchant" : {
                              "properties" : {
                                "acquirerIdDe32" : {
                                  "example" : 6011329,
                                  "type" : "string"
                                },
                                "additionalAmtDe54" : {
                                  "type" : "string"
                                },
                                "additionalDataDe124" : {
                                  "type" : "string"
                                },
                                "additionalDataDe48" : {
                                  "example" : "010X610500000",
                                  "type" : "string"
                                },
                                "authCodeDe38" : {
                                  "example" : "177449",
                                  "type" : "string"
                                },
                                "authorisedByGps" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "avsResult" : {
                                  "example" : "N",
                                  "type" : "string"
                                },
                                "billAmt" : {
                                  "example" : -1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "billCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "expiryDate" : {
                                  "type" : "string"
                                },
                                "mccCode" : {
                                  "example" : "5521",
                                  "type" : "string"
                                },
                                "merchIdDe42" : {
                                  "example" : 13152429,
                                  "type" : "string"
                                },
                                "merchNameDe43" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "mtId" : {
                                  "example" : "0100",
                                  "type" : "string"
                                },
                                "posDataDe22" : {
                                  "example" : "051",
                                  "type" : "string"
                                },
                                "posDataDe61" : {
                                  "example" : 1000030037299999,
                                  "type" : "string"
                                },
                                "posTermnlDe41" : {
                                  "example" : "80266721",
                                  "type" : "string"
                                },
                                "procCode" : {
                                  "example" : "000000",
                                  "type" : "string"
                                },
                                "recordDataDe120" : {
                                  "type" : "string"
                                },
                                "respCodeDe39" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "retRefNoDe37" : {
                                  "example" : 10900006720,
                                  "type" : "string"
                                },
                                "statusCode" : {
                                  "example" : "00",
                                  "type" : "string"
                                },
                                "token" : {
                                  "example" : "976307363",
                                  "type" : "string"
                                },
                                "txnAmt4d" : {
                                  "example" : 1000,
                                  "format" : "int64",
                                  "type" : "integer"
                                },
                                "txnCcy" : {
                                  "example" : "978",
                                  "type" : "string"
                                },
                                "txnCtry" : {
                                  "example" : "IRL",
                                  "type" : "string"
                                },
                                "txnDesc" : {
                                  "example" : "ABC Coffee Shop",
                                  "type" : "string"
                                },
                                "txnStatCode" : {
                                  "example" : "A",
                                  "type" : "string"
                                },
                                "txnType" : {
                                  "example" : "A",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : {
                              "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                              "type" : "string"
                            }
                          },
                          "title" : "relatedPartyCardPayment",
                          "type" : "object"
                        } ],
                        "title" : "relatedParty"
                      },
                      "taxAmount" : {
                        "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                        "example" : 0,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "txnId" : {
                        "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                        "example" : 30157,
                        "format" : "int64",
                        "type" : "integer"
                      },
                      "type" : {
                        "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                        "example" : "WITHDRAWAL",
                        "type" : "string"
                      },
                      "yourRef" : {
                        "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                        "example" : "From John Smith",
                        "type" : "string"
                      }
                    },
                    "title" : "transaction",
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "title" : "cardTransactionsv1",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "b90c4a37-a331-488e-9694-74aac10fa77c",
    "name" : "Block a card - 204",
    "request" : {
      "urlPath" : "/v1/cards/7332513259064692388/block",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b90c4a37-a331-488e-9694-74aac10fa77c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.44127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "blockCard"
        }
      }
    }
  }, {
    "id" : "c7155557-a418-4c4b-9bda-cfde28f0fd11",
    "name" : "Create a new debit card.",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n  \"maskedPan\" : \"537455******1111\",\n  \"cardId\" : 51,\n  \"status\" : \"CREATED_ACTIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7155557-a418-4c4b-9bda-cfde28f0fd11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.441231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createNewCard",
          "schema" : {
            "properties" : {
              "cardId" : {
                "example" : 51,
                "format" : "int64",
                "type" : "integer"
              },
              "expiryDate" : {
                "example" : "2019-01-31T00:00:00.000Z",
                "format" : "date-time",
                "type" : "string"
              },
              "maskedPan" : {
                "example" : "537455******1111",
                "type" : "string"
              },
              "status" : {
                "enum" : [ "CREATED_ACTIVE", "CREATED_INACTIVE" ],
                "example" : "CREATED_ACTIVE",
                "type" : "string"
              }
            },
            "title" : "newCardResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "001b4f5c-c5d2-48b3-ae27-8f1c610ee462",
    "name" : "View List of Cards. - 403",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 403
    },
    "uuid" : "001b4f5c-c5d2-48b3-ae27-8f1c610ee462",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.441149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    }
  }, {
    "id" : "1a13324a-c281-41fe-93f0-184c12e2684c",
    "name" : "View List of Cards. - 401",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "1a13324a-c281-41fe-93f0-184c12e2684c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.441131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards"
        }
      }
    }
  }, {
    "id" : "f45ce59d-49bb-4fcd-9cd3-9480a285adbd",
    "name" : "View List of Cards. (application/json)",
    "request" : {
      "urlPath" : "/v1/cards",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cards\" : [ {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  }, {\n    \"lastName\" : \"Doe\",\n    \"maskedPan\" : \"537455******1111\",\n    \"eurIcan\" : 2150,\n    \"userId\" : 3138,\n    \"expiryDate\" : \"2019-01-31T00:00:00.000Z\",\n    \"firstName\" : \"John\",\n    \"emailAddress\" : \"user@example.com\",\n    \"dateCreated\" : \"2017-01-19T16:38:15.803Z\",\n    \"statusReason\" : \"LOST_CARD\",\n    \"blocked\" : false,\n    \"gbpIcan\" : 2152,\n    \"provider\" : \"MASTERCARD\",\n    \"cardId\" : 51,\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f45ce59d-49bb-4fcd-9cd3-9480a285adbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.441037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofCards",
          "schema" : {
            "properties" : {
              "cards" : {
                "items" : {
                  "properties" : {
                    "blocked" : {
                      "description" : "Whether the card is blocked or not",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "cardId" : {
                      "description" : "card id assigned by fire.com",
                      "example" : 51,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "dateCreated" : {
                      "description" : "The date-time the card was created",
                      "example" : "2017-01-19T16:38:15.803Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "emailAddress" : {
                      "description" : "card user email address",
                      "example" : "user@example.com",
                      "type" : "string"
                    },
                    "eurIcan" : {
                      "description" : "identifier for the eur fire.com account (assigned by fire.com)",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "expiryDate" : {
                      "description" : "card expiry date",
                      "example" : "2019-01-31T00:00:00.000Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "firstName" : {
                      "description" : "card user first name",
                      "example" : "John",
                      "type" : "string"
                    },
                    "gbpIcan" : {
                      "description" : "identifier for the gbp fire.com account (assigned by fire.com)",
                      "example" : 2152,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastName" : {
                      "description" : "card user last name",
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "maskedPan" : {
                      "description" : "card number (masked)",
                      "example" : "537455******1111",
                      "type" : "string"
                    },
                    "provider" : {
                      "description" : "card provider",
                      "enum" : [ "MASTERCARD" ],
                      "example" : "MASTERCARD",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "card status",
                      "enum" : [ "LIVE", "CREATED_ACTIVE", "CREATED_INACTIVE", "DEACTIVATED" ],
                      "example" : "LIVE",
                      "type" : "string"
                    },
                    "statusReason" : {
                      "description" : "reason for card status",
                      "enum" : [ "LOST_CARD", "STOLEN_CARD", "CARD_DESTROYED" ],
                      "example" : "LOST_CARD",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "card user id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "card",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cards",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8b6c0928-fc37-4441-90d6-58e35707716f",
    "name" : "Remove a Payment from the Batch (Internal Transfer) - 200",
    "request" : {
      "urlPath" : "/v1/batches/9d45492c-1ee8-3587-9647-798adca865e4/internaltransfers/45ff320e-c2f5-3f67-826d-cc51fd77db00",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8b6c0928-fc37-4441-90d6-58e35707716f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.400647Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteInternalTransferBatchPayment"
        }
      }
    }
  }, {
    "id" : "cf1a8f51-a3d4-4201-9d58-6f049a463832",
    "name" : "Add an internal transfer payment to the batch",
    "request" : {
      "urlPath" : "/v1/batches/a3b92fe4-bb5a-342c-9bd3-dc192b1268be/internaltransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf1a8f51-a3d4-4201-9d58-6f049a463832",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.400589Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addInternalTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2a6c7a6a-09e5-4de6-a9f8-d856217c9b50",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/10a3164f-b99d-3278-8238-9320d8d478c8/internaltransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a6c7a6a-09e5-4de6-a9f8-d856217c9b50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.400512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchInternalTrasnfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7469a47e-ad76-4c0a-ab92-ab72b45f6e8e",
    "name" : "Remove a Payment from the Batch (Bank Transfers) - 200",
    "request" : {
      "urlPath" : "/v1/batches/04ff4390-dceb-3f01-bae5-bb95e9716b7f/banktransfers/c3aa993b-e3f5-3dd5-b6fd-21552b545a4d",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7469a47e-ad76-4c0a-ab92-ab72b45f6e8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.400155Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteBankTransferBatchPayment"
        }
      }
    }
  }, {
    "id" : "ef7505ec-7117-454e-ba8b-93f02a5bde3c",
    "name" : "Add a bank transfer payment to the batch.",
    "request" : {
      "urlPath" : "/v1/batches/9f1c33c9-9f4c-3e78-a8f2-d945c541e240/banktransfers",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchItemUuid\" : \"fba4a76a-ce51-4fc1-b562-98ec01299e4d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef7505ec-7117-454e-ba8b-93f02a5bde3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.400089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addBankTransferBatchPayment",
          "schema" : {
            "properties" : {
              "batchItemUuid" : {
                "description" : "A Batch Item UUID for this item. Note* Do not confuse this for BatchUuid when submitting a batch.",
                "example" : "fba4a76a-ce51-4fc1-b562-98ec01299e4d",
                "type" : "string"
              }
            },
            "title" : "newBatchItemResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "029fbb73-9aef-4e4a-a8a9-3a4ea94697dd",
    "name" : "List items in a Batch",
    "request" : {
      "urlPath" : "/v1/batches/e4ebc6c1-bd47-39b9-acf0-6a486c320aaf/banktransfers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  }, {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "029fbb73-9aef-4e4a-a8a9-3a4ea94697dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.400011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getItemsBatchBankTransfer",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3cba1203-4c0e-4ed5-a207-1290f8bed7b2",
    "name" : "List Approvers for a Batch",
    "request" : {
      "urlPath" : "/v1/batches/69cf7650-5540-3a61-bfd8-56d750b3397d/approvals",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"approvals\" : [ {\n    \"firstName\" : \"Jane\",\n    \"lastName\" : \"Doe\",\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"emailAddress\" : \"jane.doe@example.com\",\n    \"mobileNumber\" : 353871234567,\n    \"userId\" : 3138,\n    \"status\" : \"PENDING_APPROVAL\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cba1203-4c0e-4ed5-a207-1290f8bed7b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.399669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListofApproversForBatch",
          "schema" : {
            "properties" : {
              "approvals" : {
                "items" : {
                  "properties" : {
                    "emailAddress" : {
                      "description" : "User email address",
                      "example" : "jane.doe@example.com",
                      "type" : "string"
                    },
                    "firstName" : {
                      "example" : "Jane",
                      "type" : "string"
                    },
                    "lastName" : {
                      "example" : "Doe",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "mobileNumber" : {
                      "example" : 353871234567,
                      "type" : "string"
                    },
                    "status" : {
                      "example" : "PENDING_APPROVAL",
                      "type" : "string"
                    },
                    "userId" : {
                      "description" : "User id assigned by fire.com",
                      "example" : 3138,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "batchApprovers",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8f3cf3cb-d35f-46ff-92e0-dcdf0e6ed246",
    "name" : "Submit a batch for approval - 204",
    "request" : {
      "urlPath" : "/v1/batches/b0f36dde-af84-36bc-9f33-8372d497903f",
      "method" : "PUT"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "8f3cf3cb-d35f-46ff-92e0-dcdf0e6ed246",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.399488Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "submitBatch"
        }
      }
    }
  }, {
    "id" : "2d854894-9283-4ebf-96a0-75582f25c945",
    "name" : "Get details of a single Batch",
    "request" : {
      "urlPath" : "/v1/batches/fe082f1d-4779-3f84-8ddc-be30b7aa7913",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchName\" : \"January 2018 Payroll\",\n  \"valueOfItemsSubmitted\" : 10000,\n  \"numberOfItemsFailed\" : 0,\n  \"numberOfItemsSucceeded\" : 1,\n  \"type\" : \"NEW_PAYEE\",\n  \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n  \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n  \"numberOfItemsSubmitted\" : 1,\n  \"callbackUrl\" : \"https://my.webserver.com/cb/payroll\",\n  \"currency\" : \"EUR\",\n  \"sourceName\" : \"Payment API\",\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n  \"jobNumber\" : \"2018-01-PR\",\n  \"valueOfItemsSucceeded\" : 10000,\n  \"status\" : \"COMPLETE\",\n  \"valueOfItemsFailed\" : 0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d854894-9283-4ebf-96a0-75582f25c945",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.39944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDetailsSingleBatch",
          "schema" : {
            "properties" : {
              "batchName" : {
                "description" : "An optional name you give to the batch at creation time",
                "example" : "January 2018 Payroll",
                "type" : "string"
              },
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              },
              "callbackUrl" : {
                "description" : "An optional POST URL that all events for this batch will be sent to.",
                "example" : "https://my.webserver.com/cb/payroll",
                "type" : "string"
              },
              "currency" : {
                "description" : "All payments in the batch must be the same currency - either EUR or GBP",
                "example" : "EUR",
                "type" : "string"
              },
              "dateCreated" : {
                "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "jobNumber" : {
                "description" : "An optional job number you can give to the batch to help link it to your own system.",
                "example" : "2018-01-PR",
                "type" : "string"
              },
              "lastUpdated" : {
                "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                "example" : "2021-04-04T10:48:53.540Z",
                "format" : "date-time",
                "type" : "string"
              },
              "numberOfItemsFailed" : {
                "description" : "Once processed, a count of the number of items that didn’t process successfully.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSubmitted" : {
                "description" : "A count of the number of items in the batch",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfItemsSucceeded" : {
                "description" : "Once processed, a count of the number of items that processed successfully.",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              },
              "sourceName" : {
                "description" : "A string describing where the batch originated - for instance the name of the API token that was used, or showing that the batch was automatically created by fire.com (in the case of a new payee batch).",
                "example" : "Payment API",
                "type" : "string"
              },
              "status" : {
                "description" : "status of the batch object",
                "enum" : [ "PENDING_APPROVAL", "REJECTED", "COMPLETE", "OPEN", "CANCELLED", "PENDING_PARENT_BATCH_APPROVAL", "READY_FOR_PROCESSING", "PROCESSING" ],
                "example" : "COMPLETE",
                "type" : "string"
              },
              "type" : {
                "description" : "The type of the batch - can be one of the listed 3",
                "enum" : [ "INTERNAL_TRANSFER", "BANK_TRANSFER", "NEW_PAYEE" ],
                "type" : "string"
              },
              "valueOfItemsFailed" : {
                "description" : "Once processed, a sum of the value of items that didn’t process successfully. Specified in pence or cent.",
                "example" : 0,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSubmitted" : {
                "description" : "A sum of the value of items in the batch. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              },
              "valueOfItemsSucceeded" : {
                "description" : "Once processed, a sum of the value of items that processed successfully. Specified in pence or cent.",
                "example" : 10000,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batch",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b4c188c0-6699-45fd-b02b-c6fd7b104b2e",
    "name" : "Cancel a batch - 200",
    "request" : {
      "urlPath" : "/v1/batches/762a468b-c4b9-3b87-b5cd-71e24c62969c",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b4c188c0-6699-45fd-b02b-c6fd7b104b2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.399148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cancelBatchPayment"
        }
      }
    }
  }, {
    "id" : "f768fc7d-5c3b-47df-9215-5f411c779aaf",
    "name" : "Create a new batch of payments",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"batchUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f768fc7d-5c3b-47df-9215-5f411c779aaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.399082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createBatchPayment",
          "schema" : {
            "properties" : {
              "batchUuid" : {
                "description" : "A UUID for this item.",
                "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                "type" : "string"
              }
            },
            "title" : "newBatchResponse",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f189f46b-af6c-4c57-b840-565e41f08ce1",
    "name" : "List batches",
    "request" : {
      "urlPath" : "/v1/batches",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"items\" : [ {\n    \"amount\" : 10000,\n    \"amountAfterCharges\" : 10000,\n    \"icanFrom\" : 2150,\n    \"icanTo\" : 1002,\n    \"result\" : {\n      \"code\" : 500001,\n      \"message\" : \"SUCCESS\"\n    },\n    \"feeAmount\" : 0,\n    \"lastUpdated\" : \"2021-04-04T10:48:53.540Z\",\n    \"ref\" : \"Testing a transfer via batch\",\n    \"dateCreated\" : \"2021-04-04T10:48:53.540Z\",\n    \"refId\" : 123782,\n    \"taxAmount\" : 0,\n    \"batchItemUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n    \"status\" : \"SUCCEEDED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f189f46b-af6c-4c57-b840-565e41f08ce1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.399025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getBatches",
          "schema" : {
            "properties" : {
              "items" : {
                "items" : {
                  "properties" : {
                    "amount" : {
                      "description" : "The amount of funds to send. In cent or pence",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountAfterCharges" : {
                      "description" : "The amount of the transfer after fees and taxes. in pence or cent.",
                      "example" : 10000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemUuid" : {
                      "description" : "A UUID for this item.",
                      "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                      "type" : "string"
                    },
                    "dateCreated" : {
                      "description" : "The datestamp the batch was created - ISO format - e.g. 2018-04-04T00:53:21.910Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The fee charged by fire.com for the payment. In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanFrom" : {
                      "description" : "The Fire account ID of the source account.",
                      "example" : 2150,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "icanTo" : {
                      "description" : "The Fire account ID for the fire.com account the funds are sent to.",
                      "example" : 1002,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "lastUpdated" : {
                      "description" : "The datestamp of the last action on this batch - ISO format - e.g. 2018-04-04T10:48:53.540Z",
                      "example" : "2021-04-04T10:48:53.540Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "ref" : {
                      "description" : "The reference on the transaction.",
                      "example" : "Testing a transfer via batch",
                      "type" : "string"
                    },
                    "refId" : {
                      "description" : "The ID of the resulting payment in your account. Can be used to retrieve the transaction using the https://api.fire.com/business/v1/accounts/{accountId}/transactions/{refId} endpoint.",
                      "example" : 123782,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "result" : {
                      "description" : "The outcome of the attempted transaction.",
                      "properties" : {
                        "code" : {
                          "example" : 500001,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "message" : {
                          "example" : "SUCCESS",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "status of the batch if internal trasnfer",
                      "enum" : [ "SUBMITTED", "REMOVED", "SUCCEEDED", "FAILED" ],
                      "example" : "SUCCEEDED",
                      "type" : "string"
                    },
                    "taxAmount" : {
                      "description" : "Any taxes/duty collected by fire.com for this payments (e.g. stamp duty etc). In pence or cent.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    }
                  },
                  "title" : "batchItem",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "total number of batches returned",
                "example" : 1,
                "format" : "int64",
                "type" : "integer"
              }
            },
            "title" : "batchItems",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "141e0dcd-f176-44c6-91d6-1b521fea33f9",
    "name" : "Get list of ASPSPs / Banks",
    "request" : {
      "urlPath" : "/v1/aspsps",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 10,\n  \"aspsps\" : [ {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  }, {\n    \"country\" : {\n      \"code\" : \"GB\",\n      \"description\" : \"United Kingdom\"\n    },\n    \"lastUpdated\" : \"2019-08-22T07:48:56.460Z\",\n    \"dateCreated\" : \"2019-08-22T07:48:56.460Z\",\n    \"alias\" : \"Demo Bank\",\n    \"aspspUuid\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"logoUrl\" : \"https://assets.fire.com/pisp/demo.svg\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "141e0dcd-f176-44c6-91d6-1b521fea33f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.398756Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getListOfAspsps",
          "schema" : {
            "properties" : {
              "aspsps" : {
                "items" : {
                  "properties" : {
                    "alias" : {
                      "description" : "The name of the ASPSP / bank.",
                      "example" : "Demo Bank",
                      "type" : "string"
                    },
                    "aspspUuid" : {
                      "description" : "The UUID associated with the ASPSP / bank.",
                      "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                      "type" : "string"
                    },
                    "country" : {
                      "properties" : {
                        "code" : {
                          "description" : "The 2-letter code for the country - e.g. `IE`, `GP`...",
                          "example" : "GB",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the country",
                          "example" : "United Kingdom",
                          "type" : "string"
                        }
                      },
                      "title" : "country",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "dateCreated" : {
                      "description" : "The date the ASPSP / bank was created.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "lastUpdated" : {
                      "description" : "The date the ASPSP / bank was last updated.",
                      "example" : "2019-08-22T07:48:56.460Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "logoUrl" : {
                      "description" : "A link to the ASPSP / bank's logo in SVG format.",
                      "example" : "https://assets.fire.com/pisp/demo.svg",
                      "type" : "string"
                    }
                  },
                  "title" : "aspsp",
                  "type" : "object"
                },
                "type" : "array"
              },
              "total" : {
                "description" : "The total number of ASPSPs in the list.",
                "example" : 10,
                "type" : "integer"
              }
            },
            "title" : "aspsps",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "934d8f1c-0f2d-419e-abf3-de8f5e8d1f86",
    "name" : "Authenticate with the API.",
    "request" : {
      "urlPath" : "/v1/apps/accesstokens",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiApplicationId\" : 433,\n  \"permissions\" : [ \"PERM_BUSINESSES_GET_ACCOUNTS\", \"PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS\" ],\n  \"businessId\" : 248,\n  \"expiry\" : \"2020-10-22T07:48:56.460Z\",\n  \"accessToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "934d8f1c-0f2d-419e-abf3-de8f5e8d1f86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.398372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "authenticate",
          "schema" : {
            "properties" : {
              "accessToken" : {
                "description" : "The App Bearer Access Token you can use in further API calls.",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "apiApplicationId" : {
                "description" : "The ID of the application you are using.",
                "example" : 433,
                "format" : "int64",
                "type" : "integer"
              },
              "businessId" : {
                "description" : "The business ID for the business.",
                "example" : 248,
                "format" : "int64",
                "type" : "integer"
              },
              "expiry" : {
                "description" : "The expiry date and time for this token (ISO-8601).",
                "example" : "2020-10-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "permissions" : {
                "description" : "The permissions assigned to the Access Token as an array of strings. This provides information on what API access it is allowed. See the section on Scope below.",
                "example" : [ "PERM_BUSINESSES_GET_ACCOUNTS", "PERM_BUSINESSES_GET_ACCOUNT_TRANSACTIONS" ],
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "title" : "accessToken",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "185e4238-322c-46a1-88d9-4c3ecbc5695a",
    "name" : "Create a new API Application",
    "request" : {
      "urlPath" : "/v1/apps",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"clientId\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"numberOfPayeeApprovalsRequired\" : 1,\n  \"clientKey\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\",\n  \"ican\" : 3320598821622923408,\n  \"expiry\" : \"2019-08-22T07:48:56.460Z\",\n  \"applicationId\" : 45345,\n  \"numberOfPaymentApprovalsRequired\" : 1,\n  \"enabled\" : true,\n  \"refreshToken\" : \"4ADFB67A-0F5B-4A9A-9D74-34437250045C\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "185e4238-322c-46a1-88d9-4c3ecbc5695a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.398248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createApiApplication",
          "schema" : {
            "properties" : {
              "applicationId" : {
                "description" : "The ID of the API Application",
                "example" : 45345,
                "format" : "int64",
                "type" : "integer"
              },
              "clientId" : {
                "description" : "The Client ID of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "clientKey" : {
                "description" : "The Client Key of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              },
              "enabled" : {
                "description" : "Whether or not this API Application can be used",
                "example" : true,
                "type" : "boolean"
              },
              "expiry" : {
                "description" : "The date that this API Application can no longer be used.",
                "example" : "2019-08-22T07:48:56.460Z",
                "format" : "date-time",
                "type" : "string"
              },
              "ican" : {
                "description" : "The ICAN of one of your Fire accounts. Restrict this API Application to a certan account.",
                "format" : "int64",
                "type" : "integer"
              },
              "numberOfPayeeApprovalsRequired" : {
                "description" : "Number of approvals required to create a payee in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "numberOfPaymentApprovalsRequired" : {
                "description" : "Number of approvals required to process a payment in a batch",
                "example" : 1,
                "type" : "integer"
              },
              "refreshToken" : {
                "description" : "The Refresh Token of the new API Application",
                "example" : "4ADFB67A-0F5B-4A9A-9D74-34437250045C",
                "type" : "string"
              }
            },
            "title" : "apiApplication",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "10b9149e-3c89-4c93-875b-ecfa80927ea1",
    "name" : "Filtered list of transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/2186012504543698706/transactions/filter",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "6132144771308458400"
        },
        "transactionTypes" : {
          "equalTo" : "r6gue31pa60afwx5nfkjdunfgx9vfhg1jtvbxzbpuj4ixd4lxbg10sndscwexls047d336q7sgw78a2vqfh95x2ix0631l1ydwe40on8khg6j0mj9lr0kq1y9z6ggeuc4"
        },
        "dateRangeTo" : {
          "equalTo" : "3643844629015348949"
        },
        "searchKeyword" : {
          "equalTo" : "cydync74m0iqypczt5e3q1kocblb9274u5ptmr8nc9zf"
        },
        "dateRangeFrom" : {
          "equalTo" : "7797778759977050402"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"443zquvlikw2m4qc85ofho0l32euehhetfkotml70e51wtwr5cunx431fg4hwrcbn2u1cz8ecxl0zbsvitxyojufo93za86sve2a35vdzi49fg5lu5omwpq8qye72dfw560e28up44xyhzzkfnn072tb4zre9fo7lvpzisi4k\",\n        \"additionalDataDe124\" : \"7kigsv46hn5qv2v6wjwoft6kkn1e5iiwlk8k89to01qsfggh9igtl8yuclvgm6gglfnigmxgmr1rw\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-03-08T14:40:37.396255Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"6oxot4yf8m7fij3tdzve8uaxmqni6i1mlszvbd6sxh8af\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-06-02T20:46:24.396Z\",\n      \"maskedPan\" : \"24vhs5324j9b0e3wn4\",\n      \"provider\" : \"jygdxbyfuev6rgpmw9mui3xmvdh4qgsruaeaagxozmd8679rm71epun3v9oggwc0cjyl1u77st2z48d8cwen5vdtp27vfqs5nlzdfra0r\",\n      \"cardId\" : 7855830863110251467,\n      \"embossBusinessName\" : \"Stephan Kihn\",\n      \"alias\" : \"0go4w4qsxncjqruuwmvacn0fkuq18s60\",\n      \"embossCardName\" : \"Leighann Pfeffer\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10b9149e-3c89-4c93-875b-ecfa80927ea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.398013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsFilteredById",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cf832aad-9079-48b6-bb90-4e4cab10faba",
    "name" : "List transactions for an account (v1)",
    "request" : {
      "urlPath" : "/v1/accounts/5851586321952454716/transactions",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "5960998378126507457"
        },
        "limit" : {
          "equalTo" : "5140841130921762087"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"total\" : 1,\n  \"dateRangeTo\" : 1547744156603,\n  \"transactions\" : [ {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"3j3q7993llga4e8s6ji3xlpwi4pf\",\n        \"additionalDataDe124\" : \"sy6hz9y4rafj98j4tkla34fyjfmk1g64419sj0pgop21p2e3a4x5pbyjzevkfcd243z8gzhafb20flvh18r720bwihzrtfr68m5c6jhj3crwz2kzg46eizmuw8ydwex717voh293p\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-07-09T17:23:37.393497Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"21ku6ks6dgrkkl1i2rp4v3kydtz49rypsnd3ejm00e1leua4w9dc2lqc4ylb4q5eengktlub0yrvxg05vbuqn9qmxy4c\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-09-13T16:28:30.393Z\",\n      \"maskedPan\" : \"50l1ppur2ekggi3alt4jzmsy9jgtdi7abaumvdnq925ne9l4m526lqr0vbxhz8l7x3c5oyyh8x1w1fjfporlzpvfz0cogas52mukekkqvccil24r8gd58b80iqlqjb0ux01omvduafnm9r1\",\n      \"provider\" : \"bvo6xmolhr8xt7qmhckiohawtfhokafbudnppng5yz3iybqt8pgudncsi9lnbl4x93saefw1t8satjux6tc9ii2tv3lwffnlmqjp\",\n      \"cardId\" : 8406420261762125947,\n      \"embossBusinessName\" : \"Maia Gleason\",\n      \"alias\" : \"iia7uyi3rit5wpadktu8jpjz8ka9v6aecyfwx6o0zrht4oy42t9v4t3hrdyxb6urcnqwoj2d2145yh88wkhxf1duj6077iqwthbzzitqc1dfwpvaihocortggrm81mtn4iu3v9sv9jiho6fpntv5bdchivagr6rzxlbm6afp0els8dk50zaww19hcmabw5d13ct5i\",\n      \"embossCardName\" : \"Tona Lang\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"CARD_ATM\",\n      \"cardMerchant\" : {\n        \"avsResult\" : \"N\",\n        \"txnCtry\" : \"IRL\",\n        \"recordDataDe120\" : \"k0nwtu2xihf1wg4us0zfndjn3x3lqsxb4ij21gxc09nxj1sw8pwahmm1cdjupc0hqi6jm51u516xo6me4f9hmx0wbqjld3aliif5325vq55o\",\n        \"additionalDataDe124\" : \"koegfwyb85o41yd4inn7psekix4lkjmeo5ot42wbh\",\n        \"txnType\" : \"A\",\n        \"txnCcy\" : \"978\",\n        \"expiryDate\" : \"2022-10-10T14:09:37.39405Z\",\n        \"mccCode\" : \"5521\",\n        \"mtId\" : \"0100\",\n        \"acquirerIdDe32\" : 6011329,\n        \"additionalDataDe48\" : \"010X610500000\",\n        \"txnDesc\" : \"ABC Coffee Shop\",\n        \"txnAmt4d\" : 1000,\n        \"billCcy\" : \"978\",\n        \"posDataDe61\" : 1000030037299999,\n        \"procCode\" : \"000000\",\n        \"posDataDe22\" : \"051\",\n        \"retRefNoDe37\" : 10900006720,\n        \"authorisedByGps\" : \"N\",\n        \"token\" : \"976307363\",\n        \"billAmt\" : -1000,\n        \"merchNameDe43\" : \"ABC Coffee Shop\",\n        \"txnStatCode\" : \"A\",\n        \"authCodeDe38\" : \"177449\",\n        \"merchIdDe42\" : 13152429,\n        \"additionalAmtDe54\" : \"qzajenyqhk907c2wsu1l6avoy5zgwh01vtnau15sa1rcu4usw0q4gxi8y\",\n        \"posTermnlDe41\" : \"80266721\",\n        \"respCodeDe39\" : \"00\",\n        \"statusCode\" : \"00\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2023-11-19T23:35:48.394Z\",\n      \"maskedPan\" : \"xkz0hyifmnd5hzd7ce7madg2awphw4ucn1soegufuot80r5xtsasybwiuohgzyh0cw006r5av0jh401zfickb8oygmv0kfa1siqahjcpb0qro\",\n      \"provider\" : \"q9ppfzb8xufvzf7en16ypweidmhdan6qymo69mae9b3x4faa5\",\n      \"cardId\" : 5564687832935280380,\n      \"embossBusinessName\" : \"Alberto Hills III\",\n      \"alias\" : \"ie7sy7uecjenoefrzl7y40n3bidj9y5zj9xdwvkauf8uh7ezz9ffwwue1f51glv\",\n      \"embossCardName\" : \"Christina Fay I\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  }, {\n    \"date\" : \"2021-04-13T11:06:32.437Z\",\n    \"yourRef\" : \"From John Smith\",\n    \"amountAfterCharges\" : 5000,\n    \"batchItemDetails\" : {\n      \"batchName\" : \"Payroll 2022-11\",\n      \"batchPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"batchItemPublicUuid\" : \"F2AF3F2B-4406-4199-B249-B354F2CC6019\",\n      \"jobNumber\" : \"2018-01-PR\"\n    },\n    \"eventUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\",\n    \"paymentRequestPublicCode\" : \"1abcdefg\",\n    \"relatedParty\" : {\n      \"type\" : \"WITHDRAWAL_ACCOUNT\",\n      \"account\" : {\n        \"iban\" : \"IE76CPAY99119900000000\",\n        \"alias\" : \"Smyth and Co.\",\n        \"id\" : 123,\n        \"accountNumber\" : \"00000000\",\n        \"bic\" : \"CPAYIE2D\",\n        \"nsc\" : \"991199\"\n      }\n    },\n    \"type\" : \"WITHDRAWAL\",\n    \"proprietarySchemeDetails\" : [ {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    }, {\n      \"data\" : \"remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079\",\n      \"type\" : \"SCT\"\n    } ],\n    \"dateAcknowledged\" : \"2021-04-13T11:06:32.437Z\",\n    \"feeAmount\" : 0,\n    \"fxTradeDetails\" : {\n      \"buyAmount\" : 359,\n      \"provider\" : \"TCC\",\n      \"rate4d\" : 7180,\n      \"fixedSide\" : \"SELL\",\n      \"sellAmount\" : 500,\n      \"sellCurrency\" : \"EUR\",\n      \"buyCurrency\" : \"GBP\"\n    },\n    \"balance\" : 8500,\n    \"ican\" : 1951,\n    \"amountBeforeCharges\" : 5000,\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"directDebitDetails\" : {\n      \"directDebitReference\" : \"VODA-ABC453-1\",\n      \"originatorReference\" : \"VODA-123456\",\n      \"mandateReference\" : \"CRZ-102190123\",\n      \"originatorName\" : \"Vodafone PLC\",\n      \"originatorLogoUrlLarge\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"mandateUUid\" : \"f171b143-e3eb-47de-85a6-1c1f1108c701\",\n      \"mandateUuid\" : \"28d627c3-1889-44c8-ae59-6f6b20239260\",\n      \"originatorAlias\" : \"Three\",\n      \"originatorLogoUrlSmall\" : \"https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png\",\n      \"directDebitUuid\" : \"42de0705-e3f1-44fa-8c41-79973eb80eb2\"\n    },\n    \"refId\" : 26774,\n    \"taxAmount\" : 0,\n    \"card\" : {\n      \"expiryDate\" : \"2022-11-11T05:35:49.394Z\",\n      \"maskedPan\" : \"8a1nbbuaihmygmdb2hfibkbpal5i6kuqe6vjopf0xtxnc7eeopoxgptjpzgbybcw1g8qizmkxjh3xpzz88uhj4052uwvxohu6is880tm1m0bzjkn5qdrcl0rqbfd8c8hf56ylh35qcasvd2mnzwxfe1h8l3xle\",\n      \"provider\" : \"0gwvgufm59ireulazfk0psb01jcxiwzyrobozaof0cksbk83q8i6ouurr0qgjs5pvzkkoe4vy4s58v4nsrec4x9doo80e\",\n      \"cardId\" : 1526068635109844681,\n      \"embossBusinessName\" : \"Morton Mitchell\",\n      \"alias\" : \"6ufy1lzn23nh47rtmxl7nq12\",\n      \"embossCardName\" : \"Tasia Kessler\"\n    },\n    \"myRef\" : \"Transfer to main account\",\n    \"txnId\" : 30157\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf832aad-9079-48b6-bb90-4e4cab10faba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.395998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getTransactionsByIdv1",
          "schema" : {
            "properties" : {
              "dateRangeTo" : {
                "description" : "milisecond timestamp of date range to value.",
                "example" : 1547744156603,
                "type" : "integer"
              },
              "total" : {
                "description" : "The total number of card transactions in the list.",
                "example" : 1,
                "type" : "integer"
              },
              "transactions" : {
                "items" : {
                  "properties" : {
                    "amountAfterCharges" : {
                      "description" : "Net amount lodged or taken from the account after fees and charges were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "amountBeforeCharges" : {
                      "description" : "Amount of the transaction before the fees and taxes were applied.",
                      "example" : 5000,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 8500,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "batchItemDetails" : {
                      "description" : "Details of the batch run if this transaction was part of a batch.",
                      "properties" : {
                        "batchItemPublicUuid" : {
                          "description" : "The UUID for this item in the batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "batchName" : {
                          "description" : "The optional name given to the batch at creation time.",
                          "example" : "Payroll 2022-11",
                          "type" : "string"
                        },
                        "batchPublicUuid" : {
                          "description" : "The UUID for this batch.",
                          "example" : "F2AF3F2B-4406-4199-B249-B354F2CC6019",
                          "type" : "string"
                        },
                        "jobNumber" : {
                          "description" : "The optional job number given to the batch to link it to your own system.",
                          "example" : "2018-01-PR",
                          "type" : "string"
                        }
                      },
                      "title" : "batchItemDetails",
                      "type" : "object"
                    },
                    "card" : {
                      "description" : "Details of the card used (if applicable)",
                      "properties" : {
                        "alias" : {
                          "type" : "string"
                        },
                        "cardId" : {
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "embossBusinessName" : {
                          "type" : "string"
                        },
                        "embossCardName" : {
                          "type" : "string"
                        },
                        "expiryDate" : {
                          "format" : "date-time",
                          "type" : "string"
                        },
                        "maskedPan" : {
                          "type" : "string"
                        },
                        "provider" : {
                          "type" : "string"
                        }
                      },
                      "title" : "relatedCard",
                      "type" : "object"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "date" : {
                      "description" : "Date of the transaction",
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "dateAcknowledged" : {
                      "example" : "2021-04-13T11:06:32.437Z",
                      "format" : "date-time",
                      "type" : "string"
                    },
                    "directDebitDetails" : {
                      "description" : "Details of the direct debit (if applicable)",
                      "properties" : {
                        "directDebitReference" : {
                          "description" : "The direct debit reference.",
                          "example" : "VODA-ABC453-1",
                          "type" : "string"
                        },
                        "directDebitUuid" : {
                          "description" : "The UUID for the direct debit payment",
                          "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                          "type" : "string"
                        },
                        "mandateReference" : {
                          "description" : "the reference of the mandate",
                          "example" : "CRZ-102190123",
                          "type" : "string"
                        },
                        "mandateUUid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "f171b143-e3eb-47de-85a6-1c1f1108c701",
                          "type" : "string"
                        },
                        "mandateUuid" : {
                          "description" : "The UUID for the mandate",
                          "example" : "28d627c3-1889-44c8-ae59-6f6b20239260",
                          "type" : "string"
                        },
                        "originatorAlias" : {
                          "description" : "The Alias of the party who sets up the direct debit.",
                          "example" : "Three",
                          "type" : "string"
                        },
                        "originatorLogoUrlLarge" : {
                          "description" : "URL pointing to a large version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorLogoUrlSmall" : {
                          "description" : "URL pointing to a small version of the Originator Logo (if available)",
                          "example" : "https://s3-eu-west-1.amazonaws.com/live-fire-assets/prod/49dc9a01-8261-4d98-bebf-c3842c2d3c5d-small.png",
                          "type" : "string"
                        },
                        "originatorName" : {
                          "description" : "The creator of the party who sets up the direct debit.",
                          "example" : "Vodafone PLC",
                          "type" : "string"
                        },
                        "originatorReference" : {
                          "description" : "Set by party who sets up the direct debit.",
                          "example" : "VODA-123456",
                          "type" : "string"
                        }
                      },
                      "title" : "directDebitDetails",
                      "type" : "object"
                    },
                    "eventUuid" : {
                      "description" : "An internal Fire reference for the transaction (UUID)",
                      "example" : "42de0705-e3f1-44fa-8c41-79973eb80eb2",
                      "type" : "string"
                    },
                    "feeAmount" : {
                      "description" : "The amount of the fee, if any.",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "fxTradeDetails" : {
                      "description" : "Details of the FX trade (if applicable)",
                      "properties" : {
                        "buyAmount" : {
                          "description" : "amount of buyCurrency being bought",
                          "example" : 359,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "buyCurrency" : {
                          "description" : "currency which is being bought",
                          "example" : "GBP",
                          "type" : "string"
                        },
                        "fixedSide" : {
                          "description" : "type of trade - BUY or SELL",
                          "example" : "SELL",
                          "type" : "string"
                        },
                        "provider" : {
                          "description" : "The FX provider used to make the trade.",
                          "example" : "TCC",
                          "type" : "string"
                        },
                        "rate4d" : {
                          "description" : "exchange rate",
                          "example" : 7180,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellAmount" : {
                          "description" : "amount of sellCurrency being sold",
                          "example" : 500,
                          "format" : "int64",
                          "type" : "integer"
                        },
                        "sellCurrency" : {
                          "description" : "currency which is being sold",
                          "example" : "EUR",
                          "type" : "string"
                        }
                      },
                      "title" : "fxTrade",
                      "type" : "object"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com) This field is only used in the condensed version.",
                      "example" : 1951,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "myRef" : {
                      "description" : "The comment/reference on the transaction",
                      "example" : "Transfer to main account",
                      "type" : "string"
                    },
                    "paymentRequestPublicCode" : {
                      "description" : "(FOP payments only) The FOP Payment Code that was used to make this payment.",
                      "example" : "1abcdefg",
                      "type" : "string"
                    },
                    "proprietarySchemeDetails" : {
                      "description" : "Extra details about the transaction based on the scheme used to make the payment.",
                      "items" : {
                        "properties" : {
                          "data" : {
                            "description" : "the scheme proprietary data - key pairs separated by | and key/values separated by ^",
                            "example" : "remittanceInfoUnstructured^FIRE440286865OD1|instructionId^O223151336499079",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "the type of proprietary scheme - SCT for SEPA, FPS for Faster Payments etc.",
                            "example" : "SCT",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "title" : "proprietarySchemeDetails",
                      "type" : "array"
                    },
                    "refId" : {
                      "description" : "The id of the transaction.",
                      "example" : 26774,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "relatedParty" : {
                      "description" : "Details of the related third party involved in the transaction.",
                      "oneOf" : [ {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "identifier for the fire.com account (assigned by fire.com)",
                                "example" : 42,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "FIRE_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyFireAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "the Account Number of the account.",
                                "example" : "11111111",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "the name the user gives to the account to help them identify it.",
                                "example" : "Main Account",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "the BIC of the account (provided if currency is EUR).",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "the IBAN of the account (provided if currency is EUR).",
                                "example" : "IE54CPAY99119911111111",
                                "type" : "string"
                              },
                              "id" : {
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "the Sort Code of the account.",
                                "example" : "232221",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "EXTERNAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyExternalAccount",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "account" : {
                            "properties" : {
                              "accountNumber" : {
                                "description" : "The account number of the Withdrawl account in reference",
                                "example" : "00000000",
                                "type" : "string"
                              },
                              "alias" : {
                                "description" : "The Alias name of the Withdrawl account in reference",
                                "example" : "Smyth and Co.",
                                "type" : "string"
                              },
                              "bic" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "CPAYIE2D",
                                "type" : "string"
                              },
                              "iban" : {
                                "description" : "The BIC of the Withdrawl account in reference",
                                "example" : "IE76CPAY99119900000000",
                                "type" : "string"
                              },
                              "id" : {
                                "description" : "The ID number of the Withdrawl account in reference",
                                "example" : 123,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "nsc" : {
                                "description" : "(Conditional) Provide this field if using Mode 2 and the payee account is in GBP.",
                                "example" : "991199",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "WITHDRAWAL_ACCOUNT" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyPayee",
                        "type" : "object"
                      }, {
                        "properties" : {
                          "cardMerchant" : {
                            "properties" : {
                              "acquirerIdDe32" : {
                                "example" : 6011329,
                                "type" : "string"
                              },
                              "additionalAmtDe54" : {
                                "type" : "string"
                              },
                              "additionalDataDe124" : {
                                "type" : "string"
                              },
                              "additionalDataDe48" : {
                                "example" : "010X610500000",
                                "type" : "string"
                              },
                              "authCodeDe38" : {
                                "example" : "177449",
                                "type" : "string"
                              },
                              "authorisedByGps" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "avsResult" : {
                                "example" : "N",
                                "type" : "string"
                              },
                              "billAmt" : {
                                "example" : -1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "billCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "expiryDate" : {
                                "type" : "string"
                              },
                              "mccCode" : {
                                "example" : "5521",
                                "type" : "string"
                              },
                              "merchIdDe42" : {
                                "example" : 13152429,
                                "type" : "string"
                              },
                              "merchNameDe43" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "mtId" : {
                                "example" : "0100",
                                "type" : "string"
                              },
                              "posDataDe22" : {
                                "example" : "051",
                                "type" : "string"
                              },
                              "posDataDe61" : {
                                "example" : 1000030037299999,
                                "type" : "string"
                              },
                              "posTermnlDe41" : {
                                "example" : "80266721",
                                "type" : "string"
                              },
                              "procCode" : {
                                "example" : "000000",
                                "type" : "string"
                              },
                              "recordDataDe120" : {
                                "type" : "string"
                              },
                              "respCodeDe39" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "retRefNoDe37" : {
                                "example" : 10900006720,
                                "type" : "string"
                              },
                              "statusCode" : {
                                "example" : "00",
                                "type" : "string"
                              },
                              "token" : {
                                "example" : "976307363",
                                "type" : "string"
                              },
                              "txnAmt4d" : {
                                "example" : 1000,
                                "format" : "int64",
                                "type" : "integer"
                              },
                              "txnCcy" : {
                                "example" : "978",
                                "type" : "string"
                              },
                              "txnCtry" : {
                                "example" : "IRL",
                                "type" : "string"
                              },
                              "txnDesc" : {
                                "example" : "ABC Coffee Shop",
                                "type" : "string"
                              },
                              "txnStatCode" : {
                                "example" : "A",
                                "type" : "string"
                              },
                              "txnType" : {
                                "example" : "A",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : {
                            "enum" : [ "CARD_MERCHANT", "CARD_ATM" ],
                            "type" : "string"
                          }
                        },
                        "title" : "relatedPartyCardPayment",
                        "type" : "object"
                      } ],
                      "title" : "relatedParty"
                    },
                    "taxAmount" : {
                      "description" : "The amount of the tax, if any (e.g. Stamp duty for ATM transactions)",
                      "example" : 0,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "txnId" : {
                      "description" : "The id of this side of the transaction (each transaction has two sides - a to and a from). This is used to get the details of the transaction.",
                      "example" : 30157,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "The type of the transaction:\n* `LODGEMENT` - Bank Transfer received\n* `PIS_LODGEMENT` - Fire Open Payments Lodgement received\n* `MANUAL_TRANSFER` - Manual Transfer to\n* `WITHDRAWAL` - Bank Transfer sent\n* `REVERSAL` - Credit Reversal\n* `DIRECT_DEBIT` - A direct debit.\n* `DIRECT_DEBIT_REPRESENTED` - A Direct Debit that was requested again after initially failing.\n* `DIRECT_DEBIT_REFUND` - A refund of a Direct debit.\n* `INTERNAL_TRANSFER_TO` - Internal Transfer sent (between two of my accounts of the same currency)\n* `INTERNAL_TRANSFER_FROM` - Internal Transfer received (between two of my accounts of the same currency)\n* `WITHDRAWAL_RETURNED` - Bank Transfer sent returned\n* `LODGEMENT_REVERSED` - Bank Transfer received returned\n* `FX_INTERNAL_TRANSFER_FROM` - FX Internal Transfer received (between two of my accounts of different currency)\n* `FX_INTERNAL_TRANSFER_TO` - FX Internal Transfer sent (between two of my accounts of different currency)\n* `CREATE_CARD` - The fee taken when a debit card is issued.\n* `ADD_ACCOUNT` - The fee taken when an account is created.\n* `CREATE_ADDITIONAL_USER` - The fee taken when an additional user is created.       \n* `CARD_POS_CONTACT_DEBIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACT_CREDIT` - Card used in store; read by magnetic stripe or pin\n* `CARD_POS_CONTACTLESS_DEBIT` - Card used in store; read by NFC\n* `CARD_POS_CONTACTLESS_CREDIT` - Card used in store; read by NFC\n* `CARD_ECOMMERCE_DEBIT` - Card used on the internet\n* `CARD_ECOMMERCE_CREDIT` - Card used on the internet\n* `CARD_ATM_DEBIT` - Card used in an ATM\n* `CARD_ATM_CREDIT` - Card used in an ATM\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT` - Card used in store in non-processing currency; read by magnetic stripe or pin\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT` - Card used in store in non-processing currency; read by NFC\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT\t` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT` - Card used on the internet in non-processing currency\n* `CARD_INTERNATIONAL_ATM_DEBIT` - Card used in an ATM in non-processing currency\n* `CARD_INTERNATIONAL_ATM_CREDIT` - Card used in an ATM in non-processing currency\n* `CARD_POS_CONTACT_DEBIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACT_CREDIT_REVERSAL` - Card used in store; read by magnetic stripe or pin - reversed\n* `CARD_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_POS_CONTACTLESS_CREDIT_REVERSAL` - Card used in store; read by NFC - reversed\n* `CARD_ECOMMERCE_DEBIT_REVERSAL\t` - Card used on the internet - reversed\n* `CARD_ECOMMERCE_CREDIT_REVERSAL` - Card used on the internet - reversed\n* `CARD_ATM_DEBIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_ATM_CREDIT_REVERSAL` - Card used in an ATM - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACT_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by magnetic stripe or pin - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_POS_CONTACTLESS_CREDIT_REVERSAL` - One or more of the transaction types above. This field can be repeated multiple times to allow for multiple transaction types.\n* `CARD_INTERNATIONAL_ECOMMERCE_DEBIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ECOMMERCE_CREDIT_REVERSAL` - Card used in store in non-processing currency; read by NFC - reversed\n* `CARD_INTERNATIONAL_ATM_DEBIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n* `CARD_INTERNATIONAL_ATM_CREDIT_REVERSAL` - Card used on the internet in non-processing currency - reversed\n",
                      "example" : "WITHDRAWAL",
                      "type" : "string"
                    },
                    "yourRef" : {
                      "description" : "The comment/reference on the transaction that appears on the recipients statement. Only for withdrawals",
                      "example" : "From John Smith",
                      "type" : "string"
                    }
                  },
                  "title" : "transaction",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "cardTransactionsv1",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aef0314a-abb6-463f-9e35-c7d8071ad671",
    "name" : "Retrieve the details of a fire.com Account - 401",
    "request" : {
      "urlPath" : "/v1/accounts/122007534281864902",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "aef0314a-abb6-463f-9e35-c7d8071ad671",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.39331Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById"
        }
      }
    }
  }, {
    "id" : "9a677a22-24bc-438a-90d6-3c57b3956558",
    "name" : "Retrieve the details of a fire.com Account (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts/7399509846724785058",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"GBP\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"BREXIT_MIGRATED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a677a22-24bc-438a-90d6-3c57b3956558",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.393275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccountById",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a49c2b2a-3636-4d75-843e-a58820b14603",
    "name" : "Add a new account",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ccan\" : \"11111111\",\n  \"fopOnly\" : false,\n  \"defaultAccount\" : true,\n  \"ciban\" : \"IE54CPAY99119911111111\",\n  \"colour\" : \"ORANGE\",\n  \"balance\" : 23950,\n  \"cnsc\" : \"232221\",\n  \"directDebitsAllowed\" : false,\n  \"ican\" : 42,\n  \"cbic\" : \"CPAYIE2D\",\n  \"name\" : \"Main Account\",\n  \"currency\" : {\n    \"code\" : \"EUR\",\n    \"description\" : \"Euro\"\n  },\n  \"status\" : \"LIVE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a49c2b2a-3636-4d75-843e-a58820b14603",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.393025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "addAccount",
          "schema" : {
            "properties" : {
              "balance" : {
                "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                "example" : 23950,
                "format" : "int64",
                "type" : "integer"
              },
              "cbic" : {
                "description" : "the BIC of the account (provided if currency is EUR).",
                "example" : "CPAYIE2D",
                "type" : "string"
              },
              "ccan" : {
                "description" : "the Account Number of the account.",
                "example" : "11111111",
                "type" : "string"
              },
              "ciban" : {
                "description" : "the IBAN of the account (provided if currency is EUR).",
                "example" : "IE54CPAY99119911111111",
                "type" : "string"
              },
              "cnsc" : {
                "description" : "the Sort Code of the account.",
                "example" : "232221",
                "type" : "string"
              },
              "colour" : {
                "deprecated" : true,
                "description" : "Internal Use",
                "example" : "ORANGE",
                "type" : "string"
              },
              "currency" : {
                "description" : "The currency.",
                "properties" : {
                  "code" : {
                    "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                    "enum" : [ "EUR", "GBP" ],
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "The name of the currency",
                    "example" : "Euro",
                    "type" : "string"
                  }
                },
                "title" : "currency",
                "type" : "object"
              },
              "defaultAccount" : {
                "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                "example" : true,
                "type" : "boolean"
              },
              "directDebitsAllowed" : {
                "description" : "Whether or not direct debits can be set up on this account.",
                "example" : false,
                "type" : "boolean"
              },
              "fopOnly" : {
                "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                "example" : false,
                "type" : "boolean"
              },
              "ican" : {
                "description" : "identifier for the fire.com account (assigned by fire.com)",
                "example" : 42,
                "format" : "int64",
                "type" : "integer"
              },
              "name" : {
                "description" : "the name the user gives to the account to help them identify it.",
                "example" : "Main Account",
                "type" : "string"
              },
              "status" : {
                "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                "type" : "string"
              }
            },
            "title" : "Account",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f554cea-de39-4148-b1ef-81c9e260f6d7",
    "name" : "List all fire.com Accounts - 401",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET"
    },
    "response" : {
      "status" : 401
    },
    "uuid" : "5f554cea-de39-4148-b1ef-81c9e260f6d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.392802Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts"
        }
      }
    }
  }, {
    "id" : "b5a179bb-5b5e-4eb3-9a87-225a70920cbb",
    "name" : "List all fire.com Accounts (application/json)",
    "request" : {
      "urlPath" : "/v1/accounts",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accounts\" : [ {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"EUR\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  }, {\n    \"ccan\" : \"11111111\",\n    \"fopOnly\" : false,\n    \"defaultAccount\" : true,\n    \"ciban\" : \"IE54CPAY99119911111111\",\n    \"colour\" : \"ORANGE\",\n    \"balance\" : 23950,\n    \"cnsc\" : \"232221\",\n    \"directDebitsAllowed\" : false,\n    \"ican\" : 42,\n    \"cbic\" : \"CPAYIE2D\",\n    \"name\" : \"Main Account\",\n    \"currency\" : {\n      \"code\" : \"GBP\",\n      \"description\" : \"Euro\"\n    },\n    \"status\" : \"LIVE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5a179bb-5b5e-4eb3-9a87-225a70920cbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:37.392744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getAccounts",
          "schema" : {
            "properties" : {
              "accounts" : {
                "items" : {
                  "properties" : {
                    "balance" : {
                      "description" : "the balance of the account (in minor currency units - pence, cent etc. 434050 == 4,340.50 GBP for a GBP account).",
                      "example" : 23950,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "cbic" : {
                      "description" : "the BIC of the account (provided if currency is EUR).",
                      "example" : "CPAYIE2D",
                      "type" : "string"
                    },
                    "ccan" : {
                      "description" : "the Account Number of the account.",
                      "example" : "11111111",
                      "type" : "string"
                    },
                    "ciban" : {
                      "description" : "the IBAN of the account (provided if currency is EUR).",
                      "example" : "IE54CPAY99119911111111",
                      "type" : "string"
                    },
                    "cnsc" : {
                      "description" : "the Sort Code of the account.",
                      "example" : "232221",
                      "type" : "string"
                    },
                    "colour" : {
                      "deprecated" : true,
                      "description" : "Internal Use",
                      "example" : "ORANGE",
                      "type" : "string"
                    },
                    "currency" : {
                      "description" : "The currency.",
                      "properties" : {
                        "code" : {
                          "description" : "The three letter code for the currency - either `EUR` or `GBP`.",
                          "enum" : [ "EUR", "GBP" ],
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "The name of the currency",
                          "example" : "Euro",
                          "type" : "string"
                        }
                      },
                      "title" : "currency",
                      "type" : "object"
                    },
                    "defaultAccount" : {
                      "description" : "true if this is the default account for this currency. This will be the account that general fees are taken from (as opposed to per-transaction fees).",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "directDebitsAllowed" : {
                      "description" : "Whether or not direct debits can be set up on this account.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "fopOnly" : {
                      "description" : "Indicates that this account is for collecting Fire Open Payments only. All other payments to this account will be returned.",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "ican" : {
                      "description" : "identifier for the fire.com account (assigned by fire.com)",
                      "example" : 42,
                      "format" : "int64",
                      "type" : "integer"
                    },
                    "name" : {
                      "description" : "the name the user gives to the account to help them identify it.",
                      "example" : "Main Account",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Live accounts can be used as normal. Migrated accounts were used before Brexit and are read-only.",
                      "enum" : [ "LIVE", "BREXIT_MIGRATED" ],
                      "type" : "string"
                    }
                  },
                  "title" : "Account",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "accounts",
            "type" : "object"
          }
        }
      }
    }
  } ]
}