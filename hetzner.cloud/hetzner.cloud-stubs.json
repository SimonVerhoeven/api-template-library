{
  "mappings" : [ {
    "id" : "08700f3b-9d0f-4553-8bdd-22fbbc487e28",
    "name" : "Get an Action for a Volume",
    "request" : {
      "urlPath" : "/volumes/3357924581514764178/actions/5620245077314652155",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"attach_volume\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08700f3b-9d0f-4553-8bdd-22fbbc487e28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.763518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a9147a13-4be6-41ec-a908-3f2a0c635d28",
    "name" : "Resize Volume",
    "request" : {
      "urlPath" : "/volumes/223459963407390413/actions/resize",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"resize_volume\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 554,\n      \"type\" : \"volume\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9147a13-4be6-41ec-a908-3f2a0c635d28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.763395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "3278b50d-70da-40b1-9aab-7feb018bfe39",
    "name" : "Detach Volume",
    "request" : {
      "urlPath" : "/volumes/8848070870805200442/actions/detach",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"detach_volume\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3278b50d-70da-40b1-9aab-7feb018bfe39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.763279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "876962f5-4ae4-4d1d-9524-96b929e3165a",
    "name" : "Change Volume Protection",
    "request" : {
      "urlPath" : "/volumes/6943194571980286902/actions/change_protection",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 554,\n      \"type\" : \"volume\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "876962f5-4ae4-4d1d-9524-96b929e3165a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.763159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "5fadecda-e670-469d-bb75-c6fba6f9d37e",
    "name" : "Attach Volume to a Server",
    "request" : {
      "urlPath" : "/volumes/1587225912693064306/actions/attach",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"attach_volume\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 43,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 554,\n      \"type\" : \"volume\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fadecda-e670-469d-bb75-c6fba6f9d37e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.763033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "7ba6b864-5384-4841-bc27-1fc6b61d733d",
    "name" : "Get all Actions for a Volume",
    "request" : {
      "urlPath" : "/volumes/204980594387733733/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"attach_volume\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 13,\n      \"type\" : \"volume\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ba6b864-5384-4841-bc27-1fc6b61d733d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.762905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "cd31c0ab-f15d-44eb-8981-9779ba009690",
    "name" : "Update a Volume",
    "request" : {
      "urlPath" : "/volumes/0w4u",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"volume\" : {\n    \"created\" : \"2016-01-30T23:50:11+00:00\",\n    \"format\" : \"xfs\",\n    \"id\" : 4711,\n    \"labels\" : {\n      \"labelkey\" : \"value\"\n    },\n    \"linux_device\" : \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\" : {\n      \"city\" : \"Falkenstein\",\n      \"country\" : \"DE\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"latitude\" : 50.47612,\n      \"longitude\" : 12.370071,\n      \"name\" : \"fsn1\",\n      \"network_zone\" : \"eu-central\"\n    },\n    \"name\" : \"database-storage\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"server\" : 12,\n    \"size\" : 42,\n    \"status\" : \"available\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd31c0ab-f15d-44eb-8981-9779ba009690",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.762719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "volume" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "format" : {
                    "description" : "Filesystem of the Volume if formatted on creation, null if not formatted on creation",
                    "example" : "xfs",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "linux_device" : {
                    "description" : "Device path on the file system for the Volume",
                    "example" : "/dev/disk/by-id/scsi-0HC_Volume_4711",
                    "type" : "string"
                  },
                  "location" : {
                    "description" : "Location of the Volume. Volume can only be attached to Servers in the same Location.",
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "server" : {
                    "description" : "ID of the Server the Volume is attached to, null if it is not attached at all",
                    "example" : 12,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "size" : {
                    "description" : "Size in GB of the Volume",
                    "example" : 42,
                    "type" : "number"
                  },
                  "status" : {
                    "description" : "Current status of the Volume",
                    "enum" : [ "creating", "available" ],
                    "example" : "available",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "created", "name", "server", "location", "size", "linux_device", "protection", "labels", "status", "format" ],
                "type" : "object"
              }
            },
            "required" : [ "volume" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "15fd0039-8d31-429d-8608-74e96b9ffcf4",
    "name" : "Get a Volume",
    "request" : {
      "urlPath" : "/volumes/5711383833749766345",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"volume\" : {\n    \"server\" : 12,\n    \"size\" : 42,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"format\" : \"xfs\",\n    \"name\" : \"my-resource\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"id\" : 42,\n    \"linux_device\" : \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"labels\" : { },\n    \"status\" : \"available\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15fd0039-8d31-429d-8608-74e96b9ffcf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.76247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "volume" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "format" : {
                    "description" : "Filesystem of the Volume if formatted on creation, null if not formatted on creation",
                    "example" : "xfs",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "linux_device" : {
                    "description" : "Device path on the file system for the Volume",
                    "example" : "/dev/disk/by-id/scsi-0HC_Volume_4711",
                    "type" : "string"
                  },
                  "location" : {
                    "description" : "Location of the Volume. Volume can only be attached to Servers in the same Location.",
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "server" : {
                    "description" : "ID of the Server the Volume is attached to, null if it is not attached at all",
                    "example" : 12,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "size" : {
                    "description" : "Size in GB of the Volume",
                    "example" : 42,
                    "type" : "number"
                  },
                  "status" : {
                    "description" : "Current status of the Volume",
                    "enum" : [ "creating", "available" ],
                    "example" : "available",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "created", "name", "server", "location", "size", "linux_device", "protection", "labels", "status", "format" ],
                "type" : "object"
              }
            },
            "required" : [ "volume" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "6ea57078-d078-498f-a146-4e870879a11c",
    "name" : "Delete a Volume - 204",
    "request" : {
      "urlPath" : "/volumes/57za",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6ea57078-d078-498f-a146-4e870879a11c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.762254Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "eabdf617-44f2-47b8-a085-f9be8f550eb8",
    "name" : "Create a Volume",
    "request" : {
      "urlPath" : "/volumes",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"create_volume\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 554,\n      \"type\" : \"volume\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  },\n  \"next_actions\" : [ {\n    \"command\" : \"attach_volume\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 554,\n      \"type\" : \"volume\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  } ],\n  \"volume\" : {\n    \"created\" : \"2016-01-30T23:50:11+00:00\",\n    \"format\" : \"xfs\",\n    \"id\" : 4711,\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"linux_device\" : \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"location\" : {\n      \"city\" : \"Falkenstein\",\n      \"country\" : \"DE\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"latitude\" : 50.47612,\n      \"longitude\" : 12.370071,\n      \"name\" : \"fsn1\",\n      \"network_zone\" : \"eu-central\"\n    },\n    \"name\" : \"database-storage\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"server\" : 12,\n    \"size\" : 42,\n    \"status\" : \"available\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eabdf617-44f2-47b8-a085-f9be8f550eb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.762114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "next_actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "volume" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "format" : {
                    "description" : "Filesystem of the Volume if formatted on creation, null if not formatted on creation",
                    "example" : "xfs",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "linux_device" : {
                    "description" : "Device path on the file system for the Volume",
                    "example" : "/dev/disk/by-id/scsi-0HC_Volume_4711",
                    "type" : "string"
                  },
                  "location" : {
                    "description" : "Location of the Volume. Volume can only be attached to Servers in the same Location.",
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "server" : {
                    "description" : "ID of the Server the Volume is attached to, null if it is not attached at all",
                    "example" : 12,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "size" : {
                    "description" : "Size in GB of the Volume",
                    "example" : 42,
                    "type" : "number"
                  },
                  "status" : {
                    "description" : "Current status of the Volume",
                    "enum" : [ "creating", "available" ],
                    "example" : "available",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "created", "name", "server", "location", "size", "linux_device", "protection", "labels", "status", "format" ],
                "type" : "object"
              }
            },
            "required" : [ "volume", "action", "next_actions" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "0c7ad854-411e-4d3f-a530-08a177586c89",
    "name" : "Get all Volumes",
    "request" : {
      "urlPath" : "/volumes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  },\n  \"volumes\" : [ {\n    \"server\" : 12,\n    \"size\" : 42,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"format\" : \"xfs\",\n    \"name\" : \"my-resource\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"id\" : 42,\n    \"linux_device\" : \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"labels\" : { },\n    \"status\" : \"available\"\n  }, {\n    \"server\" : 12,\n    \"size\" : 42,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"format\" : \"xfs\",\n    \"name\" : \"my-resource\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"id\" : 42,\n    \"linux_device\" : \"/dev/disk/by-id/scsi-0HC_Volume_4711\",\n    \"labels\" : { },\n    \"status\" : \"available\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c7ad854-411e-4d3f-a530-08a177586c89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.761747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              },
              "volumes" : {
                "items" : {
                  "properties" : {
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "format" : {
                      "description" : "Filesystem of the Volume if formatted on creation, null if not formatted on creation",
                      "example" : "xfs",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "linux_device" : {
                      "description" : "Device path on the file system for the Volume",
                      "example" : "/dev/disk/by-id/scsi-0HC_Volume_4711",
                      "type" : "string"
                    },
                    "location" : {
                      "description" : "Location of the Volume. Volume can only be attached to Servers in the same Location.",
                      "properties" : {
                        "city" : {
                          "description" : "City the Location is closest to",
                          "example" : "Falkenstein",
                          "type" : "string"
                        },
                        "country" : {
                          "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                          "example" : "DE",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "Description of the Location",
                          "example" : "Falkenstein DC Park 1",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Location",
                          "example" : 1,
                          "type" : "number"
                        },
                        "latitude" : {
                          "description" : "Latitude of the city closest to the Location",
                          "example" : 50.47612,
                          "type" : "number"
                        },
                        "longitude" : {
                          "description" : "Longitude of the city closest to the Location",
                          "example" : 12.370071,
                          "type" : "number"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Location",
                          "example" : "fsn1",
                          "type" : "string"
                        },
                        "network_zone" : {
                          "description" : "Name of network zone this Location resides in",
                          "example" : "eu-central",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Name of the Resource. Must be unique per Project.",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "protection" : {
                      "description" : "Protection configuration for the Resource",
                      "properties" : {
                        "delete" : {
                          "description" : "If true, prevents the Resource from being deleted",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "delete" ],
                      "type" : "object"
                    },
                    "server" : {
                      "description" : "ID of the Server the Volume is attached to, null if it is not attached at all",
                      "example" : 12,
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "size" : {
                      "description" : "Size in GB of the Volume",
                      "example" : 42,
                      "type" : "number"
                    },
                    "status" : {
                      "description" : "Current status of the Volume",
                      "enum" : [ "creating", "available" ],
                      "example" : "available",
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "created", "name", "server", "location", "size", "linux_device", "protection", "labels", "status", "format" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "volumes" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "316c399e-3428-49f3-a42d-b26aad6cbb54",
    "name" : "Update an SSH key",
    "request" : {
      "urlPath" : "/ssh_keys/6923",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ssh_key\" : {\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"fingerprint\" : \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"id\" : 2323,\n    \"labels\" : {\n      \"labelkey\" : \"value\"\n    },\n    \"name\" : \"My ssh key\",\n    \"public_key\" : \"ssh-rsa AAAjjk76kgf...Xt\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "316c399e-3428-49f3-a42d-b26aad6cbb54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.761365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "ssh_key" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "fingerprint" : {
                    "description" : "Fingerprint of public key",
                    "example" : "b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "public_key" : {
                    "description" : "Public key",
                    "example" : "ssh-rsa AAAjjk76kgf...Xt",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "fingerprint", "public_key", "labels", "created" ],
                "type" : "object"
              }
            },
            "required" : [ "ssh_key" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "5901171f-9639-41af-81ff-c5d1aaea3063",
    "name" : "Get a SSH key",
    "request" : {
      "urlPath" : "/ssh_keys/122264044905827720",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ssh_key\" : {\n    \"public_key\" : \"ssh-rsa AAAjjk76kgf...Xt\",\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\" : \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"labels\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5901171f-9639-41af-81ff-c5d1aaea3063",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.761209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "ssh_key" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "fingerprint" : {
                    "description" : "Fingerprint of public key",
                    "example" : "b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "public_key" : {
                    "description" : "Public key",
                    "example" : "ssh-rsa AAAjjk76kgf...Xt",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "fingerprint", "public_key", "labels", "created" ],
                "type" : "object"
              }
            },
            "required" : [ "ssh_key" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "a5b4fc12-88a5-4f77-b7b1-eecaf08873e5",
    "name" : "Delete an SSH key - 204",
    "request" : {
      "urlPath" : "/ssh_keys/a26o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a5b4fc12-88a5-4f77-b7b1-eecaf08873e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.761087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "1b9be80a-2171-41d6-ab55-591249fcf92f",
    "name" : "Create an SSH key",
    "request" : {
      "urlPath" : "/ssh_keys",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"ssh_key\" : {\n    \"public_key\" : \"ssh-rsa AAAjjk76kgf...Xt\",\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\" : \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"labels\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b9be80a-2171-41d6-ab55-591249fcf92f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.760907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "ssh_key" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "fingerprint" : {
                    "description" : "Fingerprint of public key",
                    "example" : "b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "public_key" : {
                    "description" : "Public key",
                    "example" : "ssh-rsa AAAjjk76kgf...Xt",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "fingerprint", "public_key", "labels", "created" ],
                "type" : "object"
              }
            },
            "required" : [ "ssh_key" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "d76c771a-3c36-48b6-b9be-3ccabc214bf4",
    "name" : "Get all SSH keys",
    "request" : {
      "urlPath" : "/ssh_keys",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ssh_keys\" : [ {\n    \"public_key\" : \"ssh-rsa AAAjjk76kgf...Xt\",\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\" : \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"labels\" : { }\n  }, {\n    \"public_key\" : \"ssh-rsa AAAjjk76kgf...Xt\",\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\" : \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"labels\" : { }\n  }, {\n    \"public_key\" : \"ssh-rsa AAAjjk76kgf...Xt\",\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\" : \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"labels\" : { }\n  }, {\n    \"public_key\" : \"ssh-rsa AAAjjk76kgf...Xt\",\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"fingerprint\" : \"b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f\",\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"labels\" : { }\n  } ],\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d76c771a-3c36-48b6-b9be-3ccabc214bf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.7608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              },
              "ssh_keys" : {
                "items" : {
                  "properties" : {
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "fingerprint" : {
                      "description" : "Fingerprint of public key",
                      "example" : "b7:2f:30:a0:2f:6c:58:6c:21:04:58:61:ba:06:3b:2f",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Name of the Resource. Must be unique per Project.",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "public_key" : {
                      "description" : "Public key",
                      "example" : "ssh-rsa AAAjjk76kgf...Xt",
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "fingerprint", "public_key", "labels", "created" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "ssh_keys" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "c77a11a7-1d77-45db-a6e6-5b9b02465ece",
    "name" : "Get Metrics for a Server",
    "request" : {
      "urlPath" : "/servers/8418711737699649600/metrics",
      "method" : "GET",
      "queryParameters" : {
        "start" : {
          "equalTo" : "tpo3d1vfz54udjkv32tzccpvi6kvg6r5bho31f886oflmpsdxckltljytzm7rfrc438eh2uuq0yckaxh3k6qsvqeym0iw8ffk1jg4bon9rzbttgtylprhc09hnw33y6oz67mf9ze87k3j7hb5vjyy59"
        },
        "end" : {
          "equalTo" : "l1fwifgi1isoi"
        },
        "type" : {
          "equalTo" : "disk"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metrics\" : {\n    \"time_series\" : {\n      \"name_of_timeseries\" : {\n        \"values\" : [ [ 1.435781470622E9, \"42\" ], [ 1.435781471622E9, \"43\" ] ]\n      }\n    },\n    \"start\" : \"2017-01-01T00:00:00+00:00\",\n    \"end\" : \"2017-01-01T23:00:00+00:00\",\n    \"step\" : 60\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c77a11a7-1d77-45db-a6e6-5b9b02465ece",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.760557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "metrics" : {
                "properties" : {
                  "end" : {
                    "description" : "End of period of metrics reported (in ISO-8601 format)",
                    "example" : "2017-01-01T23:00:00+00:00",
                    "type" : "string"
                  },
                  "start" : {
                    "description" : "Start of period of metrics reported (in ISO-8601 format)",
                    "example" : "2017-01-01T00:00:00+00:00",
                    "type" : "string"
                  },
                  "step" : {
                    "description" : "Resolution of results in seconds.",
                    "example" : 60,
                    "type" : "number"
                  },
                  "time_series" : {
                    "additionalProperties" : {
                      "properties" : {
                        "values" : {
                          "description" : "Metrics Timestamps with values",
                          "items" : {
                            "items" : {
                              "oneOf" : [ {
                                "type" : "number"
                              }, {
                                "type" : "string"
                              } ]
                            },
                            "type" : "array"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "values" ],
                      "type" : "object"
                    },
                    "description" : "Hash with timeseries information, containing the name of timeseries as key",
                    "example" : {
                      "name_of_timeseries" : {
                        "values" : [ [ 1435781470.622, "42" ], [ 1435781471.622, "43" ] ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "required" : [ "start", "end", "step", "time_series" ],
                "type" : "object"
              }
            },
            "required" : [ "metrics" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "216b96d5-d536-4bdf-b8a9-9dc62bb329ab",
    "name" : "Get an Action for a Server",
    "request" : {
      "urlPath" : "/servers/8523716008664930283/actions/6174988213171528527",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"start_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "216b96d5-d536-4bdf-b8a9-9dc62bb329ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.76032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "41da89e1-2b22-428a-b1ff-bce0eb2e5fe6",
    "name" : "Shutdown a Server",
    "request" : {
      "urlPath" : "/servers/7181926645194638019/actions/shutdown",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"shutdown_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41da89e1-2b22-428a-b1ff-bce0eb2e5fe6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.760192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "5039c629-117b-48d7-846e-4d45010f20cf",
    "name" : "Reset root Password of a Server",
    "request" : {
      "urlPath" : "/servers/489569159844565918/actions/reset_password",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"reset_password\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  },\n  \"root_password\" : \"zCWbFhnu950dUTko5f40\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5039c629-117b-48d7-846e-4d45010f20cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.760071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "root_password" : {
                "description" : "Password that will be set for this Server once the Action succeeds",
                "example" : "zCWbFhnu950dUTko5f40",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "56d76157-e9de-4f58-b067-49273054e0b2",
    "name" : "Reset a Server",
    "request" : {
      "urlPath" : "/servers/3541407253079160694/actions/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"reset_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56d76157-e9de-4f58-b067-49273054e0b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.75994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "1c0056e3-349e-4865-9b9d-28d399488d84",
    "name" : "Request Console for a Server",
    "request" : {
      "urlPath" : "/servers/4581526286166400017/actions/request_console",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"request_console\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  },\n  \"password\" : \"9MQaTg2VAGI0FIpc10k3UpRXcHj2wQ6x\",\n  \"wss_url\" : \"wss://console.hetzner.cloud/?server_id=1&token=3db32d15-af2f-459c-8bf8-dee1fd05f49c\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c0056e3-349e-4865-9b9d-28d399488d84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.759819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "password" : {
                "description" : "VNC password to use for this connection (this password only works in combination with a wss_url with valid token)",
                "example" : "9MQaTg2VAGI0FIpc10k3UpRXcHj2wQ6x",
                "type" : "string"
              },
              "wss_url" : {
                "description" : "URL of websocket proxy to use; this includes a token which is valid for a limited time only",
                "example" : "wss://console.hetzner.cloud/?server_id=1&token=3db32d15-af2f-459c-8bf8-dee1fd05f49c",
                "type" : "string"
              }
            },
            "required" : [ "wss_url", "password", "action" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "18df1238-bdb1-412b-9a17-950a8482db7f",
    "name" : "Remove from Placement Group",
    "request" : {
      "urlPath" : "/servers/555402044270077593/actions/remove_from_placement_group",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"remove_from_placement_group\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18df1238-bdb1-412b-9a17-950a8482db7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.759663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "a1a6851e-4893-4074-84c1-7b32619e61b4",
    "name" : "Rebuild a Server from an Image",
    "request" : {
      "urlPath" : "/servers/871768242470278916/actions/rebuild",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"rebuild_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1a6851e-4893-4074-84c1-7b32619e61b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.759539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "root_password" : {
                "description" : "New root password when not using SSH keys",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "8ee92a32-cd96-45a9-aeb3-7286286c1338",
    "name" : "Soft-reboot a Server",
    "request" : {
      "urlPath" : "/servers/7235239705751530546/actions/reboot",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"reboot_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ee92a32-cd96-45a9-aeb3-7286286c1338",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.759407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "d48d695e-21a3-47d7-8408-93a772014636",
    "name" : "Power on a Server",
    "request" : {
      "urlPath" : "/servers/277140441083619092/actions/poweron",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"start_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d48d695e-21a3-47d7-8408-93a772014636",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.759294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "e5fac695-306c-4e07-8dc2-e1d39adbbf91",
    "name" : "Power off a Server",
    "request" : {
      "urlPath" : "/servers/7304574934959986305/actions/poweroff",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"stop_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5fac695-306c-4e07-8dc2-e1d39adbbf91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.759173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "5affbc1f-21be-45a4-b02a-e2a299fdddfb",
    "name" : "Enable Rescue Mode for a Server",
    "request" : {
      "urlPath" : "/servers/6352078583452378991/actions/enable_rescue",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"enable_rescue\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  },\n  \"root_password\" : \"zCWbFhnu950dUTko5f40\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5affbc1f-21be-45a4-b02a-e2a299fdddfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.759045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "root_password" : {
                "description" : "Password that will be set for this Server once the Action succeeds",
                "example" : "zCWbFhnu950dUTko5f40",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "185e2ac9-05ce-47ca-ab71-80fa2be406d8",
    "name" : "Enable and Configure Backups for a Server",
    "request" : {
      "urlPath" : "/servers/7551414776094943727/actions/enable_backup",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"enable_backup\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "185e2ac9-05ce-47ca-ab71-80fa2be406d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.758916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "8e7a7826-3d5e-4a4f-bd07-e36c85e2022a",
    "name" : "Disable Rescue Mode for a Server",
    "request" : {
      "urlPath" : "/servers/7885776656444642372/actions/disable_rescue",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"disable_rescue\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e7a7826-3d5e-4a4f-bd07-e36c85e2022a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.7588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "3b5423fb-f3f3-4682-be05-479e2fb66cff",
    "name" : "Disable Backups for a Server",
    "request" : {
      "urlPath" : "/servers/7767749431273433483/actions/disable_backup",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"disable_backup\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b5423fb-f3f3-4682-be05-479e2fb66cff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.758686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "4254ba63-7b0d-4126-84af-5068cc338168",
    "name" : "Detach an ISO from a Server",
    "request" : {
      "urlPath" : "/servers/3512380367753597808/actions/detach_iso",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"detach_iso\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4254ba63-7b0d-4126-84af-5068cc338168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.758567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "f812a662-53cf-4e00-9b57-9ce4721a8d03",
    "name" : "Detach a Server from a Network",
    "request" : {
      "urlPath" : "/servers/703035930190204658/actions/detach_from_network",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"detach_from_network\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f812a662-53cf-4e00-9b57-9ce4721a8d03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.758451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "be72cff9-410e-4d61-a56c-713854c0fcfe",
    "name" : "Create Image from a Server",
    "request" : {
      "urlPath" : "/servers/5187585572189274427/actions/create_image",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"create_image\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  },\n  \"image\" : {\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"created_from\" : {\n      \"id\" : 1,\n      \"name\" : \"Server\"\n    },\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"description\" : \"my image\",\n    \"disk_size\" : 10,\n    \"id\" : 4711,\n    \"image_size\" : 2.3,\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"os_flavor\" : \"ubuntu\",\n    \"os_version\" : \"20.04\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"rapid_deploy\" : false,\n    \"status\" : \"creating\",\n    \"type\" : \"snapshot\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be72cff9-410e-4d61-a56c-713854c0fcfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.758319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "image" : {
                "properties" : {
                  "bound_to" : {
                    "description" : "ID of Server the Image is bound to. Only set for Images of type `backup`.",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "created_from" : {
                    "description" : "Information about the Server the Image was created from",
                    "nullable" : true,
                    "properties" : {
                      "id" : {
                        "description" : "ID of the Server the Image was created from",
                        "example" : 1,
                        "type" : "integer"
                      },
                      "name" : {
                        "description" : "Server name at the time the Image was created",
                        "example" : "Server",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name" ],
                    "type" : "object"
                  },
                  "deleted" : {
                    "description" : "Point in time where the Image was deleted (in ISO-8601 format)",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "deprecated" : {
                    "description" : "Point in time when the Image is considered to be deprecated (in ISO-8601 format)",
                    "example" : "2018-02-28T00:00:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the Image",
                    "example" : "Ubuntu 20.04 Standard 64 bit",
                    "type" : "string"
                  },
                  "disk_size" : {
                    "description" : "Size of the disk contained in the Image in GB",
                    "example" : 10,
                    "type" : "number"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "image_size" : {
                    "description" : "Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.",
                    "example" : 2.3,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Unique identifier of the Image. This value is only set for system Images.",
                    "example" : "ubuntu-20.04",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "os_flavor" : {
                    "description" : "Flavor of operating system contained in the Image",
                    "enum" : [ "ubuntu", "centos", "debian", "fedora", "unknown" ],
                    "example" : "ubuntu",
                    "type" : "string"
                  },
                  "os_version" : {
                    "description" : "Operating system version",
                    "example" : "20.04",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "rapid_deploy" : {
                    "description" : "Indicates that rapid deploy of the Image is available",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "status" : {
                    "description" : "Whether the Image can be used or if it's still being created or unavailable",
                    "enum" : [ "available", "creating", "unavailable" ],
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "Type of the Image",
                    "enum" : [ "system", "app", "snapshot", "backup", "temporary" ],
                    "example" : "snapshot",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "type", "status", "name", "description", "image_size", "disk_size", "created", "created_from", "bound_to", "os_flavor", "os_version", "protection", "deprecated", "deleted", "labels" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "244b80a7-ae59-4965-9e2c-2edc58245c38",
    "name" : "Change the Type of a Server",
    "request" : {
      "urlPath" : "/servers/8690127986654849246/actions/change_type",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_server_type\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "244b80a7-ae59-4965-9e2c-2edc58245c38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.758066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "9fa655a2-5f2a-4421-9fd0-3c9bc27c8c9f",
    "name" : "Change Server Protection",
    "request" : {
      "urlPath" : "/servers/3128510813203652025/actions/change_protection",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fa655a2-5f2a-4421-9fd0-3c9bc27c8c9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.757942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "f7e7beb2-7295-44d5-9a23-da3a5c31a98d",
    "name" : "Change reverse DNS entry for this Server",
    "request" : {
      "urlPath" : "/servers/7826895659707444485/actions/change_dns_ptr",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_dns_ptr\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7e7beb2-7295-44d5-9a23-da3a5c31a98d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.757822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "aeb35120-a89f-4fe1-937e-4bb4d80fd870",
    "name" : "Change alias IPs of a Network",
    "request" : {
      "urlPath" : "/servers/6840098696759303264/actions/change_alias_ips",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_alias_ips\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeb35120-a89f-4fe1-937e-4bb4d80fd870",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.757699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "1e95e944-5ca6-4209-b63d-5c47c56da866",
    "name" : "Attach a Server to a Network",
    "request" : {
      "urlPath" : "/servers/7905740437793770699/actions/attach_to_network",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"attach_to_network\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e95e944-5ca6-4209-b63d-5c47c56da866",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.757575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "ba0de5b6-ebf4-4f84-ab29-9247b6e70a8d",
    "name" : "Attach an ISO to a Server",
    "request" : {
      "urlPath" : "/servers/7064141790222623057/actions/attach_iso",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"attach_iso\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba0de5b6-ebf4-4f84-ab29-9247b6e70a8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.757457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "99effccd-353f-442e-892c-a6546cc98711",
    "name" : "Add a Server to a Placement Group",
    "request" : {
      "urlPath" : "/servers/6811707621548544863/actions/add_to_placement_group",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"add_to_placement_group\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99effccd-353f-442e-892c-a6546cc98711",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.757335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "446646dd-1d5c-448d-8aef-c13e9513fc38",
    "name" : "Get all Actions for a Server",
    "request" : {
      "urlPath" : "/servers/5322149884810540393/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"start_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "446646dd-1d5c-448d-8aef-c13e9513fc38",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.757201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "cf570aae-2501-4d4f-b1b5-0e4a6a7c8059",
    "name" : "Update a Server",
    "request" : {
      "urlPath" : "/servers/8684224673765667710",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"server\" : {\n    \"image\" : {\n      \"image_size\" : 2.3,\n      \"created\" : \"2016-01-30T23:55:00+00:00\",\n      \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n      \"os_version\" : \"20.04\",\n      \"os_flavor\" : \"ubuntu\",\n      \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\" : 10,\n      \"protection\" : {\n        \"delete\" : false\n      },\n      \"type\" : \"snapshot\",\n      \"rapid_deploy\" : false,\n      \"labels\" : { },\n      \"deleted\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/mrebay007/128.jpg\",\n      \"bound_to\" : 8863801428995707324,\n      \"name\" : \"ubuntu-20.04\",\n      \"id\" : 42,\n      \"created_from\" : {\n        \"name\" : \"Server\",\n        \"id\" : 1\n      },\n      \"status\" : \"available\"\n    },\n    \"iso\" : {\n      \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n      \"name\" : \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"description\" : \"FreeBSD 11.0 x64\",\n      \"id\" : 42,\n      \"type\" : \"private\"\n    },\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"private_net\" : [ {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"8ou98lty27q9au4atsj90v6iyitu7ra2v79e72sriv5azf53fmy5z2lxd8p78z421cpb4430sodccu1v36g0rwt626azifs60e95o4dz7oivxomwdm8ygneqzptfev6xn8armlamfhtc1x6n6xidx4blvrwl41q16wv944dyglld18r7wf3br92\", \"6s1x2enx86gi640otl9m0ny1b1zdbmb9uhrjfrymhafohi618a7yq5uqkbg3rv\", \"77mpzvc5iozq3kdcteud7ab6f77pt1ykhxfv5qt0kvmskr9ffd2xh0\", \"iu7yq1yo8efxqv7zo4o1uuvy3o386ct9i9rk2zvzm51tmrtjgh6zy3g9izxy2xjb3dmcyo5mnhjiab0ko9z5ad35auhsvstcby9c8se9zje2xjxhtkh5r08nncoaiy5jmkn1\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"p7sgatw6fv82unqjqji6en15wkcsukxntleyxtn2aocpsm8xv5ce7wz5dymaswpyy52qt3a3qcaffdnumseeptklj914pmgi9b47vg57hszjfn3utjk5pjqxs5tjtl6y0jm1icwceiq5098smpd8jlq1ezdqry77d5ud\", \"7aieftg6k9fv09lidkiogg52jjg2fqmiqd1gcl3kj2n1pe1cp8a0nq5zypsac2batj8b8w7zczk8irnwpdgarehe2ayhv5gyyvy9cesneo\", \"ei3hbbjqpxf3eu1tqnuom8esw81etzdco3ksx60v6qudtk8lfstqh93qip48pnet50anq20uvcmkega88img7trr2kq6s\", \"rjpootdqcdc4z9b1ykubaeeqtqkfcbuogcdhnb5qvx8ahspwk6xe1u2dal\", \"dd5ezoxmhtzlwcajn3kd8btrz3c7lg5b96tfh5n826alpp9xy4bphny8pkl\", \"m7h0uu7m2pqhwnxuhan9o8hc98l2piilkw7x4079przztnobxl11bdohj7h5s8ja7qsbklm8ezvb27t9\", \"5l0pmk96hk0k0fauucodhb39q8v6sgl5hyya2d8ltnjyuzxbr10t56pmh3nloqdl4n5132el1r9pu0o7174vpqlbbw8dlmp5mjafu7pne2ux9lhodinjdwjav32rrtjwcn5e0\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"glhwzgwd0tu\", \"4jw29a1s6o1cxt0foj72h8ujz7qxxz5d8pia9xhotslh9y08\", \"1qn317cigtw9atja5wh\", \"yr0o0krk8wxvpo447nwpe0\", \"tpwdt398wfcm2420untfpsk2041bp34k630a6vo26e0scfnhy1ppxv6f63m1qggj3fm7r3mzgtj4ubsjg76\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"7p456b50f9wn1ejv3o5tg9j\", \"0w2d9k1uk7d1vtru9fmy6uauamptzus2y6h7d1i5g06kqb8ek387o2\", \"i6pg5nwoac8la8iuy49edcucp66nw8s8mu5xe96ixj5f6qx4xs8u7p2nox0\", \"yjrdfo0ojlh7oxndhcbhomyko9y92tzecpzsxvvl06a5\" ],\n      \"network\" : 4711\n    } ],\n    \"volumes\" : [ 5831128631432879354, 4130768209413842873, 3008138945003692698, 1585227916154081804 ],\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"rebuild\" : false,\n      \"delete\" : false\n    },\n    \"load_balancers\" : [ 2075662481149765253, 6327180453422383966, 8593224288070653, 4619354006771624867, 2332872891605587874, 8818314025448773361, 4025253627657451406, 2981142647521400989 ],\n    \"backup_window\" : \"22-02\",\n    \"ingoing_traffic\" : 123456,\n    \"included_traffic\" : 654321,\n    \"public_net\" : {\n      \"ipv4\" : {\n        \"blocked\" : false,\n        \"ip\" : \"1.2.3.4\",\n        \"id\" : 42,\n        \"dns_ptr\" : \"server01.example.com\"\n      },\n      \"ipv6\" : {\n        \"blocked\" : false,\n        \"ip\" : \"2001:db8::/64\",\n        \"id\" : 42,\n        \"dns_ptr\" : [ {\n          \"ip\" : \"2001:db8::1\",\n          \"dns_ptr\" : \"server.example.com\"\n        }, {\n          \"ip\" : \"2001:db8::1\",\n          \"dns_ptr\" : \"server.example.com\"\n        }, {\n          \"ip\" : \"2001:db8::1\",\n          \"dns_ptr\" : \"server.example.com\"\n        } ]\n      },\n      \"firewalls\" : [ {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      } ],\n      \"floating_ips\" : [ 478 ]\n    },\n    \"labels\" : { },\n    \"outgoing_traffic\" : 123456,\n    \"rescue_enabled\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"locked\" : false,\n    \"placement_group\" : {\n      \"servers\" : [ 42 ],\n      \"created\" : \"2016-01-30T23:55:00+00:00\",\n      \"name\" : \"my-resource\",\n      \"id\" : 42,\n      \"type\" : \"spread\",\n      \"labels\" : { }\n    },\n    \"primary_disk_size\" : 50,\n    \"server_type\" : {\n      \"storage_type\" : \"network\",\n      \"disk\" : 25,\n      \"cores\" : 1,\n      \"memory\" : 1,\n      \"cpu_type\" : \"shared\",\n      \"deprecated\" : false,\n      \"name\" : \"cx11\",\n      \"description\" : \"CX11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"status\" : \"deleting\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf570aae-2501-4d4f-b1b5-0e4a6a7c8059",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.756946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "server" : {
                "properties" : {
                  "backup_window" : {
                    "description" : "Time window (UTC) in which the backup will run, or null if the backups are not enabled",
                    "example" : "22-02",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "datacenter" : {
                    "description" : "Datacenter this Resource is located at",
                    "properties" : {
                      "description" : {
                        "description" : "Description of the Datacenter",
                        "example" : "Falkenstein DC Park 8",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "location" : {
                        "properties" : {
                          "city" : {
                            "description" : "City the Location is closest to",
                            "example" : "Falkenstein",
                            "type" : "string"
                          },
                          "country" : {
                            "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                            "example" : "DE",
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "Description of the Location",
                            "example" : "Falkenstein DC Park 1",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Location",
                            "example" : 1,
                            "type" : "number"
                          },
                          "latitude" : {
                            "description" : "Latitude of the city closest to the Location",
                            "example" : 50.47612,
                            "type" : "number"
                          },
                          "longitude" : {
                            "description" : "Longitude of the city closest to the Location",
                            "example" : 12.370071,
                            "type" : "number"
                          },
                          "name" : {
                            "description" : "Unique identifier of the Location",
                            "example" : "fsn1",
                            "type" : "string"
                          },
                          "network_zone" : {
                            "description" : "Name of network zone this Location resides in",
                            "example" : "eu-central",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Datacenter",
                        "example" : "fsn1-dc8",
                        "type" : "string"
                      },
                      "server_types" : {
                        "description" : "The Server types the Datacenter can handle",
                        "properties" : {
                          "available" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "available_for_migration" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "supported" : {
                            "description" : "IDs of Server types that are supported in the Datacenter",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          }
                        },
                        "required" : [ "supported", "available", "available_for_migration" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "id", "name", "description", "location", "server_types" ],
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "image" : {
                    "nullable" : true,
                    "properties" : {
                      "bound_to" : {
                        "description" : "ID of Server the Image is bound to. Only set for Images of type `backup`.",
                        "nullable" : true,
                        "type" : "integer"
                      },
                      "created" : {
                        "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                        "example" : "2016-01-30T23:55:00+00:00",
                        "type" : "string"
                      },
                      "created_from" : {
                        "description" : "Information about the Server the Image was created from",
                        "nullable" : true,
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Server the Image was created from",
                            "example" : 1,
                            "type" : "integer"
                          },
                          "name" : {
                            "description" : "Server name at the time the Image was created",
                            "example" : "Server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name" ],
                        "type" : "object"
                      },
                      "deleted" : {
                        "description" : "Point in time where the Image was deleted (in ISO-8601 format)",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "deprecated" : {
                        "description" : "Point in time when the Image is considered to be deprecated (in ISO-8601 format)",
                        "example" : "2018-02-28T00:00:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Image",
                        "example" : "Ubuntu 20.04 Standard 64 bit",
                        "type" : "string"
                      },
                      "disk_size" : {
                        "description" : "Size of the disk contained in the Image in GB",
                        "example" : 10,
                        "type" : "number"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "image_size" : {
                        "description" : "Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.",
                        "example" : 2.3,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "labels" : {
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "User-defined labels (key-value pairs)",
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Image. This value is only set for system Images.",
                        "example" : "ubuntu-20.04",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "os_flavor" : {
                        "description" : "Flavor of operating system contained in the Image",
                        "enum" : [ "ubuntu", "centos", "debian", "fedora", "unknown" ],
                        "example" : "ubuntu",
                        "type" : "string"
                      },
                      "os_version" : {
                        "description" : "Operating system version",
                        "example" : "20.04",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "protection" : {
                        "description" : "Protection configuration for the Resource",
                        "properties" : {
                          "delete" : {
                            "description" : "If true, prevents the Resource from being deleted",
                            "example" : false,
                            "type" : "boolean"
                          }
                        },
                        "required" : [ "delete" ],
                        "type" : "object"
                      },
                      "rapid_deploy" : {
                        "description" : "Indicates that rapid deploy of the Image is available",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "status" : {
                        "description" : "Whether the Image can be used or if it's still being created or unavailable",
                        "enum" : [ "available", "creating", "unavailable" ],
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "Type of the Image",
                        "enum" : [ "system", "app", "snapshot", "backup", "temporary" ],
                        "example" : "snapshot",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type", "status", "name", "description", "image_size", "disk_size", "created", "created_from", "bound_to", "os_flavor", "os_version", "protection", "deprecated", "deleted", "labels" ],
                    "type" : "object"
                  },
                  "included_traffic" : {
                    "description" : "Free Traffic for the current billing period in bytes",
                    "example" : 654321,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "ingoing_traffic" : {
                    "description" : "Inbound Traffic for the current billing period in bytes",
                    "example" : 123456,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "iso" : {
                    "description" : "ISO Image that is attached to this Server. Null if no ISO is attached.",
                    "nullable" : true,
                    "properties" : {
                      "deprecated" : {
                        "description" : "ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.",
                        "example" : "2018-02-28T00:00:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the ISO",
                        "example" : "FreeBSD 11.0 x64",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "name" : {
                        "description" : "Unique identifier of the ISO. Only set for public ISOs",
                        "example" : "FreeBSD-11.0-RELEASE-amd64-dvd1",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "Type of the ISO",
                        "enum" : [ "public", "private" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "type", "deprecated" ],
                    "type" : "object"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancers" : {
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "locked" : {
                    "description" : "True if Server has been locked and is not available to user",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "name" : {
                    "description" : "Name of the Server (must be unique per Project and a valid hostname as per RFC 1123)",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "outgoing_traffic" : {
                    "description" : "Outbound Traffic for the current billing period in bytes",
                    "example" : 123456,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "placement_group" : {
                    "nullable" : true,
                    "properties" : {
                      "created" : {
                        "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                        "example" : "2016-01-30T23:55:00+00:00",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "labels" : {
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "User-defined labels (key-value pairs)",
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Name of the Resource. Must be unique per Project.",
                        "example" : "my-resource",
                        "type" : "string"
                      },
                      "servers" : {
                        "description" : "Array of IDs of Servers that are part of this Placement Group",
                        "example" : [ 42 ],
                        "items" : {
                          "type" : "integer"
                        },
                        "type" : "array"
                      },
                      "type" : {
                        "description" : "Type of the Placement Group",
                        "enum" : [ "spread" ],
                        "example" : "spread",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "labels", "type", "created", "servers" ],
                    "title" : "PlacementGroupNullable",
                    "type" : "object"
                  },
                  "primary_disk_size" : {
                    "description" : "Size of the primary Disk",
                    "example" : 50,
                    "type" : "number"
                  },
                  "private_net" : {
                    "description" : "Private networks information",
                    "items" : {
                      "properties" : {
                        "alias_ips" : {
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        },
                        "ip" : {
                          "example" : "10.0.0.2",
                          "type" : "string"
                        },
                        "mac_address" : {
                          "example" : "86:00:ff:2a:7d:e1",
                          "type" : "string"
                        },
                        "network" : {
                          "example" : 4711,
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Server",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Server from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "rebuild" : {
                        "description" : "If true, prevents the Server from being rebuilt",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete", "rebuild" ],
                    "type" : "object"
                  },
                  "public_net" : {
                    "description" : "Public network information. The Server's IPv4 address can be found in `public_net->ipv4->ip`",
                    "properties" : {
                      "firewalls" : {
                        "description" : "Firewalls applied to the public network interface of this Server",
                        "items" : {
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Resource",
                              "example" : 42,
                              "type" : "integer"
                            },
                            "status" : {
                              "description" : "Status of the Firewall on the Server",
                              "enum" : [ "applied", "pending" ],
                              "example" : "applied",
                              "type" : "string"
                            }
                          },
                          "title" : "ServerPublicNetFirewall",
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "floating_ips" : {
                        "description" : "IDs of Floating IPs assigned to this Server",
                        "example" : [ 478 ],
                        "items" : {
                          "type" : "integer"
                        },
                        "type" : "array"
                      },
                      "ipv4" : {
                        "description" : "IP address (v4) and its reverse DNS entry of this Server",
                        "nullable" : true,
                        "properties" : {
                          "blocked" : {
                            "description" : "If the IP is blocked by our anti abuse dept",
                            "example" : false,
                            "type" : "boolean"
                          },
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv4 addresses of this Server",
                            "example" : "server01.example.com",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "ip" : {
                            "description" : "IP address (v4) of this Server",
                            "example" : "1.2.3.4",
                            "type" : "string"
                          }
                        },
                        "required" : [ "ip", "blocked", "dns_ptr" ],
                        "type" : "object"
                      },
                      "ipv6" : {
                        "description" : "IPv6 network assigned to this Server and its reverse DNS entry",
                        "nullable" : true,
                        "properties" : {
                          "blocked" : {
                            "description" : "If the IP is blocked by our anti abuse dept",
                            "example" : false,
                            "type" : "boolean"
                          },
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entries for the IPv6 addresses of this Server, `null` by default",
                            "items" : {
                              "properties" : {
                                "dns_ptr" : {
                                  "description" : "DNS pointer for the specific IP address",
                                  "example" : "server.example.com",
                                  "type" : "string"
                                },
                                "ip" : {
                                  "description" : "Single IPv6 address of this Server for which the reverse DNS entry has been set up",
                                  "example" : "2001:db8::1",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "ip", "dns_ptr" ],
                              "type" : "object"
                            },
                            "nullable" : true,
                            "type" : "array"
                          },
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "ip" : {
                            "description" : "IP address (v6) of this Server",
                            "example" : "2001:db8::/64",
                            "type" : "string"
                          }
                        },
                        "required" : [ "ip", "blocked", "dns_ptr" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "ipv4", "ipv6", "floating_ips" ],
                    "type" : "object"
                  },
                  "rescue_enabled" : {
                    "description" : "True if rescue mode is enabled. Server will then boot into rescue system on next reboot",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "server_type" : {
                    "description" : "Type of Server - determines how much ram, disk and cpu a Server has",
                    "properties" : {
                      "cores" : {
                        "description" : "Number of cpu cores a Server of this type will have",
                        "example" : 1,
                        "type" : "number"
                      },
                      "cpu_type" : {
                        "description" : "Type of cpu",
                        "enum" : [ "shared", "dedicated" ],
                        "type" : "string"
                      },
                      "deprecated" : {
                        "description" : "True if Server type is deprecated",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "description" : {
                        "description" : "Description of the Server type",
                        "example" : "CX11",
                        "type" : "string"
                      },
                      "disk" : {
                        "description" : "Disk size a Server of this type will have in GB",
                        "example" : 25,
                        "type" : "number"
                      },
                      "id" : {
                        "description" : "ID of the Server type",
                        "example" : 1,
                        "type" : "integer"
                      },
                      "memory" : {
                        "description" : "Memory a Server of this type will have in GB",
                        "example" : 1,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Server type",
                        "example" : "cx11",
                        "type" : "string"
                      },
                      "prices" : {
                        "description" : "Prices in different Locations",
                        "items" : {
                          "properties" : {
                            "location" : {
                              "description" : "Name of the Location the price is for",
                              "example" : "fsn1",
                              "type" : "string"
                            },
                            "price_hourly" : {
                              "description" : "Hourly costs for a Server type in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            },
                            "price_monthly" : {
                              "description" : "Monthly costs for a Server type in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            }
                          },
                          "required" : [ "location", "price_hourly", "price_monthly" ],
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "storage_type" : {
                        "description" : "Type of Server boot drive. Local has higher speed. Network has better availability.",
                        "enum" : [ "local", "network" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "cores", "memory", "disk", "deprecated", "prices", "storage_type", "cpu_type" ],
                    "type" : "object"
                  },
                  "status" : {
                    "description" : "Status of the Server",
                    "enum" : [ "running", "initializing", "starting", "stopping", "off", "deleting", "migrating", "rebuilding", "unknown" ],
                    "type" : "string"
                  },
                  "volumes" : {
                    "description" : "IDs of Volumes assigned to this Server",
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "status", "created", "public_net", "private_net", "server_type", "datacenter", "image", "iso", "rescue_enabled", "locked", "backup_window", "outgoing_traffic", "ingoing_traffic", "included_traffic", "protection", "labels", "primary_disk_size" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "87ae1782-1c55-48ee-92df-c6a07b8761cc",
    "name" : "Get a Server",
    "request" : {
      "urlPath" : "/servers/8079214099275355464",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"server\" : {\n    \"image\" : {\n      \"image_size\" : 2.3,\n      \"created\" : \"2016-01-30T23:55:00+00:00\",\n      \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n      \"os_version\" : \"20.04\",\n      \"os_flavor\" : \"ubuntu\",\n      \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\" : 10,\n      \"protection\" : {\n        \"delete\" : false\n      },\n      \"type\" : \"snapshot\",\n      \"rapid_deploy\" : false,\n      \"labels\" : { },\n      \"deleted\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/logorado/128.jpg\",\n      \"bound_to\" : 1077014121041690041,\n      \"name\" : \"ubuntu-20.04\",\n      \"id\" : 42,\n      \"created_from\" : {\n        \"name\" : \"Server\",\n        \"id\" : 1\n      },\n      \"status\" : \"unavailable\"\n    },\n    \"iso\" : {\n      \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n      \"name\" : \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"description\" : \"FreeBSD 11.0 x64\",\n      \"id\" : 42,\n      \"type\" : \"public\"\n    },\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"private_net\" : [ {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"g6rlgwnni5iqfyxgjbjd77s2jw8ojks05rk06lod349warqcy7pzkzshk7dx853effyxu9ne9o92yxc1owx9dxtlsg2075wembdquae\", \"jdxvulumt9t6r193d5zwn2o2841wx\", \"ly2dw6decmtilwpiqkdqcvhg93ceayr9605pxsi65zwpwn8xk3yharnfc4oy26rpb2nl5fy6c53hneqwm07jcba79slq44xkas4duddn6fxysbwybzgmdfi81utxaqh7ip7495nzu3i703ngvguf3g\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"lbs3c0988jh6tvwtsdr9jb3l908ehdds270rm64g3p6ivzff4up5oq30rio5v8pu2jhgf79e209dmzevkdjlqefx3bdhbxe80b1zryt4cckjsm781bhlxafklfmr575q5zy52c2aq8tki487jyndhq3rcmw9lnpz8ath88q1si1hhm4j\", \"4a3gn8thzzkxp1y1xdbkzcv3byhvc6qbfm1i2raobh1z7luyuvk84636zm7avhypaf66ep5dkq968shlzchzgkqxg8vtm1fvv2phj993sheye5pnpmw\", \"2vajmllt9vovm1sut9lxa5suq9cms06jpi0hx09tmkb6zvbt2oyh3v6j1tvh8royheam1mapoist74kiieuszmnwo72pwthe9rz6jbsvla9boe71k6n13mjof1nnt02x3s6sirnxvbk9d47imh32f3daaaxyihrtqp41vxetshdj01ipv6h3m0i4pnd7ncsdi2n\", \"fk0yharerfq15yqq1cjydfav3lz4q50kx64g2xur3ma9kie3ahbz17b8yt7281mcsmlexvvl6fgqf01cu9qq\", \"pm10wpudklhpspd5bypazta8aymfz51z6fpzipzuk5r84ft44s9z4pi0la9drd5vv2brvaefkq179udnp6munjrpnveoas6mmcrrcz96711t2zxnjcf8\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"5f0o59q91t6d78179wl14\", \"rptsssxjjhn\", \"hwiucquxon9oi2t7ibm3ud9h4e8x0xzeh5l3h2t75wwm0s0p1h4prw7j4nfrqehjicne0nbvdh8ksnohbubzlc6lhd4iq4732hgoad8b8xz2gc0b9kvhz0r5ijf\", \"s9c7nh327xkpatx1emv8wwdliepetmdyha7l07z1y4vvkzmz1g2o6njgn\", \"n5k21i4mtqcjz8va7405rywv94u32zznnvnonr9cilidckqt70gk8nrllp8xd7ijzu2pti3g5uxqye786cncf5fl9nxe7cmiuqd8rrg4fddq1v3nd23s9qm\", \"1jw3wn8unaenxzr3eqbennjqgw9mkft8lhwxb1crnlsdojoze34pjl53fjsn5moflukllf2tz6jawh21f49r1peetr4wmzf9kg56ots3b50l6n2wlgb1dnj4tzjr90iuygja\", \"kf6x8b221xi1lwcy2gzmq2ifrklwjdcycmsveypuh\" ],\n      \"network\" : 4711\n    } ],\n    \"volumes\" : [ 2522173697443978656, 2339856290473439943 ],\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"rebuild\" : false,\n      \"delete\" : false\n    },\n    \"load_balancers\" : [ 2988565954575600722, 8495297593122188425, 4701303222331383733, 7083313611532602413, 2482742067484953799, 8589397423757612485, 5070766994736115413 ],\n    \"backup_window\" : \"22-02\",\n    \"ingoing_traffic\" : 123456,\n    \"included_traffic\" : 654321,\n    \"public_net\" : {\n      \"ipv4\" : {\n        \"blocked\" : false,\n        \"ip\" : \"1.2.3.4\",\n        \"id\" : 42,\n        \"dns_ptr\" : \"server01.example.com\"\n      },\n      \"ipv6\" : {\n        \"blocked\" : false,\n        \"ip\" : \"2001:db8::/64\",\n        \"id\" : 42,\n        \"dns_ptr\" : [ {\n          \"ip\" : \"2001:db8::1\",\n          \"dns_ptr\" : \"server.example.com\"\n        }, {\n          \"ip\" : \"2001:db8::1\",\n          \"dns_ptr\" : \"server.example.com\"\n        }, {\n          \"ip\" : \"2001:db8::1\",\n          \"dns_ptr\" : \"server.example.com\"\n        } ]\n      },\n      \"firewalls\" : [ {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      } ],\n      \"floating_ips\" : [ 478 ]\n    },\n    \"labels\" : { },\n    \"outgoing_traffic\" : 123456,\n    \"rescue_enabled\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"locked\" : false,\n    \"placement_group\" : {\n      \"servers\" : [ 42 ],\n      \"created\" : \"2016-01-30T23:55:00+00:00\",\n      \"name\" : \"my-resource\",\n      \"id\" : 42,\n      \"type\" : \"spread\",\n      \"labels\" : { }\n    },\n    \"primary_disk_size\" : 50,\n    \"server_type\" : {\n      \"storage_type\" : \"local\",\n      \"disk\" : 25,\n      \"cores\" : 1,\n      \"memory\" : 1,\n      \"cpu_type\" : \"shared\",\n      \"deprecated\" : false,\n      \"name\" : \"cx11\",\n      \"description\" : \"CX11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"status\" : \"off\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87ae1782-1c55-48ee-92df-c6a07b8761cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.75544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "server" : {
                "properties" : {
                  "backup_window" : {
                    "description" : "Time window (UTC) in which the backup will run, or null if the backups are not enabled",
                    "example" : "22-02",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "datacenter" : {
                    "description" : "Datacenter this Resource is located at",
                    "properties" : {
                      "description" : {
                        "description" : "Description of the Datacenter",
                        "example" : "Falkenstein DC Park 8",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "location" : {
                        "properties" : {
                          "city" : {
                            "description" : "City the Location is closest to",
                            "example" : "Falkenstein",
                            "type" : "string"
                          },
                          "country" : {
                            "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                            "example" : "DE",
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "Description of the Location",
                            "example" : "Falkenstein DC Park 1",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Location",
                            "example" : 1,
                            "type" : "number"
                          },
                          "latitude" : {
                            "description" : "Latitude of the city closest to the Location",
                            "example" : 50.47612,
                            "type" : "number"
                          },
                          "longitude" : {
                            "description" : "Longitude of the city closest to the Location",
                            "example" : 12.370071,
                            "type" : "number"
                          },
                          "name" : {
                            "description" : "Unique identifier of the Location",
                            "example" : "fsn1",
                            "type" : "string"
                          },
                          "network_zone" : {
                            "description" : "Name of network zone this Location resides in",
                            "example" : "eu-central",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Datacenter",
                        "example" : "fsn1-dc8",
                        "type" : "string"
                      },
                      "server_types" : {
                        "description" : "The Server types the Datacenter can handle",
                        "properties" : {
                          "available" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "available_for_migration" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "supported" : {
                            "description" : "IDs of Server types that are supported in the Datacenter",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          }
                        },
                        "required" : [ "supported", "available", "available_for_migration" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "id", "name", "description", "location", "server_types" ],
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "image" : {
                    "nullable" : true,
                    "properties" : {
                      "bound_to" : {
                        "description" : "ID of Server the Image is bound to. Only set for Images of type `backup`.",
                        "nullable" : true,
                        "type" : "integer"
                      },
                      "created" : {
                        "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                        "example" : "2016-01-30T23:55:00+00:00",
                        "type" : "string"
                      },
                      "created_from" : {
                        "description" : "Information about the Server the Image was created from",
                        "nullable" : true,
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Server the Image was created from",
                            "example" : 1,
                            "type" : "integer"
                          },
                          "name" : {
                            "description" : "Server name at the time the Image was created",
                            "example" : "Server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name" ],
                        "type" : "object"
                      },
                      "deleted" : {
                        "description" : "Point in time where the Image was deleted (in ISO-8601 format)",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "deprecated" : {
                        "description" : "Point in time when the Image is considered to be deprecated (in ISO-8601 format)",
                        "example" : "2018-02-28T00:00:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Image",
                        "example" : "Ubuntu 20.04 Standard 64 bit",
                        "type" : "string"
                      },
                      "disk_size" : {
                        "description" : "Size of the disk contained in the Image in GB",
                        "example" : 10,
                        "type" : "number"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "image_size" : {
                        "description" : "Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.",
                        "example" : 2.3,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "labels" : {
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "User-defined labels (key-value pairs)",
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Image. This value is only set for system Images.",
                        "example" : "ubuntu-20.04",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "os_flavor" : {
                        "description" : "Flavor of operating system contained in the Image",
                        "enum" : [ "ubuntu", "centos", "debian", "fedora", "unknown" ],
                        "example" : "ubuntu",
                        "type" : "string"
                      },
                      "os_version" : {
                        "description" : "Operating system version",
                        "example" : "20.04",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "protection" : {
                        "description" : "Protection configuration for the Resource",
                        "properties" : {
                          "delete" : {
                            "description" : "If true, prevents the Resource from being deleted",
                            "example" : false,
                            "type" : "boolean"
                          }
                        },
                        "required" : [ "delete" ],
                        "type" : "object"
                      },
                      "rapid_deploy" : {
                        "description" : "Indicates that rapid deploy of the Image is available",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "status" : {
                        "description" : "Whether the Image can be used or if it's still being created or unavailable",
                        "enum" : [ "available", "creating", "unavailable" ],
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "Type of the Image",
                        "enum" : [ "system", "app", "snapshot", "backup", "temporary" ],
                        "example" : "snapshot",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type", "status", "name", "description", "image_size", "disk_size", "created", "created_from", "bound_to", "os_flavor", "os_version", "protection", "deprecated", "deleted", "labels" ],
                    "type" : "object"
                  },
                  "included_traffic" : {
                    "description" : "Free Traffic for the current billing period in bytes",
                    "example" : 654321,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "ingoing_traffic" : {
                    "description" : "Inbound Traffic for the current billing period in bytes",
                    "example" : 123456,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "iso" : {
                    "description" : "ISO Image that is attached to this Server. Null if no ISO is attached.",
                    "nullable" : true,
                    "properties" : {
                      "deprecated" : {
                        "description" : "ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.",
                        "example" : "2018-02-28T00:00:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the ISO",
                        "example" : "FreeBSD 11.0 x64",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "name" : {
                        "description" : "Unique identifier of the ISO. Only set for public ISOs",
                        "example" : "FreeBSD-11.0-RELEASE-amd64-dvd1",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "Type of the ISO",
                        "enum" : [ "public", "private" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "type", "deprecated" ],
                    "type" : "object"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancers" : {
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "locked" : {
                    "description" : "True if Server has been locked and is not available to user",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "name" : {
                    "description" : "Name of the Server (must be unique per Project and a valid hostname as per RFC 1123)",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "outgoing_traffic" : {
                    "description" : "Outbound Traffic for the current billing period in bytes",
                    "example" : 123456,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "placement_group" : {
                    "nullable" : true,
                    "properties" : {
                      "created" : {
                        "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                        "example" : "2016-01-30T23:55:00+00:00",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "labels" : {
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "User-defined labels (key-value pairs)",
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Name of the Resource. Must be unique per Project.",
                        "example" : "my-resource",
                        "type" : "string"
                      },
                      "servers" : {
                        "description" : "Array of IDs of Servers that are part of this Placement Group",
                        "example" : [ 42 ],
                        "items" : {
                          "type" : "integer"
                        },
                        "type" : "array"
                      },
                      "type" : {
                        "description" : "Type of the Placement Group",
                        "enum" : [ "spread" ],
                        "example" : "spread",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "labels", "type", "created", "servers" ],
                    "title" : "PlacementGroupNullable",
                    "type" : "object"
                  },
                  "primary_disk_size" : {
                    "description" : "Size of the primary Disk",
                    "example" : 50,
                    "type" : "number"
                  },
                  "private_net" : {
                    "description" : "Private networks information",
                    "items" : {
                      "properties" : {
                        "alias_ips" : {
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        },
                        "ip" : {
                          "example" : "10.0.0.2",
                          "type" : "string"
                        },
                        "mac_address" : {
                          "example" : "86:00:ff:2a:7d:e1",
                          "type" : "string"
                        },
                        "network" : {
                          "example" : 4711,
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Server",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Server from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "rebuild" : {
                        "description" : "If true, prevents the Server from being rebuilt",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete", "rebuild" ],
                    "type" : "object"
                  },
                  "public_net" : {
                    "description" : "Public network information. The Server's IPv4 address can be found in `public_net->ipv4->ip`",
                    "properties" : {
                      "firewalls" : {
                        "description" : "Firewalls applied to the public network interface of this Server",
                        "items" : {
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Resource",
                              "example" : 42,
                              "type" : "integer"
                            },
                            "status" : {
                              "description" : "Status of the Firewall on the Server",
                              "enum" : [ "applied", "pending" ],
                              "example" : "applied",
                              "type" : "string"
                            }
                          },
                          "title" : "ServerPublicNetFirewall",
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "floating_ips" : {
                        "description" : "IDs of Floating IPs assigned to this Server",
                        "example" : [ 478 ],
                        "items" : {
                          "type" : "integer"
                        },
                        "type" : "array"
                      },
                      "ipv4" : {
                        "description" : "IP address (v4) and its reverse DNS entry of this Server",
                        "nullable" : true,
                        "properties" : {
                          "blocked" : {
                            "description" : "If the IP is blocked by our anti abuse dept",
                            "example" : false,
                            "type" : "boolean"
                          },
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv4 addresses of this Server",
                            "example" : "server01.example.com",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "ip" : {
                            "description" : "IP address (v4) of this Server",
                            "example" : "1.2.3.4",
                            "type" : "string"
                          }
                        },
                        "required" : [ "ip", "blocked", "dns_ptr" ],
                        "type" : "object"
                      },
                      "ipv6" : {
                        "description" : "IPv6 network assigned to this Server and its reverse DNS entry",
                        "nullable" : true,
                        "properties" : {
                          "blocked" : {
                            "description" : "If the IP is blocked by our anti abuse dept",
                            "example" : false,
                            "type" : "boolean"
                          },
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entries for the IPv6 addresses of this Server, `null` by default",
                            "items" : {
                              "properties" : {
                                "dns_ptr" : {
                                  "description" : "DNS pointer for the specific IP address",
                                  "example" : "server.example.com",
                                  "type" : "string"
                                },
                                "ip" : {
                                  "description" : "Single IPv6 address of this Server for which the reverse DNS entry has been set up",
                                  "example" : "2001:db8::1",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "ip", "dns_ptr" ],
                              "type" : "object"
                            },
                            "nullable" : true,
                            "type" : "array"
                          },
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "ip" : {
                            "description" : "IP address (v6) of this Server",
                            "example" : "2001:db8::/64",
                            "type" : "string"
                          }
                        },
                        "required" : [ "ip", "blocked", "dns_ptr" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "ipv4", "ipv6", "floating_ips" ],
                    "type" : "object"
                  },
                  "rescue_enabled" : {
                    "description" : "True if rescue mode is enabled. Server will then boot into rescue system on next reboot",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "server_type" : {
                    "description" : "Type of Server - determines how much ram, disk and cpu a Server has",
                    "properties" : {
                      "cores" : {
                        "description" : "Number of cpu cores a Server of this type will have",
                        "example" : 1,
                        "type" : "number"
                      },
                      "cpu_type" : {
                        "description" : "Type of cpu",
                        "enum" : [ "shared", "dedicated" ],
                        "type" : "string"
                      },
                      "deprecated" : {
                        "description" : "True if Server type is deprecated",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "description" : {
                        "description" : "Description of the Server type",
                        "example" : "CX11",
                        "type" : "string"
                      },
                      "disk" : {
                        "description" : "Disk size a Server of this type will have in GB",
                        "example" : 25,
                        "type" : "number"
                      },
                      "id" : {
                        "description" : "ID of the Server type",
                        "example" : 1,
                        "type" : "integer"
                      },
                      "memory" : {
                        "description" : "Memory a Server of this type will have in GB",
                        "example" : 1,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Server type",
                        "example" : "cx11",
                        "type" : "string"
                      },
                      "prices" : {
                        "description" : "Prices in different Locations",
                        "items" : {
                          "properties" : {
                            "location" : {
                              "description" : "Name of the Location the price is for",
                              "example" : "fsn1",
                              "type" : "string"
                            },
                            "price_hourly" : {
                              "description" : "Hourly costs for a Server type in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            },
                            "price_monthly" : {
                              "description" : "Monthly costs for a Server type in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            }
                          },
                          "required" : [ "location", "price_hourly", "price_monthly" ],
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "storage_type" : {
                        "description" : "Type of Server boot drive. Local has higher speed. Network has better availability.",
                        "enum" : [ "local", "network" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "cores", "memory", "disk", "deprecated", "prices", "storage_type", "cpu_type" ],
                    "type" : "object"
                  },
                  "status" : {
                    "description" : "Status of the Server",
                    "enum" : [ "running", "initializing", "starting", "stopping", "off", "deleting", "migrating", "rebuilding", "unknown" ],
                    "type" : "string"
                  },
                  "volumes" : {
                    "description" : "IDs of Volumes assigned to this Server",
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "status", "created", "public_net", "private_net", "server_type", "datacenter", "image", "iso", "rescue_enabled", "locked", "backup_window", "outgoing_traffic", "ingoing_traffic", "included_traffic", "protection", "labels", "primary_disk_size" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "d183eb8e-8e03-4a9c-9118-8eeb5cf8eab3",
    "name" : "Delete a Server",
    "request" : {
      "urlPath" : "/servers/7165962027432971789",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"finished\" : \"2016-01-30T23:55:00+00:00\",\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"id\" : 42,\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"command\" : \"start_server\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d183eb8e-8e03-4a9c-9118-8eeb5cf8eab3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.754038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "aa536c59-f9e2-4bc8-9dfb-92d86381d144",
    "name" : "Create a Server",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"create_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 1,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  },\n  \"next_actions\" : [ {\n    \"command\" : \"start_server\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  } ],\n  \"root_password\" : \"YItygq1v3GYjjMomLaKc\",\n  \"server\" : {\n    \"backup_window\" : \"22-02\",\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"datacenter\" : {\n      \"description\" : \"Falkenstein 1 DC 8\",\n      \"id\" : 1,\n      \"location\" : {\n        \"city\" : \"Falkenstein\",\n        \"country\" : \"DE\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"latitude\" : 50.47612,\n        \"longitude\" : 12.370071,\n        \"name\" : \"fsn1\",\n        \"network_zone\" : \"eu-central\"\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"server_types\" : {\n        \"available\" : [ 1, 2, 3 ],\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      }\n    },\n    \"id\" : 42,\n    \"image\" : {\n      \"created\" : \"2016-01-30T23:50:00+00:00\",\n      \"created_from\" : {\n        \"id\" : 1,\n        \"name\" : \"Server\"\n      },\n      \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n      \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\" : 10,\n      \"id\" : 4711,\n      \"image_size\" : 2.3,\n      \"labels\" : {\n        \"env\" : \"dev\"\n      },\n      \"name\" : \"ubuntu-20.04\",\n      \"os_flavor\" : \"ubuntu\",\n      \"os_version\" : \"20.04\",\n      \"protection\" : {\n        \"delete\" : false\n      },\n      \"rapid_deploy\" : false,\n      \"status\" : \"available\",\n      \"type\" : \"snapshot\"\n    },\n    \"included_traffic\" : 654321,\n    \"ingoing_traffic\" : 123456,\n    \"iso\" : {\n      \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n      \"description\" : \"FreeBSD 11.0 x64\",\n      \"id\" : 4711,\n      \"name\" : \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"type\" : \"public\"\n    },\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"load_balancers\" : [ ],\n    \"locked\" : false,\n    \"name\" : \"my-server\",\n    \"outgoing_traffic\" : 123456,\n    \"primary_disk_size\" : 50,\n    \"private_net\" : [ {\n      \"alias_ips\" : [ ],\n      \"ip\" : \"10.0.0.2\",\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"network\" : 4711\n    } ],\n    \"protection\" : {\n      \"delete\" : false,\n      \"rebuild\" : false\n    },\n    \"public_net\" : {\n      \"firewalls\" : [ {\n        \"id\" : 38,\n        \"status\" : \"applied\"\n      } ],\n      \"floating_ips\" : [ 478 ],\n      \"ipv4\" : {\n        \"blocked\" : false,\n        \"dns_ptr\" : \"server01.example.com\",\n        \"ip\" : \"1.2.3.4\"\n      },\n      \"ipv6\" : {\n        \"blocked\" : false,\n        \"dns_ptr\" : [ {\n          \"dns_ptr\" : \"server.example.com\",\n          \"ip\" : \"2001:db8::1\"\n        } ],\n        \"ip\" : \"2001:db8::/64\"\n      }\n    },\n    \"rescue_enabled\" : false,\n    \"server_type\" : {\n      \"cores\" : 1,\n      \"cpu_type\" : \"shared\",\n      \"deprecated\" : true,\n      \"description\" : \"CX11\",\n      \"disk\" : 25,\n      \"id\" : 1,\n      \"memory\" : 1,\n      \"name\" : \"cx11\",\n      \"prices\" : [ {\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ],\n      \"storage_type\" : \"local\"\n    },\n    \"status\" : \"initializing\",\n    \"volumes\" : [ ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa536c59-f9e2-4bc8-9dfb-92d86381d144",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.753767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "next_actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "root_password" : {
                "description" : "Root password when no SSH keys have been specified",
                "example" : "YItygq1v3GYjjMomLaKc",
                "nullable" : true,
                "type" : "string"
              },
              "server" : {
                "properties" : {
                  "backup_window" : {
                    "description" : "Time window (UTC) in which the backup will run, or null if the backups are not enabled",
                    "example" : "22-02",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "datacenter" : {
                    "description" : "Datacenter this Resource is located at",
                    "properties" : {
                      "description" : {
                        "description" : "Description of the Datacenter",
                        "example" : "Falkenstein DC Park 8",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "location" : {
                        "properties" : {
                          "city" : {
                            "description" : "City the Location is closest to",
                            "example" : "Falkenstein",
                            "type" : "string"
                          },
                          "country" : {
                            "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                            "example" : "DE",
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "Description of the Location",
                            "example" : "Falkenstein DC Park 1",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Location",
                            "example" : 1,
                            "type" : "number"
                          },
                          "latitude" : {
                            "description" : "Latitude of the city closest to the Location",
                            "example" : 50.47612,
                            "type" : "number"
                          },
                          "longitude" : {
                            "description" : "Longitude of the city closest to the Location",
                            "example" : 12.370071,
                            "type" : "number"
                          },
                          "name" : {
                            "description" : "Unique identifier of the Location",
                            "example" : "fsn1",
                            "type" : "string"
                          },
                          "network_zone" : {
                            "description" : "Name of network zone this Location resides in",
                            "example" : "eu-central",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Datacenter",
                        "example" : "fsn1-dc8",
                        "type" : "string"
                      },
                      "server_types" : {
                        "description" : "The Server types the Datacenter can handle",
                        "properties" : {
                          "available" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "available_for_migration" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "supported" : {
                            "description" : "IDs of Server types that are supported in the Datacenter",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          }
                        },
                        "required" : [ "supported", "available", "available_for_migration" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "id", "name", "description", "location", "server_types" ],
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "image" : {
                    "nullable" : true,
                    "properties" : {
                      "bound_to" : {
                        "description" : "ID of Server the Image is bound to. Only set for Images of type `backup`.",
                        "nullable" : true,
                        "type" : "integer"
                      },
                      "created" : {
                        "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                        "example" : "2016-01-30T23:55:00+00:00",
                        "type" : "string"
                      },
                      "created_from" : {
                        "description" : "Information about the Server the Image was created from",
                        "nullable" : true,
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Server the Image was created from",
                            "example" : 1,
                            "type" : "integer"
                          },
                          "name" : {
                            "description" : "Server name at the time the Image was created",
                            "example" : "Server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name" ],
                        "type" : "object"
                      },
                      "deleted" : {
                        "description" : "Point in time where the Image was deleted (in ISO-8601 format)",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "deprecated" : {
                        "description" : "Point in time when the Image is considered to be deprecated (in ISO-8601 format)",
                        "example" : "2018-02-28T00:00:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Image",
                        "example" : "Ubuntu 20.04 Standard 64 bit",
                        "type" : "string"
                      },
                      "disk_size" : {
                        "description" : "Size of the disk contained in the Image in GB",
                        "example" : 10,
                        "type" : "number"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "image_size" : {
                        "description" : "Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.",
                        "example" : 2.3,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "labels" : {
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "User-defined labels (key-value pairs)",
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Image. This value is only set for system Images.",
                        "example" : "ubuntu-20.04",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "os_flavor" : {
                        "description" : "Flavor of operating system contained in the Image",
                        "enum" : [ "ubuntu", "centos", "debian", "fedora", "unknown" ],
                        "example" : "ubuntu",
                        "type" : "string"
                      },
                      "os_version" : {
                        "description" : "Operating system version",
                        "example" : "20.04",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "protection" : {
                        "description" : "Protection configuration for the Resource",
                        "properties" : {
                          "delete" : {
                            "description" : "If true, prevents the Resource from being deleted",
                            "example" : false,
                            "type" : "boolean"
                          }
                        },
                        "required" : [ "delete" ],
                        "type" : "object"
                      },
                      "rapid_deploy" : {
                        "description" : "Indicates that rapid deploy of the Image is available",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "status" : {
                        "description" : "Whether the Image can be used or if it's still being created or unavailable",
                        "enum" : [ "available", "creating", "unavailable" ],
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "Type of the Image",
                        "enum" : [ "system", "app", "snapshot", "backup", "temporary" ],
                        "example" : "snapshot",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "type", "status", "name", "description", "image_size", "disk_size", "created", "created_from", "bound_to", "os_flavor", "os_version", "protection", "deprecated", "deleted", "labels" ],
                    "type" : "object"
                  },
                  "included_traffic" : {
                    "description" : "Free Traffic for the current billing period in bytes",
                    "example" : 654321,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "ingoing_traffic" : {
                    "description" : "Inbound Traffic for the current billing period in bytes",
                    "example" : 123456,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "iso" : {
                    "description" : "ISO Image that is attached to this Server. Null if no ISO is attached.",
                    "nullable" : true,
                    "properties" : {
                      "deprecated" : {
                        "description" : "ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.",
                        "example" : "2018-02-28T00:00:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the ISO",
                        "example" : "FreeBSD 11.0 x64",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "name" : {
                        "description" : "Unique identifier of the ISO. Only set for public ISOs",
                        "example" : "FreeBSD-11.0-RELEASE-amd64-dvd1",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "type" : {
                        "description" : "Type of the ISO",
                        "enum" : [ "public", "private" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "type", "deprecated" ],
                    "type" : "object"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancers" : {
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "locked" : {
                    "description" : "True if Server has been locked and is not available to user",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "name" : {
                    "description" : "Name of the Server (must be unique per Project and a valid hostname as per RFC 1123)",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "outgoing_traffic" : {
                    "description" : "Outbound Traffic for the current billing period in bytes",
                    "example" : 123456,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "placement_group" : {
                    "nullable" : true,
                    "properties" : {
                      "created" : {
                        "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                        "example" : "2016-01-30T23:55:00+00:00",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "labels" : {
                        "additionalProperties" : {
                          "type" : "string"
                        },
                        "description" : "User-defined labels (key-value pairs)",
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Name of the Resource. Must be unique per Project.",
                        "example" : "my-resource",
                        "type" : "string"
                      },
                      "servers" : {
                        "description" : "Array of IDs of Servers that are part of this Placement Group",
                        "example" : [ 42 ],
                        "items" : {
                          "type" : "integer"
                        },
                        "type" : "array"
                      },
                      "type" : {
                        "description" : "Type of the Placement Group",
                        "enum" : [ "spread" ],
                        "example" : "spread",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "labels", "type", "created", "servers" ],
                    "title" : "PlacementGroupNullable",
                    "type" : "object"
                  },
                  "primary_disk_size" : {
                    "description" : "Size of the primary Disk",
                    "example" : 50,
                    "type" : "number"
                  },
                  "private_net" : {
                    "description" : "Private networks information",
                    "items" : {
                      "properties" : {
                        "alias_ips" : {
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        },
                        "ip" : {
                          "example" : "10.0.0.2",
                          "type" : "string"
                        },
                        "mac_address" : {
                          "example" : "86:00:ff:2a:7d:e1",
                          "type" : "string"
                        },
                        "network" : {
                          "example" : 4711,
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Server",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Server from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "rebuild" : {
                        "description" : "If true, prevents the Server from being rebuilt",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete", "rebuild" ],
                    "type" : "object"
                  },
                  "public_net" : {
                    "description" : "Public network information. The Server's IPv4 address can be found in `public_net->ipv4->ip`",
                    "properties" : {
                      "firewalls" : {
                        "description" : "Firewalls applied to the public network interface of this Server",
                        "items" : {
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Resource",
                              "example" : 42,
                              "type" : "integer"
                            },
                            "status" : {
                              "description" : "Status of the Firewall on the Server",
                              "enum" : [ "applied", "pending" ],
                              "example" : "applied",
                              "type" : "string"
                            }
                          },
                          "title" : "ServerPublicNetFirewall",
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "floating_ips" : {
                        "description" : "IDs of Floating IPs assigned to this Server",
                        "example" : [ 478 ],
                        "items" : {
                          "type" : "integer"
                        },
                        "type" : "array"
                      },
                      "ipv4" : {
                        "description" : "IP address (v4) and its reverse DNS entry of this Server",
                        "nullable" : true,
                        "properties" : {
                          "blocked" : {
                            "description" : "If the IP is blocked by our anti abuse dept",
                            "example" : false,
                            "type" : "boolean"
                          },
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv4 addresses of this Server",
                            "example" : "server01.example.com",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "ip" : {
                            "description" : "IP address (v4) of this Server",
                            "example" : "1.2.3.4",
                            "type" : "string"
                          }
                        },
                        "required" : [ "ip", "blocked", "dns_ptr" ],
                        "type" : "object"
                      },
                      "ipv6" : {
                        "description" : "IPv6 network assigned to this Server and its reverse DNS entry",
                        "nullable" : true,
                        "properties" : {
                          "blocked" : {
                            "description" : "If the IP is blocked by our anti abuse dept",
                            "example" : false,
                            "type" : "boolean"
                          },
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entries for the IPv6 addresses of this Server, `null` by default",
                            "items" : {
                              "properties" : {
                                "dns_ptr" : {
                                  "description" : "DNS pointer for the specific IP address",
                                  "example" : "server.example.com",
                                  "type" : "string"
                                },
                                "ip" : {
                                  "description" : "Single IPv6 address of this Server for which the reverse DNS entry has been set up",
                                  "example" : "2001:db8::1",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "ip", "dns_ptr" ],
                              "type" : "object"
                            },
                            "nullable" : true,
                            "type" : "array"
                          },
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "ip" : {
                            "description" : "IP address (v6) of this Server",
                            "example" : "2001:db8::/64",
                            "type" : "string"
                          }
                        },
                        "required" : [ "ip", "blocked", "dns_ptr" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "ipv4", "ipv6", "floating_ips" ],
                    "type" : "object"
                  },
                  "rescue_enabled" : {
                    "description" : "True if rescue mode is enabled. Server will then boot into rescue system on next reboot",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "server_type" : {
                    "description" : "Type of Server - determines how much ram, disk and cpu a Server has",
                    "properties" : {
                      "cores" : {
                        "description" : "Number of cpu cores a Server of this type will have",
                        "example" : 1,
                        "type" : "number"
                      },
                      "cpu_type" : {
                        "description" : "Type of cpu",
                        "enum" : [ "shared", "dedicated" ],
                        "type" : "string"
                      },
                      "deprecated" : {
                        "description" : "True if Server type is deprecated",
                        "example" : false,
                        "type" : "boolean"
                      },
                      "description" : {
                        "description" : "Description of the Server type",
                        "example" : "CX11",
                        "type" : "string"
                      },
                      "disk" : {
                        "description" : "Disk size a Server of this type will have in GB",
                        "example" : 25,
                        "type" : "number"
                      },
                      "id" : {
                        "description" : "ID of the Server type",
                        "example" : 1,
                        "type" : "integer"
                      },
                      "memory" : {
                        "description" : "Memory a Server of this type will have in GB",
                        "example" : 1,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Server type",
                        "example" : "cx11",
                        "type" : "string"
                      },
                      "prices" : {
                        "description" : "Prices in different Locations",
                        "items" : {
                          "properties" : {
                            "location" : {
                              "description" : "Name of the Location the price is for",
                              "example" : "fsn1",
                              "type" : "string"
                            },
                            "price_hourly" : {
                              "description" : "Hourly costs for a Server type in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            },
                            "price_monthly" : {
                              "description" : "Monthly costs for a Server type in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            }
                          },
                          "required" : [ "location", "price_hourly", "price_monthly" ],
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "storage_type" : {
                        "description" : "Type of Server boot drive. Local has higher speed. Network has better availability.",
                        "enum" : [ "local", "network" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "cores", "memory", "disk", "deprecated", "prices", "storage_type", "cpu_type" ],
                    "type" : "object"
                  },
                  "status" : {
                    "description" : "Status of the Server",
                    "enum" : [ "running", "initializing", "starting", "stopping", "off", "deleting", "migrating", "rebuilding", "unknown" ],
                    "type" : "string"
                  },
                  "volumes" : {
                    "description" : "IDs of Volumes assigned to this Server",
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "status", "created", "public_net", "private_net", "server_type", "datacenter", "image", "iso", "rescue_enabled", "locked", "backup_window", "outgoing_traffic", "ingoing_traffic", "included_traffic", "protection", "labels", "primary_disk_size" ],
                "type" : "object"
              }
            },
            "required" : [ "server", "action", "next_actions", "root_password" ],
            "title" : "CreateServerResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "647958dc-2726-4d5a-94d6-1dca991201f4",
    "name" : "Get all Servers",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"servers\" : [ {\n    \"image\" : {\n      \"image_size\" : 2.3,\n      \"created\" : \"2016-01-30T23:55:00+00:00\",\n      \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n      \"os_version\" : \"20.04\",\n      \"os_flavor\" : \"ubuntu\",\n      \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n      \"disk_size\" : 10,\n      \"protection\" : {\n        \"delete\" : false\n      },\n      \"type\" : \"snapshot\",\n      \"rapid_deploy\" : false,\n      \"labels\" : { },\n      \"deleted\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/vikashpathak18/128.jpg\",\n      \"bound_to\" : 5032207705370538311,\n      \"name\" : \"ubuntu-20.04\",\n      \"id\" : 42,\n      \"created_from\" : {\n        \"name\" : \"Server\",\n        \"id\" : 1\n      },\n      \"status\" : \"unavailable\"\n    },\n    \"iso\" : {\n      \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n      \"name\" : \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n      \"description\" : \"FreeBSD 11.0 x64\",\n      \"id\" : 42,\n      \"type\" : \"public\"\n    },\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"private_net\" : [ {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"s7xyvrgu\", \"mwmqkldme9bop0w7d4ws3hf1to8uagjhq5iyy47m8h1y2ggk3e2d0v0ai5vs9f5891oxrq9t83xjqziqw79j9lh0t62p40ji06szptckwxxo6614f5rifnrsb03kt6xafx2krfkul54d18mjj2661qx2wfht35aw6dqsj7k47\", \"3rzh5aob3wpj96sj7nx\", \"0g7j7anmzvvseiy5eqaeo7jh3c210gelhvywxamo9o80d9aernmi9nvpa50ia24nfwcwds8ybzgz0lvuzwbaaq1r7cglerlt3bcqoaqt7y8iuol4wy5nr0owogid7von94gq\", \"jtqxp7vqpyt3osgrj4myw97v4s7kc1kdlfar4eq8k7y13n3wkwi3udptu9x86sd5maixtxv8i26sizwjxkh3ckywpj732qb2h7greoavz7z8s48ue7jfzc8z1tadwzigylcgg7brnrgsm6n4gxc66v5aabdhjvunhd\", \"40o6qkuabmuxbae5svw2os8y2duyohzvxepx2qnlsxkplcjvgocjirhl2avn5o5b8wrdhkm1g\", \"i3vu5gvg92t33m9g18qyxhvfs71ecor5hwjlchg8ikot2nqm6l53xitzfloleoiqonuhacwo0v3y8m8ydcpjcw515ld\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"0nsmbzia8rrub57jjdeoynpesu7fhlhhmk3cwt3p8ktvei89t6701fh7syv9bv5ocv4w10mq82srg6h1x5sm22s8fhstdtrjz9ar8gz4jrzzzzc3bcdgasgdpt1auvd21m6az1yc2n0407ik33\", \"dyq067m3x20xaw675y2a7hs48z7vn11sbx16r889y1cmdkyna52lx95uyinmi0j5fdgusml4\", \"9bh5zpckh0qa7ajp8bdxn7zcf8nygiwqjse125rdqvcf6nbwducud7vv3rr237p5j1tr82y\", \"ecdkwzevmyp6cqqazlrwf2tboa2kipx1pn0974fdl76tkz09u70ygk1194bzkuq8yu9ebk4djlu9qdi8tyu3h2vv5m0hbdeso8hnxyzrvn6ijdkeog5594i622o63wjts1vwlpq4htegvsaz9fcxx31qzspuclbkw7w8zf0v69xfe7s0yjwfh1i24\", \"cv4wuwc3oalf66qidju8wzz\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"zcf1zuupt6gr4wjbzk2hd7pwn4124j2fig3jhdov6htcmdq2tpzkqor69qq1wagmf001ip695uq1hczredfdtwfifb7ub29ats8v4mpcf01ctldyb\", \"dcmq34ejbgkqiirettnm1g9yyt2\", \"5aewmarsut9jsmaelio5the8osbv6wy7yd1dl8yud7nltqtzdz6l6zw1l928foakex9dhjkmpiodwocx9bep2pspk5hpah261lmeasy084i0ig0ar5xxy5trlkds8qvb2zlldls5k33fi3da16041p0xw0wnnz\", \"7ky39xhjvptptyr177himhyuc16axe4k2k1cfjzn4i6mjrq0an2q5who43w2w0sxz9qp0vtuoc207vvvlyzh\", \"5imttxfl7yznndvs5s7ljv\", \"k7c3qwcxnd4sd46e2bba0sx6oq6ybeyyr0qs9me4ao41jafha6khe6c3jyd9n1unhas2phzc8rase24d2nwo3bcj292hz281pbii4cm5m6s5rv8hq2p1zqcferitq77fecwyxo0oibfk61kfmv9l0blyzwuglfwh2t\", \"22e4m6w6fw43ufb298txargc6jvsjo6vtj8ua96j8gb4sb4\", \"qcdsm4qqa6rnwj1z70gw3l6cyqn5q43hhvr2u78cqhql3ybiysd2j45z\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"xhs\", \"7sjwisuzzk37o09yhcr4900wtxwud3mzznmg2w65556pqeiams\", \"jn6dijiz546yzq9k2h3ulojjvyotbk2ilvwdxrmsa3v9m0cl5vv5babpzzdf3ktliorfqcjzbm800b2ytw5h5m38eer0vsk6m58lx\", \"rvit4aqnm2rlqqfs106q6pdxcfx5zkrvh99v6aza7y7dx0yligx4yzd2z57ltpf3ycw57ceqy54q4hhlkjyopadq6g98qbefz54obgcy5lnsqkcu26xeqn6koza7btiz1mwjt9ln2zz4k6nd5fz7f1\", \"pli43y00a4wb9k3n4q3ym1ycubhyugjsdu52owudwzluqmrwz6r77m85yiv8qnm34u4a6xmpe708qpilkbibko3z0in7o7mvcd77b1gq\", \"59ezmq706zo034g9i9c50hhp56eflijegqd9cshrifbuqm75swegrir4x321yl3224g3e58835chtw0qvtzedk5do3l7huvjw9k9cct544f6e142wkv2pyu6he9kdcznqvp4vizo70ww162ekpip3pu5l0ocfcl939ng9fbuqtrz8evepd4uvwzowxc8cii1c\", \"rbsc5z7otoqhdjyp1z3dv46blf6j2s8im46d5vw04aubx35iplxl\", \"v38bqhzqhlwc1gwj8xbekk4z0j780usjkd5ya9c25zwf54rh4npn6evxvtiq6hjgef1ikxyz72g5ifjasfzc6zxcsjbsuou5wqfcpv6n2frl6ruuhlbkie7murqr4iq8q1oo2dndy46jadz9p6387c8wi3qinthgls4p1gg9gzdka5inj5zb59zu\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"dkgyn6jfepuiuahhtbixmmxibh8vctxi98tp2u7cxwun5dolat0uyzuirjvjex414mhffcj5my5kfug9h729u0bspijylqz7syyj75w9jbk9ozmpqa49mppsn2\", \"hlskut0kc7kzuoyh9nhqiaaisi0sw3269d38be1b87gcddzxbmishhfgrkid6tnlzs7kibfgrwe7zk3i19yw9rzfr4w75npx29juzvvmw0a8sikczqck49fs\", \"7bdhh49pr5z9df99kgp9sqn93qgb6u3eydc04m85nx5r7hm38pvdc67xm1nzwv908o17nekee7e6feqm4l6l77wsfwk22lbqgmy7ngtk6l43cq4sqwtvmffy9s8ug0qlv82oh443882ak50xsrusfvz7x\", \"6crpy46lvklp2yst2u950u1fnv40g6ni2dnpz0jonnqf3tnge3yrkc8v06fuo2oc84fxcachfnhi077pgeh9mq9yb7y2bboi222goxa4qecxdzd2ipbi1g9xg6jdosouu4im3p55xi54nncd9y6rx1bgbjo6feg2ghqstkr3h56chxtrp03y31jsb\", \"p0gxdbmpmvg3gy5vmgl1gkh28z0jxga8kpi0gz5y9oa52xougc1mrclz98ioprkteo8l5nzyx0h2ug35o8qkflqlw53efj4elydnk2rfd0\", \"jcal21mq7lhqvtagsvod8ek303gclm0nyno9jc6h6venb\", \"a00pazh8f8pmde3jm8z4b84k6qabty24omryd1wrhh828k\", \"iw5w14sxk70nkkthry7bldo2mw3j9l006l0gsxdhpuq48cxsynzanrelf7qzcs95lz1h1loto4gznch0osqq06s3w\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"uq5dsknyytkennqiwdql3vooo59jr5pdxdvrwzai3vx5n7va1fmgnw3ilz74hbgj036c2yxr0udqlgezeaatz3ffg76hdniaiw7f6hswegkwai9v9q59wfevapd9dj8w7cul3c8rsfxvjgad2ksk\", \"nk2bgypp5078gix9a4cgrrg6l1chexssxqxaxou2ru0xbazpdyoehfvj3xabff9y2lik6slortcheugy8ujksw7ffcdupmbz9goflaue8p2s5tk14o6uxlm1p5set6rcaaptofl1zt4ab8glk8x5mjaeoetv48rljczhhavlbzo4mmybhqnzpxratx6msztd5br\", \"fr1n4za8i63x1eyipl2p6j4fld97rxhjkxjczo4ao4a4dnu69pygc8to4e410kg2cf6m03qiipfurrjtebp76hddlugj9qgfaq97r0gl7bm2kxdoj9biuyi6c3orjdcq0ryljl5itv0yganrm5\" ],\n      \"network\" : 4711\n    }, {\n      \"mac_address\" : \"86:00:ff:2a:7d:e1\",\n      \"ip\" : \"10.0.0.2\",\n      \"alias_ips\" : [ \"etybjv6seah2\" ],\n      \"network\" : 4711\n    } ],\n    \"volumes\" : [ 2649689965170643758, 8378162089206269060, 5903956963343220315, 9111836972353405981, 8635339027532011164 ],\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"rebuild\" : false,\n      \"delete\" : false\n    },\n    \"load_balancers\" : [ 8263013696771374958, 5448129354658804664, 6811488099076206877, 936918560991315655, 5587155704598430149, 1295120882837365698 ],\n    \"backup_window\" : \"22-02\",\n    \"ingoing_traffic\" : 123456,\n    \"included_traffic\" : 654321,\n    \"public_net\" : {\n      \"ipv4\" : {\n        \"blocked\" : false,\n        \"ip\" : \"1.2.3.4\",\n        \"id\" : 42,\n        \"dns_ptr\" : \"server01.example.com\"\n      },\n      \"ipv6\" : {\n        \"blocked\" : false,\n        \"ip\" : \"2001:db8::/64\",\n        \"id\" : 42,\n        \"dns_ptr\" : [ {\n          \"ip\" : \"2001:db8::1\",\n          \"dns_ptr\" : \"server.example.com\"\n        }, {\n          \"ip\" : \"2001:db8::1\",\n          \"dns_ptr\" : \"server.example.com\"\n        } ]\n      },\n      \"firewalls\" : [ {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      }, {\n        \"id\" : 42,\n        \"status\" : \"applied\"\n      } ],\n      \"floating_ips\" : [ 478 ]\n    },\n    \"labels\" : { },\n    \"outgoing_traffic\" : 123456,\n    \"rescue_enabled\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"locked\" : false,\n    \"placement_group\" : {\n      \"servers\" : [ 42 ],\n      \"created\" : \"2016-01-30T23:55:00+00:00\",\n      \"name\" : \"my-resource\",\n      \"id\" : 42,\n      \"type\" : \"spread\",\n      \"labels\" : { }\n    },\n    \"primary_disk_size\" : 50,\n    \"server_type\" : {\n      \"storage_type\" : \"network\",\n      \"disk\" : 25,\n      \"cores\" : 1,\n      \"memory\" : 1,\n      \"cpu_type\" : \"dedicated\",\n      \"deprecated\" : false,\n      \"name\" : \"cx11\",\n      \"description\" : \"CX11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"status\" : \"stopping\"\n  } ],\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "647958dc-2726-4d5a-94d6-1dca991201f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.752414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              },
              "servers" : {
                "items" : {
                  "properties" : {
                    "backup_window" : {
                      "description" : "Time window (UTC) in which the backup will run, or null if the backups are not enabled",
                      "example" : "22-02",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "datacenter" : {
                      "description" : "Datacenter this Resource is located at",
                      "properties" : {
                        "description" : {
                          "description" : "Description of the Datacenter",
                          "example" : "Falkenstein DC Park 8",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "location" : {
                          "properties" : {
                            "city" : {
                              "description" : "City the Location is closest to",
                              "example" : "Falkenstein",
                              "type" : "string"
                            },
                            "country" : {
                              "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                              "example" : "DE",
                              "type" : "string"
                            },
                            "description" : {
                              "description" : "Description of the Location",
                              "example" : "Falkenstein DC Park 1",
                              "type" : "string"
                            },
                            "id" : {
                              "description" : "ID of the Location",
                              "example" : 1,
                              "type" : "number"
                            },
                            "latitude" : {
                              "description" : "Latitude of the city closest to the Location",
                              "example" : 50.47612,
                              "type" : "number"
                            },
                            "longitude" : {
                              "description" : "Longitude of the city closest to the Location",
                              "example" : 12.370071,
                              "type" : "number"
                            },
                            "name" : {
                              "description" : "Unique identifier of the Location",
                              "example" : "fsn1",
                              "type" : "string"
                            },
                            "network_zone" : {
                              "description" : "Name of network zone this Location resides in",
                              "example" : "eu-central",
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                          "type" : "object"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Datacenter",
                          "example" : "fsn1-dc8",
                          "type" : "string"
                        },
                        "server_types" : {
                          "description" : "The Server types the Datacenter can handle",
                          "properties" : {
                            "available" : {
                              "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                              "example" : [ 1, 2, 3 ],
                              "items" : {
                                "type" : "number"
                              },
                              "type" : "array"
                            },
                            "available_for_migration" : {
                              "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                              "example" : [ 1, 2, 3 ],
                              "items" : {
                                "type" : "number"
                              },
                              "type" : "array"
                            },
                            "supported" : {
                              "description" : "IDs of Server types that are supported in the Datacenter",
                              "example" : [ 1, 2, 3 ],
                              "items" : {
                                "type" : "number"
                              },
                              "type" : "array"
                            }
                          },
                          "required" : [ "supported", "available", "available_for_migration" ],
                          "type" : "object"
                        }
                      },
                      "required" : [ "id", "name", "description", "location", "server_types" ],
                      "type" : "object"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "image" : {
                      "nullable" : true,
                      "properties" : {
                        "bound_to" : {
                          "description" : "ID of Server the Image is bound to. Only set for Images of type `backup`.",
                          "nullable" : true,
                          "type" : "integer"
                        },
                        "created" : {
                          "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                          "example" : "2016-01-30T23:55:00+00:00",
                          "type" : "string"
                        },
                        "created_from" : {
                          "description" : "Information about the Server the Image was created from",
                          "nullable" : true,
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Server the Image was created from",
                              "example" : 1,
                              "type" : "integer"
                            },
                            "name" : {
                              "description" : "Server name at the time the Image was created",
                              "example" : "Server",
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "name" ],
                          "type" : "object"
                        },
                        "deleted" : {
                          "description" : "Point in time where the Image was deleted (in ISO-8601 format)",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "deprecated" : {
                          "description" : "Point in time when the Image is considered to be deprecated (in ISO-8601 format)",
                          "example" : "2018-02-28T00:00:00+00:00",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "Description of the Image",
                          "example" : "Ubuntu 20.04 Standard 64 bit",
                          "type" : "string"
                        },
                        "disk_size" : {
                          "description" : "Size of the disk contained in the Image in GB",
                          "example" : 10,
                          "type" : "number"
                        },
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "image_size" : {
                          "description" : "Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.",
                          "example" : 2.3,
                          "nullable" : true,
                          "type" : "number"
                        },
                        "labels" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "description" : "User-defined labels (key-value pairs)",
                          "type" : "object"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Image. This value is only set for system Images.",
                          "example" : "ubuntu-20.04",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "os_flavor" : {
                          "description" : "Flavor of operating system contained in the Image",
                          "enum" : [ "ubuntu", "centos", "debian", "fedora", "unknown" ],
                          "example" : "ubuntu",
                          "type" : "string"
                        },
                        "os_version" : {
                          "description" : "Operating system version",
                          "example" : "20.04",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "protection" : {
                          "description" : "Protection configuration for the Resource",
                          "properties" : {
                            "delete" : {
                              "description" : "If true, prevents the Resource from being deleted",
                              "example" : false,
                              "type" : "boolean"
                            }
                          },
                          "required" : [ "delete" ],
                          "type" : "object"
                        },
                        "rapid_deploy" : {
                          "description" : "Indicates that rapid deploy of the Image is available",
                          "example" : false,
                          "type" : "boolean"
                        },
                        "status" : {
                          "description" : "Whether the Image can be used or if it's still being created or unavailable",
                          "enum" : [ "available", "creating", "unavailable" ],
                          "type" : "string"
                        },
                        "type" : {
                          "description" : "Type of the Image",
                          "enum" : [ "system", "app", "snapshot", "backup", "temporary" ],
                          "example" : "snapshot",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type", "status", "name", "description", "image_size", "disk_size", "created", "created_from", "bound_to", "os_flavor", "os_version", "protection", "deprecated", "deleted", "labels" ],
                      "type" : "object"
                    },
                    "included_traffic" : {
                      "description" : "Free Traffic for the current billing period in bytes",
                      "example" : 654321,
                      "nullable" : true,
                      "type" : "number"
                    },
                    "ingoing_traffic" : {
                      "description" : "Inbound Traffic for the current billing period in bytes",
                      "example" : 123456,
                      "nullable" : true,
                      "type" : "number"
                    },
                    "iso" : {
                      "description" : "ISO Image that is attached to this Server. Null if no ISO is attached.",
                      "nullable" : true,
                      "properties" : {
                        "deprecated" : {
                          "description" : "ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.",
                          "example" : "2018-02-28T00:00:00+00:00",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "Description of the ISO",
                          "example" : "FreeBSD 11.0 x64",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "name" : {
                          "description" : "Unique identifier of the ISO. Only set for public ISOs",
                          "example" : "FreeBSD-11.0-RELEASE-amd64-dvd1",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "type" : {
                          "description" : "Type of the ISO",
                          "enum" : [ "public", "private" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "name", "description", "type", "deprecated" ],
                      "type" : "object"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "load_balancers" : {
                      "items" : {
                        "type" : "integer"
                      },
                      "type" : "array"
                    },
                    "locked" : {
                      "description" : "True if Server has been locked and is not available to user",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "name" : {
                      "description" : "Name of the Server (must be unique per Project and a valid hostname as per RFC 1123)",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "outgoing_traffic" : {
                      "description" : "Outbound Traffic for the current billing period in bytes",
                      "example" : 123456,
                      "nullable" : true,
                      "type" : "number"
                    },
                    "placement_group" : {
                      "nullable" : true,
                      "properties" : {
                        "created" : {
                          "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                          "example" : "2016-01-30T23:55:00+00:00",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "labels" : {
                          "additionalProperties" : {
                            "type" : "string"
                          },
                          "description" : "User-defined labels (key-value pairs)",
                          "type" : "object"
                        },
                        "name" : {
                          "description" : "Name of the Resource. Must be unique per Project.",
                          "example" : "my-resource",
                          "type" : "string"
                        },
                        "servers" : {
                          "description" : "Array of IDs of Servers that are part of this Placement Group",
                          "example" : [ 42 ],
                          "items" : {
                            "type" : "integer"
                          },
                          "type" : "array"
                        },
                        "type" : {
                          "description" : "Type of the Placement Group",
                          "enum" : [ "spread" ],
                          "example" : "spread",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "name", "labels", "type", "created", "servers" ],
                      "title" : "PlacementGroupNullable",
                      "type" : "object"
                    },
                    "primary_disk_size" : {
                      "description" : "Size of the primary Disk",
                      "example" : 50,
                      "type" : "number"
                    },
                    "private_net" : {
                      "description" : "Private networks information",
                      "items" : {
                        "properties" : {
                          "alias_ips" : {
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          },
                          "ip" : {
                            "example" : "10.0.0.2",
                            "type" : "string"
                          },
                          "mac_address" : {
                            "example" : "86:00:ff:2a:7d:e1",
                            "type" : "string"
                          },
                          "network" : {
                            "example" : 4711,
                            "type" : "integer"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "protection" : {
                      "description" : "Protection configuration for the Server",
                      "properties" : {
                        "delete" : {
                          "description" : "If true, prevents the Server from being deleted",
                          "example" : false,
                          "type" : "boolean"
                        },
                        "rebuild" : {
                          "description" : "If true, prevents the Server from being rebuilt",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "delete", "rebuild" ],
                      "type" : "object"
                    },
                    "public_net" : {
                      "description" : "Public network information. The Server's IPv4 address can be found in `public_net->ipv4->ip`",
                      "properties" : {
                        "firewalls" : {
                          "description" : "Firewalls applied to the public network interface of this Server",
                          "items" : {
                            "properties" : {
                              "id" : {
                                "description" : "ID of the Resource",
                                "example" : 42,
                                "type" : "integer"
                              },
                              "status" : {
                                "description" : "Status of the Firewall on the Server",
                                "enum" : [ "applied", "pending" ],
                                "example" : "applied",
                                "type" : "string"
                              }
                            },
                            "title" : "ServerPublicNetFirewall",
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "floating_ips" : {
                          "description" : "IDs of Floating IPs assigned to this Server",
                          "example" : [ 478 ],
                          "items" : {
                            "type" : "integer"
                          },
                          "type" : "array"
                        },
                        "ipv4" : {
                          "description" : "IP address (v4) and its reverse DNS entry of this Server",
                          "nullable" : true,
                          "properties" : {
                            "blocked" : {
                              "description" : "If the IP is blocked by our anti abuse dept",
                              "example" : false,
                              "type" : "boolean"
                            },
                            "dns_ptr" : {
                              "description" : "Reverse DNS PTR entry for the IPv4 addresses of this Server",
                              "example" : "server01.example.com",
                              "type" : "string"
                            },
                            "id" : {
                              "description" : "ID of the Resource",
                              "example" : 42,
                              "type" : "integer"
                            },
                            "ip" : {
                              "description" : "IP address (v4) of this Server",
                              "example" : "1.2.3.4",
                              "type" : "string"
                            }
                          },
                          "required" : [ "ip", "blocked", "dns_ptr" ],
                          "type" : "object"
                        },
                        "ipv6" : {
                          "description" : "IPv6 network assigned to this Server and its reverse DNS entry",
                          "nullable" : true,
                          "properties" : {
                            "blocked" : {
                              "description" : "If the IP is blocked by our anti abuse dept",
                              "example" : false,
                              "type" : "boolean"
                            },
                            "dns_ptr" : {
                              "description" : "Reverse DNS PTR entries for the IPv6 addresses of this Server, `null` by default",
                              "items" : {
                                "properties" : {
                                  "dns_ptr" : {
                                    "description" : "DNS pointer for the specific IP address",
                                    "example" : "server.example.com",
                                    "type" : "string"
                                  },
                                  "ip" : {
                                    "description" : "Single IPv6 address of this Server for which the reverse DNS entry has been set up",
                                    "example" : "2001:db8::1",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "ip", "dns_ptr" ],
                                "type" : "object"
                              },
                              "nullable" : true,
                              "type" : "array"
                            },
                            "id" : {
                              "description" : "ID of the Resource",
                              "example" : 42,
                              "type" : "integer"
                            },
                            "ip" : {
                              "description" : "IP address (v6) of this Server",
                              "example" : "2001:db8::/64",
                              "type" : "string"
                            }
                          },
                          "required" : [ "ip", "blocked", "dns_ptr" ],
                          "type" : "object"
                        }
                      },
                      "required" : [ "ipv4", "ipv6", "floating_ips" ],
                      "type" : "object"
                    },
                    "rescue_enabled" : {
                      "description" : "True if rescue mode is enabled. Server will then boot into rescue system on next reboot",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "server_type" : {
                      "description" : "Type of Server - determines how much ram, disk and cpu a Server has",
                      "properties" : {
                        "cores" : {
                          "description" : "Number of cpu cores a Server of this type will have",
                          "example" : 1,
                          "type" : "number"
                        },
                        "cpu_type" : {
                          "description" : "Type of cpu",
                          "enum" : [ "shared", "dedicated" ],
                          "type" : "string"
                        },
                        "deprecated" : {
                          "description" : "True if Server type is deprecated",
                          "example" : false,
                          "type" : "boolean"
                        },
                        "description" : {
                          "description" : "Description of the Server type",
                          "example" : "CX11",
                          "type" : "string"
                        },
                        "disk" : {
                          "description" : "Disk size a Server of this type will have in GB",
                          "example" : 25,
                          "type" : "number"
                        },
                        "id" : {
                          "description" : "ID of the Server type",
                          "example" : 1,
                          "type" : "integer"
                        },
                        "memory" : {
                          "description" : "Memory a Server of this type will have in GB",
                          "example" : 1,
                          "type" : "number"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Server type",
                          "example" : "cx11",
                          "type" : "string"
                        },
                        "prices" : {
                          "description" : "Prices in different Locations",
                          "items" : {
                            "properties" : {
                              "location" : {
                                "description" : "Name of the Location the price is for",
                                "example" : "fsn1",
                                "type" : "string"
                              },
                              "price_hourly" : {
                                "description" : "Hourly costs for a Server type in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              },
                              "price_monthly" : {
                                "description" : "Monthly costs for a Server type in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              }
                            },
                            "required" : [ "location", "price_hourly", "price_monthly" ],
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "storage_type" : {
                          "description" : "Type of Server boot drive. Local has higher speed. Network has better availability.",
                          "enum" : [ "local", "network" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "name", "description", "cores", "memory", "disk", "deprecated", "prices", "storage_type", "cpu_type" ],
                      "type" : "object"
                    },
                    "status" : {
                      "description" : "Status of the Server",
                      "enum" : [ "running", "initializing", "starting", "stopping", "off", "deleting", "migrating", "rebuilding", "unknown" ],
                      "type" : "string"
                    },
                    "volumes" : {
                      "description" : "IDs of Volumes assigned to this Server",
                      "items" : {
                        "type" : "integer"
                      },
                      "type" : "array"
                    }
                  },
                  "required" : [ "id", "name", "status", "created", "public_net", "private_net", "server_type", "datacenter", "image", "iso", "rescue_enabled", "locked", "backup_window", "outgoing_traffic", "ingoing_traffic", "included_traffic", "protection", "labels", "primary_disk_size" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "servers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "77d423d9-d6b5-47fd-ae32-35f942c17d86",
    "name" : "Get a Server Type",
    "request" : {
      "urlPath" : "/server_types/3372062296820256229",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"server_type\" : {\n    \"storage_type\" : \"network\",\n    \"disk\" : 24,\n    \"cores\" : 1,\n    \"memory\" : 1,\n    \"cpu_type\" : \"dedicated\",\n    \"deprecated\" : false,\n    \"name\" : \"cx11\",\n    \"description\" : \"CX11\",\n    \"id\" : 1,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77d423d9-d6b5-47fd-ae32-35f942c17d86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.750677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "server_type" : {
                "properties" : {
                  "cores" : {
                    "description" : "Number of cpu cores a Server of this type will have",
                    "example" : 1,
                    "type" : "number"
                  },
                  "cpu_type" : {
                    "description" : "Type of cpu",
                    "enum" : [ "shared", "dedicated" ],
                    "type" : "string"
                  },
                  "deprecated" : {
                    "description" : "True if Server type is deprecated",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "description" : {
                    "description" : "Description of the Server type",
                    "example" : "CX11",
                    "type" : "string"
                  },
                  "disk" : {
                    "description" : "Disk size a Server of this type will have in GB",
                    "example" : 24,
                    "type" : "number"
                  },
                  "id" : {
                    "description" : "ID of the Server type",
                    "example" : 1,
                    "type" : "number"
                  },
                  "memory" : {
                    "description" : "Memory a Server of this type will have in GB",
                    "example" : 1,
                    "type" : "number"
                  },
                  "name" : {
                    "description" : "Unique identifier of the Server type",
                    "example" : "cx11",
                    "type" : "string"
                  },
                  "prices" : {
                    "description" : "Prices in different Locations",
                    "items" : {
                      "properties" : {
                        "location" : {
                          "description" : "Name of the Location the price is for",
                          "example" : "fsn1",
                          "type" : "string"
                        },
                        "price_hourly" : {
                          "description" : "Hourly costs for a Server type in this Location",
                          "properties" : {
                            "gross" : {
                              "description" : "Price with VAT added",
                              "example" : "1.1900000000000000",
                              "type" : "string"
                            },
                            "net" : {
                              "description" : "Price without VAT",
                              "example" : "1.0000000000",
                              "type" : "string"
                            }
                          },
                          "required" : [ "net", "gross" ],
                          "type" : "object"
                        },
                        "price_monthly" : {
                          "description" : "Monthly costs for a Server type in this Location",
                          "properties" : {
                            "gross" : {
                              "description" : "Price with VAT added",
                              "example" : "1.1900000000000000",
                              "type" : "string"
                            },
                            "net" : {
                              "description" : "Price without VAT",
                              "example" : "1.0000000000",
                              "type" : "string"
                            }
                          },
                          "required" : [ "net", "gross" ],
                          "type" : "object"
                        }
                      },
                      "required" : [ "location", "price_hourly", "price_monthly" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "storage_type" : {
                    "description" : "Type of Server boot drive. Local has higher speed. Network has better availability.",
                    "enum" : [ "local", "network" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "description", "cores", "memory", "disk", "deprecated", "prices", "storage_type", "cpu_type" ],
                "type" : "object"
              }
            },
            "required" : [ "server_type" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "f2e83faf-ce0a-48ad-bb98-ec14de36e04c",
    "name" : "Get all Server Types",
    "request" : {
      "urlPath" : "/server_types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"server_types\" : [ {\n    \"storage_type\" : \"local\",\n    \"disk\" : 24,\n    \"cores\" : 1,\n    \"memory\" : 1,\n    \"cpu_type\" : \"dedicated\",\n    \"deprecated\" : false,\n    \"name\" : \"cx11\",\n    \"description\" : \"CX11\",\n    \"id\" : 1,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"storage_type\" : \"local\",\n    \"disk\" : 24,\n    \"cores\" : 1,\n    \"memory\" : 1,\n    \"cpu_type\" : \"dedicated\",\n    \"deprecated\" : false,\n    \"name\" : \"cx11\",\n    \"description\" : \"CX11\",\n    \"id\" : 1,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"storage_type\" : \"local\",\n    \"disk\" : 24,\n    \"cores\" : 1,\n    \"memory\" : 1,\n    \"cpu_type\" : \"shared\",\n    \"deprecated\" : false,\n    \"name\" : \"cx11\",\n    \"description\" : \"CX11\",\n    \"id\" : 1,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"storage_type\" : \"network\",\n    \"disk\" : 24,\n    \"cores\" : 1,\n    \"memory\" : 1,\n    \"cpu_type\" : \"shared\",\n    \"deprecated\" : false,\n    \"name\" : \"cx11\",\n    \"description\" : \"CX11\",\n    \"id\" : 1,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"storage_type\" : \"local\",\n    \"disk\" : 24,\n    \"cores\" : 1,\n    \"memory\" : 1,\n    \"cpu_type\" : \"dedicated\",\n    \"deprecated\" : false,\n    \"name\" : \"cx11\",\n    \"description\" : \"CX11\",\n    \"id\" : 1,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2e83faf-ce0a-48ad-bb98-ec14de36e04c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.750451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "server_types" : {
                "items" : {
                  "properties" : {
                    "cores" : {
                      "description" : "Number of cpu cores a Server of this type will have",
                      "example" : 1,
                      "type" : "number"
                    },
                    "cpu_type" : {
                      "description" : "Type of cpu",
                      "enum" : [ "shared", "dedicated" ],
                      "type" : "string"
                    },
                    "deprecated" : {
                      "description" : "True if Server type is deprecated",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "description" : {
                      "description" : "Description of the Server type",
                      "example" : "CX11",
                      "type" : "string"
                    },
                    "disk" : {
                      "description" : "Disk size a Server of this type will have in GB",
                      "example" : 24,
                      "type" : "number"
                    },
                    "id" : {
                      "description" : "ID of the Server type",
                      "example" : 1,
                      "type" : "number"
                    },
                    "memory" : {
                      "description" : "Memory a Server of this type will have in GB",
                      "example" : 1,
                      "type" : "number"
                    },
                    "name" : {
                      "description" : "Unique identifier of the Server type",
                      "example" : "cx11",
                      "type" : "string"
                    },
                    "prices" : {
                      "description" : "Prices in different Locations",
                      "items" : {
                        "properties" : {
                          "location" : {
                            "description" : "Name of the Location the price is for",
                            "example" : "fsn1",
                            "type" : "string"
                          },
                          "price_hourly" : {
                            "description" : "Hourly costs for a Server type in this Location",
                            "properties" : {
                              "gross" : {
                                "description" : "Price with VAT added",
                                "example" : "1.1900000000000000",
                                "type" : "string"
                              },
                              "net" : {
                                "description" : "Price without VAT",
                                "example" : "1.0000000000",
                                "type" : "string"
                              }
                            },
                            "required" : [ "net", "gross" ],
                            "type" : "object"
                          },
                          "price_monthly" : {
                            "description" : "Monthly costs for a Server type in this Location",
                            "properties" : {
                              "gross" : {
                                "description" : "Price with VAT added",
                                "example" : "1.1900000000000000",
                                "type" : "string"
                              },
                              "net" : {
                                "description" : "Price without VAT",
                                "example" : "1.0000000000",
                                "type" : "string"
                              }
                            },
                            "required" : [ "net", "gross" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "location", "price_hourly", "price_monthly" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "storage_type" : {
                      "description" : "Type of Server boot drive. Local has higher speed. Network has better availability.",
                      "enum" : [ "local", "network" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "description", "cores", "memory", "disk", "deprecated", "prices", "storage_type", "cpu_type" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "server_types" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "50ef235b-6f01-4e47-b586-02b8a49004f0",
    "name" : "Unassign a Primary IP from a resource",
    "request" : {
      "urlPath" : "/primary_ips/3841241267183015911/actions/unassign",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"unassign_primary_ip\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"primary_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50ef235b-6f01-4e47-b586-02b8a49004f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.749699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "9e464758-1a79-4ea3-be93-0cb2c14133a6",
    "name" : "Change Primary IP Protection",
    "request" : {
      "urlPath" : "/primary_ips/8670266011988754943/actions/change_protection",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"primary_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e464758-1a79-4ea3-be93-0cb2c14133a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.749582Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "a53a3d96-2a33-4c1d-96a8-9d46e43c6883",
    "name" : "Change reverse DNS entry for a Primary IP",
    "request" : {
      "urlPath" : "/primary_ips/1334342196060512337/actions/change_dns_ptr",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_dns_ptr\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"primary_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a53a3d96-2a33-4c1d-96a8-9d46e43c6883",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.749469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "a80b37aa-2a9a-4877-9a0c-ce0a05c5efac",
    "name" : "Assign a Primary IP to a resource",
    "request" : {
      "urlPath" : "/primary_ips/8737117726162676101/actions/assign",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"assign_primary_ip\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"primary_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a80b37aa-2a9a-4877-9a0c-ce0a05c5efac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.749343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "709f0a2a-21f4-41a7-9bd1-760ddadbcb18",
    "name" : "Update a Primary IP",
    "request" : {
      "urlPath" : "/primary_ips/1986436799964547661",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"primary_ip\" : {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"auto_delete\" : true,\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"ipv6\",\n    \"labels\" : { },\n    \"assignee_type\" : \"server\",\n    \"blocked\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"dns_ptr\" : [ {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"assignee_id\" : 17\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "709f0a2a-21f4-41a7-9bd1-760ddadbcb18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.749209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "primary_ip" : {
                "properties" : {
                  "assignee_id" : {
                    "description" : "ID of the resource the Primary IP is assigned to, null if it is not assigned at all",
                    "example" : 17,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "assignee_type" : {
                    "description" : "Resource type the Primary IP can be assigned to",
                    "enum" : [ "server" ],
                    "type" : "string"
                  },
                  "auto_delete" : {
                    "description" : "Delete this Primary IP when the resource it is assigned to is deleted",
                    "example" : true,
                    "type" : "boolean"
                  },
                  "blocked" : {
                    "description" : "Whether the IP is blocked",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "datacenter" : {
                    "description" : "Datacenter this Primary IP is located at",
                    "properties" : {
                      "description" : {
                        "description" : "Description of the Datacenter",
                        "example" : "Falkenstein DC Park 8",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "location" : {
                        "properties" : {
                          "city" : {
                            "description" : "City the Location is closest to",
                            "example" : "Falkenstein",
                            "type" : "string"
                          },
                          "country" : {
                            "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                            "example" : "DE",
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "Description of the Location",
                            "example" : "Falkenstein DC Park 1",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Location",
                            "example" : 1,
                            "type" : "number"
                          },
                          "latitude" : {
                            "description" : "Latitude of the city closest to the Location",
                            "example" : 50.47612,
                            "type" : "number"
                          },
                          "longitude" : {
                            "description" : "Longitude of the city closest to the Location",
                            "example" : 12.370071,
                            "type" : "number"
                          },
                          "name" : {
                            "description" : "Unique identifier of the Location",
                            "example" : "fsn1",
                            "type" : "string"
                          },
                          "network_zone" : {
                            "description" : "Name of network zone this Location resides in",
                            "example" : "eu-central",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Datacenter",
                        "example" : "fsn1-dc8",
                        "type" : "string"
                      },
                      "server_types" : {
                        "description" : "The Server types the Datacenter can handle",
                        "properties" : {
                          "available" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "available_for_migration" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "supported" : {
                            "description" : "IDs of Server types that are supported in the Datacenter",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          }
                        },
                        "required" : [ "supported", "available", "available_for_migration" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "id", "name", "description", "location", "server_types" ],
                    "type" : "object"
                  },
                  "dns_ptr" : {
                    "description" : "Array of reverse DNS entries",
                    "items" : {
                      "properties" : {
                        "dns_ptr" : {
                          "description" : "DNS pointer for the specific IP address",
                          "example" : "server.example.com",
                          "type" : "string"
                        },
                        "ip" : {
                          "description" : "Single IPv4 or IPv6 address",
                          "example" : "131.232.99.1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "ip", "dns_ptr" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "ip" : {
                    "description" : "IP address",
                    "example" : "131.232.99.1",
                    "type" : "string"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "Type of the Primary IP",
                    "enum" : [ "ipv4", "ipv6" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "labels", "created", "blocked", "datacenter", "ip", "dns_ptr", "protection", "type", "auto_delete", "assignee_type", "assignee_id" ],
                "title" : "PrimaryIP",
                "type" : "object"
              }
            },
            "required" : [ "primary_ip" ],
            "title" : "PrimaryIPResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "08433168-bd40-432f-90b6-6249b21d2157",
    "name" : "Get a Primary IP",
    "request" : {
      "urlPath" : "/primary_ips/810006279708776138",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"primary_ip\" : {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"auto_delete\" : true,\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"ipv4\",\n    \"labels\" : { },\n    \"assignee_type\" : \"server\",\n    \"blocked\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"dns_ptr\" : [ {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"assignee_id\" : 17\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08433168-bd40-432f-90b6-6249b21d2157",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.748809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "primary_ip" : {
                "properties" : {
                  "assignee_id" : {
                    "description" : "ID of the resource the Primary IP is assigned to, null if it is not assigned at all",
                    "example" : 17,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "assignee_type" : {
                    "description" : "Resource type the Primary IP can be assigned to",
                    "enum" : [ "server" ],
                    "type" : "string"
                  },
                  "auto_delete" : {
                    "description" : "Delete this Primary IP when the resource it is assigned to is deleted",
                    "example" : true,
                    "type" : "boolean"
                  },
                  "blocked" : {
                    "description" : "Whether the IP is blocked",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "datacenter" : {
                    "description" : "Datacenter this Primary IP is located at",
                    "properties" : {
                      "description" : {
                        "description" : "Description of the Datacenter",
                        "example" : "Falkenstein DC Park 8",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "location" : {
                        "properties" : {
                          "city" : {
                            "description" : "City the Location is closest to",
                            "example" : "Falkenstein",
                            "type" : "string"
                          },
                          "country" : {
                            "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                            "example" : "DE",
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "Description of the Location",
                            "example" : "Falkenstein DC Park 1",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Location",
                            "example" : 1,
                            "type" : "number"
                          },
                          "latitude" : {
                            "description" : "Latitude of the city closest to the Location",
                            "example" : 50.47612,
                            "type" : "number"
                          },
                          "longitude" : {
                            "description" : "Longitude of the city closest to the Location",
                            "example" : 12.370071,
                            "type" : "number"
                          },
                          "name" : {
                            "description" : "Unique identifier of the Location",
                            "example" : "fsn1",
                            "type" : "string"
                          },
                          "network_zone" : {
                            "description" : "Name of network zone this Location resides in",
                            "example" : "eu-central",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Datacenter",
                        "example" : "fsn1-dc8",
                        "type" : "string"
                      },
                      "server_types" : {
                        "description" : "The Server types the Datacenter can handle",
                        "properties" : {
                          "available" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "available_for_migration" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "supported" : {
                            "description" : "IDs of Server types that are supported in the Datacenter",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          }
                        },
                        "required" : [ "supported", "available", "available_for_migration" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "id", "name", "description", "location", "server_types" ],
                    "type" : "object"
                  },
                  "dns_ptr" : {
                    "description" : "Array of reverse DNS entries",
                    "items" : {
                      "properties" : {
                        "dns_ptr" : {
                          "description" : "DNS pointer for the specific IP address",
                          "example" : "server.example.com",
                          "type" : "string"
                        },
                        "ip" : {
                          "description" : "Single IPv4 or IPv6 address",
                          "example" : "131.232.99.1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "ip", "dns_ptr" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "ip" : {
                    "description" : "IP address",
                    "example" : "131.232.99.1",
                    "type" : "string"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "Type of the Primary IP",
                    "enum" : [ "ipv4", "ipv6" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "labels", "created", "blocked", "datacenter", "ip", "dns_ptr", "protection", "type", "auto_delete", "assignee_type", "assignee_id" ],
                "title" : "PrimaryIP",
                "type" : "object"
              }
            },
            "required" : [ "primary_ip" ],
            "title" : "PrimaryIPResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "c9965d34-750e-4d78-b34f-eaa09f58dc95",
    "name" : "Delete a Primary IP - 204",
    "request" : {
      "urlPath" : "/primary_ips/4548640842256611232",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c9965d34-750e-4d78-b34f-eaa09f58dc95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.748421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "7fffada1-630a-4ffc-b8e0-be675d7b4a96",
    "name" : "Create a Primary IP",
    "request" : {
      "urlPath" : "/primary_ips",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"create_primary_ip\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 17,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  },\n  \"primary_ip\" : {\n    \"assignee_id\" : 17,\n    \"assignee_type\" : \"server\",\n    \"auto_delete\" : true,\n    \"blocked\" : false,\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"datacenter\" : {\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"id\" : 42,\n      \"location\" : {\n        \"city\" : \"Falkenstein\",\n        \"country\" : \"DE\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"latitude\" : 50.47612,\n        \"longitude\" : 12.370071,\n        \"name\" : \"fsn1\",\n        \"network_zone\" : \"eu-central\"\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"server_types\" : {\n        \"available\" : [ 1, 2, 3 ],\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      }\n    },\n    \"dns_ptr\" : [ {\n      \"dns_ptr\" : \"server.example.com\",\n      \"ip\" : \"2001:db8::1\"\n    } ],\n    \"id\" : 42,\n    \"ip\" : \"131.232.99.1\",\n    \"labels\" : {\n      \"labelkey\" : \"value\"\n    },\n    \"name\" : \"my-ip\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"ipv4\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fffada1-630a-4ffc-b8e0-be675d7b4a96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.748372Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "primary_ip" : {
                "properties" : {
                  "assignee_id" : {
                    "description" : "ID of the resource the Primary IP is assigned to, null if it is not assigned at all",
                    "example" : 17,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "assignee_type" : {
                    "description" : "Resource type the Primary IP can be assigned to",
                    "enum" : [ "server" ],
                    "type" : "string"
                  },
                  "auto_delete" : {
                    "description" : "Delete this Primary IP when the resource it is assigned to is deleted",
                    "example" : true,
                    "type" : "boolean"
                  },
                  "blocked" : {
                    "description" : "Whether the IP is blocked",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "datacenter" : {
                    "description" : "Datacenter this Primary IP is located at",
                    "properties" : {
                      "description" : {
                        "description" : "Description of the Datacenter",
                        "example" : "Falkenstein DC Park 8",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Resource",
                        "example" : 42,
                        "type" : "integer"
                      },
                      "location" : {
                        "properties" : {
                          "city" : {
                            "description" : "City the Location is closest to",
                            "example" : "Falkenstein",
                            "type" : "string"
                          },
                          "country" : {
                            "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                            "example" : "DE",
                            "type" : "string"
                          },
                          "description" : {
                            "description" : "Description of the Location",
                            "example" : "Falkenstein DC Park 1",
                            "type" : "string"
                          },
                          "id" : {
                            "description" : "ID of the Location",
                            "example" : 1,
                            "type" : "number"
                          },
                          "latitude" : {
                            "description" : "Latitude of the city closest to the Location",
                            "example" : 50.47612,
                            "type" : "number"
                          },
                          "longitude" : {
                            "description" : "Longitude of the city closest to the Location",
                            "example" : 12.370071,
                            "type" : "number"
                          },
                          "name" : {
                            "description" : "Unique identifier of the Location",
                            "example" : "fsn1",
                            "type" : "string"
                          },
                          "network_zone" : {
                            "description" : "Name of network zone this Location resides in",
                            "example" : "eu-central",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                        "type" : "object"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Datacenter",
                        "example" : "fsn1-dc8",
                        "type" : "string"
                      },
                      "server_types" : {
                        "description" : "The Server types the Datacenter can handle",
                        "properties" : {
                          "available" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "available_for_migration" : {
                            "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          },
                          "supported" : {
                            "description" : "IDs of Server types that are supported in the Datacenter",
                            "example" : [ 1, 2, 3 ],
                            "items" : {
                              "type" : "number"
                            },
                            "type" : "array"
                          }
                        },
                        "required" : [ "supported", "available", "available_for_migration" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "id", "name", "description", "location", "server_types" ],
                    "type" : "object"
                  },
                  "dns_ptr" : {
                    "description" : "Array of reverse DNS entries",
                    "items" : {
                      "properties" : {
                        "dns_ptr" : {
                          "description" : "DNS pointer for the specific IP address",
                          "example" : "server.example.com",
                          "type" : "string"
                        },
                        "ip" : {
                          "description" : "Single IPv4 or IPv6 address",
                          "example" : "131.232.99.1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "ip", "dns_ptr" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "ip" : {
                    "description" : "IP address",
                    "example" : "131.232.99.1",
                    "type" : "string"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "Type of the Primary IP",
                    "enum" : [ "ipv4", "ipv6" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "labels", "created", "blocked", "datacenter", "ip", "dns_ptr", "protection", "type", "auto_delete", "assignee_type", "assignee_id" ],
                "title" : "PrimaryIP",
                "type" : "object"
              }
            },
            "required" : [ "primary_ip" ],
            "title" : "CreatePrimaryIPResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "f6f07651-8967-494f-a544-3f7ed6309144",
    "name" : "Get all Primary IPs",
    "request" : {
      "urlPath" : "/primary_ips",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"primary_ips\" : [ {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"auto_delete\" : true,\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"ipv6\",\n    \"labels\" : { },\n    \"assignee_type\" : \"server\",\n    \"blocked\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"dns_ptr\" : [ {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"assignee_id\" : 17\n  }, {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"auto_delete\" : true,\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"ipv4\",\n    \"labels\" : { },\n    \"assignee_type\" : \"server\",\n    \"blocked\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"dns_ptr\" : [ {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"assignee_id\" : 17\n  }, {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"auto_delete\" : true,\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"ipv4\",\n    \"labels\" : { },\n    \"assignee_type\" : \"server\",\n    \"blocked\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"dns_ptr\" : [ {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"assignee_id\" : 17\n  }, {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"auto_delete\" : true,\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"ipv4\",\n    \"labels\" : { },\n    \"assignee_type\" : \"server\",\n    \"blocked\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"dns_ptr\" : [ {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"assignee_id\" : 17\n  }, {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"auto_delete\" : true,\n    \"datacenter\" : {\n      \"server_types\" : {\n        \"available_for_migration\" : [ 1, 2, 3 ],\n        \"available\" : [ 1, 2, 3 ],\n        \"supported\" : [ 1, 2, 3 ]\n      },\n      \"name\" : \"fsn1-dc8\",\n      \"description\" : \"Falkenstein DC Park 8\",\n      \"location\" : {\n        \"country\" : \"DE\",\n        \"network_zone\" : \"eu-central\",\n        \"city\" : \"Falkenstein\",\n        \"latitude\" : 50.47612,\n        \"name\" : \"fsn1\",\n        \"description\" : \"Falkenstein DC Park 1\",\n        \"id\" : 1,\n        \"longitude\" : 12.370071\n      },\n      \"id\" : 42\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"ipv4\",\n    \"labels\" : { },\n    \"assignee_type\" : \"server\",\n    \"blocked\" : false,\n    \"name\" : \"my-resource\",\n    \"id\" : 42,\n    \"dns_ptr\" : [ {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"131.232.99.1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"assignee_id\" : 17\n  } ],\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6f07651-8967-494f-a544-3f7ed6309144",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.747969Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              },
              "primary_ips" : {
                "items" : {
                  "properties" : {
                    "assignee_id" : {
                      "description" : "ID of the resource the Primary IP is assigned to, null if it is not assigned at all",
                      "example" : 17,
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "assignee_type" : {
                      "description" : "Resource type the Primary IP can be assigned to",
                      "enum" : [ "server" ],
                      "type" : "string"
                    },
                    "auto_delete" : {
                      "description" : "Delete this Primary IP when the resource it is assigned to is deleted",
                      "example" : true,
                      "type" : "boolean"
                    },
                    "blocked" : {
                      "description" : "Whether the IP is blocked",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "datacenter" : {
                      "description" : "Datacenter this Primary IP is located at",
                      "properties" : {
                        "description" : {
                          "description" : "Description of the Datacenter",
                          "example" : "Falkenstein DC Park 8",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "location" : {
                          "properties" : {
                            "city" : {
                              "description" : "City the Location is closest to",
                              "example" : "Falkenstein",
                              "type" : "string"
                            },
                            "country" : {
                              "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                              "example" : "DE",
                              "type" : "string"
                            },
                            "description" : {
                              "description" : "Description of the Location",
                              "example" : "Falkenstein DC Park 1",
                              "type" : "string"
                            },
                            "id" : {
                              "description" : "ID of the Location",
                              "example" : 1,
                              "type" : "number"
                            },
                            "latitude" : {
                              "description" : "Latitude of the city closest to the Location",
                              "example" : 50.47612,
                              "type" : "number"
                            },
                            "longitude" : {
                              "description" : "Longitude of the city closest to the Location",
                              "example" : 12.370071,
                              "type" : "number"
                            },
                            "name" : {
                              "description" : "Unique identifier of the Location",
                              "example" : "fsn1",
                              "type" : "string"
                            },
                            "network_zone" : {
                              "description" : "Name of network zone this Location resides in",
                              "example" : "eu-central",
                              "type" : "string"
                            }
                          },
                          "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                          "type" : "object"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Datacenter",
                          "example" : "fsn1-dc8",
                          "type" : "string"
                        },
                        "server_types" : {
                          "description" : "The Server types the Datacenter can handle",
                          "properties" : {
                            "available" : {
                              "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                              "example" : [ 1, 2, 3 ],
                              "items" : {
                                "type" : "number"
                              },
                              "type" : "array"
                            },
                            "available_for_migration" : {
                              "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                              "example" : [ 1, 2, 3 ],
                              "items" : {
                                "type" : "number"
                              },
                              "type" : "array"
                            },
                            "supported" : {
                              "description" : "IDs of Server types that are supported in the Datacenter",
                              "example" : [ 1, 2, 3 ],
                              "items" : {
                                "type" : "number"
                              },
                              "type" : "array"
                            }
                          },
                          "required" : [ "supported", "available", "available_for_migration" ],
                          "type" : "object"
                        }
                      },
                      "required" : [ "id", "name", "description", "location", "server_types" ],
                      "type" : "object"
                    },
                    "dns_ptr" : {
                      "description" : "Array of reverse DNS entries",
                      "items" : {
                        "properties" : {
                          "dns_ptr" : {
                            "description" : "DNS pointer for the specific IP address",
                            "example" : "server.example.com",
                            "type" : "string"
                          },
                          "ip" : {
                            "description" : "Single IPv4 or IPv6 address",
                            "example" : "131.232.99.1",
                            "type" : "string"
                          }
                        },
                        "required" : [ "ip", "dns_ptr" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "ip" : {
                      "description" : "IP address",
                      "example" : "131.232.99.1",
                      "type" : "string"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Name of the Resource. Must be unique per Project.",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "protection" : {
                      "description" : "Protection configuration for the Resource",
                      "properties" : {
                        "delete" : {
                          "description" : "If true, prevents the Resource from being deleted",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "delete" ],
                      "type" : "object"
                    },
                    "type" : {
                      "description" : "Type of the Primary IP",
                      "enum" : [ "ipv4", "ipv6" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "labels", "created", "blocked", "datacenter", "ip", "dns_ptr", "protection", "type", "auto_delete", "assignee_type", "assignee_id" ],
                  "title" : "PrimaryIP",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "primary_ips" ],
            "title" : "PrimaryIPsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "0ad4d6b8-426a-45ac-b7d9-7832736b3c8a",
    "name" : "Get all prices",
    "request" : {
      "urlPath" : "/pricing",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"pricing\" : {\n    \"primary_ips\" : [ {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ],\n      \"type\" : \"ipv4\"\n    }, {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ],\n      \"type\" : \"ipv4\"\n    }, {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ],\n      \"type\" : \"ipv4\"\n    } ],\n    \"volume\" : {\n      \"price_per_gb_month\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    },\n    \"image\" : {\n      \"price_per_gb_month\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    },\n    \"server_types\" : [ {\n      \"name\" : \"cx11\",\n      \"id\" : 4,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"cx11\",\n      \"id\" : 4,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"cx11\",\n      \"id\" : 4,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"cx11\",\n      \"id\" : 4,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"cx11\",\n      \"id\" : 4,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    } ],\n    \"server_backup\" : {\n      \"percentage\" : \"20.0000000000\"\n    },\n    \"floating_ip\" : {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    },\n    \"currency\" : \"EUR\",\n    \"floating_ips\" : [ {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      } ],\n      \"type\" : \"ipv4\"\n    }, {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      } ],\n      \"type\" : \"ipv4\"\n    }, {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      } ],\n      \"type\" : \"ipv4\"\n    }, {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      } ],\n      \"type\" : \"ipv4\"\n    }, {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      } ],\n      \"type\" : \"ipv4\"\n    }, {\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\"\n      } ],\n      \"type\" : \"ipv4\"\n    } ],\n    \"load_balancer_types\" : [ {\n      \"name\" : \"lb11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"lb11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"lb11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"lb11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"lb11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"lb11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    }, {\n      \"name\" : \"lb11\",\n      \"id\" : 1,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    } ],\n    \"traffic\" : {\n      \"price_per_tb\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    },\n    \"vat_rate\" : \"19.000000\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ad4d6b8-426a-45ac-b7d9-7832736b3c8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.747011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "pricing" : {
                "additionalProperties" : false,
                "properties" : {
                  "currency" : {
                    "description" : "Currency the returned prices are expressed in, coded according to ISO 4217",
                    "example" : "EUR",
                    "type" : "string"
                  },
                  "floating_ip" : {
                    "description" : "The cost of one Floating IP per month",
                    "properties" : {
                      "price_monthly" : {
                        "properties" : {
                          "gross" : {
                            "description" : "Price with VAT added",
                            "example" : "1.1900000000000000",
                            "type" : "string"
                          },
                          "net" : {
                            "description" : "Price without VAT",
                            "example" : "1.0000000000",
                            "type" : "string"
                          }
                        },
                        "required" : [ "net", "gross" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "price_monthly" ],
                    "type" : "object"
                  },
                  "floating_ips" : {
                    "description" : "Costs of Floating IPs types per Location and type",
                    "items" : {
                      "properties" : {
                        "prices" : {
                          "description" : "Floating IP type costs per Location",
                          "items" : {
                            "properties" : {
                              "location" : {
                                "description" : "Name of the Location the price is for",
                                "example" : "fsn1",
                                "type" : "string"
                              },
                              "price_monthly" : {
                                "description" : "Monthly costs for a Floating IP type in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              }
                            },
                            "required" : [ "location", "price_monthly" ],
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "type" : {
                          "description" : "The type of the Floating IP",
                          "enum" : [ "ipv4", "ipv6" ],
                          "example" : "ipv4",
                          "type" : "string"
                        }
                      },
                      "required" : [ "type", "prices" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "image" : {
                    "description" : "The cost of Image per GB/month",
                    "properties" : {
                      "price_per_gb_month" : {
                        "properties" : {
                          "gross" : {
                            "description" : "Price with VAT added",
                            "example" : "1.1900000000000000",
                            "type" : "string"
                          },
                          "net" : {
                            "description" : "Price without VAT",
                            "example" : "1.0000000000",
                            "type" : "string"
                          }
                        },
                        "required" : [ "net", "gross" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "price_per_gb_month" ],
                    "type" : "object"
                  },
                  "load_balancer_types" : {
                    "description" : "Costs of Load Balancer types per Location and type",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Load Balancer type the price is for",
                          "example" : 1,
                          "type" : "number"
                        },
                        "name" : {
                          "description" : "Name of the Load Balancer type the price is for",
                          "example" : "lb11",
                          "type" : "string"
                        },
                        "prices" : {
                          "description" : "Load Balancer type costs per Location",
                          "items" : {
                            "properties" : {
                              "location" : {
                                "description" : "Name of the Location the price is for",
                                "example" : "fsn1",
                                "type" : "string"
                              },
                              "price_hourly" : {
                                "description" : "Hourly costs for a Load Balancer type in this network zone",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              },
                              "price_monthly" : {
                                "description" : "Monthly costs for a Load Balancer type in this network zone",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              }
                            },
                            "required" : [ "location", "price_hourly", "price_monthly" ],
                            "type" : "object"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "id", "name", "prices" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "primary_ips" : {
                    "description" : "Costs of Primary IPs types per Location",
                    "items" : {
                      "properties" : {
                        "prices" : {
                          "description" : "Primary IP type costs per Location",
                          "items" : {
                            "properties" : {
                              "location" : {
                                "description" : "Name of the Location the price is for",
                                "example" : "fsn1",
                                "type" : "string"
                              },
                              "price_hourly" : {
                                "description" : "Hourly costs for a Primary IP type in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              },
                              "price_monthly" : {
                                "description" : "Monthly costs for a Primary IP type in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              }
                            },
                            "required" : [ "location", "price_hourly", "price_monthly" ],
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "type" : {
                          "description" : "The type of the Primary IP",
                          "enum" : [ "ipv4", "ipv6" ],
                          "example" : "ipv4",
                          "type" : "string"
                        }
                      },
                      "required" : [ "type", "prices" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "server_backup" : {
                    "description" : "Will increase base Server costs by specific percentage",
                    "properties" : {
                      "percentage" : {
                        "description" : "Percentage by how much the base price will increase",
                        "example" : "20.0000000000",
                        "type" : "string"
                      }
                    },
                    "required" : [ "percentage" ],
                    "type" : "object"
                  },
                  "server_types" : {
                    "description" : "Costs of Server types per Location and type",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Server type the price is for",
                          "example" : 4,
                          "type" : "number"
                        },
                        "name" : {
                          "description" : "Name of the Server type the price is for",
                          "example" : "cx11",
                          "type" : "string"
                        },
                        "prices" : {
                          "description" : "Server type costs per Location",
                          "items" : {
                            "properties" : {
                              "location" : {
                                "description" : "Name of the Location the price is for",
                                "example" : "fsn1",
                                "type" : "string"
                              },
                              "price_hourly" : {
                                "description" : "Hourly costs for a Server type in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              },
                              "price_monthly" : {
                                "description" : "Monthly costs for a Server type in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              }
                            },
                            "required" : [ "location", "price_hourly", "price_monthly" ],
                            "type" : "object"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "id", "name", "prices" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "traffic" : {
                    "description" : "The cost of additional traffic per TB",
                    "properties" : {
                      "price_per_tb" : {
                        "properties" : {
                          "gross" : {
                            "description" : "Price with VAT added",
                            "example" : "1.1900000000000000",
                            "type" : "string"
                          },
                          "net" : {
                            "description" : "Price without VAT",
                            "example" : "1.0000000000",
                            "type" : "string"
                          }
                        },
                        "required" : [ "net", "gross" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "price_per_tb" ],
                    "type" : "object"
                  },
                  "vat_rate" : {
                    "description" : "The VAT rate used for calculating prices with VAT",
                    "example" : "19.000000",
                    "type" : "string"
                  },
                  "volume" : {
                    "description" : "The cost of Volume per GB/month",
                    "properties" : {
                      "price_per_gb_month" : {
                        "properties" : {
                          "gross" : {
                            "description" : "Price with VAT added",
                            "example" : "1.1900000000000000",
                            "type" : "string"
                          },
                          "net" : {
                            "description" : "Price without VAT",
                            "example" : "1.0000000000",
                            "type" : "string"
                          }
                        },
                        "required" : [ "net", "gross" ],
                        "type" : "object"
                      }
                    },
                    "required" : [ "price_per_gb_month" ],
                    "type" : "object"
                  }
                },
                "required" : [ "currency", "vat_rate", "image", "floating_ip", "floating_ips", "traffic", "server_backup", "volume", "server_types", "load_balancer_types", "primary_ips" ],
                "type" : "object"
              }
            },
            "required" : [ "pricing" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "6ab4a606-558a-4d63-9f47-abbfa68b3783",
    "name" : "Update a PlacementGroup",
    "request" : {
      "urlPath" : "/placement_groups/3955574382839283243",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"placement_group\" : {\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"id\" : 897,\n    \"labels\" : {\n      \"key\" : \"value\"\n    },\n    \"name\" : \"my Placement Group\",\n    \"servers\" : [ 4711, 4712 ],\n    \"type\" : \"spread\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ab4a606-558a-4d63-9f47-abbfa68b3783",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.744886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "placement_group" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "servers" : {
                    "description" : "Array of IDs of Servers that are part of this Placement Group",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "type" : {
                    "description" : "Type of the Placement Group",
                    "enum" : [ "spread" ],
                    "example" : "spread",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "labels", "type", "created", "servers" ],
                "title" : "PlacementGroup",
                "type" : "object"
              }
            },
            "required" : [ "placement_group" ],
            "title" : "PlacementGroupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "833f8041-ca34-4aa3-b765-c618d62aafc4",
    "name" : "Get a PlacementGroup",
    "request" : {
      "urlPath" : "/placement_groups/2381796087931808406",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"placement_group\" : {\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"id\" : 897,\n    \"labels\" : {\n      \"key\" : \"value\"\n    },\n    \"name\" : \"my Placement Group\",\n    \"servers\" : [ 4711, 4712 ],\n    \"type\" : \"spread\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "833f8041-ca34-4aa3-b765-c618d62aafc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.744796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "placement_group" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "servers" : {
                    "description" : "Array of IDs of Servers that are part of this Placement Group",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "type" : {
                    "description" : "Type of the Placement Group",
                    "enum" : [ "spread" ],
                    "example" : "spread",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "labels", "type", "created", "servers" ],
                "title" : "PlacementGroup",
                "type" : "object"
              }
            },
            "required" : [ "placement_group" ],
            "title" : "PlacementGroupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "bec6da6d-011d-42d7-90b5-764a5dd79738",
    "name" : "Delete a PlacementGroup - 204",
    "request" : {
      "urlPath" : "/placement_groups/7735455044986372343",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bec6da6d-011d-42d7-90b5-764a5dd79738",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.74471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "3fd591ab-9046-4f43-a379-d8e1bfb52cc7",
    "name" : "Create a PlacementGroup - spread",
    "request" : {
      "urlPath" : "/placement_groups",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"placement_group\" : {\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"id\" : 897,\n    \"labels\" : {\n      \"key\" : \"value\"\n    },\n    \"name\" : \"my Placement Group\",\n    \"servers\" : [ ],\n    \"type\" : \"spread\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3fd591ab-9046-4f43-a379-d8e1bfb52cc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.744675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "nullable" : true,
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "NullableAction",
                "type" : "object"
              },
              "placement_group" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "servers" : {
                    "description" : "Array of IDs of Servers that are part of this Placement Group",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "type" : {
                    "description" : "Type of the Placement Group",
                    "enum" : [ "spread" ],
                    "example" : "spread",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "labels", "type", "created", "servers" ],
                "title" : "PlacementGroup",
                "type" : "object"
              }
            },
            "required" : [ "placement_group" ],
            "title" : "CreatePlacementGroupResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "78e7331a-7e99-47b9-a913-803d93e311a5",
    "name" : "Get all PlacementGroups",
    "request" : {
      "urlPath" : "/placement_groups",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"placement_groups\" : [ {\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"id\" : 897,\n    \"labels\" : {\n      \"key\" : \"value\"\n    },\n    \"name\" : \"my Placement Group\",\n    \"servers\" : [ 4711, 4712 ],\n    \"type\" : \"spread\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78e7331a-7e99-47b9-a913-803d93e311a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.744498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              },
              "placement_groups" : {
                "items" : {
                  "properties" : {
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Name of the Resource. Must be unique per Project.",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "servers" : {
                      "description" : "Array of IDs of Servers that are part of this Placement Group",
                      "example" : [ 42 ],
                      "items" : {
                        "type" : "integer"
                      },
                      "type" : "array"
                    },
                    "type" : {
                      "description" : "Type of the Placement Group",
                      "enum" : [ "spread" ],
                      "example" : "spread",
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "labels", "type", "created", "servers" ],
                  "title" : "PlacementGroup",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "placement_groups" ],
            "title" : "PlacementGroupsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "a3f388e1-914a-45dd-9d82-00e8b263203a",
    "name" : "Get an Action for a Network",
    "request" : {
      "urlPath" : "/networks/7202907431963700041/actions/2605197468917985875",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"add_subnet\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3f388e1-914a-45dd-9d82-00e8b263203a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.744354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "1e474402-d367-4831-8861-41e0ff21ee9f",
    "name" : "Delete a subnet from a Network",
    "request" : {
      "urlPath" : "/networks/6858460165727824192/actions/delete_subnet",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"delete_subnet\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e474402-d367-4831-8861-41e0ff21ee9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.744232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "d1e577ee-7f98-416a-888e-999a3959d469",
    "name" : "Delete a route from a Network",
    "request" : {
      "urlPath" : "/networks/2005736789542473083/actions/delete_route",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"delete_route\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1e577ee-7f98-416a-888e-999a3959d469",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.744114Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "f7885d2a-7e70-4cc5-83f3-c50fc3ed3cd3",
    "name" : "Change Network Protection",
    "request" : {
      "urlPath" : "/networks/2156017836216765666/actions/change_protection",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7885d2a-7e70-4cc5-83f3-c50fc3ed3cd3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.744001Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "8f36d9a3-72d4-4a69-ab43-00f840333732",
    "name" : "Change IP range of a Network",
    "request" : {
      "urlPath" : "/networks/4118487844114790404/actions/change_ip_range",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_ip_range\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f36d9a3-72d4-4a69-ab43-00f840333732",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.743882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "93431a63-1659-4a84-b86d-131ba88753d8",
    "name" : "Add a subnet to a Network",
    "request" : {
      "urlPath" : "/networks/8162788009175820950/actions/add_subnet",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"add_subnet\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93431a63-1659-4a84-b86d-131ba88753d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.743769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "2d979bab-aae4-4a1c-b9f9-ce44543e6344",
    "name" : "Add a route to a Network",
    "request" : {
      "urlPath" : "/networks/5168702285176417184/actions/add_route",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"add_route\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d979bab-aae4-4a1c-b9f9-ce44543e6344",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.743651Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "d26d38e3-446c-4a2e-87e0-63eb528d8c6d",
    "name" : "Get all Actions for a Network",
    "request" : {
      "urlPath" : "/networks/5970652679895352475/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"add_subnet\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d26d38e3-446c-4a2e-87e0-63eb528d8c6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.743523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "612c59e3-6dfe-4e2b-bcc5-68c8ffd6ee30",
    "name" : "Update a Network",
    "request" : {
      "urlPath" : "/networks/7590450348790998941",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"network\" : {\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"id\" : 4711,\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"labels\" : {\n      \"labelkey\" : \"value\"\n    },\n    \"load_balancers\" : [ 42 ],\n    \"name\" : \"new-name\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"subnets\" : [ {\n      \"gateway\" : \"10.0.0.1\",\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "612c59e3-6dfe-4e2b-bcc5-68c8ffd6ee30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.743346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "network" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Network was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:50:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Network",
                    "example" : 4711,
                    "type" : "integer"
                  },
                  "ip_range" : {
                    "description" : "IPv4 prefix of the whole Network",
                    "example" : "10.0.0.0/16",
                    "type" : "string"
                  },
                  "labels" : {
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancers" : {
                    "description" : "Array of IDs of Load Balancers attached to this Network",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "name" : {
                    "description" : "Name of the Network",
                    "example" : "mynet",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Network",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Network from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "routes" : {
                    "description" : "Array of routes set in this Network",
                    "items" : {
                      "properties" : {
                        "destination" : {
                          "description" : "Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.",
                          "example" : "10.100.1.0/24",
                          "type" : "string"
                        },
                        "gateway" : {
                          "description" : "Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.",
                          "example" : "10.0.1.1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "destination", "gateway" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "servers" : {
                    "description" : "Array of IDs of Servers attached to this Network",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "subnets" : {
                    "description" : "Array subnets allocated in this Network",
                    "items" : {
                      "properties" : {
                        "gateway" : {
                          "description" : "Gateway for Servers attached to this subnet. For subnets of type Server this is always the first IP of the network IP range.",
                          "example" : "10.0.0.1",
                          "type" : "string"
                        },
                        "ip_range" : {
                          "description" : "Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.",
                          "example" : "10.0.1.0/24",
                          "type" : "string"
                        },
                        "network_zone" : {
                          "description" : "Name of Network zone. The Location object contains the `network_zone` property each Location belongs to.",
                          "example" : "eu-central",
                          "type" : "string"
                        },
                        "type" : {
                          "description" : "Type of Subnetwork",
                          "enum" : [ "cloud", "server", "vswitch" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "type", "network_zone", "gateway" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "ip_range", "subnets", "routes", "servers", "protection", "labels", "created" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "cef8b43b-f1c1-457b-a289-2b445cadccb4",
    "name" : "Get a Network",
    "request" : {
      "urlPath" : "/networks/5254035765638843027",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"network\" : {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"server\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cef8b43b-f1c1-457b-a289-2b445cadccb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.74318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "network" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Network was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:50:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Network",
                    "example" : 4711,
                    "type" : "integer"
                  },
                  "ip_range" : {
                    "description" : "IPv4 prefix of the whole Network",
                    "example" : "10.0.0.0/16",
                    "type" : "string"
                  },
                  "labels" : {
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancers" : {
                    "description" : "Array of IDs of Load Balancers attached to this Network",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "name" : {
                    "description" : "Name of the Network",
                    "example" : "mynet",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Network",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Network from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "routes" : {
                    "description" : "Array of routes set in this Network",
                    "items" : {
                      "properties" : {
                        "destination" : {
                          "description" : "Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.",
                          "example" : "10.100.1.0/24",
                          "type" : "string"
                        },
                        "gateway" : {
                          "description" : "Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.",
                          "example" : "10.0.1.1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "destination", "gateway" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "servers" : {
                    "description" : "Array of IDs of Servers attached to this Network",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "subnets" : {
                    "description" : "Array subnets allocated in this Network",
                    "items" : {
                      "properties" : {
                        "gateway" : {
                          "description" : "Gateway for Servers attached to this subnet. For subnets of type Server this is always the first IP of the network IP range.",
                          "example" : "10.0.0.1",
                          "type" : "string"
                        },
                        "ip_range" : {
                          "description" : "Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.",
                          "example" : "10.0.1.0/24",
                          "type" : "string"
                        },
                        "network_zone" : {
                          "description" : "Name of Network zone. The Location object contains the `network_zone` property each Location belongs to.",
                          "example" : "eu-central",
                          "type" : "string"
                        },
                        "type" : {
                          "description" : "Type of Subnetwork",
                          "enum" : [ "cloud", "server", "vswitch" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "type", "network_zone", "gateway" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "ip_range", "subnets", "routes", "servers", "protection", "labels", "created" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "52534f5c-72a6-4e62-8587-7275724c836d",
    "name" : "Delete a Network - 204",
    "request" : {
      "urlPath" : "/networks/8539132267524785218",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "52534f5c-72a6-4e62-8587-7275724c836d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.742913Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "d296131c-1d5e-4afa-9c03-796e42270de1",
    "name" : "Create a Network",
    "request" : {
      "urlPath" : "/networks",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"network\" : {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d296131c-1d5e-4afa-9c03-796e42270de1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.742879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "network" : {
                "properties" : {
                  "created" : {
                    "description" : "Point in time when the Network was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:50:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Network",
                    "example" : 4711,
                    "type" : "integer"
                  },
                  "ip_range" : {
                    "description" : "IPv4 prefix of the whole Network",
                    "example" : "10.0.0.0/16",
                    "type" : "string"
                  },
                  "labels" : {
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancers" : {
                    "description" : "Array of IDs of Load Balancers attached to this Network",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "name" : {
                    "description" : "Name of the Network",
                    "example" : "mynet",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Network",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Network from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "routes" : {
                    "description" : "Array of routes set in this Network",
                    "items" : {
                      "properties" : {
                        "destination" : {
                          "description" : "Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.",
                          "example" : "10.100.1.0/24",
                          "type" : "string"
                        },
                        "gateway" : {
                          "description" : "Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.",
                          "example" : "10.0.1.1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "destination", "gateway" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "servers" : {
                    "description" : "Array of IDs of Servers attached to this Network",
                    "example" : [ 42 ],
                    "items" : {
                      "type" : "integer"
                    },
                    "type" : "array"
                  },
                  "subnets" : {
                    "description" : "Array subnets allocated in this Network",
                    "items" : {
                      "properties" : {
                        "gateway" : {
                          "description" : "Gateway for Servers attached to this subnet. For subnets of type Server this is always the first IP of the network IP range.",
                          "example" : "10.0.0.1",
                          "type" : "string"
                        },
                        "ip_range" : {
                          "description" : "Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.",
                          "example" : "10.0.1.0/24",
                          "type" : "string"
                        },
                        "network_zone" : {
                          "description" : "Name of Network zone. The Location object contains the `network_zone` property each Location belongs to.",
                          "example" : "eu-central",
                          "type" : "string"
                        },
                        "type" : {
                          "description" : "Type of Subnetwork",
                          "enum" : [ "cloud", "server", "vswitch" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "type", "network_zone", "gateway" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "ip_range", "subnets", "routes", "servers", "protection", "labels", "created" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "e1a5dcff-3197-4a1f-96ab-281a2c0697fb",
    "name" : "Get all Networks",
    "request" : {
      "urlPath" : "/networks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  },\n  \"networks\" : [ {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  }, {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"server\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"server\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  }, {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"server\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"server\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  }, {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"server\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  }, {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"server\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  }, {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    }, {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"cloud\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  }, {\n    \"ip_range\" : \"10.0.0.0/16\",\n    \"routes\" : [ {\n      \"destination\" : \"10.100.1.0/24\",\n      \"gateway\" : \"10.0.1.1\"\n    } ],\n    \"servers\" : [ 42 ],\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"mynet\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"subnets\" : [ {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"server\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    }, {\n      \"ip_range\" : \"10.0.1.0/24\",\n      \"network_zone\" : \"eu-central\",\n      \"type\" : \"vswitch\",\n      \"gateway\" : \"10.0.0.1\"\n    } ],\n    \"id\" : 4711,\n    \"load_balancers\" : [ 42 ],\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1a5dcff-3197-4a1f-96ab-281a2c0697fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.742621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              },
              "networks" : {
                "items" : {
                  "properties" : {
                    "created" : {
                      "description" : "Point in time when the Network was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:50:00+00:00",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Network",
                      "example" : 4711,
                      "type" : "integer"
                    },
                    "ip_range" : {
                      "description" : "IPv4 prefix of the whole Network",
                      "example" : "10.0.0.0/16",
                      "type" : "string"
                    },
                    "labels" : {
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "load_balancers" : {
                      "description" : "Array of IDs of Load Balancers attached to this Network",
                      "example" : [ 42 ],
                      "items" : {
                        "type" : "integer"
                      },
                      "type" : "array"
                    },
                    "name" : {
                      "description" : "Name of the Network",
                      "example" : "mynet",
                      "type" : "string"
                    },
                    "protection" : {
                      "description" : "Protection configuration for the Network",
                      "properties" : {
                        "delete" : {
                          "description" : "If true, prevents the Network from being deleted",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "delete" ],
                      "type" : "object"
                    },
                    "routes" : {
                      "description" : "Array of routes set in this Network",
                      "items" : {
                        "properties" : {
                          "destination" : {
                            "description" : "Destination network or host of this route. Must not overlap with an existing ip_range in any subnets or with any destinations in other routes or with the first IP of the networks ip_range or with 172.31.1.1. Must be one of the private IPv4 ranges of RFC1918.",
                            "example" : "10.100.1.0/24",
                            "type" : "string"
                          },
                          "gateway" : {
                            "description" : "Gateway for the route. Cannot be the first IP of the networks ip_range and also cannot be 172.31.1.1 as this IP is being used as a gateway for the public network interface of Servers.",
                            "example" : "10.0.1.1",
                            "type" : "string"
                          }
                        },
                        "required" : [ "destination", "gateway" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "servers" : {
                      "description" : "Array of IDs of Servers attached to this Network",
                      "example" : [ 42 ],
                      "items" : {
                        "type" : "integer"
                      },
                      "type" : "array"
                    },
                    "subnets" : {
                      "description" : "Array subnets allocated in this Network",
                      "items" : {
                        "properties" : {
                          "gateway" : {
                            "description" : "Gateway for Servers attached to this subnet. For subnets of type Server this is always the first IP of the network IP range.",
                            "example" : "10.0.0.1",
                            "type" : "string"
                          },
                          "ip_range" : {
                            "description" : "Range to allocate IPs from. Must be a Subnet of the ip_range of the parent network object and must not overlap with any other subnets or with any destinations in routes. Minimum Network size is /30. We suggest that you pick a bigger Network with a /24 netmask.",
                            "example" : "10.0.1.0/24",
                            "type" : "string"
                          },
                          "network_zone" : {
                            "description" : "Name of Network zone. The Location object contains the `network_zone` property each Location belongs to.",
                            "example" : "eu-central",
                            "type" : "string"
                          },
                          "type" : {
                            "description" : "Type of Subnetwork",
                            "enum" : [ "cloud", "server", "vswitch" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "type", "network_zone", "gateway" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "required" : [ "id", "name", "ip_range", "subnets", "routes", "servers", "protection", "labels", "created" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "networks" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "3b530ded-456b-4633-b79b-e40300d81f49",
    "name" : "Get a Location",
    "request" : {
      "urlPath" : "/locations/5945750563139680225",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : {\n    \"country\" : \"DE\",\n    \"network_zone\" : \"eu-central\",\n    \"city\" : \"Falkenstein\",\n    \"latitude\" : 50.47612,\n    \"name\" : \"fsn1\",\n    \"description\" : \"Falkenstein DC Park 1\",\n    \"id\" : 1,\n    \"longitude\" : 12.370071\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b530ded-456b-4633-b79b-e40300d81f49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.741702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "location" : {
                "properties" : {
                  "city" : {
                    "description" : "City the Location is closest to",
                    "example" : "Falkenstein",
                    "type" : "string"
                  },
                  "country" : {
                    "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                    "example" : "DE",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the Location",
                    "example" : "Falkenstein DC Park 1",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Location",
                    "example" : 1,
                    "type" : "number"
                  },
                  "latitude" : {
                    "description" : "Latitude of the city closest to the Location",
                    "example" : 50.47612,
                    "type" : "number"
                  },
                  "longitude" : {
                    "description" : "Longitude of the city closest to the Location",
                    "example" : 12.370071,
                    "type" : "number"
                  },
                  "name" : {
                    "description" : "Unique identifier of the Location",
                    "example" : "fsn1",
                    "type" : "string"
                  },
                  "network_zone" : {
                    "description" : "Name of network zone this Location resides in",
                    "example" : "eu-central",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                "type" : "object"
              }
            },
            "required" : [ "location" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "4e37b40a-2692-429b-9503-d829fff8c6f1",
    "name" : "Get all Locations",
    "request" : {
      "urlPath" : "/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"locations\" : [ {\n    \"country\" : \"DE\",\n    \"network_zone\" : \"eu-central\",\n    \"city\" : \"Falkenstein\",\n    \"latitude\" : 50.47612,\n    \"name\" : \"fsn1\",\n    \"description\" : \"Falkenstein DC Park 1\",\n    \"id\" : 1,\n    \"longitude\" : 12.370071\n  }, {\n    \"country\" : \"DE\",\n    \"network_zone\" : \"eu-central\",\n    \"city\" : \"Falkenstein\",\n    \"latitude\" : 50.47612,\n    \"name\" : \"fsn1\",\n    \"description\" : \"Falkenstein DC Park 1\",\n    \"id\" : 1,\n    \"longitude\" : 12.370071\n  }, {\n    \"country\" : \"DE\",\n    \"network_zone\" : \"eu-central\",\n    \"city\" : \"Falkenstein\",\n    \"latitude\" : 50.47612,\n    \"name\" : \"fsn1\",\n    \"description\" : \"Falkenstein DC Park 1\",\n    \"id\" : 1,\n    \"longitude\" : 12.370071\n  }, {\n    \"country\" : \"DE\",\n    \"network_zone\" : \"eu-central\",\n    \"city\" : \"Falkenstein\",\n    \"latitude\" : 50.47612,\n    \"name\" : \"fsn1\",\n    \"description\" : \"Falkenstein DC Park 1\",\n    \"id\" : 1,\n    \"longitude\" : 12.370071\n  }, {\n    \"country\" : \"DE\",\n    \"network_zone\" : \"eu-central\",\n    \"city\" : \"Falkenstein\",\n    \"latitude\" : 50.47612,\n    \"name\" : \"fsn1\",\n    \"description\" : \"Falkenstein DC Park 1\",\n    \"id\" : 1,\n    \"longitude\" : 12.370071\n  }, {\n    \"country\" : \"DE\",\n    \"network_zone\" : \"eu-central\",\n    \"city\" : \"Falkenstein\",\n    \"latitude\" : 50.47612,\n    \"name\" : \"fsn1\",\n    \"description\" : \"Falkenstein DC Park 1\",\n    \"id\" : 1,\n    \"longitude\" : 12.370071\n  }, {\n    \"country\" : \"DE\",\n    \"network_zone\" : \"eu-central\",\n    \"city\" : \"Falkenstein\",\n    \"latitude\" : 50.47612,\n    \"name\" : \"fsn1\",\n    \"description\" : \"Falkenstein DC Park 1\",\n    \"id\" : 1,\n    \"longitude\" : 12.370071\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e37b40a-2692-429b-9503-d829fff8c6f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.741595Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "locations" : {
                "items" : {
                  "properties" : {
                    "city" : {
                      "description" : "City the Location is closest to",
                      "example" : "Falkenstein",
                      "type" : "string"
                    },
                    "country" : {
                      "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                      "example" : "DE",
                      "type" : "string"
                    },
                    "description" : {
                      "description" : "Description of the Location",
                      "example" : "Falkenstein DC Park 1",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Location",
                      "example" : 1,
                      "type" : "number"
                    },
                    "latitude" : {
                      "description" : "Latitude of the city closest to the Location",
                      "example" : 50.47612,
                      "type" : "number"
                    },
                    "longitude" : {
                      "description" : "Longitude of the city closest to the Location",
                      "example" : 12.370071,
                      "type" : "number"
                    },
                    "name" : {
                      "description" : "Unique identifier of the Location",
                      "example" : "fsn1",
                      "type" : "string"
                    },
                    "network_zone" : {
                      "description" : "Name of network zone this Location resides in",
                      "example" : "eu-central",
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "locations" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "1a07a3cc-b0b6-4ca0-84cd-3dd08fb725a0",
    "name" : "Get Metrics for a LoadBalancer",
    "request" : {
      "urlPath" : "/load_balancers/3612052333026250231/metrics",
      "method" : "GET",
      "queryParameters" : {
        "start" : {
          "equalTo" : "jdm07srigdskg3dt992lkfbtg0sihpsjqasqaywo31b4b3mxslwj7z3lmmxu4v5iuhqpbh1ao3g2m2i79czcfrsrrw6y0nlpq594nao9irq1onyv5qmfwfeoramdu3m3t6owpxeh0455f26hyfnkdql06htohral9w8o2xrltke69llkq36zrs5m8zgdzob"
        },
        "end" : {
          "equalTo" : "i23qehsjtctu90o0c3ennw12vc4hen7qb0nniny8r4447xxosljwdrgjd74ii8pgr3xpscupiji8yudduqzoz7ztvbuzvrtp1gdwrsl2c4n"
        },
        "type" : {
          "equalTo" : "connections_per_second"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metrics\" : {\n    \"time_series\" : {\n      \"name_of_timeseries\" : {\n        \"values\" : [ [ 1.435781470622E9, \"42\" ], [ 1.435781471622E9, \"43\" ] ]\n      }\n    },\n    \"start\" : \"2017-01-01T00:00:00+00:00\",\n    \"end\" : \"2017-01-01T23:00:00+00:00\",\n    \"step\" : 60\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a07a3cc-b0b6-4ca0-84cd-3dd08fb725a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.741388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "metrics" : {
                "properties" : {
                  "end" : {
                    "description" : "End of period of metrics reported (in ISO-8601 format)",
                    "example" : "2017-01-01T23:00:00+00:00",
                    "type" : "string"
                  },
                  "start" : {
                    "description" : "Start of period of metrics reported (in ISO-8601 format)",
                    "example" : "2017-01-01T00:00:00+00:00",
                    "type" : "string"
                  },
                  "step" : {
                    "description" : "Resolution of results in seconds.",
                    "example" : 60,
                    "type" : "number"
                  },
                  "time_series" : {
                    "additionalProperties" : {
                      "properties" : {
                        "values" : {
                          "description" : "Metrics Timestamps with values",
                          "items" : {
                            "items" : {
                              "oneOf" : [ {
                                "type" : "number"
                              }, {
                                "type" : "string"
                              } ]
                            },
                            "type" : "array"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "values" ],
                      "type" : "object"
                    },
                    "description" : "Hash with timeseries information, containing the name of timeseries as key",
                    "example" : {
                      "name_of_timeseries" : {
                        "values" : [ [ 1435781470.622, "42" ], [ 1435781471.622, "43" ] ]
                      }
                    },
                    "type" : "object"
                  }
                },
                "required" : [ "start", "end", "step", "time_series" ],
                "type" : "object"
              }
            },
            "required" : [ "metrics" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "e48aa7cf-915d-4b06-af7d-0b9e3f407818",
    "name" : "Get an Action for a Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers/4387494830361896282/actions/2629709022904811869",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e48aa7cf-915d-4b06-af7d-0b9e3f407818",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.741097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "938948f8-0fb7-4cfb-8e7b-9e11e850fd18",
    "name" : "Update Service",
    "request" : {
      "urlPath" : "/load_balancers/5980519322419524849/actions/update_service",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"update_service\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "938948f8-0fb7-4cfb-8e7b-9e11e850fd18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.740958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "a2ce6a85-48a2-4818-9cb6-bd2ab5b7386a",
    "name" : "Remove Target",
    "request" : {
      "urlPath" : "/load_balancers/1364905195380672643/actions/remove_target",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"remove_target\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a2ce6a85-48a2-4818-9cb6-bd2ab5b7386a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.740842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "37ea17c9-bacc-4669-bdd2-3e66a5fdb685",
    "name" : "Enable the public interface of a Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers/1462247131027835266/actions/enable_public_interface",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"enable_public_interface\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37ea17c9-bacc-4669-bdd2-3e66a5fdb685",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.740721Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "59a8c090-142b-474f-a3c1-0dcf6f13ecce",
    "name" : "Disable the public interface of a Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers/3893883232528214142/actions/disable_public_interface",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"disable_public_interface\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59a8c090-142b-474f-a3c1-0dcf6f13ecce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.740609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "2d1f9fd2-d10b-4bd9-9331-63feea5bedaa",
    "name" : "Detach a Load Balancer from a Network",
    "request" : {
      "urlPath" : "/load_balancers/7564423101769760414/actions/detach_from_network",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"detach_from_network\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"network\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d1f9fd2-d10b-4bd9-9331-63feea5bedaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.74049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "190c97ae-d764-414a-b157-b4cfd0a7eec8",
    "name" : "Delete Service",
    "request" : {
      "urlPath" : "/load_balancers/1676328310056776830/actions/delete_service",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"delete_service\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "190c97ae-d764-414a-b157-b4cfd0a7eec8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.740368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "d0ea71bf-5c16-4538-8b67-4882ca8a4f77",
    "name" : "Change the Type of a Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers/6643318575308426824/actions/change_type",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_load_balancer_type\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0ea71bf-5c16-4538-8b67-4882ca8a4f77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.740251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "3f79aec5-7ff4-4782-93ca-6eda00981096",
    "name" : "Change Load Balancer Protection",
    "request" : {
      "urlPath" : "/load_balancers/430344941259212396/actions/change_protection",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f79aec5-7ff4-4782-93ca-6eda00981096",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.740139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "7a989c3d-04ff-4d5e-b46d-860ffbe4251b",
    "name" : "Change reverse DNS entry for this Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers/4058309086798954899/actions/change_dns_ptr",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_dns_ptr\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a989c3d-04ff-4d5e-b46d-860ffbe4251b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.740015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "d99e05e2-26a5-4307-b1d1-31d92415bd95",
    "name" : "Change Algorithm",
    "request" : {
      "urlPath" : "/load_balancers/3862108373317399472/actions/change_algorithm",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_algorithm\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d99e05e2-26a5-4307-b1d1-31d92415bd95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.7399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "ffd85676-09cb-4579-9171-019c519f0f4e",
    "name" : "Attach a Load Balancer to a Network",
    "request" : {
      "urlPath" : "/load_balancers/6536120617609736961/actions/attach_to_network",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"attach_to_network\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffd85676-09cb-4579-9171-019c519f0f4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.739777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "dd3d43d6-6b92-4c41-95d6-98819cbad7d1",
    "name" : "Add Target",
    "request" : {
      "urlPath" : "/load_balancers/5661323226636064221/actions/add_target",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"add_target\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd3d43d6-6b92-4c41-95d6-98819cbad7d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.739662Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "beaf5397-5dd7-41ea-af65-1f3338693452",
    "name" : "Add Service",
    "request" : {
      "urlPath" : "/load_balancers/7726795197693385345/actions/add_service",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"add_service\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "beaf5397-5dd7-41ea-af65-1f3338693452",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.739539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "147d1668-8a94-4490-9d36-a5325764d0f2",
    "name" : "Get all Actions for a Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers/2100168771870326159/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"add_service\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "147d1668-8a94-4490-9d36-a5325764d0f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.739414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "bb355a79-a857-401c-89fc-545cdd263ff8",
    "name" : "Update a Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers/8165273699557037039",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"load_balancer\" : {\n    \"algorithm\" : {\n      \"type\" : \"round_robin\"\n    },\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"id\" : 4711,\n    \"included_traffic\" : 654321,\n    \"ingoing_traffic\" : 123456,\n    \"labels\" : {\n      \"labelkey\" : \"value\"\n    },\n    \"load_balancer_type\" : {\n      \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n      \"description\" : \"LB11\",\n      \"id\" : 1,\n      \"max_assigned_certificates\" : 10,\n      \"max_connections\" : 20000,\n      \"max_services\" : 5,\n      \"max_targets\" : 25,\n      \"name\" : \"lb11\",\n      \"prices\" : [ {\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"location\" : {\n      \"city\" : \"Falkenstein\",\n      \"country\" : \"DE\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"latitude\" : 50.47612,\n      \"longitude\" : 12.370071,\n      \"name\" : \"fsn1\",\n      \"network_zone\" : \"eu-central\"\n    },\n    \"name\" : \"new-name\",\n    \"outgoing_traffic\" : 123456,\n    \"private_net\" : [ {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    } ],\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"public_net\" : {\n      \"enabled\" : false,\n      \"ipv4\" : {\n        \"ip\" : \"1.2.3.4\"\n      },\n      \"ipv6\" : {\n        \"ip\" : \"2001:db8::1\"\n      }\n    },\n    \"services\" : [ {\n      \"destination_port\" : 80,\n      \"health_check\" : {\n        \"http\" : {\n          \"domain\" : \"example.com\",\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"status_codes\" : [ \"2??,3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"port\" : 4711,\n        \"protocol\" : \"http\",\n        \"retries\" : 3,\n        \"timeout\" : 10\n      },\n      \"http\" : {\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\",\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true\n      },\n      \"listen_port\" : 443,\n      \"protocol\" : \"http\",\n      \"proxyprotocol\" : false\n    } ],\n    \"targets\" : [ {\n      \"health_status\" : [ {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      } ],\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"targets\" : [ {\n        \"health_status\" : [ {\n          \"listen_port\" : 443,\n          \"status\" : \"healthy\"\n        } ],\n        \"server\" : {\n          \"id\" : 80\n        },\n        \"type\" : \"server\",\n        \"use_private_ip\" : true\n      } ],\n      \"type\" : \"server\",\n      \"use_private_ip\" : true\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb355a79-a857-401c-89fc-545cdd263ff8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.739207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "load_balancer" : {
                "properties" : {
                  "algorithm" : {
                    "description" : "Algorithm of the Load Balancer",
                    "properties" : {
                      "type" : {
                        "description" : "Type of the algorithm",
                        "enum" : [ "round_robin", "least_connections" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "type" ],
                    "type" : "object"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "included_traffic" : {
                    "description" : "Free Traffic for the current billing period in bytes",
                    "example" : 10000,
                    "type" : "integer"
                  },
                  "ingoing_traffic" : {
                    "description" : "Inbound Traffic for the current billing period in bytes",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancer_type" : {
                    "properties" : {
                      "deprecated" : {
                        "description" : "Point in time when the Load Balancer type is deprecated (in ISO-8601 format)",
                        "example" : "2016-01-30T23:50:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Load Balancer type",
                        "example" : "LB11",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Load Balancer type",
                        "example" : 1,
                        "type" : "number"
                      },
                      "max_assigned_certificates" : {
                        "description" : "Number of SSL Certificates that can be assigned to a single Load Balancer",
                        "example" : 10,
                        "type" : "number"
                      },
                      "max_connections" : {
                        "description" : "Number of maximum simultaneous open connections",
                        "example" : 20000,
                        "type" : "number"
                      },
                      "max_services" : {
                        "description" : "Number of services a Load Balancer of this type can have",
                        "example" : 5,
                        "type" : "number"
                      },
                      "max_targets" : {
                        "description" : "Number of targets a single Load Balancer can have",
                        "example" : 25,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Load Balancer type",
                        "example" : "lb11",
                        "type" : "string"
                      },
                      "prices" : {
                        "description" : "Prices in different network zones",
                        "items" : {
                          "properties" : {
                            "location" : {
                              "description" : "Name of the Location the price is for",
                              "example" : "fsn1",
                              "type" : "string"
                            },
                            "price_hourly" : {
                              "description" : "Hourly costs for a Resource in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            },
                            "price_monthly" : {
                              "description" : "Monthly costs for a Resource in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            }
                          },
                          "required" : [ "location", "price_hourly", "price_monthly" ],
                          "type" : "object"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "id", "name", "description", "max_connections", "max_services", "max_targets", "max_assigned_certificates", "deprecated", "prices" ],
                    "type" : "object"
                  },
                  "location" : {
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "outgoing_traffic" : {
                    "description" : "Outbound Traffic for the current billing period in bytes",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "private_net" : {
                    "description" : "Private networks information",
                    "items" : {
                      "properties" : {
                        "ip" : {
                          "example" : "10.0.0.2",
                          "type" : "string"
                        },
                        "network" : {
                          "example" : 4711,
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "public_net" : {
                    "description" : "Public network information",
                    "properties" : {
                      "enabled" : {
                        "description" : "Public Interface enabled or not",
                        "type" : "boolean"
                      },
                      "ipv4" : {
                        "description" : "IP address (v4)",
                        "properties" : {
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv4 address of this Load Balancer",
                            "example" : "lb1.example.com",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "ip" : {
                            "description" : "IP address (v4) of this Load Balancer",
                            "example" : "1.2.3.4",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "ipv6" : {
                        "description" : "IP address (v6)",
                        "properties" : {
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv6 address of this Load Balancer",
                            "example" : "lb1.example.com",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "ip" : {
                            "description" : "IP address (v6) of this Load Balancer",
                            "example" : "2001:db8::1",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      }
                    },
                    "required" : [ "enabled", "ipv4", "ipv6" ],
                    "type" : "object"
                  },
                  "services" : {
                    "description" : "List of services that belong to this Load Balancer",
                    "items" : {
                      "properties" : {
                        "destination_port" : {
                          "description" : "Port the Load Balancer will balance to",
                          "example" : 80,
                          "type" : "integer"
                        },
                        "health_check" : {
                          "additionalProperties" : false,
                          "description" : "Service health check",
                          "properties" : {
                            "http" : {
                              "additionalProperties" : false,
                              "description" : "Additional configuration for protocol http",
                              "properties" : {
                                "domain" : {
                                  "description" : "Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.",
                                  "example" : "example.com",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "path" : {
                                  "description" : "HTTP path to use for health checks. May not contain literal spaces, use percent-encoding instead.",
                                  "example" : "/",
                                  "type" : "string"
                                },
                                "response" : {
                                  "description" : "String that must be contained in HTTP response in order to pass the health check",
                                  "example" : "{\"status\": \"ok\"}",
                                  "type" : "string"
                                },
                                "status_codes" : {
                                  "description" : "List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.",
                                  "example" : [ "2??", "3??" ],
                                  "items" : {
                                    "type" : "string"
                                  },
                                  "type" : "array"
                                },
                                "tls" : {
                                  "description" : "Use HTTPS for health check",
                                  "example" : false,
                                  "type" : "boolean"
                                }
                              },
                              "required" : [ "domain", "path" ],
                              "type" : "object"
                            },
                            "interval" : {
                              "description" : "Time interval in seconds health checks are performed",
                              "example" : 15,
                              "type" : "integer"
                            },
                            "port" : {
                              "description" : "Port the health check will be performed on",
                              "example" : 4711,
                              "type" : "integer"
                            },
                            "protocol" : {
                              "description" : "Type of the health check",
                              "enum" : [ "tcp", "http" ],
                              "example" : "http",
                              "type" : "string"
                            },
                            "retries" : {
                              "description" : "Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again",
                              "example" : 3,
                              "type" : "integer"
                            },
                            "timeout" : {
                              "description" : "Time in seconds after an attempt is considered a timeout",
                              "example" : 10,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "protocol", "port", "interval", "timeout", "retries" ],
                          "title" : "LoadBalancerServiceHealthCheck",
                          "type" : "object"
                        },
                        "http" : {
                          "description" : "Configuration option for protocols http and https",
                          "properties" : {
                            "certificates" : {
                              "description" : "IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"",
                              "example" : [ 897 ],
                              "items" : {
                                "type" : "integer"
                              },
                              "type" : "array"
                            },
                            "cookie_lifetime" : {
                              "description" : "Lifetime of the cookie used for sticky sessions",
                              "example" : 300,
                              "type" : "integer"
                            },
                            "cookie_name" : {
                              "description" : "Name of the cookie used for sticky sessions",
                              "example" : "HCLBSTICKY",
                              "type" : "string"
                            },
                            "redirect_http" : {
                              "description" : "Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`",
                              "example" : true,
                              "type" : "boolean"
                            },
                            "sticky_sessions" : {
                              "description" : "Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`",
                              "example" : true,
                              "type" : "boolean"
                            }
                          },
                          "title" : "LoadBalancerServiceHTTP",
                          "type" : "object"
                        },
                        "listen_port" : {
                          "description" : "Port the Load Balancer listens on",
                          "example" : 443,
                          "type" : "integer"
                        },
                        "protocol" : {
                          "description" : "Protocol of the Load Balancer",
                          "enum" : [ "tcp", "http", "https" ],
                          "example" : "https",
                          "type" : "string"
                        },
                        "proxyprotocol" : {
                          "description" : "Is Proxyprotocol enabled or not",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "protocol", "listen_port", "destination_port", "proxyprotocol", "health_check" ],
                      "title" : "LoadBalancerService",
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "targets" : {
                    "description" : "List of targets that belong to this Load Balancer",
                    "items" : {
                      "properties" : {
                        "health_status" : {
                          "description" : "List of health statuses of the services on this target",
                          "items" : {
                            "properties" : {
                              "listen_port" : {
                                "example" : 443,
                                "type" : "integer"
                              },
                              "status" : {
                                "enum" : [ "healthy", "unhealthy", "unknown" ],
                                "example" : "healthy",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "ip" : {
                          "description" : "IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.",
                          "properties" : {
                            "ip" : {
                              "description" : "IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.",
                              "example" : "203.0.113.1",
                              "type" : "string"
                            }
                          },
                          "required" : [ "ip" ],
                          "type" : "object"
                        },
                        "label_selector" : {
                          "description" : "Label selector and a list of selected targets",
                          "properties" : {
                            "selector" : {
                              "description" : "Label selector",
                              "example" : "env=prod",
                              "type" : "string"
                            }
                          },
                          "required" : [ "selector" ],
                          "type" : "object"
                        },
                        "server" : {
                          "description" : "Server where the traffic should be routed through",
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Server",
                              "example" : 80,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "id" ],
                          "title" : "LoadBalancerTargetServer",
                          "type" : "object"
                        },
                        "targets" : {
                          "description" : "List of selected targets",
                          "items" : {
                            "properties" : {
                              "health_status" : {
                                "items" : {
                                  "properties" : {
                                    "listen_port" : {
                                      "example" : 443,
                                      "type" : "integer"
                                    },
                                    "status" : {
                                      "enum" : [ "healthy", "unhealthy", "unknown" ],
                                      "example" : "healthy",
                                      "type" : "string"
                                    }
                                  },
                                  "type" : "object"
                                },
                                "type" : "array"
                              },
                              "server" : {
                                "properties" : {
                                  "id" : {
                                    "description" : "ID of the Server",
                                    "example" : 85,
                                    "type" : "integer"
                                  }
                                },
                                "required" : [ "id" ],
                                "type" : "object"
                              },
                              "type" : {
                                "example" : "server",
                                "type" : "string"
                              },
                              "use_private_ip" : {
                                "example" : false,
                                "type" : "boolean"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "type" : {
                          "description" : "Type of the resource",
                          "enum" : [ "server", "label_selector", "ip" ],
                          "type" : "string"
                        },
                        "use_private_ip" : {
                          "description" : "Use the private network IP instead of the public IP. Default value is false.",
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "type" ],
                      "title" : "LoadBalancerTarget",
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "public_net", "private_net", "location", "load_balancer_type", "protection", "labels", "created", "services", "targets", "algorithm", "outgoing_traffic", "ingoing_traffic", "included_traffic" ],
                "type" : "object"
              }
            },
            "required" : [ "load_balancer" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "c576bf33-6b54-46c8-a557-f3ae5110512d",
    "name" : "Get a Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers/900677624084873097",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"load_balancer\" : {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"load_balancer_type\" : {\n      \"max_targets\" : 25,\n      \"max_connections\" : 20000,\n      \"max_assigned_certificates\" : 10,\n      \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n      \"name\" : \"lb11\",\n      \"description\" : \"LB11\",\n      \"id\" : 1,\n      \"max_services\" : 5,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"private_net\" : [ {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    } ],\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"services\" : [ {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"domain\" : \"example.com\",\n          \"status_codes\" : [ \"2??\", \"3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"domain\" : \"example.com\",\n          \"status_codes\" : [ \"2??\", \"3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"domain\" : \"example.com\",\n          \"status_codes\" : [ \"2??\", \"3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"domain\" : \"example.com\",\n          \"status_codes\" : [ \"2??\", \"3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"domain\" : \"example.com\",\n          \"status_codes\" : [ \"2??\", \"3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"domain\" : \"example.com\",\n          \"status_codes\" : [ \"2??\", \"3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"domain\" : \"example.com\",\n          \"status_codes\" : [ \"2??\", \"3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"domain\" : \"example.com\",\n          \"status_codes\" : [ \"2??\", \"3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    } ],\n    \"ingoing_traffic\" : 3435559162787049294,\n    \"targets\" : [ {\n      \"use_private_ip\" : true,\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"health_status\" : [ {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      } ],\n      \"type\" : \"ip\",\n      \"targets\" : [ {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      } ]\n    }, {\n      \"use_private_ip\" : false,\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"health_status\" : [ {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      } ],\n      \"type\" : \"ip\",\n      \"targets\" : [ {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      } ]\n    }, {\n      \"use_private_ip\" : false,\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"health_status\" : [ {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      }, {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      } ],\n      \"type\" : \"server\",\n      \"targets\" : [ {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      }, {\n        \"use_private_ip\" : false,\n        \"server\" : {\n          \"id\" : 85\n        },\n        \"health_status\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"type\" : \"server\"\n      } ]\n    } ],\n    \"included_traffic\" : 10000,\n    \"public_net\" : {\n      \"ipv4\" : {\n        \"ip\" : \"1.2.3.4\",\n        \"dns_ptr\" : \"lb1.example.com\"\n      },\n      \"ipv6\" : {\n        \"ip\" : \"2001:db8::1\",\n        \"dns_ptr\" : \"lb1.example.com\"\n      },\n      \"enabled\" : true\n    },\n    \"labels\" : { },\n    \"outgoing_traffic\" : 8932307575195687083,\n    \"name\" : \"my-resource\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"id\" : 42,\n    \"algorithm\" : {\n      \"type\" : \"least_connections\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c576bf33-6b54-46c8-a557-f3ae5110512d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.738503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "load_balancer" : {
                "properties" : {
                  "algorithm" : {
                    "description" : "Algorithm of the Load Balancer",
                    "properties" : {
                      "type" : {
                        "description" : "Type of the algorithm",
                        "enum" : [ "round_robin", "least_connections" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "type" ],
                    "type" : "object"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "included_traffic" : {
                    "description" : "Free Traffic for the current billing period in bytes",
                    "example" : 10000,
                    "type" : "integer"
                  },
                  "ingoing_traffic" : {
                    "description" : "Inbound Traffic for the current billing period in bytes",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancer_type" : {
                    "properties" : {
                      "deprecated" : {
                        "description" : "Point in time when the Load Balancer type is deprecated (in ISO-8601 format)",
                        "example" : "2016-01-30T23:50:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Load Balancer type",
                        "example" : "LB11",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Load Balancer type",
                        "example" : 1,
                        "type" : "number"
                      },
                      "max_assigned_certificates" : {
                        "description" : "Number of SSL Certificates that can be assigned to a single Load Balancer",
                        "example" : 10,
                        "type" : "number"
                      },
                      "max_connections" : {
                        "description" : "Number of maximum simultaneous open connections",
                        "example" : 20000,
                        "type" : "number"
                      },
                      "max_services" : {
                        "description" : "Number of services a Load Balancer of this type can have",
                        "example" : 5,
                        "type" : "number"
                      },
                      "max_targets" : {
                        "description" : "Number of targets a single Load Balancer can have",
                        "example" : 25,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Load Balancer type",
                        "example" : "lb11",
                        "type" : "string"
                      },
                      "prices" : {
                        "description" : "Prices in different network zones",
                        "items" : {
                          "properties" : {
                            "location" : {
                              "description" : "Name of the Location the price is for",
                              "example" : "fsn1",
                              "type" : "string"
                            },
                            "price_hourly" : {
                              "description" : "Hourly costs for a Resource in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            },
                            "price_monthly" : {
                              "description" : "Monthly costs for a Resource in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            }
                          },
                          "required" : [ "location", "price_hourly", "price_monthly" ],
                          "type" : "object"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "id", "name", "description", "max_connections", "max_services", "max_targets", "max_assigned_certificates", "deprecated", "prices" ],
                    "type" : "object"
                  },
                  "location" : {
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "outgoing_traffic" : {
                    "description" : "Outbound Traffic for the current billing period in bytes",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "private_net" : {
                    "description" : "Private networks information",
                    "items" : {
                      "properties" : {
                        "ip" : {
                          "example" : "10.0.0.2",
                          "type" : "string"
                        },
                        "network" : {
                          "example" : 4711,
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "public_net" : {
                    "description" : "Public network information",
                    "properties" : {
                      "enabled" : {
                        "description" : "Public Interface enabled or not",
                        "type" : "boolean"
                      },
                      "ipv4" : {
                        "description" : "IP address (v4)",
                        "properties" : {
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv4 address of this Load Balancer",
                            "example" : "lb1.example.com",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "ip" : {
                            "description" : "IP address (v4) of this Load Balancer",
                            "example" : "1.2.3.4",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "ipv6" : {
                        "description" : "IP address (v6)",
                        "properties" : {
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv6 address of this Load Balancer",
                            "example" : "lb1.example.com",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "ip" : {
                            "description" : "IP address (v6) of this Load Balancer",
                            "example" : "2001:db8::1",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      }
                    },
                    "required" : [ "enabled", "ipv4", "ipv6" ],
                    "type" : "object"
                  },
                  "services" : {
                    "description" : "List of services that belong to this Load Balancer",
                    "items" : {
                      "properties" : {
                        "destination_port" : {
                          "description" : "Port the Load Balancer will balance to",
                          "example" : 80,
                          "type" : "integer"
                        },
                        "health_check" : {
                          "additionalProperties" : false,
                          "description" : "Service health check",
                          "properties" : {
                            "http" : {
                              "additionalProperties" : false,
                              "description" : "Additional configuration for protocol http",
                              "properties" : {
                                "domain" : {
                                  "description" : "Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.",
                                  "example" : "example.com",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "path" : {
                                  "description" : "HTTP path to use for health checks. May not contain literal spaces, use percent-encoding instead.",
                                  "example" : "/",
                                  "type" : "string"
                                },
                                "response" : {
                                  "description" : "String that must be contained in HTTP response in order to pass the health check",
                                  "example" : "{\"status\": \"ok\"}",
                                  "type" : "string"
                                },
                                "status_codes" : {
                                  "description" : "List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.",
                                  "example" : [ "2??", "3??" ],
                                  "items" : {
                                    "type" : "string"
                                  },
                                  "type" : "array"
                                },
                                "tls" : {
                                  "description" : "Use HTTPS for health check",
                                  "example" : false,
                                  "type" : "boolean"
                                }
                              },
                              "required" : [ "domain", "path" ],
                              "type" : "object"
                            },
                            "interval" : {
                              "description" : "Time interval in seconds health checks are performed",
                              "example" : 15,
                              "type" : "integer"
                            },
                            "port" : {
                              "description" : "Port the health check will be performed on",
                              "example" : 4711,
                              "type" : "integer"
                            },
                            "protocol" : {
                              "description" : "Type of the health check",
                              "enum" : [ "tcp", "http" ],
                              "example" : "http",
                              "type" : "string"
                            },
                            "retries" : {
                              "description" : "Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again",
                              "example" : 3,
                              "type" : "integer"
                            },
                            "timeout" : {
                              "description" : "Time in seconds after an attempt is considered a timeout",
                              "example" : 10,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "protocol", "port", "interval", "timeout", "retries" ],
                          "title" : "LoadBalancerServiceHealthCheck",
                          "type" : "object"
                        },
                        "http" : {
                          "description" : "Configuration option for protocols http and https",
                          "properties" : {
                            "certificates" : {
                              "description" : "IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"",
                              "example" : [ 897 ],
                              "items" : {
                                "type" : "integer"
                              },
                              "type" : "array"
                            },
                            "cookie_lifetime" : {
                              "description" : "Lifetime of the cookie used for sticky sessions",
                              "example" : 300,
                              "type" : "integer"
                            },
                            "cookie_name" : {
                              "description" : "Name of the cookie used for sticky sessions",
                              "example" : "HCLBSTICKY",
                              "type" : "string"
                            },
                            "redirect_http" : {
                              "description" : "Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`",
                              "example" : true,
                              "type" : "boolean"
                            },
                            "sticky_sessions" : {
                              "description" : "Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`",
                              "example" : true,
                              "type" : "boolean"
                            }
                          },
                          "title" : "LoadBalancerServiceHTTP",
                          "type" : "object"
                        },
                        "listen_port" : {
                          "description" : "Port the Load Balancer listens on",
                          "example" : 443,
                          "type" : "integer"
                        },
                        "protocol" : {
                          "description" : "Protocol of the Load Balancer",
                          "enum" : [ "tcp", "http", "https" ],
                          "example" : "https",
                          "type" : "string"
                        },
                        "proxyprotocol" : {
                          "description" : "Is Proxyprotocol enabled or not",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "protocol", "listen_port", "destination_port", "proxyprotocol", "health_check" ],
                      "title" : "LoadBalancerService",
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "targets" : {
                    "description" : "List of targets that belong to this Load Balancer",
                    "items" : {
                      "properties" : {
                        "health_status" : {
                          "description" : "List of health statuses of the services on this target",
                          "items" : {
                            "properties" : {
                              "listen_port" : {
                                "example" : 443,
                                "type" : "integer"
                              },
                              "status" : {
                                "enum" : [ "healthy", "unhealthy", "unknown" ],
                                "example" : "healthy",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "ip" : {
                          "description" : "IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.",
                          "properties" : {
                            "ip" : {
                              "description" : "IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.",
                              "example" : "203.0.113.1",
                              "type" : "string"
                            }
                          },
                          "required" : [ "ip" ],
                          "type" : "object"
                        },
                        "label_selector" : {
                          "description" : "Label selector and a list of selected targets",
                          "properties" : {
                            "selector" : {
                              "description" : "Label selector",
                              "example" : "env=prod",
                              "type" : "string"
                            }
                          },
                          "required" : [ "selector" ],
                          "type" : "object"
                        },
                        "server" : {
                          "description" : "Server where the traffic should be routed through",
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Server",
                              "example" : 80,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "id" ],
                          "title" : "LoadBalancerTargetServer",
                          "type" : "object"
                        },
                        "targets" : {
                          "description" : "List of selected targets",
                          "items" : {
                            "properties" : {
                              "health_status" : {
                                "items" : {
                                  "properties" : {
                                    "listen_port" : {
                                      "example" : 443,
                                      "type" : "integer"
                                    },
                                    "status" : {
                                      "enum" : [ "healthy", "unhealthy", "unknown" ],
                                      "example" : "healthy",
                                      "type" : "string"
                                    }
                                  },
                                  "type" : "object"
                                },
                                "type" : "array"
                              },
                              "server" : {
                                "properties" : {
                                  "id" : {
                                    "description" : "ID of the Server",
                                    "example" : 85,
                                    "type" : "integer"
                                  }
                                },
                                "required" : [ "id" ],
                                "type" : "object"
                              },
                              "type" : {
                                "example" : "server",
                                "type" : "string"
                              },
                              "use_private_ip" : {
                                "example" : false,
                                "type" : "boolean"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "type" : {
                          "description" : "Type of the resource",
                          "enum" : [ "server", "label_selector", "ip" ],
                          "type" : "string"
                        },
                        "use_private_ip" : {
                          "description" : "Use the private network IP instead of the public IP. Default value is false.",
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "type" ],
                      "title" : "LoadBalancerTarget",
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "public_net", "private_net", "location", "load_balancer_type", "protection", "labels", "created", "services", "targets", "algorithm", "outgoing_traffic", "ingoing_traffic", "included_traffic" ],
                "type" : "object"
              }
            },
            "required" : [ "load_balancer" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "5a1d8be9-b503-47f6-b9dc-86a498c81881",
    "name" : "Delete a Load Balancer - 204",
    "request" : {
      "urlPath" : "/load_balancers/3261440004516070077",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5a1d8be9-b503-47f6-b9dc-86a498c81881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.736782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "75cdc56d-ee3a-4365-a490-5efab02deed5",
    "name" : "Create a Load Balancer",
    "request" : {
      "urlPath" : "/load_balancers",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"create_load_balancer\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  },\n  \"load_balancer\" : {\n    \"algorithm\" : {\n      \"type\" : \"round_robin\"\n    },\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"id\" : 4711,\n    \"included_traffic\" : 654321,\n    \"ingoing_traffic\" : 123456,\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"load_balancer_type\" : {\n      \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n      \"description\" : \"LB11\",\n      \"id\" : 1,\n      \"max_assigned_certificates\" : 10,\n      \"max_connections\" : 20000,\n      \"max_services\" : 5,\n      \"max_targets\" : 25,\n      \"name\" : \"lb11\",\n      \"prices\" : [ {\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"location\" : {\n      \"city\" : \"Falkenstein\",\n      \"country\" : \"DE\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"latitude\" : 50.47612,\n      \"longitude\" : 12.370071,\n      \"name\" : \"fsn1\",\n      \"network_zone\" : \"eu-central\"\n    },\n    \"name\" : \"Web Frontend\",\n    \"outgoing_traffic\" : 123456,\n    \"private_net\" : [ {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    } ],\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"public_net\" : {\n      \"enabled\" : false,\n      \"ipv4\" : {\n        \"ip\" : \"1.2.3.4\"\n      },\n      \"ipv6\" : {\n        \"ip\" : \"2001:db8::1\"\n      }\n    },\n    \"services\" : [ {\n      \"destination_port\" : 80,\n      \"health_check\" : {\n        \"http\" : {\n          \"domain\" : \"example.com\",\n          \"path\" : \"/\",\n          \"response\" : \"{\\\"status\\\": \\\"ok\\\"}\",\n          \"status_codes\" : [ \"2??,3??\" ],\n          \"tls\" : false\n        },\n        \"interval\" : 15,\n        \"port\" : 4711,\n        \"protocol\" : \"http\",\n        \"retries\" : 3,\n        \"timeout\" : 10\n      },\n      \"http\" : {\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\",\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true\n      },\n      \"listen_port\" : 443,\n      \"protocol\" : \"http\",\n      \"proxyprotocol\" : false\n    } ],\n    \"targets\" : [ {\n      \"health_status\" : [ {\n        \"listen_port\" : 443,\n        \"status\" : \"healthy\"\n      } ],\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"targets\" : [ {\n        \"health_status\" : [ {\n          \"listen_port\" : 443,\n          \"status\" : \"healthy\"\n        } ],\n        \"server\" : {\n          \"id\" : 80\n        },\n        \"type\" : \"server\",\n        \"use_private_ip\" : true\n      } ],\n      \"type\" : \"server\",\n      \"use_private_ip\" : true\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75cdc56d-ee3a-4365-a490-5efab02deed5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.736703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "load_balancer" : {
                "properties" : {
                  "algorithm" : {
                    "description" : "Algorithm of the Load Balancer",
                    "properties" : {
                      "type" : {
                        "description" : "Type of the algorithm",
                        "enum" : [ "round_robin", "least_connections" ],
                        "type" : "string"
                      }
                    },
                    "required" : [ "type" ],
                    "type" : "object"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "included_traffic" : {
                    "description" : "Free Traffic for the current billing period in bytes",
                    "example" : 10000,
                    "type" : "integer"
                  },
                  "ingoing_traffic" : {
                    "description" : "Inbound Traffic for the current billing period in bytes",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "load_balancer_type" : {
                    "properties" : {
                      "deprecated" : {
                        "description" : "Point in time when the Load Balancer type is deprecated (in ISO-8601 format)",
                        "example" : "2016-01-30T23:50:00+00:00",
                        "nullable" : true,
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Load Balancer type",
                        "example" : "LB11",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Load Balancer type",
                        "example" : 1,
                        "type" : "number"
                      },
                      "max_assigned_certificates" : {
                        "description" : "Number of SSL Certificates that can be assigned to a single Load Balancer",
                        "example" : 10,
                        "type" : "number"
                      },
                      "max_connections" : {
                        "description" : "Number of maximum simultaneous open connections",
                        "example" : 20000,
                        "type" : "number"
                      },
                      "max_services" : {
                        "description" : "Number of services a Load Balancer of this type can have",
                        "example" : 5,
                        "type" : "number"
                      },
                      "max_targets" : {
                        "description" : "Number of targets a single Load Balancer can have",
                        "example" : 25,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Load Balancer type",
                        "example" : "lb11",
                        "type" : "string"
                      },
                      "prices" : {
                        "description" : "Prices in different network zones",
                        "items" : {
                          "properties" : {
                            "location" : {
                              "description" : "Name of the Location the price is for",
                              "example" : "fsn1",
                              "type" : "string"
                            },
                            "price_hourly" : {
                              "description" : "Hourly costs for a Resource in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            },
                            "price_monthly" : {
                              "description" : "Monthly costs for a Resource in this Location",
                              "properties" : {
                                "gross" : {
                                  "description" : "Price with VAT added",
                                  "example" : "1.1900000000000000",
                                  "type" : "string"
                                },
                                "net" : {
                                  "description" : "Price without VAT",
                                  "example" : "1.0000000000",
                                  "type" : "string"
                                }
                              },
                              "required" : [ "net", "gross" ],
                              "type" : "object"
                            }
                          },
                          "required" : [ "location", "price_hourly", "price_monthly" ],
                          "type" : "object"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "id", "name", "description", "max_connections", "max_services", "max_targets", "max_assigned_certificates", "deprecated", "prices" ],
                    "type" : "object"
                  },
                  "location" : {
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "outgoing_traffic" : {
                    "description" : "Outbound Traffic for the current billing period in bytes",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "private_net" : {
                    "description" : "Private networks information",
                    "items" : {
                      "properties" : {
                        "ip" : {
                          "example" : "10.0.0.2",
                          "type" : "string"
                        },
                        "network" : {
                          "example" : 4711,
                          "type" : "integer"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "public_net" : {
                    "description" : "Public network information",
                    "properties" : {
                      "enabled" : {
                        "description" : "Public Interface enabled or not",
                        "type" : "boolean"
                      },
                      "ipv4" : {
                        "description" : "IP address (v4)",
                        "properties" : {
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv4 address of this Load Balancer",
                            "example" : "lb1.example.com",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "ip" : {
                            "description" : "IP address (v4) of this Load Balancer",
                            "example" : "1.2.3.4",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "ipv6" : {
                        "description" : "IP address (v6)",
                        "properties" : {
                          "dns_ptr" : {
                            "description" : "Reverse DNS PTR entry for the IPv6 address of this Load Balancer",
                            "example" : "lb1.example.com",
                            "nullable" : true,
                            "type" : "string"
                          },
                          "ip" : {
                            "description" : "IP address (v6) of this Load Balancer",
                            "example" : "2001:db8::1",
                            "nullable" : true,
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      }
                    },
                    "required" : [ "enabled", "ipv4", "ipv6" ],
                    "type" : "object"
                  },
                  "services" : {
                    "description" : "List of services that belong to this Load Balancer",
                    "items" : {
                      "properties" : {
                        "destination_port" : {
                          "description" : "Port the Load Balancer will balance to",
                          "example" : 80,
                          "type" : "integer"
                        },
                        "health_check" : {
                          "additionalProperties" : false,
                          "description" : "Service health check",
                          "properties" : {
                            "http" : {
                              "additionalProperties" : false,
                              "description" : "Additional configuration for protocol http",
                              "properties" : {
                                "domain" : {
                                  "description" : "Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.",
                                  "example" : "example.com",
                                  "nullable" : true,
                                  "type" : "string"
                                },
                                "path" : {
                                  "description" : "HTTP path to use for health checks. May not contain literal spaces, use percent-encoding instead.",
                                  "example" : "/",
                                  "type" : "string"
                                },
                                "response" : {
                                  "description" : "String that must be contained in HTTP response in order to pass the health check",
                                  "example" : "{\"status\": \"ok\"}",
                                  "type" : "string"
                                },
                                "status_codes" : {
                                  "description" : "List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.",
                                  "example" : [ "2??", "3??" ],
                                  "items" : {
                                    "type" : "string"
                                  },
                                  "type" : "array"
                                },
                                "tls" : {
                                  "description" : "Use HTTPS for health check",
                                  "example" : false,
                                  "type" : "boolean"
                                }
                              },
                              "required" : [ "domain", "path" ],
                              "type" : "object"
                            },
                            "interval" : {
                              "description" : "Time interval in seconds health checks are performed",
                              "example" : 15,
                              "type" : "integer"
                            },
                            "port" : {
                              "description" : "Port the health check will be performed on",
                              "example" : 4711,
                              "type" : "integer"
                            },
                            "protocol" : {
                              "description" : "Type of the health check",
                              "enum" : [ "tcp", "http" ],
                              "example" : "http",
                              "type" : "string"
                            },
                            "retries" : {
                              "description" : "Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again",
                              "example" : 3,
                              "type" : "integer"
                            },
                            "timeout" : {
                              "description" : "Time in seconds after an attempt is considered a timeout",
                              "example" : 10,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "protocol", "port", "interval", "timeout", "retries" ],
                          "title" : "LoadBalancerServiceHealthCheck",
                          "type" : "object"
                        },
                        "http" : {
                          "description" : "Configuration option for protocols http and https",
                          "properties" : {
                            "certificates" : {
                              "description" : "IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"",
                              "example" : [ 897 ],
                              "items" : {
                                "type" : "integer"
                              },
                              "type" : "array"
                            },
                            "cookie_lifetime" : {
                              "description" : "Lifetime of the cookie used for sticky sessions",
                              "example" : 300,
                              "type" : "integer"
                            },
                            "cookie_name" : {
                              "description" : "Name of the cookie used for sticky sessions",
                              "example" : "HCLBSTICKY",
                              "type" : "string"
                            },
                            "redirect_http" : {
                              "description" : "Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`",
                              "example" : true,
                              "type" : "boolean"
                            },
                            "sticky_sessions" : {
                              "description" : "Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`",
                              "example" : true,
                              "type" : "boolean"
                            }
                          },
                          "title" : "LoadBalancerServiceHTTP",
                          "type" : "object"
                        },
                        "listen_port" : {
                          "description" : "Port the Load Balancer listens on",
                          "example" : 443,
                          "type" : "integer"
                        },
                        "protocol" : {
                          "description" : "Protocol of the Load Balancer",
                          "enum" : [ "tcp", "http", "https" ],
                          "example" : "https",
                          "type" : "string"
                        },
                        "proxyprotocol" : {
                          "description" : "Is Proxyprotocol enabled or not",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "protocol", "listen_port", "destination_port", "proxyprotocol", "health_check" ],
                      "title" : "LoadBalancerService",
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "targets" : {
                    "description" : "List of targets that belong to this Load Balancer",
                    "items" : {
                      "properties" : {
                        "health_status" : {
                          "description" : "List of health statuses of the services on this target",
                          "items" : {
                            "properties" : {
                              "listen_port" : {
                                "example" : 443,
                                "type" : "integer"
                              },
                              "status" : {
                                "enum" : [ "healthy", "unhealthy", "unknown" ],
                                "example" : "healthy",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "ip" : {
                          "description" : "IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.",
                          "properties" : {
                            "ip" : {
                              "description" : "IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.",
                              "example" : "203.0.113.1",
                              "type" : "string"
                            }
                          },
                          "required" : [ "ip" ],
                          "type" : "object"
                        },
                        "label_selector" : {
                          "description" : "Label selector and a list of selected targets",
                          "properties" : {
                            "selector" : {
                              "description" : "Label selector",
                              "example" : "env=prod",
                              "type" : "string"
                            }
                          },
                          "required" : [ "selector" ],
                          "type" : "object"
                        },
                        "server" : {
                          "description" : "Server where the traffic should be routed through",
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Server",
                              "example" : 80,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "id" ],
                          "title" : "LoadBalancerTargetServer",
                          "type" : "object"
                        },
                        "targets" : {
                          "description" : "List of selected targets",
                          "items" : {
                            "properties" : {
                              "health_status" : {
                                "items" : {
                                  "properties" : {
                                    "listen_port" : {
                                      "example" : 443,
                                      "type" : "integer"
                                    },
                                    "status" : {
                                      "enum" : [ "healthy", "unhealthy", "unknown" ],
                                      "example" : "healthy",
                                      "type" : "string"
                                    }
                                  },
                                  "type" : "object"
                                },
                                "type" : "array"
                              },
                              "server" : {
                                "properties" : {
                                  "id" : {
                                    "description" : "ID of the Server",
                                    "example" : 85,
                                    "type" : "integer"
                                  }
                                },
                                "required" : [ "id" ],
                                "type" : "object"
                              },
                              "type" : {
                                "example" : "server",
                                "type" : "string"
                              },
                              "use_private_ip" : {
                                "example" : false,
                                "type" : "boolean"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "type" : {
                          "description" : "Type of the resource",
                          "enum" : [ "server", "label_selector", "ip" ],
                          "type" : "string"
                        },
                        "use_private_ip" : {
                          "description" : "Use the private network IP instead of the public IP. Default value is false.",
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "type" ],
                      "title" : "LoadBalancerTarget",
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "public_net", "private_net", "location", "load_balancer_type", "protection", "labels", "created", "services", "targets", "algorithm", "outgoing_traffic", "ingoing_traffic", "included_traffic" ],
                "type" : "object"
              }
            },
            "required" : [ "load_balancer", "action" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "9a5f0ce8-e879-4785-9ed8-f2d6e7a3bf21",
    "name" : "Get all Load Balancers",
    "request" : {
      "urlPath" : "/load_balancers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  },\n  \"load_balancers\" : [ {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"load_balancer_type\" : {\n      \"max_targets\" : 25,\n      \"max_connections\" : 20000,\n      \"max_assigned_certificates\" : 10,\n      \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n      \"name\" : \"lb11\",\n      \"description\" : \"LB11\",\n      \"id\" : 1,\n      \"max_services\" : 5,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"private_net\" : [ {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    } ],\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"services\" : [ {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    } ],\n    \"ingoing_traffic\" : 6445079043089964741,\n    \"targets\" : [ {\n      \"use_private_ip\" : true,\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"health_status\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"type\" : \"server\",\n      \"targets\" : [ { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"included_traffic\" : 10000,\n    \"public_net\" : {\n      \"ipv4\" : {\n        \"ip\" : \"1.2.3.4\",\n        \"dns_ptr\" : \"lb1.example.com\"\n      },\n      \"ipv6\" : {\n        \"ip\" : \"2001:db8::1\",\n        \"dns_ptr\" : \"lb1.example.com\"\n      },\n      \"enabled\" : true\n    },\n    \"labels\" : { },\n    \"outgoing_traffic\" : 5694341630521881460,\n    \"name\" : \"my-resource\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"id\" : 42,\n    \"algorithm\" : {\n      \"type\" : \"round_robin\"\n    }\n  }, {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"load_balancer_type\" : {\n      \"max_targets\" : 25,\n      \"max_connections\" : 20000,\n      \"max_assigned_certificates\" : 10,\n      \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n      \"name\" : \"lb11\",\n      \"description\" : \"LB11\",\n      \"id\" : 1,\n      \"max_services\" : 5,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"private_net\" : [ {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    } ],\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"services\" : [ {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    } ],\n    \"ingoing_traffic\" : 5397836650839734,\n    \"targets\" : [ {\n      \"use_private_ip\" : true,\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"health_status\" : [ { }, { }, { } ],\n      \"type\" : \"label_selector\",\n      \"targets\" : [ { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"included_traffic\" : 10000,\n    \"public_net\" : {\n      \"ipv4\" : {\n        \"ip\" : \"1.2.3.4\",\n        \"dns_ptr\" : \"lb1.example.com\"\n      },\n      \"ipv6\" : {\n        \"ip\" : \"2001:db8::1\",\n        \"dns_ptr\" : \"lb1.example.com\"\n      },\n      \"enabled\" : true\n    },\n    \"labels\" : { },\n    \"outgoing_traffic\" : 585138308864761403,\n    \"name\" : \"my-resource\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"id\" : 42,\n    \"algorithm\" : {\n      \"type\" : \"least_connections\"\n    }\n  }, {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"load_balancer_type\" : {\n      \"max_targets\" : 25,\n      \"max_connections\" : 20000,\n      \"max_assigned_certificates\" : 10,\n      \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n      \"name\" : \"lb11\",\n      \"description\" : \"LB11\",\n      \"id\" : 1,\n      \"max_services\" : 5,\n      \"prices\" : [ {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      }, {\n        \"price_monthly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        },\n        \"location\" : \"fsn1\",\n        \"price_hourly\" : {\n          \"gross\" : \"1.1900000000000000\",\n          \"net\" : \"1.0000000000\"\n        }\n      } ]\n    },\n    \"private_net\" : [ {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    }, {\n      \"ip\" : \"10.0.0.2\",\n      \"network\" : 4711\n    } ],\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"services\" : [ {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    }, {\n      \"protocol\" : \"https\",\n      \"listen_port\" : 443,\n      \"destination_port\" : 80,\n      \"http\" : {\n        \"redirect_http\" : true,\n        \"sticky_sessions\" : true,\n        \"certificates\" : [ 897 ],\n        \"cookie_lifetime\" : 300,\n        \"cookie_name\" : \"HCLBSTICKY\"\n      },\n      \"health_check\" : {\n        \"retries\" : 3,\n        \"protocol\" : \"http\",\n        \"port\" : 4711,\n        \"http\" : {\n          \"path\" : \"/\",\n          \"domain\" : \"example.com\"\n        },\n        \"interval\" : 15,\n        \"timeout\" : 10\n      },\n      \"proxyprotocol\" : false\n    } ],\n    \"ingoing_traffic\" : 8783665645466582393,\n    \"targets\" : [ {\n      \"use_private_ip\" : true,\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"health_status\" : [ { } ],\n      \"type\" : \"ip\",\n      \"targets\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"use_private_ip\" : true,\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"health_status\" : [ { }, { }, { }, { }, { } ],\n      \"type\" : \"server\",\n      \"targets\" : [ { }, { }, { } ]\n    }, {\n      \"use_private_ip\" : false,\n      \"server\" : {\n        \"id\" : 80\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"ip\" : {\n        \"ip\" : \"203.0.113.1\"\n      },\n      \"health_status\" : [ { } ],\n      \"type\" : \"label_selector\",\n      \"targets\" : [ { }, { }, { } ]\n    } ],\n    \"included_traffic\" : 10000,\n    \"public_net\" : {\n      \"ipv4\" : {\n        \"ip\" : \"1.2.3.4\",\n        \"dns_ptr\" : \"lb1.example.com\"\n      },\n      \"ipv6\" : {\n        \"ip\" : \"2001:db8::1\",\n        \"dns_ptr\" : \"lb1.example.com\"\n      },\n      \"enabled\" : false\n    },\n    \"labels\" : { },\n    \"outgoing_traffic\" : 4300518351675543553,\n    \"name\" : \"my-resource\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"id\" : 42,\n    \"algorithm\" : {\n      \"type\" : \"round_robin\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a5f0ce8-e879-4785-9ed8-f2d6e7a3bf21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.7359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "load_balancers" : {
                "items" : {
                  "properties" : {
                    "algorithm" : {
                      "description" : "Algorithm of the Load Balancer",
                      "properties" : {
                        "type" : {
                          "description" : "Type of the algorithm",
                          "enum" : [ "round_robin", "least_connections" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "type" ],
                      "type" : "object"
                    },
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "included_traffic" : {
                      "description" : "Free Traffic for the current billing period in bytes",
                      "example" : 10000,
                      "type" : "integer"
                    },
                    "ingoing_traffic" : {
                      "description" : "Inbound Traffic for the current billing period in bytes",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "load_balancer_type" : {
                      "properties" : {
                        "deprecated" : {
                          "description" : "Point in time when the Load Balancer type is deprecated (in ISO-8601 format)",
                          "example" : "2016-01-30T23:50:00+00:00",
                          "nullable" : true,
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "Description of the Load Balancer type",
                          "example" : "LB11",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Load Balancer type",
                          "example" : 1,
                          "type" : "number"
                        },
                        "max_assigned_certificates" : {
                          "description" : "Number of SSL Certificates that can be assigned to a single Load Balancer",
                          "example" : 10,
                          "type" : "number"
                        },
                        "max_connections" : {
                          "description" : "Number of maximum simultaneous open connections",
                          "example" : 20000,
                          "type" : "number"
                        },
                        "max_services" : {
                          "description" : "Number of services a Load Balancer of this type can have",
                          "example" : 5,
                          "type" : "number"
                        },
                        "max_targets" : {
                          "description" : "Number of targets a single Load Balancer can have",
                          "example" : 25,
                          "type" : "number"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Load Balancer type",
                          "example" : "lb11",
                          "type" : "string"
                        },
                        "prices" : {
                          "description" : "Prices in different network zones",
                          "items" : {
                            "properties" : {
                              "location" : {
                                "description" : "Name of the Location the price is for",
                                "example" : "fsn1",
                                "type" : "string"
                              },
                              "price_hourly" : {
                                "description" : "Hourly costs for a Resource in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              },
                              "price_monthly" : {
                                "description" : "Monthly costs for a Resource in this Location",
                                "properties" : {
                                  "gross" : {
                                    "description" : "Price with VAT added",
                                    "example" : "1.1900000000000000",
                                    "type" : "string"
                                  },
                                  "net" : {
                                    "description" : "Price without VAT",
                                    "example" : "1.0000000000",
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "net", "gross" ],
                                "type" : "object"
                              }
                            },
                            "required" : [ "location", "price_hourly", "price_monthly" ],
                            "type" : "object"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "id", "name", "description", "max_connections", "max_services", "max_targets", "max_assigned_certificates", "deprecated", "prices" ],
                      "type" : "object"
                    },
                    "location" : {
                      "properties" : {
                        "city" : {
                          "description" : "City the Location is closest to",
                          "example" : "Falkenstein",
                          "type" : "string"
                        },
                        "country" : {
                          "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                          "example" : "DE",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "Description of the Location",
                          "example" : "Falkenstein DC Park 1",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Location",
                          "example" : 1,
                          "type" : "number"
                        },
                        "latitude" : {
                          "description" : "Latitude of the city closest to the Location",
                          "example" : 50.47612,
                          "type" : "number"
                        },
                        "longitude" : {
                          "description" : "Longitude of the city closest to the Location",
                          "example" : 12.370071,
                          "type" : "number"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Location",
                          "example" : "fsn1",
                          "type" : "string"
                        },
                        "network_zone" : {
                          "description" : "Name of network zone this Location resides in",
                          "example" : "eu-central",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Name of the Resource. Must be unique per Project.",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "outgoing_traffic" : {
                      "description" : "Outbound Traffic for the current billing period in bytes",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "private_net" : {
                      "description" : "Private networks information",
                      "items" : {
                        "properties" : {
                          "ip" : {
                            "example" : "10.0.0.2",
                            "type" : "string"
                          },
                          "network" : {
                            "example" : 4711,
                            "type" : "integer"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "protection" : {
                      "description" : "Protection configuration for the Resource",
                      "properties" : {
                        "delete" : {
                          "description" : "If true, prevents the Resource from being deleted",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "delete" ],
                      "type" : "object"
                    },
                    "public_net" : {
                      "description" : "Public network information",
                      "properties" : {
                        "enabled" : {
                          "description" : "Public Interface enabled or not",
                          "type" : "boolean"
                        },
                        "ipv4" : {
                          "description" : "IP address (v4)",
                          "properties" : {
                            "dns_ptr" : {
                              "description" : "Reverse DNS PTR entry for the IPv4 address of this Load Balancer",
                              "example" : "lb1.example.com",
                              "nullable" : true,
                              "type" : "string"
                            },
                            "ip" : {
                              "description" : "IP address (v4) of this Load Balancer",
                              "example" : "1.2.3.4",
                              "nullable" : true,
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "ipv6" : {
                          "description" : "IP address (v6)",
                          "properties" : {
                            "dns_ptr" : {
                              "description" : "Reverse DNS PTR entry for the IPv6 address of this Load Balancer",
                              "example" : "lb1.example.com",
                              "nullable" : true,
                              "type" : "string"
                            },
                            "ip" : {
                              "description" : "IP address (v6) of this Load Balancer",
                              "example" : "2001:db8::1",
                              "nullable" : true,
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        }
                      },
                      "required" : [ "enabled", "ipv4", "ipv6" ],
                      "type" : "object"
                    },
                    "services" : {
                      "description" : "List of services that belong to this Load Balancer",
                      "items" : {
                        "properties" : {
                          "destination_port" : {
                            "description" : "Port the Load Balancer will balance to",
                            "example" : 80,
                            "type" : "integer"
                          },
                          "health_check" : {
                            "additionalProperties" : false,
                            "description" : "Service health check",
                            "properties" : {
                              "http" : {
                                "additionalProperties" : false,
                                "description" : "Additional configuration for protocol http",
                                "properties" : {
                                  "domain" : {
                                    "description" : "Host header to send in the HTTP request. May not contain spaces, percent or backslash symbols. Can be null, in that case no host header is sent.",
                                    "example" : "example.com",
                                    "nullable" : true,
                                    "type" : "string"
                                  },
                                  "path" : {
                                    "description" : "HTTP path to use for health checks. May not contain literal spaces, use percent-encoding instead.",
                                    "example" : "/",
                                    "type" : "string"
                                  },
                                  "response" : {
                                    "description" : "String that must be contained in HTTP response in order to pass the health check",
                                    "example" : "{\"status\": \"ok\"}",
                                    "type" : "string"
                                  },
                                  "status_codes" : {
                                    "description" : "List of returned HTTP status codes in order to pass the health check. Supports the wildcards `?` for exactly one character and `*` for multiple ones. The default is to pass the health check for any status code between 2?? and 3??.",
                                    "example" : [ "2??", "3??" ],
                                    "items" : {
                                      "type" : "string"
                                    },
                                    "type" : "array"
                                  },
                                  "tls" : {
                                    "description" : "Use HTTPS for health check",
                                    "example" : false,
                                    "type" : "boolean"
                                  }
                                },
                                "required" : [ "domain", "path" ],
                                "type" : "object"
                              },
                              "interval" : {
                                "description" : "Time interval in seconds health checks are performed",
                                "example" : 15,
                                "type" : "integer"
                              },
                              "port" : {
                                "description" : "Port the health check will be performed on",
                                "example" : 4711,
                                "type" : "integer"
                              },
                              "protocol" : {
                                "description" : "Type of the health check",
                                "enum" : [ "tcp", "http" ],
                                "example" : "http",
                                "type" : "string"
                              },
                              "retries" : {
                                "description" : "Unsuccessful retries needed until a target is considered unhealthy; an unhealthy target needs the same number of successful retries to become healthy again",
                                "example" : 3,
                                "type" : "integer"
                              },
                              "timeout" : {
                                "description" : "Time in seconds after an attempt is considered a timeout",
                                "example" : 10,
                                "type" : "integer"
                              }
                            },
                            "required" : [ "protocol", "port", "interval", "timeout", "retries" ],
                            "title" : "LoadBalancerServiceHealthCheck",
                            "type" : "object"
                          },
                          "http" : {
                            "description" : "Configuration option for protocols http and https",
                            "properties" : {
                              "certificates" : {
                                "description" : "IDs of the Certificates to use for TLS/SSL termination by the Load Balancer; empty for TLS/SSL passthrough or if `protocol` is \"http\"",
                                "example" : [ 897 ],
                                "items" : {
                                  "type" : "integer"
                                },
                                "type" : "array"
                              },
                              "cookie_lifetime" : {
                                "description" : "Lifetime of the cookie used for sticky sessions",
                                "example" : 300,
                                "type" : "integer"
                              },
                              "cookie_name" : {
                                "description" : "Name of the cookie used for sticky sessions",
                                "example" : "HCLBSTICKY",
                                "type" : "string"
                              },
                              "redirect_http" : {
                                "description" : "Redirect HTTP requests to HTTPS. Only available if protocol is \"https\". Default `false`",
                                "example" : true,
                                "type" : "boolean"
                              },
                              "sticky_sessions" : {
                                "description" : "Use sticky sessions. Only available if protocol is \"http\" or \"https\". Default `false`",
                                "example" : true,
                                "type" : "boolean"
                              }
                            },
                            "title" : "LoadBalancerServiceHTTP",
                            "type" : "object"
                          },
                          "listen_port" : {
                            "description" : "Port the Load Balancer listens on",
                            "example" : 443,
                            "type" : "integer"
                          },
                          "protocol" : {
                            "description" : "Protocol of the Load Balancer",
                            "enum" : [ "tcp", "http", "https" ],
                            "example" : "https",
                            "type" : "string"
                          },
                          "proxyprotocol" : {
                            "description" : "Is Proxyprotocol enabled or not",
                            "example" : false,
                            "type" : "boolean"
                          }
                        },
                        "required" : [ "protocol", "listen_port", "destination_port", "proxyprotocol", "health_check" ],
                        "title" : "LoadBalancerService",
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "targets" : {
                      "description" : "List of targets that belong to this Load Balancer",
                      "items" : {
                        "properties" : {
                          "health_status" : {
                            "description" : "List of health statuses of the services on this target",
                            "items" : {
                              "properties" : {
                                "listen_port" : {
                                  "example" : 443,
                                  "type" : "integer"
                                },
                                "status" : {
                                  "enum" : [ "healthy", "unhealthy", "unknown" ],
                                  "example" : "healthy",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : "array"
                          },
                          "ip" : {
                            "description" : "IP targets where the traffic should be routed through. It is only possible to use the (Public or vSwitch) IPs of Hetzner Online Root Servers belonging to the project owner. IPs belonging to other users are blocked. Additionally IPs belonging to services provided by Hetzner Cloud (Servers, Load Balancers, ...) are blocked as well.",
                            "properties" : {
                              "ip" : {
                                "description" : "IP of a server that belongs to the same customer (public IPv4/IPv6) or private IP in a Subnetwork type vswitch.",
                                "example" : "203.0.113.1",
                                "type" : "string"
                              }
                            },
                            "required" : [ "ip" ],
                            "type" : "object"
                          },
                          "label_selector" : {
                            "description" : "Label selector and a list of selected targets",
                            "properties" : {
                              "selector" : {
                                "description" : "Label selector",
                                "example" : "env=prod",
                                "type" : "string"
                              }
                            },
                            "required" : [ "selector" ],
                            "type" : "object"
                          },
                          "server" : {
                            "description" : "Server where the traffic should be routed through",
                            "properties" : {
                              "id" : {
                                "description" : "ID of the Server",
                                "example" : 80,
                                "type" : "integer"
                              }
                            },
                            "required" : [ "id" ],
                            "title" : "LoadBalancerTargetServer",
                            "type" : "object"
                          },
                          "targets" : {
                            "description" : "List of selected targets",
                            "items" : {
                              "properties" : {
                                "health_status" : {
                                  "items" : {
                                    "properties" : {
                                      "listen_port" : {
                                        "example" : 443,
                                        "type" : "integer"
                                      },
                                      "status" : {
                                        "enum" : [ "healthy", "unhealthy", "unknown" ],
                                        "example" : "healthy",
                                        "type" : "string"
                                      }
                                    },
                                    "type" : "object"
                                  },
                                  "type" : "array"
                                },
                                "server" : {
                                  "properties" : {
                                    "id" : {
                                      "description" : "ID of the Server",
                                      "example" : 85,
                                      "type" : "integer"
                                    }
                                  },
                                  "required" : [ "id" ],
                                  "type" : "object"
                                },
                                "type" : {
                                  "example" : "server",
                                  "type" : "string"
                                },
                                "use_private_ip" : {
                                  "example" : false,
                                  "type" : "boolean"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : "array"
                          },
                          "type" : {
                            "description" : "Type of the resource",
                            "enum" : [ "server", "label_selector", "ip" ],
                            "type" : "string"
                          },
                          "use_private_ip" : {
                            "description" : "Use the private network IP instead of the public IP. Default value is false.",
                            "type" : "boolean"
                          }
                        },
                        "required" : [ "type" ],
                        "title" : "LoadBalancerTarget",
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "required" : [ "id", "name", "public_net", "private_net", "location", "load_balancer_type", "protection", "labels", "created", "services", "targets", "algorithm", "outgoing_traffic", "ingoing_traffic", "included_traffic" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "load_balancers" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "53b8d98a-e4ba-4d95-aac8-5b759442a26b",
    "name" : "Get a Load Balancer Type",
    "request" : {
      "urlPath" : "/load_balancer_types/3299476124080554471",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"load_balancer_type\" : {\n    \"max_targets\" : 25,\n    \"max_connections\" : 20000,\n    \"max_assigned_certificates\" : 10,\n    \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"lb11\",\n    \"description\" : \"LB11\",\n    \"id\" : 1,\n    \"max_services\" : 5,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53b8d98a-e4ba-4d95-aac8-5b759442a26b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.733511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "load_balancer_type" : {
                "properties" : {
                  "deprecated" : {
                    "description" : "Point in time when the Load Balancer type is deprecated (in ISO-8601 format)",
                    "example" : "2016-01-30T23:50:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the Load Balancer type",
                    "example" : "LB11",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Load Balancer type",
                    "example" : 1,
                    "type" : "number"
                  },
                  "max_assigned_certificates" : {
                    "description" : "Number of SSL Certificates that can be assigned to a single Load Balancer",
                    "example" : 10,
                    "type" : "number"
                  },
                  "max_connections" : {
                    "description" : "Number of maximum simultaneous open connections",
                    "example" : 20000,
                    "type" : "number"
                  },
                  "max_services" : {
                    "description" : "Number of services a Load Balancer of this type can have",
                    "example" : 5,
                    "type" : "number"
                  },
                  "max_targets" : {
                    "description" : "Number of targets a single Load Balancer can have",
                    "example" : 25,
                    "type" : "number"
                  },
                  "name" : {
                    "description" : "Unique identifier of the Load Balancer type",
                    "example" : "lb11",
                    "type" : "string"
                  },
                  "prices" : {
                    "description" : "Prices in different network zones",
                    "items" : {
                      "properties" : {
                        "location" : {
                          "description" : "Name of the Location the price is for",
                          "example" : "fsn1",
                          "type" : "string"
                        },
                        "price_hourly" : {
                          "description" : "Hourly costs for a Resource in this Location",
                          "properties" : {
                            "gross" : {
                              "description" : "Price with VAT added",
                              "example" : "1.1900000000000000",
                              "type" : "string"
                            },
                            "net" : {
                              "description" : "Price without VAT",
                              "example" : "1.0000000000",
                              "type" : "string"
                            }
                          },
                          "required" : [ "net", "gross" ],
                          "type" : "object"
                        },
                        "price_monthly" : {
                          "description" : "Monthly costs for a Resource in this Location",
                          "properties" : {
                            "gross" : {
                              "description" : "Price with VAT added",
                              "example" : "1.1900000000000000",
                              "type" : "string"
                            },
                            "net" : {
                              "description" : "Price without VAT",
                              "example" : "1.0000000000",
                              "type" : "string"
                            }
                          },
                          "required" : [ "net", "gross" ],
                          "type" : "object"
                        }
                      },
                      "required" : [ "location", "price_hourly", "price_monthly" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "description", "max_connections", "max_services", "max_targets", "max_assigned_certificates", "deprecated", "prices" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "446cae18-5cca-4ac5-bcff-06b8827a47d7",
    "name" : "Get all Load Balancer Types",
    "request" : {
      "urlPath" : "/load_balancer_types",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"load_balancer_types\" : [ {\n    \"max_targets\" : 25,\n    \"max_connections\" : 20000,\n    \"max_assigned_certificates\" : 10,\n    \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"lb11\",\n    \"description\" : \"LB11\",\n    \"id\" : 1,\n    \"max_services\" : 5,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"max_targets\" : 25,\n    \"max_connections\" : 20000,\n    \"max_assigned_certificates\" : 10,\n    \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"lb11\",\n    \"description\" : \"LB11\",\n    \"id\" : 1,\n    \"max_services\" : 5,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"max_targets\" : 25,\n    \"max_connections\" : 20000,\n    \"max_assigned_certificates\" : 10,\n    \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"lb11\",\n    \"description\" : \"LB11\",\n    \"id\" : 1,\n    \"max_services\" : 5,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"max_targets\" : 25,\n    \"max_connections\" : 20000,\n    \"max_assigned_certificates\" : 10,\n    \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"lb11\",\n    \"description\" : \"LB11\",\n    \"id\" : 1,\n    \"max_services\" : 5,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"max_targets\" : 25,\n    \"max_connections\" : 20000,\n    \"max_assigned_certificates\" : 10,\n    \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"lb11\",\n    \"description\" : \"LB11\",\n    \"id\" : 1,\n    \"max_services\" : 5,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  }, {\n    \"max_targets\" : 25,\n    \"max_connections\" : 20000,\n    \"max_assigned_certificates\" : 10,\n    \"deprecated\" : \"2016-01-30T23:50:00+00:00\",\n    \"name\" : \"lb11\",\n    \"description\" : \"LB11\",\n    \"id\" : 1,\n    \"max_services\" : 5,\n    \"prices\" : [ {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    }, {\n      \"price_monthly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      },\n      \"location\" : \"fsn1\",\n      \"price_hourly\" : {\n        \"gross\" : \"1.1900000000000000\",\n        \"net\" : \"1.0000000000\"\n      }\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "446cae18-5cca-4ac5-bcff-06b8827a47d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.733211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "load_balancer_types" : {
                "items" : {
                  "properties" : {
                    "deprecated" : {
                      "description" : "Point in time when the Load Balancer type is deprecated (in ISO-8601 format)",
                      "example" : "2016-01-30T23:50:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "description" : {
                      "description" : "Description of the Load Balancer type",
                      "example" : "LB11",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Load Balancer type",
                      "example" : 1,
                      "type" : "number"
                    },
                    "max_assigned_certificates" : {
                      "description" : "Number of SSL Certificates that can be assigned to a single Load Balancer",
                      "example" : 10,
                      "type" : "number"
                    },
                    "max_connections" : {
                      "description" : "Number of maximum simultaneous open connections",
                      "example" : 20000,
                      "type" : "number"
                    },
                    "max_services" : {
                      "description" : "Number of services a Load Balancer of this type can have",
                      "example" : 5,
                      "type" : "number"
                    },
                    "max_targets" : {
                      "description" : "Number of targets a single Load Balancer can have",
                      "example" : 25,
                      "type" : "number"
                    },
                    "name" : {
                      "description" : "Unique identifier of the Load Balancer type",
                      "example" : "lb11",
                      "type" : "string"
                    },
                    "prices" : {
                      "description" : "Prices in different network zones",
                      "items" : {
                        "properties" : {
                          "location" : {
                            "description" : "Name of the Location the price is for",
                            "example" : "fsn1",
                            "type" : "string"
                          },
                          "price_hourly" : {
                            "description" : "Hourly costs for a Resource in this Location",
                            "properties" : {
                              "gross" : {
                                "description" : "Price with VAT added",
                                "example" : "1.1900000000000000",
                                "type" : "string"
                              },
                              "net" : {
                                "description" : "Price without VAT",
                                "example" : "1.0000000000",
                                "type" : "string"
                              }
                            },
                            "required" : [ "net", "gross" ],
                            "type" : "object"
                          },
                          "price_monthly" : {
                            "description" : "Monthly costs for a Resource in this Location",
                            "properties" : {
                              "gross" : {
                                "description" : "Price with VAT added",
                                "example" : "1.1900000000000000",
                                "type" : "string"
                              },
                              "net" : {
                                "description" : "Price without VAT",
                                "example" : "1.0000000000",
                                "type" : "string"
                              }
                            },
                            "required" : [ "net", "gross" ],
                            "type" : "object"
                          }
                        },
                        "required" : [ "location", "price_hourly", "price_monthly" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "required" : [ "id", "name", "description", "max_connections", "max_services", "max_targets", "max_assigned_certificates", "deprecated", "prices" ],
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "load_balancer_types" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "42bc622b-ae01-4126-8812-fa160699f5d0",
    "name" : "Get an ISO",
    "request" : {
      "urlPath" : "/isos/5936423873441494376",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"iso\" : {\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"name\" : \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n    \"description\" : \"FreeBSD 11.0 x64\",\n    \"id\" : 42,\n    \"type\" : \"private\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42bc622b-ae01-4126-8812-fa160699f5d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.732427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "iso" : {
                "properties" : {
                  "deprecated" : {
                    "description" : "ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.",
                    "example" : "2018-02-28T00:00:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the ISO",
                    "example" : "FreeBSD 11.0 x64",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "name" : {
                    "description" : "Unique identifier of the ISO. Only set for public ISOs",
                    "example" : "FreeBSD-11.0-RELEASE-amd64-dvd1",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "Type of the ISO",
                    "enum" : [ "public", "private" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "description", "type", "deprecated" ],
                "type" : "object"
              }
            },
            "required" : [ "iso" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "59123611-4d6b-409a-bb93-f92964447585",
    "name" : "Get all ISOs",
    "request" : {
      "urlPath" : "/isos",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  },\n  \"isos\" : [ {\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"name\" : \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n    \"description\" : \"FreeBSD 11.0 x64\",\n    \"id\" : 42,\n    \"type\" : \"private\"\n  }, {\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"name\" : \"FreeBSD-11.0-RELEASE-amd64-dvd1\",\n    \"description\" : \"FreeBSD 11.0 x64\",\n    \"id\" : 42,\n    \"type\" : \"public\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "59123611-4d6b-409a-bb93-f92964447585",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.732323Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "isos" : {
                "items" : {
                  "properties" : {
                    "deprecated" : {
                      "description" : "ISO 8601 timestamp of deprecation, null if ISO is still available. After the deprecation time it will no longer be possible to attach the ISO to Servers.",
                      "example" : "2018-02-28T00:00:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "description" : {
                      "description" : "Description of the ISO",
                      "example" : "FreeBSD 11.0 x64",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "name" : {
                      "description" : "Unique identifier of the ISO. Only set for public ISOs",
                      "example" : "FreeBSD-11.0-RELEASE-amd64-dvd1",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "type" : {
                      "description" : "Type of the ISO",
                      "enum" : [ "public", "private" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "description", "type", "deprecated" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "isos" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "0b0cb1de-d83c-4ba9-80fa-daeb8cd7283a",
    "name" : "Get an Action for an Image",
    "request" : {
      "urlPath" : "/images/303750717339992920/actions/2863372361903726664",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"image\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b0cb1de-d83c-4ba9-80fa-daeb8cd7283a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.732124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "1dcb13ba-04de-43d3-8817-b90e75f4b9b8",
    "name" : "Change Image Protection",
    "request" : {
      "urlPath" : "/images/8900184871689998655/actions/change_protection",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"image\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1dcb13ba-04de-43d3-8817-b90e75f4b9b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.732007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "afb1a51b-064c-4be3-ae17-2fa25e32b69f",
    "name" : "Get all Actions for an Image",
    "request" : {
      "urlPath" : "/images/6472524566946032386/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"image\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afb1a51b-064c-4be3-ae17-2fa25e32b69f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.731887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "85209b74-1620-4371-b168-94a31f59fa58",
    "name" : "Update an Image",
    "request" : {
      "urlPath" : "/images/6761659346995958502",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"image\" : {\n    \"build_id\" : \"c313fe40383af26094a5a92026054320ab55abc7\",\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"created_from\" : {\n      \"id\" : 1,\n      \"name\" : \"Server\"\n    },\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"description\" : \"My new Image description\",\n    \"disk_size\" : 10,\n    \"id\" : 4711,\n    \"image_size\" : 2.3,\n    \"labels\" : {\n      \"labelkey\" : \"value\"\n    },\n    \"os_flavor\" : \"ubuntu\",\n    \"os_version\" : \"20.04\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"rapid_deploy\" : false,\n    \"status\" : \"available\",\n    \"type\" : \"snapshot\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85209b74-1620-4371-b168-94a31f59fa58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.731698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "image" : {
                "properties" : {
                  "bound_to" : {
                    "description" : "ID of Server the Image is bound to. Only set for Images of type `backup`.",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "created_from" : {
                    "description" : "Information about the Server the Image was created from",
                    "nullable" : true,
                    "properties" : {
                      "id" : {
                        "description" : "ID of the Server the Image was created from",
                        "example" : 1,
                        "type" : "integer"
                      },
                      "name" : {
                        "description" : "Server name at the time the Image was created",
                        "example" : "Server",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name" ],
                    "type" : "object"
                  },
                  "deleted" : {
                    "description" : "Point in time where the Image was deleted (in ISO-8601 format)",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "deprecated" : {
                    "description" : "Point in time when the Image is considered to be deprecated (in ISO-8601 format)",
                    "example" : "2018-02-28T00:00:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the Image",
                    "example" : "Ubuntu 20.04 Standard 64 bit",
                    "type" : "string"
                  },
                  "disk_size" : {
                    "description" : "Size of the disk contained in the Image in GB",
                    "example" : 10,
                    "type" : "number"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "image_size" : {
                    "description" : "Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.",
                    "example" : 2.3,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Unique identifier of the Image. This value is only set for system Images.",
                    "example" : "ubuntu-20.04",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "os_flavor" : {
                    "description" : "Flavor of operating system contained in the Image",
                    "enum" : [ "ubuntu", "centos", "debian", "fedora", "unknown" ],
                    "example" : "ubuntu",
                    "type" : "string"
                  },
                  "os_version" : {
                    "description" : "Operating system version",
                    "example" : "20.04",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "rapid_deploy" : {
                    "description" : "Indicates that rapid deploy of the Image is available",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "status" : {
                    "description" : "Whether the Image can be used or if it's still being created or unavailable",
                    "enum" : [ "available", "creating", "unavailable" ],
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "Type of the Image",
                    "enum" : [ "system", "app", "snapshot", "backup", "temporary" ],
                    "example" : "snapshot",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "type", "status", "name", "description", "image_size", "disk_size", "created", "created_from", "bound_to", "os_flavor", "os_version", "protection", "deprecated", "deleted", "labels" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "a57b7f44-0501-40e6-843c-3e21396b368e",
    "name" : "Get an Image",
    "request" : {
      "urlPath" : "/images/8815432056505437672",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"image\" : {\n    \"image_size\" : 2.3,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"os_version\" : \"20.04\",\n    \"os_flavor\" : \"ubuntu\",\n    \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\" : 10,\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"snapshot\",\n    \"rapid_deploy\" : false,\n    \"labels\" : { },\n    \"deleted\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/conspirator/128.jpg\",\n    \"bound_to\" : 7720133581573144505,\n    \"name\" : \"ubuntu-20.04\",\n    \"id\" : 42,\n    \"created_from\" : {\n      \"name\" : \"Server\",\n      \"id\" : 1\n    },\n    \"status\" : \"unavailable\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a57b7f44-0501-40e6-843c-3e21396b368e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.731514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "image" : {
                "properties" : {
                  "bound_to" : {
                    "description" : "ID of Server the Image is bound to. Only set for Images of type `backup`.",
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "created_from" : {
                    "description" : "Information about the Server the Image was created from",
                    "nullable" : true,
                    "properties" : {
                      "id" : {
                        "description" : "ID of the Server the Image was created from",
                        "example" : 1,
                        "type" : "integer"
                      },
                      "name" : {
                        "description" : "Server name at the time the Image was created",
                        "example" : "Server",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name" ],
                    "type" : "object"
                  },
                  "deleted" : {
                    "description" : "Point in time where the Image was deleted (in ISO-8601 format)",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "deprecated" : {
                    "description" : "Point in time when the Image is considered to be deprecated (in ISO-8601 format)",
                    "example" : "2018-02-28T00:00:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the Image",
                    "example" : "Ubuntu 20.04 Standard 64 bit",
                    "type" : "string"
                  },
                  "disk_size" : {
                    "description" : "Size of the disk contained in the Image in GB",
                    "example" : 10,
                    "type" : "number"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "image_size" : {
                    "description" : "Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.",
                    "example" : 2.3,
                    "nullable" : true,
                    "type" : "number"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Unique identifier of the Image. This value is only set for system Images.",
                    "example" : "ubuntu-20.04",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "os_flavor" : {
                    "description" : "Flavor of operating system contained in the Image",
                    "enum" : [ "ubuntu", "centos", "debian", "fedora", "unknown" ],
                    "example" : "ubuntu",
                    "type" : "string"
                  },
                  "os_version" : {
                    "description" : "Operating system version",
                    "example" : "20.04",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "rapid_deploy" : {
                    "description" : "Indicates that rapid deploy of the Image is available",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "status" : {
                    "description" : "Whether the Image can be used or if it's still being created or unavailable",
                    "enum" : [ "available", "creating", "unavailable" ],
                    "type" : "string"
                  },
                  "type" : {
                    "description" : "Type of the Image",
                    "enum" : [ "system", "app", "snapshot", "backup", "temporary" ],
                    "example" : "snapshot",
                    "type" : "string"
                  }
                },
                "required" : [ "id", "type", "status", "name", "description", "image_size", "disk_size", "created", "created_from", "bound_to", "os_flavor", "os_version", "protection", "deprecated", "deleted", "labels" ],
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "9dfd670d-9454-40b2-ba0e-26489f113be9",
    "name" : "Delete an Image - 204",
    "request" : {
      "urlPath" : "/images/6515395338435046106",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "9dfd670d-9454-40b2-ba0e-26489f113be9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.731263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "c78c3222-dc97-4aa3-aead-1df4a6604dd0",
    "name" : "Get all Images",
    "request" : {
      "urlPath" : "/images",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"images\" : [ {\n    \"image_size\" : 2.3,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"os_version\" : \"20.04\",\n    \"os_flavor\" : \"ubuntu\",\n    \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\" : 10,\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"snapshot\",\n    \"rapid_deploy\" : false,\n    \"labels\" : { },\n    \"deleted\" : \"ewz0bnls2omeu52nvyhlgz1rx02ihdpe6pnrytga87ko4h4hc9qbq3ci3tg81niql62l3w0bv7av6f50ayo6fpjaflwktho8vw4flri8mkkxy2t79lgnoa9desujm7vi4\",\n    \"bound_to\" : 3274511951860902565,\n    \"name\" : \"ubuntu-20.04\",\n    \"id\" : 42,\n    \"created_from\" : {\n      \"name\" : \"Server\",\n      \"id\" : 1\n    },\n    \"status\" : \"unavailable\"\n  }, {\n    \"image_size\" : 2.3,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"os_version\" : \"20.04\",\n    \"os_flavor\" : \"ubuntu\",\n    \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\" : 10,\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"snapshot\",\n    \"rapid_deploy\" : false,\n    \"labels\" : { },\n    \"deleted\" : \"rwqs5uialz61o4r84rkf443v58a76hmel52zt\",\n    \"bound_to\" : 2106166219466334473,\n    \"name\" : \"ubuntu-20.04\",\n    \"id\" : 42,\n    \"created_from\" : {\n      \"name\" : \"Server\",\n      \"id\" : 1\n    },\n    \"status\" : \"unavailable\"\n  }, {\n    \"image_size\" : 2.3,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"os_version\" : \"20.04\",\n    \"os_flavor\" : \"ubuntu\",\n    \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\" : 10,\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"snapshot\",\n    \"rapid_deploy\" : false,\n    \"labels\" : { },\n    \"deleted\" : \"0ucubqwsvn\",\n    \"bound_to\" : 4646508949613026820,\n    \"name\" : \"ubuntu-20.04\",\n    \"id\" : 42,\n    \"created_from\" : {\n      \"name\" : \"Server\",\n      \"id\" : 1\n    },\n    \"status\" : \"available\"\n  }, {\n    \"image_size\" : 2.3,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"os_version\" : \"20.04\",\n    \"os_flavor\" : \"ubuntu\",\n    \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\" : 10,\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"snapshot\",\n    \"rapid_deploy\" : false,\n    \"labels\" : { },\n    \"deleted\" : \"ai0p7rdpy5q5uhnmlls47r1tinpcchwmeac7qdffdnwlwgriklf7g3v53igd7nr06w2hv52hh8tdxmpuhxycab06aqswf6p4h735zb2bek9dhrpvwdll8ofkp6miobwqxte8sbubz2sossz991wbj9ho3zgpnstnooa3hiz0a7nczw2vg5f3eylif2oqbjnn4h\",\n    \"bound_to\" : 1096254594149891963,\n    \"name\" : \"ubuntu-20.04\",\n    \"id\" : 42,\n    \"created_from\" : {\n      \"name\" : \"Server\",\n      \"id\" : 1\n    },\n    \"status\" : \"available\"\n  }, {\n    \"image_size\" : 2.3,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"deprecated\" : \"2018-02-28T00:00:00+00:00\",\n    \"os_version\" : \"20.04\",\n    \"os_flavor\" : \"ubuntu\",\n    \"description\" : \"Ubuntu 20.04 Standard 64 bit\",\n    \"disk_size\" : 10,\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"type\" : \"snapshot\",\n    \"rapid_deploy\" : false,\n    \"labels\" : { },\n    \"deleted\" : \"4ag3tt4lvv3zch8oxgls0glgiie1yeicsizx7bfy8mxjbqqkdw4mxk9chs1307ted8owjd0usrqw1zcgk44gxwp\",\n    \"bound_to\" : 1089653636953637300,\n    \"name\" : \"ubuntu-20.04\",\n    \"id\" : 42,\n    \"created_from\" : {\n      \"name\" : \"Server\",\n      \"id\" : 1\n    },\n    \"status\" : \"creating\"\n  } ],\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c78c3222-dc97-4aa3-aead-1df4a6604dd0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.731218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "images" : {
                "items" : {
                  "properties" : {
                    "bound_to" : {
                      "description" : "ID of Server the Image is bound to. Only set for Images of type `backup`.",
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "created_from" : {
                      "description" : "Information about the Server the Image was created from",
                      "nullable" : true,
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Server the Image was created from",
                          "example" : 1,
                          "type" : "integer"
                        },
                        "name" : {
                          "description" : "Server name at the time the Image was created",
                          "example" : "Server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "name" ],
                      "type" : "object"
                    },
                    "deleted" : {
                      "description" : "Point in time where the Image was deleted (in ISO-8601 format)",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "deprecated" : {
                      "description" : "Point in time when the Image is considered to be deprecated (in ISO-8601 format)",
                      "example" : "2018-02-28T00:00:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "description" : {
                      "description" : "Description of the Image",
                      "example" : "Ubuntu 20.04 Standard 64 bit",
                      "type" : "string"
                    },
                    "disk_size" : {
                      "description" : "Size of the disk contained in the Image in GB",
                      "example" : 10,
                      "type" : "number"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "image_size" : {
                      "description" : "Size of the Image file in our storage in GB. For snapshot Images this is the value relevant for calculating costs for the Image.",
                      "example" : 2.3,
                      "nullable" : true,
                      "type" : "number"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Unique identifier of the Image. This value is only set for system Images.",
                      "example" : "ubuntu-20.04",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "os_flavor" : {
                      "description" : "Flavor of operating system contained in the Image",
                      "enum" : [ "ubuntu", "centos", "debian", "fedora", "unknown" ],
                      "example" : "ubuntu",
                      "type" : "string"
                    },
                    "os_version" : {
                      "description" : "Operating system version",
                      "example" : "20.04",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "protection" : {
                      "description" : "Protection configuration for the Resource",
                      "properties" : {
                        "delete" : {
                          "description" : "If true, prevents the Resource from being deleted",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "delete" ],
                      "type" : "object"
                    },
                    "rapid_deploy" : {
                      "description" : "Indicates that rapid deploy of the Image is available",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "status" : {
                      "description" : "Whether the Image can be used or if it's still being created or unavailable",
                      "enum" : [ "available", "creating", "unavailable" ],
                      "type" : "string"
                    },
                    "type" : {
                      "description" : "Type of the Image",
                      "enum" : [ "system", "app", "snapshot", "backup", "temporary" ],
                      "example" : "snapshot",
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "type", "status", "name", "description", "image_size", "disk_size", "created", "created_from", "bound_to", "os_flavor", "os_version", "protection", "deprecated", "deleted", "labels" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "images" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "38124623-afbd-4ee9-be30-cd65971c182d",
    "name" : "Get an Action for a Floating IP",
    "request" : {
      "urlPath" : "/floating_ips/2121520904876130169/actions/8376219902994875272",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"assign_floating_ip\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"floating_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38124623-afbd-4ee9-be30-cd65971c182d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.730607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "32cab250-be29-4c64-9160-eb310433e828",
    "name" : "Unassign a Floating IP",
    "request" : {
      "urlPath" : "/floating_ips/5811585416106896562/actions/unassign",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"unassign_floating_ip\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"floating_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32cab250-be29-4c64-9160-eb310433e828",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.730469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "7666beb8-5a8a-4ddd-b359-9aa20c7f4580",
    "name" : "Change Floating IP Protection",
    "request" : {
      "urlPath" : "/floating_ips/5616687209014608206/actions/change_protection",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_protection\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"floating_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7666beb8-5a8a-4ddd-b359-9aa20c7f4580",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.730346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "ea948b6a-0a80-402d-af1a-77d8d2e27637",
    "name" : "Change reverse DNS entry for a Floating IP",
    "request" : {
      "urlPath" : "/floating_ips/912615482993885382/actions/change_dns_ptr",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"change_dns_ptr\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"floating_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea948b6a-0a80-402d-af1a-77d8d2e27637",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.730221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "3926e3a1-703e-488a-a89f-e68ed7e3a56f",
    "name" : "Assign a Floating IP to a Server",
    "request" : {
      "urlPath" : "/floating_ips/7299671768058724208/actions/assign",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"assign_floating_ip\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4711,\n      \"type\" : \"floating_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3926e3a1-703e-488a-a89f-e68ed7e3a56f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.730101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "d66e4aec-f29d-4e8c-80e0-b7a01378e6d7",
    "name" : "Get all Actions for a Floating IP",
    "request" : {
      "urlPath" : "/floating_ips/3463446190354847100/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"assign_floating_ip\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 4712,\n      \"type\" : \"floating_ip\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d66e4aec-f29d-4e8c-80e0-b7a01378e6d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.729966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "required" : [ "actions" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "faab72a6-e9c0-4e48-8833-dd10dfd114f6",
    "name" : "Update a Floating IP",
    "request" : {
      "urlPath" : "/floating_ips/5707415781210789720",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"floating_ip\" : {\n    \"blocked\" : false,\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"description\" : \"Web Frontend\",\n    \"dns_ptr\" : [ {\n      \"dns_ptr\" : \"server.example.com\",\n      \"ip\" : \"2001:db8::1\"\n    } ],\n    \"home_location\" : {\n      \"city\" : \"Falkenstein\",\n      \"country\" : \"DE\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"latitude\" : 50.47612,\n      \"longitude\" : 12.370071,\n      \"name\" : \"fsn1\",\n      \"network_zone\" : \"eu-central\"\n    },\n    \"id\" : 4711,\n    \"ip\" : \"131.232.99.1\",\n    \"labels\" : {\n      \"labelkey\" : \"value\"\n    },\n    \"name\" : \"Web Frontend\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"server\" : 42,\n    \"type\" : \"ipv4\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faab72a6-e9c0-4e48-8833-dd10dfd114f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.729832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "floating_ip" : {
                "properties" : {
                  "blocked" : {
                    "description" : "Whether the IP is blocked",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the Resource",
                    "example" : "this describes my resource",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "dns_ptr" : {
                    "description" : "Array of reverse DNS entries",
                    "items" : {
                      "properties" : {
                        "dns_ptr" : {
                          "description" : "DNS pointer for the specific IP address",
                          "example" : "server.example.com",
                          "type" : "string"
                        },
                        "ip" : {
                          "description" : "Single IPv4 or IPv6 address",
                          "example" : "2001:db8::1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "ip", "dns_ptr" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "home_location" : {
                    "description" : "Location the Floating IP was created in. Routing is optimized for this Location.",
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "ip" : {
                    "description" : "IP address",
                    "example" : "131.232.99.1",
                    "type" : "string"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "server" : {
                    "description" : "ID of the Server the Floating IP is assigned to, null if it is not assigned at all",
                    "example" : 42,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "type" : {
                    "description" : "Type of the Floating IP",
                    "enum" : [ "ipv4", "ipv6" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "description", "ip", "type", "server", "dns_ptr", "home_location", "blocked", "protection", "labels", "created" ],
                "type" : "object"
              }
            },
            "required" : [ "floating_ip" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "7412b8cd-8685-4ee3-b90c-1ebd4e997e0d",
    "name" : "Get a Floating IP",
    "request" : {
      "urlPath" : "/floating_ips/54981832204352329",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"floating_ip\" : {\n    \"server\" : 42,\n    \"blocked\" : false,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"name\" : \"my-resource\",\n    \"description\" : \"this describes my resource\",\n    \"home_location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"id\" : 42,\n    \"type\" : \"ipv4\",\n    \"dns_ptr\" : [ {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"labels\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7412b8cd-8685-4ee3-b90c-1ebd4e997e0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.729645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "floating_ip" : {
                "properties" : {
                  "blocked" : {
                    "description" : "Whether the IP is blocked",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the Resource",
                    "example" : "this describes my resource",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "dns_ptr" : {
                    "description" : "Array of reverse DNS entries",
                    "items" : {
                      "properties" : {
                        "dns_ptr" : {
                          "description" : "DNS pointer for the specific IP address",
                          "example" : "server.example.com",
                          "type" : "string"
                        },
                        "ip" : {
                          "description" : "Single IPv4 or IPv6 address",
                          "example" : "2001:db8::1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "ip", "dns_ptr" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "home_location" : {
                    "description" : "Location the Floating IP was created in. Routing is optimized for this Location.",
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "ip" : {
                    "description" : "IP address",
                    "example" : "131.232.99.1",
                    "type" : "string"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "server" : {
                    "description" : "ID of the Server the Floating IP is assigned to, null if it is not assigned at all",
                    "example" : 42,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "type" : {
                    "description" : "Type of the Floating IP",
                    "enum" : [ "ipv4", "ipv6" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "description", "ip", "type", "server", "dns_ptr", "home_location", "blocked", "protection", "labels", "created" ],
                "type" : "object"
              }
            },
            "required" : [ "floating_ip" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "3e0e1997-81cc-4f19-b6b8-ead208879ba1",
    "name" : "Delete a Floating IP - 204",
    "request" : {
      "urlPath" : "/floating_ips/2189308431751879912",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3e0e1997-81cc-4f19-b6b8-ead208879ba1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.729356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "21ff6035-8a22-4b44-83d3-f01b83695a9d",
    "name" : "Create a Floating IP",
    "request" : {
      "urlPath" : "/floating_ips",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"create_floating_ip\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:50:00+00:00\",\n    \"status\" : \"running\"\n  },\n  \"floating_ip\" : {\n    \"blocked\" : false,\n    \"created\" : \"2016-01-30T23:50:00+00:00\",\n    \"description\" : \"Web Frontend\",\n    \"dns_ptr\" : [ {\n      \"dns_ptr\" : \"server.example.com\",\n      \"ip\" : \"2001:db8::1\"\n    } ],\n    \"home_location\" : {\n      \"city\" : \"Falkenstein\",\n      \"country\" : \"DE\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"latitude\" : 50.47612,\n      \"longitude\" : 12.370071,\n      \"name\" : \"fsn1\",\n      \"network_zone\" : \"eu-central\"\n    },\n    \"id\" : 4711,\n    \"ip\" : \"131.232.99.1\",\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"name\" : \"Web Frontend\",\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"server\" : 42,\n    \"type\" : \"ipv4\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21ff6035-8a22-4b44-83d3-f01b83695a9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.729311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              },
              "floating_ip" : {
                "properties" : {
                  "blocked" : {
                    "description" : "Whether the IP is blocked",
                    "example" : false,
                    "type" : "boolean"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "description" : {
                    "description" : "Description of the Resource",
                    "example" : "this describes my resource",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "dns_ptr" : {
                    "description" : "Array of reverse DNS entries",
                    "items" : {
                      "properties" : {
                        "dns_ptr" : {
                          "description" : "DNS pointer for the specific IP address",
                          "example" : "server.example.com",
                          "type" : "string"
                        },
                        "ip" : {
                          "description" : "Single IPv4 or IPv6 address",
                          "example" : "2001:db8::1",
                          "type" : "string"
                        }
                      },
                      "required" : [ "ip", "dns_ptr" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "home_location" : {
                    "description" : "Location the Floating IP was created in. Routing is optimized for this Location.",
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "ip" : {
                    "description" : "IP address",
                    "example" : "131.232.99.1",
                    "type" : "string"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "protection" : {
                    "description" : "Protection configuration for the Resource",
                    "properties" : {
                      "delete" : {
                        "description" : "If true, prevents the Resource from being deleted",
                        "example" : false,
                        "type" : "boolean"
                      }
                    },
                    "required" : [ "delete" ],
                    "type" : "object"
                  },
                  "server" : {
                    "description" : "ID of the Server the Floating IP is assigned to, null if it is not assigned at all",
                    "example" : 42,
                    "nullable" : true,
                    "type" : "integer"
                  },
                  "type" : {
                    "description" : "Type of the Floating IP",
                    "enum" : [ "ipv4", "ipv6" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "name", "description", "ip", "type", "server", "dns_ptr", "home_location", "blocked", "protection", "labels", "created" ],
                "type" : "object"
              }
            },
            "required" : [ "floating_ip" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "2c806006-996c-4fc9-99ef-738b543f9acb",
    "name" : "Get all Floating IPs",
    "request" : {
      "urlPath" : "/floating_ips",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  },\n  \"floating_ips\" : [ {\n    \"server\" : 42,\n    \"blocked\" : false,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"name\" : \"my-resource\",\n    \"description\" : \"this describes my resource\",\n    \"home_location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"id\" : 42,\n    \"type\" : \"ipv4\",\n    \"dns_ptr\" : [ {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"labels\" : { }\n  }, {\n    \"server\" : 42,\n    \"blocked\" : false,\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"ip\" : \"131.232.99.1\",\n    \"name\" : \"my-resource\",\n    \"description\" : \"this describes my resource\",\n    \"home_location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"protection\" : {\n      \"delete\" : false\n    },\n    \"id\" : 42,\n    \"type\" : \"ipv6\",\n    \"dns_ptr\" : [ {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    }, {\n      \"ip\" : \"2001:db8::1\",\n      \"dns_ptr\" : \"server.example.com\"\n    } ],\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c806006-996c-4fc9-99ef-738b543f9acb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.728953Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "floating_ips" : {
                "items" : {
                  "properties" : {
                    "blocked" : {
                      "description" : "Whether the IP is blocked",
                      "example" : false,
                      "type" : "boolean"
                    },
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "description" : {
                      "description" : "Description of the Resource",
                      "example" : "this describes my resource",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "dns_ptr" : {
                      "description" : "Array of reverse DNS entries",
                      "items" : {
                        "properties" : {
                          "dns_ptr" : {
                            "description" : "DNS pointer for the specific IP address",
                            "example" : "server.example.com",
                            "type" : "string"
                          },
                          "ip" : {
                            "description" : "Single IPv4 or IPv6 address",
                            "example" : "2001:db8::1",
                            "type" : "string"
                          }
                        },
                        "required" : [ "ip", "dns_ptr" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "home_location" : {
                      "description" : "Location the Floating IP was created in. Routing is optimized for this Location.",
                      "properties" : {
                        "city" : {
                          "description" : "City the Location is closest to",
                          "example" : "Falkenstein",
                          "type" : "string"
                        },
                        "country" : {
                          "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                          "example" : "DE",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "Description of the Location",
                          "example" : "Falkenstein DC Park 1",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Location",
                          "example" : 1,
                          "type" : "number"
                        },
                        "latitude" : {
                          "description" : "Latitude of the city closest to the Location",
                          "example" : 50.47612,
                          "type" : "number"
                        },
                        "longitude" : {
                          "description" : "Longitude of the city closest to the Location",
                          "example" : 12.370071,
                          "type" : "number"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Location",
                          "example" : "fsn1",
                          "type" : "string"
                        },
                        "network_zone" : {
                          "description" : "Name of network zone this Location resides in",
                          "example" : "eu-central",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                      "type" : "object"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "ip" : {
                      "description" : "IP address",
                      "example" : "131.232.99.1",
                      "type" : "string"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Name of the Resource. Must be unique per Project.",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "protection" : {
                      "description" : "Protection configuration for the Resource",
                      "properties" : {
                        "delete" : {
                          "description" : "If true, prevents the Resource from being deleted",
                          "example" : false,
                          "type" : "boolean"
                        }
                      },
                      "required" : [ "delete" ],
                      "type" : "object"
                    },
                    "server" : {
                      "description" : "ID of the Server the Floating IP is assigned to, null if it is not assigned at all",
                      "example" : 42,
                      "nullable" : true,
                      "type" : "integer"
                    },
                    "type" : {
                      "description" : "Type of the Floating IP",
                      "enum" : [ "ipv4", "ipv6" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "name", "description", "ip", "type", "server", "dns_ptr", "home_location", "blocked", "protection", "labels", "created" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "floating_ips" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "6720a57d-01a4-4ecc-9cd5-918d17b92a1c",
    "name" : "Get an Action for a Firewall",
    "request" : {
      "urlPath" : "/firewalls/757112722935286224/actions/1409775987386688537",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"set_firewall_rules\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 38,\n      \"type\" : \"firewall\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6720a57d-01a4-4ecc-9cd5-918d17b92a1c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.728484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "9a326853-04ae-42d7-b205-0a583ddce7c7",
    "name" : "Set Rules",
    "request" : {
      "urlPath" : "/firewalls/7220215531620046463/actions/set_rules",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"set_firewall_rules\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 38,\n      \"type\" : \"firewall\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }, {\n    \"command\" : \"apply_firewall\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 14,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 38,\n      \"type\" : \"firewall\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a326853-04ae-42d7-b205-0a583ddce7c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.728357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "72029507-b1a6-4aa9-99f6-4db0678a2ca8",
    "name" : "Remove from Resources",
    "request" : {
      "urlPath" : "/firewalls/2372659554880493617/actions/remove_from_resources",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"remove_firewall\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 14,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 38,\n      \"type\" : \"firewall\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72029507-b1a6-4aa9-99f6-4db0678a2ca8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.728163Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "fd0fb7e0-92a8-40a5-acff-2d9e69629713",
    "name" : "Apply to Resources",
    "request" : {
      "urlPath" : "/firewalls/8585781119916844045/actions/apply_to_resources",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"apply_firewall\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 14,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 38,\n      \"type\" : \"firewall\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd0fb7e0-92a8-40a5-acff-2d9e69629713",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.727986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "419848aa-f369-4147-b949-0f9e28f829c4",
    "name" : "Get all Actions for a Firewall",
    "request" : {
      "urlPath" : "/firewalls/1935788283417774685/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"set_firewall_rules\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 38,\n      \"type\" : \"firewall\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "419848aa-f369-4147-b949-0f9e28f829c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.727804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "e939d70a-8b35-408f-8049-e4ab6bc6bd42",
    "name" : "Update a Firewall",
    "request" : {
      "urlPath" : "/firewalls/24686440614682934",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firewall\" : {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"name\" : \"my-resource\",\n    \"applied_to\" : [ {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      } ],\n      \"type\" : \"server\"\n    } ],\n    \"rules\" : [ {\n      \"protocol\" : \"esp\",\n      \"port\" : \"80\",\n      \"description\" : \"Ipsum quia atque. Reiciendis enim dolorem veniam est minus. Dolores et id. Et dolorum dolores. Autem temporibus quo nulla est voluptate possimus.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"in\"\n    } ],\n    \"id\" : 42,\n    \"labels\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e939d70a-8b35-408f-8049-e4ab6bc6bd42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.727614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "firewall" : {
                "properties" : {
                  "applied_to" : {
                    "items" : {
                      "properties" : {
                        "applied_to_resources" : {
                          "items" : {
                            "properties" : {
                              "server" : {
                                "properties" : {
                                  "id" : {
                                    "description" : "ID of the Resource",
                                    "example" : 42,
                                    "type" : "integer"
                                  }
                                },
                                "required" : [ "id" ],
                                "type" : "object"
                              },
                              "type" : {
                                "description" : "Type of resource referenced",
                                "enum" : [ "server" ],
                                "example" : "server",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "label_selector" : {
                          "properties" : {
                            "selector" : {
                              "description" : "Label selector",
                              "example" : "env=prod",
                              "type" : "string"
                            }
                          },
                          "required" : [ "selector" ],
                          "type" : "object"
                        },
                        "server" : {
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Resource",
                              "example" : 42,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "id" ],
                          "type" : "object"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "enum" : [ "server", "label_selector" ],
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "rules" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Description of the Rule",
                          "maxLength" : 255,
                          "nullable" : true,
                          "type" : "string"
                        },
                        "destination_ips" : {
                          "description" : "List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.",
                          "example" : [ "28.239.13.1/32", "28.239.14.0/24", "ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128" ],
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        },
                        "direction" : {
                          "description" : "Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.",
                          "enum" : [ "in", "out" ],
                          "type" : "string"
                        },
                        "port" : {
                          "description" : "Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.",
                          "example" : "80",
                          "type" : "string"
                        },
                        "protocol" : {
                          "description" : "Type of traffic to allow",
                          "enum" : [ "tcp", "udp", "icmp", "esp", "gre" ],
                          "type" : "string"
                        },
                        "source_ips" : {
                          "description" : "List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.",
                          "example" : [ "28.239.13.1/32", "28.239.14.0/24", "ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128" ],
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "direction", "protocol" ],
                      "title" : "Rule",
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "created", "rules", "applied_to" ],
                "title" : "Firewall",
                "type" : "object"
              }
            },
            "required" : [ "firewall" ],
            "title" : "FirewallResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "c8c0782a-bcfb-45e7-be8a-acd09dc38f09",
    "name" : "Get a Firewall",
    "request" : {
      "urlPath" : "/firewalls/6683413504846093925",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"firewall\" : {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"name\" : \"my-resource\",\n    \"applied_to\" : [ {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      } ],\n      \"type\" : \"server\"\n    } ],\n    \"rules\" : [ {\n      \"protocol\" : \"esp\",\n      \"port\" : \"80\",\n      \"description\" : \"Velit ipsum et voluptatibus adipisci fuga doloribus ut. Voluptas unde laborum. Est molestiae corrupti amet est nesciunt molestiae. In vero eum reprehenderit.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"esp\",\n      \"port\" : \"80\",\n      \"description\" : \"Aut dicta corrupti aut. Sed est repellendus perferendis omnis minus consequatur quam. Delectus nostrum ex sint perspiciatis. Placeat itaque culpa possimus aut recusandae.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"gre\",\n      \"port\" : \"80\",\n      \"description\" : \"Sunt saepe illum in ex nisi doloremque. Consequuntur inventore adipisci qui. Aut nemo ipsa suscipit.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"tcp\",\n      \"port\" : \"80\",\n      \"description\" : \"Vel tempore officiis veniam labore consequatur repellendus. Provident sint autem et ab excepturi et. Dolorem dolorem sunt voluptates.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Et id qui sapiente. Aut maxime ullam neque rem qui quia ea. Odit aut et ut tenetur aspernatur. Doloribus deleniti veritatis aliquam maxime maxime qui deleniti.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    } ],\n    \"id\" : 42,\n    \"labels\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8c0782a-bcfb-45e7-be8a-acd09dc38f09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.72705Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "firewall" : {
                "properties" : {
                  "applied_to" : {
                    "items" : {
                      "properties" : {
                        "applied_to_resources" : {
                          "items" : {
                            "properties" : {
                              "server" : {
                                "properties" : {
                                  "id" : {
                                    "description" : "ID of the Resource",
                                    "example" : 42,
                                    "type" : "integer"
                                  }
                                },
                                "required" : [ "id" ],
                                "type" : "object"
                              },
                              "type" : {
                                "description" : "Type of resource referenced",
                                "enum" : [ "server" ],
                                "example" : "server",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "label_selector" : {
                          "properties" : {
                            "selector" : {
                              "description" : "Label selector",
                              "example" : "env=prod",
                              "type" : "string"
                            }
                          },
                          "required" : [ "selector" ],
                          "type" : "object"
                        },
                        "server" : {
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Resource",
                              "example" : 42,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "id" ],
                          "type" : "object"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "enum" : [ "server", "label_selector" ],
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "rules" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Description of the Rule",
                          "maxLength" : 255,
                          "nullable" : true,
                          "type" : "string"
                        },
                        "destination_ips" : {
                          "description" : "List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.",
                          "example" : [ "28.239.13.1/32", "28.239.14.0/24", "ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128" ],
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        },
                        "direction" : {
                          "description" : "Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.",
                          "enum" : [ "in", "out" ],
                          "type" : "string"
                        },
                        "port" : {
                          "description" : "Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.",
                          "example" : "80",
                          "type" : "string"
                        },
                        "protocol" : {
                          "description" : "Type of traffic to allow",
                          "enum" : [ "tcp", "udp", "icmp", "esp", "gre" ],
                          "type" : "string"
                        },
                        "source_ips" : {
                          "description" : "List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.",
                          "example" : [ "28.239.13.1/32", "28.239.14.0/24", "ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128" ],
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "direction", "protocol" ],
                      "title" : "Rule",
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "created", "rules", "applied_to" ],
                "title" : "Firewall",
                "type" : "object"
              }
            },
            "required" : [ "firewall" ],
            "title" : "FirewallResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "20752dc7-f2dc-46c4-8902-977f02410da8",
    "name" : "Delete a Firewall - 204",
    "request" : {
      "urlPath" : "/firewalls/714135876103487236",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "20752dc7-f2dc-46c4-8902-977f02410da8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.726301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "12927b17-aafd-4b31-9d51-75928988e58c",
    "name" : "Create a Firewall",
    "request" : {
      "urlPath" : "/firewalls",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"firewall\" : {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"name\" : \"my-resource\",\n    \"applied_to\" : [ {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      }, {\n        \"server\" : {\n          \"id\" : 42\n        },\n        \"type\" : \"server\"\n      } ],\n      \"type\" : \"server\"\n    } ],\n    \"rules\" : [ {\n      \"protocol\" : \"icmp\",\n      \"port\" : \"80\",\n      \"description\" : \"Dignissimos rerum qui eum excepturi aut et. Alias voluptatibus velit asperiores. Saepe placeat ea et.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"tcp\",\n      \"port\" : \"80\",\n      \"description\" : \"Architecto autem sapiente consectetur. Qui tempore rerum dolores praesentium similique qui ut. Quisquam alias cumque. Consectetur consequatur dolorum delectus nesciunt accusantium totam non.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"tcp\",\n      \"port\" : \"80\",\n      \"description\" : \"Accusamus perferendis numquam cupiditate recusandae aut perferendis. Deleniti cum fugit fugit. Exercitationem ut vitae dolores. Cupiditate omnis eius enim error impedit rerum nesciunt. Totam quae quos beatae nam ea et voluptatem.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"gre\",\n      \"port\" : \"80\",\n      \"description\" : \"Ratione rem deserunt sequi fugiat optio. Voluptatem voluptates facilis eos consequatur repellat nam. Ipsum dignissimos mollitia unde impedit. Iste laboriosam est id tempora quos consequatur dolores.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"in\"\n    }, {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Quia rerum vel corporis debitis dicta culpa neque. Qui eos commodi incidunt. Pariatur occaecati harum tempora.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"esp\",\n      \"port\" : \"80\",\n      \"description\" : \"Suscipit totam vel molestiae dolore dolores. Omnis rerum quia reprehenderit aut tempore. Qui dolore at aliquam ratione aut.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Quia temporibus tenetur enim omnis voluptas inventore aut. Ab dolore sunt corrupti. Repellendus culpa laudantium libero incidunt. Eaque in aspernatur laborum quo deserunt. Ad maiores dolorem aliquam in.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    } ],\n    \"id\" : 42,\n    \"labels\" : { }\n  },\n  \"actions\" : [ {\n    \"command\" : \"set_firewall_rules\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 13,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 38,\n      \"type\" : \"firewall\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }, {\n    \"command\" : \"apply_firewall\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2016-01-30T23:56:00+00:00\",\n    \"id\" : 14,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 38,\n      \"type\" : \"firewall\"\n    } ],\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12927b17-aafd-4b31-9d51-75928988e58c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.726239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "example" : [ {
                  "command" : "set_firewall_rules",
                  "error" : {
                    "code" : "action_failed",
                    "message" : "Action failed"
                  },
                  "finished" : "2016-01-30T23:56:00+00:00",
                  "id" : 13,
                  "progress" : 100,
                  "resources" : [ {
                    "id" : 38,
                    "type" : "firewall"
                  } ],
                  "started" : "2016-01-30T23:55:00+00:00",
                  "status" : "success"
                }, {
                  "command" : "apply_firewall",
                  "error" : {
                    "code" : "action_failed",
                    "message" : "Action failed"
                  },
                  "finished" : "2016-01-30T23:56:00+00:00",
                  "id" : 14,
                  "progress" : 100,
                  "resources" : [ {
                    "id" : 42,
                    "type" : "server"
                  }, {
                    "id" : 38,
                    "type" : "firewall"
                  } ],
                  "started" : "2016-01-30T23:55:00+00:00",
                  "status" : "success"
                } ],
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "firewall" : {
                "properties" : {
                  "applied_to" : {
                    "items" : {
                      "properties" : {
                        "applied_to_resources" : {
                          "items" : {
                            "properties" : {
                              "server" : {
                                "properties" : {
                                  "id" : {
                                    "description" : "ID of the Resource",
                                    "example" : 42,
                                    "type" : "integer"
                                  }
                                },
                                "required" : [ "id" ],
                                "type" : "object"
                              },
                              "type" : {
                                "description" : "Type of resource referenced",
                                "enum" : [ "server" ],
                                "example" : "server",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "label_selector" : {
                          "properties" : {
                            "selector" : {
                              "description" : "Label selector",
                              "example" : "env=prod",
                              "type" : "string"
                            }
                          },
                          "required" : [ "selector" ],
                          "type" : "object"
                        },
                        "server" : {
                          "properties" : {
                            "id" : {
                              "description" : "ID of the Resource",
                              "example" : 42,
                              "type" : "integer"
                            }
                          },
                          "required" : [ "id" ],
                          "type" : "object"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "enum" : [ "server", "label_selector" ],
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "rules" : {
                    "items" : {
                      "properties" : {
                        "description" : {
                          "description" : "Description of the Rule",
                          "maxLength" : 255,
                          "nullable" : true,
                          "type" : "string"
                        },
                        "destination_ips" : {
                          "description" : "List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.",
                          "example" : [ "28.239.13.1/32", "28.239.14.0/24", "ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128" ],
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        },
                        "direction" : {
                          "description" : "Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.",
                          "enum" : [ "in", "out" ],
                          "type" : "string"
                        },
                        "port" : {
                          "description" : "Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.",
                          "example" : "80",
                          "type" : "string"
                        },
                        "protocol" : {
                          "description" : "Type of traffic to allow",
                          "enum" : [ "tcp", "udp", "icmp", "esp", "gre" ],
                          "type" : "string"
                        },
                        "source_ips" : {
                          "description" : "List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.",
                          "example" : [ "28.239.13.1/32", "28.239.14.0/24", "ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128" ],
                          "items" : {
                            "type" : "string"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "direction", "protocol" ],
                      "title" : "Rule",
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "created", "rules", "applied_to" ],
                "title" : "Firewall",
                "type" : "object"
              }
            },
            "title" : "CreateFirewallResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "dbada128-c5d6-4317-8906-f0b93e41f374",
    "name" : "Get all Firewalls",
    "request" : {
      "urlPath" : "/firewalls",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  },\n  \"firewalls\" : [ {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"name\" : \"my-resource\",\n    \"applied_to\" : [ {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { }, { }, { }, { } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { }, { }, { } ],\n      \"type\" : \"server\"\n    } ],\n    \"rules\" : [ {\n      \"protocol\" : \"tcp\",\n      \"port\" : \"80\",\n      \"description\" : \"Repellendus reprehenderit vitae architecto rem quis repellendus amet. Rem fugiat aut voluptate eligendi. Quos reprehenderit et omnis enim. Sed mollitia ut rerum rerum sit repudiandae.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Consectetur suscipit nemo vel incidunt eum. Distinctio enim at. Sed voluptate eligendi qui. Non consequatur voluptas magni.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"tcp\",\n      \"port\" : \"80\",\n      \"description\" : \"Amet reprehenderit accusantium doloribus et nihil molestiae exercitationem. Vel aut quo. Voluptas non reiciendis.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"in\"\n    }, {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Nam aut accusamus accusamus aut dignissimos a. Sed quo ut. Vitae a quasi.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"esp\",\n      \"port\" : \"80\",\n      \"description\" : \"Sed sit sit laborum. Recusandae natus enim. Eos vero qui. Iure assumenda numquam placeat.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"esp\",\n      \"port\" : \"80\",\n      \"description\" : \"Illo qui animi in iusto enim molestiae sapiente. Rerum sapiente architecto at sunt earum. Aut natus totam laudantium est voluptatum. Eius aliquam voluptatem.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"gre\",\n      \"port\" : \"80\",\n      \"description\" : \"Sequi ab odio qui dicta ea nobis. Nihil incidunt molestias. Perferendis ullam voluptatem sunt necessitatibus inventore et. Sapiente repudiandae rerum dolores. Et est magnam.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"in\"\n    } ],\n    \"id\" : 42,\n    \"labels\" : { }\n  }, {\n    \"created\" : \"2016-01-30T23:55:00+00:00\",\n    \"name\" : \"my-resource\",\n    \"applied_to\" : [ {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { }, { }, { }, { } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { }, { }, { }, { }, { } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { }, { }, { }, { } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { } ],\n      \"type\" : \"server\"\n    }, {\n      \"server\" : {\n        \"id\" : 42\n      },\n      \"label_selector\" : {\n        \"selector\" : \"env=prod\"\n      },\n      \"applied_to_resources\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"type\" : \"server\"\n    } ],\n    \"rules\" : [ {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Quia ex possimus ab suscipit et aut cupiditate. Nisi molestiae exercitationem. Fuga a porro omnis occaecati sit et.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Perferendis aut voluptas non. Quaerat laborum labore et illum aut. Debitis beatae voluptatem eligendi facere sit tenetur accusamus. Velit illo deserunt natus saepe labore ex.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    }, {\n      \"protocol\" : \"tcp\",\n      \"port\" : \"80\",\n      \"description\" : \"Quaerat ut incidunt in. Sapiente nihil est quibusdam labore. Perferendis dolores omnis quos.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"in\"\n    }, {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Quam consequuntur molestiae aliquid. Vero facilis delectus ipsam debitis et ut. Et ex sed quaerat.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"in\"\n    }, {\n      \"protocol\" : \"gre\",\n      \"port\" : \"80\",\n      \"description\" : \"Alias et sit accusantium. Sint velit maxime dolores consequatur fugiat ut. Veritatis repellat aut omnis dolorem libero.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"in\"\n    }, {\n      \"protocol\" : \"udp\",\n      \"port\" : \"80\",\n      \"description\" : \"Quod cum numquam aut. Minima ut aliquam ut ex nulla. Ex quod ex. Amet qui enim quaerat. Fuga provident architecto animi eum ipsum aut.\",\n      \"destination_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"source_ips\" : [ \"28.239.13.1/32\", \"28.239.14.0/24\", \"ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128\" ],\n      \"direction\" : \"out\"\n    } ],\n    \"id\" : 42,\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbada128-c5d6-4317-8906-f0b93e41f374",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.725072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "firewalls" : {
                "items" : {
                  "properties" : {
                    "applied_to" : {
                      "items" : {
                        "properties" : {
                          "applied_to_resources" : {
                            "items" : {
                              "properties" : {
                                "server" : {
                                  "properties" : {
                                    "id" : {
                                      "description" : "ID of the Resource",
                                      "example" : 42,
                                      "type" : "integer"
                                    }
                                  },
                                  "required" : [ "id" ],
                                  "type" : "object"
                                },
                                "type" : {
                                  "description" : "Type of resource referenced",
                                  "enum" : [ "server" ],
                                  "example" : "server",
                                  "type" : "string"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : "array"
                          },
                          "label_selector" : {
                            "properties" : {
                              "selector" : {
                                "description" : "Label selector",
                                "example" : "env=prod",
                                "type" : "string"
                              }
                            },
                            "required" : [ "selector" ],
                            "type" : "object"
                          },
                          "server" : {
                            "properties" : {
                              "id" : {
                                "description" : "ID of the Resource",
                                "example" : 42,
                                "type" : "integer"
                              }
                            },
                            "required" : [ "id" ],
                            "type" : "object"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "enum" : [ "server", "label_selector" ],
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Name of the Resource. Must be unique per Project.",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "rules" : {
                      "items" : {
                        "properties" : {
                          "description" : {
                            "description" : "Description of the Rule",
                            "maxLength" : 255,
                            "nullable" : true,
                            "type" : "string"
                          },
                          "destination_ips" : {
                            "description" : "List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.",
                            "example" : [ "28.239.13.1/32", "28.239.14.0/24", "ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128" ],
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          },
                          "direction" : {
                            "description" : "Select traffic direction on which rule should be applied. Use `source_ips` for direction `in` and `destination_ips` for direction `out`.",
                            "enum" : [ "in", "out" ],
                            "type" : "string"
                          },
                          "port" : {
                            "description" : "Port or port range to which traffic will be allowed, only applicable for protocols TCP and UDP. A port range can be specified by separating two ports with a dash, e.g `1024-5000`.",
                            "example" : "80",
                            "type" : "string"
                          },
                          "protocol" : {
                            "description" : "Type of traffic to allow",
                            "enum" : [ "tcp", "udp", "icmp", "esp", "gre" ],
                            "type" : "string"
                          },
                          "source_ips" : {
                            "description" : "List of permitted IPv4/IPv6 addresses in CIDR notation. Use `0.0.0.0/0` to allow all IPv4 addresses and `::/0` to allow all IPv6 addresses. You can specify 100 CIDRs at most.",
                            "example" : [ "28.239.13.1/32", "28.239.14.0/24", "ff21:1eac:9a3b:ee58:5ca:990c:8bc9:c03b/128" ],
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          }
                        },
                        "required" : [ "direction", "protocol" ],
                        "title" : "Rule",
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "required" : [ "id", "name", "created", "rules", "applied_to" ],
                  "title" : "Firewall",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "firewalls" ],
            "title" : "FirewallsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "bd8b616b-6e30-4efd-9df4-f9a2ca58888b",
    "name" : "Get a Datacenter",
    "request" : {
      "urlPath" : "/datacenters/7906639923725905361",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"datacenter\" : {\n    \"server_types\" : {\n      \"available_for_migration\" : [ 1, 2, 3 ],\n      \"available\" : [ 1, 2, 3 ],\n      \"supported\" : [ 1, 2, 3 ]\n    },\n    \"name\" : \"fsn1-dc8\",\n    \"description\" : \"Falkenstein DC Park 8\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"id\" : 42\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd8b616b-6e30-4efd-9df4-f9a2ca58888b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.723276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "datacenter" : {
                "properties" : {
                  "description" : {
                    "description" : "Description of the Datacenter",
                    "example" : "Falkenstein DC Park 8",
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "location" : {
                    "properties" : {
                      "city" : {
                        "description" : "City the Location is closest to",
                        "example" : "Falkenstein",
                        "type" : "string"
                      },
                      "country" : {
                        "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                        "example" : "DE",
                        "type" : "string"
                      },
                      "description" : {
                        "description" : "Description of the Location",
                        "example" : "Falkenstein DC Park 1",
                        "type" : "string"
                      },
                      "id" : {
                        "description" : "ID of the Location",
                        "example" : 1,
                        "type" : "number"
                      },
                      "latitude" : {
                        "description" : "Latitude of the city closest to the Location",
                        "example" : 50.47612,
                        "type" : "number"
                      },
                      "longitude" : {
                        "description" : "Longitude of the city closest to the Location",
                        "example" : 12.370071,
                        "type" : "number"
                      },
                      "name" : {
                        "description" : "Unique identifier of the Location",
                        "example" : "fsn1",
                        "type" : "string"
                      },
                      "network_zone" : {
                        "description" : "Name of network zone this Location resides in",
                        "example" : "eu-central",
                        "type" : "string"
                      }
                    },
                    "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Unique identifier of the Datacenter",
                    "example" : "fsn1-dc8",
                    "type" : "string"
                  },
                  "server_types" : {
                    "description" : "The Server types the Datacenter can handle",
                    "properties" : {
                      "available" : {
                        "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                        "example" : [ 1, 2, 3 ],
                        "items" : {
                          "type" : "number"
                        },
                        "type" : "array"
                      },
                      "available_for_migration" : {
                        "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                        "example" : [ 1, 2, 3 ],
                        "items" : {
                          "type" : "number"
                        },
                        "type" : "array"
                      },
                      "supported" : {
                        "description" : "IDs of Server types that are supported in the Datacenter",
                        "example" : [ 1, 2, 3 ],
                        "items" : {
                          "type" : "number"
                        },
                        "type" : "array"
                      }
                    },
                    "required" : [ "supported", "available", "available_for_migration" ],
                    "type" : "object"
                  }
                },
                "required" : [ "id", "name", "description", "location", "server_types" ],
                "type" : "object"
              }
            },
            "required" : [ "datacenter" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "28c03ade-aa59-4813-91a5-06ff127d8cbb",
    "name" : "Get all Datacenters",
    "request" : {
      "urlPath" : "/datacenters",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"datacenters\" : [ {\n    \"server_types\" : {\n      \"available_for_migration\" : [ 1, 2, 3 ],\n      \"available\" : [ 1, 2, 3 ],\n      \"supported\" : [ 1, 2, 3 ]\n    },\n    \"name\" : \"fsn1-dc8\",\n    \"description\" : \"Falkenstein DC Park 8\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"id\" : 42\n  }, {\n    \"server_types\" : {\n      \"available_for_migration\" : [ 1, 2, 3 ],\n      \"available\" : [ 1, 2, 3 ],\n      \"supported\" : [ 1, 2, 3 ]\n    },\n    \"name\" : \"fsn1-dc8\",\n    \"description\" : \"Falkenstein DC Park 8\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"id\" : 42\n  }, {\n    \"server_types\" : {\n      \"available_for_migration\" : [ 1, 2, 3 ],\n      \"available\" : [ 1, 2, 3 ],\n      \"supported\" : [ 1, 2, 3 ]\n    },\n    \"name\" : \"fsn1-dc8\",\n    \"description\" : \"Falkenstein DC Park 8\",\n    \"location\" : {\n      \"country\" : \"DE\",\n      \"network_zone\" : \"eu-central\",\n      \"city\" : \"Falkenstein\",\n      \"latitude\" : 50.47612,\n      \"name\" : \"fsn1\",\n      \"description\" : \"Falkenstein DC Park 1\",\n      \"id\" : 1,\n      \"longitude\" : 12.370071\n    },\n    \"id\" : 42\n  } ],\n  \"recommendation\" : 1\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28c03ade-aa59-4813-91a5-06ff127d8cbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.723064Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "datacenters" : {
                "items" : {
                  "properties" : {
                    "description" : {
                      "description" : "Description of the Datacenter",
                      "example" : "Falkenstein DC Park 8",
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "location" : {
                      "properties" : {
                        "city" : {
                          "description" : "City the Location is closest to",
                          "example" : "Falkenstein",
                          "type" : "string"
                        },
                        "country" : {
                          "description" : "ISO 3166-1 alpha-2 code of the country the Location resides in",
                          "example" : "DE",
                          "type" : "string"
                        },
                        "description" : {
                          "description" : "Description of the Location",
                          "example" : "Falkenstein DC Park 1",
                          "type" : "string"
                        },
                        "id" : {
                          "description" : "ID of the Location",
                          "example" : 1,
                          "type" : "number"
                        },
                        "latitude" : {
                          "description" : "Latitude of the city closest to the Location",
                          "example" : 50.47612,
                          "type" : "number"
                        },
                        "longitude" : {
                          "description" : "Longitude of the city closest to the Location",
                          "example" : 12.370071,
                          "type" : "number"
                        },
                        "name" : {
                          "description" : "Unique identifier of the Location",
                          "example" : "fsn1",
                          "type" : "string"
                        },
                        "network_zone" : {
                          "description" : "Name of network zone this Location resides in",
                          "example" : "eu-central",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "name", "description", "country", "city", "latitude", "longitude", "network_zone" ],
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Unique identifier of the Datacenter",
                      "example" : "fsn1-dc8",
                      "type" : "string"
                    },
                    "server_types" : {
                      "description" : "The Server types the Datacenter can handle",
                      "properties" : {
                        "available" : {
                          "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                          "example" : [ 1, 2, 3 ],
                          "items" : {
                            "type" : "number"
                          },
                          "type" : "array"
                        },
                        "available_for_migration" : {
                          "description" : "IDs of Server types that are supported and for which the Datacenter has enough resources left",
                          "example" : [ 1, 2, 3 ],
                          "items" : {
                            "type" : "number"
                          },
                          "type" : "array"
                        },
                        "supported" : {
                          "description" : "IDs of Server types that are supported in the Datacenter",
                          "example" : [ 1, 2, 3 ],
                          "items" : {
                            "type" : "number"
                          },
                          "type" : "array"
                        }
                      },
                      "required" : [ "supported", "available", "available_for_migration" ],
                      "type" : "object"
                    }
                  },
                  "required" : [ "id", "name", "description", "location", "server_types" ],
                  "type" : "object"
                },
                "type" : "array"
              },
              "recommendation" : {
                "description" : "The Datacenter which is recommended to be used to create new Servers.",
                "example" : 1,
                "type" : "number"
              }
            },
            "required" : [ "datacenters", "recommendation" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "9ae3daf1-2cf5-45cc-90a3-2c5907a535e1",
    "name" : "Get an Action for a Certificate",
    "request" : {
      "urlPath" : "/certificates/7259571467551223221/actions/7845226951894451251",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"issue_certificate\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2021-01-30T23:57:00+00:00\",\n    \"id\" : 14,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 896,\n      \"type\" : \"certificate\"\n    } ],\n    \"started\" : \"2021-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ae3daf1-2cf5-45cc-90a3-2c5907a535e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.722751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "8548d8b2-4b13-4ddb-aed9-5239f42a4854",
    "name" : "Retry Issuance or Renewal",
    "request" : {
      "urlPath" : "/certificates/5339357350413527302/actions/retry",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"issue_certificate\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2021-01-30T23:57:00+00:00\",\n    \"id\" : 14,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 896,\n      \"type\" : \"certificate\"\n    } ],\n    \"started\" : \"2021-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8548d8b2-4b13-4ddb-aed9-5239f42a4854",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.722622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "c9f0ce8d-57dc-4d2f-b953-12e943c4ef32",
    "name" : "Get all Actions for a Certificate",
    "request" : {
      "urlPath" : "/certificates/3847833539343466281/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"command\" : \"issue_certificate\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"finished\" : \"2021-01-30T23:57:00+00:00\",\n    \"id\" : 14,\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 896,\n      \"type\" : \"certificate\"\n    } ],\n    \"started\" : \"2021-01-30T23:55:00+00:00\",\n    \"status\" : \"success\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9f0ce8d-57dc-4d2f-b953-12e943c4ef32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.722493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "7f2ddf28-e0f5-4082-949c-60d957bc6e2a",
    "name" : "Update a Certificate",
    "request" : {
      "urlPath" : "/certificates/3206864172819469728",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"certificate\" : {\n    \"certificate\" : \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"domain_names\" : [ \"example.com\", \"webmail.example.com\", \"www.example.com\" ],\n    \"fingerprint\" : \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\" : 897,\n    \"labels\" : {\n      \"labelkey\" : \"value\"\n    },\n    \"name\" : \"my website cert\",\n    \"not_valid_after\" : \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\" : \"2019-01-08T10:00:00+00:00\",\n    \"type\" : \"uploaded\",\n    \"used_by\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f2ddf28-e0f5-4082-949c-60d957bc6e2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.7223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "certificate" : {
                "properties" : {
                  "certificate" : {
                    "description" : "Certificate and chain in PEM format, in order so that each record directly certifies the one preceding",
                    "example" : "-----BEGIN CERTIFICATE-----\n...",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "domain_names" : {
                    "description" : "Domains and subdomains covered by the Certificate",
                    "example" : [ "example.com", "webmail.example.com", "www.example.com" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "fingerprint" : {
                    "description" : "SHA256 fingerprint of the Certificate",
                    "example" : "03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "not_valid_after" : {
                    "description" : "Point in time when the Certificate stops being valid (in ISO-8601 format)",
                    "example" : "2019-07-08T09:59:59+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "not_valid_before" : {
                    "description" : "Point in time when the Certificate becomes valid (in ISO-8601 format)",
                    "example" : "2019-01-08T10:00:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates",
                    "nullable" : true,
                    "properties" : {
                      "error" : {
                        "description" : "If issuance or renewal reports `failed`, this property contains information about what happened",
                        "nullable" : true,
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "message" : {
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "issuance" : {
                        "description" : "Status of the issuance process of the Certificate",
                        "enum" : [ "pending", "completed", "failed" ],
                        "example" : "valid",
                        "type" : "string"
                      },
                      "renewal" : {
                        "description" : "Status of the renewal process of the Certificate.",
                        "enum" : [ "scheduled", "pending", "failed", "unavailable" ],
                        "example" : "scheduled",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "Type of the Certificate",
                    "enum" : [ "uploaded", "managed" ],
                    "example" : "uploaded",
                    "type" : "string"
                  },
                  "used_by" : {
                    "description" : "Resources currently using the Certificate",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of resource referenced",
                          "example" : 4711,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "load_balancer",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "labels", "certificate", "created", "not_valid_before", "not_valid_after", "domain_names", "fingerprint", "used_by" ],
                "title" : "Certificate",
                "type" : "object"
              }
            },
            "required" : [ "certificate" ],
            "title" : "CertificateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "551a32f0-75c9-445f-a501-f083692e4392",
    "name" : "Get a Certificate",
    "request" : {
      "urlPath" : "/certificates/8255834893223627349",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"certificate\" : {\n    \"certificate\" : \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"domain_names\" : [ \"example.com\", \"webmail.example.com\", \"www.example.com\" ],\n    \"fingerprint\" : \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\" : 897,\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"name\" : \"my website cert\",\n    \"not_valid_after\" : \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\" : \"2019-01-08T10:00:00+00:00\",\n    \"type\" : \"uploaded\",\n    \"used_by\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "551a32f0-75c9-445f-a501-f083692e4392",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.722118Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "certificate" : {
                "properties" : {
                  "certificate" : {
                    "description" : "Certificate and chain in PEM format, in order so that each record directly certifies the one preceding",
                    "example" : "-----BEGIN CERTIFICATE-----\n...",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "domain_names" : {
                    "description" : "Domains and subdomains covered by the Certificate",
                    "example" : [ "example.com", "webmail.example.com", "www.example.com" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "fingerprint" : {
                    "description" : "SHA256 fingerprint of the Certificate",
                    "example" : "03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "not_valid_after" : {
                    "description" : "Point in time when the Certificate stops being valid (in ISO-8601 format)",
                    "example" : "2019-07-08T09:59:59+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "not_valid_before" : {
                    "description" : "Point in time when the Certificate becomes valid (in ISO-8601 format)",
                    "example" : "2019-01-08T10:00:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates",
                    "nullable" : true,
                    "properties" : {
                      "error" : {
                        "description" : "If issuance or renewal reports `failed`, this property contains information about what happened",
                        "nullable" : true,
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "message" : {
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "issuance" : {
                        "description" : "Status of the issuance process of the Certificate",
                        "enum" : [ "pending", "completed", "failed" ],
                        "example" : "valid",
                        "type" : "string"
                      },
                      "renewal" : {
                        "description" : "Status of the renewal process of the Certificate.",
                        "enum" : [ "scheduled", "pending", "failed", "unavailable" ],
                        "example" : "scheduled",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "Type of the Certificate",
                    "enum" : [ "uploaded", "managed" ],
                    "example" : "uploaded",
                    "type" : "string"
                  },
                  "used_by" : {
                    "description" : "Resources currently using the Certificate",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of resource referenced",
                          "example" : 4711,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "load_balancer",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "labels", "certificate", "created", "not_valid_before", "not_valid_after", "domain_names", "fingerprint", "used_by" ],
                "title" : "Certificate",
                "type" : "object"
              }
            },
            "required" : [ "certificate" ],
            "title" : "CertificateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "5cf4fa92-77bf-4398-a635-3d29a3dd7d73",
    "name" : "Delete a Certificate - 204",
    "request" : {
      "urlPath" : "/certificates/5490602765411759603",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5cf4fa92-77bf-4398-a635-3d29a3dd7d73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.721942Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "5a90b56f-a43f-446d-a7c3-bbe026b98686",
    "name" : "Create a Certificate - uploaded",
    "request" : {
      "urlPath" : "/certificates",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"certificate\" : {\n    \"certificate\" : \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"domain_names\" : [ \"example.com\", \"webmail.example.com\", \"www.example.com\" ],\n    \"fingerprint\" : \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\" : 897,\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"name\" : \"my website cert\",\n    \"not_valid_after\" : \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\" : \"2019-01-08T10:00:00+00:00\",\n    \"type\" : \"uploaded\",\n    \"used_by\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a90b56f-a43f-446d-a7c3-bbe026b98686",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.721901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "nullable" : true,
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "NullableAction",
                "type" : "object"
              },
              "certificate" : {
                "properties" : {
                  "certificate" : {
                    "description" : "Certificate and chain in PEM format, in order so that each record directly certifies the one preceding",
                    "example" : "-----BEGIN CERTIFICATE-----\n...",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "domain_names" : {
                    "description" : "Domains and subdomains covered by the Certificate",
                    "example" : [ "example.com", "webmail.example.com", "www.example.com" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "fingerprint" : {
                    "description" : "SHA256 fingerprint of the Certificate",
                    "example" : "03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "not_valid_after" : {
                    "description" : "Point in time when the Certificate stops being valid (in ISO-8601 format)",
                    "example" : "2019-07-08T09:59:59+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "not_valid_before" : {
                    "description" : "Point in time when the Certificate becomes valid (in ISO-8601 format)",
                    "example" : "2019-01-08T10:00:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates",
                    "nullable" : true,
                    "properties" : {
                      "error" : {
                        "description" : "If issuance or renewal reports `failed`, this property contains information about what happened",
                        "nullable" : true,
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "message" : {
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "issuance" : {
                        "description" : "Status of the issuance process of the Certificate",
                        "enum" : [ "pending", "completed", "failed" ],
                        "example" : "valid",
                        "type" : "string"
                      },
                      "renewal" : {
                        "description" : "Status of the renewal process of the Certificate.",
                        "enum" : [ "scheduled", "pending", "failed", "unavailable" ],
                        "example" : "scheduled",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "Type of the Certificate",
                    "enum" : [ "uploaded", "managed" ],
                    "example" : "uploaded",
                    "type" : "string"
                  },
                  "used_by" : {
                    "description" : "Resources currently using the Certificate",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of resource referenced",
                          "example" : 4711,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "load_balancer",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "labels", "certificate", "created", "not_valid_before", "not_valid_after", "domain_names", "fingerprint", "used_by" ],
                "title" : "Certificate",
                "type" : "object"
              }
            },
            "required" : [ "certificate" ],
            "title" : "CreateCertificateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "8a0436d3-2188-4ce9-98a0-fab07b57a73a",
    "name" : "Create a Certificate - managed",
    "request" : {
      "urlPath" : "/certificates",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"action\" : {\n    \"command\" : \"create_certificate\",\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"id\" : 13,\n    \"progress\" : 0,\n    \"resources\" : [ {\n      \"id\" : 879,\n      \"type\" : \"certificate\"\n    } ],\n    \"started\" : \"2019-01-08T12:10:00+00:00\",\n    \"status\" : \"running\"\n  },\n  \"certificate\" : {\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"domain_names\" : [ \"example.com\", \"webmail.example.com\", \"www.example.com\" ],\n    \"id\" : 897,\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"name\" : \"my website cert\",\n    \"status\" : {\n      \"issuance\" : \"pending\",\n      \"renewal\" : \"unavailable\"\n    },\n    \"type\" : \"managed\",\n    \"used_by\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a0436d3-2188-4ce9-98a0-fab07b57a73a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.721675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "nullable" : true,
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "NullableAction",
                "type" : "object"
              },
              "certificate" : {
                "properties" : {
                  "certificate" : {
                    "description" : "Certificate and chain in PEM format, in order so that each record directly certifies the one preceding",
                    "example" : "-----BEGIN CERTIFICATE-----\n...",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "created" : {
                    "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "domain_names" : {
                    "description" : "Domains and subdomains covered by the Certificate",
                    "example" : [ "example.com", "webmail.example.com", "www.example.com" ],
                    "items" : {
                      "type" : "string"
                    },
                    "type" : "array"
                  },
                  "fingerprint" : {
                    "description" : "SHA256 fingerprint of the Certificate",
                    "example" : "03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "labels" : {
                    "additionalProperties" : {
                      "type" : "string"
                    },
                    "description" : "User-defined labels (key-value pairs)",
                    "type" : "object"
                  },
                  "name" : {
                    "description" : "Name of the Resource. Must be unique per Project.",
                    "example" : "my-resource",
                    "type" : "string"
                  },
                  "not_valid_after" : {
                    "description" : "Point in time when the Certificate stops being valid (in ISO-8601 format)",
                    "example" : "2019-07-08T09:59:59+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "not_valid_before" : {
                    "description" : "Point in time when the Certificate becomes valid (in ISO-8601 format)",
                    "example" : "2019-01-08T10:00:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates",
                    "nullable" : true,
                    "properties" : {
                      "error" : {
                        "description" : "If issuance or renewal reports `failed`, this property contains information about what happened",
                        "nullable" : true,
                        "properties" : {
                          "code" : {
                            "type" : "string"
                          },
                          "message" : {
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "issuance" : {
                        "description" : "Status of the issuance process of the Certificate",
                        "enum" : [ "pending", "completed", "failed" ],
                        "example" : "valid",
                        "type" : "string"
                      },
                      "renewal" : {
                        "description" : "Status of the renewal process of the Certificate.",
                        "enum" : [ "scheduled", "pending", "failed", "unavailable" ],
                        "example" : "scheduled",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : {
                    "description" : "Type of the Certificate",
                    "enum" : [ "uploaded", "managed" ],
                    "example" : "uploaded",
                    "type" : "string"
                  },
                  "used_by" : {
                    "description" : "Resources currently using the Certificate",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of resource referenced",
                          "example" : 4711,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "load_balancer",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "required" : [ "id", "name", "labels", "certificate", "created", "not_valid_before", "not_valid_after", "domain_names", "fingerprint", "used_by" ],
                "title" : "Certificate",
                "type" : "object"
              }
            },
            "required" : [ "certificate" ],
            "title" : "CreateCertificateResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "6cd32a7d-8640-4ec4-a988-daf992e73530",
    "name" : "Get all Certificates",
    "request" : {
      "urlPath" : "/certificates",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"certificates\" : [ {\n    \"certificate\" : \"-----BEGIN CERTIFICATE-----\\n...\",\n    \"created\" : \"2019-01-08T12:10:00+00:00\",\n    \"domain_names\" : [ \"example.com\", \"webmail.example.com\", \"www.example.com\" ],\n    \"fingerprint\" : \"03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f\",\n    \"id\" : 897,\n    \"labels\" : {\n      \"env\" : \"dev\"\n    },\n    \"name\" : \"my website cert\",\n    \"not_valid_after\" : \"2019-07-08T09:59:59+00:00\",\n    \"not_valid_before\" : \"2019-01-08T10:00:00+00:00\",\n    \"type\" : \"uploaded\",\n    \"used_by\" : [ {\n      \"id\" : 4711,\n      \"type\" : \"load_balancer\"\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cd32a7d-8640-4ec4-a988-daf992e73530",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.721384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "certificates" : {
                "items" : {
                  "properties" : {
                    "certificate" : {
                      "description" : "Certificate and chain in PEM format, in order so that each record directly certifies the one preceding",
                      "example" : "-----BEGIN CERTIFICATE-----\n...",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "created" : {
                      "description" : "Point in time when the Resource was created (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "domain_names" : {
                      "description" : "Domains and subdomains covered by the Certificate",
                      "example" : [ "example.com", "webmail.example.com", "www.example.com" ],
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "fingerprint" : {
                      "description" : "SHA256 fingerprint of the Certificate",
                      "example" : "03:c7:55:9b:2a:d1:04:17:09:f6:d0:7f:18:34:63:d4:3e:5f",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "labels" : {
                      "additionalProperties" : {
                        "type" : "string"
                      },
                      "description" : "User-defined labels (key-value pairs)",
                      "type" : "object"
                    },
                    "name" : {
                      "description" : "Name of the Resource. Must be unique per Project.",
                      "example" : "my-resource",
                      "type" : "string"
                    },
                    "not_valid_after" : {
                      "description" : "Point in time when the Certificate stops being valid (in ISO-8601 format)",
                      "example" : "2019-07-08T09:59:59+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "not_valid_before" : {
                      "description" : "Point in time when the Certificate becomes valid (in ISO-8601 format)",
                      "example" : "2019-01-08T10:00:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Current status of a type `managed` Certificate, always *null* for type `uploaded` Certificates",
                      "nullable" : true,
                      "properties" : {
                        "error" : {
                          "description" : "If issuance or renewal reports `failed`, this property contains information about what happened",
                          "nullable" : true,
                          "properties" : {
                            "code" : {
                              "type" : "string"
                            },
                            "message" : {
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "issuance" : {
                          "description" : "Status of the issuance process of the Certificate",
                          "enum" : [ "pending", "completed", "failed" ],
                          "example" : "valid",
                          "type" : "string"
                        },
                        "renewal" : {
                          "description" : "Status of the renewal process of the Certificate.",
                          "enum" : [ "scheduled", "pending", "failed", "unavailable" ],
                          "example" : "scheduled",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : {
                      "description" : "Type of the Certificate",
                      "enum" : [ "uploaded", "managed" ],
                      "example" : "uploaded",
                      "type" : "string"
                    },
                    "used_by" : {
                      "description" : "Resources currently using the Certificate",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of resource referenced",
                            "example" : 4711,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "load_balancer",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "required" : [ "id", "name", "labels", "certificate", "created", "not_valid_before", "not_valid_after", "domain_names", "fingerprint", "used_by" ],
                  "title" : "Certificate",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "certificates" ],
            "title" : "CertificatesResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "c2f5246c-3a42-4a2e-b0d6-acc880ea7537",
    "name" : "Get an Action",
    "request" : {
      "urlPath" : "/actions/5567211452320209598",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"action\" : {\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"finished\" : \"2016-01-30T23:55:00+00:00\",\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"id\" : 42,\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"command\" : \"start_server\",\n    \"status\" : \"error\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2f5246c-3a42-4a2e-b0d6-acc880ea7537",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.721098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "action" : {
                "properties" : {
                  "command" : {
                    "description" : "Command executed in the Action",
                    "example" : "start_server",
                    "type" : "string"
                  },
                  "error" : {
                    "description" : "Error message for the Action if error occurred, otherwise null",
                    "nullable" : true,
                    "properties" : {
                      "code" : {
                        "description" : "Fixed machine readable code",
                        "example" : "action_failed",
                        "type" : "string"
                      },
                      "message" : {
                        "description" : "Humanized error message",
                        "example" : "Action failed",
                        "type" : "string"
                      }
                    },
                    "required" : [ "code", "message" ],
                    "type" : "object"
                  },
                  "finished" : {
                    "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "nullable" : true,
                    "type" : "string"
                  },
                  "id" : {
                    "description" : "ID of the Resource",
                    "example" : 42,
                    "type" : "integer"
                  },
                  "progress" : {
                    "description" : "Progress of Action in percent",
                    "example" : 100,
                    "type" : "number"
                  },
                  "resources" : {
                    "description" : "Resources the Action relates to",
                    "items" : {
                      "properties" : {
                        "id" : {
                          "description" : "ID of the Resource",
                          "example" : 42,
                          "type" : "integer"
                        },
                        "type" : {
                          "description" : "Type of resource referenced",
                          "example" : "server",
                          "type" : "string"
                        }
                      },
                      "required" : [ "id", "type" ],
                      "type" : "object"
                    },
                    "type" : "array"
                  },
                  "started" : {
                    "description" : "Point in time when the Action was started (in ISO-8601 format)",
                    "example" : "2016-01-30T23:55:00+00:00",
                    "type" : "string"
                  },
                  "status" : {
                    "description" : "Status of the Action",
                    "enum" : [ "success", "running", "error" ],
                    "type" : "string"
                  }
                },
                "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                "title" : "Action",
                "type" : "object"
              }
            },
            "required" : [ "action" ],
            "title" : "ActionResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "f519c4fa-18e7-4f29-a473-dd35cf10e77b",
    "name" : "Get all Actions",
    "request" : {
      "urlPath" : "/actions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"meta\" : {\n    \"pagination\" : {\n      \"next_page\" : 4,\n      \"per_page\" : 25,\n      \"last_page\" : 4,\n      \"page\" : 3,\n      \"previous_page\" : 2,\n      \"total_entries\" : 100\n    }\n  },\n  \"actions\" : [ {\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"finished\" : \"2016-01-30T23:55:00+00:00\",\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"id\" : 42,\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"command\" : \"start_server\",\n    \"status\" : \"success\"\n  }, {\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"finished\" : \"2016-01-30T23:55:00+00:00\",\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"id\" : 42,\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"command\" : \"start_server\",\n    \"status\" : \"success\"\n  }, {\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"finished\" : \"2016-01-30T23:55:00+00:00\",\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"id\" : 42,\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"command\" : \"start_server\",\n    \"status\" : \"error\"\n  }, {\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"finished\" : \"2016-01-30T23:55:00+00:00\",\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"id\" : 42,\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"command\" : \"start_server\",\n    \"status\" : \"error\"\n  }, {\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"finished\" : \"2016-01-30T23:55:00+00:00\",\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"id\" : 42,\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"command\" : \"start_server\",\n    \"status\" : \"running\"\n  }, {\n    \"progress\" : 100,\n    \"resources\" : [ {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    }, {\n      \"id\" : 42,\n      \"type\" : \"server\"\n    } ],\n    \"finished\" : \"2016-01-30T23:55:00+00:00\",\n    \"started\" : \"2016-01-30T23:55:00+00:00\",\n    \"id\" : 42,\n    \"error\" : {\n      \"code\" : \"action_failed\",\n      \"message\" : \"Action failed\"\n    },\n    \"command\" : \"start_server\",\n    \"status\" : \"running\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f519c4fa-18e7-4f29-a473-dd35cf10e77b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:38.720877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "actions" : {
                "items" : {
                  "properties" : {
                    "command" : {
                      "description" : "Command executed in the Action",
                      "example" : "start_server",
                      "type" : "string"
                    },
                    "error" : {
                      "description" : "Error message for the Action if error occurred, otherwise null",
                      "nullable" : true,
                      "properties" : {
                        "code" : {
                          "description" : "Fixed machine readable code",
                          "example" : "action_failed",
                          "type" : "string"
                        },
                        "message" : {
                          "description" : "Humanized error message",
                          "example" : "Action failed",
                          "type" : "string"
                        }
                      },
                      "required" : [ "code", "message" ],
                      "type" : "object"
                    },
                    "finished" : {
                      "description" : "Point in time when the Action was finished (in ISO-8601 format). Only set if the Action is finished otherwise null.",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "nullable" : true,
                      "type" : "string"
                    },
                    "id" : {
                      "description" : "ID of the Resource",
                      "example" : 42,
                      "type" : "integer"
                    },
                    "progress" : {
                      "description" : "Progress of Action in percent",
                      "example" : 100,
                      "type" : "number"
                    },
                    "resources" : {
                      "description" : "Resources the Action relates to",
                      "items" : {
                        "properties" : {
                          "id" : {
                            "description" : "ID of the Resource",
                            "example" : 42,
                            "type" : "integer"
                          },
                          "type" : {
                            "description" : "Type of resource referenced",
                            "example" : "server",
                            "type" : "string"
                          }
                        },
                        "required" : [ "id", "type" ],
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "started" : {
                      "description" : "Point in time when the Action was started (in ISO-8601 format)",
                      "example" : "2016-01-30T23:55:00+00:00",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Status of the Action",
                      "enum" : [ "success", "running", "error" ],
                      "type" : "string"
                    }
                  },
                  "required" : [ "id", "command", "status", "progress", "started", "finished", "resources", "error" ],
                  "title" : "Action",
                  "type" : "object"
                },
                "type" : "array"
              },
              "meta" : {
                "properties" : {
                  "pagination" : {
                    "properties" : {
                      "last_page" : {
                        "description" : "ID of the last page available. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "next_page" : {
                        "description" : "ID of the next page. Can be null if the current page is the last one.",
                        "example" : 4,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "page" : {
                        "description" : "Current page number",
                        "example" : 3,
                        "type" : "number"
                      },
                      "per_page" : {
                        "description" : "Maximum number of items shown per page in the response",
                        "example" : 25,
                        "type" : "number"
                      },
                      "previous_page" : {
                        "description" : "ID of the previous page. Can be null if the current page is the first one.",
                        "example" : 2,
                        "nullable" : true,
                        "type" : "number"
                      },
                      "total_entries" : {
                        "description" : "The total number of entries that exist in the database for this query. Nullable if unknown.",
                        "example" : 100,
                        "nullable" : true,
                        "type" : "number"
                      }
                    },
                    "required" : [ "page", "per_page", "previous_page", "next_page", "last_page", "total_entries" ],
                    "type" : "object"
                  }
                },
                "required" : [ "pagination" ],
                "type" : "object"
              }
            },
            "required" : [ "actions" ],
            "title" : "ActionsResponse",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 144
  } ]
}