{
  "mappings" : [ {
    "id" : "5ffa1ab4-4d41-4c78-be4a-a5b93a3b8c87",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/67jmohlk0on4zh1fq9vqyrl4vs3becu0fw6k404l4uhvpee18bgwsqrj1pbzzm6q0fhjq4ze2k4vlf4gxk6otzs6r85bzgaddwwec:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"4zsxqs5tqnksjlq028p0iv7w5mumfomj6mfdjl989haok43ovm3l7f5ml7hsbnjr05xwta3bn3jcbdu1qy2vvewifk78biuawniaxby9m7mxaf97elnm3z60bvj6x1xg82z7uh4vc7th3f6qvlpnz3gfxi5nqbhhrlbs584hv1cfy82ltk0ce56pi8eu1oygtcb\", \"9awal5z3xqo0bwm9rjjjf3ihjfz3gz\", \"gfg40g0qdpjrqxzhhcxw9dipmh5gky7klsh7mfilxisb0o4pmeij\", \"bw7duuu33c2brmmfnzxy4mqvbbab\", \"xmchc27upndu6rvf9mpow00sf4f0qiyr034qs\", \"1yym2vlza38ru7g8cjdldj13cqzxpcoh1zksrhvi8x8khz4vltgyx5pcjl47rfl9blhxbk9ahiw9vdwlhktcydicftbrftq132utp3zj1mo5g5pg9naqi1gekyx1jjcokgl3uwn8f97dgqv0d705nzo0dl0391xnz1kjco8npkr\", \"f5kfo88w0lulrjrszlf21c7104g9n1513hx\", \"ortl84mh8g8r0ru8qltflu2qaageg4cbaid1zc3yhb8jsc5hb57mugp5nw3ci56tjx\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ffa1ab4-4d41-4c78-be4a-a5b93a3b8c87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.771414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "0399edde-c7b3-47df-a297-73d556f4b5e8",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/ac615ub6gvr6anzkmedddfu256ha41p9vit6lt0sgygcih0m56pd1r9zs9ft14bxq0jur5hxa9sis69d0vtrhsd43q23m0wrdprmqfsjbmnl2ym2ihiad1haf7z4gdauve:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"7c00u78ykn9b8rlmnqcuueonu0s7g2jwgftrx31iwrn3fdkvtl7zwehqucb64oeuob0zb14ut82gep7v5ylybrgxpws3y3ubhw2yc0nvz\",\n      \"description\" : \"Beatae aut beatae vel eos ut. Nemo fuga quia sit corrupti et qui dolor. Ut quibusdam amet illum et.\",\n      \"location\" : \"rs2msz73qvivnqao7v765gx8zf9og3tb19xv8hw99\",\n      \"title\" : \"Voluptates soluta quam omnis.\"\n    },\n    \"role\" : \"f9eqivnh9tvzguyvvmmkgnsg6gvgww0n1edoi5z67fr\",\n    \"members\" : [ \"9rtu8itn8x2ob72c8wrul1zdtsn1fawcbtsirvndroema2q54ru3khtzjube49for17h1xmg56a3lq10dqxd5n1smxwx6sxo908m1w\", \"k5ew1iu4s8an9keungmdzmgkes01h46lworywn67ikyuit6mt94czebs09jm6cvssafw20kaeoqinutw9ev\", \"ceq03ohkd4um7t0tc8zd5p1fg2twzn560eiatfubv5ukf4yhhueu8kzq2ikyffrdswbfugfe61pbf\", \"q8f79ray603jj2conultjza25lkb74cgwdf08a\", \"gprjkaoi47274a6y0e\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dee\",\n      \"description\" : \"Consequuntur nam similique qui voluptatem quisquam. Non ad quae libero qui ipsam inventore. Tenetur est eos vel doloremque. Temporibus quos ut. Labore quo nihil.\",\n      \"location\" : \"ivqi1ojt1v9rky2u8rfs55mk0mb3vvui2khs7ygoyj3rn2fk00g0orz9atnqws8t7u0es4f022arbqb54czdci4qt4scrpb2fmpg4v7357wbd7yeh0vss4lbdck4f0vj1z8xmxu8aj154af19cl1p4isagprgqf25pzy2\",\n      \"title\" : \"Earum aut voluptas eum neque.\"\n    },\n    \"role\" : \"9hh7kp7wronoyn7b3lucfby82ne0rgyzmxlnhkhjirwn3z44l2yarv8o7orw7ojgd7uppzwil1u1kh3ycik9l6hj67rt2ophdyn1azdu1heya3kuk61wpj9druruwqud7wwfeaiq5fnhlrngaqkqaao47hbpgg4hdzmfq282thm4kck6dlmk2wa3cx2wwtpjujd52e\",\n    \"members\" : [ \"z5xa0swh3pejsgyw5ec34e2qmun0hzttfmz7u8z3s5fso23cgk77q5i3mm1mengbx3js5ru0ofj1nz4ouhmqgx3gux53rjwngkihfof62ozfcw0kzrh66gp633zzyd\", \"jp0t0z0a7puvh8qc9hw3xtxyvd02gkgzhhixnk1708uysj7pe7gw1ycb85mpep462jtztqvh6m8tggavxd7tfpqe7y0d5ajwzuxn7bmjg77nx9fmcn0hiajcgo2t4yfqevlx9lmxen8fvwqr988pwyw4ku7zlw6vhhal7fr4gxardkrpvlqq3vrzqpfxybezo1j2oxa\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"q61d3l1pfuyyfhmk5evdrwfsfgv5enea5xno0\",\n      \"description\" : \"Fugit architecto dolorem. Ipsum repudiandae et quidem. Quo in molestiae voluptate maxime et sunt. Minima minima molestiae hic quos ipsum. Voluptatem et repellendus.\",\n      \"location\" : \"fumd8wozkyeqvoc78vo6sertedwxeudy4n8gs5ddlivcn30r66rxg8tyn447p\",\n      \"title\" : \"Nihil fugiat recusandae totam provident voluptates.\"\n    },\n    \"role\" : \"5xjk7xqrdcz4gi5b0voonyp7dfdxubtzgwurdmfgh7zngurgm6mq9ivk5849ntovz8bsn3ryd3ra6yo0mk4x0j6djx9b7kpghd0hpiyyy9nw97ee0471y6f1zx84t3s5vebhzhhsrla79sc4bo3mpqpl6phejs63k9dh1\",\n    \"members\" : [ \"irzxj33vx5k7y71cc5g3fsjdybuiewfux87nkvljono8sj6bk3fljvpxe96ewtofqxmuca3rvqg82v8yg0ny839drrcpkl8u974m7g2ugvt9ozriowleto3nedgl1ej83h2nglwctiyoez7moyo8ffnn62ox4qmgzl4to6z\", \"1zs4v98u90vcnoa0icl0s4sdpb3viej6f453rzp902bb8hv6cy0hvsxlzx8wwfaqukbymwf3smi6oqmd3sruamtqfl6yj8igc5jrrz\", \"qew2mb8pdsez5h1g15giobv0k9mb241las6ir10oj312mmb99ns8rkj6wb4id6b\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"y8cvz61j0nvzlpo0pvqkyhzer1rivnwy2yza2wmyqs2yvbmt8onbp5ba2odd1euw5rij23yhuyvw2vp8avdi30ddzlx7j2jxho8p246ka3zlrfxtxfslrc0dfk\",\n      \"description\" : \"Dicta explicabo vero atque qui eos aut. Magnam nemo et eaque qui impedit voluptatem dignissimos. Recusandae ut explicabo quis vel. Architecto non aut dignissimos quidem. Voluptatem sapiente ut sapient\",\n      \"location\" : \"ffb11ni9l3teb2e5t40jl\",\n      \"title\" : \"Aut provident ipsam.\"\n    },\n    \"role\" : \"86eha52lza2ryeg6y6gztr2mhm\",\n    \"members\" : [ \"iq3wbvt4t30etishpawblgqrwnj8sb54nlarnpd49sd29xq16w912xqo5v5boxe\", \"dzn25dtgmily33mc266evantw00k1k5rvauvawdgtsiufkgjome7xrso1g19gjz6e4lt234jxrkev27zt8290ybgpuude9nv62ubtjf1fyxiclyno3gshf7m5vky6amuqbrf46pbnuwasp97u75n6d\", \"3gaj7wiw4lrhl0ptknrxul6bvabze7uj3crinn9ysde2j453ezsvffutf6szgq1hs54oikffqjizxq1abaq2qwbn8r0ql2qtqsdcazcbbw64dwrs85y9jxk66lv2ou4by4dvhvi7j2kkxx97w3csii16wa8vrkzz355s4pi5ko9v3c7xj9jsna\", \"1loedb38hh15nbkyzqjzawkoz7uprw57r5d3gpeyzvwszrx70gco25q83bvs2b4nliftqsgamr4d7d3f41w8z5gbm48rzmhvrwtkf2hij5djan\", \"ul74\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"5wnle9xfcxy5bgcdn3uknumh5diz9qwdl0woujmn5sail69tpfd5l5wtikivs4l9t9aronjcftj1iiybwm7ooj8o3fxi0jk9hi1rdladbbm1m8siezb5slo1meo\",\n      \"description\" : \"Ut et neque dicta id dolores. Fugit et id. Quia beatae repudiandae rem provident. Dolorum voluptatem nemo et expedita laborum eos.\",\n      \"location\" : \"20xvldx6ljptm0dcz28c6swx588620p6mv3rw57zyve42ckh3hibu4h2s99cximoof3pmup21y2uas4wjkg9f9c7866iwlqa3esw8ziy2rph\",\n      \"title\" : \"Et id eum ducimus distinctio consectetur ut.\"\n    },\n    \"role\" : \"lgnuyuy1u1wdy6joo71o5lol0hgffxdh0zi0slmg49391f8e5btkkk5158xw39ge9jhjem93hnunv56f3lbfkl8vspng1we90ozy1nphd\",\n    \"members\" : [ \"xct9lhlj79p32rvesnxpy30lupj61awhsu2k2kbr3pidxhlcsn9up7bhgx7mug8tqce1ol0ck2yy6zokafeb3u039b5ebq7lophn\", \"s02nqx6ex2033wthu5ybpx8hb7608s8gtvah8nugy3vfmtfkw5j8mue3utlw5dvmckufy08ee4vgnmkjt1zbmj6qj18ry08oe478hguw9sxahbag8xenmyrgqlyg74wsqd4c9mw6cr5wigwqu5fl0xa3tosssyu0cxiw7b80ahe6cc2shmnwd1x1z\", \"i55m73b1h5mjs4wiy96dxqk5wqzinfz1nr3ctf1mop31e4sige90aiveu7tvhuzkwsv9sgtcdknveqmph4r9fhuyy2kvn4dbpv4h4m4n7sp1fb064age27taefz898gn\", \"7wobbyupjtviglhjhf2zb9dnr8zy24blobuow7nbzzzrw3dddrmll73lmowcpx6zxgo3to4t2tt086kj8o839r3jpic9r03enqgpg58iqcdkdr85a76i9u0jb7lvfnf41rkevq3i83ych4hwyrma3u3tdq5yhgpk0faqdzalj\", \"ifo1wtsxlrcxq49v22m9ckq9v0tefcf\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"62bhwpa7zv5e2wrrz7jeqgofegr6k78rndjpwby79r579jxft6tnycbtwz0yqcclfh14luyg4ivufa8h8eg22d06xg5p9jr7jrox4sqa4mc6sjk5dc1hixwmkkrj9idytxaee52902cw4gpfnej5qiypu96xdbuk4xw3hvmxc2ezzfkjua0kp5pza\",\n      \"description\" : \"Temporibus facilis unde natus est. Accusantium omnis sed temporibus. Nostrum at odio suscipit optio.\",\n      \"location\" : \"b0zak154e9wxtede05nrdmv5fswlo92oyr5v66nk5yy8qu4h47hkt39b55kx61vesd4qxoyn6cau6v28ly8ewp2b88uuvk92ojz7gwi4f268qclbpvr4tl6jnhd8dlb5r7vfwdv4jf6h1aidmk229rtwk9eotgd0feip1o8r2x09xo17jauwgmnm3a0aq2a6i5o9bcr9\",\n      \"title\" : \"Voluptas dicta dolore at non in optio.\"\n    },\n    \"role\" : \"vjgdcf48tmh5xyy4qkzoxz6duu20je0awklfj8zs3ux97iuxtxor0um5vr943\",\n    \"members\" : [ \"wizmift202lqh7ki54w2bxtulafum8u64yoyhinewd9ys8e94iogbzdlxqkprzb4fnztrtu68zhu8ay55j295ggrim5mvh0wyu92aoirk3scdycfywaad66kuci32jgxouk44g0okew9zm879xhrynzbshmtc3tw1800mfy6tgt1hgizi6ismiwog0qw0\", \"crdnznuxfu8ay9478zsjq087651clgvph47qw5gx62whzz3lktjxopz80epo9r8fytziwhs12vdy68lwvi10lqteydpj\", \"6m43znb7325m7co8m6h2q91lcmlisy10mntdu33yjff7yfu8v5fagfv5qvdyqa5ax0ewhojc7gn4x5lmsx7w80fplt15vispmdb5fz47ul0l8x6nf6qrple9e2kzmzv9acga4vmdy61c0c0fusmnca351hlybx22lilzpdck\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"35c2jfsoelldjf2w4v78z5wyjq8jr8ip3dpgkt3ivrxcih9lfrhea2ooeljxjtuejnhnm7l1dx4s8jyks17qh1uxjz7k09hjit513k0pr0iihqgxb8op8h6ljvziukjdhbw55dfaef2d197sahx2ektopeo\",\n      \"description\" : \"Ratione incidunt quia ipsum voluptatibus tenetur odit quia. Adipisci enim sit quidem ducimus vitae ad voluptatem. Deleniti necessitatibus ipsa iure et est quia qui. Officia voluptatem enim.\",\n      \"location\" : \"cemqjatdo117qksmfuc0yy0bg32crhhf7anairx436ccsmgv4toqkx8t21vio49aviefg29qcf80\",\n      \"title\" : \"Distinctio repellat molestias omnis ullam animi.\"\n    },\n    \"role\" : \"c7a57gujdazpamgkuuu2ulsh269zzghahx7wtd6gj4ql8x6s4exupr25eitjs1zlo7de7mq0uvnwhxpt4rurmkxy6ksefl77nx0iorl70eezblsxzqnw4i5se1kq0f27fev5cd0l3mf1lz8uwuvi7fzr19nwfxsm7fkjfqavbeefb2wj1gxxzuzwknj4p6o30zxs1f3\",\n    \"members\" : [ \"ui1fsndl6qm9atpv343a7gwghejr4lbw8sqaozxict0m5o61zf8ss4774u9cpgv54odd1xq4tregu26xtlfabsj213hsrpg6ruz6kg8w2cwshvg4bn6aq9xkz86xcj0btth7wykteb6am7ktdwqlglw5nayl22pheuhs16e7bp0eiqjw1\", \"vnzqdzk8ai4z3fkie7b0wdk8kap6xxsg2rph712j93u7vm5v89fw0a6i60lq146nrpncchwmjnidvj95xtxwt6mqpgyqdo44ibudm2ow0s01xv7ouxmea5jgt5ubb93xqnurmduizo0bnlvf2newfom\", \"5ouw7i3gdu7maeygwgurpda47ii7fs8fmerogck5a3zuz7wnwaf82blh1rp9z13edxgnemziqhxb7l\", \"sm89wcqpe6skgob38u9coock5yyjo203wb4uodyk8fo6nsdqsac3flussxp4pghl5rmwh74hwc3hse6knoyoxe5oamuxof9drrypdo6tvuicdnciyw2fubqwpesdr0uh7bhr6zeg314dgseb81mwkxzd9hcrvxpkonr094uo\", \"miz5zm5zkziqu8fz5bxpz4mqflg79z3f9ymf1bhynyi24w1m3v752yv6vxp\", \"n025wsab9fbfv4w4etlbrz0b2m156xq7yyssoisrpyq0ovn340ri8i98q4k58w4p72mlr5to54wvwsehp7pmmw8zajkdfb1ryxe8gwq23mbabqpc7udqjhglrvrwoiwl72qu0vb582jlyallgueq112p9l7zpwi3ypxyhg\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"guhsqkvksbpvkc061o0ziey2cudu6gptcov21tkpathqwwscp5xt8l0ecfbxc13nk65lbe7e5m96dg\",\n      \"description\" : \"Voluptatem asperiores repellendus consequatur esse autem in. Similique et repudiandae. Quasi nisi omnis maiores minima distinctio. Sit odit aut.\",\n      \"location\" : \"i3269s484383b54mpteri7cxyszg1t7gaqm1v5tka0iqe02nmb7evp13luvn7r7ds06wjk5dg0wgs29h2hutjh\",\n      \"title\" : \"Minima exercitationem nam possimus et occaecati suscipit ea.\"\n    },\n    \"role\" : \"k61y9cj07up4je3qvy289wqjd9q5ux7j7\",\n    \"members\" : [ \"un9lenkfbmnuexadb4brflg7\", \"81756fjzjn2ps61aqofqiy58clil92wbigmpy2hjt26m47ayh84gwe8zkkqjn6mhkrjmfwjbkmaymbnznm7e429hjmf1lisnbpw54nwj8vu09ihefafzctwdpi7hms8jdnhyici\", \"q7ecc\", \"tjnzml\" ]\n  } ],\n  \"etag\" : \"iiiin\",\n  \"version\" : 700516166,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"m7jz9f9x8gjbzhp08a7v0zlft0d7p03w04648c8921ejlqyzt4s9ucg\", \"l977ek9ud6efee3wzw0cp9idmtk9oqzg7i0v8shnt4xzq5i8r9d5mcvwwxal7rgw23qxoch4nwxn55aef8g6md8enxsma2ddmpvuhin7g1e7vkwjxu5glm3vmdy5i61ergl2kbt86j4viv06aa4bxot3kjuybt6jum704ws1arcaxi2ayo2qvcab7q\", \"3aunkh1q383ym5ekibf4266uk7rjivdsfjm9wdgvzu54tgpg0v927xyj2i5oyaunjyf0zfhbr7388sgoezzmduivx7w4y1ktmsrb15uy\", \"638yth3nmzvh741wt5qvpgvtvbe3f5ntn4vk5yhndp5x5h1352839gme6sr4ck1avu902d6tp5n4nvyxa6ut7wn3rlrrtt59r1h0b0m9dksgepv1dltoonwf31cto034qxorn76eqkmkrfk4yfp8\" ]\n    } ],\n    \"service\" : \"u7rudpodufd8npzpoj8rrwss0spj1smhrhsnvphc7rrcpnujjhalezvcmm2xyu51p1sbktp6qjth75jflt9ta837bteelm2x8pjwwcdaj7vr5b04a55roae4du82rkztb7qkkuoi6uuikijby6f7np9gi14dwotcgz34rocyn1cqvppfo\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"d485lto85tlmee3v9wtnrv7psfy35\", \"7wkds24bhkcnde1a5dp78kkb8u6x37fifqjtufm5hljilf8nq9q7hsu7s2hb83dxqfiu2algqsrgofdt56ggt6con0vn12jqc98\", \"f7i9ckqlq2z9l8cjm1c1z7izkmnvbrzbg58box86k29znnklce0npzdrq1a9umbc113ef5p105ejtapeuijhubm6dx50cypus7rvpvj56f12r1uh7juajwtlvvcrtgfwg3t9vcgwmw2qinp0z7\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"whntmt8mwsluj6bnj92ht60wfozbw0f3g\", \"6ao8clxuccs8g4dn16grhbyfosaor4n28iuxjmmvhzw0jn2vasc8\", \"x8ed1ghmu5mtdrqg6wevab18095ssvkw8wxtv4r2bvnndvqc4h18lf9k3zfsf82gylktm8mqr63qkd58v7drqk\", \"z9sfsnu7yz77c7w4bz0gsao6\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"akjtondgvijv32ng4e2cimdotqa31ag1xjcyr50sznec59y0mg5vemqcwdbx815ciq5gt6fvyld7ika4rhd9sikbsnubsahi96uvyjmio5tlf328h57uxb16ya00nsfebqqzmixbuf2kkr0tnffysiz3p84u46p47nq\", \"crczem0fg40aa5imvxncwo518orxahmebwl7ndz3b2ux1awlr7pp7dfnwjyon702d51pwgl06jrw1our1k8zgnao3pig7uc6rjwzer2mthgry3pn0472afyloc53e1yvoau9rhfm1hduw2we5rsi78glg3574ljdhx6lwmn85bxhrpkz7s9oeajuuafmhkef221k\", \"obqzbt20cr51nbbczvuen3mzserj9kjz8hvkp2855xf8djj\" ]\n    } ],\n    \"service\" : \"km49jvkwpxt7nb9vl49n2655ehc5efivv0xlhelhvrwul2jjy43k4bc0oe4gb4vqr0azjq77wclv1o55a91gfh5z3tgjm0kxwn\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"7s2wc36qubhll03udthlp6zt5k3lskxlapcqmhuv46gzykhg0r67y7a8q7g9j32l2b\", \"623orptl9iltq381lmfuc1ssbkjd5ehmtt4vuttc0rv4nvhqqdo0zo3wqd47jqs0sgmecc8ajyvz8saoapcgiprhoy0b8tdtxf8nakbfhp5dyewp0nqkjodras9hfzs56lkfvvhbskx37der4ic0c9kj\", \"5vjrp149jz321nxw63qj87tbe8vykbijicuvm6z6qoya172lfvj18kuxivhazpazwo73pw86z\", \"b4v0y3eufngu5w2z69xcz0383p5tbxy05qo1jnx8ob1rmqfczj9f1a6dkxgtwjbw1dx8ctadr97784kli8orxw2o2yd20dcah99hl8h5g9djbov9t0n7c1xbgvq1fxrm8315ptm57sli3riaz\", \"utxw5iczpbpar9kz4rxxvfocgfi03ahj9qdrk3282ey0jwfon3yr8s3jyz5ryc7t1ixct10yy0khqy087o91psod9s2wm6rn8sbscwhps6pisxsldgcvj7zmg3myfj9dowoi54q9qjnmlapgkdce10bid73d6gmrmys7wseem65dmsj6qiymf0gda82lyl\", \"61ouqdaq6srr9wl2k6iapsm6s1ehgm4jak3ynfhwxw0c1zqds4nmkhhdgmozh0cw1sooir5lxbctnpd51bt8bejdw4fsfnbftycyj252xlnfdz6hn9rrb33rvrv620elk6pjr6a2zedgbska0b5vsoyjwrx7n69ibfpz55kul6ztg0sjrdkkpefo0v7uh2zh2nnmyba9\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"3q54tknx5f1brplgksn92feb7u0dh75a8j3zbkj91qks81ybt4pzs87r9o0vgp5md7lepflia16u6xubsdjsvu3ezgurm1qhsyatb99oarluxes26nzyb\", \"2ph3ifjf7vdn3doe5w3v5svd6y9w164zxe59m95u6rebz9jq4xqpfr3ucvfcwaelxkfvfdfucxu78renux80s9d9n76inqgebrbw82ea8o48yiry53792p13zqtvpf1zvmtu9spuod2610d\", \"dbq3q1k83f7d7wr5vam9gfcco5ftoo8fwf39749i1mcej5twqvhdcdtxgikqwxns6zep5b2aj63jgbn913c9mffylue0\", \"gc8tun3fif04oyxpkwlwlvvu6uo0ng3k7vi87vv9itslv8xn5btddr0wjo40nryvn25fj8qws1qwlyx3k9grymudrrxnhvc5zrkm17ksbjuk8l9l960tzdplaxkpkcfbj5fuubp0nb2mh7podyzk105n0b7vqhghrgru651284cpjggtvtxq022d2y5s\", \"eqpjnw5sqizd9jtbt4rnvcli21nalayt6e5cexnvfpc0rbk52h18\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"62qvtynh0lconbdqw575v4k0x3ydnjenx8xwtulpyl5ftrvrz9rh7ynk8vex6u8fd740e9czafkaaj3ilv2lic7gyfhraken6evzcvwiwzgc6nsj6sgbxz730nrv2vg\", \"lsnz7cqqxvr6ddre0xegdt5zyl3stvtukt1qe0ge59oohup43rac7zpo0b3mx1dj9l7s4t3wmg3b2alp3yjtb9bp86lvn049hgxpaoaxeqjjjlxx0fbrba82t\", \"gcq7n3w18zxfgzf92fybwqputkh0e58z4bl9ncknh2zoj4yahmsoymzaevmjz3u0rcu7gj538dv2ok1xjmdvbp8yegn7s5embglb6btwrodf21aaavaq6bex62wmtr6or6pmsciqwur874ri4pzudowc91mq6hc7gsnssmqu2x2l5yvkwz3zi0uivztxfvjax465kdz\", \"lq2zlzue7dgk23fcle7hzpew9zphf6ilair6sousitegnzjvqs44ymt7izjrth1fcxa2pmd5dhxlyt5irys6uvbbv089nkzggs9n8uwlu6md4ihpndbnpi19tshrykq3pxx95zx51y8n964d7p1vp19orhnqq8ahoth5x1vlr6dr9gxe62ejdcylidbwoshil4j\", \"abvsjgj216h9rvf51njsi9xcrl4z3fqi16caqftbkcvy2p8vfqf4x7va5hd2d7dvbd062156r0aodv68qzcyqurnvh9j6pbsgq32p69rjloppy0vz8p95nwpyaiiytrmpjk9l7gigllripf59vr1m9ux1ypop0l5muszg8eq9\", \"3x6bfdhhxg2t32p96qesnzk0h6syh3xo4ga67qvuvfet3veq54v1fo6akhu1ez0e1yjf2c5hbb3k08k7mjmz73htyqkaeehjj4h2o9yo43bz0q646485p8t1w6i00sleqtotyz3mjccy09tepe9hb\", \"egl77gz5xscg0x203poqyayoj1uu01mwjtggmwsus0akajwgnrsb9ljsthi8ec5lju6ljmgyhp44uk6gfzx9tvucnrzgxwvgbyipajb55yqetscfh5m8oeai1\", \"9nf22b7rgl0l522uumfop8icqy6a8fqn0anrxmo7yom25q2cw1g48tyrix8aueugjq9ifpvptdputrnhp6537sl9qvratcyiqpm6k6cc6ungd3atstrdyjbj5lhnyl2himukkzd6cd88okcsu7mn3g86jebwmfftimojri\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"qcm4znz1vi6iexwo7ou63r2hdkavtrj9k1i82exjvwsbyiqlcjxwesm4bc\", \"447x127c48mfcgxe255i2etay2ort3q8nld8eg7c9qq6p7tdysi40v8db9wekhkutpxnksika7cubq5pvqdcw4xbtx4srpzg6rxpjvw067v348pdsln17m2uguw4xjxlkbmuv114xrwceb53x4rgwxdk9l3j03945ijf0e6d4dneq\", \"eztrdim9hexvztyi7knfx49asjdksjw9m2b5z3v1h1ssqzqhjc91ekq293breeodsltsv0kcgfjb5sn4ovs5r256bvkfm7r\", \"83ik8gg7oalvnes1kt4l3dbpn82ry9w4aez\", \"mnigxcctmmck5t8377yj8oqpkna\", \"rvnsrdcnmomchmk1rdrhq3guabjbddhfhpa5hik9ypssjhm8018o33o09xng79n36lm2xdhvadbidvercj0m0ecn\", \"f2mua19xtj5yhsiemhmje0tihch5u6sophyzsdq25iohbh5exfgv9aaw8qdffk5ny8kmh48nh1by8aqt1zb9nh62arm8lqe9mmf0n0mh5kchsk4trcs12d\" ]\n    } ],\n    \"service\" : \"ocihcsxq6v9gmmbq3t2bt22lsyrl47ngu7kot0a69olvtnc54z4kvwlqmis455uf6j9g4s7wgzosshe98t539b9wq5n434oggrh8if46xk87az5lelrusb037ktf6u58toqabex4u2lrwxk1n4e73594xjumsd\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0399edde-c7b3-47df-a297-73d556f4b5e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.771283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "6a9f0d9f-809f-46e7-b337-5e623e89fc57",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/mzwgnl8exkasrzllkpoa3p3i7m6h62o6ydik7loggofxc2ax5yr4fcq8n5bs8nhtg2vqtovnymrmkxjju5qb441klia34437xwpau5w6kchm5zzeb5puac4vwfh96nqlstpsitf22k6p943ghof9hk4t9mlzage2ee3htbwe7sqr:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"bwzbjrkqqll93i81oucwjao3511g5ikywkk1pdv7sy7a50ls7s\",\n      \"description\" : \"Tenetur dolorum accusantium qui quidem quae consequatur dicta. Ratione consequatur quae ipsa. Quae dolores aut voluptatem quis ut id dolores. Est voluptatem magni maiores autem non officiis distinctio\",\n      \"location\" : \"pcf\",\n      \"title\" : \"Voluptatem quasi aspernatur quae quas aut ab rerum.\"\n    },\n    \"role\" : \"l8i7ad24k7qcyssj5774yhohsdnzhpo6ctoo1i9pcb1fdn3vq56o01jfq4rhjmvyfkiieyc9un4vnsanxy8fwn72htbh135j3lsv3z3wid4he\",\n    \"members\" : [ \"q5hq1cbc4ikbelsf2tsp0kn41v87fzf3omaulsy2rlz0cxw3rf55n0wai02s373oxx0iv9xdygg26yauhul71m6f5301oyze613\", \"ya9xecspm3eh6x28tznj8ynu6sqjlugrbf6lf846ysv7rge2zbww5g04at6550gaf5drl6rhza37ytr897c0uyq6ohitw6ffljooxc2zzqpnzthxhpst2aalgmedogo6zepy\", \"hyor4lj8fe3gkkawykgdotnsfpyg04joidgqoo38vhz1z0fge2269\", \"ibr9eq39uvsd8orfvcmbwm7uf5egca\", \"ecp3m283u1nazxcwoac82wjsyf0ukxpfhan41mwo7xpxwhoyr69qealgalny4adxtsyf4e8wzqqr02xxxf8ssq8x59186vgpemqpdic4\", \"alql8a1s11u0jrv35g8jkqmclqtb6my0pfdq1w0inwsbcxqk26akwq78so8mxj1wikv3hri3g6lziiyk6fnoun1hk7feet3t7vhme9hl778ycayguhwfm4x\", \"dar66w73x9lhd573ksyyu1oy7y9uctyeian090e1tn9j0wtvslevjjka40vzr7bxm06skywawbessaj37krg51tk9r46hxmre2a3ru8lduvlpa702btql31b3mf26l6moqh8ujacpudunyrgopmorx2a9ih0qt20gozo8u3uruw\", \"q3pr8q3i9057jwacfb7jgqywarv4wv443lzrtcq9ng647yp8a9jfqpswkfp9l3kti71oqp\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"y53r9j55ptt7luq15aaq8czx8fwj3srfy2j6jzt2gbtiwkq3b9ce9npb0tqu1j5ker8tnxepf6ul7g0dt1worpmgjlwnyabrln1fkl8uqd8pf7rtxiar2btl3jkqh2l62yhkj2qh1wrd71sc9kigykb\",\n      \"description\" : \"Facilis non suscipit id et quia omnis. Inventore qui libero ab. Fugit nostrum error aperiam eaque. Cumque incidunt sunt ea minima voluptatum velit a. Neque ea enim natus natus nihil.\",\n      \"location\" : \"ehfeis3wrn7aq5snfsdeiwpu4ed99f587i\",\n      \"title\" : \"Sed veritatis autem.\"\n    },\n    \"role\" : \"dpg9618vj860rd00dmf9riilvw26llu32rvbe4bkqaly2hhz9jeacc0obh3cw00\",\n    \"members\" : [ \"6omov1k92admln8h9dncipc68v303dftz03ehbh11np4wghaoq2brube1cpdmey9jgofa0yedgfms2ryjkm7ejwykq7djo4tyadn7uwp816os8z12k1x1j0atf0r3eu7k86jf5zjrn93c0kf3wxkyzym\", \"ocowszcunofo65boa6z57296me0q5at0ucx75azg2oglvmhqykkn3cocqyvqcz1ft73l9ge4rtblw5okglki5kwg1sqrdn7tgiia8vko26zp1ovex7zqn25p0t9z87oh4\", \"0ti0okkyi427uqahj2f8fg518lq23hs10atvmzbddwoyqb99icblcbbnhapbtrcggf8o2s8z55oo1rwbfxbb3qed707autzoitx2zyiz3cuo7h7a8ha4mwv88hum8gs938vjtlbeacu02d44qgox1lesaaprzi8pfjuy9eszdvx3x4std\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lfod8kl0td0fl7axd366l9mt8s\",\n      \"description\" : \"Recusandae et fugit qui. Deserunt soluta molestiae qui est laborum voluptatibus quos. Non nisi sunt quia doloribus voluptatum hic maiores. Earum laboriosam et minus.\",\n      \"location\" : \"408ttb2j1pa1yow28ey89lkfygxdmbf2i66wqo2pkvg\",\n      \"title\" : \"Inventore ut porro rem rerum maxime quo.\"\n    },\n    \"role\" : \"9w8cm9mwhxl70pulxkhn5qrbn108fha4an4vmnq0sabj933pdmml5z0s56ujrr3275n0ogp7gvxxsyhhbhtialt18s37szmoopjjgg274o53j4xo3cmvqpa6zse7x5tw0cqzeb5m24xk9nx2djh8vhsn8xc90xr9sextnp3z0syfq9gbc7pocaetj42v5nhk31oth37\",\n    \"members\" : [ \"0leor2czw8jaodo4fvbuau6ya6xk3l0ax6r8bsysuua94nh16ny5kkorlvhqn4ihl5qvgfw57zr7jnyonx98p9706g9wpejigoy8azq4t5rng53rdjrzuiodhh046p6g5xf6i1f9id4vriiqjjsq2hboetsdwohk655\", \"tqgb6o2bklkj0a5rhd97hbe0jqb1pm5ww4hvutgaq5homj3mulztpikvegaslmojwzow2nqiv6wl6ydamwo0n0g46iax19jpai1jiq9p61fgazxfep52797bm0s2r0a2q2g\", \"53xztafq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"k4u05zmkbie54mlu5xc8q94ri720qeax55pj1e88pm2gylf21z49vhwokl8kt2m0tb3rnkmvn3vdsym6d\",\n      \"description\" : \"Quidem sint enim. Eos sint excepturi iste repellat exercitationem earum. Consequuntur molestiae voluptates nihil enim. Itaque libero dolore recusandae. Quasi occaecati nemo rem nesciunt ipsa id.\",\n      \"location\" : \"vpo4i3vh3hqm5bzday9sirndbc46kf2xxvk2beuaoqgvioiqteily8rrne6722klruw3am76hfqxuf3s1gw0a4ire0ia8qiv71z4nfpaytl3gn7r\",\n      \"title\" : \"Et dolore at saepe.\"\n    },\n    \"role\" : \"bp1a1c34o4s1vu6b83le9b8k8162fzw2sec2bzjd2pnpann6gtu5fzfxay0b20pc9r7lmqrutbpd4xiv3yl8lxdoc7xlr37tgo7ewf4pinnc0ev2ulidb32zyqua40kvr2qm2bhlioq67fhf0y1l4eu5ou9c9y91ocvt3ugqvuntwoan\",\n    \"members\" : [ \"nu3zqfpyn5szd3hvrt7tyqu41d82u4u810urjs7hpg0d37yxcott0q7tanygrjohvbton0w59i1cd1z143yon2tttxo9i6hxue4165nu96ct2mgeuth0y9gccvgazqzdgr0avzyfn3kb3p4aqh7j2f0x5plmperlnlwkf7\", \"krsg2ngdnnuuku5skjx0ljssx7dmnet1k5eb84d21d7vyjhg11d55p9e7wfd89m0v25z1oizrbj6nx9msn8hodc3ncxc27znaze0otfde95yfkiu4fjsvvgkihgv18mdcjs98158trqg37tsh0u1qv\", \"nm8fw3793bk5eh1hcoqkpgmm8v893txfedo5jvfnq2lvpbdob82vzoo0k0g3njszdvy1bnniwasurl98rabwk9gl6fkk0jfivhy8uvwhsean5wvjs8urx0qdj1dleughdp71b6s2fm7hd1i0bkehmlin35jxao5\", \"ujgv3l79x6gzv8useio43mpo5vjdq0onlimwq19enf29mlhesewpw6cnyc01ok4hnd93na1305jxptmxzd0bjef85wyvwa1nk4hkbiw0xkj6f53nup3hefyf53hn35b8b64wv5xrhzm96c8xyv2\", \"xmgc555f335v0f1mncaeknevtyrx1jh0ozipj2qit9edqglp8qi3ayxh2op1jxn5hrwia9yj5wh8eoi8oe2p7e4nfkkw7vjrqokvrembvfpo5nfbcv319e85cjca\" ]\n  } ],\n  \"etag\" : \"non\",\n  \"version\" : 1592212898,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"0ag5s7xfv60vtwwpjddlywt1wbibifwm1ftws3l288wcr277g3ilvb5dlm24uao8vcm\", \"os5yo4ekw32fw3grv3\", \"ier2at1359ebmu77yfz3wuh7739gcfhcnbigpg83w9j47w0bgj4xlfbc34hh2zv4hrd4hnli27kr6z453p2akuhxozxb6a21t09\", \"o25b6tpt6v98osq6xnil0heu6gpdrz0wj7ja1jb90xyfn0xe\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bg7s0h78zlk020tv9prdvsp6esovly30vik5oyv4whlhgg5yacjghpmm9cc1tlx123wsl4ylehd5oveict0fiucg\", \"m9sr3crrpem4wdqtaexodadfthrqsvcit8um08u8vozercog7e6fngbc12rrcvdqt2oazol64dkjadhsku8ml0b43kp2te57gx09g9ikj2kgbf8atag9jn8i9oatckbbw34mcn405hlcoz3tx7gppsjg4kcz8r43mze2iah4qki7kx2fa7\", \"jzt3dp8fnj3m040qa477lhgkdput2imzbohvs136ts9ekcid20u677k69i65cjz3gd1imuw48csj5zv1h6zzzejahcw0cycdekom0lvbdtjh6fifnoxqof2xdg5\", \"jg482lshicj77p3e48xmvexvpyaz8oer3kfu81a1lljjagr54zm9e0h9kh778fwh6l34h11agiro4c0srat7abfxcrvzi996fmertkn9bizrmci7nb54jj6h9513h8d9n4kzfap0cf41sslfnbvwskwfszhniqcrsyab1ski9ilc9wl4npyfebszgc9qlman8m\", \"lzzf1z040ahtt4ab6q0udo3ie67tggjjd5soazugasiliofyvz40xw2wav05vwkc1pg7reehf11fwkmrscr1griad22ysagf7bdonof0ua2fqg844wyhzg8wxtg7hhrembzpngsls1e523gbbtxppc5dd9qc0loyquugrip8fbc\", \"8ku7mje221ann53xy62jhhx24l7xipppgsmibvrh0afglh5ws0tijrrqvcwkupt4o1chv\", \"fjzvoomivlfr381l60oxyxxpgw0bhnstm6wprxxfcebm4bwgkpzh9wibuz1x8wk1z97h6akigfxo3vlj6j3ae129pkj8c0fj7bswbjlkbw3ms349c6z3yqokli6176fnos4cgre996tv6g\", \"5owmocpv3mgxb453t3oc9i3t1q7lm1531iow78zk7dkcpcsecgcmlbd40r8iln0vnvwu5rqrupuk7dd5om1x7o2zoqr2aaz9d74n3faf1p8opyr\" ]\n    } ],\n    \"service\" : \"3pgjhsmdjzemr00fppaa3aj\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6mnk\", \"79xsg9bao29ju3hbunzcyi2ji64miqoe6vzi1sg7nx1r6241hpuuchbyjujylqefoyf9kqzhq7gd5fdhb7ub5tsgpeg2\", \"pjvpwje24u2apqwjhi8hldt7m3cyfxtozycwv9bxx45a02c686smuw7tpy2bh\", \"3d1yc8aoesnuy6b4hhs2lktx0dhsr146y64vnm6z0pgkvn0bt5nwmhv459as885uf5qc7r3z5uo3t6zk5oaeiq9i8qy89djdkyzes9uw2sk0e10b6vuqqfujwgfvijptr9b\", \"8jhwdnatfukliy26ltejokr1ppmpvo4okz0m2jea73fobrs00mmvw4o5tb2mxq5b917w2g5nw60r0yxocxixloekkhly5gcxynn6hbj0y4up\", \"vkav9a1hjoy6nd0549pdjzh2ztx94fgnvxy1gb8bvjw2lhyp1sbosmmgre1zainjl3kefhhq08a8xlav2fjhkxvl407xhbe4er9l4iz2f\", \"22dli25d959u1oxu3rf327fd259rv75xtgt0ewid1ywta98unid66\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"i03xkkmlwm6osjo5c5nlwh06mweuizq1o9k0q90enmb9wul2iq0v50cxzsf6wdz\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"s4iefu9c5658zhcolu9k74izfedb0o9esz6zygs86h6yibjbt6q9u8g70zvllpdd2o6omc3tjc9s2y2sy2vv9tv9ih45m94ji8r13msljyqrpkxpreezi7g9h45wjr5xta5td8lijnkvh6dvwfsw25ls2wltsysximwt80cnqj8b77tm2o47958\", \"wbssifhhj3kkjczgr7wke35egfcw208p6y009gweoxfelbye64kwksz7dq7k4ljhzicq39qf8u6xs3i9tr9bji6p88gckgd8d3vg0dcrnc23q7b49efxn1k8oqkgi5upn4q3owji5bi28mdkojzyf1wda8uw1h20meoe6qhdro3rmb8sw\" ]\n    } ],\n    \"service\" : \"sl7t9shu2w4yry7ywx0ewiu50itgllpn7rrbgp0wei8ms20vglpgt1ehwyw0z7t29idp6iytq9gigsc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a9f0d9f-809f-46e7-b337-5e623e89fc57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.769217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "ecd78391-c717-48a4-9d1a-4e5c31a9a2a4",
    "name" : "Creates a new Connectivity Test. After you create a test, the reachability analy...",
    "request" : {
      "urlPath" : "/v1beta1/31nms0glbhrifc1p3cwgqd0t2ig7npjxhhjvaskaql1q1hcy8jgw5/connectivityTests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Antony Leannon\",\n  \"error\" : {\n    \"code\" : 776457788,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Qui sequi ipsam voluptas voluptatem incidunt non minus. Dolores alias voluptates sint dolore consequatur similique facere. Quaerat earum facilis et.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecd78391-c717-48a4-9d1a-4e5c31a9a2a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.767989Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "6a47836d-b1ce-46d2-9b61-25da9191e776",
    "name" : "Lists all Connectivity Tests owned by a project.",
    "request" : {
      "urlPath" : "/v1beta1/d22j4pd08v7hvoq2nq3i63g3a11c5pth3wqyyk1mkmhv7dkvmd/connectivityTests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"wu0qkzwmzkpezdl41lp8kzjj3db7l5ewbvu5\", \"wurkpz2d6z6zm1re\", \"1toeiiab7xkbrazz0h6i08kdgtnh1ewdz0faaksk9r8t1e6dy811is3xaekurdhluvkijq4wpoj2i6kw7tpgvyqwxkaskjqwmk3wl0rlrfhe6nur3uwyvllbztlq2supfhs\", \"0nu5zmmza175zw20cslkf6wgmifwsow2fkp8lwfaboimkl0oasy7fvz6n6skjop5eropkek6jyet2wtiibtf1icc129wxf2z78pkikvqxygo\", \"t985xwqy2o8sqph\" ],\n  \"nextPageToken\" : \"siy8qrjmi9e3txk2lw6hbvm74rg167anvh9m8d1oz6k83za3x2lk5lk1npn2kc2wl2qye4g89up268krgc84xqx3q0652da8ca0ymldsx2gjvb0dczysg7vcwpq2f7o9ogjc261fulug2c0iz6kly2hkdgjltc6jny9ujx2e0ge67r21s69gv\",\n  \"resources\" : [ {\n    \"probingDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"fqgzt3yxo9h1xl110hb5w6lzn7fhftf2ygcm3n7gakrlb8vzee62zn3cqtz7id1m480dtiwnw2rfz2ynhy5gux3umt3psjlywm5fsw8q1k0d4\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"25jgqfivbebrnrmvkvpt9eazq1weopqv80ftird6slxp1cz8kmvlczb5xmd2midi2k8uva13eml84dyllrks2h37mzqebw\",\n        \"destinationPort\" : 1748013208,\n        \"protocol\" : \"wdnoub3g4wwiawxkqpt12ia20p73e9zlelj9bbf76xl0z6zumvdp3woj8tmmnaeerefeyt\",\n        \"sourcePort\" : 589976412,\n        \"sourceIp\" : \"f76ncwjm1swaiajs73kqtd5q6n6qjstomgwdwtrdllx7zunwuj05t95aqach0h1deghdlo38rr9iu08db80nw8a1e4xp9nvgusdyy5ng1i2keydorjaddwhakk\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/687894\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/213407\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/931704\"\n      },\n      \"successfulProbeCount\" : 1661610309,\n      \"abortCause\" : \"NO_SOURCE_LOCATION\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2023-02-09T09:52:42.757195Z\",\n      \"error\" : {\n        \"code\" : 336868311,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Et consequatur asperiores accusamus. Facere itaque quia fugiat. Impedit laboriosam velit perspiciatis doloribus veniam sint.\"\n      },\n      \"sentProbeCount\" : 1927306722\n    },\n    \"relatedProjects\" : [ \"gghwpb4facmdq99puh5ezk4ystzauvpl8nxsgp0cwmc83yx6wkjneqpn1ftv9k43wop47kmf2xgw191psmrjxfqvptv05ihw5l2hwt0quvdu1zgyif92xcxmh\", \"0i0pkpbot6ewznfhds65x0rv83amilkk8ipc7uqr01f8nzdshuvh00g3i9rkkevgxckh28qhmmp8w26ulfi1w9d803v6ykfib\", \"0lb41mhjmmssyjbd1dsqeidcuesdbr2edkdd6czdzabgm039vpdlrn44wletkar681916ynpmy9x2am8pvhtim6dmxl4bcsdlvmas31gw3lr5k7qnq8rsr4vx1cp0p7g9ap\", \"c7u6naciv2j7bytu3yy4ma8k\", \"vu2cltf7unyjaxugng9srbbjgst13fx0lhf6ynjhkseu8zewt7t7e5qqbzwh8k9js4bzkn6ux6dnxpffnny0p\", \"nwl10qp5yip625qv4chg612udi90i3v2k6f707rznrlawwg1me4bdqxtz0tahgw94haca64jq6vbhne26v3clvlurmd7ehvwhmx2gu0byruym884gsrb9fquvjd8sz9uun0kozb4\" ],\n    \"protocol\" : \"4t6y1wkeheh0ti7e5sksi1hu2x0j38cgh9zchp68vptgskzalb38n6p8wwqicc6exsct5uhkl63fg2dgqmgmbpk5kggyjilg4wuzd8y7shjx0y6e8s7\",\n    \"createTime\" : \"2022-10-28T11:48:42.757374Z\",\n    \"displayName\" : \"Jaye Hegmann\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/949953\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/553537\"\n      },\n      \"instance\" : \"strm1jp7ibipyepv8qbr0lxb7gy32p730dbgaqr3hnjm3bt4vivubs8\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/035797\"\n      },\n      \"cloudSqlInstance\" : \"f47py57qp4jyb41zgvaaij26t5yfg6a6qf7fmtmfr045dgxl5cqvvormfkahtgb0y35c8face33723z84dz5cd2xbg\",\n      \"port\" : 1811028071,\n      \"ipAddress\" : \"x7u89oqskp7egm36xw015i6ab9u94fp7omnsjnvemjstxa61zynxf753p5g9788h5s98yg5ypc03jne84glky1x8vzfx8ditg7hroktt77n357ft4az2osg0m5aqcpbx31rqdme4am7u\",\n      \"gkeMasterCluster\" : \"tbmuua4r2skz200qovpcuo8dr180hkkuk4w6tpk6r6llzwtoalaoxk7p59qhxxihtv559rywrriea0slb3b3y1oy7uujwujq4agq14whhlimudhm1bh3uco07ifbaw8o1bdqxhb8f35i8rjr33\",\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"8r8w\",\n      \"network\" : \"07s6zf6nxdmpqjcn1m3rzk6o5iemim5w\"\n    },\n    \"name\" : \"Florencia Christiansen Jr.\",\n    \"description\" : \"Delectus et saepe pariatur voluptatem deleniti ipsam. Asperiores mollitia aspernatur consectetur quod nihil. Est voluptas esse earum numquam aut mollitia. Atque ea maiores laborum.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"UNREACHABLE\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-12-20T10:40:42.758048Z\",\n      \"error\" : {\n        \"code\" : 1185375020,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ullam deserunt magni repellendus debitis accusantium est mollitia. Repellendus sint blanditiis qui eveniet. Qui aut aut at est et. Quos accusamus nemo iusto hic quasi.\"\n      }\n    },\n    \"updateTime\" : \"2022-05-26T08:51:42.758195Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/334802\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/017226\"\n      },\n      \"instance\" : \"al7e\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/182200\"\n      },\n      \"cloudSqlInstance\" : \"lb9duoku34jnpe00zbwf07p3cptj0qnxxb1xdmn8ei4uk9gja8mboqo601svmhhxz2n36e49rm9byhhmrjar4vet6tcfabn3cesqb2xbp2eb87xzmx5ry4k00oqgs6y9yzcyqn\",\n      \"port\" : 1147433313,\n      \"ipAddress\" : \"pyh43dogl0z13dis222r6xciik0dimi209qnuvil\",\n      \"gkeMasterCluster\" : \"iiy55zz6ivy47op3rk1hp7udv63tzkms9srs46t48ric5hfh18w7i6096pjcqmypsfsa82f0aeredkiiom5tmsf1gwwj879gpejx68dy7agzzt978gi6yljjfadbndi8grfup2avd02wroxrdci46ay4cpp523ah\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"6xse\",\n      \"network\" : \"gv5x79anp97v8yu0wgps8jw05zoy36r9xn54sgrkzdbciawvaexpl1m3btqd8iwmogcrafz2tpsbms5ory680tkuhlj8sq60dso0ga1eai6jkiq0c06f2sbcxg30rxijg4\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"qv76sq9egs2dhd9f5u3rvg\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"ih3i8a5vbvre0ewbz5h6kmofzwwhvqxi0skzrda2i\",\n        \"destinationPort\" : 1558945749,\n        \"protocol\" : \"g825fwhvcvu2v228uv7pwj34bie7c7usg6eaibu0o9xhltu8capqirmiug\",\n        \"sourcePort\" : 256124730,\n        \"sourceIp\" : \"2afduepmq0vgufvfx1ak2b0sfh23wsy087upton7ajoqep4nbzt0t7biig56fmfm495eh7g6tgnoxmqnnvu07uowmc5f2byp0oyxnvtxw30s2m0nv6nkxd23tn4t6x4dik07692137v06raa0fzoeva72i0jiz9cfcr6izi12adfnfisefef7kkbg0ob3m4\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/523823\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/083923\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/392090\"\n      },\n      \"successfulProbeCount\" : 322035014,\n      \"abortCause\" : \"NO_SOURCE_LOCATION\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-05-16T11:42:42.758935Z\",\n      \"error\" : {\n        \"code\" : 1629940258,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Molestiae suscipit quo cum. Itaque non est culpa ut consequuntur. Amet reprehenderit animi. Aut commodi magnam velit voluptas pariatur eveniet. Ut expedita rem velit unde fugiat aut placeat.\"\n      },\n      \"sentProbeCount\" : 264160262\n    },\n    \"relatedProjects\" : [ \"xxh1miu89mjbvfzzbx6xiuzbvr7w5nfk34odgf3ucetpjm51x42zuwn2h4o90f7nr59u2kke1du2ftgajwoosr54quufqx2bjwnooa884ri68frqnjvcnblb4l8gfk7rlhecysdwpcn7mggsf7gocrfgplerip0ts8f17c9d\" ],\n    \"protocol\" : \"cxto484bsr0ckn8rr220la9add2d63afcodlypsyehx2x9dxr9w62992fdo2qujec7x887kt68v3apj58lfbilixxwhsudz0gqodao35uoom5t6lrrfsck0bttwyty2ogvrnxje1oniwuf63p6o59rpypd68wznsgt8nw7tp6s4dc4nqkqrl0mjjsbug354\",\n    \"createTime\" : \"2022-07-13T10:14:42.759109Z\",\n    \"displayName\" : \"Ruth Witting\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/315771\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/120015\"\n      },\n      \"instance\" : \"989hlrshtbod8zwesh7g39fet1efi5m\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/075675\"\n      },\n      \"cloudSqlInstance\" : \"1zta2d7zi0h2kb7ojnp4z9qevrq2ii7ozoxhzanju8a9ysgatlhdvtu7n7op24h96cy8quoqrxttylobd5tgpai1qui06s30w5xo4hzklbajrhmxjgzadgl4c0rme2i12rokj\",\n      \"port\" : 938484418,\n      \"ipAddress\" : \"x947f5vvo5pak6ghlpo4sper2ikvxb1nd41qt7y3j0l5504i9m9rg1dhvvep6gibi0e1v2khrsupn4g2sxor\",\n      \"gkeMasterCluster\" : \"ie5emvv3by0qmlql0sagx4lzu8nqul6dbjwbi2y99vn13nx2aijniuyrlzmb3v2vc3j1x0vo6ka5haizvllkglg9o4erv7mxel9m06qfshhu8pr2nx4r4y9rfmc6x6vblre76m6rougkjkt3ax4g9cdyuq9w2ipogz3tfqgcybv7urr5by9r7\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"b70m\",\n      \"network\" : \"ke6wfwedeg3xtf14mg4xqekfsvvizulwrvn6vp8pi88q4ttegfhc\"\n    },\n    \"name\" : \"Abigail Emard\",\n    \"description\" : \"Quam est et. Et sit quis ullam qui vitae impedit debitis. Est provident iure est.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"UNREACHABLE\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-04-01T08:03:42.759775Z\",\n      \"error\" : {\n        \"code\" : 1177665773,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Temporibus pariatur est mollitia placeat animi ut tempora. Et quaerat qui atque. Ut aspernatur recusandae dolor adipisci dolor suscipit hic. Saepe qui iure similique maxime omnis quia quibusdam.\"\n      }\n    },\n    \"updateTime\" : \"2023-01-07T09:35:42.759921Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/463760\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/005775\"\n      },\n      \"instance\" : \"alk47b6aupsfv0a1c0tkbsa5jf4pti96qsg883aakogk8fh5lux63oyi8aqhrwq8f72fxb6hb5i1l3x62udm4y7shw48ki1wo5800c64zphqr\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/573248\"\n      },\n      \"cloudSqlInstance\" : \"o7oyjj4h2btzs286b94bedstb9l4669sb2u44udzc1edojh11n0gljpen\",\n      \"port\" : 136271452,\n      \"ipAddress\" : \"jymsdx1ugafibury3n5f4a3edxvrlosvbo7op50ttq3khrrzla8abcsqfq0c5vxmguv75x075p6xg90ov\",\n      \"gkeMasterCluster\" : \"2cs1gej9llfsl5uyj06448npuek4e0vj02aj3m\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"yr2l\",\n      \"network\" : \"7r4jbu4ff6q1x4g3k6t5t0ybfiltavsl7a233y6xp2hiaqzts0dn3rjpw811w9k0hrjgk1rczg0950d6h9vo4lnjwbb8argb29ei290hl8qmr85dnu6ck87wd337c3h766lh5nfnynt0yjnm5e6v3zysci5q2vyf0n7xdrojopnd0u\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"70olffwp4wm448a5ep3fe24oi8ohtlydvh1ky4qyk237hv6ugw7m2suj7gj\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"5owoa1vmnk96gfu6nw5w7xvqx906u6eh7veq0oi25whu0rtwximfw9lnb3se0ht2y96vx548hl9efq0muxnokwvc649d8xi\",\n        \"destinationPort\" : 233725500,\n        \"protocol\" : \"20al\",\n        \"sourcePort\" : 540574102,\n        \"sourceIp\" : \"wg89tou7cfsnlcb2ggfmmy9gumxlrztpgv941pulb3ynrmt4we4qqn4mm6tfw5czgeiprvcjhfx8wqrzli2qqmypckcv2vsw7xay2d3lwls1gzjibp2glt4npilyk9lz18eeigh\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/809434\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/179192\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/771798\"\n      },\n      \"successfulProbeCount\" : 1158001272,\n      \"abortCause\" : \"PROBING_ABORT_CAUSE_UNSPECIFIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-06-27T08:08:42.760623Z\",\n      \"error\" : {\n        \"code\" : 561260016,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Ea quibusdam aut labore. Vel expedita nostrum error rerum porro quo magni. Quis quia ea perspiciatis dicta.\"\n      },\n      \"sentProbeCount\" : 1830026070\n    },\n    \"relatedProjects\" : [ \"md61kxj\", \"kukghntz1y5obo95is9t7fc\", \"csl39i2f6xthb7tiigom0ahdhenrq85nnv4ei4cg8k3wj9f0kljp6bm89o0jh9d7ff022whqe9nsnyis9doidns6rxcxqjvkecgaxhstekw6edguowsu1ua7tr37l5vfqioa6cjxft315ffha2ev5h6uisugestfq11ajgc9p83\", \"u60n41wr5b315yifd0jmb140z8fjh775yo2oibawh1bvj9ewvcclfkjcpi2ehdlonunq9jjxy0rj68z2q8nf1qob530h1x6ijb8hg95qkrfmb21tcfbxe9bbhqsdcdu7jrgmkhyn32\", \"4gos5p2lb19eaqlvcy8wdbky1vzh948dee8vk3l09csa3kle75sh8nva5sy66etwc\", \"z6bvat1hny9k2ap4be7lug3hegojngstxaumrbb60th2puto09fopj8z8rotumeedhdpg18hj169tgtfomyaet2k6lnb90d0no0utr4tmesbjfs1oo2r9l5thtdhbaaqrfnojajzfv8bu081odx\", \"hpvx8bmmduu5mldngfegmjikdkela2nss0mb4dnpzhmi31lrq3hm9l8el989c6j4mmy96vrld178fx2o680674sobczt2oa8sz0omosd8t0jtakkrraga1z9nmixat4850sn821b3lncvcz2xb01ckf1iiakmhp\" ],\n    \"protocol\" : \"8yut678h2zo74cffjlzhygelkx39lmnqzfbhuntpc6951n33imig1q3t9l839o8zw6xwyuqtqxf4jiqxi8g1fy9aw7to8h\",\n    \"createTime\" : \"2022-12-17T09:57:42.760796Z\",\n    \"displayName\" : \"Dr. Mable Blick\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/694544\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/962995\"\n      },\n      \"instance\" : \"98czeb0hla9prvn2fxtcm4y6unxbg6e5tt0oao3fgsj1fhfnrxkfmf3q5i2vtk88yxf9mlm35hdzpzkw68mjkhiz0efeaxdcsavicz6u71gpug394wwy6wbdnf5\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/469009\"\n      },\n      \"cloudSqlInstance\" : \"16izdqr2jygmfo5tbysj20xb1z0tl821cr9c\",\n      \"port\" : 73800502,\n      \"ipAddress\" : \"w971\",\n      \"gkeMasterCluster\" : \"l4bs0mx3z4imcvzjldbaj1iz5smufizk956fcl3xj5duk1poqpc46jm8mmq3yj6p3x9pnwe96lx976o3qlqbq47jol96uwdjeu3p0rvhftwolknwqiluawix26iiooqsc64jzkhqsbjuubzyxa1xtuzvlf9n64ixj88c11\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"2x69\",\n      \"network\" : \"0bw42rolh0cufxxvldqai35onkdi4moao3pq2dvyddu1tmkikg5a5vcsym9iikrzhv36xb3yb6mzbix65t3tk2myx3dylnvao1lae0h\"\n    },\n    \"name\" : \"Orville Steuber\",\n    \"description\" : \"Beatae alias ut cupiditate. Minima modi consequuntur suscipit qui natus consequatur delectus. Eaque nobis quos aut laboriosam. At harum autem laboriosam reprehenderit.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-10-24T09:11:42.761462Z\",\n      \"error\" : {\n        \"code\" : 1546200317,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Recusandae distinctio qui alias magni eos. Nam doloribus nostrum non. Accusantium provident sed odit voluptas natus molestiae. Nesciunt corporis maxime eius.\"\n      }\n    },\n    \"updateTime\" : \"2022-04-02T10:13:42.761596Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/272123\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/799152\"\n      },\n      \"instance\" : \"nc9oklf6kj3dna5cqr0kj07njceboe0hqxxd6z4svksalkx3fe2w0khfqygygunaza3xsqeuc9sd\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/066575\"\n      },\n      \"cloudSqlInstance\" : \"gqq9ibis8r5vxke5t1ww6n4634dlhlnb6aseski5yaidqpvgffnsn7agqwsgqspuqrxyh9jqj0vzfr3ph5r9la9eut45k2imz35owuypv24sbbxwvzwiiku6m4njzgpx6hwlhxms5ulon96oxu2zoopdo782se6ggpqcx4tcquzga4p\",\n      \"port\" : 1530523194,\n      \"ipAddress\" : \"ht1johko0m35zvgnet3iag8lashndbe8mi9vgstr9y6lfhpkzei3ev8ch0at4xtlvf9mtz0qrappmvaltg3l1w8s6m1e7ukk7dvdcqdxh48yzgqbgp1t9bjaus6gsideam9i1bgvz3w3nq4ecc4mwpq2blitxbazszbn7nxtpz51yxma98\",\n      \"gkeMasterCluster\" : \"1akp1g2jjdwfw9uqxoaggxn940bwpzs90s\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"c0xm\",\n      \"network\" : \"c2b5vd1s2t0petel98pudbcm4mr3sta5xej0qcq429akxhiikkutx3pgbsduv3pkdpezi20p6jt31finn3ltyeq75ulvjhmtco1946x9m2cbpy0m7sd2e33p5bn7nmnm7bnroxwgrebvf6p9lza96qkgrzgc8311l3lsx2ck43r789xx\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"REACHABILITY_INCONSISTENT\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"00g2t7o5xx0xmxsa17i4he5mk4rmv5u19e55ptg98j1velviek5gp41fozv4aw0c3nw7cc8nt1e7hg616e1qc2dww25il89s34dusqac\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"qwepdwhjztf9z8ioydtrplu0ugpd74pv70djbrhxhgc2raim60rs3o32vd9kwwn0gwnctiwxzg50lsfj0ieuq09cf2jajqra8xp0j0ii5v1n7zzzj3uh4poaunryujlhbfhst5chs7yhr7cqor3i7o5buw5gce6waereby8a4t2wkva72md\",\n        \"destinationPort\" : 2133122159,\n        \"protocol\" : \"u8oyn0rzso2svuo68p9chbqznlavs7pl\",\n        \"sourcePort\" : 1221216588,\n        \"sourceIp\" : \"1xjlij3tjd7sh6uf5bz594yq1n1ce8dydx4e9ar3m6tgp6bp4aj8ox4v8w84a8sp9zh7dugsuh1qvnhy24qkmg0gqrxca4y2yny1tapjzrtka9p3ji6732ay4uhmfacw7wqrn3epmw2c81\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/236986\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/619220\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/952865\"\n      },\n      \"successfulProbeCount\" : 308352001,\n      \"abortCause\" : \"PROBING_ABORT_CAUSE_UNSPECIFIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-06-16T08:52:42.762341Z\",\n      \"error\" : {\n        \"code\" : 1950949404,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Non ut sequi vel qui aut. Necessitatibus quis cum aut unde. Vero est labore qui voluptatem tempore minima exercitationem.\"\n      },\n      \"sentProbeCount\" : 1099218196\n    },\n    \"relatedProjects\" : [ \"knd5buljieygnmse3otrkv0jighmtd1f2zjls61hzbp1cij4b6oj0i10q5ixrmynaz41e8x5z5kvrcnmb83414stag0b1oe06ur1eobgkveqdyj8l9jvx3nee2ncs7j78sspsn4p0agiqfn9rv7kqynsy38747e3fbgszvp5i95ri4\", \"lj1onfhwjjju0orm35lrklwbg00t1a3eo0ww1gwhq78s9mhb43ravmg81opogzm18ovbi6j66wlh8jrufqzh4ze217nrvhp77fpu5ayznhvd43j1wq4r1nivwos8mfudrm20ckgtlrwbahvun\", \"ihxz8wf63gyl5g1bjb5419a92k12q5hi9x56q3b84ov0smf447jn4agogk2xm148m6lv8q10pxhkq5okql2qm9j64faluf0rdm1pai2u078jsdgirl402anwcdl016ae2qywhh19ip8kdm8f46s195f1h1sjfzyu0umcwl31g1i2\" ],\n    \"protocol\" : \"l0dpf9zsd1gb2xrzv605e4dvo5w9i768gmka5lawfxm2ihsr1d4xjlsokthkxvxqqbfwr3ik23fahbryvoihgxbtyygrg8s22182vnk6owhxxo876ik3w2dxu0pmnykdpkx10pfxmrq97w\",\n    \"createTime\" : \"2023-03-05T11:19:42.762507Z\",\n    \"displayName\" : \"Marcellus Boehm\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/153517\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/653611\"\n      },\n      \"instance\" : \"zrg0xsz7ohiahc62n13h0rzy81vi4tyg\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/417362\"\n      },\n      \"cloudSqlInstance\" : \"nzqwf4u7fsiolux8gr8tmzb45wcm25uknocwcs40tq7icv8hvmdwiwzh2m2q12ospjebcv0ruy7sf1ai21utn7cis1wgtevt1nu2j6a\",\n      \"port\" : 425318711,\n      \"ipAddress\" : \"4k2hu0fih6k0yse1tvpmm0obk7sxmrz\",\n      \"gkeMasterCluster\" : \"wakpsaac7st7px3u5w5bbnb2udr579kzsabn484wkc7n7wvlnu533f24mcynlhcvijcch0pavw883j27tqsefs9o627twnno0a39km5b91laaw55pzhrukunurdl9u8jgupidefzhjpqo98m6q6h19wvefskhdngu1m3kghsr\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"c42d\",\n      \"network\" : \"e7d32eb5xkaevpowc03i1l2v1fkxbvw7pdnbyux9ibqcmquevzjxjoutntudkgd91an2jg45o5h7jcebpi7soe367x67ux7lp98714u807ihmlapc2a9kj7y3ihv72d027u3coyztl97abtz27d224vaf5u9gbl0q3mbc9rk0a7mpwjerg3ccfjxp2qoph2k\"\n    },\n    \"name\" : \"Hiram Gutmann\",\n    \"description\" : \"Illum maiores quam est sunt veniam. Aut aut ut aspernatur consequatur distinctio assumenda. Debitis voluptatem et adipisci.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"RESULT_UNSPECIFIED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-06-25T08:40:42.763171Z\",\n      \"error\" : {\n        \"code\" : 1072228911,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Nihil a quod cum aliquid assumenda tempora. Esse molestias commodi officiis molestias. Qui eaque hic culpa quia dolore qui doloremque. Labore aut optio et tempora vitae. Consequatur assumenda voluptat\"\n      }\n    },\n    \"updateTime\" : \"2023-02-18T07:56:42.763322Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/942165\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/581558\"\n      },\n      \"instance\" : \"3imid8e5fqvct\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/449201\"\n      },\n      \"cloudSqlInstance\" : \"mag6xv0ywi2843i3khryrqaacpr15chij3wpfpbeey8ijwtv1\",\n      \"port\" : 461958496,\n      \"ipAddress\" : \"wrm8xvs043ebnpspg6nvh53zhmn0d9pvxzwazlo7vx9e83hzjbwyu8u9s4cow5bwbqiynymt3l1z9o\",\n      \"gkeMasterCluster\" : \"bs300duvrt85znjurk9jo30oo53058gbrbuegrwipxxv5dvk1v4p70nxtw0hev315u5n6t625nzhe22cqkwohfupd9k18o14rit2tx6zfq6bx72j7b846a78ubjmebcruupnm8qlfjzlj4wce1x1ca76ms698\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"4q6m\",\n      \"network\" : \"u688el4rkbusz6v0g7h40hbnic2u6ym6xuw2j70klo5yjeqeevpxna3x8104tafq1fx67hrxgi31kbisuxwicqvho4dctiejynfduiip8gyz\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"5zjc5bh1ybx65s3axznv950ovbe2drclbutscm2kwwd6370odvc77r6ufep7oe6fjl48q1irzuohgerfroi9tkmrmndwszb4zedmt4j7u4dpsqv0ijrifuw42jxk1biezvvba2g9lq1ar7cn7vgi9a0v9xekaulklj36p8tn1wwpl1241s04mjj1n5vv\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"v086297zhbnewer8c7yv9tu0tt3qndu417fu02mbav37r6xkrjuvnoan41s5fvemwmkq85st5wq1gqss21xolgimgnnj2egpgc3ypntait9of9m0dp2wks0pkl3s7mwyh\",\n        \"destinationPort\" : 1037891050,\n        \"protocol\" : \"7lwufutq7dq13i4v12vm4ulmualiwd1zrn078yzs5ihcc83itye78lu7d8j6c1ro5m4t06x1r5kk0iy6uwfjha6dalwrxfh7i5v0vgvybmceo5rxo6l6m0fh427gtj2451mscq2i4kgmsn\",\n        \"sourcePort\" : 507435307,\n        \"sourceIp\" : \"tcx4e94c956k0k3u82v1ljvueywf4whjnhyz5ccfgfd9nvtap9jal7eni6b7fs6nwjt4t8k7\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/868309\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/409456\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/438703\"\n      },\n      \"successfulProbeCount\" : 1840829994,\n      \"abortCause\" : \"NO_SOURCE_LOCATION\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-12-10T08:24:42.764052Z\",\n      \"error\" : {\n        \"code\" : 1150623503,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Autem aliquam cumque non reiciendis. Laboriosam omnis atque aliquid ipsa sed. Atque consequatur dolores.\"\n      },\n      \"sentProbeCount\" : 402941717\n    },\n    \"relatedProjects\" : [ \"4wemusl52jcwjzc6iet53is20lt6aegudck0s4babad4bqc0ofhy591nctb6clekhfnh7m5ow85t45w3nhw9m4kamq9kqhuyvkymzsiygq9uzz5cizt1ip0n5xud3n02ckyic0u3zfwggmmhp5pasuh2ed281zxljevq27pp63cescfvd74p\", \"sk96dkhwg3y0qar0rodotr64jf4ln4sswr6mr6aqm8deugay6tq78c3qm0ydl6y7ksa18r9e5947oq0onw6eba1htmcjhydgb4a9nieoc6wae0pke2os3hrgax0ldjihybav0hu54ptsuv\", \"694xuocy52h7elumx\", \"9k0fsjhakfupfko98zwjfsmfz9wk\" ],\n    \"protocol\" : \"jnjzypj26lyyxvyusdgv9a5l1sht6h3thr14l1g882m6r8od6xzwi4va7faojae20raaqd0if0t546qezgeonj1mh2fr0e4u760uv0a41cqevlsnu6psnw0zrlijxcyt41tqnr3u03vpoo558kwzaikfgwx7j1\",\n    \"createTime\" : \"2022-06-21T10:27:42.764207Z\",\n    \"displayName\" : \"Kareem Windler DDS\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/713312\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/254330\"\n      },\n      \"instance\" : \"ttoucx7d1bdkab3huugix4zfe3zqzauop4ntfkjdu5r6jjsttdzchacmoynb4ee4v8eb2e\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/252474\"\n      },\n      \"cloudSqlInstance\" : \"42vdwksv0c81aqpgxlyd7o5dqj59rjwrvcs4ldom4r62uzzuz6rddgnn8l5k9creget28l11l2w0kqkm9a0y2ed8cqjdddv35zhw5v4sxeja6m061jgxrzyuyfwtt1crtlgd\",\n      \"port\" : 1260907856,\n      \"ipAddress\" : \"b0n8lgm9z6v1wihvl20tadi5ennqpvsre41m6uzjkvekqfa1l05xd2p3ji0ngjqdvuq5kviqqts5ezepd6nvbfjkq5icb0cw416d3ypy36jztycfezmps11pyhq9qarrmm513vqojee7qghcf\",\n      \"gkeMasterCluster\" : \"8pnifmvbsn4fntq2aswz9y6sra0arfnh9wlsvgfjo7ze8nwz9x4524k8zdbwgyt1713axk431tih2cf4i2\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"w4fn\",\n      \"network\" : \"6b8jtxokd485do91mr6gftbvp7ym98kj9dp983ea508lyimkwo1qnvbp9w90ohz8\"\n    },\n    \"name\" : \"Dr. Christopher Leuschke\",\n    \"description\" : \"Nostrum aut a et. Voluptatum dolor itaque id dolor iure ab dolores. Quos possimus laboriosam velit dolor ut occaecati sunt. Enim consectetur consequatur magnam consequatur. Inventore quam corrupti sed\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      } ],\n      \"verifyTime\" : \"2022-05-16T11:43:42.764916Z\",\n      \"error\" : {\n        \"code\" : 473962097,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Qui quidem excepturi. Accusantium tempora unde quis distinctio odit dolores. Iste fugit incidunt. Non eos tempora rem numquam officiis soluta eos. Porro neque aut eligendi earum laudantium omnis.\"\n      }\n    },\n    \"updateTime\" : \"2022-10-02T10:52:42.765073Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/701280\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/788374\"\n      },\n      \"instance\" : \"rgyid2j1iquv5kuqhtpxo6tbjrqg07ygsn2i5eqm0hv3tsr946d61pptke3kuswe8z4ul\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/303956\"\n      },\n      \"cloudSqlInstance\" : \"uei1saqn01ritqncn4950q9i9e6y0wkd300\",\n      \"port\" : 1902588952,\n      \"ipAddress\" : \"7cw8s3o5f7mr6xe2ta21dadd6dwmqy5xa7b6ax116putoretqjxvtqw10j1e6kjj\",\n      \"gkeMasterCluster\" : \"5bph0m8if5tj91i6lbxjkuirjbq177zhojfo0ar6d9yqvc4c9euauhr5fsg4degtlookpvbq57uy6d7swcf32w25xwreldpxs4m71p3a1bdn6871k5c9di8z3w331dul9e7qasn7nsb9nxpwfo1ihb8z2ooqdcmrjotdbc84kj4fx74kxu6o4rbiere9rn5tjud4ptai\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"bd12\",\n      \"network\" : \"uhq37rvjrhe22yb21panhoxnhaqiciui94owfjtnn9di8656nz765camjqvs9bltbve18oui8ad6x4p6q8ymtybbfxe3nz0ffb79zkwlg81bsoce2bmf83smmj4yxb0wcy7obid0932o3tusf4o6z2le28s\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"e3wwakwduq6elpj0i0mqcbc2mzkpyj0njqnpdh7jfe3y756m0oti9actu1c9a4eb8c452fxonbnjgdn9kuy3m\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"1nsf8x2jqnln34yngleelg7vhbgqun21q8ctb324kvwwc3hpsdlitvcdcamefoslen3\",\n        \"destinationPort\" : 949292327,\n        \"protocol\" : \"z78nmqbig4wix36qo4bbssbj3lryjszp101r8ssfmztft92v9jt9a888ejzthwlihulcpftsesp5a9z1dp701f7kp7g3ukz3zkekvn3ehmgswnm0ltpqfhodd0unet8eufhjpstsju2vfbul44m9mm7pd4\",\n        \"sourcePort\" : 2000283613,\n        \"sourceIp\" : \"i9go\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/598380\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/532597\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/673343\"\n      },\n      \"successfulProbeCount\" : 313357247,\n      \"abortCause\" : \"NO_SOURCE_LOCATION\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-08-27T09:27:42.765932Z\",\n      \"error\" : {\n        \"code\" : 1812842139,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Enim cupiditate sunt neque laudantium. Qui corrupti tempore. Ad quo neque et non et.\"\n      },\n      \"sentProbeCount\" : 2022292607\n    },\n    \"relatedProjects\" : [ \"nw5nyba52hri58xo2as1hgmfgtc93niz51zj0nzgzkk035c1fsdgeg9acjpxmy0n6c4217nxg0lmj38pusv8i\", \"gn623zbccenoc132cwnr361kuqzm50vfvlpjn9\" ],\n    \"protocol\" : \"xupf7vq7acbedxjl980wjan9p6qg1xmgrickd68wy0ai0jxaj8d67bxwefaq823jxst8dnviaj8r6cxcu9b9s9h9axf2eobd3n1f86uf3phjns7q0x95a74v1wlosw3xcxuhtrm3thp4wo6l7gvyst6z3r0zlt7cmgqitnfvzlcsc3vt8814enq007odanq1wh8\",\n    \"createTime\" : \"2022-07-09T09:54:42.766085Z\",\n    \"displayName\" : \"Rafael Braun I\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/264431\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/838350\"\n      },\n      \"instance\" : \"o7z5lj0l6q2f0bgl7daqifhsfmp2rzqgtrs1tlxgv46javn4hy155d6suv74g9hvziipagrqx93k6cbcuamye5dkw9n91y7ksy3hpnh2t9cexe0j63syzo6yirflifsbrsfx\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/412498\"\n      },\n      \"cloudSqlInstance\" : \"xgfnmk70wok7zqiwwrqh3k3d8o7z7c76h\",\n      \"port\" : 1621595979,\n      \"ipAddress\" : \"kdee9vlw9rzlhoezwf4otgclylqem7bgfkjyv6o9q9k2diu7pnqn1sbse5rn7cqhqy3ojx1u24hc36izixqzp7748lem44zq8tzm8g0zb4fx0j8916rc5teuxr4r6ng59sj8r00741qfcuxbuodylgxigo8a5n\",\n      \"gkeMasterCluster\" : \"1lbnj6lrqjbwl77k1zf17engsql3o2anqh0euza00tjl5n79hjw0oplpj72ieeblju3ne79q4qe8f433oqyjk13h9886s1yjgolhv8g0a45ifum9\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"6e4f\",\n      \"network\" : \"se5flxhuzqv3zmupbyyppk58r82r66a1z73eeajsrq3kwu76zgp1duli8njwvrt21rksaoyw6q7p0oxj17mi61wofpzvdpjr2mieuk612qwzhesyajthljhen0ugu3ph2lfz9lu\"\n    },\n    \"name\" : \"Versie Keebler\",\n    \"description\" : \"Sed rerum repudiandae et. Quod exercitationem sint non aut qui iste. Labore est reprehenderit dignissimos dolores repellat consequuntur facilis.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"UNREACHABLE\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-03-24T10:25:42.766853Z\",\n      \"error\" : {\n        \"code\" : 268205145,\n        \"details\" : [ { } ],\n        \"message\" : \"Aut aut voluptatem commodi. Repudiandae cumque velit qui laboriosam. Quod repellendus dignissimos ut cum adipisci rerum. Quis vel fugiat excepturi nulla libero fuga.\"\n      }\n    },\n    \"updateTime\" : \"2022-06-27T11:19:42.766981Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/581370\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/613453\"\n      },\n      \"instance\" : \"wyzram8xuv1l6i6aklq1lhlaj7s\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/595411\"\n      },\n      \"cloudSqlInstance\" : \"tbanxctfxshldq3u6mgnsv8pwnj4hnctxi3j21d001jazssothf304doizooz9ans024zcwuimc1hybkg7roy2exxjis6gxxyia46lg408cva7alsbeck0ntilphfc5bao5u81nj53e9wowl9o5wn3tw1u8oue694edye\",\n      \"port\" : 1906314077,\n      \"ipAddress\" : \"z7bffjtsf6ike4lvxmzqefbwefnzwk5bwtwl4u8dy7rdcil0yr5nxan7q0bm9rqg7fvyf1yek211h0lu493dhj4w3zc1zi798eix09voll3py1av5f76pjfcc7jyip1afn3rzakjlzpk57\",\n      \"gkeMasterCluster\" : \"fzbkvmsyvm1ps6879wxa0dk160rtanury97fr4h3xrphcx70llbegxhc3dkbkg3aluwdxj75idbnulgzfj59xvkau4pl4sg277vdxpks834e8a1wfj2elaxjgiar17\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"c863\",\n      \"network\" : \"c3xtjllq9b15pl\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a47836d-b1ce-46d2-9b61-25da9191e776",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.767673Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.list",
          "schema" : {
            "description" : "Response for the `ListConnectivityTests` method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Page token to fetch the next set of Connectivity Tests.",
                "type" : "string"
              },
              "resources" : {
                "description" : "List of Connectivity Tests.",
                "items" : {
                  "$ref" : "#/components/schemas/ConnectivityTest"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached (when querying all locations with `-`).",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b9944f40-495c-4dcd-84aa-eeb5cbe0c782",
    "name" : "Rerun an existing `ConnectivityTest`. After the user triggers the rerun, the rea...",
    "request" : {
      "urlPath" : "/v1beta1/Alexander+Gulgowski:rerun",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Giovanni Balistreri\",\n  \"error\" : {\n    \"code\" : 1206818010,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Accusamus optio nisi inventore eligendi ea corrupti numquam. Est quasi repudiandae ut voluptas tenetur quis. Et vel corrupti quasi enim voluptatum ipsum. Minus itaque veniam. Corporis cupiditate simil\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9944f40-495c-4dcd-84aa-eeb5cbe0c782",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.756735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.rerun",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "6b35e4d0-4d3a-4cea-875d-a850e56f9be9",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Deloras+Gorczany:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b35e4d0-4d3a-4cea-875d-a850e56f9be9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.756457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "2e8ddc24-7d0a-4aa0-a0c4-ee483a59abc5",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Whitney+Gusikowski/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Edwin Bergstrom\",\n    \"error\" : {\n      \"code\" : 2052398555,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Dicta similique a quo ipsam consequuntur suscipit. Molestiae ut illum esse quia. At ut qui. Vel animi voluptas sit.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lonnie Wuckert\",\n    \"error\" : {\n      \"code\" : 1103087530,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Repellat ea officiis consectetur vel. Ex perspiciatis rerum commodi tempore sit cupiditate necessitatibus. Asperiores ut accusamus. At animi et.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Javier Donnelly II\",\n    \"error\" : {\n      \"code\" : 660341831,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Vel nulla fuga rerum suscipit. Quia vel reiciendis quia expedita veritatis nisi. Sed nulla laboriosam sed qui quam iusto molestiae.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Rigoberto Gerlach\",\n    \"error\" : {\n      \"code\" : 1400354680,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Eaque pariatur dignissimos qui sint. Quas vero similique doloribus. Qui atque soluta ut quis vitae. Et ut quia dolore. A molestiae et maxime est.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sondra Nicolas\",\n    \"error\" : {\n      \"code\" : 1841604638,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Hic quia ipsam id aut illum consequatur. Vel magnam perferendis vel. Possimus possimus et rerum reprehenderit alias. Non tempora perferendis fugiat debitis ut officia rem. Saepe cumque ut libero aliqu\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Natisha Ritchie\",\n    \"error\" : {\n      \"code\" : 1430115759,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Velit consequuntur dolore labore soluta rem rerum. Numquam quos atque ex consequuntur nihil et. Similique animi cum non eveniet esse. Expedita distinctio ut saepe quae. Hic inventore sequi impedit rep\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Rupert Brown\",\n    \"error\" : {\n      \"code\" : 795713820,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Consequatur et pariatur id ut. Reprehenderit est et aspernatur consequatur ut. Voluptatem totam inventore et officia nam. Dignissimos quidem vel ut voluptatem autem eligendi expedita. Et qui aut magni\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"2v1ud071syz6bk17wcq7el03urgzkw3nppay\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e8ddc24-7d0a-4aa0-a0c4-ee483a59abc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.75636Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "0e485a9e-500e-4289-b804-57291eaf8e11",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Chi+Bernhard+MD/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"169np2r108c1s31yvlslada7sl4s8e2vxbdofrvamfcipsc1t20gt5vbgljldl0aea97ofx6391rnresnf555dcbnl77p1ffhqo5xz\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Crista Harber\",\n    \"locationId\" : \"kn8b\",\n    \"name\" : \"Micha Adams\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Humberto Kerluke\",\n    \"locationId\" : \"jr0k\",\n    \"name\" : \"Mr. Elayne Marks\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Brendan Reichel II\",\n    \"locationId\" : \"10a7\",\n    \"name\" : \"Dr. Jarvis Bogan\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Moises Denesik DDS\",\n    \"locationId\" : \"ttum\",\n    \"name\" : \"Digna Hudson I\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Gavin McCullough\",\n    \"locationId\" : \"dm17\",\n    \"name\" : \"Conchita Bosco IV\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Fleta Treutel\",\n    \"locationId\" : \"l6nt\",\n    \"name\" : \"Bo Smith\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Estela Denesik\",\n    \"locationId\" : \"9ka1\",\n    \"name\" : \"Ms. Tuan Fahey\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Cyrus Swaniawski Jr.\",\n    \"locationId\" : \"29ja\",\n    \"name\" : \"Lorretta Homenick\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e485a9e-500e-4289-b804-57291eaf8e11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.75511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "4748d8c2-cc66-4306-836c-8cbf665786cf",
    "name" : "Updates the configuration of an existing `ConnectivityTest`. After you update a ...",
    "request" : {
      "urlPath" : "/v1beta1/Octavio+Bauch+I",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Rudy Jacobi\",\n  \"error\" : {\n    \"code\" : 1918676826,\n    \"details\" : [ { } ],\n    \"message\" : \"Quidem expedita repudiandae incidunt eius necessitatibus eveniet ut. Repellendus repellendus et quia eos beatae asperiores. Suscipit laborum incidunt iure quia id et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4748d8c2-cc66-4306-836c-8cbf665786cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.75347Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "28863295-3df8-46ab-8966-8f0e2c527101",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Chet+Miller+II",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Steven Hartmann\",\n  \"error\" : {\n    \"code\" : 388971826,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Repudiandae pariatur modi. Enim quia delectus ut architecto voluptatum. Suscipit tempore maiores non neque placeat tenetur quo.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28863295-3df8-46ab-8966-8f0e2c527101",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.753179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "28f6b8cf-efe4-4677-800e-a8695da0d804",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1beta1/Erich+O%27Hara+III",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28f6b8cf-efe4-4677-800e-a8695da0d804",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:42.75284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  } ]
}