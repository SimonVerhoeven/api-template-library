{
  "mappings" : [ {
    "id" : "0932b8d5-e2d7-30b7-979f-932de774af03",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/als9kbnvmkf0eac06zwispha:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"r7l7ysxxxng6lyqtrr3goi3fltxcqqv51tcv8tacv61c3ganibd203td981uib0d7nqkybzq5p6fytu\", \"kzzjnldoqtjc0o4p2sjk6ws45qhw4mfqfv0fzyc1oyj4zcaguim8czzd8c8nx6vahxnjegdh\", \"8ipwuwuy37y7ivr6d01ob3943nt9fqsf11s214ac76nhhpdexz5ft22ykx76wgzoyguu61l2trr6643u44h5e14dgz2ve88cg9ivc1ncly28dvv76l1f\", \"hdwt0zzruhvxl648ftj16nlbiqdraif97c28vwzn9xnnz9a5hby8hg48882uqmikrlrd66y2cg0s6ure7nacptjyjbkv16qdsuzd5r78s0hpabj0ozo0j5adaradrrs4manr7hx9brguv6bhlqch7malm6iokludea346s6dtdzm4n9zx\", \"2ro41922lav6xgj2omhuvovy7ivc4nl0r3i8m49fp\", \"llmyulkuq99rx4vltp9m0acuit7tyg7wan1079sboxpfg42tbqfbcp3vd52ggdhu23ki0w4gxftivoe2td3nmltkp14bslrikjuh770o5n9md9m7gjd64zco6xw2mek5hg81to03lcmgjlkwbovwfxm0pk30eqvaz5525ls6c6oc9l7iq7\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0932b8d5-e2d7-30b7-979f-932de774af03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "a74469a9-0442-3938-aafb-14c66fce9874",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/dg50haohwr8bi8kzl3buodj8r4is4dhw9fu5fc0dw5ddduruu80cmvilhczbyo2dbclpanajaqu75vuputzitdgmdqet2n0jzptbs1n9bs5s22twh189bzvhsrlzxb7vg0cw6s5yaiky84ib8wmdewno4ll:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"eg7dmjv5881qpw92flx0muy7sq8j7gn3n1dd8v5rrm3q090i9rpmagie5nkzuegezx\",\n      \"description\" : \"Aut aut aliquid repellat deleniti minus et. Atque aspernatur quod. Facilis culpa delectus magni consequatur reprehenderit enim dolor. Dolore aut et. Adipisci voluptatibus autem exercitationem explicab\",\n      \"location\" : \"j74rkr12sac83wgt1iz939tstr2hxpgogk2j1tzmonrscbh2qs9i67pco3nh7wull0qdovtr9p5dkwog04v5h6r70sys63ur50ket58pv3xj8hrl841igbnlbvg3mgyo52rpnimsgtrnq3o4pyjub29ywds14ot9oh440bh4qc9tbmq97a\",\n      \"title\" : \"Dicta nam earum eligendi id omnis.\"\n    },\n    \"role\" : \"ezqbw2\",\n    \"members\" : [ \"jdg\", \"6ifq8pp831iwoee3jn8kdiq7v6rnug1o9qx8emzn9hyqassg6mjp69q88p7s615g\", \"wnzvio9djkxl2k3sd8355vupoauxceaqtq2jc057b3tux6o6zmtesddbnvwwfjj893l0ilrm7490ajr6li0jncv\", \"3c0e77c6u4nuvxisupocm7644srnanvcjm1is7yu8g69hbddy1vfafdzihgvgvc1cx6xzvrgsyd3zzxra5vua1pce3r56z4m7jiy5goizw9hkktkhuk2mej46lkcubi7gsd95mwlpl46obye8ju6ypj3a12oomvc3uz7r0kpixr7fv87zc92bnoh\", \"dx43yihl82pzxpc6j1antaqcfdj65ajs1mhl1lv3rlusgd7utdiuzze9l67vvr8d2qtyevy3h27piscw6s464e140ja9di9h08yuo3yv91m6er64a5siwqa7ywthgnumb1n9sv31fo5u9faiacvs4q7xl8bjcevjb71ul1kk3p3ymal\", \"9c2x5npkozezwnys473wclw213lp9tu8cu7ti79mxkcp3c5zdobo3rlxjpjyyeereurzzo\", \"rn0jaw8vuc264x7guz36zjsutslxhb4es7x9s1jvhn6l2w7w8gbk4buka7\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"gox1fklgjrr0hoe669s9oa2bldbijk2tgtm2lf74\",\n      \"description\" : \"Delectus quos est ut velit nemo repellendus. Et non ut. Suscipit earum dolores et.\",\n      \"location\" : \"bpj9gm9ilqnjgsqbdhu9y511hi2pspkf5fyg4ds19cpdqg47uk6xycmzh71bncpu67cn0ktzl92leuts4764ntk621s1gmj2xmnzzpgw969e56jyj2zmdhbjahprv48h87po6278hdphd83rjegj5h68g64kh3umyv2hgoksq5jaibgw\",\n      \"title\" : \"Omnis ea laborum.\"\n    },\n    \"role\" : \"nbg9dwlrev3u8jge9xeftu3ywkd5b8pwby1cf9oec939u1ha1bvhtcisg2iofoh09cemb1ch0g3phx57wipgnbxms2iu9najndeg7g6ttaaassnmi6oqrrn1kcnzakrea11vne1u0gu\",\n    \"members\" : [ \"yi7ho1g1l1c76xlgkvu8qk7nwnhz5fi\", \"nfomngcsn0ssxbgcuxk93c1o6jm0231jgjg9wb1lwxf6j36t\", \"wv32i2z5r641lj12nep6o4vipbikq1g8v7zbkzo\", \"1nca8ygy0a9evcr9cjcseawbnz06ljyp56hql47lpyi69frsli2eode2z8czvkk43os8alrpouhrbqkydejc0k3t3vke4qupyz572gqryo3vzh2e0mwhe8h8rrtsn2y\", \"7y0vlx4a1b74x1ik9m685k0k7fea83k9ezg8o7941as\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"hf86coia5jm44ngpvp6qp11h4blsldfahchu8pd3ypny9wxf6wqz9eyp0e8d1sua72z1q6lvziij0rk6ai3jjoqsr6jybuetxeqlhbul8dmqr24ifg30jlah8e614khkq8t7f\",\n      \"description\" : \"Qui tempora quos hic magnam quis ratione. Sit modi sed accusamus autem. Voluptas sint fugiat. Nesciunt et vitae natus. Iusto aut distinctio quia amet consequatur magni dolorem.\",\n      \"location\" : \"l6lzudzxbx27hv5ol9zj5wvodyfutfvrlqnfz85rsjavaer4mjwo3ocbjaxm6ejwwmcpv0wk7re1bvfb631cuq5vkr0fs6om4uz9mhk3jpl2su\",\n      \"title\" : \"Blanditiis rerum iste debitis tempore.\"\n    },\n    \"role\" : \"qnls3p2iqad69tf3zka49jl408otnipe0ck52aboysp094so2efsxz9pvaeyxkjmpk0pbjmlykk5i6dxulb18ka1gq6ujgjd89ldd1af540oxhqol7pk62km2z3k0da0l6r04rghv4um2nb3ti39alndh670e571l\",\n    \"members\" : [ \"c9a735zihjb93wl\", \"xnp8eape8cs0pa5te5m599y1j7rqf3r9xncig4gjhjygkfrlyhxzi1mtu9mw10i3ylt5\", \"uw37x0xgopc48tnkw4q8ggnjiee01okxqyb9nabkqwpzrzdp6onej86pkdcxtqj2jkm7rmsy87i7082lfcoda9ywuqo59q4ie9vpmot7jnin4c4c4f2qoek8kqi823rim9u3tlwep8i9v7a7kjk5i\", \"omhrc17rgcbp4vab4djhup5zu1oo9k1crppeb4n5l0oyvew4p0r343ihzkjr0d54th5hit2h3b3obdvk9uoj4ick2b0wi4j1eafnwipzdjzthd66yrt8ji0eoakjs6nyk00cjver\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xqn2aw56lr6kucaqsrrbs4h7acq6yvp97a3xqtw9mv8irzg45f84jk39dgw3wkvap2u1lwq7sgv887zkhtepv6wj4v7ttc5kgbv3obci8qxw55pw75chgzs9e1pwf\",\n      \"description\" : \"In officiis eum deserunt consequatur. Facilis quo autem. Suscipit similique animi libero ratione delectus. Saepe accusantium excepturi aut. Expedita totam id qui quasi sapiente et.\",\n      \"location\" : \"d4rsggdvtwgsnovnl3s9etykyvlpk6r9d05d9oq42\",\n      \"title\" : \"Sunt unde voluptas.\"\n    },\n    \"role\" : \"kldsylz6x49cxnlnhi9h552u4okrr0vkhys0kmahjokla0fpzd2wt62kyd5to3brlob75so57rzhbbmwdo3bjez4qvbg57ht20csg252r9udz0p6mfy34cq3eq49taiqp3p3pxagxbtge7gls6u\",\n    \"members\" : [ \"dzdktnasrvijc7dw40fkf91osifl6mlpnpghj4so9vt9dcnd6hgw3y0e167rncrg7vca1prwypboj\", \"8wyj9x8s78uc3pmiczwt8mm0we233hpfdptb7sd04cxdxfpw607x2htl52l2jyvg0olcy02\", \"6o1nn2atmpf2yzqzhvfaj2thorjgwjs9iojysb0bjt4unrsqfetf\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"y819dyq7klxxppi0mqv29v8abs5qvivjilx4kxfwfmcmp3oqkn0ypbev1jev4kbxoupkmcbfdlwpgej5nanied\",\n      \"description\" : \"Tempora est quo. Numquam ea id ut. Voluptatum sunt porro voluptas aspernatur eius. Laudantium ea voluptatem quaerat placeat voluptates pariatur quos. In iusto voluptatum quam.\",\n      \"location\" : \"sxc9d60sz2vtcxad73wr820v2ph65uqiy24z3t94n5zfuzmbf0zs3r6ywpmvu7dwls7746dayir80851z5z1osgqqx2yeh5b23mqpgacsxkhjzvnacp6mxaq0hdu1byldkknuwtlcf\",\n      \"title\" : \"Eum labore id eos incidunt qui consequatur nisi.\"\n    },\n    \"role\" : \"01nkn3060u65uirtpd4dcnwuwga7ugip8sgghqmxivsoocw5kqniz3vsoj5ngdgx8vfr9oz3qwna3sfmj8eg7uwjs8vtcg4jequd5vgwfexo90iigs7roumw8s9oun2or86qcio961hecqx8f13yy15dbyre3xrra1zde5gl3cug\",\n    \"members\" : [ \"eerazq6g0dqe5ubb098grngryf4bbjdg3hsbjx9kdclv7vwz4m7mrcc724klyum74k6uup770zqky15z8gh0tg5jdz3palopiuo8ohwywvys4pi7e7i7sdvdkgfv0a91t44hh01gu7f9z1sv24ivswrsqcvitmd3chp1p05pekaxbf6wm7g755ht8riwvib3teun0sty\", \"45iptk3qiu768on7oisoae6awhppuit38jffmxzko091jv7hdug8hxksya5yysyxiyqe97kf287l8th56t1mk0l1pjm7tyfsv7pd5gnbg3wrgh2bboqv2zyt6l1b1a93yy31y22tpc6399t7\", \"md9d21vdn3t0uylxy7smwpn6sin0m6mzbjlhfa1n8c2fu1a1bnt0h52k7rs59x7kxyiq6i5n61bwl9bkmsh1fytn9h7v9ydmddq1ct4d5ui4fo42693vt0keydd7i9hleqy67vhhtapf4gv8g3i003w91iqa86myu5m95l8sp29l5fn5bx41a4\" ]\n  } ],\n  \"etag\" : \"asperiores\",\n  \"version\" : 1562592049,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"yaof0re4dwpqbs6v3raspzrlngh0a1yacozpdcfapr5mne5lwdcfyzbq9o7axfjjmi1yoxuf9zpf6hgn7d43bf7hl276o1wc2trucznh6sunv6a6mb5k0c6yf710cav623spui2qauj8uc62fzrvppxhvf2lt\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"p7a0rbens\", \"3teizl384fdvzylsclst6mfqobafvrx57ozlqs58vf8l0r7atfbeuegobwh8q2lnlrucjbvia41ak9mjnvv5lkwmgey0rggsj0v9itple1loqcy268qn8s134znh8ly59x1pzfz5b3gb88vqn\", \"whu2ba5f5v0zb9n93q97ti1fanp8kr4qjrfbmun2n074ylucwi5the39fmtiu75eqe2vgizay6qrhyfrkgy62sdk8xbw37r7y9pwp7442uo1flu0t5vg8xirl3i7hm9a3c6mtxu8fn6u2q0w9npwvdux0882lxrxr3le8oxfe\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"bsgcm0dhvfjuvs9jm1t8g5s6l5489muouy1ybazt1c1ktddhxse6ur780e6d8uxtu20qqux166ktn1b3o4zzwhyvfhoq1y0h4eny4i1dpvl8nrgmr02g\", \"l8au6ojx89z6q22kwvco36tgugyqnk6ca37ih60n9phl2kpp6740pmxlk8j4rjxjpikzzz856yf32axjrzv3k1rwfw0hkpbsaacl4fpyp16a6o6g58a1vges4oi3jpk3ensvzuxuci\", \"3nfl4yv1in2q53i886lmcq7kzm0ogvq9rbx1cf76wjpksivx2802wpwhcq7oyb960fhh7ls5k6l3yv2mcpqzkme3hfvjehd3nyexhyrawucicc8hadblckncsxi0fuaixdkgx7wxq193ui14wl3e5906niugmzcqci0asgaesnprn\", \"w85scuv25a34em9muzjmp6lu6ibnhwsfavu049nt5nzuzpp3kewmrbyc2acbl\", \"e8gxda8urymvstgi7loddzelfbrpeq1l66h9w29nt461509kx0mrd29sxjb4z46aje2xblrdl66kfbclijiure0iswe77p0icytqxbk3kwfnxnejx0rszbrezbipt0nebcoarsliwawo4uu2ght7oipw1co6562a\", \"rcv9g0b6ii0n4t43mgqbr8caaqewaugr9a9vnbbpkptf4qoe4ydc9xz91uxay44iv4a62jkfgwmp4ecnno26i21nvitulnidl17e55gxtkzqr160t4sztjgg3z82fa87rp7xmhgk7spmbe8vpinf7nyyvfdqtzww1h75mvbbxhzxw3gj21\", \"kp61d5hfrr\", \"02q3zb5p6japr6qq8a6\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ylwykl0fbq76fx9vyn66561vqqg7n\", \"grlxsn16ls5uyne06d27qlhvdj6d27f7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"3vath39ce35lqet6mgv71g6ocyv0r6hy7jmuvzeg34sh84voeagtnwdxl266v0g5k925ic2fbgzxystp90bbzol31qjg1wpuncpno8711t\", \"qtzhibmj8w7o1fe2r2nmgtxxp37vdkr9kg5vo5cx704nnxkwzcyss8qv5bgmzhf4smiaerdwxlm02x5i8nnp2yjsdik2cxrsuwsylpkxti1bbljholr6aya5nrzpxs61626\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"k4fy7bv74xm4zymv63mpuqkjhvwo1xbo40u0kphdlhonhkmnbl5rdumah4230m6ib43lq0prmiz7pnhd9g6prg9bk1qg7hdz9x4itvf8jcijgwybsaox1lni0pxkrh2vap1ebjn5c6izm3jt9q8un1p6rw2akznm3tpld3pmp25crnml2vto0vw1waau1qtj650wyso\", \"x7jmuwg68w151qlv9poq4ems6zvlv620ofau4yjb8f59lxvr65n3y9yhxft954lk57gykzla7nmn0vqgskpku1swqz9mc5ce05m07nnlq07zcq5h290oyqjcs3cao7ebebzy1b9okk9tvyqixhoai4d2z3q2nkray5keulv\", \"09uwhsocju9fdz42vzuma358f4o5el51meo9ldlnxwf9d95972ujgydb36mbml75ypjatn5ujyy0ehibkvlz4rxdoqz11ov28tml204ogh6e5x67gudymf3vhlv31fxzog1xvf1731j6yjqudj4fvs1843yi3lgdaj8i019zeup\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"6jbzq2mibxbykb5x1gfwgn9h8vq48tr2wz431be1fn6thdg6blsxzqe8becs8py55hi2axyla4z8wdskj48mus9o01e6baga4jxnzspdiiiyh0s40ibksimgvzk9jn40vyptntozth0v9xhg5rhxivg1sd6lopn3wh66fffnwr43jw74fiqaqz4uefwhxq\", \"1lnu\", \"8e3z4\", \"yt07tsutk3qye5f0erxdcar84alzpea05zbsw2us2p6ouysmi7kk1baaln6uq9jzzuptwvkco1mzhl6ranvtlo3ckseij2tf33ebl579lgqcaos63mbld10q8l3y4n36idyb7m7fddljktfwhs8cb6temczhd2t6jhxyzk83qdtgpmyjcraitnpiqugsbugbca\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"gxoagnqkkoj1fl70u6ho7whp2xuv419dwojkij970lixzb0q5ood1bke13m4mianjpmm24mcnxnozwayuzpo5rubi3soig6j161nnjv2uqponwldqi857ebs15elg6i7q21basoilfo9geazcwx\", \"z8j235kek6bn43h49trg\", \"1vhgh21b9xr8qk0adtxh1skxusxwyiw6ofw3u5b8ovfqoin0dpik6jkxz9\", \"j5yfzc7x28c2zd5c9qx3wkcx4m1jv535ts8xr5i15amfpqu62biblqwfk\", \"n3n5sko01p9rwtmmi89oty7mvanzhsc00rrdl7ol1ujqkfg5g0092cba0ejae43wfxt5c12w8m65s99zxra0k87y6ezr9ye5gb0gm011bcklnp8on6f8zmv2urjvp3nrzj0fjeal81s6t1mwoxf62qje2h4mv4wmgltpl41mg8j0n6\", \"ttlxxuzis881wusfuds6511y06aa8uyup00cmj439qn4uoc43dxkg4hd8zr3klhpy2w9janin40\" ]\n    } ],\n    \"service\" : \"g85cl6cxxbiuhboyvwkf\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ythw2yfdh05bc1x9pl9ycznsosuk51wmgrfxuob3jz1ot9bwdk86hp3idvgfpn5ob75azmr8qe7i1hlibqp4u6gmgjdpt\", \"wpbw5lr5008rme68rqqcz70qiq02yd3gneiixqjleifo280\", \"kws039w2u9im093xiluv8rhtnlzkjl2egs1ukois0sjr9ma65\", \"jor6u4h66dizke0oomaodmem2oz1bq0ap1f5s5207howca8ppuk5fna1944z9fxpjk\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"fz7jswn13i5atinl8o4pqtb7ou6t2rspybzmoe41oalz46l5lf0km8efk8u8cz11v5l531fmg5n4qsikz9kr5u6wpxjpnqn9ukz70jkun7g28uyq1e7llhh0vbl1ok1a7gv54lucuqbph5tsaet42rc4raygfxh1yedqnee4vt41y9ql4mjdjaedbp41zhx5s9bn4w8e\", \"sdhwlubimwwq382kubkjhx838czkiieoja8mku667f7rl7w1plftrrxqvf5sd7erb4sfabvdt0duyblsbwrpqsdl6610qoh80aowzlge52cwwyw3r6flugt8ccbg2552ociki4jcule8ymp1mt413qk7hhypzi0wyr\", \"d8rs0rnxib9oy9oxpi3nnm4vjx0kxho08jy20ngcdjr1rvhxbl362cdcu3rb145gz69u8ctwibtxhg2vc4h0k27j5710totkavv8w7qrgk7\", \"3ii7xdhac84w71l642638dnc\", \"2czv0u0432i9f1vxi0n3jrkcewzvm37o5mx\", \"cnr27jsww6vlnjulijun5t6igbgicaqvwl6mkrvpbfqb1ywtjo3sz31qxp9wcswt4tcgozdrjiqmwsfc2wotresoluk8v1g3zeh296avznpkobm6m6xwtmgbzwpuyn35539ntgztte0bxrpy0k4w1ged41byrhk076jmqajta37iz3sdr4\", \"xnl8sivzdu9u0b8zprlqpisxdep2cdhilojr82vx1hhqexbtbnor10ldx0ea4ayc26dcaauzdi5c4vzfez5wrboqex6jh1akycu9c1mwowewy0k6olorlntgguc7k7xvkr6vcfhwahj6gbyhv5b5kskjw7hnxa3ghfvjr9dw4ewlpt91u1ha8jd4o3x7ocxzbn\" ]\n    } ],\n    \"service\" : \"9q06gefcdua8j5emhsuuvvcb5512gri2sl2lhexs0t2mr2d7zofcim7ux4rv3jsisxjz2s6ce3rjjebjoyyjzkjee8nux4kcejw8bs9qr6cg8l9kg4aa9yu7zxity18s2ixjcd1zu82ca6hgbxkeyglqh9kvmoyyvu6ghcdr344b13pte\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"uzdk8xkubwr8yp3kkbt1xl2embttgpgm568yfjqplumo0yeh7p080216cy3dlha02u4bkqfecbw6pyt0gnqfnddi0t27zlfbbmi9tfwe6ds7pz5cxfoa5ogver4tdl38a34x5ts9ppuwanlfwqpkqu7l5eb53qp\", \"6t8fswejqh3kwl6xib254ckcoptqdv7ktzamowfp8ix59h2zqfqi4rvk7r6c7d2aseu6k0dzzuyk5qm662my7gahzx4yxarb0vc0vb64goeifzmq49vi1vese4\", \"34rw6vyxzx8hw44doc1anflbkydhis8nigbrsvjj17bi1w1vnqa9h86wq42sbfazj8n6fhmx4ffkw0wnha2cyhqskar89kz4w18z03hlactc\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"xs0y66logbojdaed475ycyb3w7o8x37uhsk6bp0phxidtnap5w5e6dspu4eh2a9hjv9zn5zq8u1mk6o6sq8xnk4mk38q1afwmxflwjheyw7o3bc3whyr5erjb42bwe2lr9pk7jn731exgre1v06cn4ezij0\", \"fhkl0c4lw76yguyfkfodw03en8xhud9jjjyv95cusyyqr5zc2y5plg4e8b3ogvxzh3rrlwfyzfm5qyj5w88i13tmxirtl5f9rckmomfo5iv4y7yep9c4mnug3y2r94tm83dg08micflvz1x\", \"4roffp9w14cnnnsz0u0u9wd1p8vlopo7ktappwb1o2jjra5j7chxm6axh7gr60yvgrjvs3zlyiasdnw4srcaovriec7girh2ydgkom69tf22ribxpd809i3qj5lz2edj8r18beyxj8mr6xx8k\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"a2gbed3025bgegi53ij40zwj5ujjj5yc7u4qhpmt31rhmd4jhnzj932u230qckhh4do7m7b0okn1uqh\", \"ujhcm4soqvuwfnay0wsufpqtiah2on3vm17lbam48pt5hyg75814ekapvw\", \"cggyf7xczjai6yz4qj5gbhrsubzcb7c19jknt8ionxn51h9yg74zg65ukz62ke1h5j8pn569hsk29pn6q6yqglgb3xzr94chyxtlavxzq7jtjuwscem3q6s83j0ph2hflgq5x0mvqv2yyg5pho577ywowfobgqvk72ai\", \"jmacc22dete5mbug6jdd8uh943x74i85caw1fpxdhvhc1mdl245zsshcu38k7sf9p6795tzcxl985\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"1glhrdgqp8a5avqslwcxlztdhdea74in44g2rm593kzsnggi8ivexmfrg7f11qhv0m4u0seynv50m7zs1pnu0fophd7n\", \"0dtlfldmo0os7r9eb3uocttgfd37mlvu1ydphz919n8zfhi4xzlkkzhbynhe4pn5jqw99sr9b5o6zwpotwhlywd1hb4w0rbru6yxt4mu4kgr0rrdw6qd1x91vlewvb7k20k513vzuqdhmmzsxh5myg0we4\", \"8s5fdajdxjbu01dsl9mxlmcz4lecqt5isuj08d3pve2rnmht615u2vocev5opsgxq4sxtwx96fm44xkv3mdgzah8y8v7l3oigjkxj\", \"lpfenu38kasjielge95lsfru7xqbk4j7bebcatqj7yyzww6aibecy84hfth2mba4dy7l09pzaddzipwbieq1scvs2es4aety5xfqhqpmslg854o3bqfn419ryq68s6flxozq9mumzehpbeh6pwfiqwh6882bwng5i13dwr7gpu2e6zg8ouc\", \"jodo71jijjug3cb8gi5ek47qi842fju\", \"lwa5d8xs91wke8l83ec0oqmr\", \"bdg\", \"eys80myfszgw421wwm3gcqz05l4p7w61m1mvlbd8b63jsuxr45uythruot2lba250mingdnre0gmwpxcxnwtejlgsgz6y1kmt3nd811lxrj75d6mr9tgbd\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"frqkgu90wzh7edo2ttch4440r3agk8yghhhfzr52jccrmit6i5ye9ksn2thniackifwr6mmbf3hg22sutuj5f848cpxnrx2ib5cnxgtn0m0mw6mutqf349v9kpd1f2hhcc5bh9aitn6awpe6f0r3ryujorwb214qgi445gkc71\", \"yc3q5lb5vk85nvzb38ys5\", \"5ywbie7rc369abb4q2jxvr793hhwraa95zk3drqecegu1i\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"88txfk\", \"dmf20lijivzc42ap30xmz4gjwge712lbthjhb8jan63uc7wslb9ezlh\", \"zmikxbhbmjnr7fl76xdhip0hgddsttj2yp4hgsat6ovex\" ]\n    } ],\n    \"service\" : \"grpp9jj6diazs2dnwsyy6oiyz2srr2qafk1rwly8tncavo2i1nfxmr4y9s4hco6mi7gzjfojbjj0yreoj9hog40an3mhnskf8\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"u487eovgjj1bncx2lxxokq0pouy8j0xbd976tklvn7n2q5b9vx0joujvgk0o4cfrzgbln2lbr7e0ykmfhtwvm7c8l052\", \"tivjt3qzed3hpsud9eoy332ilq9fjrgn8bcrvq349o0fc\", \"wiormkub9nrfvfqyfk27rk95id4ckeoe60frhdp94\", \"x5p7lohjso2z1\", \"watz7405vmsba6jitf2m1pyr3vqlf5858hyoxwh6gdl00z3syama085w9woiyjzpug4rej8sw2of5km3zyr1wkdxd92xjb31fejoexd3g8a6nc8tkkztd8tv2d04adxd6ttf585fsmqz4o2n6rz0btp99381vrcoozkov7r7vaegmrr095mwa5qpp5czq84\", \"wmxxdhndth8ot2olrspc3cocm24qdbjc6trgnk5bwg0q01ckrrrey0q80j9i5ugrnkpt0pjebne8rsehha3x6ze0kxt34xoj614bt8uwtjxel1mtrvdp46wgmqsbw989o6evd8d4kblt1l34qh0nv5u0uqqtfqjn5ik74u95muuk0nqy24efjjdsc7fyozeyhh3z\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"5x87zuk4bwkhlskzonbxgtpkhhgi59qyqsjcdzas32p0auz3t4086z8cli4lu6c1ww6rxkuxdt11e3j2ibvosbtjeobewwvgr8q15bm3pexfjcp691cwlf9e3lulz5hj7dyl4xzy\", \"ywxm5y4xlf5k3381wnq674doqo1p6eezo6yo5aiqxolwdnlce2vductcminitgkoxzvw0seaqom3ec9ivdpr2dqs1qckik3r2dw2x11w4hc1zc83lpuppsch7s4a4iwc2j91k9agf8zdz17bt1w6tjymr3zeq\", \"hd7emsvhgnc58w2h9m27jfr4q66qwi9tworiipu0x5vg9gbgic8kmyizdq41bmfm0acmh3vfcfs9olz47r9l1oprhntsgy116jirdrwhewzfjacsjedg46r0iu2sinz8q75egsbfqer5x4k93vv3zjgknn70kops3eomxjotd4mk5tffilo5eg\", \"jyzn0k1de4f6ebtkcub86hof6cutyx3790c51dvnwwbd453\", \"6i0y6hlqijldkddprcm4vvaehhbb2fuvlghoife6byxutgl0ia0yvvkeltxdz45zi6s3c6y8jzjqdlyuzq18fmsv7t48zichr5s57nz4kur471nshh1m\", \"w72p0oc4dqcon3thgtvnzt3annizo7bv5s0n5wtnb8vbau4nj94abk6jor5dab5y7mufgzuewsktgpdv54kd9gj7t7scw2mkejcaotwrbtm20sstmpi08x3yeaqtrynjulurhir5wrlf37tdqtytartgoxn0zkcyf0xvhy3cnrhsg2fwljwini3ltzws\", \"2r8xl32z6d0zgtp0wd3s0don0h20csapn6m8ur1pyjtoc29jzmlv4fyopz7v07dinuc4il7atfnuc4dmxyl5of6nvy6q1scm2zaho32vj9lec6eysoqu5ogb\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"xjicmgis03ajafw3041l4vpp8bfdrfmyug35m8advx8e9s3c4cyydj4x9105kkiuvxthcssy7ws2rmhdpvdtplej423\", \"pyi5voo4w3mk5psh1zffzs7bq1zftzzi2oezmjw8s8nenhl86hcqyamxq0a4kw8y8eyji1z4hessrozxdc38z0f911zb9ug46blca065rwus4jpua4rizydfc1ei6pfy743nnah\", \"dw7p7d4g6gvgjxngzavcn54yxr6sb6hn1rxwogvovh3tur4lr7bvd1k4ukd5xt1id52o7188v9z4sdfvj2rp1ovxiabirmhx3c7tqgnm66fgwl9k05oplgm5nh63inepv42iblqe67nnys941cq1f\", \"rdptk38sveilwvpyp4nz\", \"sn04wo7jzbolstjdaamfa2lcdiixw0kuxzezkluoz6e3odw39buhhg6ui6xnj2ew0quds1i0jdwtqm3opdfnjouw992u92311k8xhx2fms\", \"vq4pfe10icwxx9e8qglhzgguzm2l8t7fvzjy5o4h2yf5ok69l5xoia3oy10nf5p5gxgwqo\", \"pbc85wepey8xzcgopectu4hccl9l2f17hon02oce5etvhdw2f3u91l1guywwqyvt5jhtdfjakegvjj4gip2ptrdk81r7vvx48tz9zpqrc9z7ocq12c0h9yawg943hy9s\", \"wpi7ls5fastof5dhai6yzrwauaqie3amm1sp4mazr2ob3htvjzq2li9w2jnt2ucrjgbm7as830tezc5qp6ml1dzl74m4bmntvbotk159v49zbywzbvd15wogurs9rvjmpj2q5y8\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"w7t4qlkfou6ss2c1adu54u71gvy2mfz0os3a52ipuigw0878jz45ymdd1sigk95jb5dp8ni0nartd7ojv6c77gz47kem678y71v0784d3bs9ssmkk4yhedvvi2w8qk0t55q9f1p8q8yq02vv1r2mkcfi2syzbcfdt\", \"clt3nku8wwhuirppe3ayu9hxgagl2bb5uw2i4dboj10xppakiedrknkayx1pyc24errh75wq5gku8ngovn2ram5gx\", \"1pevw6a14crnmmq29o78vt5mfgu5xnndqh4jq7si5ivhtvp92bvx32a05o167flosgvi6thq00ynn7zoeo0z0717zu1qmllscwa98e112b0ysjeeyexowkou5fz1d7zhtin0w1lyqz7e3xtwui3y8awqoznjmnfssxu\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ty7bc86afa71u21zzke4xcufc5ebpe863438s71gbq9l0mmcjfm15xmiwybb1xyl18fi5fr1not3r8l5j8h2cx0e96b9lb2h1ntywotkggz5eokygvuv\", \"yx9\", \"98toyxdtpea54tbowsc5xr5joj8voeb8pzgyunlhlq0uhgo0fz7xvh8ouktrt6u155bd1n9z3u55vzybqfx0l52slfqzs4n3\", \"ri5yxxtvj3zfeqwihlimknv20p9ebfjuajql65q2wiruxody7s9oiz88n754z6dxfx8zwuz4a8e1nsqp2yjqty1b4prczof60fruz1nhfr62nrcst2xsuxxfbr880wagwbrfg8e01117xzfqu1pdrnaa8d9atf17arpre9ue2c2e62fw7k1f4otfeeb0\", \"arjv69v34evv1cayo969jo8e\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"rj003oix0q7z4v40w4xihd33rhm94wjam1jdwabcshmha1h9aw2lwt0ul4o7hgdh0t6ju60o2jga8y78j1p870sjsq\", \"gsvt8homqg5roa2tn2rzmd2tc9pro8hbz6xdd8tmmpgj6ago0lqphes3bjs094sdivu4eyz23tnzrb5h4la0dm3nz3g8gavajfvcq7rfyda99j00uynpya9eucrwizbfppekargg7tar442sofyhxknfa7oiihorj3xstvriq09m7yb64l9ihfgqxcvo\", \"bijn7f1n24ox1chr1sr7n4b82oqt8l6oy6n2ric55kjblriop1bzbvfwg6n2qjf0kmc5d1a04yr0r7s01txzervjrof7kdqlfi16ehu1dsgixkdrteu6kioevoukxbmbtli7wd9v9jnveapdt95f7gmpcnt1xbsdg8senhrj0jaxveqwstmw1\", \"v1hdnjtzkcnner4yqlr2trmksv0xg92z4fk4aen96u5wzl1ocbcujepymli4ucfldnlyzrrz5txejmnnh9sthlt2b68nlr6v6z9h7pf7u65unls0c5u5sfxxgo51q7f8ghi9to1fjqg3anxbptvcr12fnydil8uy57\" ]\n    } ],\n    \"service\" : \"5k2xk62pmnsrg6vh0tkqe61re9lcnn8u0hukwbt2ews6ovf0358tspz31x7z6a2rrs3ogdf9081fva3wnnfzaj29z9dyeuh7tzlkegnwfd8t2b\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"mnkub94rd54wzlgdcecsn7ah5uu523osmxfisrb658ijjb1nuiiksa26xxrf98rbto8xdjxm5v7tbo6vysb1u5ulu6habqr56yj9pe52k4zqckqkxwwz4wqfk\", \"tx5x59bquo21a71tchcsm1kpbepf4arcex2xc5sfm\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ek05xk0x3ektdrtg3uk7eu1moeotsvfnbh4w3h5b6agajskm15e85ptefpck4787cxp4re3aif947f5y9yfvbhw54zpfa2kz8scgcfk55wisqnijqldhdgh3\", \"tfs88gdg3fo1bmr5v00420owvmqqd93pl3bcuofohxx07qw0l4laf1vzhpw7mmw464fc7yjwcacsvgxd130d99ap5hxf1uy7qynpaem8c5cl6tawc9ewjhmuqk5q1sfqzxs6hb8uti6450jgoey8qdjxlvpl0a59ol5v16xcrt9zc6zmzmlzp7g4jj\", \"xkuu4fgu9prvwhj1ovo7nr1t192bfhil2a5r2ough\", \"2cpor21ww84kmb923cf5kw57buwcrsoyoungw3al0aiipn45zwyn4zg9adbz97tc8d7ukp19kruwsrca83zrcovw2cllu6jqq5rx2e1oaipyjdojcyw55z2rrr9tsntuen5rzccwzfuhln235s01781e9zk8nsobsas1q\", \"k2vz77ifkiexi9otdwtdww98ol03l1588xamhxw8s\" ]\n    } ],\n    \"service\" : \"5guf8hc6j4y97yjlqc7ic9zph6\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"z5g8oa8stf0\", \"bjg1fy8nlxptrmsx5bc97ug3fdrz53bxvh6fvi\", \"tqeusyhxuokrfjjiwpbe75bsleenw4xu2eep255gecb2fte8moiov8yhou2dzbg3lqokomf0odhibhvrjmstdznpf6q79x2u12s7brgwd05e0rpwjyzvg8uqe9cfvsshjb\", \"it1iioz1ms6v8pqibft5zvjz6fybvvbw9ckvubrr65dxri5mikkz7sswvxtx39gtqcg4z7vgthx075xag9dn24cq3s75i6ssbbfo1fonksm4amiht6naceiwn4w1lzjskr6\", \"9woslt2wi30i4jyn3mkalei55ak28omdrq6d1l2z7qmt2ge55vtqgfawcwo1hapza2n6hcfantcaykd8xkmhld9l8odwgiw4qp7rn2q9s7uwh960p61dbh58r6o21950m3m8hwreeuc3hmm2olmkidw2ria71ui9gosqb5\", \"tn69ro4qfmb1kpsid1hdaihwpjcssopxr1vovkjwiz0tjw6a79xpm02tcokbfzpnlc0ysxzpmuhpljdpfhfzql9r7i7ezlkl1yotvm3kgfzb0pqpyx37wrfpppt47qvaoxdw6zzic4e2xbs7ow1lp0zgzl25n7ho9etn2lfftwuusf72ws5mio178pmhufy\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"v2y0r77c5z6evqcj7uwh9ir5mkqxari8q1cdimzkjovclgww9j8966u06sgent0o4\", \"6sn3h2uaoghbdvcr7rbpqdodojtau9vumni41xco6mcgxanjn7lgrj2out5f8\", \"uzlgbz8r8r6jb1ce41lq2oxd1jd1ya6iitwaxfkwuq4mbfre9zktnfz85o6f1e8brksyky2epze8la8h2z50yawamx7yscxkx7ctd3op3dem\", \"xlnts52ezrxaqs34q17d3yuceh35f25vfwoktjprb6gm0xpes3bzg56tsnztz82ajekrepn9pg3vvi262q8kuyyci65vuhgc36jyqtmggims6fmb6tmuhsdbtbip6ob\", \"xnvjo82ib99olwot2kf3o9kdpzye7ll4b6596wytrx1wpvgvkjrvfj6uh1dcalw2aj5xkdzlp0fgbcyzh7fotgpnpikvx0kcxfesvynj46k0nf8h00yy6vrz48sxvc9op5ku31t2wtgolxlapd95eal7f3c8hs3z9\", \"v0ensrjwgzterfbpr2ivg39h0holsy1t5dgwb6uxgzpcwerxgcoga9padev721hxnp8604x3kqkbphgzkjiv7tgnhhbd2\", \"ipw7skuw0t9ja5c1f7jx9dwrkfb5ogn60pwtmcpexqy84x8zx6qxqb5g998mjc1efovvosov4qcepb9lhlr\", \"gkjoomgqu8gpmj14v6n1rwhldrrrdgb0jo0\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"pekv2n806ed8setevz7h1h73pyu5ik5daa8b8cazen48efsw3ncjtfjcje4gmnpm7r39c9d8f4fr4megratxjcuetuc30j9jhgpwriyz6ft9efef4ufzp4x7agd8zahpnxpplxbw7njp4d7tkliogbztnz0s9t6cp\", \"l85jvw6h5hx0ihyah0dek9mgve8a2qo09kpode0zfwqrqnzlivg2odqn6us3bpyv8erd2dmw4ijbicgg8ej5c4ejjzqwrn6refo679y0efrlee17bpb7iublm15kdi4qrm78z5183ge0jql775qbaqpridi8dcwj3rgv3776gwli581mk\", \"qfrgup6hjmedllpv7djf5hu83l1o31hgq18kz76nxe1wsg444700m90mgxj80vgqxzaqynij7k62hicc6z84j97po91lexyubz5m6g9ypvu315ss5ikskgw51hon47yzv7m0vetbqs83b3en1tqxny6l4gqrnyxyfwrgax3nszsunooi9tcha8r5pv13\", \"aeu0qooir0oed2k7wkhpojw4iax2rz02p0xo2j5eynbm5j1md1jphketnmjx9djhcsrgintqdxpctja63dtv9f9striv9b32a3ylicjd06en2kjhd7s4mi8ci5eo00utu813tp4rfj6o8nwh94ews0854pbq66an6fx9cg\", \"44qerjtzw4x13yttvrbcepinddc4wdncuk21k5fwk538s319tbdu40yycajny6bzhlvsw1l2r74j76bafa73gxgwvn7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"n7x0ew1jm0sv\", \"nyhtlre55jeir9ttn1pk27edplgxakl56zlnzoamme8v8tfgndif0shk\", \"7o65wvww9vowsilx8bkqolqsxmei8wmmejfnxk9mcjdukwmxthq1w0aqy3y1ve34qcgtgn3gpmkjuxo918ss0r21kid\", \"ln1ju6bdqn5\", \"u5og7rg3fi7oy1nzzyn6e3zl7mfwc9dwb5w67mgr6g3awyl5moak91l0ujx2sp7cl22hro9ei5nqmb96onnmmfhz58vpi3k6hqtqy49ex54cm71te1t2luf1tvx4jfdky0xj9i9omwclij2\", \"55223hjqz0v5y1f1gea3k7evpgrfacsdcx9bgpm\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"3v605ncf2kz075zowr8\", \"b2bc5lw7htc6n380gtdzo1vmv2bdi3dg49wcwmqjuzgv2mnx0g24bisx1wdrt3tsk5tjgjbivq8csjhaxlvzi5h9hhl8wz6gvk12e59986t55mypn872wvdg8tvzv23ud404efhjx7ai1ux4b4jbbjy8tg84rgajnbf98\", \"vnzmjgl6cv61yysi2ynq3ss4qb6da69qg7rglpyhef1p4xfb6cwwosl76d4zq0yjrzexnsodnouiifmhdg9lvu0s6ryks22cbwrykfh93v23m2z9g\", \"tutoxm9wz6n0wwt91vb7w68voiqofvtiw6c3f53lgwl\", \"kaax6vtxakm4apg92s4cq8mos2\" ]\n    } ],\n    \"service\" : \"vofyx44d2oqlkkrtmco57a7w9pxf4oq51x59gsiqtsilsytuttv1na1o1rdrlrprpr4npoe5rmta8caij\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"hvwdfswl3gbvkyq5xk9gn7ib7u08i2t6ucovqomgvq3v9chpdgmegcuuig126bqoqnakbn9t5yuo56mfp3u5mjq6tzav7w18n75amuagjhnd52exda5ygkt9\", \"qcnt4cyibyyeqdilg4vnwl4gwegvcglo7bajhcp1jyj576lk4ayhvdnhptfcejn12k5snuyc695lrwhssje2tqvr32h7ks8gw41cub2bsg\", \"s30txzthqb8z0iut7emaqqb5nzqxjr6jf2zsjm7mwzcg6lb41ry514mxovgzhnxucpp4rska54h9ujkdalzu3umlxmb91olj6w5f98kwgyg4yg9y6d0d10rmjnk5iqgd16p6g579i8cvc5ym5em1inlztvnsv2hg6syd5q509jqv6x460ytccd\", \"mrezqgy9b0vb1etb50l8ubehjfmeo3oogaonspunm1v\", \"w8xucan7j3z3yd13q7a8sfm005rm560ie94yonfmuykbfkt7mewoj9rs3g2ha0qe2hyfj7qxi2zqv2l0fm5\" ]\n    } ],\n    \"service\" : \"9jcruw9r7zsnpabessu1val33u4oxal61lsfmnjqmmpc8iqf2pkvizfhxuka62sg22lo8fus09k39zig3rxsdwlh0gbvdj7loen6wcz6lk9h6b1ik15owv66zpe5grztkseh7nmvwqk49amo8hczijy\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a74469a9-0442-3938-aafb-14c66fce9874",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "f9cebe58-2681-323e-9bf0-9573920fb751",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/6isgkpakt11uw7cua5d5cjmogdo8hr4g5mvqs4gjb7apbv9u9133vps8hkh897fu8bgmz6ghro5vpn3f9hk26bl6wo0jy8ij3zi9ci7gr8sevm01c5pvm29mm0fvhq02qgocf84582ylk1pzgh70atfz3p8ht6aopfrpxp1vpjeksexa6:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"t0mnibogzzpf5aj2k3bmwx7ap00qfk9\",\n      \"description\" : \"Voluptatem deserunt ad et nisi. Sed quae pariatur cupiditate et esse. Blanditiis et ut quibusdam sint facilis.\",\n      \"location\" : \"5gegidl01wz3kzza3ps6q863a7q18an8jzqcd1l7dwsj0vkibyhht4g5aenck3tfx35j676y3eo0kej6xfndxd05eegmt96tnhupu7nchowo4x034k8uduo34a\",\n      \"title\" : \"Nihil fugiat quas officia sed numquam amet iusto.\"\n    },\n    \"role\" : \"ipjfimos17nxybm0snvhqce33c8ntgiq5umbpi6jyrxp100q6d2qxgd1hhac2evwnp3o54mc3urn2j5nlzq1jhfutrd48xclrafyekrr3g9rm6nisz32gl1a3dqwmp67a8y5056unw78z818sc1jotayysm40mjpkk0cnpqfjvtr\",\n    \"members\" : [ \"wjbul8hqqy15vcwqgulb8bo1nyakexdd3qiadrbi9gwyi1d0cnyan3jjkerb9jpo5bwirc574yvnxqs03tfmqxoc1b5fctnz4yef4latdr9sbe6j3mh7xq7kz5p9d3ni1823a\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"q58xu2rizvxvzfmt9v6alma2fyy8mf0zbmjm\",\n      \"description\" : \"Incidunt occaecati est occaecati quisquam nemo explicabo recusandae. Eum vel ut dolore tenetur animi. Itaque earum recusandae veritatis vel iusto deleniti. Culpa nobis eaque dolorem repellat qui.\",\n      \"location\" : \"ilsmel5acngm31h60bug7yqt5u56kqtumjfbe6ddznd6b7epym22hm1u98do48kz2w24l6vcd0pcohzd2a4y7bnpa3k2akbzv0wt4ubcl4q6xgiep3fdvupj69wqqjenqvde7so5esvq243aj0v9x2mbmg2mdrfv90570yaaer8nv\",\n      \"title\" : \"Vel quod est sit sit ea enim necessitatibus.\"\n    },\n    \"role\" : \"hina9tpf6dz0jmh27xo2z4ql743152j2iuqlcu0f8cj5ddq0416sozsfntmrq8581oha2fbnb5jugkxjrtetg39ntj5zj6vqbg\",\n    \"members\" : [ \"1d99l47t5xlqdx3cf2same9jg8xnqloj6q8616kh72wdf0mgmuvq8xxjuzh83sqa0poek7welb1xpg8895hwgex01xgr2f87pxu3hkl66t\", \"6y6dygpthaosgzzqcqv6lh1xs2id3n9l65v5r2lqvwdl5igrsy42l11xjge56kxgsw1hrup2xo5olxhq16q1dqee0604cqgugwijxt9m9xvhchcgm3n67txtlsp4f\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"1xpt9x2j0jh8hakna9rl4a7rbfa35dicnohwdsvj458infzqz2owlvlqldybom6kjzw7z4ga58v98adsbo505xg9r2sj7dwh4mpyfnvep0thb5w9iw7np6scia014cwsy5kxosxi8p36ym3ysm9rgw2k4k8l1pz4y32zj4v3c2c8jvpjim05k2k9497lbb\",\n      \"description\" : \"Quo magni totam in. Ab sit saepe sit rerum ut dignissimos in. Voluptatibus molestiae accusamus et nostrum laborum quo. Reiciendis commodi sunt officia ea ipsa qui. Tempora totam velit qui ut.\",\n      \"location\" : \"56zijb9w0dnfax\",\n      \"title\" : \"Fugit consequatur et.\"\n    },\n    \"role\" : \"96glorea2qtpquhkrenww5ymhapb0wj\",\n    \"members\" : [ \"t12hm67emtg3yygdw4uuanzcawig54vni5yr0mdxou9ck5q0c7z8sy0gkz2v8sc7nd9qm9r7r4w6l0stvolu4ty2pwobmlw69cvzl5o23iqca\", \"hvybcljw8bcd5cc6vbr8imfr36mm1e7m\", \"ebkolg3ogxhe7kjp6gkrktgbph2lp26ye9g7c7dsieby8ldwrutz48mdc93yrodm9k1amndtqqcvwqyfsbq9kt534lwcna9s21v8jmy9ukrhshisp03taobidieq82lmkfibu9qf1dsfvgcgfsqncg4cfv0u\", \"1zj460lef5svihvnuy3am1yftsa41nl8rxcdj9pxpp\" ]\n  } ],\n  \"etag\" : \"sit\",\n  \"version\" : 543731840,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"xw2o3oi85lz1vb2qva5duoluh5ivo48i0r543oju7aw23zdlqnxjqjj1x97u00im3gfx9rjfdvi9vvvrmubxjbltin7btx93ac2c2gdec783yj9s88vn84spv39o3hqyk7wtg1\", \"th4x6to3nwagrhgspqjhvuqtvgeahxevar3jqs30qedm6ld\", \"y0e671q03wo32qp63091v7dn36mezoobzr4w4t4zwlcysiern1f7bkqqb4e7szwfmzbzkwff992p5fugattnsz655m3y3u00v8olr4hqomu1mk0fys1gd0h8r4gsznivnrxnsbknz31umrl9mj17nn9kn7l1tosac3o\", \"e7yiyzhmf3yjnw5j0vlrrq\", \"gq7d3ff2gv4cuzd4x7marfztl\", \"5rx7an48543w4ydt482woxqkdex63vb5zn9pei15w4x9nek76xiikgeardnktwq5q3cx6ekp6qhp7edacd55235pts8z9znvy1bg64dsefhd8kq84lptll55kfs4ku52cve5i0oi0mhp35iekcb07wxybbb3a6sk\", \"oeuvisvyc37iodfw385j5cei2s4j6fb0djic9dzfrx7b0nxckbjbol6ghent24xn01fvu84ajgtjql9q19rnr8xocspk0485zgzh0eah9t9v4cruopp89bzob1mii2ek8moag41y6zljf2ypj32q7fvna1ftw5gflm5atc48suvedw7t804858npxgnxb312w9n\", \"95uzhqrfb9etks676rqvftzlixwhairu2cch0mblnxfr5deu875ae3gkudzijc8gy2ei7gncmp1lypr4rtqbahoxp7iaizp78ovz9\" ]\n    } ],\n    \"service\" : \"3fjboj3fibw04q40ywnsq0t7j9k6c7ma17f07c3qi1rcdkbm84vmhrb6yklrcg1128l2o6fvxl9n847no0rzs92drqnsnpm1hzw3xha2hnswhrn89ye0y3eeatpvn\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"5opyum40f92uqitnx96b4b\", \"ji9yor7r\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"v8f100s48b4w3s8yery0oniin0synyt4ege97m8cs89sqjopmal5e3sn7a82pzwkw4i8uwczhvsmkfn4ek36gmn85348841bokfobh38aregxnc68dcr540a90oqjiy6kipyq6ujaa\", \"jt0xkf97mikkzuja666jfkse5suxb0zh617fcw0j08amvbjmn0o1nxsy0zcazc4bp7jzh68sr4a7snhbd37d913y3jvh7oep00ozvdbjnhscwd742305fl\", \"uww9\", \"bd29sik05gzond3kxy5w81gwljypvncsxz66braht4qu4m2bxq809jkd\", \"n9wygjhky5chd5uh2gek1vjwqwnidvhxcu56wz0hb8buk9zli7zgb48a68qo4nm87prmpvoh7akyryc5yajlqw5931eg4m7pp8aiyjibr7b864fw1kzoxxlkuyqsi4lz8ead1qikh98q8ntix9aoh4qydrmeuxoqpgco2ikiie4p6zmrt68y16qtm9rqvhwm8k0u\", \"slcg7qaesmn17zxt3slm7hbystj0jp969b2qmzx9gqk098slc80ufgb5luyl6q0gb50uwcptavug7yhi8iqgirpghx03auw2esf9u8u\", \"u9ytaex9c88b4h0ujsgmcbpxhspqgdf1v4aq26m442eicngadjzm6crxk2qyfahn7thlsgocd9jv2kl7dsbdz98edq9i9\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"4g7v1nhtccc6cw2msxzkinzw8saard2gfvbk\", \"gph84ljcfculjmtapxdtkydb4fhx3gy908il81mt6s6daqoyr29yzo9n0max8vcwlhxsfuk17y0fydze48wv7v6v7dbewfikngpcizuunrd\", \"npfb5b25lyjec8t0s41o7qgxoozawtka0q4ndbx9ortc5w6fd6lxn\", \"bk58n79dt8chiftx7ns5ozruterfck5k78opripxmufqlclainx96c66ag6g47qpxkw63e02xpbl3pwd85o8m0au5d8mo8pj5swksqah49ky6sgfuw560yidcg1bnd22j0kfd76tt1atu4av5lxvkuf7pblll28578\", \"w9d1snyrsf5j3cqmbndn0pqucotwuj0sdei0gely0e8we402785baidiachad94uddxr2ql9lki\", \"x9q5j90lmps824ml81m2auefpxitdfqk39hrp3ggep8t02nt8rnhaoeu6qj7zt8gimezax9sktspippn7np7as5lfj2uuzbidrpcz5v3gjrjwedpwugkr8nbabvpk82cl5j\", \"qz7upoyy4sf1h4m1nycw3nmy4o1a1vpfhswvyguxn9mwgkwclwfxrsbaqtn5oad2jd6127hwmr4vwfaockhiwik22lacdimoztiqlsyp4\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"k3akhdtxo20\", \"s6wvdmzjknj441qh9f1sarny0efm8ohewuijb9l1eopmqk8ulosd9zaw0wu6mx729hoywcyou6d5dvmmbevj9lfssxkryk3sibjo7b7x3wq3fop3sxo9eqdsktyf4fqwnd88iir6a6ehq1sojzwtskk6wvgg5kjnq3lgl5f6bdvad0sye9v\", \"sgo1bteenb0sam51c\", \"z5y61op3a4ua8fxkihq7j1dfbagfswe9v1a17v8d60p9b2pmjde8wq4zp\", \"pjxvben308pqcqw8fgylkwkjv7b9isoq5jaurnqglxvkt5qk3zmm0u7tcoj58jqgasogorbzb37qwctievnlrpi1qofrp043giuc6nk6sjzg9fyugyif2dr9vch2g\", \"qr0qotmin7rz09yl1mp757k0glaohuydmq5d7cq9er38nxzb8rpdczcq2wkpxburizwcauc8bzvzq0uyympaw8tnr20qjqew7gvv4no817o7dgc2odfphz5fspyqcsnpqvs3awp0ujgk15xsshyek7klt661c055l5t2n4cl8i5at1\", \"786ou26h6sveohfz3mht2ak97c7vvtp6tphimeylrd06xq\", \"ebubxwcv8krrs87ur401tf2c4k96731c3j33qqlzi05xfq61h6i9pvsd1q6rvgrt7k0f2l0j4ln3x6bgg2i6o6xhl7q3jwikuocebd1ziv\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"qpwixyzdwjdns5m1c5jecyquo2gvlofweiji91dyozqx77iep34s7jaweer9\", \"nbz9oe8obttwwo3ly1qm38x3i3cybui0e37da225hb8xsw0u1241txbwhmd18hblinzzxcoz9awabwbyn6kkqnbtzft9m6p5rwgh2abjn7qrtvwc0hvwz51g2phnxdum9l58ojfcruck1bjco2rk4lbf050b8inyx22nc23t1dcwgyzyj962k1otrxmlj147tsv\", \"7nphz4nb455y9f1ry0emn44999hk37zjteznxd7em\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"h8ci0p3ibt00bds31ounhh1l1whqeuh2b46aa6gi9w84qekikambmjw5yih4jgj3nq9jc4n41qstmy0lqwcoyo77qwfvu62e8hfkmh46gydkbdjs35vlz4bawjwkp6d269gn3nz7h\", \"in8s6rn9n17p5pr8md7h33bsrqanus4out7iqwgrvgsn3jlfy\", \"qyckfh9tdtqaayowel5ul04dxbw3itcy2r2ohgw9eqwwxpg7fna344ap4bucadrjniqiq6mhpze5z238dszcoayj4p16b4p8ynqjx6kirn850p8niyy138v5lvzqdf9ivawia6mtgmm5k19n77drj3pxrf2vxuojpkuvmbn0r40dcjeu8dy\", \"xrp31wunpqzrcf2cyfomk\", \"2l4i1mcj6o7p23v3rienkp58qyyby89d59497jwf7g0k9k\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"u937cqyqvw6mdwlnx0ypmrzyqtw02hu6npuqz6egii69o6te4yb4swrl0zmap6ixul\", \"mc87f1ghp5g4pc0ey95qaryk7szach5zk18i70dnhpu60\", \"6wb46zt0mu2slk2xnzhjdsiz3cgc9xi6cwpp9rrch875s80mkkxj9xrk3nu280loxxnmvjdan0q90f66x2izzttg80qcimnqbyxlm4dt8gtidy4xq1udw8kbm412vnmhf2cle9fm81hajfhtifwrzc42xek8w0y9ly6xu\", \"rxd5lal7q9ysbgy19oz0737omv0cbksheopsukgj4c7omkdkp225n79rjxfym30pg144k8ovl2g6ibr52jid5w1a6cn1tk59w025niilbjlq9xg5jcrcaoq0mvav1xq1gzo38imgzy2r2fjf94dyvlt1o7a1c3wqd1g12pyk0\", \"2cbjxk5ye13o35quivl8sb96l28bf66zepghs3imlr44z96j5yy9mhzntyojoyt96qe2l5r8wlw9qmbye6j54h7isgt3ld8vs26ho3oygv3cosprgnz7hye0y4mig7v9yx8c59xew289c7onr9ffjqje2iod0rcuco7zgz2ytt4f4\", \"w2btvp7vg77doz56rkjvpc06yaa2ikwh5nrvixvozuvhab73z0pqx3iqoa0h1qw96f0gwd35pkkk486rtflp7p3tsfttzwkox496a\", \"mr8xtena9rilvwraje6qunznkff5s6kyhjl3i1reeninjrfb6sn3w4dhrlibbw6t8km22192dpoezsvpa86rrtw\" ]\n    } ],\n    \"service\" : \"3j53cb4z6n3etq8moneb94ipzuefy8wv0u47d13eyqozcxw37dbfmb\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"nz3dadh3zp9wlgh4lalzx6ccbt0oj2kmfxnwzdz4qsw4wao3opscd7wyjngv12\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"msw4y803pmoc8a7eyw2iv1jpr9rshnq008224gtm26ca23566mc13num5u4axnc029mzes8uu8shhrbdv7vdde7aq2bfj1r2cepz47fnfkv\", \"l30hc1jj3bc05rx3f545f0xxwuyojqll3vr36e1vhh06b2aozvnyvbffxymdhjeo1jxgyo0cy0tvwzumgux0cltj89xk48reywmsfi28s4n1b1xtmgbgbxqoabu6wlsv\", \"haor39vjsoble0muhf67ywnkgesbjhar01ogbf3atqejczapx2ftvqzplvpxie3fud14a9xnhqatejp79gk99h8bgs3u3m9kquv58fxfgpil74rkutpi7n8lk1w9d1gyopyxoles2ubxb2o862oeq2cflzeuprjt01js3j94ryr5rlfva\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"36i40yzet0rcp7m3keu8i2r8kiobn1ihabowi1tlsnvmef197o8sspb5xsd4qwknebvaaphhz6lvi6ncd7lkfzrnulddxjq086m88iyfc1p62zn0s3gayp3rwbl7d7h4gkvks1lir8ybwy5x54vwwm1568cobjom95kdu1gkdi16pkuezy\", \"9knu7bl1jkxc9qbk8s2dw3uyv677ctbrniuto1mto89zq8j9kktjpcohjhg4iwhdngf7v66gk8ocu2ra4l53up7dof6xoc0dshm50x9lq0r95usa8gxdzaf04fecsyy6v7w02dy17elvi2sxmdu8ckkt9ek2ksux68daa5vrlwz2qwow4zrmsimdz4frd\", \"hf07dgbs68hgzv2sri5blljdm1u0y36\", \"dnm74eadyzsttrhj9cjkz21ki3b8y1uz5h4sf9ah4dbf13avofh5rrkk7c92n1q2oxufhtlrcj\", \"fh85dc1disr2c0w5o36ejwawzxq8js5y5be0zakhlnkncehedruquijn25awpd51i24u0xghk97kp6stzz8qqajtfyd9tks0i82dtj1m0ijn2mioaqg204n6m4ozcr46tqujdmkz0hho84p\", \"1on5znehwrhjgb4pf8n81blrc2cdhynbus47li1mn9h9cevdya68lr24t8gbfc11b4kuwsooughlx4shexbkf34nowiexv9mcbr0bnfajvyksd5rh5a0ou097n2aabhd52\", \"2s7sih7y7rtdtyudk3vntrz4p\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"snv2hgfthxblz5ulkzsqhzjz829uxsqwqzf8b0vd0gunsdgjke7yty57avxma0xyfl6ktzgebod23kh3r0b2b\", \"nkvyhuebp701fqdx5ia18uo8u8zx\", \"bwb95mc4eomof2qmr8lhs29k5t8xd83poyme4vb6qbwt8kjn4rhpjcqprkldecgs5y31u0bv379y4vhevw942yiy9a4uu\", \"e199b0i2b4xjrocottg\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"oel9mod8dprotikq3k9c4qxdn85yc1zkrcy2s1hguq6y85zi6c5xpgil1w1s520dboio957s4z91vxlsclbknr\", \"p033cwmp4drj90na7n7jbiamqalj6tffg8y71n2c09l66wlmig7ckddfp9jvs7p5ss5ljncizc8k3oevhxx174b4dc3dald9mu7m8u97k172mvir79t6sfyygfqkitmbl99xp2vkws7w1c1csci83e\", \"murz8x1bxzrjabrm5gb7py0ry6xh1sjzsxb2i34k6go1a2m699j4awe\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yowphvzo5vllh4ee2lf4nl27ddrnbi4n7lx5xo339ffp9f792gd1j5h20nsaluzs7064gslvqzu0azqpfwqymov0j9v2de7witvcft4kft32cg7fejt6r0ksnk37p2uox79eimoxk22vuqi6d93b5r4rys6hnsmcrrrj8styl1m31unfaf3410r4\", \"681mkv1pyp6n8w1izsu0mc8pb00zdc3bp25zh156hedkack8qn14hookeh\", \"09zd351sk91euv8fiojzphpey2u0yqphh6ugirzfh751wovf399oc6zn075r9o9fxgjc40m480wdmx\", \"l6pmpy2qdt\", \"t4epf5h9lu0oyj9eb9mdwc1fg1zlojgrf1l39ju22eziinjz0kot4uauinm29grv0buwsmblnfcghdgreydyw3gqvhuwecp809r2le7us7z8mlrblmsbfk0a1yp4w5pvf9uq388ih8o3u06aplnspftj9wto7m88d\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ton9djy9di22jg5czhcc54o92sd7etfdfena1muxjs6fzgxtzrsy72pjr\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"f1rem2gzk6o5v7fcuk8\", \"hil0m8ujgjoww0qlpyowk93rjr2c8pf9lmn0ifpdrfyf026lf9ou4l3t5ydv9ud44u59w9nqhlsrkfvtmch29lxddofiwtim8kibdlamjsj5ndmpipvunza3plswt\" ]\n    } ],\n    \"service\" : \"0ojewwrjb1h39he1obu0imgsdu5u2peaj37zio1ewj799027rwy4it9a45uwzse4y2h86n0qll5ch8v2zyqni2z81fg12yi29w0mnmcue4gs7hpgx5qpb8o50jnm1uw9b1pwvpb48ar2p\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"bdu9s187rs8omgao4h9hc1dqn13ycf5md8b984ghcmra2inrslhxxrh4cgztrh5akkry3fy0dp1rquqhzkykzchqkr55h0tzzn5wpyluhtgfyj\", \"zmfabk0k370aavfbtg2\", \"zpcgeccf8y31jffvfe2bwbipn4jpzhpgtyx4gdnkch69sfy33rzogrgkpwl1a22h0ve6cwsqusea3yip3a2xsjgq8g4i69iuclbb5qxly27t814p5s3z4c83erhdminf9wh\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"s0kelj2b3209uyo1tmc855zc6k1rzlhl2udrkx8lcul4n9t8jvr61f3ueowaihki966ru8\", \"uoxxc9h8ri3pb9orenaj8gkvvgucftizmcxflcayvnkcy8z6xonxlcqkd3kgch3xhagyru9dv3y2gqwc54p1uwuzgij\", \"6ndrk0upio4q75wce0ehym3d2py2gpewtozf1jyuwrpagx0krul0yjhz41nwo0t7aqb2838au4f2xtij5\", \"gmmr2uybfvkxmhs5lxsurrgrzeylnwm9vslewbdg6t08m5b44apndpb6dhnmetsjho9q1scadtjt9djtag6zgmrsidgf2ucwacrybknd884bzrdswzih30udhk6ki\", \"wffhbpv8vlptj3ox3k1utzf6yt3578pk9jxiv4k581uud5lzkuduyeca875timwp2twtjte5w2hbh8goh0c93l3f\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"5kpkqkhlvstuniphjulw4twko7zu4kxpf0b221k2ia2e41bxct4vf38lk7it4\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"5i8f816yre5334fvu8v9xviw9exf3ghhm3qaj6y78fpurwie5guzv2ddpnu3q8jrpuylpqctkhoiqe5dpwnvl2c2ac0j6gj22fjf93ouk2tus9macexc0gisgylhcz73ctppsfm92e97iluzfd1nwgg108ba3knp5wh2tgq6z3e4g1wvzu\", \"ryu3\", \"yl1q7pj3524nc5uk7g5162xr\", \"7lz9frl3dy6a051sie8e0dw2zjgrlxggdnz69gw\", \"51xiizlue9x6m20d7p166a9mt50vso9p7uysbtswj53hw7yfusr0z0r1d09kpbk1ax60tkginc5cswksffmkmug66rlusa8eb8er2tfuh8wasnsakhbgjj9vvi8\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"p3h1kc6ycb9q9aiysjespl6qk8036utkbc2alr8h71ktp0x7u1xkvxjeniucjdz991khiexo8fi42cbxxwwstl8629g3dfinrv0nkzgtel2v1mo37gu1\", \"mp85v9x06yp0biy4sm9n05ehsrdtpzogl396bm\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"mbhnof50wbhlil0cffvkql4ifz6ntvi2gpt6s442lu1tg5jrmop\", \"ulflw0hweomc18rywieqgux9durp3fc4zwnyhqizjfiglp4zhbzupgnpb07klfsr8d75bsikh5ijvuwg356he7t1h4mn\", \"8mkh01fdvow6sp\", \"2gz25ot22qguja34e54bfjqk8iz55jvyluerackvthfvm8xc82xjsi1jpgaxv1g7cbtfdzxfpbjrtnbr83fn27txtnolr2flnn7g6t06a1ohb\" ]\n    } ],\n    \"service\" : \"dy6hcm7lgrltukopkakcew1q7jz74emprafekodb5mz5x3rq4d90t52lde43gxy8y1xiwevc85v1z6evrul5yt9mub4kevt8lswpq8c1d05xyfmksd4zjilgvydcikjrx30mo3ohbwtx4xya0kmhqeb780mlsrnwaps3xhgxvtnp3c3g2u2w6jtn00eg82pcjvyi53\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"s3me4e77ozttltrvi57zuta5x7hhlshchj4ewjl673qfkfe8sohwqlw02rt6odgi0hagrj71u0bjwyhpmt0omefocjsmkv2zmb7qpnp44k11j626dtoyq0hmn7yyzw3e2xgiy9netlvhytkw7jq3ggp1v6ivv7z71hseta2jqju\", \"cpyvnl0h46p4tvq2l9rh3ura506qrlbno68gqj4qf8xbnetocungkfz96w26agz33l44bnx3e6sdbh87hv\", \"ut8hxcex8osu1kccrmgli7n6cc0pa8mp9j4rk9t64as50awhmc2rycsd7i508ny\", \"660tfq415lmq\", \"4pxjthvnv5qzdaubpetly04rf\", \"y1t7ox1br0loapm2c8016h379tnpcd6ort71q6w0t5laal0yzzi0mtwmik7afn2go5u5vjo664qcypswk52zjm07ejvavbi5720cgehl8w9ari651mpfvpmobh2j\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"f39pxhb4z7594que2y7bzx6rcgkg8gcybmbn0gsc0t24ox85pmxs0nl7m6o7uqyxzsrdc7yt16tw0gwaqnzt5beinrkih\", \"b2muq\", \"sfna0b420dtcjv6fg9jihzh72xidl2iiaabhzisrlvy9prf29x16r5sh1j03sxly0kg3okzrv3i1ybn48pn3hz9xjnr3gmxlh7k8n8sjirtqyq74t9lhntq207fl2go2bc2\", \"fe1sv5ytc9z8akzkgirdkex39glx6igkfpxzofn4uf8efqn66pwckci7a6c0am5axa9q7a8ifpdw2hdcr138a85\", \"dd25fdwwyxgq6e3sft81l95l6f104kxluw5n1gya8uqzf881e4pufkcfghroiuar339mrpu97hxa78i13pp0dffw13oi56dkg3ilnjekkz667jz226v1jpgfyd9kuq2ii1fgxj0892obidgt7504jf11tradhyhrjn4wrcilkfwlx9ppukftbps2wwue5\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6rpv2o30tqp8h9kfai7nct8ne6botsht0blwzlmf3d4von9hmbgbdtsmoxcdt0wpvvgl6ps5o1zgmiqvtuddbxq89jqqux4a3z1h\", \"v93jg1crmvd7nvndlzseblfgg1gjv7axc5qffqssrh04x5vvaf1initzh8805l25udy7pzwxv5y7ngh6noun1m90p2coqbic6i8iwit3eauaza4fvxay95n8zzyzyh9n4rgizqetv\", \"eq62es1brbs5dfict80mnsxof3wbshzd9fy5de2o21d9m6vgaohyx4ilgez0dghrprul2h5dj73nbyqgi1hyysnj281xmb732abmdip2uoq3mtsh2v8pkqfworflonadh71gj4uzom4adfc61qe3yt2lfs5n8z\", \"r9v2cgvo8mt1ywh53jx2ncq3c0pcs3y51jhes62kosnptr4khqksehffuv0fhie06wyxpu0tvmnuy26wo5yx5fehvofmv6g60m9zmu0xt61bll1tskeyapedpedewhcfurgit0\", \"4bil2ltulj4m5dax071450e9s8oremfa3d0cpa7vjucecfu0uh6c83c7w8dgx4eu5g017l9r9tbe11\", \"1c2sx2yrl7uiplg46fpnglf9qhfryxcfmqoc9ic0w6oar5aegpzm8zkqyraoqft7yl3zrwxqye1lu2axf0556f1mfrtyxvj643hrx1osbrsfl9elyuvg46e0eieaxce9hs8e5cx3sxigsoxo994zwis5usfmweakwq9v\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"chdoanlvegpb0wxeq38789blf1irwxdzasd1ojld2ufeocsp3qthfgl4opwvfs1ly54ee3q39tm5cvye2271nk6m1n5vx6uyypee3xtiybu91badw7r3xafnar81ydvj70gvj3ld41xi\", \"y2qo9w8rrvlt20bf81z5eo3r71w727sprc5owoimlpsmzthedndu2zthy9tnoqjqdvur27mgi88vzmmofgmwasfcyl2e4zfbq00tfrz02m3sj0e1k5m4sa5u6moct475t6rcmy299nxvi0k21d9iub78kz6cvfctmiwmrp4\", \"p9hwwb70b1mni7y9sj1epxwl3k85vua6esyemftczzmhql16hcsuddhx19cn0pyi6gwn88zbfq4foqkrucpnbghd0ltthkdwqpndoahpbg1v88gbkzqwyv2h2l69mnjbwijdmyy\", \"q8oss7i5nqdqy49h6rfo5mc2ztsckzapkrkj55fdqbz6d0d4zer3tauwvswj1bch6j1zgqm0\", \"mzu7n2qt9xg9mpzg1lz9sa6u1yvla82wlvjnb7xhbfr1w97aw8z7dgy5jnbojq44qeax5t9iuowv1aky5g2ga93azevu8uilo8vu\", \"camwp8ccidaij1om3pgkzrbg8dtp0lmhy4zp52db03pkvqx0hefh6pcgw58kr7\", \"qt4wzt0jmtlmkprl5e27l2agmlnw9j0a4119o7idozbai7\", \"ribca99bn44hmegm9ke060gjsqpdeimlqa25qzhtarapyibfpjagfvq470y4mjy2xw0qh7mna5g9pmcgftaqci275qtqmulx7v4qqq8grxkxowr9o7v5ux5reuke8a8emlacavytkhkhuan3el8pckflh\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"9z648wjl4gm71m7tad5leo0aj6iydakkbr0xi9vwvo94o967d6hwpmc9nrnrdpycbgakq5849mtkasiymbjgfpfnf3b3t998zpdu78e1wl6n2bgg79s9w11t7njwannx5jsvumloa6x71xncfra6xd2lr5y2kf59kg7eve90ukdijcdm5ajwmzqxvkc3e2j\", \"tg872hqf9jqxh370dy1qmejor4ti0l8wqbe3cij7fv72w73qgzax5b0yvgkjvesy37318cszyuyo1oj5ljfuzyhp3t91eisf59dstlfjnypi09eth6wrwzu3qjnjehjbgzmskyobexrxla424xdg05o6ucthe7q\", \"4a1sefmr1xzk85w\", \"q5ux56agpz0ql6ac2afkku2v66ou3h0vh8skeii2i59zgta6jpzps24dfo128o3ad4bvt3xx40v22eeyafmz5xqu32tpmw585p63sh7972mqoq6k70zpy8tqu9075sg24ra2xtclnmv4\", \"79u8uk1bghi6ffi042fanf4tf6b2m0hdyel1gdhngxkerml0t260fdno0pjdgb79egydfhgls2iu0lsnsoqv8wbav5wmdfdqpbx4tcupou822po0kpzvgl18mlculbko3bke3702l3mux44z68wgivw12hpjco2nx4x7ax\", \"bwof1a3zy0zd75987r2sr8et3fxzv64q1sin5fnsrsjio3k0uq2r2u8sax4m1v53fghe5np0o1l8vkwjg0p0cpat7bihi2e71gpbdy0vqcl3fqn7b87w04fv735quucou5iju3xgtj\", \"sqdhlxc1xqp2yw0lt4qvoypti9lhz3xya8ipq6j65hf6gpnrsl4uhk5pyr6h4xlr8be4xlqrijgnu5h1plm6rmg81iobbx1we9762yujo3wr7lwg1g0zx8mnrtjvfdxysgz7lqz3\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7eshji4wd112ik7qtfczh27yaan25sahny3pr8vbkvyzn6e63586m3bsrj14af2qcm8waoqxx894mzcycocivwgrpa4x4bck3dg75b310fsmofj0hxdh3h2dvdwifkc82c\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"6hxapscqcyf35kmplljg2ij5q7472n4mnxd2iegnkwdutm4z6lm938rwzvg6bvjm123hh1hqbsk2ktx9o9c4x8fk1wlre16nrppgr7tcpmiqgw0ee0l1whrsctd7inrxyl6zb1y3f6er2wae3mlfr5e8peuuw7gwrinyir5xbi5\", \"9x72wxvuofg\", \"nrddcm6u6j9kdmcxxy7j0xawyeeyh11jzuuzwbvh9s7tjxg06fxn1zmur4d750xnmj280snvsggiapc2cc4ztzfvubh18xj\", \"qm4v\", \"jqvq8gqdu2vp845i2ew5ernnrfm0nmwpu6cl35y6sbygqm8canevmavq9y9amjzhcx9zfqgcy99vfqm0vmumfnj3s86qmry0ddw5pgb\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"a2ekaw6er13wqts3e6\", \"iemtgjcr0ascq2nx9i226o0orijnzq1ujvls1e7nkr61ts97x8jrpi0e3homuobylfbgl170mtsvsz6bncweg2xffmocv5fq1m8g\", \"2oc9wdcusg3yh0xuxhgg2c3dp0wkt2y3dqqs19shz8bpor9rtf85vxrq3jx\", \"0znfixyp6tlnz1orbnb4j2s6dpml8acx155r9g0ecjlp413pel4bzraervkr1dqunkm208hqrbpnmr1atumexoxz6y02lwu5jszrbzn5ldqk152z3zua29dx99nf0x22kqrf13gri6olhpv90n4yw6oocgcxui7pmhsdcxjwlhmiqs6ihi0bc2r8k8\" ]\n    } ],\n    \"service\" : \"zfojr2bgp1tg9alj13cpkmxdgjpplo0bog46nz1imzftn8dljsorupoidppiflmh5nbvk2e2x72y7gjvtid1mczcrovosym0gkq34u12bp92j459myngf7mbuj8kxx66hhlm8gqx3ehq8elrnaknj5yb8ak5ookyvo8bgw5n5ll9qrpyv553ck2vrirzigjwep27od\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9hzfluiw6hyy7ax536otffwx0uls5hurudglxzwbu0xxiny7srql5ht12a72cw5qgn3dxcq9n2ay2vw34nr9swdoc7d4q7jtrfr5ti0kj3hyjfnfzrnwdbioux3af4sp0190sn5xlzv4sb35igz68jtv1dq523ze5h833nzwhq4oiq3usw\", \"76clhnzx76u3ec\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"dfgac4vw2wbglrdbsewwlnuwgt1lvk8xejz7qe6cvzbj8xqc87vzzjq1yim40o93\", \"07cv3pzkntskxrg08v3awtfn7twlfdhcgnvlgqrtl0yc5gq1u9gad7z29ofv68dfoejryubnnbr51mloouhxev8c5tu97edzjcdvf68ie734jsqpsbderg4t8l3ugujm1q8z2y06tzppo4jvm6d5wfm19egru9pd27ebmx\", \"a3fcmv55mcz41aiytkju10tcj2adhh6j0q95nunbqcvkaid7qu1sdh087fu1e475tbw5si9nvrshy25ka4p44k6lb850kf7m4amuyxbdqt2n74us893r3hmimrja21avers82i6efxseqgktsfi70loctjfw83d\", \"961hm6mqkfwzkhoavxw4ma7gsh5g16yuy2qglptlu50kx2on4uwpp9jhtdgnvbeawmi44pbdwxa6qp831hi96z0i40iq5gvjt5ndkpw7gptvldoxamispum2vq6u2serz8rj4mn77ttep6ninhxyvpounrv567qpkncyxn\", \"5p3gs581q94g37duanqlaia2ac0oxuug2v7ejyjs65\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"n0kcuc9qza25p40dzn6arpk2zyjg3z8g58spd5ae94h9yhejuied5ykn2utb6gh5xszfqcvwanrl9qw8fz2tqkawl4lyi1h7yjpg9pqotqtzbtp81aakj9k99qeb30q3km5ti0p8ymjtkk3slaz5dbkn\", \"pqbo9pv8przal76rs1t9fcb6cwwdf5n7bcnz6so3i43tq48v2bdkjtwk21e22aagqys3lcri6kv\", \"rbz0khwhzushekof7dkierbnhero46kjb7ud3am24lyzei5o8450uk56b0r256vpl06p079xdii6mp1gtb28aybu6ykuwtuzquk5cw2qwutp9xt\", \"fo050v2i9u8tmq1gs7p908m6vfd10a8zn09ug5zxv54gnmgw5xd0kioj3w06k2ajc5hzocs9zxu06nuzxtbhqmrwp31fjqp3cdm21umneyt22e79xqgmv17c3mysxl2bahj96qk6tv53r6tpth6hu50bmj3pu7d\", \"596906iw89bns6av14cgdzlegv4wwq70ku1g40fn3h9tajkh1thdg5vwcjeso3g7zkhs8cse4vc8wfl9b6tk0bjl34fnhx2t6byklgner39d2cav8trit0ntxs81ko3otbesmnl7yh7av9v33f3mml0kr54f0f\" ]\n    } ],\n    \"service\" : \"b20c7gjk7lyrq01njd0fplvm725aqb3m0ipvzag6r3zx1w39xslfiigyac1w108bc0csz3ermpn11l0yvjr325dw2naw8a19xidsk8uiw369vn7rdoxvl58vb1o9usym8mh5xl2dph\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9cebe58-2681-323e-9bf0-9573920fb751",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "3a57efa9-af37-37b7-bad4-f5d12201e91a",
    "name" : "Creates a new Connectivity Test. After you create a test, the reachability analy...",
    "request" : {
      "urlPath" : "/v1beta1/5fbg5mg6xss6kda7u452lwfesx9zrvmqyqh1b35bns96d85j0tk0a5fx5zusdnq2h33k85dscvbx6hbqwl91pdu9z6h2zrbp9kk161qw03l4/connectivityTests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Farah McClure\",\n  \"error\" : {\n    \"code\" : 258686780,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Est est placeat. Odit quaerat minima. Laboriosam facere est est sed aliquid sint.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a57efa9-af37-37b7-bad4-f5d12201e91a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "e17fa3c3-e39c-3648-a729-59c0a3f2d70f",
    "name" : "Lists all Connectivity Tests owned by a project.",
    "request" : {
      "urlPath" : "/v1beta1/1b7i5vyge5kmrwmxrlyx3sp5q0l7k4a41b3xqs4b919a1u6mmrlvancvybkkcr191jpv0inl/connectivityTests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"wwtl8sv\", \"cabmlky4o1qc8idz4o0izju4jfs0lu84vropmmfjvg4cffqka8wwtqmtandlq5emefwfa55r1rqrr\", \"7uw1nzng937f03r77pjoku3xboqil1ha6h2ga2sq5z9yn6kdbjiqo7vz92tat1sbbvbilfs5djz5e0z6rjp8xo\", \"z56crnormtvana4neiehgo98tn2yrcpdpw64y9gew3c2qt2tu6vyv2ck7e6fl7jlfzps3fawcg038d31knteswqzy7dkhszp7sv4c7a7aqd4jti2mpw8egw7shhoc4r4b4kopvvjubfjntgwakd\", \"pmb3yzf1wp7e8qmov37z9orthk3x9rlcmd7hlagel5a11355pn6apbw36ywpaxbyvtul0u2iri2qj6e8iyqsrpwkvn7dl6ocgwvm9nczz0h38v5j17e5xm6yjvzqqzisaobxt5o3ks3\", \"sfy47dql06c5reknvcy2guu0y85wejhc09fku9anxcj7hvs025u7u6wgbid3qzegap2ykcqiju9f84lwsixalmodz8\", \"wx70vcnjzycm0d3hwvj8suxg1bnx8nezj3fv6iyiyxryxvnocizxbeskpx26g5260ns8l1jtlzb0jt9c45l3jwyj4kk7kqnlp9pf4rodov9i5d5u2v68ep74tvi\", \"c68el2uoelu9ufk6inoizyusfqr8qrjrxfqwg3fj69fpax37tdh03saevgedvqbrxb3ssyatzhdwxf2b5rk6cmq8evnnu0l8yld1f9n1lkg63poqbelwt6ufjvkqlnhimu6lryn\" ],\n  \"nextPageToken\" : \"2thda3\",\n  \"resources\" : [ {\n    \"probingDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"63m9btwk6698l4k84phemwnqkvd2x3gf5lmqyteeg8hdtgpea3djigi1ms9uih319t7k2atmc9utn9b9tbrvx419lv5u4jeuel97hxxnqqqzt24tanpz478z07x2jei1trc029uv3sv66s8d08h1z5ljkeh6n2mv6wze9a5rbp6t6t96\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"66wo6sgroh6ichqi9n401gccxe616u6wbnzwz23pqj1usi6hir4pprpjdjsacw79cuybonb6mbspkdl4d5unkm6r60tk1u5kfiwdol6awyz42fjo57\",\n        \"destinationPort\" : 882563919,\n        \"protocol\" : \"xitmyjnhfy6dosgzv85v355b9dokkp6pa3i89gdxoah81swv52oycgkcrhxvx64ztnfkuevbtq0w7n5l7toh77q0krccl4d7jj4o7i\",\n        \"sourcePort\" : 1144866077,\n        \"sourceIp\" : \"cow27w2heztpevg1lyqfsrjmjenwsdlamdt5u806xzqpa02lrbugjndm3k20dsgw2v40r8s17xp19yjh2fxlrgw2jvmbn6kvg65uz053ou6nclzk4rvhfsu2dnegnbk3o3msxbx6op5h6ddmr5x6s1kqgru0lf6opppy67asjm7bceqstk652kpup\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/498972\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/302994\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/097984\"\n      },\n      \"successfulProbeCount\" : 1141127641,\n      \"abortCause\" : \"PERMISSION_DENIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-12-04T13:14:13.769509Z\",\n      \"error\" : {\n        \"code\" : 1827869032,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Qui natus incidunt at voluptas consequatur dolores. Quis dolores culpa numquam rerum eius provident. Sit sit laborum ipsum qui vel officiis vel. Enim facere aut incidunt et. Laboriosam ut accusamus do\"\n      },\n      \"sentProbeCount\" : 418510955\n    },\n    \"relatedProjects\" : [ \"1vqbw6vw6jaqy1szlf9u8194k8tbitaubkzbzggubrvzhnmlzbbb71owdqk3ph0o9s3hf8jtgjdjgl40ugjsl61ndehbfmgdv3m5kins782q6ev8orzwtmgvsg9pl3nxp3prpeizr5hfldfhkgxc435mp12rmq9colvebk9uoa7b5sgn1d4o\" ],\n    \"protocol\" : \"npb0xtv1t8fhlda5llmmd40rwxcrgt3mgmyfrlwad5x3xyboh77eqw0vz5rdksa70q0e4pcehxezq9r3etcxwjcls3zrz4cy4gd6h7eq9tjk0yim14h70cmbwm99krrfmg7nu9n\",\n    \"createTime\" : \"2022-11-05T15:23:13.76965Z\",\n    \"displayName\" : \"Miss Owen Heller\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/999442\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/190442\"\n      },\n      \"instance\" : \"jp2uq9nn207f31367lm343f8xsvlueuwvlrp0bo3md\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/284039\"\n      },\n      \"cloudSqlInstance\" : \"dk0o2ye11nldj1vv47jy\",\n      \"port\" : 1466649977,\n      \"ipAddress\" : \"thi1pau1atyjrw72qy0kgyzv1hcifpvw2g6bf81im8nqetqnnobbg3fgfr2bjw3el9o53kx\",\n      \"gkeMasterCluster\" : \"uookbezgd853bx32f7iffv9nz1\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"n977\",\n      \"network\" : \"4l163fcn3efubanzs1sozj3cq47gqiinxtskojgb7ce1w3s1yp1j4zw4qy3140nhy20ewtig83j95yetqhc10363dv65cifvfhjw3o8aawte5s069ztpya4h0lwc6x8t44fnoh1lpzcglh9yakh\"\n    },\n    \"name\" : \"Jared Welch Sr.\",\n    \"description\" : \"Debitis rerum at qui. Sed et odio dolores. Et explicabo sint sunt.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"RESULT_UNSPECIFIED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-11-08T16:33:13.770389Z\",\n      \"error\" : {\n        \"code\" : 189336315,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Pariatur quis sit tenetur aperiam et fugiat inventore. Atque ad voluptatum perspiciatis qui. Cupiditate temporibus nulla.\"\n      }\n    },\n    \"updateTime\" : \"2022-06-22T13:17:13.770484Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/162891\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/545512\"\n      },\n      \"instance\" : \"fvl9mndn91k6xufsfkzo5mtiq4u3ot1gjyqg8krhl9ikwz6q7eblz1tretdxv6ybszbc6x6y23astd6se7t4nq3slr2fijj4eej0azht0hehz9op09lejd0bk1ysdru30b8s3dsvkxbn0i364ejpyvium5ppwu9njuwcpfbo1\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/522641\"\n      },\n      \"cloudSqlInstance\" : \"uafhvatv4ly08xnlf0qzxacb1i9hmo260qjjrepiu9o08udkrdt8j61qk97y0p3nqqnbcopltm2m1v0w1kp8zvgq342ra727k1thd04k8n47cy0pwgfoendp1pkh39g6ecfsbqfz9oazoxpn2eanwff9y8k0sokcwedl5eimzyhyi6unqtbz430wy\",\n      \"port\" : 1159486958,\n      \"ipAddress\" : \"s6k4zwgnhdqxqqfiz7isyzw9a43qcsdog2ti5jspo5e04m0yspdnijpg3xij82rfbgw9giz5z1xs7lk2a0dfzyvzmo2se7z9tcd55y9syo3iayw6sukjyltb2g7cr08ddu4h78tvmuciepw3wm0tjqhhh5y8zx3v1z6yz6sg1ktzqhbv1x5\",\n      \"gkeMasterCluster\" : \"btyo5n4bkrekq4artm2lj64oaq4jnae7zks26i\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"r776\",\n      \"network\" : \"qk8ne4kzp8s0ao8gb0mehccf60dcdazoikrwla8150t2qttn8sgp7v8cc3n3ir0btp2z400l67oysyz4evtl01ijga8yh6mesky4j5q0a88uatklq31gd48gmrljv6nw11qjtbhwcces5u3\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNREACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"dt5bmxvijzzzc478256a6qguk82tpngiik7uim68akwv74lrognorlnbjl141yxhjp4o11f4bfaawv2vmrpv2ob0j7z139vj2utlktegihl5592nb0h3mffnfpwrk2iunx54vbgqkt98fd5vc9jvhubqk4fn8zefhlh6e8no47la6wjzgy2zl97b9a98n\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"ginm9xtpjevu7gdqs0yz9rxqv60eh4mq0n2vafetvc6lynxb2sfaor2daq29abfd9jppcr4dpi4pvw46fh64vvmexnsslvxjoehtdjzs6g3cg7lpojw126pwwyx71jm0kc7hfmjilu3doh49p21yx17csgqydf4k2ts6ghp5\",\n        \"destinationPort\" : 2058148541,\n        \"protocol\" : \"6fubpw58wtx98zxi9nru50pmk1dxf3af8qb7s5wq0zj2jecc00ybnp6eq845i8tbhi6w2qeq8c7atq0vj8ja2buctip5trqx8biu3is2vmnjb2len2ugy2ww1c9prwjml051bhmuq9njh6rdvral36k4qizcnsb18qj96315j2wgrie9rbwdorai10n889m7mwhqzgbz\",\n        \"sourcePort\" : 1542303658,\n        \"sourceIp\" : \"dn7ndt6qccjrx52bos8g54cbgjkvkmb5n9h9oxyngszrpr66d7xhrhud17yebpgm3u517tzafrb14d416zm2wcfncqhqtzt8e240unt092yjrf9wngv304ri3jyn0visr1tlfect36lspazeomlhq2yqg6s5il\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/527723\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/565456\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/830183\"\n      },\n      \"successfulProbeCount\" : 1134486239,\n      \"abortCause\" : \"NO_SOURCE_LOCATION\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { } ]\n      },\n      \"verifyTime\" : \"2022-09-27T14:56:13.771227Z\",\n      \"error\" : {\n        \"code\" : 852240046,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quaerat enim magni. Officia harum nemo sequi. Odit fugit omnis magni est suscipit cumque animi.\"\n      },\n      \"sentProbeCount\" : 1540149004\n    },\n    \"relatedProjects\" : [ \"lc1uf34d3f786x4u9f0fn34zvd31z3nw9o3xcwrc3l4qu96wqomxo18q2mz6qcly0drb786zbjfjuw124ax8mczyw8klzhbmrguk81l9062o1aixdvwssikzxbeee540eke0g6xvm9\", \"77gu5e3q5oi3beb77n2hqdeuf2xpig0i\", \"sri654izfpv7yad8cunwzdqsoszidaci8luo0p07m08i4bzgqxnya\", \"d5lvxq2h0h1d8jf8powry9cn0crj2dtdmv7wetluivxvv\", \"yr2svsqnsrxgo6nepfyz5vxfu7cd5gqw6tnc4ibp10qp5vlpspv4msg8sszn01sfeg1g68medqj25hush9q3axsrwwcs1totdihaejj7u9wj715p3bp7jkfvqo73i50pj9lx3zyzr5iggmbmybvw6d2\", \"49oynbspqd27n79fnpyhkswa7n2knqhw26oxv96ned4lt8eqzmwmfe2h70sku46vhc44i0mjfbn1jfo\" ],\n    \"protocol\" : \"jz14sp49fi3j2ntutnwlokdndyp8ttija8i13fq4f9b1sjlicq4b0kvtpa\",\n    \"createTime\" : \"2022-08-29T13:46:13.771375Z\",\n    \"displayName\" : \"Miss Hermila Hamill\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/369364\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/821844\"\n      },\n      \"instance\" : \"loaz7z3su9s23fvb6sq4brbgwk81j6wrs00smhgp2bafgdt2qh73dy94bd17b734qnh7b64ijlbn3ejm4gufpp1jkplye5hwtuqsfd1z\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/200073\"\n      },\n      \"cloudSqlInstance\" : \"a2ot14ins1gtfvyn55zj0rzszgk0fp41r414e8xyord92ic7qkwy537t4stuzzwpmsf46p49yori7zvgzfz4vmjflzqsvhobibd\",\n      \"port\" : 1947420110,\n      \"ipAddress\" : \"86jindqj84qgpw4tn59g84whzyaarotf5j9smcd6usf4cd2u60k9fzgr05a2\",\n      \"gkeMasterCluster\" : \"xv68pwqdg00d2onsq2hyt4iaieyuqqasdgvs\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"k1jc\",\n      \"network\" : \"luaex1cxhhvlmtqdlx7os9f30xjxlhjm91vvn628q5iq2ovcqzsdoo7p8gaakamypxh6qdp9y3f3sgy5r0v0ski6oi1obcld3hjgbokb7m0813qgmkdij5sq43moupg9txlpxx5\"\n    },\n    \"name\" : \"Mrs. Sergio Tillman\",\n    \"description\" : \"Omnis earum autem deserunt sit. Voluptatem distinctio laboriosam et et. Deleniti quasi et vel porro soluta repellendus ut.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-05-05T13:34:13.772029Z\",\n      \"error\" : {\n        \"code\" : 2039583226,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Dolores et voluptatem. Et est et harum. Doloribus laboriosam atque culpa eveniet. Qui molestiae numquam magni delectus architecto.\"\n      }\n    },\n    \"updateTime\" : \"2022-10-20T16:11:13.772114Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/996772\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/695941\"\n      },\n      \"instance\" : \"468qtv8m6c9l1e6f7rne09p4awbu5cgdfx70jqlwo6ps0irga04c251nn5737gioztu4lgol12urssjeo9qfl8l3ku5pnlxt0zxzsuilgcblitrfaoizvnlkm7b0qza4fdvoefi5lx6vwh19jfbjuma74onxgevu0dx84ek3hw8cb7r\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/454068\"\n      },\n      \"cloudSqlInstance\" : \"qv1srpyzmug78fpc3of2a88r47ocikfrnenoyiu0wuowb8p3qryqeyv8r08pxnhjid0c9qdrcs2yzeto6nw4harubj0yc9wmf8eal7ywsqdfd24zp5zqjxjqjprkuzg22mottkfajtd5se311k9faa03\",\n      \"port\" : 2007865316,\n      \"ipAddress\" : \"0z2peaaychzg9o2xpw3b8xm0xvr0kofv9dkg1cq5ufdt2f7fx8zh0tvt6s2rahya0bimtoev75b3uqhkoe7kb5ycksju9u0mghis89cbe8gasvbsalzaaa5ylfi34tzs2jwp8ipdb3tu2o8k\",\n      \"gkeMasterCluster\" : \"od9gfl31hdyf04nac6b7l87ljpxbfxrts2sitmk3lwqlpe14u4ubxomhnx0nts36od1senb6zil4w1eva27h9utsf7xutk3a57aur67xqx9zi1ehh5ddjpopz3sgvfjlr0i53u198jts9scz7p43i9udvl51sks4u0ljns99jd\",\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"1c58\",\n      \"network\" : \"nwp4bmn3b29yit\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNREACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"hzsfjklmdpl29w8o8w1t7a2oqxuu36x237hhh2e73rlkoguesxgybgyeuy7rtcrc2t9rf5yryo9kattr6a3i2180mc3entx79uuyjtjhv45w98et3zhw78xs9upp9iec\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"yp6x39plxw93y0g\",\n        \"destinationPort\" : 1547262243,\n        \"protocol\" : \"bl81c2u8ky0z3pumioc53ln4fbjbtm5wh4rd6epf66nmcd9wgaqocdmjvvn1ovzaca9x345nlfy5adzvdxtdjn9wuxtmtfasbzu90u8b\",\n        \"sourcePort\" : 687710912,\n        \"sourceIp\" : \"0txpwef9g9vxwmfg73utjybhbtajvdmod9ffr9zay1svqzsnj1mcpadc39f5ffk\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/350052\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/241196\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/772333\"\n      },\n      \"successfulProbeCount\" : 98217942,\n      \"abortCause\" : \"PROBING_ABORT_CAUSE_UNSPECIFIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-12-25T13:11:13.772826Z\",\n      \"error\" : {\n        \"code\" : 1872692273,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ipsa incidunt quia sunt commodi deleniti beatae quod. Ipsam consequuntur dolor. Hic dolorem cumque modi. Ut aut error qui. Nesciunt minus odio iste.\"\n      },\n      \"sentProbeCount\" : 1912646957\n    },\n    \"relatedProjects\" : [ \"du284jhxgoop19pfhs2hn40n7zsf9swx43hpjoahkigk1wuit38x7fpppc2m4h6qw0bykqv1dalg9dieq450zp72ntvwhfqjtjb81unfgdjegpjtu48ugrhtva4yjqkwh2mygzt5zlz16n7x4sl5i1dbbb8nvx8o5fiwpxb807cp1frz8m4bkpxwtgr3\", \"98vghjxty1kydkf7gupybo9quhv80qj6a8ltgqdl9td0ifqho6sl3uzj2270cx6i0iquy9i1nl68\", \"vmwdj5diqohalc47kl1byc4r8g33toy9dwqyod8sv8qr2bpz9vdq1is81kv6rentxbmhlqheaekbo1uoos3m9wb2f1cofktwpjjmmywm3qaiv9ah\", \"q67tzri0f6ppa46ee29kiv4y8hb2jsx7qpfqxj0pxtejje7hyfprd36zht3738s2kfs4e1nzial3w596pn46mchz7yv0r9mmera8n1pzhrreuv1\" ],\n    \"protocol\" : \"fx58aofz4tvsvg36l9g8f3ixofoor42a1hjz5e12hj\",\n    \"createTime\" : \"2023-03-03T15:47:13.772963Z\",\n    \"displayName\" : \"Fatima Rempel\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/876930\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/338641\"\n      },\n      \"instance\" : \"hzyh2t56ym62n5je4n13mphnv6txlejhg1pngrgthuso0zoonbv7adubv4khbzdr9pjbv7killlr80708vartmqe3851dhzluqkv3paok2v8ecdylnpd\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/262963\"\n      },\n      \"cloudSqlInstance\" : \"1q13z34hpokmutxmlz2nqzc0m2lowvpmgipk8b6kyn2jw6y1rfrqr8rpunkqkv912n1tu6sz2nwunzxpuhqkpak3f8v39l3beock0ghdtdnnhck9c3zcge321sz91e5no3j49hzzck362y9\",\n      \"port\" : 372621863,\n      \"ipAddress\" : \"ab0tug1dwnyxij4bhxw3yrakgnjdtyl7wea1bz2x3mn6ywm6f4x888zr\",\n      \"gkeMasterCluster\" : \"k03iraswru009nslkmsoujha1wpzajwtcax71y11274xgbvk80fzzdh2mptmblcfsk1lemp9yq9o3e\",\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"zad5\",\n      \"network\" : \"maco973ymvkkq93dgfbf559xmmj7vf37g07drala9ij\"\n    },\n    \"name\" : \"Charles Block\",\n    \"description\" : \"Laudantium distinctio ab id dolores nemo. Dolor et officiis eos nihil. Recusandae dicta quo facere.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"UNREACHABLE\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      } ],\n      \"verifyTime\" : \"2022-08-04T13:08:13.773505Z\",\n      \"error\" : {\n        \"code\" : 1568716779,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Aut rerum voluptatibus facere dolorum et. A minima qui omnis accusamus pariatur. Placeat magnam non. Repellendus repellat cupiditate voluptatum a. Animi animi modi illum facilis quidem velit.\"\n      }\n    },\n    \"updateTime\" : \"2022-04-14T13:22:13.773595Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/904542\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/453103\"\n      },\n      \"instance\" : \"0q4e5xsucazrrih1qlxse41mh06vxj3o1s55j3qlxn41a7dpk44m4da9x239ez1cs98kifbpdq2vujx9m7ae8h0lz1gt8hkuy4betub8k97upzln0nrjb738hphnpoqsexi02zyzf0dtibqyre7i6a0dpypwi5e55kblvw\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/375798\"\n      },\n      \"cloudSqlInstance\" : \"29bxiksussf7ikittlwe8o578xmlx93v3nrsoaif5f7rk9pio0pq595wc8bxr81a6klft9ro6vuszsowp3phsub6vdpkoohn5ftau0a83lc7n13\",\n      \"port\" : 744273096,\n      \"ipAddress\" : \"bxexy24u8i2yxvkhxqtxr71otjb0r9wayuy85isem0zora6flb39na\",\n      \"gkeMasterCluster\" : \"p4gjs71mqxls5rzoqiyli5ibtr4l07ckf95u852nfyd93cx223\",\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"2uhl\",\n      \"network\" : \"lbq1r0i13g0olx21rqpmubttfs3t4hzk14ut5rg7ykz4qge0vslqm5v1zygxdn0mq9fey0myly0d3hpp5p405ilcjt21rh7zabg3eavteevkveps5xtpqapyy7iz78\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"lv5b0jmfuby830khrl6jd5bsyun18v0v5yrdhpzrx8yq6i57q93r6vxt9o1n5jhvgps86t0y21\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"d7h74utqhmk3ms3auxuqtb3ookwu1gb7svip9wwe1wejsy9iuv5gr7k9u49tpz63qxh7lemht2cljejn3ilpm91r9xzf7db9ih6jwu3vq3w1i00k9t9wvjze7jn9oci62w2foivsyv8aqghx7saaa31ur7k30abhldkj64y8a3rh6lyjfke2arxg8c3s6o\",\n        \"destinationPort\" : 206347292,\n        \"protocol\" : \"gvp3h92a7hxknae2xhdi7xx2k2embjbqi0py2fyd26ptwlz5wu1j93pp199yxz6yeqbiqm9qnjj5z3x3e7hr0iygfx7q5dg6enyzytxk23c3i9f7y9siqxd78u7zs0d7wpvpia8w8q\",\n        \"sourcePort\" : 1379818829,\n        \"sourceIp\" : \"3g7e2q94h0micvqxipokl61fna0n2znxphgv0wabnr7ycgqsl066ht9p6lfv83jc7294yqyblk169grhiity2aad8tkphu9o817rljm1nrafftgx0epni4dukkz5eq6lo01q30lpyw372rdjcm9xw4da30zsp2ly4154qkrv2\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/509976\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/880570\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/133351\"\n      },\n      \"successfulProbeCount\" : 713524920,\n      \"abortCause\" : \"PROBING_ABORT_CAUSE_UNSPECIFIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2023-03-09T15:01:13.774394Z\",\n      \"error\" : {\n        \"code\" : 1398082087,\n        \"details\" : [ { } ],\n        \"message\" : \"Explicabo nemo voluptatem sit. Eum sint non sequi. Vero expedita quia. Mollitia cumque enim pariatur dolorem voluptas voluptas. Et eos quia dolorem veniam non.\"\n      },\n      \"sentProbeCount\" : 491253984\n    },\n    \"relatedProjects\" : [ \"jliqfsjohm06vfky04eyoevhd4qogvex9pd0xncpqc6iizkxmgzguw2vawrivhf7rh2pr5x047giuj0wtz1aa4ict3aapxfu1n6uqjxkugpzjs19ihkq808de3f8m7yuymt1wgtzo3yz5pmtg106g7e1fepga8urehfgfkcvjc7gka\", \"k9qqzns2766flc4jnfucihx7et4gscsg1ow62fg81t5plfl4lgi0ra2j06e2iukn5k6qnrya6dfb1silwfalsyec77q64b6kob3pe8pb03qivfls8whfl0e\", \"jldp6mj7371z90xs9w\", \"kb9o0vfd0f0mnsdnz3cn0sje7xvctbehf9xzftwek9re8necey3v4d0ys2hrbkzandjx9rqdrt1as3ijmol0hhm91i7e2z61uu6b59jqw4l83s4eptm4meapo027bi9xyk2hoatxh5v5fdqcs2il0prl8tp6q8uypgcmxo\", \"cdx5d0hiaxqsg4xl5yl651c2g3tm9d5rx73sm143ocbhzquyflzjw3zswni6skc6of6o7ckaw27xu88ujntogpslt0yjp9ddz13i8qv7i3u0edqt3xynyfr3tqz4gniwcdtc5ajhivmwe5ijewri2yw42ht5zbppqj1c5x2qgqijot2zgyzks\", \"3m0hxfxje54ywxemlqsyp4f0jdirnbvuv34u4fx5cys9a9nj7n6psa189hrssh2ubg1n9607bvi9wvu7mk8ysxyidszg361mmwpdra37awynwheg2fhdfe1481l82i6247l4wp3v9qiyc8irzg7ku92oxw3gj1zy6\", \"ex03h54su75q2bnw6zcm8hhbbrteuxhayhp2f8318tmtjkrrletrf4cr5uub5xy7c0mc5k84r75twxdew\", \"2t82r9rg5n88gdzu2byo34quszyph279tawqq0hj18sebgzodoh2ikzfs435fnp667v7aefrhyra03o5u64nd2z7ij\" ],\n    \"protocol\" : \"oyihq3izwdqpmucsxroon2pfjaitisds3wczsaou17r9v4tltd7r3cpct1vv6n7zbc94e57do1g9vf1ndl8ofg1jeqibgz2xzraibnk9xmezk7byr15o2d0pfhbvpap34t50jwfekwr5im1whichlj75tiu503hc\",\n    \"createTime\" : \"2022-10-14T14:39:13.774554Z\",\n    \"displayName\" : \"Zada White\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/910624\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/688845\"\n      },\n      \"instance\" : \"luj8jtm6qa16e5vc2tjlz1amrj4798be6z12vmema716zgfi4buig5hu1yd0g0n3yx1uyd8y61891vfqaiwfiw3p0njm66gz03b9h2c0ujik71v89nyce9aa0sdpderbtwyaueuucfi99bxb02gdellaqvtaaqjfsq3svozxjcl6m8\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/812509\"\n      },\n      \"cloudSqlInstance\" : \"0p68z2v38bwmgup7w2mn4cr6c28ggxlvpuzk7cwnexgjihdybyak1q0ap763p97ff0a2efm48sgbkrycon68j30myml\",\n      \"port\" : 434747806,\n      \"ipAddress\" : \"5lesz8xyj48bdaaodk8u7v6077vz720dcri0ivh8xxkslmmz0gecgwcn07tr46l09i4umfqwiy88nupoxvxushid6wwzdarfqndgrmddv0o504qnu2l23qb2vmueuk5vcp9nm69g4esnfeeg4d6herbz90pho3n7adsvl1bv4pk\",\n      \"gkeMasterCluster\" : \"8kpr9fiy3j2lhqd1q2zo0uf1cpks1mssdtgdl27y4sds3vqx8zi1cis379fsesbs5fo1ts5miksutmmjjwkml07v8ylk315glnh79fwrcmmugq7pv0g2ssa1s7f2axn7jxqn8q7gawpm8rr6\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"b0mq\",\n      \"network\" : \"ob1brw40npj1ry4elihbabo19n72ukjbk46rneec4lylt7039t5myuitcvo3pv\"\n    },\n    \"name\" : \"Dr. Kerry Daniel\",\n    \"description\" : \"Iusto inventore rerum quam et saepe itaque corporis. Molestias nihil quia aliquid a ullam quod ipsa. Voluptatem dolores ut in corrupti et temporibus. Assumenda laborum quia rerum enim libero. Ullam do\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"RESULT_UNSPECIFIED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-11-13T16:26:13.7752Z\",\n      \"error\" : {\n        \"code\" : 275706656,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut voluptates deleniti accusamus optio vel facilis sint. Est iure minus sunt. Soluta ex nemo. Totam quam voluptatem eligendi temporibus at.\"\n      }\n    },\n    \"updateTime\" : \"2022-09-23T16:46:13.775294Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/175324\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/083772\"\n      },\n      \"instance\" : \"jntgc7olperkjqovnmrdkzbu624z9r76ckfzf2wps9penkq1eb9qhdbpaywp1dg4arozbr1gpns8cefopsgf4y0xm2u\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/249906\"\n      },\n      \"cloudSqlInstance\" : \"tmwfvrmmaugkf6skxebrgtsntkr1ih85g48sd5hihpnucykf1n9cfxwwt4h55lhsatpeyv35f89hqkzae84kbv8rzio5ahbo6klpb2wrd2mekoq58izr50aqi9g0yxvji900\",\n      \"port\" : 2009365522,\n      \"ipAddress\" : \"vt3kl1x2h0oyymilp1w6o64r6lswtx915scjgc1fsciq59jd2lsl0qcwf714ltt0k1gwiet1u67ygn87mkhhn8p4evgdbhdaesnodmh7q4xaqlebygnisuc6iotkhgqxlityj2wryx2h76th10e78u4r2244az3zq5673b6zwtsf7w05d8u89ti0\",\n      \"gkeMasterCluster\" : \"5veeexckx1mdcvypzy6gjj6xbkywb0ymiz7dyvqcmboo0thw8vmjyv7von6sgkuk66za5hf5osaqbf7u0h4m141a4nk1z5k3h0z1q6ilftuqq21zl70l59zoixtailzrtc81leww2peij0b4jix80kh3oxl133jx\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"rt4r\",\n      \"network\" : \"ovqpff6ixwyuvonqls5ycgq1ugj9cxh7zv8wbm1ldnhty7p1b\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNREACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"zy5f04ivq46k7zocgiz8sixn5yxo99outcs9w8hzsc1hqibdac5d7femgcfbhru8\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"eizf57ckaqrie1kzugkyk9m80xue8963t213i346u87y2gm3xxixtl02r9t3x0b0sl4fmnpsf\",\n        \"destinationPort\" : 335615232,\n        \"protocol\" : \"t34fncr67ixmtbfxbsktvmumig9qwnjts5vjd40crqynvkzi9gflckmh90r9qoitm8okddz8dgmshuiyjfq2hw9gx512x822u8ig0tkb3hfiescpl1cy7a8finou52nx3at7y97wco71jck8w3lnx6v7jlq4b\",\n        \"sourcePort\" : 1499908644,\n        \"sourceIp\" : \"uns0is45x931cpfwvx9k9xm0emhecr45b\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/594512\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/781449\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/067187\"\n      },\n      \"successfulProbeCount\" : 288170553,\n      \"abortCause\" : \"PROBING_ABORT_CAUSE_UNSPECIFIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-08-17T13:53:13.776193Z\",\n      \"error\" : {\n        \"code\" : 1397639758,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Velit nemo qui voluptas et adipisci eum. Veniam et dolores a laboriosam. Dolores ut voluptas inventore doloremque nesciunt.\"\n      },\n      \"sentProbeCount\" : 2103705092\n    },\n    \"relatedProjects\" : [ \"bv519jymubfhak0zqnjhvr6wqy31ytyji6gxndvmb77jb53ap51ex8dsth8p5nu6lglk8uhi4jqtjt5zwhzggwbhq4rki8fpm7iq1wadig2chaqohrgc66e8etto765m7eekh3sl0ze4usmibrh5kyhhj51b9foinoepmqosu6bnaopxu28npl3fjh8srbb0rzlxx\", \"rfm5caj64vkqqk2osr6q3y3zmmxlg7f947z4quktb5xm8m9uvzbkntslidvkep1rugrmknag01iyi43k5esjc3d9e7c8vg0epu4f53ndo48\", \"nsxo1jbo5c0rkzop4q8s1rod4rcaip90ddxmypj47meqn46t1f2pmqwqke6hnsh3awl8cp1tpy5zlsy0nslpyowvp96l1zyaa8cybksnmdsuogg598d41rv4ktwg8n7i056ij0wynzumui\", \"fd7dkahlh5clxyd0fc1koj74p1l21uviz7af3zo0nyx0g3tbfxi0j3avtcqowjfzjkk747tyi6zi75hmkbv9f0uvoeq38ug4e3ixz69xuhtj\" ],\n    \"protocol\" : \"6vqda512cc80p7lzxb08c2q7soavuxz3o7rye33pumalre00h6tcssgfdffnu0kei2hie1\",\n    \"createTime\" : \"2022-05-09T13:37:13.776348Z\",\n    \"displayName\" : \"Piper Stroman\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/184956\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/837657\"\n      },\n      \"instance\" : \"6q7cbo0wkywuq9095wz1j819nrl3lpvgi5ntj8d7ezt6yc36t8lndsf0a6oy2y7v7e7df8bx7bb2espb0fyerqsqm6nwd6j269ttt041kgor1ayqwyyjdtowcbfdtplnrl50lgevr14sr4hlo46ehq\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/958756\"\n      },\n      \"cloudSqlInstance\" : \"kd6eudxafwqrqta3hfza3nzctytam\",\n      \"port\" : 1520080790,\n      \"ipAddress\" : \"txja1v2i5l07jkxrowodu35ir2eeehw9qap7yisc8wtrvij95e4unefb7px3jny5zfwc5sfqeloue5fslrr8hz0g788yxf096p0v6sa2mb010csn7z06197vnaq6fhiiafrxs4vfzal8nizz5l3cxcp2vg4se94zm27qzroxb73qa5g1u\",\n      \"gkeMasterCluster\" : \"ioggfty\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"w2s8\",\n      \"network\" : \"0a1sv\"\n    },\n    \"name\" : \"Guadalupe Bogan\",\n    \"description\" : \"Aspernatur illum aut a dolorem alias aliquid. Laboriosam molestiae assumenda impedit et dolor. Mollitia dolor quo dolore fugiat voluptas temporibus.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"RESULT_UNSPECIFIED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-12-19T15:45:13.777044Z\",\n      \"error\" : {\n        \"code\" : 1474349412,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Sapiente soluta quod hic consequatur ad esse. Facilis cupiditate omnis repellendus rem qui esse. Et consequuntur a amet nemo omnis at. Veniam aut assumenda.\"\n      }\n    },\n    \"updateTime\" : \"2023-02-15T16:50:13.777149Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/723035\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/252704\"\n      },\n      \"instance\" : \"8os8mdomiowl3i339wj9h37dohgky9jalf1vu0g67unw\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/667139\"\n      },\n      \"cloudSqlInstance\" : \"moz1sj7gpko9ze4vbtru58ins0rgzrjcmjwag9qphlejs8r40apglrr6u0wgxrmewe4q3iv2bdwuemw9wt9va2pi50g57f7zb7s8f4aqnz3rkb9nn42exhi3g97cst99v54539bd\",\n      \"port\" : 1930809381,\n      \"ipAddress\" : \"ra2quh0rysfa4r3q9nwbgpo82vf4ml7d7lm4ykb3kpmmp7wed23nrfw5g3a62menjh4ghy2i77muej2w1wzxdaldhmmlym0qxyu8hrna30o2tzkckafw0i8ygptmw8wx4hakpjgfrivilb7nne0pqgweeglaesqd64dupftnz3umdch5lxu6hra5bab0\",\n      \"gkeMasterCluster\" : \"rvasp6xya5lovacw7k0oineplxkdzpwwr95a944s3i60k4yvwtidjoyog7vba4vmmuao083gou9t6lo5a6g\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"3hl2\",\n      \"network\" : \"sezq3xi48ymm12lv5rne8uk17rtvj0kflv5askp95k75557utxmi0tg7jggl6auvog0sztzl226n82n7eya7xl4r50ggvlmqup\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e17fa3c3-e39c-3648-a729-59c0a3f2d70f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.list",
          "schema" : {
            "description" : "Response for the `ListConnectivityTests` method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Page token to fetch the next set of Connectivity Tests.",
                "type" : "string"
              },
              "resources" : {
                "description" : "List of Connectivity Tests.",
                "items" : {
                  "$ref" : "#/components/schemas/ConnectivityTest"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached (when querying all locations with `-`).",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e919e74f-8bbe-3031-bdbc-29f968e5129d",
    "name" : "Rerun an existing `ConnectivityTest`. After the user triggers the rerun, the rea...",
    "request" : {
      "urlPath" : "/v1beta1/Linda+Cummerata+Jr.:rerun",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Cheri Dare IV\",\n  \"error\" : {\n    \"code\" : 2296636,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Et mollitia harum animi magni ullam. Possimus eos voluptatem officia. Quis repellat consequatur voluptatem voluptas nulla eius vel. Nulla fugit non dolorem asperiores placeat nostrum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e919e74f-8bbe-3031-bdbc-29f968e5129d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.rerun",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "da2c7687-3719-3bd4-b3b4-8a4ae424ae72",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Arlie+Hudson:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da2c7687-3719-3bd4-b3b4-8a4ae424ae72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8695929e-7d1d-3394-a3bc-f19a8ed3c656",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Phebe+Considine/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Bill Harber\",\n    \"error\" : {\n      \"code\" : 2039226718,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Laboriosam porro recusandae. Asperiores totam est. Officia qui et facere officia modi in quis. Officia ea eos voluptates ab.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Sarina Schaefer\",\n    \"error\" : {\n      \"code\" : 152868640,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Unde asperiores enim cum iure eum. A aut nisi dolorem illum vero cumque. Omnis ut qui impedit repellat. Ducimus alias aliquam laboriosam dolorem voluptatum quia sunt.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Demarcus Hagenes\",\n    \"error\" : {\n      \"code\" : 33197342,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Qui ipsam beatae. Voluptas saepe dolores quas. Cum nihil est aperiam voluptas distinctio voluptate. Sit doloribus molestiae vel tempora. Totam qui consequuntur.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"rmx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8695929e-7d1d-3394-a3bc-f19a8ed3c656",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "810d1043-ed18-3e23-8073-0543541e63a6",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Lindsy+Gulgowski/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"erbhtqlxh9a6vd8marig88ldyccd7o6q5k2vg952cp0u2x5swgryam3xki689q1t6es6l4egm33e7l8hdj85axn7igvl36gccg7pft0g6q7l35\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Stefania Lueilwitz\",\n    \"locationId\" : \"u3lf\",\n    \"name\" : \"Bradley Legros\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Marcus Champlin V\",\n    \"locationId\" : \"k5tl\",\n    \"name\" : \"Damien Ruecker Jr.\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Hilde Cole\",\n    \"locationId\" : \"1y0t\",\n    \"name\" : \"Ramiro Bartoletti Sr.\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Trent Gleason\",\n    \"locationId\" : \"akg9\",\n    \"name\" : \"Tana Armstrong\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Carmelita Stiedemann\",\n    \"locationId\" : \"8259\",\n    \"name\" : \"Miss Ute Bergstrom\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Carrol Bosco Jr.\",\n    \"locationId\" : \"gxk2\",\n    \"name\" : \"Janeen Christiansen\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Louis O'Hara\",\n    \"locationId\" : \"v3x1\",\n    \"name\" : \"Adrian Koss V\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "810d1043-ed18-3e23-8073-0543541e63a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "e66d79d4-9959-35b1-9931-7991f4e2d94a",
    "name" : "Updates the configuration of an existing `ConnectivityTest`. After you update a ...",
    "request" : {
      "urlPath" : "/v1beta1/Mrs.+Lonnie+Hammes",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Edmund Flatley\",\n  \"error\" : {\n    \"code\" : 306203448,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Possimus nihil dolorum et quos consectetur. Doloremque sint qui ipsum ratione earum. Impedit quae similique fuga dolorem. Qui quis ducimus nemo ipsa. Ipsam at inventore officia aspernatur.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e66d79d4-9959-35b1-9931-7991f4e2d94a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "4ad7cc46-8131-3afc-81b8-9dad6f96902b",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Alex+Anderson+IV",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Wayne Mayer\",\n  \"error\" : {\n    \"code\" : 667448363,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et minima rerum hic odio qui laudantium. Saepe occaecati blanditiis autem in laboriosam officiis aperiam. Aliquam doloremque accusantium.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ad7cc46-8131-3afc-81b8-9dad6f96902b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "aab8f67a-2df8-3e5d-a4f0-50f1a1a29dc0",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1beta1/Jaime+Hirthe+IV",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aab8f67a-2df8-3e5d-a4f0-50f1a1a29dc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  } ]
}