{
  "mappings" : [ {
    "id" : "47bcd7ca-d793-4f47-ad1f-1f49c4efd6da",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/bfhoh5moy6iw0y6p57t1b28u460o6245dtqww5ptnl:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"j74souxzed929k48ns29ou1pm9jukpwjp4r7ho51xkk2h8nmvscgiwdc5usvahhxwuuspzvhhsn4kd0i2t37hl8i3q6knhecndzy8rpvm5uxnp3lftzhppfhth2t9dcl7z3d2nhw5b9tdiwbys4nm39oizckuhdavy9qbsmypnrvg1bx44xgo\", \"xaidnnsatqm7pxq9f75q1sgeysrwr5l5infpema3f2g83cv0f1u3mgtrv507lxv6fq1mu3jyci53by0ebrz1x0bth05\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47bcd7ca-d793-4f47-ad1f-1f49c4efd6da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.179367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "ed1e70d5-9722-45dc-b50d-a0cf8b47f97b",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/lrdezkks76tswy0qqc9s6wdsh15djd105ammgqyrxphl:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"b379lxenwvwmpu\",\n      \"description\" : \"Voluptatum vero sit enim. Ut possimus autem laboriosam ut quam illum sunt. Veritatis praesentium enim provident inventore assumenda animi.\",\n      \"location\" : \"pa4xgf9t5wm156tgbevl1fvdhgxgudf2suf5y0vilpbafvc2n\",\n      \"title\" : \"Quod fuga quae.\"\n    },\n    \"role\" : \"p3nx5sn1q12ub11pr4faxlhl3erayolc5ynwnp7ha120z368f0jwpycpav9n2igxub91l7i6xhkg7r47r46c7c1dh6o4465igzjezciievc7fwmch8xoq2s115bxog2wg8c5o8965l7ol8a8bssza8scg2iz0z53tfpqa6gtet\",\n    \"members\" : [ \"ocskduoh3y1vda4l92plqjztuhfm8qprdfzfv8yxmdmc\", \"rzio3lx0ga98c53vhfj71g08pu6rel26yzdm36to2f9i7nstpmmxk5jlz3ltebx2pqxbb4pvlagkp2uscm4rlocj9r0v8gy4kgeja1c9yo014x8ud8ttb8iy2i3cg8i08202gmya08eqryuthfhxenm2b3qbfjkihzf7pocndgbfywx8wbo5\", \"2eoedepu742irs6vuu8j2rwe\", \"2wrx1bm8ezy80teumwbt1rpfl2vr9g499udpj3fkfjtcoxvaw1xbs4bc9p3rr8e\", \"bqnzrae2dqfbgthj2njj3jfh0oesr8lzf2vu64j6fdsv9ywlqgv\", \"qxk2qjftlaquswom2vt2960shjke5t0lp5fjk5k1\", \"am7vohpbeps6nemt8xvp5853z8vmyiflcqvixg5fa8b75p79f7delv3pdse8tna1qyone34r892fuxyahv0fljvcknifofjop0o51qxjkco2lmyxefqzoljymjrakxiahnmgy4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ar6w5q5srweq3k42jz6sc4k609u382hpheo4negpyik9drxwgniihg0d74tisfng2b4jpxj2ro2gs68txfrxd7g8ghudo2w10sab4vsprqf2\",\n      \"description\" : \"Natus qui excepturi. Necessitatibus aperiam veritatis nostrum. Consequatur magnam eveniet blanditiis nobis. Quod quaerat alias eos aut. Magnam in rem pariatur aliquid quas.\",\n      \"location\" : \"ttlxzz1un50ywnqy\",\n      \"title\" : \"Quia ut aliquam hic ut unde.\"\n    },\n    \"role\" : \"auq4nomgjg6bj1cnoyr2hgixjknktqg9lrc3qpcb05ktdksu27vtyuntsz9uddo080dxygxt6zqo1vpd8t93qn9q6h4vq9ykh0sjkx1q3drps95fp5j6a5ofzelzsq2xs9xcfh842dsmqyttla5warkw15fyu88czhuy562q0dtf6y6m5e83a5d2zjy02nw4sc0c4ej\",\n    \"members\" : [ \"y3l8bzw6031gexwbzrke0uvql0dv789vjqk5l\", \"dktl9x9o4zb07pzoogxxp00zncrte\", \"fkfaiyg5g87ux97xepq\", \"beqe0koynm8fjr2z1o86kf3m7\" ]\n  } ],\n  \"etag\" : \"officia\",\n  \"version\" : 577891775,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"m05oscpp5ejr\", \"4630rdi7tew8mlgim8kxlr4f55a78drto7ygp3717pu\", \"smewlkualc32e24k8yzpd78s3zv5miu88sfj7ujxfxkjyy5xk9went1qkeb0givkuq93a06qfz7iuiux5j8un1z7xnhgldmdegr4tfw1b5jbldrn9yp9azi8rkoztzmy8x5yshd0to9y0ck4xndw7rq8vb93pdc3r7vaccoaagr3phkc9dm92e6jv09r8\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"nrt821f9\", \"4wgg80272tubvzny865o0w9vo79uv4mgx5medj816tk\", \"kom5zlek1p7z4mnzxf8zj1zqm9lp108oi4jbokoivlftc24goymz24a2d2v4omr2nene302x5o8jj36r7tpf6hfet8fs5g1vkrjc89769jsny69wt0twy6aga7dmbpucc659wmwfn0xcousefvud2p6hw05q\", \"5wvvx4wsgcozyrctx1j7irr6iq9b2jlzipb062rc43o48k7wzhoe4fdsomv8qnf7ubqhvlelcdop45qqijhus1hpcyae2q4n96bqgesod4zax\", \"ntiuincx4l78uolf2wpruhg2gcd91u8a4lpbocab62tchvr3v7ql4c5yanxcwqd9hpkymjsq1w7nlxlstwoiwjos3kv8vnt4f0uz9blxlahceecmei7wv6c1jczw0hcm0q7ytp24yk0t5yjpda0xklvrqeldugqzpo8a8ej7g7b3id41\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"t4ujkkzgkzbsltihfm4ror3dhohk0nvjwz0acytkxdhkn94tw7s5m59w7d0irv7ixnbkp16mqlxfwnu4ur\", \"1owgq9ckjhnvfozqupilxgjtt1wtnze78iqfgs8k1qebi3i8lhpo7nhlqoaqtbyboenhf4yay1dvvkc3wpp97igzok35i7rx2unlpe6w5flqosquezjqk1mdqpjqd8ae9c0wbmo87zpdzjudnijzcft50hpozi2cuo8tewk0npu7e1uwgbhpmhb5rqi0lpvkso8\", \"pma872dpa4ba5n7yf1jpjlategs8eslnpmagqa8n29hwor1ph7gd6wx64in8u9x8nup4v5y84veyymjb366nl7ynmpj6zk3ta231lizfse7e21tppv8ngj0t5k9zgrb4b5716drli1bypere92blrmr801hoawg54wdx8itpn9z3wj2jlyeo5mbq\", \"guya711y3qn1sro1vn98lpl738fi48h2zp118wu0293bxokgx1y6vzudnuirg99b5u4r4xdblwnwd18f4rxvam43ausep7t1u239nqi9wmk03znplu95teqmbol8j4kgz52u3u2t58ybp86f4lnmg7p0b7dkyjbd4a4c2h04ydt4r6crshsrz5\", \"qb46yktvjkmd014yvs2yaco2l\", \"99sysiqjj5bhriygvpbuwm36hbpfa7k4044e7tbyejc58uqu04vwoqqd0vj7liy6l0ur1j47a6tj2ykl6y9153eigyh4q846ch1c9s4dk2n736u88ax0a5kpl54o4vsd5avjlwxd1hxx3mqw696jt9k9wcu5c\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"btikt315xsiwhd30jq1ibxg2cfjorvs4zo749d650ooiq60hdv32whrtyw2w5d2n4kmh0wfglde5taxx61t4x9q90bv\", \"nkyob6369745cxchcapc67d14sv4vlocpg571xs1wfnetliax2v8e9k2xq1dz68xh6spk7d9o0zwmhh019s5dklv20f00e42tnwtp8zm77g1sl6pvaficspi3lgsuv8frxrozceofo2hm91gh2l3vx0o0d\", \"w0pfhx9pizyyfadt3e8axv8cs19hiyzlvdblwevwywg9065c6rsqywpg15znap3km60zs906l2u0otdb0d2jmm792m6138g8rvf9meguutvwnzl991kf7oae43vpxxoppvlz9h71l4kdlo6bp3m4b6e7ei5844aglblhrj16zg1nlombhm5jbcvxos4lnzagiyn\", \"zw9jywcms25g6thl1lxpl4cipbp11giwclw7nxz1mn9b2fy\", \"rrn40xvclc9wy8lazvtk2pwu35rhqjb2g72tn60nnnij5uacyhthwhuchn15bw8zbshbanx0qa5g9zgh9r1ehuzt3ritrfwo73q6ptib3zbz6gbx31ctvgdm1\", \"me6aikin3ot0fmbfm7pllxi3jnrvms1dlt2tlbvqas2i6loh9dowot7xg7c9a19va36pwi8hvoythtbo435x4unalkcmkdxcf38kmvw9yry1s9ywt6rn19vief6i9ayt9q2b40d92bn2npua92pok1ykzk7l1acdo87zd0ki5ykowuueorxfp2md0u1zmg\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9v3qjhl393xrp0s162k3h4j16240hskwo82ch9qr2hglt4pfn7zw15ttxkir77f4bzhdksaosc76bjr66u7xv2te3gj3lw9sn2\", \"axzos27wnn94sq7kgpse028kor6hxbe34h7jl38g94fzs2ap6y43129ewxu7bvse8o7buvem91igasx8c99wwwi81al0dno62sr54kgqwa2fl631mix3pxhqc686yexydfn36m8nutk1x2hl047txsbz3wdwjo4\", \"momf67np35tmux4wadsnhpf7rql21xt3z1c7v3limmsq2gdlwdaldytxjpgugjdjtaenaereowrz1futwbws0f87jejt7nod9miu7rgwfmh9n1btcfrh35vmzntqsvgguekm9\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"yd8f2pew6nxmhdzbyobrcv4sgewphvstv9m\", \"ls8ngn2ovawdowe06cttc23udeft5az20my4ymub8\", \"sewc6t6p\", \"n0qu9njqqtpx10mwj4cmpg3oria9jhiqkcmr58uixaviwvlpwt5mr6j9yigtzifpns5cihbephivubfy7kgoxcmdb0csk6ia6sok5re640tozgv8eegfqr6mi6a1q6\", \"s9q1nxwx1urf6fdx8fojt7pc8e9quiyu2hda8\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"5mfzvbspuhzmq8ykxhas1a7sgwh3x9kcsks6rtn1lvlv107d9vso0x0xem2duwd3yeb8znrw471ief\", \"u74q6hd3esglhlrwd2igydxtsjl40wqzsh4knaiybek6nwhyhk7sd7vy0ny97rzsc00zry7hoq80p88cuc27w588ube6gcucvnn7jc7\", \"up06wdya9us2pkjw7xq3333u7zcecfdxwu0lap737jm1w2do5t34c56qbk9jluwbj3qpcjqja8ca0hiexknsv29a6o19najfegevk9qka71tbmtkchp0i2i24fhkstrjhiuec463r4f0mtyop4vszdnu\" ]\n    } ],\n    \"service\" : \"d852kvx9d1eajkb\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"iozgw1u22sni5x59dov1hbcn9tzt1edm7wkreac0undkvmgnl2zivx0w5uqrwruawp57973hvmxoo9wtkz19cqmm0njxfwyy\", \"0ekqvwh6a44xqzwepdxmecq9wk24un5vlhqn7c5lzrer\", \"94d4s28qis0kcde6xvyin3ifbmvo5tm1b6fbeza5jggf5b0o5owcs8qf99p6n7l4u36mgpynqxhmtyn5z350n300qwjjf001a8ab8fegr6w1u36757hw34rrrx5xt94segb3gsa\", \"b8q0jhg2i\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"kdyavpddmjsmft8cgoq7pkyjsda13vv\", \"fk1fodbrh3iekhilup59x26zxhuvawbjxo731pz1qchfhclome0s6wbn1e\", \"jdl7ajgrsk06xoxq7db023jfu2c81nwbmc6hg4oz1nd3q0wawdxeh7mptofbtpr2h9y8itcvb1vgt1d1jclab68vjmppczu29pznh2kleqyvqo7wosnolzcydqyuc7s4pu7yacslzmm3mwue8sbh92ap6nu6s450a1r1buxp20bdbh2kz\", \"phdf05wvylewbl8en58x5vcrejzx1rd0aowe4gbhcwnckawt4nis4e7dqdutk6wmzz2\", \"b5n69jaf3u4ipi8onnzu4wg0f610ld8dm73x5p7csgozpdggccducgtr471jvii15cowv0ceux24zp4fqu31hm4qzjq5v6icrk7bvy6l0nbwpuaode065dpv9g7yzhu0dgwv1ocueyaslntvazyqx7cz9kazt6pby7jol2pzpw0zp690cxyheaemke8w7\", \"885m0d9grb0stfxzw06p90y1tjlklas479utw2d7k2lblb8kl2a72kgrjjgqhd7x3fjqw9kxos3qi2vutm0dhvxp67lqccmbxr3ici5d2bx0c0cb1u87e26p4zpnihbcgo3sjcspz14pvkh0cttedhwagn8\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"iiguvb2mnjfq5px3rw6y3p5k2e9dkcosv9nqbztsvqvqldom0d1fvtqk3dt\" ]\n    } ],\n    \"service\" : \"5x72yaplwianthctzo1pttlx2svfc0cy8ld8igzvh6ozvzz1wtl7gpowe5pry1vwrpf5wrj5i3y3oe6fipd9a3ytome4uozh9d4u4qde3kabzz00xn8dss94l2ck67jdrqcapyw7szp3pqkft2jq1of40heyyy4cbek9gquwh\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"dsf1838wat2lxlaknm19o7taqqpn\", \"rqcoqcf4ka9xbfbt5erm7vbp8379mvn1uj0sj06btgt89ywmc3y1ymf5c2f0h1wsehz0x4yddwb9lynsiepzf5b8k3c2fkha0zf3yt1grtg6acfs44c6yakk\", \"n3ruct9zc99q47w1sjht3m94a6hkaeahiuvgcpvbf1udigibud6s9djj3w4zj78t754u5vyjw5k63r6pu4zvw7cwiczfktrzl6t9tmfachldj\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"5oh56qik9zv4iyyhtaqfunigyhj\", \"n0kyvol0gpioqdeit8cy6u13ih4d90gfbyasv27ic1pk5za68nfkbx8g7mz5refdljqvwubmnns61rs7f26dyb6w67rl09ynbttzv4hfig\", \"32jlfmnanmgket0ro\", \"udqxs1t05d4stgcp0vpht48x2y5lw8sdgd0zed09mc645f43ygllf6ayuqr5maqfjwj4xgpvmy58y6pf1y0scu4hwz5vw2idmyux95ihmnaq2s5v48h0su0afqyk20gtmprhqlunq0cn3bqgrappfnhaginkzc1ldjv5g\", \"j9mn\", \"7fjivgytownx2vj97zaaz7cy25yqygd35c0f7eu84fwj8i\", \"5emdsr31z15arx914eb8jun1xg2avukm0v7dia8dh9d15kbjru9unru4th58eor03wnuqhygxvkcfq0d0tvcc68z5xpr42a3jm5tladwdqv8d5aynye1mgeqgwkrvz6mfjadz7pvobuwyyftpq2adhmtq7g\" ]\n    } ],\n    \"service\" : \"jvguvunyfe6l0xcroeks25lqynwehvg4d8h3xz6mt5cypfwikescgug09ykif9vwkg66vchqk53qmpxgvw09vgkiik8zjtf3swots\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"i87buaup5ir4mac5g37heh3d7rlnk6j6wphkzdy9kmef87ijjiyjyojuc8h5jeamm0pw05bvgiw6sjo3hic6d3zm049yxbn7lq6vebfquug5250u\", \"orqg4cd3e845u0byxyfngxttwuxvn0uwzw2lpnvl0ysrbrf1pmtmk7hii41vho6olmaqljdnmmpy01sqfe9\", \"uay618zorwzm9w0x2wixk4bd64g5va30pdpb8wu1plt9osq29oe9cux29pjtnqh05zh3dzhz9rk3x8e5vqh64gy6z5rz63wkq6opwl0efa4q8g3ywniznrh51tpy32qwwyom\", \"vfcov1vgpduaf93jdf4bbehaqd8iv8d2vft2fxtg3h456rjf9ehwiaqv9n519edlw6edsqljs2apol3epjqeoz400w0uokm9jqps4epsqbrqpujdgqfq6nqm3zkv006kvpyvewkg3ds8dljj2ahwgwi0fx6j49onw36d55yeasgvr4flvswk5d3v7t99hfro3m4weru\", \"uu2ix1rv5mjvk1kypqfuaar8ulc2kls4i1albv7efw2m8s7a7zp3t86yqdsow5d7okjy1aqk23bdeivlni2dctqd05w4phdndxlt1yhd40z6b60v3guevt8osx4oju4t2u86vzb7if42qh29c11gd50sl8khw75xx8\", \"00ku8wifny3obz4j75jao25b9vocxgsds22ll3xsj2pii6lmxtw9r916ff8sglleyxc3rhvhjylt71bl\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"w8ta0notbc\", \"sjjhxcmwpiwy9ukr68kmckp4yos44vd2f9zdvjisf3lwirqpunvgtgxidstfx0o0e53uouih1zypswj10qlicvz23kdrw33y433dpesafla5r3yebcx7k1dpv1d7jmq7hygq2yr3u6rke7m83989mg625fcto8ash3udup7s9txpqgxsh26iq92\", \"8kluydsmvv9vdwvjhpcbyufk31ju3zdr7962zotz1ctbbk1evaal27mvvda4j1ww2uebbnr1wesl15uroh8nfygab9zvo77n1jgyeoiixdjy3gpgg6zodotdilinvk2blpdqw5rwnleal9d4lpzgk9ycsb6jlulne7g8hjc9vzs3q38m5zrgkxxb6p7z4r1d796\", \"692f9i6kr6274yz0x3ow423ouqhceyn76fydqvfldwssq8nq4aggb3ror7wmp3fnswo8x53079y798bg4upr0bkcjqprtf1hiztjkk2b12f49zfrgqro2226h2v8lgk9n58zz43kzrruhrvq6u0w68cd0jepbh1r7g5g194tp2mqqdz41\", \"fwkzll5xg3ql\", \"ccho9jwlz4wt7tjee81\", \"arjelwtgxqwztjqexvoam66l0dluxkf11vzr8s6c8qqd6wdy44hw9kktmir1iseplibjh1ngux5uvbgj6uu7prkmohmplrfr6h4plpmggirv5z03ryli7915tjg7mdno3nznxd2ad2bjuw98akbjh5bg2w63pq1ap163z\" ]\n    } ],\n    \"service\" : \"ua8vqoj2rliz6f5vmzdpaktb5p1xj4pd\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"eosj8w9vfvubu5i0amopoe4ju2umf0gr8t2yuaub6otspxd6u5fd23uvq5p1rqtp8et0h6d05ykixoypy25nym2l4ssvf\", \"uth6y8h2532f89hnyolqupuow452q2m6jk7wntfvacnefvwtt08852byn4kaviafhptz0e0vgzotcadb2r902tb1i49a9i1abvuhjkrmwpe2ib7kbqoebytt0l19ahzrecfcz2df2i14zq66t45ej\", \"2uplzuixuv3c7lbor5fg8z4ccz0libhmdklkxygpovknm8w35zj2cdbkjkeskdt8pzqxrwk98l1ldmnmegkgqnmx9kfb6kaxrgtl2nar2umftnexa1n29hwipuilm707vp1v0hndz8lkuedgphohfn7twb93dj3zwwcs6cxm\", \"7uwj8p9fj1dk2xe2c7tzc75lqbkqrj\", \"r8vpgjgw3pef5ju9rg1ko6o95qrbvby1c9censc26kpr9xhr6cm13hakod1v2ft4hemcrmsja86lodtwp3i7eb5olnzdewy8x81tddjb9qlbak99mxt089t4w99ci\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ljow9dko2gl03m8obzs8wk0qkzc5c7g5gsztbbw0897n3mambty2x8yaxh0ttwcjz0llsliozteameov9kmzq0x22oba74tplqg2i2ulm0130exs5348f206tdw0q63lf3is7i91y0mm6yh0ezo2stfi7g1bu53md38pxhevz6ztubdfxfyjh97jbw0603\", \"mgut\", \"21mzlcsc7zpsol27scz3ixmvxejj22ze9kgvu8otd8vqtyofmglfbg2teh8jk56h4x9fo8ax3ellccm2i6njthonnc7pgywtui969bkamrmjoihgwvtdujf0hzvesi4hgw40qhq8txzqtccwb3dc17op6iqk7k7il2plcju0lp0dbn3fwy25mse\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"5t00vsdzum1wbgne4ar8t2s7vkszr29boklpmp0zqt65jqghbjhp476vnwvujsalwg1umgv54rpn99ai1ytqq1ov07u2cryackqhjuw4v5cr9netegwoktg2wigpt9jw2hj3mr1fl1dosdge215ji\", \"imhk4npc0jhp\", \"onwimy3h1vlckcm4aqx2o3qqzucmoegzxurfookjesxv44c9a6rviqly1a8cho41a4ahng65icflce8fuzsbk4sw0x9yccxw6deox9ync9z9fbjmm5gfipl3r5lwoban35zl\", \"clv6qeksnxsny308w2fvd9eydx94nthburgpxavcx1a7v2bpz4pt1agj6tshjyyaqhy6ze64byb83hvgzzsddalktb33sp26jfai\", \"rpgsgu19wokrlzjum7cg038ie7eb1t5da65023dp129oqgco38w5kmbgq3dxvkom9yhrysoyq4gb7d0y5v6akdra5ogz7801wour339ekivumasjlyuuluvln2lnz6l5i9u5rup4i7c3pj8jnxgj9n7zzzeilbci4\", \"2qhppo3f5m862ogji472mr3b9foq8ite41yismh084e0cap5w3z7whxpgved6y5vm92z7h5zg8s14472vkfx585yp4uubjakstojnyl0omu3wzp90dl3ldewxc7mzgezxqe2vrszwl4xtxobeoz7abwcj4av2qw1xxmsmzm3ur6zv130mz2l5fbpo0jjgzc59\", \"01nzrkbf1razaas9d8tnz7za3ud51k9jozwiijnenyqmd1tyehb29fi\", \"l2jdv2ombngke4gzyuxnra2mdz8hjlsj26vsd2pa12v2e5uthsi1ughslrlpkzk3cvlaxsu7dvu45apmfcnh0vky1hjnqrzjnnjgvwdzn0gcra4v8xl2mm15ia785cfpzeumuic2oau0o1r39sz2w5r072s8smh\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"q0oifnkvu1nezt227ya2centa6vgy3org91kzfs12v2tzis7z59eltlp0\", \"gjggx0o0em30bhn4pyunfg3xq0h9hkv9dthw1vagiojbmkvkz1jsmrd01dq3zej0wviw2ymqmfrs3zy88iukp08n64jwkgg0x8sqf1w2kkt0loytxtzs9ysp3qry8d3o8m9s05l7e8zxxv99mey218weqz10cm71sbvoeg5yaufsi24ks034i\", \"zlqh7m4mhh614wd49jaxb8vi72zyvvzd3wmv4p5pzbsq6cgj3o93ldl52lgxr7vjnygj8i8q58cwd1uvin0s01n2kt9o6n1kmehz0jmv81o891hjedzgpdeowfk3zzp8gwovo5bni1bawebqn83fcfizemwpi7r11xd\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"xk0836oh5s9anxqn7x6zpxxrh8gj5ckj7vfd6ctfe93pzehguolcqgqo9wrp0dlmvy7nmhc4o4gylkod32gl39vbqsfiz470nb6rg7di4y01t67ovzwly8qwigbgmvrssaesnr1ba9mz4p97i3n\", \"99bd9v4h59xs4t479yq8359axnc1fhhr350vupux7a1uni7i8jbkwg3r9fo4ujgbpiy6cztc3hik79tjdbuoiikjg348brou2q4oddt4ej9cwk4mnb0gbypkhcvt8v85enzz28n1\", \"ubz5f4ak559z8l1rqvxbhdgbr9vfkp524i4dxxk8c9i7eicvpnt3l0tqhvajnotthcwe56df85t5fry9agqn20213igxno6dvcgy0dgv9x8rv00vthmvncc13jdvl6pygzo38c9imoobu5ldtanutui9259azz10lkjuj698retupe51fw7tioo1w5c222\", \"gji2tj2qkbjm250gc2c863r8yv5nauhhccuxukqga4zxsayrjs8nk81r18hp2iy8swvy266pbd4j6pvqnub2m5moc2hbiq35v247zj8mihccveeqxmcswp2a9q9iom09rsf6b48z0q1iqi\", \"al3q8mznlm3fnzla39up252gp1hxbcm5t8y890qpmo9wb7tnq3pkh2xtl2ajoo01dm6h6tylut2vp4vfh68bvkrqrto6ky3rsz5o5dboarbnotrk5j0vjw88tqs2wre353z9olsmwkbdue9ko4o75d7f156g8uwsw\", \"nboqu4xha5qballoomzz8jafjvf7tlleb3hn04j8zch72qbrr6sn8i104bzi9xf1tzyrry3xaa5jo21ph4ukupv7y8fix2hpgh6a9m56cy5dipuwybl5uryu50h1jgxk5hevrg55s4a4a3az3o3zo9174taog7ukf96fp7joassyas5avt6qjjr\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"vsl7axvxjjf141dg2gwg5zylhp0oli2edrvcwlzxoc66kpnr2flwmy66m29kei\", \"nbooj6ms5q37g9e5nziyy55v79veuf4m9c25hvclm41vdfd5w7obiobnq6zdk6pynccrdzkigqo4xk3yxv2ysb2qipx4kf8x7uo4ujeglomezuf4gcayggksl\", \"1p3d4qi9mpd4k5q6txx4qo78hcg578nno8wd3cn471zh7xv096s81x3\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"i1g2izxoy0qz9h5tqxzmhy0ns2ptcnkn77omn8w30sli4xcm40j04fwu09gp2ypffpbrhvq2bkd8hks8kg7tywa6fjdq325lgdquor9hkl5k0itfimhn3lm1t\", \"2cgky2xae4b3ybqrcuuddpbo43j4wyunxwtii4zuqn4ok2nh2pfs3kuedurb2226a7yf7hryoqzd1sjbbw6\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ve1ipxxvgz\" ]\n    } ],\n    \"service\" : \"j75gxpts1neibkvpd0fi8qgdmtg4o7h1rngxpr5cq2tphv0vtd1uos9nnhlqobty9y\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"8fi3po2sc95rsxodvr4togr8fkxgmgwhb49k342ml1kx1tui138vaeazcyt5fudqi4mkqe53odzewh0wphxdul3pkag34dlywcn1putxvqqe0wuroc\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"gjkmtc9veoksxvmnfwxcyuzbpalkfnw32z060ohtu3jd58vhqovtxxcwpsm9gdeijc522vf2wpwncx2y9whwpp4dejk93yo7lqv65mvtt53yw3wunyh5i0l2tlybbbro5qrlchht5zdtybxmm\", \"trcn50kl7uoem5tm4b00ex3qiqkouv3ztxby020izns8a8n86que1hh4zxpaw3e6jqscktpi6o3ueyodhishffmz1uk5xe5in28cs3flw2usx6mm8bf0z626wx72arzl2523xwib1rwcpyy77157ly1n9\", \"8i8a9xjz4u8q9xyibtc7gqy6x5b0o04bbfjyvhwvehzbv69uf5oouuojlhq0zo85mrleufshlg0nvd78ua36ziuv07ud14t9xlfwim20h2wy9fjdsze9jdxzen21v8nc1uj16uyt3oyuwu30fdsppnn28sve90m45ep4ov0ji12m9kv2tg6im1d0hf8tuou8ipsb\", \"nj2uaqt2md0\", \"4ogd4zzmzrh0iuktwmq8wylml82pnjplg5k0xzy5wmui06lq3ukubirwn90ayfch8slukj46dqquofi2r4a8exv6omucg\", \"jnxdnfvji3m7vnnchsozyfnvexhxbqpeqs0vjcgwj95pn54dqcc\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yt9cjjdvr5oxx4l304rx20bnzmkm0v9dwi5g3cfve7k83c3s2kbvwn4y4tzbk9c8n2nb9i7yz705527ji6gacdot1mthafbde342uxsipzo5jl9ismqsw23wpzo4ph1qt0g7bkqcg17f9v2zlh4ld5lrxbw77rhhgei6el9\", \"tmigvxnah6foxq1hpdjjrlacwxfux5y2nvu51ezzbnkh62he6b\", \"a26h9332zzcq02lqxwo35dpv4cijpp4k8mzfzbcfty116mxsklsdpxnyivsqai9kk8thew5hjbi2cdb46838bsvgorodf0t42hmfsyqnf2xzgqbk09mdva2bvq0ai5l6p0hsztkh2i\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"o9b31\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"tyacq6qg0rftessj17ajj3jzuv\", \"0cpjtg9ng5kg\", \"zvjno657m77j7pc7spu5ijk0hh8qu45wjigkuim27xase6pjpagqiet25f3lugo8qzcght04r8pxvic42gfogyxd3br1hyrivvbdsrzpanvtmf88b4a750hopq8qk3i1m6zhc670xdsoepvw9kmltgzxhyjomm5fzx3w0rkyf8pu0bj\", \"x6wircp1yui4suvie76nucm4nf6y101uwhu38mt3rmx5zok52d0b4eo9g20bgvigjujvgm9t9\", \"ti4y91zvl4kqp49hlwgxx4vp839wei36mmdy7bhxh3r3czivm6zdjzs4f84fjll184zoostrfsq888btao42iq\", \"p2lwvuy1pelfgeid8puz7o70dp67vyuors1hwzhf34xgiy9a4wdhjfuzqkwputwz4kr5ga\", \"dw4e18jlb4p9u6ce486hkayey48xp5j44bk9ylgu3zjnng0flzxoesftixfh05om9ussmsuxbabio8isbuygh5bk2o48h7ju9jkb1dpyaab2q8triz2\" ]\n    } ],\n    \"service\" : \"b9ktt2i717w1e4isp6rklurglmg1fnuia503lrds7z12o2eti\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"984oavgkebyld5vp9h1afsmnwv1jtqfm8v18624fd7yi3c8xi1ih\", \"jxy6rz0s6sg6sr30t7kkqsludxnfudo8lcpxh25c6upsslqul5x3e91qersinxob5fhd0tddphvoig1nhhwl5w\", \"733u9seh7pbl8x3kt6j4qulqm21pksk4ek8mi3t0kbukqj9dgrev9u2uug9c235na2u1kb46vys1abw7z38xyotwyum2cp2lwk79adc96z12n5wmhxzcx5fl4783lkrr7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"r52b7dsj0dim2r93vzb\", \"zo50t6x567t9cadvlvb4yr5o9d4vz2z0t2yk4m8gzzz8d9ss05lxmlgdmhb1bbkge\", \"l97tiozkzapd8dqrtnga26w\", \"ivii74rwmfecq7o29d9yx4yf4upmjerk1651hj7o60i1w4kr74l3ahp2u359\", \"2cdw0hhumfccviohy7p81fk6htjx1psblzsqytc8z92h3r6suzbvpcefnwy7qwj93gef215h6v49x9zbnfmqmfgkz54m3i0h50s6c7pwsgzjjjsde04teunedvdpmlq7i75uwwz50srw3oo7r9v0nq9brfld62lpvgr4ipo1clwxvenr\", \"wi4crcjv2jblw4ekdp7j252v4iq8al0lnbnlpe5a9m5wjqh0pig74q2a379nw2p9hju6kz164p948fhx5cclw0kyqk79qx4chkru0ilhxi7lv08u\", \"b6a424kp76dn6tlj8jl7w2yeflti7v\", \"x4b971irbap2qqs7tbzll5cgsgepnl1q4q7bxn8hugzs5na64k579yukqegd6apcp3mvkvwel6p52au9g6fm483upmn9ymic4jspjkgd217tcozcrxlth308ybjntpmz1a02vn5rf3zdhon2bxo05ov7kj9mjyaisr250zv8r9n8r8kobev0v71njp1292icl8fu\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"zvbi4vjy5n45k2jphaqgn24y9sjhewmkecekvsh2576dmuw0q1t5ioz5sz3kbs72hjf8kov5du7o00y3ggt6m9hiuepquqkjdvyw3l1cig7gx26elrl9eki8g3gt3psusp0ipx9nww6k2roi7qdlr2h88gpn1tskb1zgyrx9vzc8ifnbw8p90\", \"5sp37hvd8w2oa8xa9pc5peewvgj4ow1an8unku87n6ht3ngozqpw6gqofmetmyyju3ofvlzxowq5ih5ull56gh1hbdltwofjbtqpt23jw6krcdz5m8gsuyjlcz0hvuhet6mv8rg1jokfxzt8r0l5jy09dm7e35rjxmard3fqgqb5y0c43cxpxld4nnp3ddlj3xvo03\", \"3jjarjf7kiag6hbqblbn5req8uye30rzz2r434r98xv25bk1oc3midff1wsewmicwpg48hmbeyra6u2l2dnks5t7pebbiy7kei4uydkdip6t1t3ao\", \"8kj9ek2ym823ukwzfiysaj3m51yx4krd53fgo63e5a28w901p1crt8wnqfktwrcea8arip4cdooar0m7fdfwo1enu1hj\", \"rh46ou940hzeca89fqqvv039k23jhrqp061\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"2hrwlo1b4uifdr9ngnwt3vpocvytbtkgfnlledx042g7a123nnfbswuhysk9c9j3lvt1nsw3y9fwwpa6ht55ftbhsb2ntuenbmezp7of001wo363waydic41wz1feqff58hh1wa8gauturgzahf53b0lx08w6ng7wkxxd5n66s55m5e1\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"7bbv5anocxc3ukkbci1gzh064515p946nhxx3ql1lr1ubwka52c8ize94snwo94xrrq78y3ow3\", \"lvkzu8jfv5apm5yh35m1tj16ru8j7sftyxob3lxkykby5t79ymtm0\", \"j25iwfw963q5uzzs26fjxg5jjolo76p2ug965l47qhfe\" ]\n    } ],\n    \"service\" : \"cwcn7ajfsjqxmonie0oe1djptyxjj27tfapc7cn89\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"l7a72yrfp502zytbup2jb7tbkj9xs1znmaena45tbedeoklvmhyq6m4t\", \"6dticv9gorhb80x7ff27t1sj5eujyn2xdr0rl287eayngshxsop8ltou53hu323u1342qzl2a2nznig5ktkitfow12cw0k17xf23p54om5qnnebopnmhvxcxzqgnkb50xhmkgsma8oruwh4pd2wwc23mts\", \"1kjnq7byx17namlq44cxouyiqeaent906tzmzpmmp9ycopqgyls0gn81pxt70kcejzzbilv0n7714z04ostk3ww28bw1d26o1p7231sqwidl\", \"tg7zljhnhjr6qx8yl3oqa50o0p5ukm7st0uvhcs6v7x1xuo2ksnhy4qxwr95qm4ex9xis3eeu5wd7ao4tlc2sbhhv6s8yfoktjpipnfj21x35wbfh1v226dbdovhv8pi\", \"reklsqnnqak6lnyy691dh63gyujschsb9bnsfktkpr0a6h7muty122t93x2xc7pphrrkorndilm8ji763qbdsx5sx28yev0132clfvj6tf2wqt1vuj5oewxof5f7onifacqf0dorrwrvsix42av7smp5uqd8wnp9v5pawlfv0eboien256\" ]\n    } ],\n    \"service\" : \"gvj63dni9j5epl3paqyhqoubwxswswi54c98k8kio7x163k1vpo32fq54m5mc7v3na7bgjkgq2fzmgd607vwfbbh5bgoaon\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed1e70d5-9722-45dc-b50d-a0cf8b47f97b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.179246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "47d09311-4608-467a-acc2-ccfad74c4ffa",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/n6mm7xoiby5opfycbnp5f9r7dihjzhl4i0dva1eeknu3k3wtiretq2hrcz1nv8szar8njo1gwtlatzww869yuhyzajcl3murzi4hy6tni4es8ruq9rerdke:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"zwrttc7176ol7kx5oloblikdtxv7iqyqcqen3d5uj1azvlt6lkbnfuf9sxjspa262se7o6ddqsln12tyqlhqmsqggt2xjuvvy12jbvslssx1xhxp6og5wdq75iwdp\",\n      \"description\" : \"Quibusdam unde quia laudantium natus placeat tempore quisquam. Voluptatem molestiae in aut quasi saepe. Sit explicabo aspernatur consequatur qui eligendi aut quae.\",\n      \"location\" : \"00is885arl9np7wba1zpev1bdrcv21kss2h62l9voqxked8gxmi167ih4hwbix22i71flqt0qg5p63ecadwo69bvvbrxfnld4hubxlqf6jbi9ym\",\n      \"title\" : \"Possimus et quam ad architecto laudantium tenetur ut.\"\n    },\n    \"role\" : \"myqbgi11adfqmp7g8dmsl35o52hvhkbo51276vq7wf3fwyjg119j9rztiovvbzqwxamuoaaor2wfblex9ce7ymtjhmjkvne2f8hjdzkglg9unjxhxylzh2o6j1r3j882urkvfykwalvl78aqwop7u5\",\n    \"members\" : [ \"zm86u2tz84xja14rmmkedich76chjoagua3qo91nun5ofsyuch0is3oi9vlxpcg01t1g4yhohho36vgfxp2r1ct2mpwhmysy4nuwzkp8x1kh7oowoa8n4x48q2aif87ow1zdcxklegt29ws7x50qiylt5ma88391fefk1j4ews5aojtrn15937g\", \"swv9wrfltnj2qe51auru9w7soxfz4q3r0\", \"c7doebl6mwskxpxg0utq5nlxe896d7lygkny8clqyta3utoa0egf5vdiqiwa52h45w0nsxru4e8pi87qr2ckey7j7ud76toyk5wqfyhrh157enqf62levjmmlyce1j\" ]\n  } ],\n  \"etag\" : \"eeeex\",\n  \"version\" : 139087151,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"cdj3pfpk46whtzva3urk5uiamlhbfuvffxpcqg2qq88g4r2qg9hwn5uzqidv3fstld0gqr5z9k6aayfblyb02dmqkerk9lrb\", \"n7eht1rvoe2r9t\", \"ex01n5xg2uhgrie0o6hrc9e943thlr409f5y3eftubw1if48v1e3mu92il3q4rycgxvr1aoamdxkzow9bave4vbayey4wisg62b18um982m1fydt0wj0unqht15d9c1pjqlzde8d5ohjq4z3nwnc4p3nav\", \"esg77pripk7wc87sbru39rboppam6f7gov65pv9b5ovz9fp7yn79ugvocmewe92jk5hr8jx8gnsugqqcljdcnhdrosa1uxb2bxdc7vt5fdnldkgy1gb4nnss6cl4xnngh4h5gxwap38qwnalp132tiwi\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yeph63pxxl5iu2909o3c8kblgz60nt5cs4z8uiru4\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"xwh17kohawof2nl2pjergo1b0h7z4zer82tr3cgtxju5vn0n9pvd23ppj3kmu4\", \"74494ryg0hcbm79fzuxrpi767dzdr35bgv64szlljxnadek4tq3are0a2js0b35a94poqdqhuh4rnt2726z8\", \"vjjkgejvil81xzlmu0dh6sqx9o7opgzcbvk4w24c04kx0wrzap2lr263dxq8bvvsfbytfo51jleaqat6fpdwd4fgkfos7norzkjisgc3bktdw0fnfcb43q94fghblfwi7mt7wcallp5120dltiav6rsnoi9p0719s\", \"mf1wp54k0wbewpcq134t4nn5tzuo49yhz2xnz93esqrgcxz5wwzzaqkhv5afxf\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"4s1w90bm64bzi\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"rz2o472p406ec75yf43i1fz756ufx3oxk9z8lyroh6exf0lkszo4fpsu5caan9t3giog7fm1eq\", \"vas4viek6fl0tqb6287xhz25uhcpri97da6j2si0qqh0wqofdio8j02ofs845wt9h7n3sdmzub6zm2y8g73mxvrh28rr4k5f4ccwcuyeomgz87o2j2wn5mj3ebtd2ical2tac6apri6tugg4r4a3t7tm7toglm2k0xdsahb6ochx4sdz6\", \"t0dtfte868ny4l23gsgtbik6ju7izqs6vxyvi91x7e6rndgsnzc1xacdvic2f65tqewmiijr0sfr6ainhnfrbsh0spc77xgm8bdmeiv7zc4xjlvpbuwx2kq6zmgzqwhy44enifvll4ztek46lujesjk8i\", \"7pzxnrtvfmqjbao9vx82p88t0greqawifxn3tpns92ft36kxbw7x5mxve2mr5xgq04po8lk0g6v87ppie52mgkbpge8s1163qg7qtywa2cur5cd94zyyw2mcjluoirqytyeskuranu58e5\", \"1m4strpn7azu2p8zbqvcke70u7avzov2y1ecfnlxfxv8wakopjuxqm9pn0fuzkk1r1wed2lxlm1snbpjzkhgt29xorgpiqvei4wobgi257xvbn0m8drnymq1hv1kcdhcusm4ksahs7ocvm7bcyp9lbi8yjufka26gic\", \"zvx9efa1jw6mjxttipghq4tn6cviwgmive7iv800ra29l6knqo9v5dvzukv95wx2kqz72au25w2xeaovyxuvpaagfm8b\" ]\n    } ],\n    \"service\" : \"svtj0qohg0p4ya0knxznpp3mzwzszxd6wbgvbqwo4ke71w7yi41jptpgq1im09faj1ws1lhrzqxl9n1y2iovziehzql\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"7f7pa338tzcdl7sf3haw3tkoo0ghyu1hmyb3igqdbadvzqribdcsep6s9cqqbkdgw3fs2o1i0hsuogay4h0ngqtu6u3j07wadz4\", \"ywyb55u7q9qon0k16hbx832n9xmihj0zwju1q9r0yzza0h9rativcgji06q7lju2le7pubuyq1vn9eqb4kn51cdzxaal0h5w85fapbbsdcpczjdwhlx3vuj\", \"jts4n5ylk0y3k318drc3acko58s4po4askg2hbqi9x1jbceyiyl4ndmd16zhmdn1\", \"7jtj8uxbpdnhs2chrh3kjos2ecia1arks2r88bdeijumyzc4bo84ythhihsxvs9z4io0bst2jrpftrta0a6t7y\", \"ldehn6u9gm1oj65a6gg8kayrpgfonadgrefafcxr8isybvn1gj9p6lmx0sgymsdzv9gwhxidqicxsnzal3bs26w9idzvm4m6vr8ug94sy1sheklfi9y5s73sscxzdz34g\", \"o9lwczouwfp0esuw8kw8tkixx1putdpkxmqqweigedmoanhlbuouh0k7lpyxits07t23a1giqt8z9lsoevl6erb0ybk6g5tn331iapp22tl27cjx4lep3kjfxy17nss3\" ]\n    } ],\n    \"service\" : \"j02mp3emccl8tmt4mxx274\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"f0hqvimick138kgqvbpes1w94813ndw\", \"hzppeol3x32nzeqfbx3npgjcglbpo07x1cj3bmt2ze89if8g14rxt50tqrns4k68y77mvnyf21xhhfr3i0b3j6w39bnfcpf810k703mp4eloma7ozkegvt54vfveag3p476df1qyoy\", \"jw3t9u31lln8pthk5fcz2vtuo3ugjlrflsw1314o15h6oc43xgo0s8be2wemj\", \"6c11nrrzn5egfyp82cl1q91ztgoqbw0v24ygetuy8esblj7lw2we0ynchx9mmihkcc4cpjk8fl2pq8gr9e6j2y6y8n33tjbk6qcti99n0qmd9i12tr5a73hu0l3vhjvn0lucoywu3q\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"nv9o3jfuax509isn55vk7d2t7fwjcptxvj5phlej2f8ogpkktea\", \"kdnygi9vib1v67bcamir66gimaceezzmdo4bjhhfyywlh5yuwlvaba7ql6qnwi7d0inhm3gp9fhtjrifl504pa4ak6n7hnnlltj\", \"1fo2au7uyzwskvww8xcu3dibyrd5aep4tol1yefd70m7so33xt2w0c5hxajh34ntg48eq5hkgjeh48pbq73i7foypomuq72xoodeo29jouha7k7doelcibjdmdmkncrt8wso1lgzs2f73b4o6ke3qj23\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"tcuxtqlsnuhuovxljsvo7do0sccrjcjz1rbpsuautdonq5bwkhng58k2k4bqhrx8kkz5yxfcr2d\", \"exygtkjec3xm5ero2f3dyhc3alyverjuic8phvsg9be978b3e66ivr8yrb0lkabp7bmzftwtjgwbmxg7cyf6ipa3f4l31b6rfpzv1okzihxsn5uoor2r7mtze64j2cown7f8vusx6ijbpo8e2mtzsgboccuz\", \"tpgldsmhyp71umgy99jd148ncqo0ngxnhwe3uqj4i0ruya22d42fkwq90boc240h9v69wlr7r99xcns771o0j2sxo96kxute2kwxwr5um9i7twhxkyv8pyb873c44ncusitnxtlx3un3j2ykwm2kery\", \"aklat5cozfm8vs21xnnrxpcvjj1tour1tzshkrtg0eg4ydeu2hewzbgx8q2l4jdbda765950eu4kpam4i5v36eig9c2e63ppewk2q31oyba73tv2gnsu2g8dxc7tfq7kni51yx4nkoi7m9c8hyjaf\", \"4236dhw7lp9th3sacforea6bk7utw7jbj8jbuiwkqz96wntf9kiac79fi2nt3n1cw3tef1077ivax06k03s2y4jnjizmf3uq4b7bm1o9ofv9gg35n51pn4d8x10cvg5lrkr9iuzi1xx3yahcf2donjip6olr8db\", \"4hqnay2bcpf0jld99nglor7eoxwvw9mox6szx4oe7g4m03uvmorau6m0smi8j2hsf0p4i501bepu3o36ugidbzlsbst0b5x7abbr4jjru5c94zvddn9p\", \"pfzxuey9exn7c9cbvr1uiikyjnu0w\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ziuozs2lb1ipc6w4tczk317w5e50kl0cpz61jv80hbiqzful5smmkmqf52wchf0pn3knmb5hutoi22\", \"7yqda03v9v05pcir1bjyyrq3ggj00he9b0ssuny0spz0uxlga38zswzne902i1ee2c10njfyvlvui5njsvuum1sci6mw1mzcvlqkyill5sedkcs\", \"tbojnqkhd9jpfc2dxhvhv8wkk28o9frrsmsda3rd30xzub159d1i742gwyx6u53ma7sarrpmn3fiel4xqdx415uze4\", \"n57kz8b335e6z9lebdbbrhgf3ld14k6kn8skyd6wdezmuln6isoao4kvvjk4z3jk\", \"wjvbszyy2aajrls0msnochonc913nngghpl7e66ggqni8diww085dvyt6ojjdpnsxgajekjjt4\", \"7tbnd4tqnbjh06mzxw8gedjnictmpn7pyleo3meyv59y2uk1ocjezqfmv2u9y0d2dl14qctxugwbjwc37l319uyjq4s2fkwyqdkj3qp4ehk92fw2wkltq09qfw959jt5r52txto89rkrwoudumgvfhsibodu46y7fpbr1ko61lg50u\" ]\n    } ],\n    \"service\" : \"0dpm24nu2c6fg5i5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47d09311-4608-467a-acc2-ccfad74c4ffa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.177464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "8f0fda42-9067-430f-9cb9-6557f6e11cac",
    "name" : "Creates a new Connectivity Test. After you create a test, the reachability analy...",
    "request" : {
      "urlPath" : "/v1beta1/v97uvdnqqks7rfqeh29v9u2sqmywaxt08r0swo37vka6abkw6k5cwn5rj6e1fqniqiv2e4t2mnadp2psxf8jmgr6siu7f4d5gp7mhppa1mw0j7a3bm66nv2cjxrk3x4c3ix9d0z7mhtjr9xvrm9qyehpj5xubig7lh5n1brmtnsm47vbt26fd/connectivityTests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Phil Reynolds\",\n  \"error\" : {\n    \"code\" : 1260436225,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Quia pariatur neque accusamus accusamus porro minus. Mollitia sed laudantium mollitia et sint ut. Aut et ratione culpa architecto. Est minus deleniti laboriosam. Perferendis omnis et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f0fda42-9067-430f-9cb9-6557f6e11cac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.176701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "a01641ef-502f-4e2e-8d48-992941e46091",
    "name" : "Lists all Connectivity Tests owned by a project.",
    "request" : {
      "urlPath" : "/v1beta1/39qiqzfnkc5rxv57q/connectivityTests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"nd3v1wq30tzw8qhzmv9uv49tcnpyy14xeoxhhh7xp303b4mrdvqfqgdbiht3geur6b0vbt7rtbp3ev07heij1pvmhr\", \"pmifahdpjfhmq806w29d967vaklnb3ciqoowwkrcfdvkk131eve0pkw3txd337426glaexrkfe6glp0ixvki7t4xynvsy48ytlspuwca6toq404mh2un57r3h5jzuige2wz9blz9pvzpmy2j91eqa0yke05zapp6vok154z54blu13n060ape6xc8zdfi5vj165645\", \"3a17eogjq1gkv5iwdr4wfn4cw8siqzyxtjqyf45tq27y8v2gkhmw0rhjfoodwxjet0ir4x1696gz9rc3anxwzrtj2gyuh948rji\", \"n2fbfixvu5pyucss4ji3dozq8ou9xjd1177di5ckj0w6rqv16tofkfqn2fnq4xp59s39qm1e2g8s4xosfuwwi8onz\", \"c00m\", \"yyc8wlteg0plko5ko4a52z61yw4e3fg4lsll9ojeag5uevcl62y3bezhati5vps13m9tj9kqtml8pb6kl1kfbgcm4p62030hzc5cvxexcpupok2flrmj4dg5lbg6t1m48ykbl6xhvx\" ],\n  \"nextPageToken\" : \"gqlu4jju7cu6afovromo5c5seu89ddblg8mkgw89ocdep1nkdkiofoo3q8ss0qur4vp7lr5iua492loz73yrkommhj7bcbutm0nvr10ne3fipx39q2bc03r7lig2suqji2gjy49qjq6czr5ld9lhnj0sae6pc2bepeg92i2ejo14q5db5ngg5n0hqvrz8\",\n  \"resources\" : [ {\n    \"probingDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"n8dbic5vhy8wm8rlxbe4uze401uye8bx57xvhajjl4o1xuhljbf4vj9owxn64xlro4fwt5zr7g6g7g1lcxgbfxshpe8uv2pr4xs7ebf0mag34gizwr4a2ow59nnnylfq18uz4xs48utni7qpfwxwhmc79n\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"ecpjehfe8qowlo9aihk0feuuqj013nxtupzzpmj756i8gru29ffarnowvbajuy8nc47ccf5coptdjyzcytbaho3txii4f3rt6rbsl3k15rcvf12gf108s4khqml9e6vzicu1ralbvurufhc0yp24lkmabkh487zkec16gxw64ouisxsbgmpuiib7cvgmxnc\",\n        \"destinationPort\" : 78308352,\n        \"protocol\" : \"62s9gaj33po5g3a9y8spsunt5x4q3sc1ggyb7139gxglgy730szmn48f7cg5lelca57k47l5dp87updkzdkrv75y\",\n        \"sourcePort\" : 825002019,\n        \"sourceIp\" : \"k0lunhxfmqte8oogyo1kxcjqq9gp24j7ubgfp1lglk2tc3z13f26u1ctjfowm33sq1weanwya02c0yh3c9mjchhvysdkciclhzmfmzddgspa1w27ikvlv23jb8nd8kelz55n1a8019j\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/164075\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/947610\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/141609\"\n      },\n      \"successfulProbeCount\" : 661149854,\n      \"abortCause\" : \"PERMISSION_DENIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-11-03T12:14:31.173082Z\",\n      \"error\" : {\n        \"code\" : 54013684,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Eveniet sed ut facilis et corrupti quisquam. Ut impedit harum dolores necessitatibus facilis. Porro recusandae occaecati ut praesentium et cum. Vero dolores ut dolores fugit quos. Accusamus ratione et\"\n      },\n      \"sentProbeCount\" : 981822057\n    },\n    \"relatedProjects\" : [ \"xud537cr9oec2x0w5bm4ekp7263nw7x0mnvtbixg6x639r1l59bylbbxne68u0w9bepv2d1n83pjcuym7xpivjauvxnrgm5vqh5tq044f0hqdaw9e5ojide\", \"xoiov2d67e09dk1gu5sarzfiu463cak51pzb198i0yirixl91m48u9wqai0r11loo2sk8njk009hdflh6x9mmsangl85yjdpj9f1b0dwuzv4gquv487u0tdr17alh\", \"emsme4p5ghxg94uz0m2f2m07j8v1uhyj1oqivrdxjys7yhg2g1h0w4zgy66bnx9lphz2strdkabw49xbs1x0srx02ye3z7lu9x4esan63qyhaqsmn5ud6vb3e3xmlzhz3rrigbdb8im8pjaugvdogx1w1ey1teiflp51b3wh3l9r8suctt06h4\" ],\n    \"protocol\" : \"z1wqkazrgxp6lb7m62z5gcqomuilfwfczz25t9e94t3coaoctawpzzt28iqlrtg4p2gbjnb28xjad19wrukq9wur3\",\n    \"createTime\" : \"2022-07-30T13:33:31.173227Z\",\n    \"displayName\" : \"Walton Romaguera\",\n    \"destination\" : {\n      \"loadBalancerId\" : \"n2t0\",\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/149667\"\n      },\n      \"loadBalancerType\" : \"INTERNAL_TCP_PROXY_LOAD_BALANCER\",\n      \"instance\" : \"n2y9xp8usfrhgjy6yey6bae4kleufnvvvdjazqom1s4xy4o80ce9jycwp1c8sb99jyov650fy4ketxc82d0uu91nseztqdswl5\",\n      \"cloudSqlInstance\" : \"x787pm22q4s0ml65vow6swqbxojud22mncru27n4ituv03alyttafvxy28j9nxxx0jegiiwp2fum7o48msj78u65anme31rd7ywutmyj64u6h8va63birg9vrctxx5xyevfbng4c2inu8akrnodiya7iuk2bmq6groqb1v32toia7nn79ml4rs8pb5ab9k3zv48ze\",\n      \"forwardingRule\" : \"svjuckhw6gmzxt7eim\",\n      \"ipAddress\" : \"gax6jt5jt9enj5nuyg9o1uzzxgokvmy9tmks2f3z38ys8v4j13n21ampxwo4mdki1p2bkmsreimet84k46l3b5trbxx6z0ght2qf3avdp8\",\n      \"forwardingRuleTarget\" : \"FORWARDING_RULE_TARGET_UNSPECIFIED\",\n      \"gkeMasterCluster\" : \"0vs0m30\",\n      \"network\" : \"ca7eand0itjxnby0v6oilax1fhjxnkbkejb0svriby9qxj6ehxvxinle1n06ig8fhluaib3vpan4q9b0aosjz4w0pmkixw54clu0l4ej9\",\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/792575\"\n      },\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/017590\"\n      },\n      \"port\" : 950993245,\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"s339\"\n    },\n    \"name\" : \"Michale Huel\",\n    \"description\" : \"Sed officia nihil. Odit quos vero. Quasi iste inventore minus quos. Sit similique nobis inventore dolor minus non.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-10-17T15:06:31.173969Z\",\n      \"error\" : {\n        \"code\" : 528333093,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Consequatur ipsa beatae sed. Quasi ab aliquam. Et laudantium et qui. Sint quibusdam rerum vel neque suscipit.\"\n      }\n    },\n    \"updateTime\" : \"2022-09-01T13:48:31.174056Z\",\n    \"source\" : {\n      \"loadBalancerId\" : \"v7li\",\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/311333\"\n      },\n      \"loadBalancerType\" : \"TCP_PROXY_LOAD_BALANCER\",\n      \"instance\" : \"7jkzq4w4rv8t9o8nrbono3ilo30hzxfcabm5vwc2lldxly4l15yyzmncfwe1hgj1t028h3jjlron2oe7p1whxp4k41cdqtd138ybz4b31jxex1ndnvg5w6shgxmlvfium5rq5kc2ywd3tivuzc402qgfzorv779hg66a4j7vcae5eeh4hum6aczaxyxyu18yejh\",\n      \"cloudSqlInstance\" : \"t6poj43bzpw72w802jhzrkw0nwg1k2x77v2hs2sr5\",\n      \"forwardingRule\" : \"c4hrq6avvojbolu1f15m1eg66ueg0j413wx6ey2rjrh6duemzxaaqxkx0kefvthek918pxnajx\",\n      \"ipAddress\" : \"1pl4xt6odzu0jqedl2h00gf3s7a8fj\",\n      \"forwardingRuleTarget\" : \"INSTANCE\",\n      \"gkeMasterCluster\" : \"euyaeplkegcm4o13su0qkd6w1krxsjmew2l6c6vhq5hbx9068t88bfn7r2aaow\",\n      \"network\" : \"iec64klpacisznp4bshttl4qx67vyw48l2vykgzznifn5ddqfj711r3huhqjvgw63j28ayw7wqudywm60ehmuhcc9f5d09f6gl2g2tluxsjilm46ighnpqajld5rqpt8wj0eexlwivabiq7ytopf43q0320a821n733jx71c\",\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/087405\"\n      },\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/515657\"\n      },\n      \"port\" : 959700067,\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"5u8h\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"x4t3kbran4t0gz1ti2hb1y4sbg8rp43zc3x9vx6jbx9vemo3l8n8toki1p2q7njrkiaqi8apdgkjyal60dln0p4f0igs0666vtiohjyrysewqlf3v430twdvs7ndht0x7hz\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"0z5fsk\",\n        \"destinationPort\" : 62354231,\n        \"protocol\" : \"4zh15cx3jfmxtkwgw82tgcd2if5s2l1fql1yuu5x8oel0qtjgs01968y5x9dest295vxgbok2sa3p4pz23f0ps0ocv1e93uckpcawka6be8ownx3kpibd5o4r93cpcm81u6r0xi5the8mbghgzxpgzda1glii76getqjq\",\n        \"sourcePort\" : 841479362,\n        \"sourceIp\" : \"2ohekto7v8vn1bo861s4tgjrcd0bxhvfbj4nh926memjxtvq7b0zrr99mfqo6ngplqi3y0xrs4ofqgcg8vomtjt72m1firew23tm0rcwl6adazzm13tx9ppqm7iu1nn1x74ffaljmf\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/607711\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/103667\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/222465\"\n      },\n      \"successfulProbeCount\" : 2025819923,\n      \"abortCause\" : \"PROBING_ABORT_CAUSE_UNSPECIFIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { } ]\n      },\n      \"verifyTime\" : \"2022-07-25T15:27:31.174879Z\",\n      \"error\" : {\n        \"code\" : 892600913,\n        \"details\" : [ { }, { }, { }, { } ],\n        \"message\" : \"Maiores facilis necessitatibus enim. Dicta dolores inventore placeat sed. Ducimus dolorum id rerum voluptas quis mollitia sequi.\"\n      },\n      \"sentProbeCount\" : 438437516\n    },\n    \"relatedProjects\" : [ \"e0i3zqg597nl2dyqy7zwvbuepjemzf1lwdi8n9ozg4xx75u93bqkdnvn4t\" ],\n    \"protocol\" : \"whusxpacmiolfszqh9a04npk4xpcwgggn5cxx3isw3zu0ovcp8qv1egyei\",\n    \"createTime\" : \"2023-02-17T13:22:31.174993Z\",\n    \"displayName\" : \"Ocie Walker\",\n    \"destination\" : {\n      \"loadBalancerId\" : \"p26b\",\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/587708\"\n      },\n      \"loadBalancerType\" : \"TCP_PROXY_LOAD_BALANCER\",\n      \"instance\" : \"48ztu7rtae7hd2mctjx60kem2vbmoh6d297qpgq2t0so3awgfnddr7yhb2bzw7xh8lt87y68ess1uswcrpurihq0ob1d657h722s5xng0ck0kfamitwdma9b4k\",\n      \"cloudSqlInstance\" : \"dtwiugb89z65zn0usltplzj1tr1uzslpuek12wpsgwnhw77jnl1n9n3t041loxguy9rbomfkgdnsdzcpvkmyp8liihqilwz9fdj8kmevph6z99meduwmut51v085dkyec4ac6piabvgvgj6tetlz\",\n      \"forwardingRule\" : \"dfmp6evqj12w0yr0ysh5atm3p3wukrbox2rbxnfd2xs6lao20a2lmneszxmhjmln83trrn0vdiztrxmv8x9fjk9ar5cw81d\",\n      \"ipAddress\" : \"mlxydk3wbwap8qvi3de\",\n      \"forwardingRuleTarget\" : \"LOAD_BALANCER\",\n      \"gkeMasterCluster\" : \"osdzpq47c6vqhwuho9nhoxbwfmugryyp6agr1z7ens61uq4ngg21paq5ngofmxj2qrdz82fqi4cyarlfpbzntcldt70b298ydhqs3z1wgv29n70lf5gkwtmpxfduny2fe05uvmw2yc8i73hq12ejm7cofflpjlkl\",\n      \"network\" : \"7fp5rhidkkatnowxp3h07wz7s1fk80sba2tdo956v4jlalcw0vtx29y4v3hya9pkmrzae4iwk6bzk6sfuxm84ginvaclt800r4b5lryd3qq7l8zs3zmkms7oakcg0l8exfpqmd0zc0gy\",\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/836015\"\n      },\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/325995\"\n      },\n      \"port\" : 1434707897,\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"3r87\"\n    },\n    \"name\" : \"Ms. Florrie Ernser\",\n    \"description\" : \"Repellat dolorum nihil voluptas rerum aut quisquam ea. Adipisci ratione magni autem omnis quia iste. Qui doloribus qui.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      } ],\n      \"verifyTime\" : \"2023-02-22T15:38:31.175687Z\",\n      \"error\" : {\n        \"code\" : 1938824348,\n        \"details\" : [ { } ],\n        \"message\" : \"Quis id quis. Possimus rem nulla magni in natus praesentium. Ad recusandae ea beatae. Explicabo doloribus id quia quia error atque fugiat. Animi sequi omnis voluptatem maxime incidunt debitis soluta.\"\n      }\n    },\n    \"updateTime\" : \"2023-01-09T11:47:31.175775Z\",\n    \"source\" : {\n      \"loadBalancerId\" : \"9d0t\",\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/227561\"\n      },\n      \"loadBalancerType\" : \"LOAD_BALANCER_TYPE_UNSPECIFIED\",\n      \"instance\" : \"cg31gmha6cvohd001ubl8p8q524kx3s8bi3qq05ki9zc78wbaanjfvg5hgd9p6pj5kcynq2k\",\n      \"cloudSqlInstance\" : \"nshf7htej8024rgqrun7jud643z1n61n2sdggcw02y6r1iqjcw4rvnmmyuuck9ij3dvcgq8p43btaimka14lb5fh95tdmjro23q5y1qotymvj3p3nuzpw17w1thdu39bbv6dbrytdvjan4rah2pq2zzw2hdgrr0j6x8oiik41bri\",\n      \"forwardingRule\" : \"q18jjivgw1ep0krdbgwomapg2di4hpdr22gt30ug8rp66w376jx79xnd9xlze2b5m8fim8sff3cziofsodwba70q162wlgiiwcbu2u700ih0iamt7\",\n      \"ipAddress\" : \"4oxf7sf3dyot431spcpwmkqqlt0w6xykuoadaorocaxhp86yv9tp2k0d\",\n      \"forwardingRuleTarget\" : \"VPN_GATEWAY\",\n      \"gkeMasterCluster\" : \"97r21u012a4ebevges83qgoxl0ob3iu74s0kcjpk6cadycx2ne82efgl0xae4xo4cfhwyhql8tk4xvnbf86cqoq7n3ttebv5mtwqev2\",\n      \"network\" : \"zpvweoeqnv4d16r0alhmg9v86wty0t94ed8sygk1wn4xvp14eunm\",\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/865058\"\n      },\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/380161\"\n      },\n      \"port\" : 214665988,\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"so46\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a01641ef-502f-4e2e-8d48-992941e46091",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.176437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.list",
          "schema" : {
            "description" : "Response for the `ListConnectivityTests` method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Page token to fetch the next set of Connectivity Tests.",
                "type" : "string"
              },
              "resources" : {
                "description" : "List of Connectivity Tests.",
                "items" : {
                  "$ref" : "#/components/schemas/ConnectivityTest"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached (when querying all locations with `-`).",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "1853411f-c3bf-4b69-8f02-6f9bba53a852",
    "name" : "Rerun an existing `ConnectivityTest`. After the user triggers the rerun, the rea...",
    "request" : {
      "urlPath" : "/v1beta1/Tory+Nicolas+I:rerun",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Chandra Crona\",\n  \"error\" : {\n    \"code\" : 1509832667,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Adipisci ex eum natus cupiditate non cum deserunt. Libero eaque et soluta deserunt sed. Et voluptas aut minima aut distinctio ut et. Ipsum rerum laborum earum blanditiis. Quia eveniet perferendis aut \"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1853411f-c3bf-4b69-8f02-6f9bba53a852",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.172578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.rerun",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "5588babf-6186-49b5-9034-50d599a58243",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Youlanda+Terry:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5588babf-6186-49b5-9034-50d599a58243",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.172337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "cb985e0e-07e4-45bf-a9ab-425f540d7807",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Terrell+DuBuque/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Priscilla Johns\",\n    \"error\" : {\n      \"code\" : 1667436703,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"In expedita hic iure et sed fugiat. Animi sit velit aut cupiditate illum officia dolorem. Dicta odit perferendis necessitatibus ullam numquam. Reiciendis voluptas eius facere est ullam atque. Voluptat\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tory Bins\",\n    \"error\" : {\n      \"code\" : 821067481,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ad optio placeat cumque aut officiis. Facere eligendi ut rerum hic sit eaque incidunt. Delectus blanditiis in.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"qh2xlko07yddtzbkb53iw5trk5o1d1ob90bjsgqemetw1vuxc62grz5r7j1xvgryi9m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb985e0e-07e4-45bf-a9ab-425f540d7807",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.172253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "67f9c526-2063-42cc-8fdc-a1938dace0e8",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Twyla+Stark/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bys2xlqaf9sp0o9txr2tcyocorqb5vcvfxdyisjoz0cpu03y1n2ix03sl5t78931o2opoinorhjn3xgf9hotjs9l4ykes6fdkcksuxomq8whvyrvt4bldvbx8dgcuhri9f9r24o6nifwc56e9lsb870ilnjxpcscls0\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Marcel Frami\",\n    \"locationId\" : \"u5x3\",\n    \"name\" : \"Weldon Gottlieb\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Darron Hammes\",\n    \"locationId\" : \"0c4m\",\n    \"name\" : \"Felicidad Borer\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Milagro Wiegand\",\n    \"locationId\" : \"d53n\",\n    \"name\" : \"Mack Zboncak\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Alonso Bogisich IV\",\n    \"locationId\" : \"5ny4\",\n    \"name\" : \"Mrs. Ty Glover\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67f9c526-2063-42cc-8fdc-a1938dace0e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.171901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "dd0aacf8-bcde-47c8-8481-9c296c39f116",
    "name" : "Updates the configuration of an existing `ConnectivityTest`. After you update a ...",
    "request" : {
      "urlPath" : "/v1beta1/Nelson+Ritchie",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Rea Stiedemann V\",\n  \"error\" : {\n    \"code\" : 1472679235,\n    \"details\" : [ { } ],\n    \"message\" : \"Ullam et voluptatem non. Nemo dolor ex. Quibusdam illo impedit pariatur. Est fugiat amet magni earum atque.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd0aacf8-bcde-47c8-8481-9c296c39f116",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.171097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "a7d26e86-5475-4f35-85f8-08fdc6183fb2",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Adalberto+Torp",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Gay Hammes\",\n  \"error\" : {\n    \"code\" : 1756975841,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Totam voluptatem quis reprehenderit est excepturi consequuntur et. Accusamus est ducimus corporis vel est ipsam. Ducimus ut id dolores dolorem. Veritatis consequatur magni laborum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7d26e86-5475-4f35-85f8-08fdc6183fb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.170879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "4379d5e5-26bd-47f2-8fe5-c361c1bd5f79",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1beta1/Grover+Schmidt",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4379d5e5-26bd-47f2-8fe5-c361c1bd5f79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.170543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  } ]
}