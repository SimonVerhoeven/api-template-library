{
  "mappings" : [ {
    "id" : "2b215b4e-7d6e-4014-9ca3-d7ae7abdf0b7",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/b1x03eyep37v9a7clbms7dwtfbg0f5pjmz00wodhzj5z5nt9miklxxnws3hfgffyn7ef8rgxdfqf8vf:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"e1fdy4lqjnmg85fub5kpar94fs01q84phx7srtl2uyxi9tukaofppuzohxlmfkjnqvizijab\", \"q4xrazdalx3e87p2apuvzynfrwb932bzv\", \"cwsvsudantdb1aa7x86ldac2enbivaqst6lc5zhyik7cpsjhjnpxmyvxwfyv5w0v8rfpb7p6gy8qziw1pb33d2kzkkxf0z012u2t9psj6vidjb9uojfisbi68bjdegnpvk1xhiifrkdsp5agvf\", \"lzxg8nrdwt3oev3eptp3fa6sv3c74ieq15uz8zcei07fas54yl4z3igt3gje2d5hycihlcuqito5fwqq1swk993o0myw24175xr9lnqpw8lrssuocn151te4xgvv202f5\", \"yghdn037qtq0cwcgbqx5yb3si95z2uuudrz4p3a144muihq9p3hox5khg508ylwxjw2seyuzednvpnzb0lsbd6ktsl1id3pjk36yztzphe2zgmy7dy1ak8v7qend7sed5vd7c\", \"39ukvamwovbfkfq8fg8h8nm7wihe2w9siygg3ymer0oilce2a9f79v9aixdfm9kfytfcyst65lsnyoou528cjs6kl59dx1l3cpcescwnwpiibsyiuzdob94izie6zeew6wum6\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b215b4e-7d6e-4014-9ca3-d7ae7abdf0b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.172833Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1a0b4c0d-0ee3-4d0a-88cb-0ed4936ec9be",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/qq6tsjzbcv0luswujw22wlrviuvah25mhcy36wwjvwsaf8xsm53yrl14j73uhdxewshmb1wtfygl0zp9h6uaa7jw6iiqyu7a2u5w54yq3na4j71tf376a9i94ez3tqq0f703ubak:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"xux79pujzi6kxojsztwdghory6g5qxpufk7gpad87b8imdbmi8mg1tsc3cvbpvik2v1qddx7xatts56kh6yeplnzmwydjisncxh1a40e7qn6nxjjfrqace9\",\n      \"description\" : \"Quisquam ea placeat nihil iure. Eveniet excepturi non fugit. Fugiat consequatur nisi debitis incidunt itaque saepe rem. Sit a minus.\",\n      \"location\" : \"9vgckq8cmzrebwb30nb1vm06p3hn\",\n      \"title\" : \"Accusamus sed cumque impedit.\"\n    },\n    \"role\" : \"4f6hdmbvg52fso5w4kenpbxllanfjuo5r1r5zv683p5jaxnz64wdqey2bczsknhco4l83gazmkmrj3zqwokyzybczyz8v4bckpx2yt54be2fknrgt704kxkuso7ffb9dl0mpni9wkmrh17x97qvoydtkt63k59o3dk0v37vt08f35geqxs9\",\n    \"members\" : [ \"ass84df33u859h48o94h0gf9t4jbq4h6s25kh7mtk7cbhbfqqdj453tyz1ujbl8r7lf7fsd8ntt5zd7urz1rmrmjcxb70dvobf1oj8x7ok82gj5dgw8r2wijq4wm6eps1zzsdji\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"5qswrth3ml2pyzcka0kv47fi9tx4jvr18zeecsmvgecvhv7zx921sw7vn3pdqjxsj9rt1dju33icu22jpsvzvmmbosoztpierpjya44urpxktv6csk8\",\n      \"description\" : \"Sint nemo vel. Aliquam error doloremque occaecati facilis animi harum fugiat. Laudantium voluptatem iusto odit reprehenderit dolor ut qui. Accusamus et et voluptatem sint vitae. Alias omnis modi sit.\",\n      \"location\" : \"34fxhj0riqscalqxbr7wd5jws41h8eml6pi5joxcu75pva13bp8lw3gkd14u03tlo2o15lv76977az18siwwynmz62lyyqa1\",\n      \"title\" : \"Sunt quia qui consequuntur incidunt.\"\n    },\n    \"role\" : \"3ktjon74eciu1ya39tholg3kissen6gm5w4wc12apu340c8wd8evyrf7okb1vodglgr3zd0jzewvqvojmzk6wzisnckvpwsgze\",\n    \"members\" : [ \"ll8tr6ltt6928gfz6zzaya7nuojtzc3hc4r615tc37ihpfnptbbupii6957d96byoj5tpzl372h3oikn77hqqft33ep73mu06rswy0uwhak6a9vmowawg5io2bnu6l2m8gjts4kqazlnjwwrlgthw7u85nsjt5tkvpbgoujpkmjluim743u89zcw42cytzgqwa6n6\", \"ytzp9niobp64mkth71p67nqtsobdk9hjkc8vsc7xfcbmb9z8vuvz9i3ovpkn1wu063pnphmaz001mfd8olnwavlncpbs4ndobbxfbcfqzgaw4zh9up4zzj21grhznlgzsusacauujap85pdvag7f4yjx\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"4n35vs2nlybqu8cyke9wwx4yv7fko9i3bnr3wu8gh0z5u0t6ns1ot9wb7aqb5udkmsnt2s6dikjp0p7lcxmut7awb2citxrve72ktrhs5csv0cq8cv82dzyi6ulfu8wbv8lehuc2xvleutfzmo5g725xoc1c6fx107g96enejg0hm2l1fi78o\",\n      \"description\" : \"Sed ut qui. Voluptas unde accusantium velit qui officiis non aut. Quo suscipit ut.\",\n      \"location\" : \"tj0xhi4p7go6cd7jtm0oj1xh6x6emuvtb2ng76r0c8bl11flbsafhxwshhzsorhvq898sd38vll0mp5547honvbxp7hxlrgd29ygtz5c9d4lgaty4v5nbfhylnqa157rrt2k98l1k1n6y25wms2d5v7wsskh7awjo\",\n      \"title\" : \"Ratione impedit labore aut tenetur asperiores corporis.\"\n    },\n    \"role\" : \"f3fffkz4oiwz1r4y6pw0453l9s7agfrx6sli655lptkvwt4x06xsjo538tscnsh5xv6kss8hcvb85zqr4gm5pw13rmmrwac3vo8l1939whxsqrdqahvr4o9n005hre6wdrh4fpz44gq4n7jadmoao962xnxlmrrkc4j\",\n    \"members\" : [ \"n3qquyxksq8amjkdlywc2799i054exehko4b1vnq04ee99k2vfh8dt75ve4pp3v1kyyntguhcuy01prv3btnpagz3cuj3xk1g54swyh0g2r\", \"4hlprc3my2lacm5psqaja5d187fdhlvcpijqclz1lwg07d4vbn7hxt4h9fu6ni16v79iecg96glat4hv56fwkxxdv7dud12lilbpzumx9wfg1r05mjh062lo8urnctsvarlbwb9byf69r2t2ubhkk8kyh989z7tirq8jnnhy8y\", \"f5wq\", \"bns1b63gkq1h8pnru234egj70o5t9bx499s23lqihvfw0t3kg9tbuqc1ntw7t3w4cis33jqlaga8hm2t3d1qvr4cgzrwj8r1jngj3iuvztxwpne4e773eta2yo1c8lxogucud6bv8nuciusm6lamh17cqz2yyj730p1xfpgs5cwd8k7jnh0yy6yusdm\", \"y7x41urqd3lp6nd0i4um83yoacjwj3vbr3nyu27wftlzxiwedockbuw905ia5nt5p91utthcwxtl7hiqjfr3qipgd8d1f6b84qrwdffpvqznnk4g8hhjpz9jmrraqu8v8\" ]\n  } ],\n  \"etag\" : \"laudantium\",\n  \"version\" : 1255687371,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hnt1vketdl9sijc0kqw8m5citd3ojbaoxocb1j8x69p401entnhayv2f\", \"nogwce8o8lbwx68l8hn32xxvpv1vt57xdn2h69zr604whjr6quym1ydfe8vh1l8vr7ffmyos62faxwpe9gnxkc\", \"wi225zcopanohzyzoznqq56fe0643f784mwm6fdergqicsvaagt8u5a0zoo3umfj8ixb48ldj5g6xh8u696lenme8fnyx0qht3gav4nstc1t84ta5c8emqzu863elc1l3edh740\", \"fvoz12no612egfma8f6\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"akuy6izxzjg3m19gr7htlxmx4j5n047246sy61jnugzlq15bpxt5z1kdmgw5jpsbcdgbfpre7zso2binkyebnjrrkpt2ilnfyw6zj77ko7og441s61uvhhhrs9m2smuiqchfwm8vr941r61787upq9mlft091z053pnnx1daw4eebbei93u0o\", \"iboiw4kz2wi6z9hrbv8au03o074exy80nzs7tlh9atwabf3omne0ac10o3oabftfwy9a8dmkoc9r8clr4ictvc\", \"kgrsqcn7bk0rsyg1xqi3ie1v5a6lkeuxyr1sf4uohxri7jz9tgflimj5nrk4w3nmlx3eb9o8tzo9ipzgsb0gv0iwx6pcenf1xybwil9f21ach0fcmkv1mkvhm8aq7e12i0vwo62md3fqgpg8iillhq9z8cn5ycla74kiay6gx3lsnap4dmqfh\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"yww9i0jxzzll5fr0bf30yzfy5aab9a8jjb1eotlasonks648rkswxjgigq2lnguhkru35kuxufeszcd76gu356y4etqnnmy4ls3gowm4i0jldwhjjbb090glsdskkho2iuxiqiocmvdrvbagulbje2o9owip8pkdo\", \"f0eu5d19twmwh6vcvmui44rbtz3hme9s8on978j6hcng3unrly1707f4hg\", \"nlm93z6z452hcjczx243taum3fkc4iqjy41sea39gcdow8jf4aktsnvvw691wb65ifsimp5gugieue35eh3nn46wkx2jxex8n67n073oemzwj7a5necb9zd89nuqfjrrymuiznzhw9ramo20rmfyvia\", \"t92d8dxovk0t5hs2qj0yty2qccceh833ipx8v8amgw4m6m795i3uk53w\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"g9e6tglmpx0h96usb09dypa0g6de4oa1yzgxwpc7mk17ujgof0n11ftoiw9un7z2d136r6\", \"r7d1ihimkjs82fol7ed4bf2bbg4aed1t757rcf8r2in5ayxha76rtmf2r2tdl8v1ebcsv64vhu3e8n126jkguav4dkcdhrmrhlxtn2i\", \"k4ru8pnil4y63v7cmg92jk7wlb6pl1u46728gh1zglk01emgyynyg2to0r19ayiqw90iq2nmzdwfme51vlhwxmo20pb1oy51ibnpbeul2qewmf69yajlqfqkvajg2lsbr43x9y0eig320wjmmggxi3etl1jzq2q17oypxyz4657eqr62gn8uno90t2zlvf3vfbqavqm\", \"bh6b3ulgp0zmf3l2uczkcrhz4xyj9j4qeo3uxl6e97fjrdgq5taocm3vfthf4cxc\", \"jzezjvhlk20ei2cg4kriqs1pc312\", \"3aehrrjd56mlxvoetwmtb5vbwfoxpkvbihtx9inwiewk1wiug96y0p53f2xhoauta2vba2dqlxvevfmf7ysjzoksihmvhg2d8buo8l9zm2i09aabgyf4oa3mu4tj2cz3\", \"vrh42xqouu6wa7crbt07co651\", \"do2s6o7m6xup3mciu5urkalbwv39qmfn9nhn9i4u2xkdurkbzfl1y8dpxzksivh69qtdq4cut14t10gp7njbdge0d9gl0ndo\" ]\n    } ],\n    \"service\" : \"2btljqfeyt6lbq2svr7mt2zu6ski6n79jg8h1vm1lj3fg6xiztdkwkhvw6s6pk5n0wpjk4b5lprli8g2ycernemnfl5z0091m3zgzranmzurfo1wk77rw24rgyqy\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"in55oioiyamqmatcbsnxx2y9l2gc26oz4gvo32pc26f9bq6lebsm1r03fxxb11ed253pv4hr3yd2xdgqozab5g7vfawr0w4ns9g3f0wdtmqeha21s418vc8xb2x0md8cih3r\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"y875\", \"w469f7o3wtx7h63nrc7m6ws0g33biwi4u90rqezjr7ra2d6y3d2qognzhf0f6f6ou2ltzm3n76e7q64c7rgw14m1eh0ezb9ifywpenhf34s21e7wjpoebkwvk1cel86succe7m3mwzngf8lgu9wng7xwf7v68l2s2t8gyis5lhwfolhd4d67u\", \"k8paggn1n3oc9cpj21guzc1hm\", \"cnhjto63pf7q859rqp6d8qv45xdo29qvume58oquqt17w04d3akrl6g2q86k75ovb7vgvhat8jxyksu4mjdwn0c7d8mdfl22gehhhyfo27nl9xxsyotiegoy3tmzmsv1cezgz\", \"5t8hlie2bsnnme4xfan6e0u0vh8hkdiafvt28c54hcco05torcnacy9jvs7osz8w9jredfxg5v5e4e8ia3s15m7m3zkmo010tp8zzax3ms3hpkzsn52h05e\", \"ldji4ls6quufwv5gse1qxrb3aacjws3j2ja18bl1sgr1p153l0dpr0o0ulcbeqqil0g9xkzy97rrt077zu5lcrciopib8ahfih0kjlx9xuroa70619esszalgj9a9m3hewi5pxp809e0\", \"jlvt4270l0t0hhegx5tzcgo3vzqi2dtkiuw4of8fflc26d9l157dq87zj8ygoxl3zrqyl16ezo5dt2ass0aga44ut1r049s6y9msxf01msa5h68gvpp6crbb7elg8de\" ]\n    } ],\n    \"service\" : \"a45qhakciwtpnnj0og93i4hxehaz8zlas8rd3pu5vxztabsn50ihg6o6v1c9nxfp6lpqa3j8lkxx6rwqsm0jkyogq1j9xtr48jd20tr8j9i27gdvhsfz6n510gnfm3d0h9g27e3z5kz2lx\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"cjt0a9rhtslrteu5p257me0r9j0c07klt4sjs8t5gia563x7bmwvkt0c38dkjxg4czisitk4ar8i9u0p4lyrjc8ql2xt9sapdvscsv2vmunbs5120f9sk79yfz4nindwuhxa64mkkzn4sui\", \"js97t2dzf6ho36e04huwgo6g631my0lnaw3gqujak6nhzalrffk1mq299yiip7kt1qnl2b71u97j2snl7954k3rkjx9y1umfs82qc2a2qlgq55kkehwp709ucgkp41hg3oe01ysfmg6a0s2hvtmgn5gbxv3kwhydz1recshczkecuewf2weeflcjsvx6xiubeiro\", \"69kics5kibqmuag8i4nju4cicl4kdera6cilzihutyhuehx342gwqcntjzd694\", \"e9hqgjlyg8oha7zf8bvsisi45atzsqdzvsgmhf7stpzm9j8hclumvqvd72vf5t88qxxnmwdy10o4ap77g9ee53jpyhpt9rz57h3j7bck7ssvzdnn7nx86vujpjoxpah5m24jhefmoa7zdz84ec8rpfz2hesdf1jw28u7yand4utjl3rqk3m4ah2xtnln\" ]\n    } ],\n    \"service\" : \"rsrq0twx1jm4advvyx4xstm\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"r6m1qjohidftjii0pp6a76yuqdhlobchvuwcntcia34cgoe63tupemd7j7eadc2n\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"e1aogr1x1g90df8d0jbj507ta507cl76oxio7h21f3w5ok4g7mg21iihb3rc6yn4au5q59zkdcynurevwgpxhh7dke2nh9jsjyl71zdvp98p8xum7xfqyonbjpapipzc9fk07cgqq4cntr32jjcr776fqd4sgebhae1fkzsvbawdp05mqw6ac\", \"peqp5yadv6z7o77ub9pjo2b4wsh9xy7r87gl857paq3qspfok4v6iujcakpyjc3khezoavnywowi7pbhivsmszrg1d9ioyfywurfuxgla5gv6dh5rqk4bjag2e29ie411gop97jz6gjtoiapl3oc7d2078jy1pieg73cedvbh18r5h2jicravopxd61mazxzp\", \"pzxs4oziz1jl23nysu6rg4d1hwkpc9gaogpcg7b8suixqoj9bw0w72zjnt6xp6ehdn5vyv00t4v1rn17fa7n6aktbgfb34osxuieoi1p25hi95c0gih3rvz79abfgflw0kmwxdb9ijwz6ds52f90yjsx99qefmype12tlf2ia1cogg2z55nb\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"kkwlr99dkve7lxz15784c4lkzhf4a6ussvtjbbp4p1r1zv61s8x4l\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"5bwb1s0tbgo8fjqcljrn5gl3pxksvr50m75dwykdsmlq50697fyl8vb2c1\", \"vvzvn1jr3m7rzuui0w077tp63sepsi8sga2oldxpup2mndjycnnt51fpoobgo73mr1yoc6px2sphgybwh2xwukuvwb4wcsa9xq0sslv77b2kolzh9er4m7t17zuzo2617lkecxbd5mdf9q5okyp1otfitdcn4f7le4\", \"6xouhhe9hyjliszawu8nc3633qctfc8d624cxrsjeocxektv3cwu8sjcc2lojgbs1h8xjehif4hkx10qdl55taqxh40cirz4dbfbbevxycmfnwsfgrf5e8r9nr8alr7fva1tij3y0nfhddouytpd385zmr7y61xr\", \"4dix6k3p92xvc39ov2tch2nda1k0kx\", \"18ax2cgaiabpxtq1vjzzqfetz3ud7qez9l50xz04rs5vd3pwzcw6hx19gf2hn19fmds1ch7qx6wz23lp5t2t6u6jhh83rhvp6dmvgwjp4l66tzualkugm49fodoga18jn0kn1hajos18dqw53oufot95ukb3of7vb3ldygle\", \"e3edmk4e7z2tr9nuzswbsrxnov400rm8z0eeajlz450teylkw198i077hfujygtr12wo064s2do84vrevm68865kmwabgf\", \"57nyewg9vjka1jy959nc7lrpyiitaio22dnb2qr9y99n1d188j1itsk7lq4vng9gwl9q4aprhgank6selqm3w8quyvtulhrvh0oasewr2ysaijrrgiokrpdkir1l\", \"ubk9to96torzzj3p06b85ddxbu8o0ehz0lt3smu3vdnyjgibr1h9f26tcwkzviqdc\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"kxyqwjait6bj43n4jfk3n6j3wnalhspr0ppk77usknzlxeqc\", \"efb4axercfe5ytd2r7hq2krpvh9p8f2saqspyzea7oksis7zkimtaf2mj1f1fyg\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"wbzwginmw59ay0ufwgwei4q1w9sne0t19en3myxsmw9txm380vfm3yrkfh53auhchumpjkr1sucfjcbiyz239cvlyxg5sl8dh9j\", \"deg6gud89pjy6a25sri\", \"trmq0\", \"8pf1wpaxfjg50bhk2vnc4dk79081wca95wtdowot4sf38c2j9qhm3e25zt783t7g38c2j0juo83p4qxje\", \"1ip6lfqtn20g7l3tvk32nho653psnos57i2faohatiojtey5vv3v4405z3ufi0b4acpxwrb4kaug8flfmii0zgugt7n3c24829iwl0ydm0fgz66dolh33civ4tpzp5dwovfdm4\", \"9bujphyeapr3fb2nf4u6clphfgqz3rmk41xc3k9zohdabf4lb6wkpkstxamowhdxf1nvziremegoyjh2thcea5el65c9ehmwt7i0in44ixfpknfvdo2nf3th9q2\", \"unzjqzlpnfnv56yi6w1t81j41f5nqb5hc6vn89fdj8ov3zxeqo1htfs\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"12j6ol16kccpm9u02j2am2lz0xbm\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"7bp4g7tcucn76mwuouhhfb7dwet5xizq9qp4ob4ttfjsokbmepbzsey44kj6kyv\", \"q23fzcd8ttiau2mjstgqcaeq\", \"oi9kcux4c4lh7d9k\" ]\n    } ],\n    \"service\" : \"7uc1odd1fig34ad2k89kzkbyveaz40b1c9azi78pjns6d62o0vmbbht7d7owenyos5bcyn6xwzr\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9qmdjjk68ors6xl0rz68tmjycpbw3vp53aop5wtd673o5yybuq68rf7nov2ishjhe8vvizkoihbthdy6cs0luoa51t8d4sx4n7lf8z9el\", \"cavi0ysuhc8x5d22m5t65rtbmw80nqrrmocgpbhqxtz8rfpyg3j7nvbrd03q0btot2pglk1crivbwxvtghkwxhic2miumv9yrdmiijc0xa8o1jlzxjq0z0psm9uq6g711w7emeoaoty8gdbh\", \"7plmckpcwva0aft0qrvsn20zp8ck51dgic1u4zg0843ycnxid3jxb04dcna8pqs5my5qpt2h76kpzhles\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6dms1bj0ot2iwk8ue3viy38z9idbtdlm7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"wjsq8kp13f7f0yajwg4lnsr37nn3he1qk2hn0n4mssjt5t05vv7y1do48cwit4g5yynhkyhlzud9i26xpk8mpgat7okk5xakap9llqk9mx1zp0fkoa4unhcd7ev7cxsco4nlalbig4tcmk0eufqks4jxfotand5k4397ghkuod6e3456td5egufwxsvxhob5y5k\", \"uof9tp4s8rgousz18zp4h6hnovbk4e00s0h1anpafzblqh0oyr6zyfvlj5u5odeine608lkaz93hzrpdimsvhemvcsedjezo0omuyy3s7wuhdlul\", \"zxr0yo4928ma3ld7ygouzl7y9nu0r1xddl0hni6d339a1aw94rtftekif0qx37055ky6c3ruzezxkvjp7sisc89ofknb1fs50rngby573fb3urdmva3dker9l2cqpgxpdb9o1wj1vwe092vx3j02x05lz7man77h5at3mkqky2wofxr2s2s74nz7czxsnzzwnpi\", \"oz7g2sljtqk9u61zv1k02wjifm5yoinu80ihvfxejnh1eguggful84ep0ixlwwshd5c8bqg6cn2l5rp2yy57eza423o2ydww4n9h0dyoo9k03sgnfx1tlosp5dl0myzj4vdhh6wq7fpm8zfdwoqr8cbtkwkcy3cizq4bnvpo19ywdvbtxjouzn375kth0scxriqjwk28\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"flq7bra4165115z4we\", \"ayyi12ptjukbzkho5qro2pez35ackc757zaci4wwqctcpdgxvv1jg1t5p5beqgalebvqeaea0jvk7ozl77m7ruz0zb0aqu6b0fpl68n0vabwhk22trdg06hdkkhkwku0g2884mc0jte0s46ria46a3pvhf\", \"iluxvlre0zo7qvn742p610agvfdrhne3a9jwp729texnvktc3txff93qgfpwu1a1jsw3wz12vouwuf4stsn244u4szozsx50844qkudevwg7n7k0ma33w17jg9iup6zxt\", \"bnvirbvom99ya8h44d7uho8hox4hxnkkqo4ujkb3tac7ntt\", \"zwj6gzs4oc70k3es6ywi6z34ygjsx93fccwi47yo41w34b8vekshl1kw0ou7vr0qhv8bwyt0eyer48hz2ku7ynhmufvxes5o3g07vw5t1nrcst0l8wsz1ryylbe5kiraasune6vijvp6tyucx5ot9s7yf5z90rufqj8cgvzkqsvhmzuwp3d\", \"a155n8nkadffibq6uoieeyl23l705t66iajc9ogp4u063jr0xbchp4thsgmj1gxui3qg6mfi8gvyvtx3bogutytuj79lbjeiu6dfxpt1g1jzg6qx3lidt3unyqb2rf06jyo\", \"t7ue94es6dah8vn8nd1wey0rb49kg74ub7fzjajr6aufcwklxy7nozfvs9km\", \"w4820qpzvw4uj8bifpvkz287pfiuaz6y3x7th9vop3m82vxqobdoh2vxgixgnmmc7ui9q3pyzu1p9t\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"e924wk0tjjujdvqryf6eit57jzvi2zfz4lebn3lrgkbqkun9wxh8pszkceqnm7v00yxz77535umn4676rlysy\", \"no1ubujwni980uznswzr9z8z2p3ve6zj7jrt3ezsfansnza8eqjzjoe2e15pu8xponxhg4nk4jreajccnwlf2g1115neg7ludvo9xnexmzok\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"fa6jh5g86xlr30rhwibmbebd63z6nwiwtxij5grexxkh6q1ycnwm2e7dbzozha15mx3gc65tze1mw9m\", \"5oti\", \"cmp75rthnra8q9nhjejayqzeov2aeji8hfptfmos0atmi481bva5k71tk9wrzanvpyxarqasb543lgpnv9qovngrspsep07eyrv212g5e3yk8u0kvy\", \"cp3w3e3jdzrzz8wy6pgsdppc6ssu4vsqq3hgr0x4it1euiv0q2dzejmy1z5d4sq81j5u5qq9g6jbju920ad96qcfodzt3n9s8kbtool3w4rr6ijl5966x7yeygaifx640m7itib4yli9vqk61v3foqh2kk26bt02ty543n3x200l3ngz81bzmbk93bsofs8vnihn6wy\", \"cdlq3vfn51cjlipv7ly0i5u3o4o5lts3e4d4qv1xoeon8l9cryw9u69020u5sdlvksgxkyjr3iavfbg54y2nb7fj41en46pqu6mp1bpdbpocp4sn8ynywtbg07bf94p4splb\", \"c150a2lvxpprndzc\", \"48decrns9p3xtabj3faaslz5rn9g9fnoliz0pwwrom6m48szofgibvx52v6jdybax6jt7gdth2n4ilo0ck5io2hvfsz1xfprgg2mdnwkmyp2kytbahld9ia3pvzp0ppf4hrv9dv67p96l7pejmrw\", \"x86zm53ke6iviop6tr390yh0ui1rno945cwnypqqld9kf7pxyhsfedius4pbdh5jnpls332pv7k\" ]\n    } ],\n    \"service\" : \"c4ax8p8bd1mymaenq9gr3so9y1p43pgcsdcoab2lldr6i2xsz6f3epcj37n5oje3oa1wv3vg82uppmk6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a0b4c0d-0ee3-4d0a-88cb-0ed4936ec9be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.17266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3ff7d629-9d3a-4d4e-a777-9d87ff9c61a0",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/kohqbjswcw189kcdcp0bfvz89bbg96afldqrai64evprbv0yig0y4gkki10uowj9ps1wxru04d84rgn2djsropvi6jebij8josjyu13u2tj3t55j12dfvrr1v2z1133ya58h4ylqrka4t5tk1jf6loxataxy08tpm9ohbhliodsqggvyu:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"ixv061cfqc01dv52oedtmn4mcgg36zdxe0h2rwq9j5ujhx0pdhgz2fpc3wgzz4vaybfpky2nkfdevb5dlmrn14my0m4ebbslmnnkhb4viv6uu0hgah866t6544c\",\n      \"description\" : \"Quasi nobis error illum dolore quis corporis. Aut ipsam consequuntur eveniet nesciunt. Ratione eum saepe amet. Velit quia accusantium.\",\n      \"location\" : \"ib0sxah3c32317pyia7j0gwbm0pi\",\n      \"title\" : \"Animi ut odit ad tempora recusandae consequatur quisquam.\"\n    },\n    \"role\" : \"e739yr7tk8bi6o2v8e7l7mm0xh0n5vrti7g1lswxsz27es3peeov3hxzanzle4chen7aegnhg30\",\n    \"members\" : [ \"1o4mjhazh25xpa0sivmuu9m887fkt2lvcjsl00lan9298l2gh3fnrhxm8noyk618stq1wi0quafbwrt77vvzr9d98bp9ivcelkhy36rwgvxw1gllprbjw6jrxpfcnm\", \"7fooq840st7\", \"6ndhnbowk8nlkiauvaqhhyf5z2kll69g3o0g4iznpd6trhv81pi3gjm5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lpwfbghvfpzz90taemqgg1f272411ep7jidv8i6ks9le1rp5ezj648kgucyoldtex0740vowd60nmn3cvguom1r8aar04jm8qskw9d71ifgb08vyx47ylhq7ymo5a8m5r2nd9fjv8maqjm4cwgr0ricwzqwrzku2y\",\n      \"description\" : \"Necessitatibus quia nobis reprehenderit earum. Natus omnis itaque. Quis quis aut quia maiores nihil. Quae unde at nostrum.\",\n      \"location\" : \"xfwswwrz51twdxbunvae5lev8xmpi6av0yk\",\n      \"title\" : \"Ut quisquam temporibus fugit sit iste ab magni.\"\n    },\n    \"role\" : \"2owevdranltydbrondavc9bjtsujpmgxdzi07ognv90irzbvcvuoj3z8rtorua0aq4lwhpd4g41o1y9b1d1nl0qy6cps0zxqo1tpdnbslc8wpm18q9zq\",\n    \"members\" : [ \"v7avcn9rgo8o92a5w8xduoqtfojm29ccu5u276pnmh5ag4cqy\", \"2e0furglkpezfo8j9lfcvulrrtpxhy4tztpwqghjd5h4h8eu81fnb9mv7cszne7w8a13b5r2njpkcyimcw5qhimeojeuodiyk9ujnmzdqongzs1zpvi98l5uwzdmzsc3bpkyvk3dssj2w81ibld\", \"5vv2uqv72l4ucssdm25uhx7mbi85s8oma23on8peym9k5w9jh2hbj9edggr3tks09eoczbxxsq2iqzdd8of4z\", \"jupt3ol8ebh9tobijlzpubx5214fl5j904dfao7b7m\", \"sp1s0wlbp49\", \"7ly98fitnbjllw0z3umh7clz2x88q60sshmzvog530zzf2qfalfwem3vl0g2167fu4tgyjzb0i19cm7uf5cgzfobihq1k37qoh54mz0yzjmnuw0ur1k9raezf332y8h5at6rrwb7jk6ty\", \"o8hfpqkuvj59k31pmdwpwc731ph7cbqd2mhloiki906s9rdhlxlk8ly0l5yz3onq2e0uooul5rznfush308jxtt6idphp2ldv275kkrcstu1ql2g0rh3gu3yn57xmxcfh86qk6td99g\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"fjscte9c270wjtoy4iaebu6324sr5ttmj\",\n      \"description\" : \"Eum aut aut dolor. Voluptatem debitis id est quis ipsa optio impedit. Enim enim consequuntur voluptatum ab.\",\n      \"location\" : \"xl3fkhmzlqcbhrc3mbqsqcs9xicgb2lp5888d2ow93959q6ml5v8d9ih4t9os74a47toywu4scgwlwm91lxyth5k92iac2u06tu4631pbigy5w0f15e52dck3xy3ul0ee94nlx00yrhi2j3guzgi41\",\n      \"title\" : \"Velit quaerat magni.\"\n    },\n    \"role\" : \"8eez6170wg9uni4bs37j6w7k58oi1mk\",\n    \"members\" : [ \"xopauvg7v7jkvef7z5wlvqn169ug2polk0vpwhvzurd1hrlr9nd641wi9nepvwyy1on2fyj6s0bmthk73mqgpis8eyg7zq8u8vid6fcct01rrzhb924h0onuo8enz6uw21ney4y0x8any2xn77602chycc6nq5kfuqy2a81zw9yxnmyr51ouyhm24mk9i\", \"7lymsea0vi1d4sntd9fc12clqcqnsmpd07i1kn5e4c7iaquvb7qqvxfeby1fqz8vhq23x56jnkunem55d5nozwb01ps13o7fgzdbp6d39yx3y1qbmturtjufgctlwi4w5skht4y5xrtjzwr6rlymcdez67lav6qcvbb6h0\", \"bxvp759gx8dq2jhziu0fz39ydm53ktjwgnk4yu0kz5v72fjkbnzuzqp00cqzdyulrsr03byc9lc5668q6szbgj67t88e5rjken4g913njp9ijjtcpur7njwj15wogs1q3w70yoylx8tkxxapqcruf3icafs7p1ppw0hiy5xuvv74niz0f33n5d6uezylhunz8mh42y\", \"yyhu2tfjo7c4dg1d4iw5in0q54ma3iucb8f5i767o624uwu3vtop7mhfgp6s1tty2768xv1zb6tvqsg6r5l899cy0e0xpvfa77bcf642xo0oqsa0e1gb3182lylmmbv4mj1q3lcsa0gvyx6oqnhcvn3z82971t7xo4lk62fuft4jtdzzvgb4j6cu4m7se\", \"nptr0rfgifac601i4xo7b5hqsxxpz10ba7pfw3ycls5rnq9adf43sntp8nlr45z37ymjz28arkotlq42qsureih45hwnhankd2igdqgsna0fsdue2sxov9l1esmo8w50wfd5kb14i39lwbk6t8idlfm333rj9\", \"qickjaolgld608sen2xw884yp69dns3c567ugm4h4dnumh3a3uvcljkhq02dhb81q0kgutpwknnim\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"c665h839hi7ilw7clfb9k5jmwr0o62mvr6hg44ukgdus4u3xmzixfg44k2owop3w5m458xb7y1lbxj5jdh\",\n      \"description\" : \"Soluta rerum qui veritatis facere qui. Esse quia similique voluptatibus architecto. Et et voluptas at quidem aut.\",\n      \"location\" : \"t80rz9v3sgouxmohexrstlyg49ud990np8eh2bcpr8wrixs5afy4czedmtvnemg4l8izxd8qapoux\",\n      \"title\" : \"Tenetur maxime magni praesentium quia dolor.\"\n    },\n    \"role\" : \"oppimcccs2ssi9bcnhh15f6jbhy4msuobib71zv8784a2odiog01atiasniw61tio4cwrl9cbc7pw3zrl8nz2fvm14t78ubmeprlmatd2ctomhhvdf4\",\n    \"members\" : [ \"x2gm32yucn5eumx6b17etvne1tm9mtvu9g27sr5bkbr107xnj3bziyprcu8gu967v4hbxqbsbmutozamw6y0xvchcxet6iaswe1njpgkxx31x3jthl4gb54m98oq2hsz37p26e85ab\", \"388k19t0jfvv74yrrmc9ghn3egxta9591neuicmiv55bsl0867llwspkd0ewdaqwdz8u6cq22705fzlblep0j5zotb5ndq9of6ee4vcgjvpukjmw7i2rowvg1wzazal\", \"6jju6qoy4vgkom81a1kaw4fymfgnshsym0jdehrs0penaj4ow64gez6hpl3woj18f69fjlmwqzgvah2mhr7ojdfcfvi49llzh7ca9t5ndzg0kgqo0hvbr8iw1\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dv7qo8qbs1rmplulp7nf0lw405sgcopb439oee5thp34gf6g9dc177crpiqm2io0ukik4xa63d3z2qlb3eyjbrn6p35ol8f92xelcgo02jy9c3t0oksxwb9tsvtz7hu8djso3sclzq9iae4tbtsqql64cqkvijtkhh5w1tg3lf0\",\n      \"description\" : \"Nisi non quaerat molestias temporibus sunt iure. Nesciunt assumenda nostrum facere eos voluptatum. Similique excepturi nulla nostrum repudiandae aliquid et rerum.\",\n      \"location\" : \"kc214a9bcjhqxznc0gfkwmqrjrmv4c5n9k6oboar08vlnzn9a8ob46nortj577t9hj6fv3lfc6tscg37pbrrt0got3oefw53p6xi561ngtowzjp6aonwpd\",\n      \"title\" : \"Ea soluta consequatur eveniet.\"\n    },\n    \"role\" : \"bwrprqzy9ju12ezdwkk4qldwdbflmv68f33pq0yf29pf0p9sl6fd3b3lproxlh97eoux3xw4ig349fesvrj5jssx3saal0srji82ok6vj62uwgpv9vftjypczp6q8o82\",\n    \"members\" : [ \"r4osajs11fxkkwbawjbzh2bs7fq9ppyh792fk5kza7oe21fapoe6a37nvuq5e8rpnzkv7v9bhyfwrr1y1lrr97y6uaun2fiywvl68he2i430duoe\", \"550xptalnhkh11xkq9ezz70t0bnfc70f9geui9doznowjegmyo6i3cuh57ne5jf7u3rz5z72lhk\", \"9i60ofpedkm5wtq2qk6zm8k3462dx5idng0yx0lzjgmpgddxtjs4oyxr56ldd96wsvj7pkijmsqi50apnzbersao\", \"7pjumzcck57lalr5qe9k78l4v694g4i9zfmidvpdtw59fwozjgcema53ycbplggq3rmcx3i3y180hhziuntseyg8j6kkxy1fyx678gkdo5h2kewu6kpidgm0atqb3krcgczpiw745wfznxfcjm4gdogefwmr18hc9pc0158v3xn\", \"qwly9ezj29p66ljxs4a8fw7tiwqn51pbhl7axpd4gfonb9hv6hz1r8h8fvsjipzys90bt7kexr26nhd355ftv0jhic770y3dct2ovam8i7j\", \"vdwa2ozev43a8outea6vm2ahozgveawc2g0u98hxut4er9zweejbzo1hiq061ithtuyiqodsouei8xolstk8cgj8mjkcltru2t8t8x3qa9oyjlj6ipgyc7y4oghglol53kqffiuw9kmj9jq4azox8s4x43eeeb8zzbagpcgn89l3m3\", \"rrdbwlua0f0aeoh4bamd2abmvxl4lm01uu53cwni5qienpjr\", \"g92yvpjlomc9n4hicsrmtwbv5vt1s4n6m2quarerxxmirqd5mclghpmrg579ba62oyqsbwnlus5ymx8rxwwy8zyqltg5fu7sywij74ioci4co33xqlp8tq2alj0rcol7c5ek8jr6as5mpxmqdb\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8j18fl2g8v61018lkeet4bjyhhgcqfg66osm1lges\",\n      \"description\" : \"Similique sit odit aliquid. Ipsam consectetur odio necessitatibus veritatis dolor fugiat et. Quasi distinctio ut officia pariatur dignissimos inventore rem. Est maxime qui tenetur expedita sed perfere\",\n      \"location\" : \"v8p96dfq48tzxgrvotup0gghuwlua8sochk7k99oi9nf3zwr5dj6mjdlcj\",\n      \"title\" : \"Quae eos enim voluptatem eius consequuntur mollitia in.\"\n    },\n    \"role\" : \"i4j6wvdm62jj02ozv73kybkjbp7mhmegewlvu3lc1l2362ya9fovpci6nacu6wslg22m131qn0lr7ua9nh2vicez4opmnw3zrcek1\",\n    \"members\" : [ \"gf0q6ntpcagxkoa9y19yd6avdahbii4mnhrjhfl\", \"r3exklkg2q900mfeb7yp0p4nylf7tohts9jvsxii99pq6qgfdsfrljjd8otdmghckbhfp64mnqey212gfs3eksg1p\", \"kmrfteky0vezjg0340\", \"7iyg6n6b14sxqghsh9wugkf7rdlfpqhmj5pq3p6xznrk06yr4ee6a9k28bdad1fpz5othlkx5m9kf42fh1c1j63xs1ogoteaq0hxa9r0cr06jlgif6w2nsbd7y0m7k5ld8a0kz8rfpi\", \"4b4ltl2xpzk9sp0r4y44i7yr3nxevefsp8j5560zkqpef95rvvfxpzia8ceqsnm6ayncsqrpgbkfw5s6ozw3v7pdlgfwiiintxbh457cr0ors5crllgtl5b2y8785fp1l0vhhr8hkv57ytfytieofo7jjwmx47bqdvc4kzd3awr3\", \"g4shgnohkuci6zzpbnfw6qn02zkzgfirbvcg379du1tzakq1t3kbixlu3m3qwcj0oxfodm0e29asgz209w10dcrco43fav3vtb8bsn7f\" ]\n  } ],\n  \"etag\" : \"voluptas\",\n  \"version\" : 1720313546,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"zwdcw5a0v26zms6l01iuo9r9u646eyfcx6ko06pl5kutlsy04\", \"n9thjwqoy\", \"xk785vikpc8xckt9692u06x7sloiaaxzqqvfpxc03iqq4utv4dyby9\", \"is45cdaq5gma9pelj2ng7pssufkfa4in5x5vd4hmyed1wx61vxdm9alfjre1gdqjzj1lwe12kymsewwq5v4kbaxbiwp6rvbq2ff9q29gupjnfawnhimo9m7px20wsmrrwhf9a\", \"zkwfisobvm102whn79uze78pjy3kkztuagkkt5ll0nczkc4yqvztbz7ugwpi3p6vtxscgtj3p75p6atimh7z15t2bn2x6rskvotp3526neb6ag4o7iqpaxv0w7i53sigllutmirxxonumg13a\", \"zl2bv235hoqmifuve319wdla3myjdbjhki1r79aq74zgtphwpoeanl0vlunv8yxbxc07bij06ht83qjypvduz813mq3bqmtg6bfwwhknu1whg2pj8ey\", \"6h4dydcimza4fhflqf0ss54peo14g1agmeylzubf2pa7y9w7lgfd524hkn4fy6x9h9bz94sueq133g7vt9fkpbujfbpmwbcemu6tsxq9tmh\" ]\n    } ],\n    \"service\" : \"01e9f0e5xzbc19a2xy3frzjnt6eyq7qx52vpw5jlqiekyy21ocgn7trbdl2wadq7zj2dwmq7a7413x5vzq5soeisaled0d6m8qqhijb3lmjbzcv7bjd70olw0530o4q6fu7k7k26fcyxr8ws6r0japwxzygj1y4jw0yry5yec0igzt3bhr\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"saf55x5xnxum1i2fly3pzit247vkp8q1j96pjxt5i0tsf3u2ae\", \"da1hznmqpw2zvwg80ybz9b6zs2nyjeuyqcic070h5xry2fx4twg6b6fz8vgnzoea5wzgw0sov\", \"me8bjzjkogx5xiy2fzy06wzgai3x2ja1eh8vohpae62tjfiuyrzaxk6wc0xietmxd76vewlgw82eajwro12qap05ghr125nzxqto\", \"7jtc6ql1sis88r80i3ji2jfltx06pzawwbz5qiln4m5idonjg0uxl603l97vi1r3ghwax89ur7rkf0spjh3t57g90j1n9cp2mnub3zi0pbunwriquwafmpf7gnj16vpmozsrwkbb4gf2uoye78ruhm0ladvq1c\", \"pis2x7owm4nci17s5iacrog518m6xvjdsqkb5xw29s9wi1eoa9mdsf6vcez2g4n57o68oa4nd2e8ldrtsfq2tympmhh7wbe4ynqw9wehqun84kefspnxzl6ur1tzajx6td4mt18dgy7omqutarz5dd74z9u8awoabkswjg71ac2sgfo0mg0x\", \"j6z52guyzqstcuzzl97a8wlqof59r6dlg6ao7p3v6e8kekubj7snter3avnkhkl7qa\", \"ijmb0qlwzpl42ieqdn7jykpdgwn7ougudb0wdrap2yb8zyhazvqac243xfyrzah1a4u7wsve7dp6cfo1dejtqusbo6gkz4gquqnqanky818icn5hrk6uleu480pgt4rislwvfehhseco54ymlcmv94\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"2r5jg5wvhuy4g5irlogmhgd7kbun1fuc9zmol7ht6tkthn23z9ldw6mdvonvplcsg1wu\", \"pbk0txmaup0szxtfw69ox3at236jb34nt92vkylsav4rb141gq9w1c73h5oh4dtjpw0wbwtfj7ltbt18lekvg7jj70lwhdmigykri1pe320hh\", \"p52toldgzws9d1o6evoy5ayagc8idw3vux9g3wqmoscimafxdira09fc09guqncmv4hmb08enoqydyhfhi2v2noyb96ccn9d0ybvc14vkfb3ifnoc6h0exhrhho4577oui3u5ge5pajf0vbj20iv6lyo7w2ytgvnsh8pw7jtodp4cx\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"5d8t49g124cxfju10r8qii68g0thkh4opz9lqg9sib5hnw6v9fcaa5v\", \"8sjnwua1305tzr7zqcrlcvb0ooe5he2fg20vhru2iwo5w5cd14vh948n6xfhawwibobodmg7019serr9pxueiepc1wxp5nn4gqc4knlhq7webkma9xp64oi\", \"g46nxf29tlv5wvs496g1dwztfswo3i9lp6xujcq64d248and14cl8z0nkbekpca69hue8ha3i4fh09bv2l15cnrrwy2zodf2r1c6r65jz388w0dxassosw4hcg036fawktx4mdxf711h0cncnyoh5ncgax9e54loiudazgxyfor04jzj5rxikeps5315mz\", \"pljeqslwspq7cgskooxmgeochxxpb7z3x5w7bkpuz0yesfh9hfrzra00fr9pbhzrr0n9c8l61uqsmfsmerk1kfydmr2qbf6dbm9ji0iym9ea1r82nhzfse80atgsab5l2fh20fxgyj8qefv68j6havs68l84e\", \"kvlo43i4xshyt53o49zak2g6flj1gk5enzuopr6nwssc1mpkrvf3n0ka5tejj3cozrzw752pw66v6am336fbxjuj3t2soj8lxj2sd9p3o9xfpvxmqbld1ipm756s18sns76go4o7d6\", \"847qljm8pynzn2ubvxuepoitrfvior9q6ohefddek80y7j8lntus6z5n\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"xuisn0ezvnt9ecq3wsj9er8sickfqxxgn7efsimdcbnnlwdnfem85arav6kx921bkutofkhmen7bm8z2kkawhrin258cuhfbhlwvwsyysrbm30h9mvhjcpmt0hykkfeh2t3bfkenia8jvgqbana\", \"k26wo3ywya8gtgu5ak2p17qrkufiqdtv1a8llcbjyp6t4rbdmy750k6hez92mdrqx\", \"ln4q8ovz8v0hlcpdqvqwphxfcnlpmglzma5n4po1p8sz6xjrqv3bpe5k483864f3ic8do7nn6d9j3z92vklwefxv7u2eljeh9153rny7ft8090jslhj0cu23kez0rabpnsx6qfzr51b0fvwfcbpvp\", \"kot\", \"kovfh4xyqx868spm1fjafd9ee80z0ndpezypwxd0ylbau0m99g38twb9dcg59yxbi4e6u6vttf4yroej61tu\", \"2lej2d99m466j49twhy4xncb5fuxxeph3pr1pebqr4hp1upmsj4fx6vowhthvy4e0ekqn30n5pivf6h4vyyiy3gquddvvybphlbx4hhwh2hx5n6y1by39diptocqh5jqwtqw5u1v3cdrcdc85mloc6e6nqbr\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"p0n5thpu67egzbor29wf0mljvxal617ayauq59ydl35prmgg0bnq5srdqyvl6ve6wa6p835v6uatzsjp6xs3jjp86vn3pyn9zq1roj7civ7q5lhzciybs97fr9ueuqwqjcr0fszjwi8l\", \"3o2pbthrf3lhe9xx20ppsbkclbc2d1tvwinzcy6xmaceapqqmbt64ug0vpqkrqto5nm83gx4i127hs60d3g4ycrgph0g2vi5qiyku8qlbvuj5h9liveyve7am\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"fin2dlq7zq4to4dcwhkh4p6fi34ico6bsh1juzigxapz9zslig6yum5zhxz4qppy2scfxtpxifak\", \"wyx8jdbqfjun2w6kr5cx4j8wst3672xvpc42syk3cnag1i4jiivuo4tm1c2ewkyg7lku5raje41lo9suv8hrxrs95ipsbddnhxghgdi2x1ph31fqj8l984g1pz7o4xq04h2fv6fgqmnx7uc2u9lww3prsrqhzwe4olc45oaa5w25ro0irkfbp4curgspsaw2ogo7qdpn\", \"exjzns65tdranpvmu44kk9lu4i5da6pe4ckfdcewdklec5sxyihyk13oo9l11nr9q1fm2qzj7zp24onq86zuoq0gkoza658n0jf06icd54tmjbkzjjc303jq2stml1t8ir79016rohv7udukd4m1xwp1\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9aqbeudqumzcq62ijvvc8484cyfqbkfhzhn5auv0ehvvytu80h84wzg309eh96xh7zll9ub1gxa1y4u2r9c\", \"245q0xvv9jyd4w0hlw1873hcxu40meeh4udmqf0qu3giq0ulu3vdoun1hix0z59mlzfkmsoamo8qznr0wcm6h9tdu0iduap28df1tj\", \"06h4mfhhgc78r1g0tkl39dcpkfrul9am9u38mx8iladpri45lys5krp9wwv4m91oppo5hw1r6s74820qtjod1sr23jsh89etji3ew0hqndo4irg3fx3snk60v4692lp41q1nnd0gs5xu4evs64r6rzy8ehya\", \"s2hc11lnwacfdhg9jv5vmlqcfo\", \"sho25a9bx1lik4nr6norvfwwvflg03009a88n3jhm8946s43osn1slnhrwz3h6optrd69z6ep\" ]\n    } ],\n    \"service\" : \"zy8bnb1qwcdbodqlcp2clnf88ky1ymbw3su18nwz1ihulxu0l118zg5nfvjgl2ykev3nyzeufix27ifl4f8dlbrupp3ybo446a6cwmv7qjtqyj394xhv0nkxtnsxxog5kes858bhlzwm3wsge1aq1chg\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"36e83y3luq2zc2i6lt4msckf24xb1ydvoyqt1jd9qeiiiuipkl1hfqb98zezdhrpjaec6brxdg5cpubs4s473dd8dhlrn2gmo8geemq1o8mzbe530pssj5hte7zrqm8xfd7isgs4tt3ctq0jk86cduv31982nw\", \"stjssk6dg1g0v3j9b3t4nhgxkgsq8m3seso3mchn21\", \"bkc02p9cn3\", \"vobshx1ib6i9ztfhrjinfs892f7mlpbwbbz3dhpxdhcdfxjmg7m6vzljr\", \"tjo3c1srkdsxm2rbzqgl9woxpi8kad01lksklysoqocenyxrdrbwjwkg4mikcc5kvjwzypa7f153u6zefgt5obdt023nws8dh3w1zqr6zdq7h4g9ogcy67y7wnmaz14ku8newx\", \"55bm4szgj1q3ntf87ygkjox61r1t92px6m7lmdc2gryih7ufm76hgxrbeyh7sgccgp743sooyv0fbbhk3ryweu2nelhohsk3m4sw3826l63x96fnnjglpuhelf0sov6ikgdvl5gu5intisirxlt0k2ijf2ng4o25fq3f\", \"378a\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"cvaka1xnufrrzf6vwovlrxapy5so84ncyfzt4jmruutvgjfodp8s1wu0ec\", \"6uburjeg3gdq0str0xpbobb9bqnw\", \"yx2ry4pjxb08dqba6f853lr9z6v92evj51b6e4qxcxungsqtuazgjrh6bkqk6ofkso2uf3ngezu8smn2x1qut7y63rxkq3t3cp6fn8ka6wcs8\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"lvdraq8tpqubiuu2xt1874h7u0gr1smazkkc8u2vlmda6dbv7qi5ouz8yawsar4hpy2jbi2o6z73vhk1nii27la7a8daopvjh9i30i0aefo3f2szitbvey1syq38jihgxy8o61y4jx0lxbvb48j21dx3pxin1dncafwjmwdhxdr\", \"d3phoaigfw53qdrzku0hp95fjd1nh6vwpxqaktmsxggordofjj75lbhnz580x985kqu97bseb4kdfoh385r8mah4dau9umxkv9rprokyuj1xqbll2u5qkyu5txrowhxw6mg824ypyqvnsvobilm95\", \"jyv68yezkz6ut14bw8pe07npwguwk8owe7y2lld3j02dpq39boux5tvup4parhajye\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"8ar1zv4oj324bs9lpb8midjhbg\", \"vdg1yq3oddnf7smcph6itibhtospltyvugmmp3wg4z4yk5tctitqe1xzdcx7joo8knee6xrd0bid0ruwu4tscn67i\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"to1g1syk7ci7wmemjzfmtkdfa76o07irvhenvvdsv735ndpv9y2isdi2h4847k1gym0ldq4oaefymoh1yy8vg3kiknaw4nvbin7udtfaqmwb6tinp8x1mkoc25g3j2vduvqidglgbrno5va1sn1ktqlrchtbk82l3mb\", \"o0p908svmusjcc9fvpr7pxf5jyyslgan7n\" ]\n    } ],\n    \"service\" : \"2eenpzl86535y3jz4ysj6desjm5bk74nlrw7xcouyepyf5mpvopcah6x4eugiv4eaakz3d5b5l573k0qi1xbzopiyymzu6tyladyoxzxfbfq3c9aidpzlk0zlzvpjgbj9\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"a6ba30bnlvz9fhzezoz1eqflhz6xzt9s4m6unhik8cdc8kusajn5can9b36e8nai9hcz3encyl9nnm379j4pkddivl07d7z637hn5v0j0had3hxhpxllbha4npc6i2838wspybi90ilmx1d3orry562u5f0\", \"liad0jihyvjw6ndhqm6hi0vcl1pztn7g01kvvsqakc6lkl0se5cegn3if4wl31akygqj12vj94up319hnb8mwgibwdqc421fbi9pwndt3m03npoz15nfqrorcu47gfp1jtdh2d0rcf\", \"3e7frtn1me1vdd9m7l0ljgi3f4p6x11pcsk7sc2l4vp1l0uqzcj577ydc9k303wxr5rxs5bigl0r8tvnfkryobaq2h5q16koqespjkr89ki0b6zqojmribne1xxuoihvu\", \"e4ndj5sykudg2pte1yayiqtzqubrokakpmmn9gv79l5k4904nd2bywdndimgrd8ezjfh53ahv88ydj7721xrywwrqp9\", \"fdp7nppborr090apyadnxskqz3su\", \"gd4\", \"7namc6q1atzmz5nfkl7sk1vzpilkcfzgzda2oldl0b4zxk8se1g4ecwe4r985z00bolqvq6tbxgs7mq91dt8r3531hunowpnz92g4lbsrdo1kvv3qwuidjzhxsszdmmorwciwul\", \"7mwgsm6j2dk4asutdisb6x3x1vc8k39lwm99t7hslv81ehluzydnw04qpfdbulmlcjzdqp2d31syre6ch060jgj1u5cqi1lzi7nvxj6zg5q5gmv8snb0wota137z9udirftr8ao5hhfch\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"kecqj4z0zabbodp44q0crsnx8dfl563xiqntlfc36m1hexrc823nze1qlfme6sjy2o6q8e1\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"hepwil6020d8qmdtwauv212qms967rnxnczzuirpiazqmjny2q4tgly09t1gdzu9tbe1xhaq4qyhs345hx0xm8nd6pcaakbwoo5wn1hzfw6qrt5i0jbzc2sdnifvvlifb1wfn7mauwwcd\", \"wwthhktq2v5ot2xrh2zc8ikhbvum6nt5a5ve95chikngaqhijogi\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"j6ahpwsz387fwewfs9h12cgoqligrr2nsqyubwfro2o9sdk6ug159fdg0y08k090s9yhh78t0a8348vqow082ijkj9f5rh2mqk1y94vjvm7ggqe5fb7kfuhywfz3\", \"kvjlxb18x4jwl5nhdw9yuu4dmy67626a4ibj8nr8m3b7dx6durab9p\", \"t64xfe5ntzmdoe0h8ikmkl8nxwxxube3nm9kgogoq5kstb6whndj7mcfm3oj0zzqb475ucik59q3wn7cdyw6gicz86bz\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hafhiil4ctlm\", \"lg24uuxg48d3bwp50yxoudf0gzzguvv0alvuqx0ojaow827g5u91f88uv1glzmddlyi8mttxeh3fjy2snl0c3mgym61xo\", \"0jye46f9nbp5p8euoppqrhx3uowb0l82nf1v9jemn9i4js3bjnxlefe2onuw90f8n53xne8nn522b606me6dh7vfyn\", \"n4dd9wiriezugrkzpjtpjkpj7jfn8r2167jw7jdaxvp2bufzqttsstja0wp3bwe5bay1meea48jwrfplwaf66b2ldse8dx86ulhyi1folbfotdsatskj4sdvwmukzt74zkvwadq322gmo0hp2s6wb39c34ltlpc2danje8c8d2vugc7jv2zj55lmbfjt\", \"fw4nohhmw7cn14q5y2og7v15a04xragjyeugxkqcmfvfa3bhbzq0szzwm3mm4u2ut9s676hx8631gc5it5uuftbm869jcpb5zy3bw5pj338enymgku5xnxz14vb1nvg4gh7dx0629f4medhklvmkq0y0vjcct4mih9rlarkhw28lrme56wpzm9887\", \"gixo9rrgq16swbdx8ay2ipuv\", \"a3ojwr4q8vzf6meqtyb082psfgsb8guwt586vh4se3fqk88cwrcgfidshbxl3vdi1zn\" ]\n    } ],\n    \"service\" : \"nxm8le1fh4opv\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ff7d629-9d3a-4d4e-a777-9d87ff9c61a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.170612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "37dadc9d-5a69-4ca6-8124-4c7c8f5a94c1",
    "name" : "Creates a new Connectivity Test. After you create a test, the reachability analy...",
    "request" : {
      "urlPath" : "/v1beta1/wuuie1vvbykd14o37ki4a93s8lfqlaajkretm3zayw/connectivityTests",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Nguyet DuBuque\",\n  \"error\" : {\n    \"code\" : 1706252968,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Ipsum reprehenderit commodi voluptas tenetur illum blanditiis. Consequatur facere amet. Rerum cupiditate error nihil vero distinctio. Vel in dolor.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37dadc9d-5a69-4ca6-8124-4c7c8f5a94c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.168031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a037d3d0-4d1c-4594-9260-8db97273bd6a",
    "name" : "Lists all Connectivity Tests owned by a project.",
    "request" : {
      "urlPath" : "/v1beta1/09woo5csroulk9tdg1o6tmryh1tn3mgf8uhtv92392btfs9uuuzhhj3arx08klp86kfo9clx7xcji3ikkacbey8o611oipqbyrfrlqfn9yz2968mftad/connectivityTests",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"oy6g984q2kgp\", \"65ijk\", \"30rnioqeplgidqlxt2tdr8llq5c0t8f4qv65ja1z9duu74kzsy5kk8xshvz2it62xp5uy1z286r283ve9ocgne2lk8iukwuqdshl9c8qws9atnecsomc\", \"vethjvavf1k7z1yp133et6hv00cjvwuacxvfkkfkst4d1burgqy8kjyl7fzks4ef2hldi95cewl\", \"hkodkyywwfgr44m9vl6ciyw806lzbt115grt9tn3pgo8q7x8m9muvmozsah8t73ysq8ya57l2lm30f3jvamzd8h2ykfapgz1mbobnjefm10j7uhi4zr259iyqnuqoh4ychux7tzz\", \"oob1veeau7xy12chk407hci6iigg0z50497ans7qdz09iev3qmg0ngmty8ucyom1twftlxqtqn07m6frq0d5poalsiute3sjwqz1sp4qui5vq9d4vnoe\", \"ehl4ycun1d3td2a37nda30wnl8ko6mej93ki54ons1armrnngfwdg\" ],\n  \"nextPageToken\" : \"kfi9naxpfmxtq8h64578wnbxkshzslxofzk3uaqkay4wxvaep2tqo5k5nlaw6qexix7vf3hhawk6e8we2d6dfzw1gtbtwcygbj7lelxtxwvrnbfxsrfgev8x3ydjr61x3qk5e5wf0y7glpekvsy2svrnbaq6ec67qpzbfubsb9ezqt2ezbd9qizgd2vzevly0ea76g5\",\n  \"resources\" : [ {\n    \"probingDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"zrq3mcy3fwssv9f0auoa659ou4znra4eafp2fw7f3l11x\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"5fd2cge6eb3ef2c6z38g8vh78e6seq99w64bn76c6ubhar0vrz19hhlme4w1bt9te7nkiun873b6yulvlyj0w6vh3bpq\",\n        \"destinationPort\" : 2042819101,\n        \"protocol\" : \"jo2ar1n8a1b96swx1im688ke0ahaonf2ij2x670b4kxiiaryi8w1zmbk8754th41pdftd89cbo9nckjsklhmk29eejimhs6uwkutsf55itk746ndofdyf9aqfaj3410g2rl10se4ivwz84taeotsgizi\",\n        \"sourcePort\" : 938266732,\n        \"sourceIp\" : \"snl8w9pk1yadhmenlpxlbjch3hlzgki85toml8z8wj1isff3dlnp92cws0x03ey74wdl2c8eryur929z9\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/374518\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/167574\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/292181\"\n      },\n      \"successfulProbeCount\" : 2110698053,\n      \"abortCause\" : \"NO_SOURCE_LOCATION\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-10-07T16:40:47.156306Z\",\n      \"error\" : {\n        \"code\" : 1211315632,\n        \"details\" : [ { } ],\n        \"message\" : \"Sit quibusdam praesentium possimus voluptate unde facilis. Odio facilis pariatur magnam. Iste iusto vel non et molestiae. Et quaerat iure debitis magni.\"\n      },\n      \"sentProbeCount\" : 1605915927\n    },\n    \"relatedProjects\" : [ \"h3d051eel12cpywz8w6bqopoju1uplxcfb33qb45l4b1d07robafkbde6s\", \"e94mau3s9\", \"3rrab8v021rf8j9y9rels7q\", \"ls2hv4xz0hf4wpmyugp249faey7c9qfuy8mdpr0c01etsecwspo6xagmjuseeg9zj32uu2ej5omyc3dyhm6tu46h2dctc12twsisk49lrqrx2gyur4lo3i9tn1nt8nrt0s2dpc7ol0da45pyz7qjdioifyw5pkim4mlno4kqses3lexpsyxeb37ae\", \"qclok1efyivb3cbs8rh8pkrzxwwzh79iw1jsy8b5xkenccgtutlyveopg60b4j78scxfcejggkvc6957xvzr31lt8qj9r54w76t6zvbyy4lhfdja4t49aknjx3uauc37720gjatpjnuuht8nv4wwc9zcceky1ucpn\", \"ty8fa4jhy2qb638g2vmvopa1k54x0p6mjn7\", \"1shvkvapluq66lj8suwfg6msh6nahiy7u9u9zrwives5n34mbe5u3e5ho1itrq483pcuynckd345t\" ],\n    \"protocol\" : \"bz3icwyt7q14bm937tss73xsfx5kc2j9qklsjvw0exx5ig2xzkhrit41hxz0gg3ac2b22yp7p0ustzre7pdh7pwl0kcns\",\n    \"createTime\" : \"2022-06-15T16:40:47.156537Z\",\n    \"displayName\" : \"Myesha O'Hara\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/296175\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/766295\"\n      },\n      \"instance\" : \"2l8pokpz17t08cx0up6qdg9v2hs4t2aevahtidlax02qasndxapws7if9172d6qftridzu59wroq1x1nspdcjuidl0wdigpf\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/153029\"\n      },\n      \"cloudSqlInstance\" : \"2q0otdzrjmhva1w2rg9oo821j2buhr0pwp28f5vms9yyge0bow65kv5sirs58ocuevctu09z6k2fmp2xn57\",\n      \"port\" : 225939638,\n      \"ipAddress\" : \"o577flyr3407byzoke1vf9fuz7xwke6uco9a92aycjyqwxi289annifx24bczk1rtzalklla4j5ubwsfvxkqj8jl0kz28sdin5lo6iganzqnxm789vi\",\n      \"gkeMasterCluster\" : \"q73yjabmo932ftxhbhofi3e7wyfaygeq8r7jrnyqrros1dn5lt1e4m6qpk7waicqyc5ddtm18iwxvnjpxw6s0o2ha24e0c3y5h61ycypej75ta2r4\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"ob71\",\n      \"network\" : \"3o9xdtb1epfd0ancowusaq3kjn2en29adb4vqt3at5xqmpabzen3b5bnikae5ag1sosjs07wug\"\n    },\n    \"name\" : \"Morris Wyman\",\n    \"description\" : \"Ullam delectus mollitia. Tenetur eos dolores dignissimos. Eveniet et quam vel omnis.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      } ],\n      \"verifyTime\" : \"2022-12-06T17:08:47.157462Z\",\n      \"error\" : {\n        \"code\" : 840017524,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aut ducimus aut velit voluptatibus in facilis. Porro numquam quas id. Sunt fuga ut iusto. Magnam corrupti sit.\"\n      }\n    },\n    \"updateTime\" : \"2022-06-14T15:13:47.157596Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/754406\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/652105\"\n      },\n      \"instance\" : \"ud9h\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/991685\"\n      },\n      \"cloudSqlInstance\" : \"ay4ovjgqvd3rvswrvkpr4b146xybx3byola9tjhawvmn2856ayiv9y9ibn73ij6i248tyi5235zsyojtdar\",\n      \"port\" : 318248724,\n      \"ipAddress\" : \"ntuhghxvottphfz40jc2cagop6y10ekd2udwrwq7cfpxstloscieee0j11wtwmng0io9w7518pafmw6qe3yu338yvud3xsvfy0v07wvale88bbq4h9t11ug54hxlr0148o6\",\n      \"gkeMasterCluster\" : \"8hm1tg2y458q5i3\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"n759\",\n      \"network\" : \"nkny5i7p21aexj5p0q7opjchgt9rot3bvjoar9101g9jc5ni2l5xw8d2fl1bwv62gl8uceeoqn1qtjwgvm0hkzttqz2te65dy1jmxrj0wmpdp\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"9odbagqgvfpbm8a0ryos19xi8mgsjtrda2z54449ez6x\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"x4stkoi3f6tlgl8tr6l8g31ldl7zpp97svcsl979n611zyg2p71c9y2quoxor9ck2eue73xipgzt49u4jlyak49ajelswk2gtly006bo1vt19m1s8v2et1z7s3tqz474qtoimeub58hf09m5lquzopvb24noyvcntekwg3lhnuxl8iwjq9\",\n        \"destinationPort\" : 704870181,\n        \"protocol\" : \"hke2cdrhw1mvn7ww4zux3grp24ofd7uj4gfux3o55071b58f0kaj3jsft6iehpuam3gf1xq2qau7oh6jp41hx94\",\n        \"sourcePort\" : 453901771,\n        \"sourceIp\" : \"uh0cwy8f53b0yjxfqwwn6rm9aic3i8siop1rhr7kv52b17thzbw5qnnqwbe3tmlexdlmx8ur2yk6xsxd19hw45d3ssiufz5w1mof6g0f9wmxrtl896ahk4s8bpv7o9viy0p4zgtlk5stleqm76pu29cppm2\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/936420\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/318365\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/822626\"\n      },\n      \"successfulProbeCount\" : 217655659,\n      \"abortCause\" : \"PERMISSION_DENIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2023-02-26T14:55:47.158486Z\",\n      \"error\" : {\n        \"code\" : 1662065372,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Omnis assumenda vel. Amet perferendis iusto animi est. Temporibus nemo culpa quia quia voluptatem ea.\"\n      },\n      \"sentProbeCount\" : 1283731188\n    },\n    \"relatedProjects\" : [ \"ilfco7y1diq3afkmzys9ykz7d3jscblmsiqdfaj6wrsc683fpeb0dgwj7nexmaj0zq5tevhbunxdzpt6yr3ql9061dr562haztbhg8t9l8fsoj63mxsmivxg3dzop\", \"lbt0gzhpoox14vb9vb8nhxjg7rdlz7ofsuhzyxjj10h68ug0plzzof03tzc8zeqdr1sdubraupff8e4zgunsyroz6m1djksqspr6n2dosvcp2gmz9llr4il4ts8gcqwi5s96\", \"fyivwnpoo3f80l7famq83b6rmfxea64zy7qehdpvd1jm17yzqe6o6wpyoqud0yrxwfwmy2ni5jlre6l0ycuxylcbnoj9502ugvjkhwsvwif7zjvuf3mya3o8o5xezfgvb30lg6rgfqn2cws7h49bs9vyq18tsvegw2fsma\", \"bfutsq7z0clr73vz2fi6u1vit60a6khk4w52l31y50wk6vm8y4xysyw7po7xz6z\", \"hikz9b6zoce4zg728u6hj267tvko77mf240ktsh49w0fk5uplohv18gpvtm7bgtp8m7cjnbjolu6\", \"p4xud9d6qo5s608pdnxazmrckumzcw498kwyfqfae21wmvl1uidk1l2lvqsgu6whlpu3jnhy1id6dqw9k5yphh0ogj1w9jv\" ],\n    \"protocol\" : \"uxwostop4t4jmgofrixnwjfbhlc4p7a4e1nin1byvn0ium3ym8qiqcuuvralowrfhhnq2wd5dyyg1benifqdaqvkubtc67hi34phv157nen55kktacasizvh7zdhhj8prs45jcvb8ei9lk18frunfecc26da6c0bqcawne735055psya0w\",\n    \"createTime\" : \"2022-05-20T16:18:47.158684Z\",\n    \"displayName\" : \"Aurelia Fritsch MD\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/385889\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/531570\"\n      },\n      \"instance\" : \"lthl36750rq41yuf25ze0s0qwew99z4ibzoc1hetm3drkt3b2pn3lhfh2chbq\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/355257\"\n      },\n      \"cloudSqlInstance\" : \"zs75ghfx8ez4qdjzi9vndv3hvrrtndmqh1cgfx5dtyk6wdp1664tsu0a4vvnqpqarfltekak0e04yrgwwo3vwnuwhdbiscpgqvcuwce20365ktcy5k1y1y9n2anvzeac27rtmnakdxdb6kzqkxjao4mw21zhlb672vf6anl\",\n      \"port\" : 1907889107,\n      \"ipAddress\" : \"scq5y23nrsvexkziqb79t0o3qd2n7zk1rvho0ebyddzuvqf6s0ctydldyzdmt4p297pap0paq8yaubzg6jtisuecdvlvtasvpeczhd6imz7tsr2w5gyjgjnvkf6\",\n      \"gkeMasterCluster\" : \"84s88i9flfc4c4eai6c4141dcuzbxoh5adfsg72o5j791iyuz7otxq616yhz07w5czhxmuc81197jjx1eclwtbfoajl0cbcskiuj8vgwdiwqwjjjtoe5fx7bjhnkno0szcteo2id1\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"2s59\",\n      \"network\" : \"zlnhc3n8m42xm1kqn87dd77b9suygr1acsxeyfcvy2hr867w3vmqsqwbxk22i5r8dmrgyylmnkf\"\n    },\n    \"name\" : \"Lucila Dach\",\n    \"description\" : \"Quas et tenetur voluptates unde consequatur voluptatem. Ut aut eius perspiciatis. Quas nisi facilis qui cumque ducimus quia.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"RESULT_UNSPECIFIED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      } ],\n      \"verifyTime\" : \"2022-09-15T16:14:47.159565Z\",\n      \"error\" : {\n        \"code\" : 338805270,\n        \"details\" : [ { } ],\n        \"message\" : \"Dolores eum sit vel quis nemo dolor. Est ea laudantium cum eligendi. Est reiciendis laudantium.\"\n      }\n    },\n    \"updateTime\" : \"2022-03-24T16:23:47.159707Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/610964\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/684434\"\n      },\n      \"instance\" : \"69bwaqj569tymejam62rz\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/029457\"\n      },\n      \"cloudSqlInstance\" : \"xwe5jdkh0l2wowkqrslm9hykt38apyht87fp7zlr1d32dhdh20j6z0s5t0pt6iu43tsnntqof5yvrkio7ttbamkooxz15od6o6n7in6s4ueg43kw38dpylx7yv8gzif5o32jchlgac1tqcisewwvr6os\",\n      \"port\" : 556918485,\n      \"ipAddress\" : \"8x6b2n5a1xn09yh9hhhwofdbf5njsqbpjtvg974ne4reltrt4xnxy0d0gy4ont38rfuuyqulltvrwkxbq\",\n      \"gkeMasterCluster\" : \"svwf3hz7u02qaekqji7yledxfx6r807svvtl8pm4tcxg3fc9zi0ackeksddgqrjungs1va231hd1gm73csmmcl6foo2i6eo5\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"696r\",\n      \"network\" : \"akqe5d19gkivukce57uve8xsf9yfpdy9b9j8co7e9dbqnepcrfrtds3hrjdaeawmwppdo1j4k28ux6dlczjxii2ii7kjvvr81jp8dflgsau5thgcno7tjcsms0ois37eq9ii6yp5d2wooda2webqqprt1owv5glkokh\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"2iqk78w85n61xnrfnnv79n2y3bw0u3ni8n3gtjwpw0rg39vbscvo9du0gda9ut1k222mlxx1f723prcs3h69ivwvgf0kbgr4vqfkzpqkc6l2fo0xcqqknihczv8464ljt8ql0f3b6nr6nl9bn6igh9o3w\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"70f0rps9lcdjni2johstr1s3rrsinwf4pz4zepz0ge0q515q0geyu20m7h3iio1334ljlztg1yw5aibe9urxxdgfd4aqvgd6x1vnuidcuk\",\n        \"destinationPort\" : 849757101,\n        \"protocol\" : \"n5x6q92gt4ier4qhgpauxuz4di9vi6ocwfpaj1yb5ygnd543fmkyhc52nqeeljxnlc1uwoot5czmpuh9ft9kkezy3oixm5r51aby9y3im0pu2iw35i1894o6a22f8pw09vuwnn3e05d\",\n        \"sourcePort\" : 1021793434,\n        \"sourceIp\" : \"eljg6v7k4r6wq7iyo2udjqs3oay2\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/756475\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/275975\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/872917\"\n      },\n      \"successfulProbeCount\" : 622253657,\n      \"abortCause\" : \"NO_SOURCE_LOCATION\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-04-19T16:18:47.160767Z\",\n      \"error\" : {\n        \"code\" : 829952030,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Sed quis sapiente doloribus animi. Minima explicabo et neque in. Numquam sint dolores aut sequi. Excepturi non sit dolores sunt. Itaque doloremque provident eligendi aut voluptas sunt voluptatibus.\"\n      },\n      \"sentProbeCount\" : 1383113595\n    },\n    \"relatedProjects\" : [ \"07e1p81b3s38l6aey4sjdexlncofcfosfd9vs2z88n5tcrfdv2awaas5pkhkknsf3oob02skj2pjxrrlzv101irf7x4qafp84ka1rvu8d6lrbh6tmknmiqjdta6msx4orm7yjyjymd2slal190q89xu0wfvo8\", \"3b695gamlwfdany0fzlb64ni7xb8ftpemifh3m2pjonvd79t5ildkqp\" ],\n    \"protocol\" : \"jm4qc7y0kxdx64qskj5btu63xwk41yvah00uwd738f\",\n    \"createTime\" : \"2022-04-08T17:18:47.160992Z\",\n    \"displayName\" : \"Ernesto Hudson\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/120341\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/891512\"\n      },\n      \"instance\" : \"mtanvtdqoha2656ye54l9it4parjdqna2alpvdxfpq5okjz1\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/172227\"\n      },\n      \"cloudSqlInstance\" : \"8rr8tckjkhmvtgd3tpz8xyj5az8z6qdw0ivzkx3niquh95j\",\n      \"port\" : 2092913149,\n      \"ipAddress\" : \"quhngixsttddpy7mww4lg28ved0ihxteoim6w\",\n      \"gkeMasterCluster\" : \"m16ekqrgt1rriwdqthzi35f8kocyah88y1ypbdhv15nodwgdfhn10zj0vmg647uc3u7agusanawlzklbcbdd5emw1jslrmfdxvc6q30nzkftnn4z0kimep0agbnlee0a0hhoaicphozdu\",\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"5bq2\",\n      \"network\" : \"y4vicb3wfpoije5jyppvurjnqisj6tslau2waj2nk2dcjz7m08irppznylyqr2so315ffyg10w6xvoaxzp0alfdgzk79zlvl3x37n1v7r0nfvqvxxdjgxn6jxjb7sadkqy9cpju41im0nvgxkfslq08j595efpfaevqiis\"\n    },\n    \"name\" : \"Rochel Schowalter\",\n    \"description\" : \"Omnis repellendus doloremque perspiciatis. Temporibus et autem vel possimus. Sint tempora nam illo et fugiat porro odit.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"AMBIGUOUS\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-12-03T15:05:47.161914Z\",\n      \"error\" : {\n        \"code\" : 2067222763,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Doloribus possimus ratione nostrum. Recusandae blanditiis doloremque officiis. Aliquam quidem enim dolores vero et est et. Aspernatur et fuga hic qui enim facilis. Est optio ut sit nihil.\"\n      }\n    },\n    \"updateTime\" : \"2022-08-29T16:36:47.162078Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/797630\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/182513\"\n      },\n      \"instance\" : \"rj5m5uat7pth5c3hmd5ky20fk7glbvhhksjwhz3oc9b5jjftwpjzjj1yng39ehikc7qgnx90mg888cac8co\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/043219\"\n      },\n      \"cloudSqlInstance\" : \"nvqf1sj22o1z1gpvr77fayhd2wyq7g1djoayoureaxr6fpgjs17\",\n      \"port\" : 1840554069,\n      \"ipAddress\" : \"yjo2a9lvbez1txr505pkpq9ttziep3qbtlild4k2h1faodms92hbzotjc9ogtah4ku2ajefz93ma3ji1935myi4cawd6cmj69xbssiq2foro6af5k0kgblkh14z0p30pbapz9xtnzgv\",\n      \"gkeMasterCluster\" : \"rmrykgd8rrzeeocm0oybrv84jrf8eo7ocwvw\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"lz65\",\n      \"network\" : \"rt6rcp8d5j2ppgq3slysu61bja5d3wjej8maq1mvb8pkci030a4fjtpeyrzja7881venknx385aug27dp8k0lzfovdojjmf4mp6ksbs5mm0105kbbvhudhone2oq3qnoub25ck01jbz553r7iz12278xegif971uwnid8vky4435x\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"UNREACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"vekkcj7vydlzouk8iu9cixw\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"fpxozje07h80yn1m8wuc18poubki\",\n        \"destinationPort\" : 1823744326,\n        \"protocol\" : \"qa4a407jarcah1pmjix8q29te2ng4l5eriuha\",\n        \"sourcePort\" : 911838992,\n        \"sourceIp\" : \"rx75f0yf61woumnlvaeku51nru7t7hieqyu2w2v9r25mghuivr7s2g4sjd65ev0sxr2zd3e2a40x0jc32tzz5zf6tka9r728fkf0naiqpvdq9ig3yeawmfmsadtrp1d6\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/985752\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/939216\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/733208\"\n      },\n      \"successfulProbeCount\" : 224892506,\n      \"abortCause\" : \"PERMISSION_DENIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { }, { }, { }, { } ]\n      },\n      \"verifyTime\" : \"2022-07-25T15:30:47.163101Z\",\n      \"error\" : {\n        \"code\" : 1754665441,\n        \"details\" : [ { }, { } ],\n        \"message\" : \"Eos repellat qui qui. Odit voluptas ducimus suscipit delectus praesentium qui voluptates. Quo nemo est nam facere illum.\"\n      },\n      \"sentProbeCount\" : 1681247641\n    },\n    \"relatedProjects\" : [ \"3i0cdu3q2j0a1qwbcoo6580p246cfdw6ogyylvx4hqj5ow0gia4kliwrv8wyx6eow6k5yvgdlxdbry2dqtztolkwvv67ex5145s536x0mu8d\", \"hqrc6vx5uq21xfnq6zyknotfv4lt1ruxjevh7gq4pw3kwe5kwfy8dlv514c32egtqxvgui65c3w60yboeij6x4aqkyl5\" ],\n    \"protocol\" : \"snb7q9ibamgwuqjfxrc4h9jupxzfnk2pyvtxcwodr06wuho93\",\n    \"createTime\" : \"2022-04-24T13:56:47.163311Z\",\n    \"displayName\" : \"Guillermo Bode\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/210512\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/416774\"\n      },\n      \"instance\" : \"cwiw9mx8pf42e87l8w46se23p2jhq65\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/441078\"\n      },\n      \"cloudSqlInstance\" : \"dnkzcvn85tz26xqu6e4z8a9vyjl9jx1m30w792wcorsc3lvmqzr0t2xj48xf1duw7beqs1xhu0ku7v6j257yjhk9ieq9l17esl432ld3eks7rytq23c0lrfnumu1y5hbowqu1i1ixkdby74rem6in\",\n      \"port\" : 463595404,\n      \"ipAddress\" : \"udg1xfzkjw4h1re48gu0ynngh78fgejl72v9vlqen252bbieg0xd9par69vqefakrdug1hnbjww8rnh8lseg4x\",\n      \"gkeMasterCluster\" : \"uavq0hxozdm0squznr8cx26n7yvfioxg5apkiqfnttiaq0gceij1atqw0d7su19gpp53fklsl5qj179k4s69fi8ekgsuod45pxklq717faaqbxdbnn9k6jmjwens0poby25g1vm855lwpg2amtlr5m35jj3qe4cv2ixgenwnqakwkl9r\",\n      \"networkType\" : \"GCP_NETWORK\",\n      \"projectId\" : \"nif6\",\n      \"network\" : \"q5ndk8xxs7mjbmh2ac59na5304x3vc3kb4b7vo62t9tprdmguyrja6k3zxl2pb1e8ydzgxkue7rzdpmjf6bbewjwzl3gs60jzxj3qix68iqx635f6sxwgxm46twsowk3uch66crydimgyq3rp47i7xhdvrbqpq1xfyy1girmzsebgzsgi6jeljos30\"\n    },\n    \"name\" : \"Ji Purdy\",\n    \"description\" : \"Enim illo sunt quia ipsam quae sequi. Animi aut libero quae ab. Et placeat aut non veniam in in.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"RESULT_UNSPECIFIED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-09-11T14:40:47.164344Z\",\n      \"error\" : {\n        \"code\" : 2098793255,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut consectetur accusantium magni. Et eligendi ratione numquam dolor quisquam consequatur doloremque. Nihil delectus consequatur facilis molestiae.\"\n      }\n    },\n    \"updateTime\" : \"2023-03-03T13:35:47.164514Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/055596\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/995812\"\n      },\n      \"instance\" : \"lo78iiqzft49xgajvdcwx3jgui4w2fydsa8wdg2byuy28kugnfys8ywt48p2f6i0ipvi96h2dm255nsak8qo7xvjpu5oh21xf1r1wqg47vgcxw6a9be4x77xzw2wzt37y5bnjsv8yrcq3nwao6dh38tw3xrtulsylax2gax6gcz6rgki4jvdsd9\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/162825\"\n      },\n      \"cloudSqlInstance\" : \"44qj2a9cl118u7u26kiakccs6ccf6nt44z3ztoagooorrqneqk7k7jinx8f2aed15j5f6e7n9asj51add\",\n      \"port\" : 1057147045,\n      \"ipAddress\" : \"vkrsj00ekh3kzuuo4a5ps8lsx6qd6enwlewk8y3p3gldn0v1lqky3d3gkqmhcqajqhyxpg4qmegt4birvia5z1r2hj5ig6ae6ex1q3lqab4ctkr7v5rd1n26gkws7xaod10uearnumqujiq070y5t89p6jafqzl9g2wh3cb4i0ynmtg2p7nxvqayy1c\",\n      \"gkeMasterCluster\" : \"0ryegp3pbuhlo10zqvqwuwp946bsn1i7fqg\",\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"fgo3\",\n      \"network\" : \"obdkqh6onpoqw5fc18dw1e25ce7ix701ltyqrmhvpipkkvk88toe25rirydgqtxsre5dxsb0tyhckdu6qmynxc5bifbzjk1wa1cx6li2chzy9i9snwkw545899iapxoo6apbmdl6p3wbyz00zhusn9wtcoqt\"\n    },\n    \"labels\" : { }\n  }, {\n    \"probingDetails\" : {\n      \"result\" : \"REACHABLE\",\n      \"destinationEgressLocation\" : {\n        \"metropolitanArea\" : \"vgb7gjfaiu02u7ii78u8s6vh4xevpgpa2f7q48m9r0ngabn1gqgxz5evvw86pk6361c7vujje9s16wzh5hp6238n7uh96dcy02egn60y8r3chccl5p8d5pm5kxuhbmz8je9f27f8c1fhar8ucyfkxmfsxezoa7l9444nupflf2t5b4qscnsagvk9n1joi8otrick\"\n      },\n      \"endpointInfo\" : {\n        \"destinationIp\" : \"cmsbrntntgex9zfl0d2k1smlk3dop7syh0psa0p5j49uzu5h7ad0k9g04rjig4dhbkr2e18mea62wpf9890b7vk5kv6tgwo8lwkn\",\n        \"destinationPort\" : 383834239,\n        \"protocol\" : \"a7c6jycp7zp14ee\",\n        \"sourcePort\" : 517961579,\n        \"sourceIp\" : \"ukfrfc52za698swvk0g721wuxs2qz9127f71kw8nnk2s4qmgctnc5tqi346vkgmukvlyb2iunk8hifxk\",\n        \"sourceNetworkUri\" : \"https://web.example.mocklab.io/002726\",\n        \"sourceAgentUri\" : \"https://web.example.mocklab.io/721664\",\n        \"destinationNetworkUri\" : \"https://web.example.mocklab.io/177620\"\n      },\n      \"successfulProbeCount\" : 1890412128,\n      \"abortCause\" : \"PROBING_ABORT_CAUSE_UNSPECIFIED\",\n      \"probingLatency\" : {\n        \"latencyPercentiles\" : [ { } ]\n      },\n      \"verifyTime\" : \"2022-07-24T14:55:47.165514Z\",\n      \"error\" : {\n        \"code\" : 108575985,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Repudiandae nobis enim. Pariatur maiores sit. Eos et aut eius. Nostrum fuga sed magnam voluptatem.\"\n      },\n      \"sentProbeCount\" : 1472441001\n    },\n    \"relatedProjects\" : [ \"v1uxx1fiasl36t56oydre7cgqurz2hn82pkyu7hhitjhxjpmvksschn3i4boztxewubwe2osztuut22762zhwluftra6z970txe0ewnbcwny272237g9xjsi5ul9unhtaqp\" ],\n    \"protocol\" : \"m3tng9pm0eczzksn2mr2a3rsplnwmlut5er9p2m1qizg311u5gwnqxwj6xbl8ka497hs9mclyq527nh\",\n    \"createTime\" : \"2022-08-05T14:10:47.165708Z\",\n    \"displayName\" : \"Lenard Corwin\",\n    \"destination\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/611198\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/085256\"\n      },\n      \"instance\" : \"akcrpky8sqvyycnt92iy2u4rd5ytzqu03it7gq3idq8hia6uf6aufj0ob1vnnuhbmdm01znrxffay4efpqkp6hl7f5790rnkblyuuzzwleyqqm7hbbojech3sdmfwjs4b6q91ukdonpva0lrh893qonsms7gh\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/350623\"\n      },\n      \"cloudSqlInstance\" : \"6zvhid0n2hujubjuy4st5rwcpnmlz4fjq2a23zcajr0h4a7lvnurjtcdbkojat838evuihaz3odnlvar79fbhg0v69dkjp208j6nvqpr2yg3mk0s7bfk7u85iabj10cmqipv4kb4gsevv9oc4cfcutkr3sx5w2gdue266uuwpnlzaw8zo4mxh6c\",\n      \"port\" : 173014977,\n      \"ipAddress\" : \"i870ck\",\n      \"gkeMasterCluster\" : \"wi8jr2br16za69y38btlhw9dxpzyfkze7ze5wulz\",\n      \"networkType\" : \"NON_GCP_NETWORK\",\n      \"projectId\" : \"65xd\",\n      \"network\" : \"ogkkg1gnu5qyzuaquczd73v1s86dqsp2ws1a\"\n    },\n    \"name\" : \"Jefferson Heathcote\",\n    \"description\" : \"Perspiciatis repellat omnis minus fuga. Quidem et placeat sint ullam natus et aperiam. Molestias quo consequatur et et. Officiis est sapiente.\",\n    \"reachabilityDetails\" : {\n      \"result\" : \"UNDETERMINED\",\n      \"traces\" : [ {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"endpointInfo\" : { },\n        \"steps\" : [ { }, { } ]\n      } ],\n      \"verifyTime\" : \"2022-04-16T15:18:47.16667Z\",\n      \"error\" : {\n        \"code\" : 1885562469,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Impedit explicabo aspernatur molestiae qui sint est rem. Consectetur est alias dolores numquam dolorem. Nulla libero ipsa quisquam quia temporibus dicta. Qui dignissimos et repellendus temporibus veli\"\n      }\n    },\n    \"updateTime\" : \"2022-12-04T15:41:47.166822Z\",\n    \"source\" : {\n      \"cloudFunction\" : {\n        \"uri\" : \"https://web.example.mocklab.io/467736\"\n      },\n      \"cloudRunRevision\" : {\n        \"uri\" : \"https://web.example.mocklab.io/998846\"\n      },\n      \"instance\" : \"d12cqqsnfeikxzepl0ltl9n4yuzfjlycbole0asbcp6jh5i182bd58tczcs5k6vps52hgklp17tozr0007189ymc9qf6kocmg731son3ir1\",\n      \"appEngineVersion\" : {\n        \"uri\" : \"https://web.example.mocklab.io/232468\"\n      },\n      \"cloudSqlInstance\" : \"k64q76js\",\n      \"port\" : 414169384,\n      \"ipAddress\" : \"yr48z1209emum94lz07gsh672muej5vco91qmg8z3mnxgzeygpzpolnnbff2u1dug6q7cpxf8umg67iytzazlozcdrs9bjfgwung1o0lgulo8qjg8yq34398pt\",\n      \"gkeMasterCluster\" : \"3co85rjarim75et2t1lax4utbctzghv8sxqy2w16spnmmuvcpufqa0uxpn08kd6doi8sotkup202j2kiishvjb62e\",\n      \"networkType\" : \"NETWORK_TYPE_UNSPECIFIED\",\n      \"projectId\" : \"9ov7\",\n      \"network\" : \"zwd9s05nuoko5pq3wj3x82kd262ak0ceu6tknftyatletbxj\"\n    },\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a037d3d0-4d1c-4594-9260-8db97273bd6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.167646Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.list",
          "schema" : {
            "description" : "Response for the `ListConnectivityTests` method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Page token to fetch the next set of Connectivity Tests.",
                "type" : "string"
              },
              "resources" : {
                "description" : "List of Connectivity Tests.",
                "items" : {
                  "$ref" : "#/components/schemas/ConnectivityTest"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached (when querying all locations with `-`).",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "723caa62-f2e1-4cab-bc89-96f4e8879fac",
    "name" : "Rerun an existing `ConnectivityTest`. After the user triggers the rerun, the rea...",
    "request" : {
      "urlPath" : "/v1beta1/Cyril+Hilpert:rerun",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Bettina Pacocha\",\n  \"error\" : {\n    \"code\" : 1934962624,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Repellat reiciendis et ratione laboriosam doloribus pariatur soluta. Sint earum quas id iste natus. Voluptatem laudantium molestiae. Officia est tempore quia ipsa minus voluptatibus et.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "723caa62-f2e1-4cab-bc89-96f4e8879fac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.155688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.rerun",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8adb303e-9381-4dea-858d-3a12d6719a78",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Thaddeus+Johnston+DDS:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8adb303e-9381-4dea-858d-3a12d6719a78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.155391Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c6e7abd2-f1d6-4ff8-b623-207f055f1022",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Dr.+Angelo+Emmerich/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jimmie Runte\",\n    \"error\" : {\n      \"code\" : 1648294093,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Placeat dolor ea. Vero eaque fugit. Explicabo asperiores vero in sed.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Joshua Grant IV\",\n    \"error\" : {\n      \"code\" : 1153885650,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Quo itaque enim ratione qui qui quod ea. Fugiat dignissimos quia. Non placeat perspiciatis id consectetur aut iusto.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Jarod Pagac\",\n    \"error\" : {\n      \"code\" : 703425836,\n      \"details\" : [ { } ],\n      \"message\" : \"Est reiciendis est omnis. Quis omnis quis tenetur asperiores sint. Eos soluta quia. Sed ducimus iste harum fugit.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Nicolas Koss\",\n    \"error\" : {\n      \"code\" : 1969326217,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Temporibus saepe asperiores. Incidunt non tenetur. Voluptas tenetur expedita ut consectetur quaerat. Voluptatibus dolor dolor fuga. Dicta doloremque voluptatem voluptas commodi veniam.\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"dq396qixrs124psygjuari6p5qxwlqph2fcwibn3sgy50pftn3jd7utj6qd5jqn17vqorqcjumq45gizyls9bttu1a1j9xk3m1q7uil1j50eydd1ubroabjt6u9y8pwihoacyohawu83oge6cnqz0x2d86\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6e7abd2-f1d6-4ff8-b623-207f055f1022",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.155281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "df5fa2be-baea-49a3-9b20-3f014b0e514b",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Bernetta+Bernier+Jr./locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"q2xko3vxifd5b71okz57987efsh96t2o0gik2vlu15svt1300bv1zmk7bhv5qdf03buoo8f13t2fdpnkryt0f77rjdespu3i0jz06qhb3q77l7xmz321ofdtl0mr8ez16b6rg58uiomo7zkyp388gv\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Millard Ward\",\n    \"locationId\" : \"fvlr\",\n    \"name\" : \"Caroyln Rogahn\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Arletha Green\",\n    \"locationId\" : \"6apa\",\n    \"name\" : \"Dr. John Considine\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Signe Treutel\",\n    \"locationId\" : \"8vda\",\n    \"name\" : \"Orval Auer\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df5fa2be-baea-49a3-9b20-3f014b0e514b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.154507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "12fa9487-1e33-4b68-830b-17018460076b",
    "name" : "Updates the configuration of an existing `ConnectivityTest`. After you update a ...",
    "request" : {
      "urlPath" : "/v1beta1/Justin+Sporer",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ronda Kerluke III\",\n  \"error\" : {\n    \"code\" : 1221706506,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Iure labore modi ratione. Dolor illo itaque veniam. Quo ipsum et porro quas sit.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12fa9487-1e33-4b68-830b-17018460076b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.153655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.connectivityTests.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4fe70e6b-f2be-4c6a-b3b1-788f500411f2",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Ruthanne+Champlin",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Francis Crona\",\n  \"error\" : {\n    \"code\" : 1185768336,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Incidunt quod occaecati at sit in reprehenderit asperiores. Cupiditate occaecati libero veniam consequatur. Ratione hic aperiam deserunt qui molestiae blanditiis beatae.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fe70e6b-f2be-4c6a-b3b1-788f500411f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.153392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "98dd3866-32ce-4eaa-a094-30b60a55cb68",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1beta1/Zulema+Walter",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98dd3866-32ce-4eaa-a094-30b60a55cb68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:47.152958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkmanagement.projects.locations.global.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}