{
  "mappings" : [ {
    "id" : "c75be268-150a-440e-b1f7-f5cf74c34800",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c75be268-150a-440e-b1f7-f5cf74c34800",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.51722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "271f1ede-c7f9-41c0-9463-5840dedc3951",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "271f1ede-c7f9-41c0-9463-5840dedc3951",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.517169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "5cfa5289-e618-4e03-b0ff-456e4ba1d9dc",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cfa5289-e618-4e03-b0ff-456e4ba1d9dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.51712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "457b36dd-abc2-4b34-a02c-b406c4d261c6",
    "name" : "Reset Policy - 200",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "457b36dd-abc2-4b34-a02c-b406c4d261c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.517078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy"
        }
      }
    }
  }, {
    "id" : "af2d90ee-c035-47ea-abd7-7b4ca11d16ea",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/dv2z",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af2d90ee-c035-47ea-abd7-7b4ca11d16ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.517044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "fc3df584-4a40-4ddf-8db8-605289ea3d36",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/9dw1",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc3df584-4a40-4ddf-8db8-605289ea3d36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.516927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "6ac80354-9eb0-4936-8c8a-a1ba2565afda",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/zw97",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ac80354-9eb0-4936-8c8a-a1ba2565afda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.516805Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "e01eca13-9055-4e61-8953-8a07829c7d56",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/4c9x",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e01eca13-9055-4e61-8953-8a07829c7d56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.516683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "601c50e1-979e-474a-8d89-db102d85d131",
    "name" : "Update Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/x58x",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "601c50e1-979e-474a-8d89-db102d85d131",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.516566Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement"
        }
      }
    }
  }, {
    "id" : "6afdeb9a-f6e2-42e8-9224-98713aed7e17",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/y3la",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6afdeb9a-f6e2-42e8-9224-98713aed7e17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.516461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "e2ab6544-5454-4e84-acc0-fed41cfcd971",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/rf5g",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2ab6544-5454-4e84-acc0-fed41cfcd971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.516333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "4c7da484-e640-4470-a1be-22e5db14fdde",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/hdqu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c7da484-e640-4470-a1be-22e5db14fdde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.516205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "d110cbad-78bc-44bc-8e16-3ada769feac2",
    "name" : "Create Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/021l",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d110cbad-78bc-44bc-8e16-3ada769feac2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.516052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement"
        }
      }
    }
  }, {
    "id" : "68674cd7-f48e-4dbb-9f43-a4d5ad87c023",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"qzjduauodvzwtq6tyxef9v2b2a5eo8kafahj8cf732hpqxwx6f41p3u83017xdzhn30da8f77now7q5b4jp0tz7xv554vngb0037eupsci9kw53vt6cimrxraj0kohkytmnq0dnmisvhobh0ndlev37lcx2rd8doi2\",\n    \"Duration\" : \"73g8nbzmwgzar002a8b21qd4apcly25fuevhlcmw88s4sbou8xxumfafg5k84gpjvpshfyrua3k98b5rwljprist7mlgyoz2kasdjaibmrgcp0phfwcsz2isxj4j1\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Dr. Humberto Mohr\"\n  }, {\n    \"Error\" : \"61nnrels4i8wnyoq57b28f1ea20mb55xdxkv2tenkg6i5uhf4ufe0egkwxz01x2spsv4t8s0i8n5sf4xbofczn5kzq79a4v6rxc4os9ku56\",\n    \"Duration\" : \"757t26xiys394g44veyj4z4lazws1k76u9iwtq9pf93lfpt117jf5olii9vrnp13wkeay9gxgoe9hikjb6sobdiellr4zcn30c1nee82povcofvrmjlx26rgk1b65vv3rr9xth3bxwspa35k6yueiopdu3tp1gwncinhru0lo5vnhyib6i\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Lonnie Rempel\"\n  }, {\n    \"Error\" : \"2hfkqgwmfwx0feuv964o8zaz5f2g8uh8h6m33ktwm9eojwilgomzvhcevh7cbp2dkyh55ijhe8qq89pjg0f2odwa9h5swunpyrd0zsv5ywr5zeqdumbeo5d7xhzk11h6147z9k9kfh2ivrh2iar9uew1g41e1dztvltnva0p1zroocn4khxj6vg4lj2p8qi2ha4\",\n    \"Duration\" : \"cvdrnbc5zsl88fg3etcyhsmabg3ky4fxlonnryqwb503uxj9a646n5fqsxm354of11hwb2yoaed4e87phcqd34gkywdrbzr32lkroleyww7gjdughkuw6aivhi7js2zepyf6e28mdrqlejh2luhhbedwhjgmto976uy6zioz8jeoqyfigad\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Denny Stamm\"\n  }, {\n    \"Error\" : \"u5lq4fldydop8xyjf2kmbmo5wunmw3e4eeognb285cid25ijv05vivg1w5n8fujj3us5v2nhfkpkzdht3o81pl4fzna66f8d6bfo50u\",\n    \"Duration\" : \"2pzfffmyrtzr59en7fl5hrusycac1i4bcvyn588cr7o005zvxgz5qy0n8xcx58nfs8cvux0bhk19nd6wnmq7keysj4hl8cbeswd0jd131lm4j942r4mesj0zdlv01a8d\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Devin Kunze\"\n  }, {\n    \"Error\" : \"3t49e6xmdnw99hbcy5c6or3wbpvh3onq5bll5n1cgg9ysymrz6rqtc5dau6p38gjmkui5wb606nmz0uzencyku35rgshuepz36ol852ggcf9aohtx34\",\n    \"Duration\" : \"cnmhy7l6reql6b3vd4aiuqzmplar9w9iisvj2bl54glicux9yer3bdnefreodz8kr19yuzxe6nbpgourtryx3demecqd5p0vki4a34cftfrspxqay1l2d61fx165pwkhlz7mrlge8plxcj0gs6vq27zu2ci8vk95ipsicwycsjssf3daklw4whth63739\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Terese Bradtke\"\n  }, {\n    \"Error\" : \"er0kdzgu9z12d8oxlb95t6annyuxxligami2f\",\n    \"Duration\" : \"dvzx0i1tcsgp62t5o53xwki0xjetjjbbogt06xtmh43y5qcj1h7ofgn5scsgor\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Alvaro Kohler\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68674cd7-f48e-4dbb-9f43-a4d5ad87c023",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.515904Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ac788383-9357-46ce-801d-3ce21e87a249",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"s2gtnw8i4n0e5u3oepr5cfxu6g78jz0vc1yr567bf8a7k\",\n    \"Duration\" : \"rg72jqjujw8chnwa77rys4osguhf8xgyw26napgn078x2el9ukclgh1n6teash7r1zyd01dwb7b3mxv5enhmws881qwp1gp4moof3sjv5jcnl830bmhyg5ttweiv76792cspcf8bknktn1cdizd9b7st80hxqi4uxz9xzmmjz0nb7myrz6d6rr\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Alton Zboncak II\"\n  }, {\n    \"Error\" : \"2z8kn8sla1asv3m2ruuevhqerg7pscbqrezke8tyalpi3ol579d5dc0g67idrik5vmykpnh51zcozxlg8rwmisrpcluiqv08fuke06sq63rqkvlsznd7s6kqkf5mf26oysgbvor8r55lvths4fuu816yzytok8hwpirw1dhfs\",\n    \"Duration\" : \"bp8s24kckwy7uy19lvzcuxpi397o6hd5bmp4dundmv6mm4onzqgxvfw71f08l3f8nnxuolo3\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mr. Ivory Schaefer\"\n  }, {\n    \"Error\" : \"hlboyqh\",\n    \"Duration\" : \"hgzhlp2ul3a6k5k559kv5nlqqr32qbwwrz04c2cq22bzab4aqhye7xxv5fxtj92sj3773q079rjtzjm1393e2xqrenwv6n1wuobxbiafkbt4sf3k0trf6qeg7nenanxe268fav2qlp1zx57mdzirqeukuctqwqql0yrpkfcii6v\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Merlin Runte IV\"\n  }, {\n    \"Error\" : \"c0kxenl3il9tyzspg43u01fckk23i8m4l80cs216jm3covaa3yufbfmsjq3b5fflu9qc4knp2l0iklr083lf0a0enwqbgwi\",\n    \"Duration\" : \"4q5hehnxvlm1479fnrhbqeqroagslhodgnqfv4g8b5qu5kywsr2l4yw1cxawpo9a4ek9z5a6bggvx5wejaro6e6lnke3j7tykr96p18gtuaglprd9dtbxiautt2risx0cx4l57b6cebxkops88jscjppii42ebh1b9ys0fzfom62z6ooh\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mrs. Deana Stehr\"\n  }, {\n    \"Error\" : \"4qo4mh95ma3x4\",\n    \"Duration\" : \"wghwtbjg41wjvw6jajrgx67tzdsocak8upupb8y7covq5be60q18o33e3\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Teri Bosco IV\"\n  }, {\n    \"Error\" : \"ebfl5lika0gbd6kadcrdhmicmpxhmwzieihgtresot1sec7dpfakwif4ctzxqd3nbutdjh4z3h5v2aa1j54f9z816lmh6lgyozzjd7l39bs83gkydvyu2i1w0teh6vwheunq9gk706zgnbtr5vh7f775plfercw\",\n    \"Duration\" : \"stbyq84jlf4zkil6gqymhubrvadaqza7uxsfe1\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Sandra Kassulke\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac788383-9357-46ce-801d-3ce21e87a249",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.515369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "fd2e4b65-97a0-462d-824e-379aaba46dc0",
    "name" : "Get swagger documentation - 200",
    "request" : {
      "urlPath" : "/api-docs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fd2e4b65-97a0-462d-824e-379aaba46dc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:15.514641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDoc"
        }
      }
    }
  } ]
}