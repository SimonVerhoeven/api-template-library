{
  "mappings" : [ {
    "id" : "029bfe4b-427c-4929-a1e3-3e2369a9c043",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "029bfe4b-427c-4929-a1e3-3e2369a9c043",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "afb0be24-f6d7-418e-b639-ed2dc2ba0002",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afb0be24-f6d7-418e-b639-ed2dc2ba0002",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "3d134e05-db6f-4283-b3c0-d148523c8d29",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d134e05-db6f-4283-b3c0-d148523c8d29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b23282b1-c684-49e6-9a86-7a4c20f4fef5",
    "name" : "Reset Policy - 200",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b23282b1-c684-49e6-9a86-7a4c20f4fef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "4a6b179a-78ee-451a-883d-6670765750a3",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/lv8y",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a6b179a-78ee-451a-883d-6670765750a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "cef3df32-66c8-469a-890b-4140bebeaf9b",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/bxbo",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cef3df32-66c8-469a-890b-4140bebeaf9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "a04e92e3-f79e-4a07-8643-2ea628472053",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/y06k",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a04e92e3-f79e-4a07-8643-2ea628472053",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "8c6551bf-1b15-4c95-b3ee-5e52c260037d",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/075g",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c6551bf-1b15-4c95-b3ee-5e52c260037d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "26e2f984-96ae-4634-89b6-4ca5e0239468",
    "name" : "Update Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/5mdh",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "26e2f984-96ae-4634-89b6-4ca5e0239468",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "3a6d520e-13a4-49b9-8f3f-aaa4a8e10c9a",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/x2x9",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a6d520e-13a4-49b9-8f3f-aaa4a8e10c9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.670113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "e47a4e20-7804-4270-8362-b7e583438d34",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/o343",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e47a4e20-7804-4270-8362-b7e583438d34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.669993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "36204fa6-eadf-4fab-9788-eeb6aea44563",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/77a8",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36204fa6-eadf-4fab-9788-eeb6aea44563",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.66987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "efc600c9-ddc5-4c90-9715-b6ca928b2da7",
    "name" : "Create Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/5u73",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "efc600c9-ddc5-4c90-9715-b6ca928b2da7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.669733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "c2f43cce-a01d-44bc-b0e4-87105a0d18e8",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"vs6r8ka\",\n    \"Duration\" : \"7m0uxjyuwf4bkczzeekemwjx253ra1src456g1vosbbudhesdwzuq43zpsmypynxvv4hdv30fapi1oiiwm08e2t1h0ynkjs0nda6oin90004domizdxxan8q5y091ckutdw1y2fmwaj28mzzmnjnajgly0xo7kz\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Marcos Renner\"\n  }, {\n    \"Error\" : \"3ridi2vxu2wwumttrdp2iu36vl33cv41vsur1g1denka26sknoeuatgaozdmpur\",\n    \"Duration\" : \"86ei6s897fphb75t8d8y2vorw6szfxbm6es5k4kw36m26igfq67t2ngedguep8sqhbgxgb2rtqjk8ln2\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Floy Wyman II\"\n  }, {\n    \"Error\" : \"cixozmce2ijhrbzi2pfgtj8ht4koyr8azcwqyawpj24kdmo7tkie8i2j3yoru6dcax8pgqkworcc7fiul49merp4s256iwdqo6i8k6sc1gz230tf7i3to6r8\",\n    \"Duration\" : \"w6ox7oz1lllo803mdyfbcsy7pw1mznwrmgkp40fd0qakz1yfewsly23wfb43rg54yzk1b7e1jo4feeysrgzxowebrmqb1y9m1jnz6aut8kazlzrxt43dg7nwgoy8pb9n2zx2fjxna55hntt3a694sk56aqtgfu7raofq780\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Marquita Zieme\"\n  }, {\n    \"Error\" : \"k5253lv8l8j9xpefobabhp5o01prdvzq438q3n5goch4n4hy8goe844syo5aagpps42yygp4hfs83vzu7a2ccdv67tbs5agfi7fegp7xs2zxuezc8lmturpr1bg5i7zt8az7qhbzs01gmyeb1wv7pefe2fid1i7fsfi4g941f7gni1ow0cpblmk8r9fxbkg\",\n    \"Duration\" : \"qejj5ggdti84yxg69a9u6rie6oqnz6heueho8pql9ofilkdloc\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mr. Dion Schaden\"\n  }, {\n    \"Error\" : \"1ryxv2mgpu7dmgq4ua9k1gbtw4bfs6hrafslx0acdbxnd521gjm0f75kvvjmylxcti031l3obpy97fwrcl1prjpph9mf6vg8cxo8xumn2786qulmrt3njayzepdukk6uzrxkkvdl76ts0a8o87cy5boqvfbn5wdy0l7vupcymh75znqz4u4m4q4u0w6tbbsct\",\n    \"Duration\" : \"qdezhea1vab\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Eden Wehner\"\n  }, {\n    \"Error\" : \"mvi42abwtglaq4hocgjtku9edkxw09jvfbw64ioe3vnhtyzn9u146mniudlyak1ddsixvn010zvbzqcymqpj3h1to51kbpk0msg4jc\",\n    \"Duration\" : \"8ry2nn7uhu8g55a2sb0ib3mwkj5kvzv7xj996ady4901l7ejm5ukor96o3kjh2hwxxb0ltp9bz44b42ke44d2ypwi\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Miss Hugo Barton\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2f43cce-a01d-44bc-b0e4-87105a0d18e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.669608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "eee2d858-38ff-43fc-b702-f14265c01d83",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"urba5qzmqcejlrjhqqgcxltuhyao7ivhuvkgzkxkveueam4j9un0wwkatz7zpoijogajxteacexy35664k8y1p4n\",\n    \"Duration\" : \"7pyy8gcp598\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Chong Doyle\"\n  }, {\n    \"Error\" : \"h8zzrpqzn6bohidjvzsknfrxt0pxaigx49gr3pxwqrw8apzlrth4fisz9hv0lg4zmxzhtupt3wbwqizzq42k8l1bt710wmdvl024xg3dv5wx66iyyk5rpo8d2z6kw4a25\",\n    \"Duration\" : \"f30otf8lfxuyo4oe3nqefn6mbgx4mlq3ikdg0avics9l8mzrc2qvwldfhmdpt8wi2xaefpjpspwzz2w8gajn92oc7v71626inukpswldkbzobc0sa1xavxdh4jjf0o1jooiu1hngufl3mfizab3af8m\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Ms. Danielle Wisoky\"\n  }, {\n    \"Error\" : \"0q7nxbnbj1vggwf34p46vuun2731506817627y6elie1fro8qso9jnlfgi2dxhqcgc5462jseoeuxjvjl0i82fxh7o84d62\",\n    \"Duration\" : \"wdet01fcba7ewjoibfl2j0uv9m8d\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Leeann Rodriguez\"\n  }, {\n    \"Error\" : \"ztsd263brimfj09mxk28nrrjblblfzx9i8oql0fxmk9k3lxxvm6ezudwse4vxxqs8vwuubh3h69a5wllyr69iebw37340qk21e7hkvkkg2lkasymndhitmx0v7d8wvbfu1aokb9xzit6xerosik\",\n    \"Duration\" : \"vbpwywysm8xpa93bsxh4bit8gwwte0grz9tw97r7dzyvnyz4bbrt0kj58dfronvma0znpw67sybsbdl6nl6f2ibkziikwkt01tbxc4ppgjvxbkoseio2zcisdcrb1qac48\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Lizette Schuster\"\n  }, {\n    \"Error\" : \"yidb2gs5lonvh4nuw2v4nmmeq3bxf6x86dgqaibcbjff5rljamcr7jk0vbzted1eybnusmoflipkzdj6g\",\n    \"Duration\" : \"eg39x69ifnx309lxml8kimq2htlcqkagfuhcodpldps47kg9zkgmel97h6lg9wm0wrndc1lxs8t04uq\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Augustine Effertz\"\n  }, {\n    \"Error\" : \"m9pjutuhyhmgx4qry5dh8idrh4jt2c555xdpq12ncjayvnvrf88utvxra7r26fefmkwal0yrxpfhqlpzd4povg7wpp38cmytmmsezo81fzuhh2tp9d8oqssgq091s57o94za1ix0wp9sop3y045wz4nch6udj965b835itnahnhp77qmd303tsxwxeir4i9yn0\",\n    \"Duration\" : \"z0swykxww3v02fzkrbwwbn712da35imyla4ram0beiizvxfzi98hi2uhqflgajqhfjl4dtxaloqa4o5rr4q635g40pf9u4f8coqb4k6dwkkzz359der4td15lgtvkkr6s07crbsl0s482cj8k071xvi58wvn1ngjjlxihmjqcp0\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Anderson Windler\"\n  }, {\n    \"Error\" : \"ml6229n99p7kebhexop06nmr200yvmbxizsh0ojsehlh7d555y7x60xs1s6xo27ybqw\",\n    \"Duration\" : \"o8cqstmkc4\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Ahmed Schuppe Sr.\"\n  }, {\n    \"Error\" : \"y72bmzzze0yn83y7c20g1f502yc8qws0ahr5gcj5t7u3te91jyto93xn1d4lx0gd5v17bpkelvokb5qm0ktynsgv349s0jckxililsbt650vj46sfswmr6j3kp1857wpsc59cezcw0q47no1geud2t6lv2eai5xobjaxsyd93s2999hvmq\",\n    \"Duration\" : \"lxyqq9s6gagn3yl25g1tjs95t9v6dekht28zzhzsf3ef93j2nqaymf6fdvk6o7m1gl7dasrc\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Claris Pollich\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eee2d858-38ff-43fc-b702-f14265c01d83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.669038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "92e94803-9845-4a1c-9e04-5437ac08ff7c",
    "name" : "Get swagger documentation - 200",
    "request" : {
      "urlPath" : "/api-docs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "92e94803-9845-4a1c-9e04-5437ac08ff7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:50.668237Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDoc"
        }
      }
    },
    "insertionIndex" : 15
  } ]
}