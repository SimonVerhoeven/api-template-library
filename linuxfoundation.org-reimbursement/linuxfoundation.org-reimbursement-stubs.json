{
  "mappings" : [ {
    "id" : "0b914168-b2be-4e6e-bb49-dc177c299560",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b914168-b2be-4e6e-bb49-dc177c299560",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.039451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "9da73e40-0330-426e-84f7-ba599887d67b",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9da73e40-0330-426e-84f7-ba599887d67b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.039404Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "b593af62-a20b-427f-9985-245b9934160f",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b593af62-a20b-427f-9985-245b9934160f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.039356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "47439fd9-6c52-4e9f-a591-8419964ffeb3",
    "name" : "Reset Policy - 200",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "47439fd9-6c52-4e9f-a591-8419964ffeb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.039315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy"
        }
      }
    }
  }, {
    "id" : "06bed080-3e8c-416a-80d3-2c36ce22fccd",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/d767",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06bed080-3e8c-416a-80d3-2c36ce22fccd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.039283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "5f0dccf4-b877-4101-9de6-9c4165dd7e20",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/d5ms",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f0dccf4-b877-4101-9de6-9c4165dd7e20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.039171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "a6e491e9-f450-4416-8079-4a79ad49dce9",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/wk7x",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6e491e9-f450-4416-8079-4a79ad49dce9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.039056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "f6784fba-c86e-47c9-9f06-2f9a7b4ffe98",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/833w",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f6784fba-c86e-47c9-9f06-2f9a7b4ffe98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.038941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "779e62d4-b03a-4b4c-bb57-d98217e743ec",
    "name" : "Update Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/9lx9",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "779e62d4-b03a-4b4c-bb57-d98217e743ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.038832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement"
        }
      }
    }
  }, {
    "id" : "3ee084c5-6c36-4e08-867c-926c32151694",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/b3nk",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ee084c5-6c36-4e08-867c-926c32151694",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.038729Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "3d3bdd4b-4b7b-4ef9-8a53-a71ab05e7c13",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/o2ss",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d3bdd4b-4b7b-4ef9-8a53-a71ab05e7c13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.038607Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "cba3ba14-b5b2-4ea6-8bc1-6514c7b8a4d7",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/n48b",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cba3ba14-b5b2-4ea6-8bc1-6514c7b8a4d7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.038478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "f315d1c8-69d2-4df4-837b-52c3befa973b",
    "name" : "Create Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/cca4",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f315d1c8-69d2-4df4-837b-52c3befa973b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.038329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement"
        }
      }
    }
  }, {
    "id" : "b504fe98-dd87-4e0d-b0be-db98f078b6f3",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"b606cr0n3nef247rzlm9soj3catdnrilubk25614ux9vm99rcyche0ph9620xhk8hr5yhid7pb6p7oyy6jyfdo3b3rdalel1vydroysycg44clemxcosennzch2jgcfcs3750slk75kpa4nu06b8pk7suhn\",\n    \"Duration\" : \"1fdx2igk23xq6717mnk2vt1g5q6c5\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mr. Reyna VonRueden\"\n  }, {\n    \"Error\" : \"4wxs7yxnmmszmq6d5ko3c9zmk4abi0dsu2byz4cwemsc8cpexu3jfc33w99i1mv5lp0\",\n    \"Duration\" : \"wj1grb0bf214iaf9qg8qx38m3ctumsbhi75ydcqyql3aufet47wumskaipit32c31bkyjp0b2mcr0wh7c9wo\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Sammy Kshlerin\"\n  }, {\n    \"Error\" : \"3yruftjc\",\n    \"Duration\" : \"8aqo519yyl5dmg61m22tuvqqkkvy7x39s01he280vvgv0jvxyym98hg0hb1p27sgpz4q9mcvej54ye17hkte6825699tyr1nv6v4y9obvsj4d51sf5tw73aqoq137demq9i602t06u643\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Christian Olson II\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b504fe98-dd87-4e0d-b0be-db98f078b6f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.038202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2ad919e4-bd97-4a63-84f0-a7eb9a6f6b9f",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"89qx62l3hn4w3f8u032yfv0ijt3vc83fi8z8xhdnoumdj1vsz5bh93t2opqjhs4zkqal02ww4sjx5dmjtrw669\",\n    \"Duration\" : \"2wryuuslh9bx5f4wrkt0opwgus75nas60hdixlql7biygqxg7mz3zmnu2l6w2ajgcx1xyyfjylwsq8mgveicuom5qq4pr\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Marybelle Schimmel\"\n  }, {\n    \"Error\" : \"mbl34zll7kb2axxn6q\",\n    \"Duration\" : \"2x44cfabeowy5g3sna6bsftpwy5g5pjnjeliywd5p54mygij6kkbfrbgb95q5l21c7icso\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Miss Russell Runte\"\n  }, {\n    \"Error\" : \"qyr7isdnrkv057fnvpm7s8tua1271gr92nxoyyur2a33olcsfape16yu5rdvdps43v\",\n    \"Duration\" : \"dhuopd2avsjzql5mfzg37dahu9s7gks4nbbnsls9zlaaqv2ix8huilggkq5f6b0desb2ybklo353ap5sa62i9bbuuogii54d6gn901uerkhxvrjwukh9i61u75dk45ddun6c2yhzocwn8m8dtgha5yu593p057jogg432muxvlwf\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mirella Reynolds\"\n  }, {\n    \"Error\" : \"9s1ecjrhe8we6stc888yhk1s4ty41f6q6n68ehv0kewc8gdptbwm3ur7cfb0ys07zhv6mo5suk54l753vzevp72gdjzng1zvv0n37vdf04qfdvs66t992m56smesupz9y3ywlb\",\n    \"Duration\" : \"ntgs4hlp0q8xaknskkk3as3d2d7fdns8tkvi05205y6d2h5edjmop75peo99em492chzw9hpyckdkbkysd1vjorstf1l6njmrduwg800k566rhgqpqomaurnup2jwm4c0up0ceigmv8f7fznut1zo9pm609jacvjw\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Shanika Gutmann Jr.\"\n  }, {\n    \"Error\" : \"rokiphqujp9za9z6jynv0rb713oozuv3ju5h6beihkbylqudxcj7j85la83vsg9jpp\",\n    \"Duration\" : \"ptp6xaunzp6a01mlr6v5d0c9as8o4ot5xwbobub3b20byxbmgcj376fhxahb2y9ooyvz6dy\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Newton Johns\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ad919e4-bd97-4a63-84f0-a7eb9a6f6b9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.037916Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a89eea0c-ca14-4caf-99d3-58a513c050dd",
    "name" : "Get swagger documentation - 200",
    "request" : {
      "urlPath" : "/api-docs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a89eea0c-ca14-4caf-99d3-58a513c050dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:07.037364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDoc"
        }
      }
    }
  } ]
}