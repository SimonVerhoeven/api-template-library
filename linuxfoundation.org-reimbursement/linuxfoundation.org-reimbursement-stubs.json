{
  "mappings" : [ {
    "id" : "1489e675-b060-46a8-a15b-c8d361ff6a32",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1489e675-b060-46a8-a15b-c8d361ff6a32",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.655468Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "776226bc-c69a-4bf9-aa48-6f538963a886",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "776226bc-c69a-4bf9-aa48-6f538963a886",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.655422Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "f5d17006-e9a3-4bac-b9e3-da2dc162e976",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5d17006-e9a3-4bac-b9e3-da2dc162e976",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.655375Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "ec025718-eedb-4d7a-a239-d6639badd271",
    "name" : "Reset Policy - 200",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ec025718-eedb-4d7a-a239-d6639badd271",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.655336Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resetPolicy"
        }
      }
    }
  }, {
    "id" : "b3816537-e323-4771-b463-50ccf6193885",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/01i5",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3816537-e323-4771-b463-50ccf6193885",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.655306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "af7cd04d-e0f4-48f9-8f87-9421a9696cc8",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/s1p3",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af7cd04d-e0f4-48f9-8f87-9421a9696cc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.655196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "c7016c2b-2345-46e8-9eeb-461def95dd84",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/l31s",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7016c2b-2345-46e8-9eeb-461def95dd84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.655086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "b68a6377-4cc3-4e19-b6a5-818696d38593",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/ydgw",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b68a6377-4cc3-4e19-b6a5-818696d38593",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.654975Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "31253546-ed1f-4dc8-b3ae-e19669bd2d88",
    "name" : "Update Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/8o10",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "31253546-ed1f-4dc8-b3ae-e19669bd2d88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.65487Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateReimbursement"
        }
      }
    }
  }, {
    "id" : "16e0fbb2-d11c-4004-99d0-b3638e14ccdb",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/245g",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16e0fbb2-d11c-4004-99d0-b3638e14ccdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.654773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "3f14d439-244d-4cf9-8a63-46230d152dd5",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/w82b",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f14d439-244d-4cf9-8a63-46230d152dd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.654664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "672527a8-8447-4fa8-82db-3eb0898cdef4",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/a79d",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "672527a8-8447-4fa8-82db-3eb0898cdef4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.654544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    }
  }, {
    "id" : "9ffbeabc-0d7c-40e3-872b-f7deb4c72ce9",
    "name" : "Create Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/52i2",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9ffbeabc-0d7c-40e3-872b-f7deb4c72ce9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.654401Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createReimbursement"
        }
      }
    }
  }, {
    "id" : "5f0c5759-d7a7-4e32-83a2-525b5382a145",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"wy79o8id3agj9ep8eraj61ytzd8zkf5fzr683n97ozd6\",\n    \"Duration\" : \"ncuq2jw99myhhdxgts9hh05k8vj52fqfmqfmnsf\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Anamaria Schmeler\"\n  }, {\n    \"Error\" : \"pavf0tvk5rdf9a0jztxb6dn5ekw2xeiezik3alwxsaz57c9entnu20cu0fzyufjgqo4fugag2114vwg19mg0t180dy5m7vckg0dsm0hdg60dudc4569g4tmaqf2l\",\n    \"Duration\" : \"rvogz56hgw22\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Hilario Morissette\"\n  }, {\n    \"Error\" : \"ljvc62qa7u7s2ktgd3x78gi0lcjhpjw2ij2jz48s9anmwt91t4phgmbtgqs2895q2jewbyp96sp2httlmw1eb29fud57okd01\",\n    \"Duration\" : \"ibwyfct5nzlkkdg4vwsvns4xea7f4154dj8kv43earcu925vf02fuathzymovca2uwskm171bocnasjlwi8byvhg0lb67rfga9mds3wu8eay754ypbjin6sjfg5896s132n0lpv9j2lj4bmmb2j1txqzju\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Diego Beer\"\n  }, {\n    \"Error\" : \"9wx027w9rgvfspdxq1ukj5y29pn2bkz8jxououpc4buhe7lrn295eqo5el4kwly1nb7alq1j7gqio7kdri1yf7i0op0qcfqhgzmpap25tkj77b\",\n    \"Duration\" : \"ew3k6z02a2vnn25cln6bq4cv637xaj3bh0nz7lz9dj5ue2sley5c4wv094yuothy8ca6r2iodpi2kbkb824j2s0bnva7vex1fiuu4fyx27dgdhi\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mr. Daryl Gibson\"\n  }, {\n    \"Error\" : \"6z7e7geooe2uy29o15ere57k4naza5qv5z8brcsa6rdmpb5qdhgblo9b0sv2n0y\",\n    \"Duration\" : \"jdsq5upje3f0ea6wgi2x86ryvv466aol8fu6imwngbjhip6fw5syo2j2vxgwjdox0ty\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Dr. Freeman McCullough\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f0c5759-d7a7-4e32-83a2-525b5382a145",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.654253Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c3f8b899-2cc4-4770-a2bf-8684a068a573",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"i49g5wh7qgg8yzu3jxkgbwr6arxlhx5dma5qco951121zht\",\n    \"Duration\" : \"3t9o2bs6mcngqohu1nv5fbxd7iiedhiu7wzl5p6ro980xjx2mkoo4opj3twct6kyy8s2uut\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mr. Gerald Ullrich\"\n  }, {\n    \"Error\" : \"c58ce3duxgudqlmtjh7femxhziz5zdzm7xotxzeyyljroe2mfhlenifl8z8hr3dgtxhrjg76wgxuf55x4km86\",\n    \"Duration\" : \"k9yofc9f6751xomigj82jl1oy7f7actwtkxk4qwy3u2tmgmcoc5vtjzkqmiugrsdytlmwt52cvcssuz0uplwkbgt1mplyoqtijxu347bir89ehrmyqm4ld3xefnu2x012buovz6bzd5i5d55ye3xgy6na4k0t5qsg9vkaqpsmb8ptaw9oae9d488j622\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mae Schultz\"\n  }, {\n    \"Error\" : \"0e6d781faerqy0nmkhtia5lx1qzqb0kexqqljxgxzr1k0ksa4dyq6zcdfcw13lnll39ucg81k3mc4ofktx4x9xf1f67zwwffoejwela2s98uret0bobbzexlhlsxmzvmdn7yl1epw9\",\n    \"Duration\" : \"tppe8bf7zm8y36bscn28r86trl5d87ksyvtlsa608\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Ozzie Farrell\"\n  }, {\n    \"Error\" : \"k4i8e09nbll4zcegb8gtl7tx47zdsjot8fmvg390i1du5xeokq3bl7mbt0dq0kqpnhxajuk45sgnkbmoe1ekeffzj3l3319v1ty58j1g03mh38680kec5xejc3r3wqmv9blim4iqchw4nnu18vy6uulxzshvowattsv36m9srvllz3id9zme465\",\n    \"Duration\" : \"9igfmnazwfdba3yeqk0sz2vtd1ycoqkz8i3ybzmb03egcvg84ydx7ins2wcsfis0a7gv6cedcmlclpj6jeiy314b6ipwu7vrmoe9jq6abem24d3brh6zhvbznpv61cx7amdqx55xvsmct0f4j7pxzp4ztndpx95pldd8ki8zi43xdkcgx8za5m\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Michel Hettinger DDS\"\n  }, {\n    \"Error\" : \"kqi57yw4y8slyoezz2q9ayc87dcw8qavlvro4zls1h0za0lj0f959orpr8oen98anli2iz8za8lng8c2oixj4mk6uni4vi0bfu0pjgj4pjpo6ya4c7ajr8tf6g5hb7zl77o31o0jvb892o5q39u8lb41rvqk8\",\n    \"Duration\" : \"xi4u\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Miss Alphonse Dietrich\"\n  }, {\n    \"Error\" : \"ul745ua4y3tlj4zutwyd3iumxpek4ajgstdh9a\",\n    \"Duration\" : \"55xyxjr9o8dvju5zff6vpk29ske8h6d385vgqu4jewgu67rdahjnw1ev53eh8mzldfl7cauirynvybbtyvtqaao4oq5u7bh8\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Tim Haag\"\n  }, {\n    \"Error\" : \"8cnugo45stirmlxeexnwcgjlsrtx41en\",\n    \"Duration\" : \"4w9q8g9jj71zz7tda823d63rddw3ixoxqeu0hbw5wybimbe87ylu8k5esqrf3wbhktx0okbeyck1tqowfngh0py\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Warner Gottlieb I\"\n  }, {\n    \"Error\" : \"qbryqovjcras7k1zy5rxerwrmv50ms8ge8uh32tq8whcj33wad8z9l8gr5m2pxgig41butrh7w57az2f75qdpmpz8tt0ddbvvi3bnxptks8uwl50ehdcch0mjl6gatkglqcyuxr756jdxd1nemhrgfhbyjgad9nt48ork2f98g2qiedr6iyj\",\n    \"Duration\" : \"8q4qtzrev8mu\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Wilbert Nader\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3f8b899-2cc4-4770-a2bf-8684a068a573",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.653834Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c9c75e58-f244-4856-bdb0-86e5126f555d",
    "name" : "Get swagger documentation - 200",
    "request" : {
      "urlPath" : "/api-docs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c9c75e58-f244-4856-bdb0-86e5126f555d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:44.652992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDoc"
        }
      }
    }
  } ]
}