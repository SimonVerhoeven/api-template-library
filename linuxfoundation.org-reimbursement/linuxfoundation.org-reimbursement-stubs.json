{
  "mappings" : [ {
    "id" : "00b456e9-f182-3e2e-a3a6-a55e3f47c1d1",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00b456e9-f182-3e2e-a3a6-a55e3f47c1d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "1619f2fc-fd5b-3f07-b8df-61d7b5b909cc",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1619f2fc-fd5b-3f07-b8df-61d7b5b909cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b1263a90-c3ad-3f82-ad33-35e76e1ae113",
    "name" : "Reset Policy (application/json)",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b1263a90-c3ad-3f82-ad33-35e76e1ae113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetPolicy",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "617c06d3-8fac-3f0e-ac48-f81b95ece13b",
    "name" : "Reset Policy - 200",
    "request" : {
      "urlPath" : "/reset",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "617c06d3-8fac-3f0e-ac48-f81b95ece13b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resetPolicy"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "813eb838-b8cd-3416-ad58-dc14874dea8c",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/8jy6",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "813eb838-b8cd-3416-ad58-dc14874dea8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9570b5eb-2cd8-3686-a3ea-167532b9084a",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/ka7s",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9570b5eb-2cd8-3686-a3ea-167532b9084a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "7c4e3c47-4b40-3ab9-bca8-dbe1d3210bcb",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/1fgd",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c4e3c47-4b40-3ab9-bca8-dbe1d3210bcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "4e953736-29f9-3fc0-8153-c4782b317658",
    "name" : "Update Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/4b3r",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e953736-29f9-3fc0-8153-c4782b317658",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "89822d8e-bf97-3396-8fcf-4507099d489c",
    "name" : "Update Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/7tb2",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "89822d8e-bf97-3396-8fcf-4507099d489c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateReimbursement"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "a1dea64d-d1a4-34b4-ba83-37d615b35176",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/8es6",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1dea64d-d1a4-34b4-ba83-37d615b35176",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "a3aa1cd3-9b49-39e3-a062-0ab5d654db50",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/u23e",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3aa1cd3-9b49-39e3-a062-0ab5d654db50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "b0cdbc2c-867e-3a8e-870a-9fee39785ef5",
    "name" : "Create Reimbursement (application/json)",
    "request" : {
      "urlPath" : "/reimbursement/4066",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"Message\" : \"Unauthorized\",\n  \"Code\" : 401.0\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0cdbc2c-867e-3a8e-870a-9fee39785ef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createReimbursement",
          "schema" : {
            "title" : "Error Response",
            "type" : "object",
            "properties" : {
              "Code" : {
                "type" : "number",
                "description" : "Error Code",
                "format" : "int64",
                "example" : 401.0
              },
              "Message" : {
                "type" : "string",
                "description" : "Error Message",
                "example" : "Unauthorized"
              }
            },
            "description" : "Standard error format"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "d595916b-9fd4-3646-b217-2b5b43ab8ee1",
    "name" : "Create Reimbursement - 200",
    "request" : {
      "urlPath" : "/reimbursement/was4",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d595916b-9fd4-3646-b217-2b5b43ab8ee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createReimbursement"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "3cfa2514-1030-38b1-8bb1-f0cd9d680549",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"lkpxfvf25vdg4qfftrlump3bhyexk6zb570gi8jaxpbo6rqamcqszi0ay1iytqw7rzieneq0tr2gbmib6pjedqfb0pgo4mcafaoia8ymr7ljcr3tamll38n\",\n    \"Duration\" : \"85v3z6d3hgm0hr7bm4i0f2zp5wxi0t5hu4bhpkc44fl8mualzri9ff2txg11x7oeicrqoflgdgwgw7xan1znxrqfpgb3wmk5jm7xqtgnd4j46kzcu7ax9rm\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Cody Pacocha\"\n  }, {\n    \"Error\" : \"fdocd3f3kaqamx7zgeosp675qg42i1yr9p4i8rx3kmocpgus9ojnls83wq5gcn6biq4prg5wg4c8v69f\",\n    \"Duration\" : \"k4co729go3i43ayishv82rwebbn249m71a53d0rrsbfi2fuhaji2jc51rsgwp5jadawucwsukreozvmeczwyskj1gzlgvz79q5f8rateoiin2320uylgjqf4vja6kahzfqqu300dfosi3nuz5a9vmdzhble3xr9stdjjtkfwdabmlb7n9if7f053czejayvsq\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Sid Harris\"\n  }, {\n    \"Error\" : \"my0n585kuy4we3olnyk3x4rf8hwkljak3rxnm5ou300z8bnb4iz428dyh5xerw434cqlch7jy2ockpvqyo6kufqjuftkmayk901ljiqxe98klfb3ff7g8fs66jb3n4b9nfgmexha7wpjkcd1p7l09f9ftyzbssyt0mzp2eso0cm5ksz0e9lv12fzysl31t\",\n    \"Duration\" : \"fz4ucxkabsu69rakkedzdu03ttzyrp7arhvkyvwiqmgdp4fy3ph98ivx98tny6wzdq2hv8f3fge51659ot765l6lcagvg9aqf2jmgw3cquxymbji81xdzws0z\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Blair Hammes\"\n  }, {\n    \"Error\" : \"jch90340azd3ptuc0rqgjru657ibtf083um9ebcu9waoe90dc81l5dpaky9regydo0m2d8ksp6gvwwubyrk05vb7av3\",\n    \"Duration\" : \"3inxojzy1j9g980ypnhfrri3ggz2a1gywe1rv6yajrik0ni5v985xl6t69ezkrc1fwe5tuc7nezfmgt9gsojczoapnfxfouw7gix9ma9tc9lsuojxv99mrnqoayl8x7eqjdrg7403xqrkr042mzgxqk51qjihqj9yjnf89c0rpog4s1e7xev9v\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Caitlyn Wilkinson\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3cfa2514-1030-38b1-8bb1-f0cd9d680549",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "bbfe154e-02d9-372d-95b5-b48e7eb085fa",
    "name" : "Get API Health Status",
    "request" : {
      "urlPath" : "/health",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Status\" : \"healthy\",\n  \"Healths\" : [ {\n    \"Error\" : \"0sa28v3wv77bhp42am4b7jkmqdue1cdauuawfup212y10aezd620sw2mxccq1tknza9i61hbn79krt40pzp0m86izxkepjdakwptx2w8pkjtr29izcd3i2u0av51iw8frpoo6va8npscrwvzl10g3bnmvb38ehh66chsklnmx8ch4hw95j8cuokev0fb9e4r3\",\n    \"Duration\" : \"ozbgzzhu6hkwr8zw6lkr72g48cuigggmzarjogew65g0epb1wag3kp19xz8zqsz75lxt66cp8fm8vw9r24dx7b01ih83nzljsktzn1y3gugk8t4fbiht4gi6zms5ybuj98bt9ph\",\n    \"Healthy\" : true,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Lewis Sawayn\"\n  }, {\n    \"Error\" : \"8n38\",\n    \"Duration\" : \"4r7hrcyn4isbr9g7ap4iy3c6zx2ldbcuejp09cpplzztinlldkrkn3xm14zgrjzoat\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Mitch Brown Jr.\"\n  }, {\n    \"Error\" : \"u8256yj3bee9djv92jr2dyyemxax65sds08grysy0lm349ohkwpjduaoyrr71qn8u6kbzj4wtcmf4t0iy5keedff1rqxzil0yezuvy31y3s4pmwb2e0ju30np9ie3e\",\n    \"Duration\" : \"mi8gvti9fhuuuirng49j9o5oph8xhqm59jeu51mbjv0qmzg71q1ts0nao0g47kenahluv6y52jns8xwr4p3s1eg3e3gfkjmojgg4cn8s3yk2uwe2r7kisnsd9f70ggeg7q0w98b4fwbm4c9dlc4coq3vr8u93gnc2h\",\n    \"Healthy\" : false,\n    \"TimeStamp\" : \"2019-06-07 15:37:43.131120884 +0000 UTC m=+0.257965506\",\n    \"Name\" : \"Dr. Scott Boyle\"\n  } ],\n  \"BuildTimeStamp\" : \"2019-06-06_02:59:49PM\",\n  \"Githash\" : \"62009963c9e1cedaf7a24649208983163f8c439e\",\n  \"TimeStamp\" : \"2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbfe154e-02d9-372d-95b5-b48e7eb085fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "healthCheck",
          "schema" : {
            "title" : "Health",
            "type" : "object",
            "properties" : {
              "BuildTimeStamp" : {
                "type" : "string",
                "description" : "Time the service was built and deployed",
                "example" : "2019-06-06_02:59:49PM"
              },
              "Githash" : {
                "type" : "string",
                "description" : "hash of the latest Git commit of the service at time of building",
                "example" : "62009963c9e1cedaf7a24649208983163f8c439e"
              },
              "Healths" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/health-status"
                }
              },
              "Status" : {
                "type" : "string",
                "description" : "Confirmation that the service is doing well",
                "example" : "healthy"
              },
              "TimeStamp" : {
                "type" : "string",
                "description" : "Current server time",
                "example" : "2019-06-07 15:37:43.131125775 +0000 UTC m=+0.257970409"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "a0fc952b-ec56-3a3b-ae3f-877938f017e0",
    "name" : "Get swagger documentation - 200",
    "request" : {
      "urlPath" : "/api-docs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a0fc952b-ec56-3a3b-ae3f-877938f017e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getDoc"
        }
      }
    },
    "insertionIndex" : 15
  } ]
}