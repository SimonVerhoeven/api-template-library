{
  "mappings" : [ {
    "id" : "1531073f-6479-4eea-8c13-e99e2a5c560c",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/fbqlkbtvhxuv9v52m141bigkgkt340turbo1c4vnu7uyw2oxve6y3s1tmi99kmq2amfw6jqzjknki7h1zcbeo5kw5llf5jwjxgmzpf3b5a24vadyjiq1khvh42k9vmv8a96zjh5yiob9ngj:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"q5cfah4nl39mp9gncf52wmnrxaf33a4tad5dt7wc6hmn7uktub43n5yn0yavayv4n1vf0glz745moy2q5sacghzbppl6ksqxa6xmcvo66pti1z3fvkje8hpxi0xgysiz6alucth7lmoz0ynk2eyfdq6zti0i3pq8qjax4y33lxpuc\", \"i4px3ldga7m1pr5ugnw0b8at726783c79eogocjz2u4ir3s1febotf8sd2bnqchjxvovhiav859lejl6llukqos7s0tvv7a7y5msqywtoysreqqqv8o30l6aee6724d0t1daixv\", \"87eb9e1bq9duhx47y8cprgyekjdqo92zsg6x3s974360okzls010zy9qo8qysg3cf58ul7xi0tvmlsgudqevhqre6sc7ja1r48t9phz08i0nwdj4nsnzvbdr9h4tmeec3vsi5udl3s34od0t08prn6dkx9xd5\", \"yrgi2ozf25lz9k7n6q37xooubjdzs038jzwf57ds4k55nd4ev9i24hcy1fldbmm8hqw9drcj3q5hv8fomkjjesam3knn13tqvecjb7\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1531073f-6479-4eea-8c13-e99e2a5c560c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.14831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f5657423-d685-47e0-9c8f-ad1f4216953e",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/2e7rplt1d5uqvc96lcgxfy5xjmdqkrshg3t7p075zi0a95u9ew3knwoyrjn:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"fvmhvi4awrsnh1sloypi2k6t13zq0ozobw4bzyqadineo5qa461n3jqf4iv9z528s0o8qi840a568n5hko29z6cswlgj1prv32eum3fl10en9bipz5bqs383c3t3jip1kbijmaabi4phoqhzztfccsnx9hsbrrtb\",\n      \"description\" : \"Saepe harum eos quas nisi. Maiores aliquam eum laboriosam unde. Modi neque labore. Vel ducimus quo dignissimos hic.\",\n      \"location\" : \"4ntnucsk07579cseu7t3d0ohpa43ujhltwkqnv7ju6eahq0zul8meupkl68bjdlry8o1zi7\",\n      \"title\" : \"Laborum tempora enim aut numquam enim quas est.\"\n    },\n    \"role\" : \"6u5n2tpcuomntzg3jmgcom7ueu05fw33kwbpvh39zm14x17dl4m2gkpvkfwxe5w4roetup7777agonyxldgcmjtaidsttp63a4f6t5mo4a3bd6wl5aq9809rcue24kyqmancqgsmj7mn71avb6vllz1i9ogg49vbzkgz534bbqduhp8dnxp9ewm3ap4azd5z9coscu\",\n    \"members\" : [ \"hxop087u8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"r6ewe2w1t0h0w78fnson8uk4vmhnpn39n3tkxm7nj9oi63tcw8aprfegxedjzdadaon6aa71tqq24tsgbmjiz6nam9ugd2lxdce4d1aso3v8c7n17xhienqcg6vg8yatsbfy9gehkpufcu48t9ygd2v4ptd711r9eh9dos5nojgc21auo3npw6fspq4i\",\n      \"description\" : \"Est nulla inventore. Quo vel voluptatem non ratione nihil. Hic provident eveniet quaerat molestiae.\",\n      \"location\" : \"x7uiavey3d7l99fgh3ao2n1iwj14hqvx4y583am4r265ybleji5hllkrnbtp2u4wi3d4n196ua37b7e1iq88jfku4wetum72zmsw2tzmmxoeuwz76ucaa799cegp8enq4k5xu2nmyrkjgjgqcbrz2mei1ejg4qtg7gsvcwe4\",\n      \"title\" : \"Est similique aperiam voluptas distinctio dolor.\"\n    },\n    \"role\" : \"32h35il6id4184bqdjwc47ay0ay1q7nqiq9atuein995otdh97yac2fxc3rpco25rktp3ofn74gh52alxwu64x0zh1tj22bv7czf9iinqns21mvi1dpkuejf4p2k06ejlnxlc2d7d5nc37h06innfrnp4m6\",\n    \"members\" : [ \"aygz4ojdmxofmx775ru5ycye71w8qfomfk9jlvz8ueibtjc1\", \"fxtex6v7chtyr9zar5rsk9yhc9azd3wsagn3i5v1w04vv27u65f3wz0m4aeo3z1wj1mnvv1qgepxdmm7e5ad4ps19j9nqs1r7huqub70ws0392qlr10vax9esus1ob69x3q9978tz19t72ywseocsdnt\", \"b75wlik5n7qt4iyp7h\", \"1xin6e0biw9o7gfl\" ]\n  } ],\n  \"etag\" : \"voluptatibus\",\n  \"version\" : 1758646663\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5657423-d685-47e0-9c8f-ad1f4216953e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.148209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5b267480-3832-4c3d-8916-3700009a4494",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/ch7blwbe7jzr7aieayxju537g0ez:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"vt8vcdyti3g4p9kau4pgf6kkiqy6rxi8ayd3lmom2q1a5b79m4swe3ck1tg07o1xzm0cuozcci1xz3jh9y7yz7rho7fli7zxufgknge7d45shawy87mxye3l0a7gpxc4yl7094u9\",\n      \"description\" : \"Exercitationem sed sit molestias in. Aut inventore odio. Rem nam vero modi iste autem.\",\n      \"location\" : \"mpbzunc8z1rbfbgzwypp9le9e48fz0bdatidnf095oljnkiw95e\",\n      \"title\" : \"Totam iure ut amet quod atque pariatur quia.\"\n    },\n    \"role\" : \"wqg0a8a904j69puhps8e68jyztta6ezq861oagy6zec11kzuyjxn9orz970hehbaay4nssivpx0r3oavfvn5exxokrpfuumx70pwdczam4nweo64g4l3lszi9i8x1utkdtdssvi8yui53gp4xe8xgdnlmyg9sooaulsyf69h6dgltuxsb6rv1zisoct2zpfyp51uj\",\n    \"members\" : [ \"ebvw5ny3rbb90b0mii7t5g7r0q0lpozd97s9r312vqwg3bwv6n95le60vogr5aqgz7c6anplbb9qpsn1v3gr1alh19z7lzemlnbljo3j0da1lzpcihw5o5gx\", \"gauoa23q3g6\", \"qi4k9grirm9rvhv5l3nyaa13858tdcavrpf0ahlxtahz3s6ym3o53anxmipdbmqhqzjkn13g7lf8cb0c8bkt2zt6p4dk9ywp\", \"3swradywtmp7bu3buyu40s0mx3rqjykdeu4eruhbfqjw1ky8gc9w4dh2gl8z93mlt4a9etu10bc\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lek9ij99eqk5ikgslmvpb23pv9p43sdknl2lgqk88tczkfzrirrswggfpnvqfy11fdadu4z5ob367mk8dkbzzy204eg42fbb0sj37gi8zkk4\",\n      \"description\" : \"Quia sed in consequuntur autem deleniti asperiores. Reiciendis adipisci similique porro libero. Nisi qui mollitia et non rerum. Pariatur eum in et nesciunt sit eaque. Architecto sint sunt eveniet sequ\",\n      \"location\" : \"qmffi81k3vfo1j6u0nivjt71nzu8h68\",\n      \"title\" : \"Modi esse occaecati quisquam et similique.\"\n    },\n    \"role\" : \"zojftprb6nebe78jx7ki6lzq2dgespfxmpbt2cimyi0y1mzaebha05tytv411cts6qf8myus1q2q\",\n    \"members\" : [ \"u7xjfinkpmikug2s93d1s6pfnc9kgrn0titi21qmf8tfb47h29qr2pkb9q5u77xj41j4k9iwrftqolgf5etm66hsseaysumosry2q8lx1eb45vuwn\", \"vzjqj0tpm3htdm0zu8nle5tlulxndfxhxefi\" ]\n  } ],\n  \"etag\" : \"corrupti\",\n  \"version\" : 845892182\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b267480-3832-4c3d-8916-3700009a4494",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.147881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "532f84a3-eb0a-43d8-aa37-1d2f1e854382",
    "name" : "Lists table specs in a dataset.",
    "request" : {
      "urlPath" : "/v1beta1/xqiy6t6gqjrbguzmk4fpocu44hpc8kfbiy3at7zkeuvf5ejv8iqvcbeflexsx5ez12co0jvjlqlqsph78jgigh8ecrm836nkv4jwi0v50wy4mab3l69g32v2cb3pxgq31ugakne0/tableSpecs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tableSpecs\" : [ {\n    \"timeColumnSpecId\" : \"kmt4\",\n    \"validRowCount\" : \"p8zsvbnqxhx9chabj2hv7ed1ul0hu1f4wah7e3dob34xfj7445tl3qd2zxswnam43vop721qgpp9s4chc8wh5u3l5ybukp70n\",\n    \"name\" : \"Joaquin Ward\",\n    \"etag\" : \"ipsam\",\n    \"columnCount\" : \"76jomuolk6swa\",\n    \"rowCount\" : \"wdult93f1nh8xyocw7pnvs180mnqpddylml65gfptc0rys1w0s2q99yorpf6gn8ikvw8hz73wrj53fvl7z0gretpkcyqknntqmyjrpq8zonoj6rnclbgeh7c2vkheqkmqkk7cem95af5v5zcgqkgimqs1y419u4x4w1jzumda9gczco75tf3envp9\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/400337\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"2hp4qspy1da458oiil3nb3ket6rhqirss5az9rv7362640fv4l84qu1wmoyd1z8ig2cvzw\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/826285\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"bptao2vjrbthnrxngtavjogqjwefqi6xfy9d91zrx3117eizfqjyggnppu89iqzpmv1y3las43ez8cn40vmdjtn1a6ssxrfktb7cs7wy4svrnteifjm4smu82\", \"32njbjk9o8662s50rr6l5wa4r1m\", \"367jrtfuntgbsba7cuyt4o9h54l7otx51ssdbz6k7y7kesx4sohh3fh695luzv0ngjmnenoaf5wqfsojmdar6xaqkugsgic8m3w9n1i512nd4znv3p6fzf8lygj5ntv95wrgvcxox1i\", \"mbcstim3fa92k6gci6zcmba3y00pu0ajx56771p71k2ttke850hhfdhlrknmpard1ahylzmhq2opr7bvwtd9btlblf5jnfxhjbwn3u64m2rsffgwvcs0tz60k8i15omtggj5qxlwdmw5gd1od49\", \"dcxino3dl1ei9p17ruzrc8m3arethfvawxu2wrh3lnnihc2df3hivme9kzxnnw7vhmpe0kx1casqej7xbl3aqgv5bm8m7i5bpzm3k08c8a7db6a78t\" ]\n      },\n      \"params\" : { }\n    } ]\n  }, {\n    \"timeColumnSpecId\" : \"lwaf\",\n    \"validRowCount\" : \"d0scqyxjqojulox788rsum7qj09wqfk08hnhmn3z33q9gu9uyw726i9ko1ythisra0qpu6lblyy64zee1wkksmwnsoe7jiy1cbfqngzvoqmym\",\n    \"name\" : \"Alesha Toy\",\n    \"etag\" : \"molestiae\",\n    \"columnCount\" : \"e3x3hu761ar40iabz41v8lq32e1dkg6gi4p98i420sdgueajomugcyai65qimnbic4g2wpdil84n6q0xvyx9acyhmrhtykktit0pibjckl1m1ytt9obftrcjhw4hhco0hqwb6ciz5rfd75anna662qx0th\",\n    \"rowCount\" : \"l7htdb2sap9gqu47kibe2gba1q064qi5myldyesqwc6xvys9hw2rjtpa34xdkklid1c5pibijq5sabalo89r9cltzs74k9u2xycty9lqux3491h7l8gxqlb32burek3jbziqlwsv6lvm6457iie2ojzwvc5147vvhju4e2zp28ahvvqhipsplni9zv\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/569515\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"5fkqmohu90e51nttva7fjanlk4dq5fja1gmkinwz6ya9nbl5afr5juocfrjdmpnbvkuun117voi9jk7w8ik3lkd7vl1q29secrs103yanehkd\", \"j8labkyc9kqo9qg7jad3zxc7ny4nasgs2rhxmdccah7txrbguvrvfsgeb9putu2x62678uany2xa\", \"3grzt4jvqjsqwso58lp7nytvjq5zbnpj8b2vjm3d4m9jul1h6exsjtwrntkjrkaz0ib9qq5h72en12zra5xe54skm4g6i7pwkrsns2n63xr0mskw3gfxhdh7vk2yokmmo4rc7dpmzaf9nuqwetltrcfbf7idx1dh7295a4p6rp\", \"vcwp7i8ywirlz1wk9avvy8tzijwkwg5y1ozr7fzw0ypde7rz4kfnf4zx2xgea3ame7vqfzlvmrfxm0wjkd9z20p5x30xpndzd62nhh5ehmbd64xwsvwj2okk8r5mjp5rvta7bx3erxm3ewio8szza1mqeif7ygji4b0x8wnbl4k0y851xylfs3l304m9gtaa\", \"bs5pmhwcci4m2ornttxxsy7hqex33nccvfvvsfnl\", \"0muu6khp5qihzwzbnqxvgsc5l3r39xuko9p0syqt2egahmui6lv43ikn5oth9mlxasc59tr6zdu\", \"hqseczr1b5ost8bwy5i31tqdbttyr2qk30q75shzgkhr60v5a3eqfzekfm0de2g07wfgtcwp4tj0gdotrsa06n4dgzmprk9v5ss38cuaoz6715mac01w5rkzbkqods1b6g9qifdvmb5smet8l60su5in7choy28v5l97qljv48wjyjl62c6e\", \"v66gik9yhviip3su9kjn52bkkrvcs3j6rjkwcmtlcob1gk1n8tx50tks3n6jczfneg1dhapwvahha08pvk66v4oqjqkpp5e7vuhns2dipffr7l4rqqcaodpi\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/519159\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"w5nhhp41b3swkejhk16eiteq3jlr9yccjlw4qyfungzi4nf4pe23l0j4r37ijnrc1sfywkgssstraptuqvlejuhzbdqzh0ugsxsrevjf34yh5y3ecx4unb7cd9qivh7xrly6\", \"9g9vgqrky1cxsd3vdwd557pyfn7wn3uljqjqpqkprc1324ib7idvbv09jyoei293jozpu3huywgm1pbkhmqnc6lqb03oj6wkt3drcdnwsivyuspfrh7lzgklgu3nod2lkbt5hk1ythtvjx0yh27\", \"scbp1mu7ack8571aisd36u0jr56fjec7f73t63hi13iauk3ksln0iq4w6vhq2ieovsg77306ldajf\", \"9k7b14o6xnk55vwnrb4wdp\", \"di4g7ltal75reyo51zggcs8kra2q9gtee13s8wvhj\", \"odegam5bh2u80oboias9lg0c4b133l74plwkn1assswua670uejh581cjgww47daiutqqgthox\", \"vsn75ema3lhek86xxfd99ofdz56swmq2bbqz642j34oo71jomu4yahx8qwrj3eom6fd2rcvrrtllh1ue885fxt16fvsaer4bzr66a5v1mv0cqf5v75ic1gutqmun1vrys14t7762erdnljooisuhj6p57\" ]\n      },\n      \"params\" : { }\n    } ]\n  }, {\n    \"timeColumnSpecId\" : \"0p3h\",\n    \"validRowCount\" : \"niam1sjmkmqcby3drlblx1ytcz00sy1fy\",\n    \"name\" : \"Towanda Thiel\",\n    \"etag\" : \"fugit\",\n    \"columnCount\" : \"lua\",\n    \"rowCount\" : \"wuovbewam63fyu1y3d7q1qu9kqx741xzb3y0u7xl2otz5kilk7cwqg2wen75xfj4b7mo4kaigp7xo4g1t16zmao2x9yxj56998a28ia3y6pjrlb7l30y317f51cubrla1gt3epxl1dblkhikt68d8cwjq1jxbomr76u\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/056675\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"drozb3smigisi6bcbli2fl552bur5ncnbbnec1\", \"nnrr7tr1w3djifckk4h76wb0b16qufwfi9nkfoux39z7maqfabs6wfyrkmlg3rv1s3dzw5acb5b19c419t6m9qfnfm8\", \"oojjrkr0pftc34tjqtc4cy1ka0dub1cikqildyyi3vm3gg0r5w64a92r1lkch70gmgzock2rgbzxuopsfxvtrqln5\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/546360\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"s0vzkirbsvin01zrn5o21hnl6wg12gnflgea1w2jqpz4ee63awhehjvdo2pci65vfcl4\", \"iqznctv85dbnxcafs73j8d5uvkil2yxet9eu014je0i54051oph98ymzn2qtcgqezkjf5lxafnno26d2mhmpcm0qezrhc2bvxa6shdi3gqz1jke00qz4sn9psiwwc6qcazrxyojxquy3zfx1d5c18ygqbzlf5xgdn4lgpzpfdewbinofi0op06tr578x\", \"auwnfavn0o3gfuz061v9rxh2nfzjgso2kfbciu11p146vdw1rluf8s1eqrg4og3cvzyoaxshjg246wyx2svq0kb9pmpzcm6espymb7st311hkev7dlb\", \"spqsj66j382yfbllaz9b3fascc7hetb8lzj59t82xtb7bvmpprlhzfxpjoq7rtr7s\", \"tdt0fwjlyteb44rlg18pjp48rf1yg8cv8opb3m60y61h9dqdp5sex0xq9ogio5uy7etn7atikz9ysajfff8flu3qevepn6ari0zxcwfwex6mtt4l3q60wcbwrdeq61xg1ayddfefuk6w3fyxezywhz4capsnt0f0jfr2f1ouiif5rloam52f9hkulv8drsz7u38hi\", \"vktuniq8obbqt3pb704vlm1wwyu3ccshq2aomtpy0ewqmyie1o2d5chdgap5r8fqw94kgn049ki44m8no43nnt91y3zgdsmr1jmtqitz2l9hzmt5h4rdar4sbdxpyvlveac1cp6e31n9idn1y3pr87tdmwf619srib\", \"2zul9cwu5x9izh5c86mdvj7rw6mhhwpkxeqqr57tkz0r5x4p4dg611weuxkgzvbiphejt13khtugoo1xbupx94thbkmis8xxg9cd8splrsyfhg9tz59mn3plyl9n9m4jmk7vj1p5th80y3w1tq8asjhnoin8lzfidob2ykig4zv6tltth9mxy0kxdalkgtvgj4w1yvs\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/115306\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"p85tn8mbpgwmmyn2vf9kaja19jmunvvbey\", \"8ugkr0juy4i3yndo2lswjsnhxmdkokv3h9r9tzogo994gg17tc1x9s9u1xf7ehegm0vfg8xx73majufu6w955kn8fbous4hib3o6f1oxfuhek3\", \"q2lohjv0y3k5i4ftb81vbujn7apwt7q12ipdah00l\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/110160\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"uvpler8r61wp6xleq5c2to\", \"qk807a977gxgbm26t3dbw1uknr7wheh639p95lp0ud3nur35i4ibmnw1oua8uo10qzr5p6j11jd\", \"ru40vpxunmrwzv5wap1qqm7fo5oq565nc7k2j89uvpvwvpz0dje2d0m603mqh3mxj375248hw3ft82coauzlae2mz7hy0814tdold5ub91ux5wto3gtf0377v89tp45inenan\", \"th8afjgh1lo4t03ovs8mk9cfafo9e3y8l6e1lzm1077p7qpys1isu0fxygj4wp87cn1yjpixap8q99g1fdzhp8s5xm23svasv3h91iy2y\", \"23rsko3pspgcttjzjddta7r9q0bygmgj98asukn7k6aa3vzq39gormzhudvrfkp04wpjrrf9ys2jmu2hzed01fghawzaptp6ho19cruaem744mj8tld51fu7ua7exa3jpzmhnjd235jlas3wtakqqoaz\", \"jk3x57jmarpp7vjwnxelzejxdvxn49o4hn1s32om9pos02hat6s2ulgmsdkj06vlbqjjso31akkl8hugggcu3ottqfriz02dgyroydnf7of30ohmd\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/773801\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"dh1unhatu2c6ook37chwikgqp2ev7d56q10nex2z3sqfptummhqw3gd91blzbgshgrjo6accyh8ho8apoe47fivscl7le8i027d2rv9cy5f5hl3z42woqrop60w2p3f6xx4fxtz28jf\", \"cmeacrxdu984zqrxdfyxaerdzuln2h5w3wehp5vs9lgbm61hs4x6od3udrfyu9ry3awaqt5g7b0cbwxemkn1g2t1or2o9h\", \"wkfqkm\" ]\n      },\n      \"params\" : { }\n    } ]\n  }, {\n    \"timeColumnSpecId\" : \"0fu2\",\n    \"validRowCount\" : \"36ehqasafpyl2v77ynpqdzhfb7fagbx\",\n    \"name\" : \"Miss Octavio Koepp\",\n    \"etag\" : \"exercitationem\",\n    \"columnCount\" : \"wmf7arg0dvaqvtttls2bbssuugd6bw02mmmcl0sa2d7n7vn8coe7ch19td9pv0ro8l959tajt5e9eur25hkakfj10z3zu0x861cj2u7u19l5v3s8aaknjwghzyc1qyma57ac80po389pepyyoue6hss655w9l92t9n9urae9u1tjnwysevary19c\",\n    \"rowCount\" : \"nirm8u4d9i4eyi7nrlqnueiau8u7j849dn1xf1ow5681hvxqf6ykonilhm5u6\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/693105\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"g9cd5s8e8fw61s54s4nwcfqydcnohl7whyzhbx51rfjpmu0176lmpxfqr7nrmjz12u2msejgomcuktyznka4gumlj3usa5b927euhrir0wf3yxmrget7k1hm9s1595fplmmsa42rl5rmibgsivb93tvdtd382d7\", \"rnizr4k4u5buldn4e9j8196wixb35ogqyyz1bfa7kyc5hgl02as0qql2etq7fkfnpk9i2hc13y98pyfvusqj78i\", \"ztu9qdv49945vzek0ol41stbnebbolko5fx93ycz913sshm1q7bfybug8t7y9vcxtyonh3eup9ot6cjbe5ghcbx3wt279ssp9oc3ug9xqm3alojabyofly0wii1k7k0503sdfehd6r714mxwi4qm3v6zijzu1o94b\", \"95q3fawmdsg49sl79ug0wiv9uusa88817oqzvu17risdota9gtybdiyrzol27ha4b7zin3zwx9cncc5k6vk8t2s0yqf2qvjbkwnlv6xttamd296o0zien0gfwbutb1c1z00w45fj75vtwtfxxl87nlq8woq\", \"4egb5vlfuxqhm6f8tp76n5hhg56v9qt22ybx2zaaxxd00e524zrjlbjh679m3depf3qujw1d3v87dsrg0rd5ro04ewi6mfh0b73m7ui7mpcr47j41d805r5c5p96uo45usdt\", \"ll3sa4fcuivesctg6rsde84ydj8er5mq0v94ltoku9\", \"3pfh8503nik4gynr5iggvfr9me26fi8pws5toffg7kcgmlpubt9x43jv0wdfso2qltroefd7ufy7irnen8e\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/593951\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"ssx95wos5bln6tcr3qss8ok7dmrleqn0a1on2zd7e6tp7bvhwfb0zdth2ydesz21i7j7vfo2dfxrug2uw0n5r2z9gi1hkx2lnaeite1bb2a4df8of7pb\", \"8kzooilqmdxwcpyn01899pif5r27qse8wq89yzh9t5gji67jyg8t0u6eoper85pp4c3nzd7tkb69vxqyiqdd8m615j3fjaxul6e6746c5yoa9lvn0me5xw9\", \"rd13k34cu6lsarxxby38zdo1ln7ogynkpad1ictxlk6rv7qmawx975h46neawoo0vqyn15z2ioo874c\", \"qnnf43\", \"31x295ou1tkvmrl3v7994htnwyao58s19y4rsb843qef\", \"n07mn0nrj9f2s7qvkq7mniuwza1usxjex20bjbbs3xc14f97n4j1nyzr59734xbuuus23ytqc52c9oq8vyl98l6dh28cq97ejrev3dvh1vvq2i63t4qgfykxkmonozvdj3wim1nkar8igynfghqswhe8dgwiodvvuruji8fro3bl\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/018192\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"6mio48e751qgnqubj4sziqz8ookpqvrmbb0rsifoqr1xxnht3lnylhsr6ezaephr7lonwm2njn8v9ratvtrnw3xi2x8rvoewm18\", \"avu5309tuisf3lltcmrba7zrti6gvjvba79wruu7cwnxrkhhtthtxz0ewm5b7m3zd0wt7o8qas9q3xm3zkzbet4020pb913fz20\", \"it1kfq7xvz3dtkl9vgmy4l0cddykns3o0rm\", \"iwdg8jnramndjwkatk63b6h57xinhjbeoc2uz1mhog2wjkqkfy753rrtfu3i8q7hyhscxcolkcidrq8fvbjlwra9u2vxd10tgfunuikxwynf28hswbpvdyivh37v8hvseqppx84iim\", \"r6oc52gbdoaa06m73u\", \"qzibl91f9t0s9jt5184ed9zg2hxozsygra1k0oofkvu3cgxe6x3ybbavefm9tvjnadkmavgmi3pnzpm87tj6maznbabulrisrpzhs4b1nhcxxrc1t3lpmv6l6z1y7e4fym9wbt3j34f1vc07jfceftn9x\", \"ktnkei0otvjakex86z9v0zprdz39hhrtchgy95woj76p5gzta\", \"deyieceqz1ptykmvkp1ntqvxk1373frw1asuesro8bpgslysxlv85xhwk3ezwzbi7jolceo4di4nt90sqc8d5r2f3tycpzm28kgd0xhn60d0zb5kot1lh4oqnnpyb0skojmr8x1p73\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/406383\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"pv9zg282v806t4yol96n1roivwq8h7a8pxc2mgcxzpkcehbj642wizm2tpdmyk\", \"unkkzv9maigalr1ok83emgqwymoztcnuwydau\", \"dhfgyx1sf8ycfuhg0ws38buv0\", \"wk1atpv8muhh3hfwtsp5irnxmhpn8zgl\", \"nn7prr1olw63hqfvelcu117t4zjq69yob05f9rc8tnppnh9xoweraidqrzzugpgt520h2zthogb3d2zeubzm8q2az7gkn063xh4apuc5ugfr7cvvtsb36fgykwkxwpp3naxfnmlrz7tzc\", \"tyjtq4a87ijnzrm2nilc1ljxgvmdczylmhtwpq8x048s8tv7z2h33gikpxq9c08ie45lz3xn5gckhea13\", \"x0hgohkuu2wh8j1tbz3mj0gm87vszhf8bshdafyiu2zeleq64rsed68xsl3t4f\", \"hstq4or0ryn7ufza67q6by5rvbmyvg8fjimyburax43ijgywmr\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/971498\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"0vlmqn2oxveh4xmjj40cf5wztdvt2kfkvut13mokm2185tzvtwwjw5uerkewxezqhyzxl4f6r6wsshf87v14wdbg34znt0jsqx0l87fsbyzve80wnxfgjowt14pp5wcf14s20xd1jryj6p5uvbu45w4pwk1w5olqb67caso2\", \"96h7yf4j35map15elapd62zzp3sia556sdr6rds57tcamuf4nt7aq5mw4uv6fiqaq23hjcbnn1esoqs2ipjan2ajtzk\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/298747\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"a2yhs4ompkg6hti44s28cflqls0cn0t78g5u02ur5t5xvibcebu8\", \"621ohik93918ldn8te0l80xdzlg7cj7nlq5qx59ccg0fy3gictcwqhv7ctciolwziz79iw1y8w2l6eo8b4ktn3yz2u5ck945zp6yhys9wmi6z9wc8al2suptfbfbg45vt4st5opfz768ztr0r8xjcvwh101nwu3zc004e2s9gqp99m66mglffi5rli5rx773bi1\", \"idfidhxrcnpn5mqahqqwemlnvqaflyh1j91l04vhipsozlysn3od8ohpika5z54ab\", \"po84277ry315s6iudadaslap48cyhk2ja189msr1yjtsijy\", \"m5uuyblnquupxy3sew0um7tq3gpamoocizix232a5glpqljtmjzx6vovy2ho83j8bf6tcloyilunanp6ya5o7jfta1wnbtd76vnrg3sh6vtj5s98p765bi8uvm79fo0da552qosvco95juse3522kcl34s6ots0y8r7u2qq5xtjd8clxdb4i825\" ]\n      },\n      \"params\" : { }\n    } ]\n  }, {\n    \"timeColumnSpecId\" : \"69n1\",\n    \"validRowCount\" : \"xijto8qgshhcur9vrecncvp0dp7x4s2jcdah1sokvuffcdkvaun82c\",\n    \"name\" : \"Kristofer Wilderman DDS\",\n    \"etag\" : \"eum\",\n    \"columnCount\" : \"i3iyix3994coi6tigqyntwaqzwmi1fe5tsbojko1xx3mm1goggjirw2ppq78s5d7v17pbix3fc\",\n    \"rowCount\" : \"h5h10y4hwxain5jfc2qiw1916uptstm56v3195560nxx7z832hyv8brc2azbq42t1d8dt4too2d6vzvi7mdk\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/432038\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"6459d8fsukq2f4qsem79lh78cumduvajitqse135amn6ciqq09es8ha0tkbtc4g9z1oggrqb9xdk7piyabg6xymhfoz6lnf0ioqpmp0nnosojil976z30mq1t8b6\", \"6o2d2zp0g6njlhmbn\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/174574\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"ohgs7a5kmvhr0xvckc5rqeb60r4\", \"6cv71s2ch9hktqu51ot5uepn3qf8ew0j5gxq9pw5u546pplsv13apxbgtza71ulez8chtvmvq2y5n2agx5lsr4zf08pu6rlkid1oyrsw9wfsa1v66bfdz5dck9tjz5lhrqtjvjnmy47g9jusrwhzm9qfwhxfjb\", \"4cbksztlpfbbd882r6ni1hfdn9q5m7iefr10fpb6cn29e56h3onbwpkwupq2aam36l0ncclowc0m1jd5hnumg38mrsyenstosnwb3aju0x\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/029589\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"2w2226ydwa5po1hwmdx7g32opgcgj4kl8mc0as7o0nnnx11unf4doan\", \"hl2dkzs\", \"ybf27jw6d0aaenilcwhagi5r8ydijcj9kql0ifzdu1yov8ftssc891gzg6b3r3skqoevq7mn12bwyf\", \"gw8qfgw8z0evi5a09vu1324ymwjfk6gnjw84hfbzy0b73j3yd97ptiptf73qh1zo84ctvnz054a3yj93x4nlc3cg9wp4d0yqxgoyotvuj0lk02djr58v0f6zd871ngw9g20a8cf2qsyp3cm\", \"v23niib5lh9720u37mry5ja8u7314lsrk4bitrdsntczj7jcbzab0x9pkpu931b4dsmtxg71hpssn84s6j71y6z79vgp9z8kr6pw2p1xaj1e1pj33gii2xru2fwbnleh520jkjc7swqiwww23s25\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/075456\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"xymm7nupnr544913tmqzensf49yx1jbz7qbrbv4ayrawsw8yxk\", \"oojz8k6w2m03lkynbu41l3rk5ev3e2vcr7y3vgdoxsf2cto7quv57erftux6mz04j4yzo7vocndmvj7xjainwntp8hsp8ylxpdsszmyxkbt8sa\", \"i74b73gsuz6gyy3v5rchstyesglei6rmqqwl0pgcg36wh73c4jmnj0fx8imk023jvkxl5fo38v83gazavcrz\", \"2txb8tehmtrk4xsij18ni78p5qqe536lfzlfsuhipk7vdwiy88b6rbp17uiluf0wtqsergxsvg93jmlsxw6y6zxyp1jii7hy1215nypusn2bu5hm54tl0aauxr961myjfmj\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/973836\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"w3yw6b5j9nxzcqpzff4kuie7sada47n\", \"0t0jzqmklhwubdz5r8orth2qf37cmph37jsvvznb86kcca66v3aad2ypheaimepnp0xycwmjiehbkb8fcvb307mid5m2yszi54yxqzhzom4y1zrdtjixa9op6px1yofhot0b1hzamss2wcytyf\" ]\n      },\n      \"params\" : { }\n    } ]\n  }, {\n    \"timeColumnSpecId\" : \"94fs\",\n    \"validRowCount\" : \"psi1wshews7bwc2444vubgckjv1pu61nvzos2lgcl7kle41qeh8cfa9wq1crb9l0qn6yo2pqf4no\",\n    \"name\" : \"Johnna Donnelly\",\n    \"etag\" : \"mollitia\",\n    \"columnCount\" : \"1e2g1ns90x87wor20dezz5rsqmgtkn6pna4v73qmnppfg95ii2er2lysasrldm1nv425o3e5xf807jeyh29xq68o7bzjv8hysnv4grgmashx6ui9ness2p2s9z7oclmawo8ayjj6ub0j1e5vhdpq3jg8kbfk1xrjmi3f7j\",\n    \"rowCount\" : \"clvqfuq5d9kzp2txqq1wpxwd1uzckapmmxjofelsblhvpsrkm8whzmik92c5yzdfhd2k00d35ajljge07zxxra8w8s3y8g4z7ghqdccu9fp\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/564621\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"fvq4tusctiaxrut9s5t2kpnnxgykx4l81nmf0jrhz1xiin1nt4ouhch22yihb6vco3xld6zwr5xggsr0ciyqz4kcqioky\", \"d3y2qqva2a1pkm48oepwvkz3ippk908dnbhvs64n2g33xkjtm94pzvgb6zifvzd5jip97libuy91sobt8h7yy4wgaqp0042ed7wei8tatsydxnl932vfre3pwkdqdrjy1cmkevgveqalrr9xm77tfyk0jn3p2tfzfwymjdl3z0mx7cr0k2kv\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/537824\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"xrknvwntcnaz5hmbxfowghsm1ea5lhczfp5mqvd5g0xudybfvs1by972jzylrwn3iey9d55t91sz2g754hqzurtz99hk7a0s1yts37fmgigx2zlk00daz27guue22ep7u\", \"wjks035gxn4lk20h6s7ttmi4zu8smtbzhswdu3bkh2cz0elsh2cj6bjbc33nk7mvb5bqg3to3a7xx7fpfoxchcv12g32px9mafvvul8llg19337rmvu6bo9lsccrdbroku2w4szyxjetyw0erma1zymb2vqjt996v9mw6bu7bc2iz0bvxzj7hw50am1pv71rv00k18a0\", \"7msx9wlmajps4t7zbbiw9tq2s0aj8d6ioosomv22gwbd\", \"tqh3boxa9locxnpq7dihn9dn7tydw57mrbnowt0xbuchuccv314qm7jb5yvs0i8vfnedzyqmcpyneap4wc9seopu3g3ad2r1h0e183hpl62q6h98d324eafmi6ce\", \"a94t9updugotm9xszlkmd713yn5o41hxhsws8tp9f63howagy549sxs0lfyklbwgsrt0\", \"dodpb3yhz3qhb37tvgn2r3a7poahjax5daad8b5k33dg3bc2vgmb56a5dzyybpyf3i1hq9ogkass6uvh8o74vwazmfp7cqgkob4391txz\", \"c2l29weryjodys59pki7td7tun6szkc2y9r7upgj93kxgn7a3edk19ojulgz9pl8kj0ybsxrlv5g36ht7it5lxr3shcmjqeg310u5934u0ppo44sxf6iq4s9pz22whs05yv0o4ko4xmouo8p9hh3n77lp\", \"k9pzcmvw96gsw13s5rz3z6vcdaph2wetgwlwpgg4naosz\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/197843\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"jr9xepl9aot9w78o178itxt7oarvkq\", \"kfgoo3\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/496223\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"sj4agdsbdu9e4kr2n2spotsmexcyk96844vrkg3pv0p9a2nhfvtb4r7ud2qd0ebs9m3rhibp98ztc9invjdmt4aemfpv51xellka2h8i9v8umpop7ehfaygfwosgo2wsex3ut8gqtg67je9ibh\", \"pj2lgro4db3jebatkxg8uvy891wmv6uhbxbo8h7phdazxiwsrvvi6ko0og3t59i4751bom0943uoeqj0euorp2a28ddcu5p6ergq2dd67cgdt5i6ytxo2waaifw4jspzbw7ock5up4\", \"626i3uoahtm2ps3487mfvhmi4besxxi00tslw5g0857bqaiekqz5zz8wbf1skii3yoandviwtepv7owcmqn0ozswf10xgygddfdc8ik0nzq717ref4a0zxydxmvlj215phxc3xav3hsje3zhf30kulw3oeuig087q7iiobf25r4r4lzo90ppjj4b\", \"hzotxqv5mrfxypjjegv\", \"lz6m4qa09k1k8jkkg4v36jep3x110aj3jzyplg6vaoo2x55eh0w8qmob6l3vbvlst3hdgnzlghegya0ylppdi1lh4wf5f7j58vevamhk0jgr7kq\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/029940\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"aq4cp961u0ohy1l3obwawzsjgzxhnetsla7z82lsu4izmi26qqrwg8y0rlbd0pnpqpimrck5u9li5mtdlb0ct0nxop0wb6gm7s91o3g0ydlx54mmwo7qk0nmgjgd5z142eh6tlksd2yhppgqs7o5so5jkr7c8wlnszcb1fpzhv0peskp93\", \"rz8sec88ghbdx5gvqvdh3dhnos0sx8v9fg2a2g8bdvrnh05hjxnne5wwt4pblk1maogppu3nf1b8ceht6n6xdz71c96ibzosuaazdsnm57g3m5ltvmozoln2n8l2rztr9n4y8szf88qxs88t1ar4ftjgosnnru37va6\", \"bme547i0w8mw60l83yb9oyymfdw5oflf12yjujuozfpqb8fyzt6l0hwipqkt5jwdu897ca39q3sh\", \"c5aruq83gjvm965w6nxbkbf4nog32bmk4fq8wx7gt0ewsifpqhsp76nw5g6dj1qxl6votcnfcwsv3bh52qltefds7o\", \"6nh27azgp0ua82wn306tn8k0z2d7rmn53ue2r7unljwwtd2dxs609x8jxhwtaon\", \"01pmqbcjpopvifx87f1u6cbpaoqbiod4n90g896shbdpbc4a7vu934vp\", \"4ijnag6187eyfpzlip47yewfiyg5mo22as3nd9j15pagq1n0uji2jbwc9225w6zwl36vdegb7xzzfitblq8k7q6lzwvlhk6w99t72w5lyox0m531m89krjrg5infz95xxgwshq61f6gxwuzviqou\", \"n4b3p9wqfu6jahtk6wx10iq9xaahbs97vkx50m94gr88h34iesj9n87cvse5m36e8uo4x1ac60b3pg7o5lldsq5unfisw8p\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/286785\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"zuoywvz2gacbcoqfwgygwtup4laoxqdba5t8vykuyeva86fr2yen9u8688w26tz8ouzpoh898agau4trpsywukv1g5xhyv\", \"6ekl1z9fk0zx9nk4za41xrd2ugypcjrha0pw402cqloi\", \"6vhu14kbbnsm87zysww3mv1i0436267vp628gywevprftvfxw3i679aaoeat773v8qbihp068tvpli4uvs7o56pffptfntoqvz005ha3f6540804gxq4sv4gybvwg7ohbhq7b3s4a2ks4wc1m5n2b7gn7\" ]\n      },\n      \"params\" : { }\n    } ]\n  }, {\n    \"timeColumnSpecId\" : \"a272\",\n    \"validRowCount\" : \"87a4f49kvrnjmhimf4duvzgdmit23y\",\n    \"name\" : \"Keith Medhurst MD\",\n    \"etag\" : \"ullam\",\n    \"columnCount\" : \"6jz4auug7yttw1r4x8svef61lhqj9s\",\n    \"rowCount\" : \"n4r90usvt4kmn0mnvnmrqdzde1898tkxi2a35e8\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/432458\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"9l61i9au0t34onzxa5nkq87xbst6htdypcjnfcpk40j1y11s5m6wj40fol7yth\", \"z29zzu3um30zzjn97urn3a8kih477q6s67mao8lwd69jsv2526\", \"c664nw5fy1azv6g4dka0z2h0z2dytalpk3jjn2jey03hc0x6ta74hfmf4we3p598awo7dr9h\", \"r7u6e70x0dqqgbfys551vsljk0fwb31h4olg8oztodmrt5gsvi\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/912850\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"h2r24iix0fwrq3i7wyomsfci97onirkay6rm1z6tpp8wlk5v3xpb427q3sf9bqlqxvyt2duqt4k8d7po6liy7s1t5cnirxmpyc6sbo2zbaliibjj14uufph1k7k5mtys8yo7cgn0ok6c0q26wyjweds0oeuso81ykdlitt9xrkuwcvaviio4zoppwwthy4\", \"4pi5pzm62n6wiocrqj4hsa3uh7b5g7xae74kyzfnryr6s233815b3iux1ilsmes0exwbgsh5my7pgz78athr0h7u9k7pvq3es4y15meusc51ci1ugs6pfk2py63w0x9e7g2nj\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/128434\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"cmgbj2dq7pflllygmeonv6fl5xt7fvn7viohdk21jyzjmslnm60bx62gaci2qratpya5posd70l4\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/045702\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"5o1riybz0h5yy1ynxa693uzqydxu85ht4xxa7qm9x5nk\", \"21qreyc2cm175pk4tdixnzqc352s4ich3pwyoo3isgo9g5zs9nk4hrd7y2wlmt\", \"c6lxyjcwtub9clrylajpgbcko90kwtonc0ugvx8u1sz8a2g8qkp69mxkyj1oj2euzf4csnahiuxmik0sobcbfc9ea1dlsug4hljndhhoz6cbuj19nwjryg3z4fgz8ei27ci7ljcjc4lb3wx8s6o88ape9v3iu40a8sldpa1vd\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/632746\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"w7udjvjvjv4at4olpmkp654ma0\", \"b8nj7zp40lwxr2nv23xi574po0hbtytg1xybygulnj24z5ft8z5q4qkvksnxleyas5odxrvufp3pk0pkc42y9t2nqdh2s0106kawl8r7sbloft7kabkd9oiyj50pra7k5jm5eqv4a2bvvhm5rbg8g38vr82cyhzzkh27fbspeddcxspch8hvtyj6q0q88\", \"2ltia50guuiwm1km5qy0awdn4yuwlhjeab27nu8xfrff1z5w6wlh0lwugbkj1bsls5xtn8heexcmy3zm3sh34l8e8b8t0m9gw8ua87rvdt7f8t3m3r4w68gdyzghmghyakxq9oh9q62ordonzsbqqqxmw3mo7z4bx8\", \"ms1836h148x8ebltk3olaqji7okh2qdhnijc8vyw2unsvdpwxnn8gaa5qljjglwbmr3ikn5kgekzzehyvmpj32mnnwz1o2ccgs1f79mwlqclgnbki3sa\", \"5boh13z0am5giavs2fbwwmayzix1bmp8lmelqmf401g2lwwnt2v4aj83z1x4qz8grlglfetey1pnlvp0vmsu77rnsez7hq00nwerdeqhyhqhnoet6wssecn2x6d63le55vpdf2euma9p2irb0ga8\", \"fhm90g5hmbrjo5p9xoioevjn8hbsozz7ouydw2xlxke7v3iu5310cva54g4s\", \"liry4z6f78pwje7b9e5kij3g18ted0n3rfjgs1siincyxtzva8ftk4s41a5e9lfmqbe2lny0ltf5513v42qd9rsl5ppxldeb9ci0nd49iije7b6y1fbjh1i2x97wqlce5rpfb0j09xkfzyp5l5mr0eaok586ygtuqwl1\" ]\n      },\n      \"params\" : { }\n    } ]\n  } ],\n  \"nextPageToken\" : \"zcz430dvidnzi2vl8lzcyu3tsrh4zziufezpb2zjgcszvyyccy74gf27vb36zen21qxhlxo3xjtybkpup29d646f313s4oaf0xzb18w41x2x7g5alj3qd3facsuc7u4zelr7wb4noy74xxmftc7bp834tcq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "532f84a3-eb0a-43d8-aa37-1d2f1e854382",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.14749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.tableSpecs.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListTableSpecs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to ListTableSpecsRequest.page_token to obtain that page.",
                "type" : "string"
              },
              "tableSpecs" : {
                "description" : "The table specs read.",
                "items" : {
                  "$ref" : "#/components/schemas/TableSpec"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2a383d52-13c2-4125-a440-415fee5ce413",
    "name" : "Creates a model. Returns a Model in the response field when it completes. When y...",
    "request" : {
      "urlPath" : "/v1beta1/mopx/models",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Kelly Hoppe\",\n  \"error\" : {\n    \"code\" : 1326129011,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Magni omnis illo eveniet rerum. Voluptatem fugiat et voluptatibus. Ut cum ut cupiditate voluptatem. Dolore minus ducimus qui vero sed.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a383d52-13c2-4125-a440-415fee5ce413",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.143157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c7615bd2-a520-4ae2-b19d-9646bc06b9fb",
    "name" : "Lists models.",
    "request" : {
      "urlPath" : "/v1beta1/r4h6q75831jlidp1d1xyrfj9jy820ngmcps9py7no5o0l0xgocynrszek3gzjaxbpe7wsbyv7lsgoofhtz72pvn2tnivgki835t018cv7sxl848rl3u7gvv0yrue3rzk2bebq8m82omvc9rfokmxk8ic7epg1uuk6vyqvrn167e6k65kyev/models",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bfswz893viyj3z4pwmog7ti261e0mfvqzwz4cbbd3ujd5q2emh4gc3pne1ob2xw6wi3emlglkarxf0we3kssbteniqqi4dlv6j0s7tm34t4oyfoxfr0z7\",\n  \"model\" : [ {\n    \"videoObjectTrackingModelMetadata\" : { },\n    \"displayName\" : \"Katlyn Tromp Jr.\",\n    \"validateExampleCount\" : 1225407186,\n    \"textSentimentModelMetadata\" : { },\n    \"textClassificationModelMetadata\" : {\n      \"classificationType\" : \"MULTILABEL\"\n    },\n    \"trainExampleCount\" : 292154729,\n    \"translationModelMetadata\" : {\n      \"baseModel\" : \"715evns2rkgmbuemh1w8alyncp6qylf6f4y8l7s22fhwbdtvxpoqtoodfwr72j1fgm3v1wtuv2jl1vmlgmzjbk5oz8oc39yrb0hrgvk1f5rjqv6rklxvef2\",\n      \"sourceLanguageCode\" : \"7ygakriwrqfqgq427msl34dvofx9hymolngd7mbd1fwuifc\",\n      \"targetLanguageCode\" : \"v20d0euu3nzcnz5us3ofbqfikuma2tu0351llkth5yni2cmv27ykeko7wbqx6qd38a5tvihc6l287nz5fjd32fpaz\"\n    },\n    \"updateTime\" : \"2022-04-06T11:39:33.135117Z\",\n    \"videoClassificationModelMetadata\" : { },\n    \"imageClassificationModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/benoitboucart/128.jpg\",\n      \"nodeQps\" : 1.0269157160867887E308,\n      \"trainBudget\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/d00maz/128.jpg\",\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/buleswapnil/128.jpg\",\n      \"trainCost\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/dmackerman/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/oscarowusu/128.jpg\",\n      \"baseModelId\" : \"3504\"\n    },\n    \"deploymentState\" : \"DEPLOYED\",\n    \"tablesModelMetadata\" : {\n      \"optimizationObjectivePrecisionValue\" : 1.2704030492898457E37,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 3.25103696902012E38,\n        \"columnDisplayName\" : \"Luigi Morar DDS\",\n        \"columnSpecName\" : \"Renato Rogahn\"\n      }, {\n        \"featureImportance\" : 3.2955962684560736E38,\n        \"columnDisplayName\" : \"Carl Graham III\",\n        \"columnSpecName\" : \"Theron Monahan PhD\"\n      }, {\n        \"featureImportance\" : 8.829391126874303E37,\n        \"columnDisplayName\" : \"Chere Christiansen\",\n        \"columnSpecName\" : \"Miss Corinna Aufderhar\"\n      }, {\n        \"featureImportance\" : 1.430508975802668E38,\n        \"columnDisplayName\" : \"Star Howe\",\n        \"columnSpecName\" : \"Roosevelt Armstrong\"\n      }, {\n        \"featureImportance\" : 3.314415413163842E38,\n        \"columnDisplayName\" : \"Johnie Farrell\",\n        \"columnSpecName\" : \"Maria King\"\n      }, {\n        \"featureImportance\" : 1.1830250308136327E38,\n        \"columnDisplayName\" : \"Ruth Botsford\",\n        \"columnSpecName\" : \"Dennis Willms V\"\n      }, {\n        \"featureImportance\" : 1.2506682325165565E38,\n        \"columnDisplayName\" : \"Carolann Green\",\n        \"columnSpecName\" : \"Arlen Leannon\"\n      }, {\n        \"featureImportance\" : 3.093485655747294E38,\n        \"columnDisplayName\" : \"Dr. Twyla Cartwright\",\n        \"columnSpecName\" : \"Bradford Langworth\"\n      } ],\n      \"targetColumnSpec\" : {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Dr. Rachele Mraz\",\n        \"dataType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : true,\n          \"structType\" : { },\n          \"timeFormat\" : \"2022-11-03T12:19:33.136247Z\",\n          \"typeCode\" : \"TIMESTAMP\"\n        },\n        \"name\" : \"Gigi Kautzer\",\n        \"etag\" : \"minima\",\n        \"dataStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"drhldy2l9o92su1sdl03xc2jssamatv9aow9j8asz9cbej3pnhr5my4weir2ux7rrhtrsucrvnoowlyttr9445oegps83d9b9hqpt0ui0uysq71ysei40r5qe89c702tc8cwoyw7cp3khjg3z36twyomb\",\n          \"nullValueCount\" : \"nj02bpaj7t684l064o1tlzndrg5lhrzsyycjzx8s344u4lhd\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"d6sun2l6ansbtn2kg3toa02h4qflb1wl1ga67vb16tyqw0r4206xtet19vbim7wriafhhmlzl7led4gtkitkichf49q29vj0m56wz4t2cjmbjoxvzogsarucc9t90p0k931ri8c92nkk09aj2q52x61e9m4mrsbj1n156ojnsq8m2k\"\n        }\n      },\n      \"optimizationObjective\" : \"2oqm6yjbezneyoaqy6gn1e9mk2zsk1sgh5vu8pehfleq42bjxn3iceuxo9jkekardfde9xmkr5gy4mmlbqdrx49goasyk2jinx66njuexu14tkal9\",\n      \"trainBudgetMilliNodeHours\" : \"lwosk4y1tgnd49gujixq8cbe46o43lvfgypw9sprz15860lg8tq5tk7971rnjyd6c8dbnqw75funiz4e2iykhq3gzf46vxag7ofrm11zh5j1jbx\",\n      \"optimizationObjectiveRecallValue\" : 1.2114008819952938E38,\n      \"disableEarlyStopping\" : false,\n      \"inputFeatureColumnSpecs\" : [ {\n        \"topCorrelatedColumns\" : [ { } ],\n        \"displayName\" : \"Dylan Mante\",\n        \"dataType\" : { },\n        \"name\" : \"Milford Bergnaum\",\n        \"etag\" : \"nostrum\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { } ],\n        \"displayName\" : \"Waldo Rolfson\",\n        \"dataType\" : { },\n        \"name\" : \"Mack Mayert\",\n        \"etag\" : \"molestiae\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Gaston Bradtke\",\n        \"dataType\" : { },\n        \"name\" : \"Quintin Runolfsson\",\n        \"etag\" : \"illo\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { } ],\n        \"displayName\" : \"Rudolph Hagenes\",\n        \"dataType\" : { },\n        \"name\" : \"Gilberto Kutch\",\n        \"etag\" : \"aaaab\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Loyd Lockman\",\n        \"dataType\" : { },\n        \"name\" : \"Preston Prohaska\",\n        \"etag\" : \"eeeex\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Deedee Towne\",\n        \"dataType\" : { },\n        \"name\" : \"Era Walker IV\",\n        \"etag\" : \"quae\",\n        \"dataStats\" : { }\n      } ],\n      \"trainCostMilliNodeHours\" : \"slp1osipshhkr63gfdlaf5kl2e5c9e2gqgz6cbod0ld8hz00gguorc94wmqq27krgshzh4po96kde9w4b19su\"\n    },\n    \"createTime\" : \"2022-09-24T13:38:33.137283Z\",\n    \"imageObjectDetectionModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/sircalebgrove/128.jpg\",\n      \"nodeQps\" : 6.091285053690187E307,\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/duivvv/128.jpg\",\n      \"trainBudgetMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/nepdud/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/tomaslau/128.jpg\",\n      \"trainCostMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/garand/128.jpg\"\n    },\n    \"name\" : \"Denver Boehm II\",\n    \"textExtractionModelMetadata\" : {\n      \"modelHint\" : \"w5xyxf5nivdjmh6ymsim2m7kn8lbgstn2ibk6i6xbk8gish2nw6t18v6h0w5bghgjrxgsaar8d0rr7o5cfva67b39wur7\"\n    },\n    \"datasetId\" : \"j004\"\n  }, {\n    \"videoObjectTrackingModelMetadata\" : { },\n    \"displayName\" : \"Fernanda Metz Sr.\",\n    \"validateExampleCount\" : 580077770,\n    \"textSentimentModelMetadata\" : { },\n    \"textClassificationModelMetadata\" : {\n      \"classificationType\" : \"MULTILABEL\"\n    },\n    \"trainExampleCount\" : 961346519,\n    \"translationModelMetadata\" : {\n      \"baseModel\" : \"4h4fvhl2qwe589u206ctkz1n3aszl8g5nh9x6wdpc32zy7wmt7x80b5ako48jmn70ze1vf591iqcaiw4b8qzg62fqryyj0w53w2kzvotp3f\",\n      \"sourceLanguageCode\" : \"uqzry7dk5xh1z5nft402b19b25thpj1bbaingynfara8aym4sfotgk6\",\n      \"targetLanguageCode\" : \"wzewv684fidiw597t1wll79x1flryax9s8ssougfjk161t7myzqubbtmszz19qf\"\n    },\n    \"updateTime\" : \"2022-05-05T11:22:33.137738Z\",\n    \"videoClassificationModelMetadata\" : { },\n    \"imageClassificationModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/smenov/128.jpg\",\n      \"nodeQps\" : 1.0921128961353987E308,\n      \"trainBudget\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/heycamtaylor/128.jpg\",\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/carlosgavina/128.jpg\",\n      \"trainCost\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/franciscoamk/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/itsajimithing/128.jpg\",\n      \"baseModelId\" : \"b35u\"\n    },\n    \"deploymentState\" : \"UNDEPLOYED\",\n    \"tablesModelMetadata\" : {\n      \"optimizationObjectivePrecisionValue\" : 2.318660756084563E37,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 2.633965630487901E38,\n        \"columnDisplayName\" : \"Daina McGlynn\",\n        \"columnSpecName\" : \"Randal Metz\"\n      }, {\n        \"featureImportance\" : 3.5433682504594564E37,\n        \"columnDisplayName\" : \"Boris McGlynn\",\n        \"columnSpecName\" : \"Scottie Erdman\"\n      } ],\n      \"targetColumnSpec\" : {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { } ],\n        \"displayName\" : \"Georgeann Adams\",\n        \"dataType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : false,\n          \"structType\" : { },\n          \"timeFormat\" : \"2022-04-03T12:36:33.138264Z\",\n          \"typeCode\" : \"STRING\"\n        },\n        \"name\" : \"Carmina Strosin\",\n        \"etag\" : \"accusantium\",\n        \"dataStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"et557hhmil2255huuwumbmai2tcpx0tl7zc5hv5pv92kzmuxs3yj4q31kdnfqax7ucu96ipqv23v06d62bg1nant0kwje0ol\",\n          \"nullValueCount\" : \"irdqn6xkfs7eijj6mrhceubmxu9qjkc31jsjdeprg3t83dr7ppowjh25vu7qfkspmcj0xmhuot4b8847h6oj42g9mlg6ai0p5auqxo0o7z3ghyj8g9etjozqb5jtmm6j78gwnac9i07glhy9xvamevowhngho97s7byosj4yo2b1xcyjdk3qxz3cgag9b18gxajpjr3m\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"v7ss62rihn4d\"\n        }\n      },\n      \"optimizationObjective\" : \"5y0w67zluo9tem98otfwu2m4weeua3k2c0qb763zder3in91b9a5okkc1frrowf1fcfbiha9d45bxxl64ure9cajp1f5o48wyb4mveksuxwjez8xyftj3oc0fiyj9dvxl4lmz7k2opsx\",\n      \"trainBudgetMilliNodeHours\" : \"vvuxgzhk3llyg8x2i6gz3ne67dfvhdf34eroc5labpeffdhjegpe5thunfklywbwozcbvksi3eh46wzqirjebrrqo8lhw0bm6k8hihljr3sxppqw4r8srgnysusw1xfmg5\",\n      \"optimizationObjectiveRecallValue\" : 1.963222941588354E38,\n      \"disableEarlyStopping\" : false,\n      \"inputFeatureColumnSpecs\" : [ {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Wilbur Sanford\",\n        \"dataType\" : { },\n        \"name\" : \"Shawn Davis DVM\",\n        \"etag\" : \"quae\",\n        \"dataStats\" : { }\n      } ],\n      \"trainCostMilliNodeHours\" : \"t2724aqg06bzxqxqybirscz3hxjtsli5np934i4sq5plth8ohegdoiagqob03e9nc4r3iwarwhduwefo17hagoeldbo4msmvwgfole702vbzsen9urtovsdvr1l2l2qtbpw3ayorjvsyzvc0wmcyu8pdiru8pthcgv2sg\"\n    },\n    \"createTime\" : \"2022-07-16T10:54:33.138671Z\",\n    \"imageObjectDetectionModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/aviddayentonbay/128.jpg\",\n      \"nodeQps\" : 6.384174010690646E307,\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/carlosblanco_eu/128.jpg\",\n      \"trainBudgetMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/nckjrvs/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/okandungel/128.jpg\",\n      \"trainCostMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/sangdth/128.jpg\"\n    },\n    \"name\" : \"Ralph Barrows\",\n    \"textExtractionModelMetadata\" : {\n      \"modelHint\" : \"1cehwrtav4j735gqxmd4qn878hzikatbkhxflzuv3t47u8vd27wfb35p6n0dvcmhv1mxcpgmcqyfjoiytovnjeeyv8qibtbv3wo0zfdqbv43ujb669us2pv28e4a6i2mryobrvrwbnni3o0wes064zwuwhrf5kqwbiudbbgj87uy5341o7a0cr6lvviewhz\"\n    },\n    \"datasetId\" : \"nna4\"\n  }, {\n    \"videoObjectTrackingModelMetadata\" : { },\n    \"displayName\" : \"Mrs. Truman Schulist\",\n    \"validateExampleCount\" : 436584755,\n    \"textSentimentModelMetadata\" : { },\n    \"textClassificationModelMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"trainExampleCount\" : 1160071845,\n    \"translationModelMetadata\" : {\n      \"baseModel\" : \"arv1asr4eplq62g4fyiecub7vtk0nb6ozy6l9fr6t6sw28nw4qz782vh9ngnnndo59a8zhikfjaue7z0osrsxs1z64opom7msnyx0v0taolkjzb0nze23wtvrnbo04va3ks5h2elmmql70c5kjolnaad89roip\",\n      \"sourceLanguageCode\" : \"ayuigbmtji1jgevp39id0urquyllitfivoe03tltbrst0n5qkgpnzb0jmngef5w2tsy2skx4pcp226xg47v0ydku31nbdhoy5nzi3ca4lposc4z6s7sky1org1jc0mhwihonwydz52cd1wz1rgcj5xm9\",\n      \"targetLanguageCode\" : \"zt3s7x8dgjh4iqp\"\n    },\n    \"updateTime\" : \"2022-08-15T13:47:33.139101Z\",\n    \"videoClassificationModelMetadata\" : { },\n    \"imageClassificationModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/operatino/128.jpg\",\n      \"nodeQps\" : 1.162466230696144E308,\n      \"trainBudget\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/mastermindesign/128.jpg\",\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/saschamt/128.jpg\",\n      \"trainCost\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/smenov/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/okansurreel/128.jpg\",\n      \"baseModelId\" : \"db60\"\n    },\n    \"deploymentState\" : \"DEPLOYED\",\n    \"tablesModelMetadata\" : {\n      \"optimizationObjectivePrecisionValue\" : 2.6521938279938587E38,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 3.141894001402409E38,\n        \"columnDisplayName\" : \"Miss Richie Greenfelder\",\n        \"columnSpecName\" : \"Patricia Sporer\"\n      }, {\n        \"featureImportance\" : 1.029025680750005E38,\n        \"columnDisplayName\" : \"Shanita Schultz\",\n        \"columnSpecName\" : \"Edwardo Watsica\"\n      }, {\n        \"featureImportance\" : 1.2620388315805234E38,\n        \"columnDisplayName\" : \"Dr. Isaias Stehr\",\n        \"columnSpecName\" : \"Benny Balistreri\"\n      }, {\n        \"featureImportance\" : 4.84341037035833E37,\n        \"columnDisplayName\" : \"Elbert Pfannerstill\",\n        \"columnSpecName\" : \"Herb Blanda\"\n      }, {\n        \"featureImportance\" : 1.1278582246845168E38,\n        \"columnDisplayName\" : \"Minh Ernser PhD\",\n        \"columnSpecName\" : \"Russ Hudson DVM\"\n      } ],\n      \"targetColumnSpec\" : {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Laure Pacocha\",\n        \"dataType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : true,\n          \"structType\" : { },\n          \"timeFormat\" : \"2022-07-22T12:22:33.13989Z\",\n          \"typeCode\" : \"FLOAT64\"\n        },\n        \"name\" : \"Hal O'Keefe\",\n        \"etag\" : \"explicabo\",\n        \"dataStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"p51wha6z0f3xbenh7aa4kdxyaudu7b021mvaguf49xrhu4wbzf8227a43yuhunpglnfybsh1fc70vuim8lgcr6h13hqdi3la1on3fke620cu6q9u49p23kh79ucagpnypsna7dnnmc4z69goaegnhqf0jm17j71euz\",\n          \"nullValueCount\" : \"hv4usdgu8qwom6i4upmpni21h8wzqqtc6jn6u01ux3fc0s913z5t1tpfv0n6av7xdnv3i9zigjkz257b0lb87c36suatjcu9axwer6i25jnzj8fe1lj\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"pu3z5rrwly9ek0r1kck4cx79hc3h9o5905utw10y9qegjhmvp4znq47q9uxzhjce7vyl2uwvijzo12fsf9s54onrwl7jebtgyfhvaa22caq4qr4sj67b6dshp6r8garzofgyblzceuxavsgjs0f4tvdzh9ihgn2w6cvbc3uzh4twrqge0jya3931k1kfp2f2k4y220j\"\n        }\n      },\n      \"optimizationObjective\" : \"fr18t0d2mki1kcfys73321x8l7gheu95d0xi8nwppwg56u4o0ls6cyu7dffsk5kmn0hr2bz543b5sjidsggva2lq0oqyg8v0r35czkb4ujm23uit9cltufzxw8gquc5\",\n      \"trainBudgetMilliNodeHours\" : \"1pibbb81hfz3mgkpczx3ie015utmpes6kkujydq7j59dilbhg35tajczg7slagm9l0g1vqqaptumxu1b88ywa5g39jkhp4pz9s7yzu0tu66qpmyb1fu40v5no1giiyqlkv58j88ujvs1da\",\n      \"optimizationObjectiveRecallValue\" : 2.7432229235448135E38,\n      \"disableEarlyStopping\" : false,\n      \"inputFeatureColumnSpecs\" : [ {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Leandro Reichel I\",\n        \"dataType\" : { },\n        \"name\" : \"Preston Ferry DDS\",\n        \"etag\" : \"eeeet\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Lynn Williamson\",\n        \"dataType\" : { },\n        \"name\" : \"Olympia Kunze I\",\n        \"etag\" : \"uuuut\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Sabra Satterfield\",\n        \"dataType\" : { },\n        \"name\" : \"Alex Mayer\",\n        \"etag\" : \"aut\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Bella Cruickshank\",\n        \"dataType\" : { },\n        \"name\" : \"Ellie Becker\",\n        \"etag\" : \"quaerat\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { } ],\n        \"displayName\" : \"Cassidy Schimmel\",\n        \"dataType\" : { },\n        \"name\" : \"Lynwood Barrows\",\n        \"etag\" : \"eos\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { } ],\n        \"displayName\" : \"Arden Lubowitz\",\n        \"dataType\" : { },\n        \"name\" : \"Dr. Maida Durgan\",\n        \"etag\" : \"ratione\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Beatrice Goldner\",\n        \"dataType\" : { },\n        \"name\" : \"Ethyl Macejkovic\",\n        \"etag\" : \"totam\",\n        \"dataStats\" : { }\n      } ],\n      \"trainCostMilliNodeHours\" : \"usiwccpwrnwnp51f6kbrtl00dpw0g6w3g9s6etigx5hcr0ys26v02gaej5x97ske6d23qralek\"\n    },\n    \"createTime\" : \"2022-09-14T11:13:33.141002Z\",\n    \"imageObjectDetectionModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/msveet/128.jpg\",\n      \"nodeQps\" : 5.596040338634166E307,\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/funwatercat/128.jpg\",\n      \"trainBudgetMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/franciscoamk/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/polarity/128.jpg\",\n      \"trainCostMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/garand/128.jpg\"\n    },\n    \"name\" : \"Bryce O'Conner\",\n    \"textExtractionModelMetadata\" : {\n      \"modelHint\" : \"gjwp794nzx9af4rockhqlm3gevaicdkhukx11h18ithwixo3fpywd6mtdo6chl1zm2mx88s6nqx7r9dox87fpr73ggy5zjvmrr5lh43sev4n3wq1yp4xs99lgn\"\n    },\n    \"datasetId\" : \"643v\"\n  }, {\n    \"videoObjectTrackingModelMetadata\" : { },\n    \"displayName\" : \"Miss Coletta Bosco\",\n    \"validateExampleCount\" : 385275858,\n    \"textSentimentModelMetadata\" : { },\n    \"textClassificationModelMetadata\" : {\n      \"classificationType\" : \"MULTILABEL\"\n    },\n    \"trainExampleCount\" : 1940063626,\n    \"translationModelMetadata\" : {\n      \"baseModel\" : \"jx7irmoen1ydgsx4ot4wi53uob33fxk3ul66n9phwx8zmniqsxo63v6ktssfhrx2m35zzjg9v0eyxd1cwauiuapjvzge1n\",\n      \"sourceLanguageCode\" : \"rsmpsbk0htkeghp7fssgk6b4n3szc0vywypcw2lxc8tsjv26po12n7qretnbi3z2mbla9rv357sqckuwsnakob5yldb83ijukn3bbcs2npav7f8c6ce4rz8\",\n      \"targetLanguageCode\" : \"69fs2p67ojxwi1oenrx25usr8b9go8kpx4r\"\n    },\n    \"updateTime\" : \"2022-08-11T12:50:33.141442Z\",\n    \"videoClassificationModelMetadata\" : { },\n    \"imageClassificationModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/russoedu/128.jpg\",\n      \"nodeQps\" : 2.351889241766912E307,\n      \"trainBudget\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/reabo101/128.jpg\",\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/adityasutomo/128.jpg\",\n      \"trainCost\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/vlajki/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/deviljho_/128.jpg\",\n      \"baseModelId\" : \"p0sp\"\n    },\n    \"deploymentState\" : \"DEPLOYED\",\n    \"tablesModelMetadata\" : {\n      \"optimizationObjectivePrecisionValue\" : 6.495832227638549E37,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 1.0236811906069992E38,\n        \"columnDisplayName\" : \"Garry Stracke\",\n        \"columnSpecName\" : \"Avery Bernier\"\n      }, {\n        \"featureImportance\" : 3.0105924968058988E37,\n        \"columnDisplayName\" : \"Olimpia Zulauf\",\n        \"columnSpecName\" : \"Dr. Shandi Homenick\"\n      }, {\n        \"featureImportance\" : 1.2801504665329356E38,\n        \"columnDisplayName\" : \"Rory Hayes\",\n        \"columnSpecName\" : \"Ladawn Swaniawski\"\n      } ],\n      \"targetColumnSpec\" : {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Joe Koepp PhD\",\n        \"dataType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : true,\n          \"structType\" : { },\n          \"timeFormat\" : \"2023-02-04T13:34:33.142064Z\",\n          \"typeCode\" : \"ARRAY\"\n        },\n        \"name\" : \"Leroy Deckow\",\n        \"etag\" : \"dignissimos\",\n        \"dataStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"t7z4v9zb8x6f0dksus9rsh92hmafd0av82i98auulfym9q75dkobbzohwxx4m6mpjcusaa938557q6i5yjuqkqdt4mg2lxd48zgl7kx6h1emgh64jrsoypncsbggvuwgmt7mgxovtppknsc9zfp\",\n          \"nullValueCount\" : \"ihorq3xgihyj2grgdz2gu31me0uxarzmagtkj4cgi0q4j1xwdf7frw1co\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"bsf2ttxvg67v6cdw1sozdiah6rb9b7lwsdwfcmx1nycotn81hayoowu2bsoahqn88copg269h5huvspc5vl7me5yh26bmz547ckf1zox0q66el1yfjyqrowk5s7450kg8qafbnszu6zocdj6h3fbvuer26pojvjtcx33a81zrwg4g38h4f8\"\n        }\n      },\n      \"optimizationObjective\" : \"jv90juz8qp4j3z88ae9xa4mdcqtmmtbdg9vbau2xnf3rah4fos701u6oc0anf376kozvv38hznwifq066l9wkbr7anvx1w5z64zupxy4\",\n      \"trainBudgetMilliNodeHours\" : \"lq5np9tfuhnjuf9a7\",\n      \"optimizationObjectiveRecallValue\" : 1.4858492305917902E38,\n      \"disableEarlyStopping\" : false,\n      \"inputFeatureColumnSpecs\" : [ {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { } ],\n        \"displayName\" : \"Dexter Green\",\n        \"dataType\" : { },\n        \"name\" : \"Stephen Pacocha\",\n        \"etag\" : \"ipsam\",\n        \"dataStats\" : { }\n      } ],\n      \"trainCostMilliNodeHours\" : \"lwo8m4ompqtjsa7okredjaucu5scfn6zt8dmwyklhicaisema59vgrvqfkkgbhyhuentqf06\"\n    },\n    \"createTime\" : \"2022-07-01T11:37:33.142446Z\",\n    \"imageObjectDetectionModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/klefue/128.jpg\",\n      \"nodeQps\" : 1.256078897693003E308,\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/vytautas_a/128.jpg\",\n      \"trainBudgetMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/paulfarino/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/balintorosz/128.jpg\",\n      \"trainCostMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/flexrs/128.jpg\"\n    },\n    \"name\" : \"Nathanael Murazik I\",\n    \"textExtractionModelMetadata\" : {\n      \"modelHint\" : \"83v98t0blqi3rlyeafpyi4hoo5q9dfhflxf7yo5hzfk4kbccd9ry3kkpnmlsq6a5qgvq8oa3i3jacg1jinboimn6g0evilx33p0lgmy63gg6rbv48nhxw1cd0mj4vde4w21gqacn\"\n    },\n    \"datasetId\" : \"nl75\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7615bd2-a520-4ae2-b19d-9646bc06b9fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.142925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListModels.",
            "properties" : {
              "model" : {
                "description" : "List of models in the requested page.",
                "items" : {
                  "$ref" : "#/components/schemas/Model"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to ListModelsRequest.page_token to obtain that page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f3672630-be93-40d5-8309-03da5f71d167",
    "name" : "Lists model evaluations.",
    "request" : {
      "urlPath" : "/v1beta1/stys3lsqb0ryr8uaqgvxkhvsf6uz56ne23g4cstur8qxeyqmc6y3sabjae9c96dhihdaznwgxhx6dp96xua1glxx31hy06qx9c1m14n0zfvp4bes4kyj9znkowz88pkixvj3qpsywf5nnaqxq1nw2pcflm67qxupdyktd762tofgpzfief1t5somknfaq4/modelEvaluations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"modelEvaluation\" : [ {\n    \"imageObjectDetectionEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 1.76275744057097E38,\n      \"evaluatedBoundingBoxCount\" : 1259894966,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 2.253019197644749E38,\n        \"iouThreshold\" : 1.2758754132329988E38,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 5.447101096475173E36,\n        \"iouThreshold\" : 2.6256711610023178E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.8782474722994155E38,\n        \"iouThreshold\" : 1.1653288454165718E37,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.10102048422524E38,\n        \"iouThreshold\" : 1.6934708518012303E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      } ]\n    },\n    \"annotationSpecId\" : \"7qzw\",\n    \"textSentimentEvaluationMetrics\" : {\n      \"annotationSpecId\" : [ \"pzorx0uk1z8jmqmvsdeiacccozrvo9hkm5f0z9q2t1zh8qpdhsowshqv55ivnk72oq6rqbs3wqfl9g65tw9c95k4q09grygwk6a7bqac9s5nexyd21247s4bsxfd5iboyxvka6ap8apn9kwepegzlr8fegyqjyl2hj1\", \"v7zdfignyfc23y3ue0na16whfu5qcv3b3sz9k5ozdvvwrpn6bjphnvctj2iucynu5qch28psmwv2h5s1id5iwkq5verzeffdbt5rrie6in58m4bukxwqc7kfvtz3suqhbcurcq4qbvodm409u0pkoaw1bv6b2f2wfjs\", \"lua976rvepsazdytvfj613pi6clzqgx7gc8hq1g6jpumakekfpac2ochke5o2xpgqzly1u7lfeo48aexwd12fdg63flxxz5l2tz6ihpxersi7wlf86v96v5xsqykdmfxwj7srbll\", \"0ljrwnywo4l8ryzgsvf2sdy5mmr15oz4mde7qgkhct3xsr6ib6jrnbft4sqq9ces8v4n\", \"ofwt14vm4lye14uc25ox1b0g0hc2zvru6jz3sd46ybf7rr0dqrwa5yimuph71dfp4cpw4b0yry8tbo8j7v9cd8ol57v68ls79org11l7xqxbfev\" ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"ql0r2gz33bk3qc4vy06uw1roujnivf0q5kdtlbkmc7t98hbfxnq5mo\", \"g9ncn0njxwbqjtq0zif9cw0w94m5y9cqok90i87kc2ysw9a87zflzwbyvlu3tq5354reepivuyzxdr2gz4sv4wyw6ewsznr7wu1fl0np61\", \"6xch17v7xzlk4t53cqa65bixydadks7403fms5i1we9uffc1pt8jlnwj8f12pb2ww\", \"6c5aoo97j0tjfztq1r1yh91ohms1vuh5x1v92ri5omrwljtx7ifg2zsm895n72po32usipk8ewgsv0fyzd16mep72zjwopdbltfsgv50pas9vh65riyp7r0riy1x52\", \"0ry9vff6bztz9pbzgtmcvqlu063o8oiyu8fmfmzfflhwazhi1hx11h3wj08plzgfstrkwajr5wcrwbtyyx9glnvseqmp69izlnwp4zow3pdm0tevne15b85ain5sxwffb6zn8qdcirqt85kuwfsvjc2fmn42c641jl74113qhjl2qjku8hng9jpygzp2u\", \"aceqvjowjo0k9p0eha8dopdworzjzu8vyazbp5coguls21unv61ml8kl8y1kvi13f5as2vqu8rsgy26ed5i03yy2uefgoty8e9ex68angmqx6056zg2sulxf86m3vmverzr5g6b1u3aq5za8c65mo2fwzmssw3mhz751gbzmc\" ],\n        \"displayName\" : [ \"0mfmliy4rg83d9j7hx3liwwk\", \"mib3ro30kwq3vz5a0679es5pe3sw35\", \"kebno69v6aj9f7403s3z9mzqxaoej7toxi1segw22rzki9s7syltkhcke8423xbl3ojxquw00mz1gdxi8hklmnvn2eehcvk7usoy7tw4rt07jd0oqjx8e8tuyybn8o165imfdkgnwbiexg8qnu8gird\", \"p5v32aoycs61ea212hvcnz74r7ykm0kc\", \"3cm9vpdwd4v14xr5v43tp8kz5tmd8lp5fo9a2a8u3iydda8ttq91iudlhbor49jwsovsqhgg6lkokxhz1d0fqb8ocr85vighgbxlberv7wvekgyqftty4s1nuie3tz0ihmyi41iqofy2mxlx7bvc1ar3njvq7l661ce2xq1li\", \"hyuoeays8ostzff6s1dh88glod04j9987b2k5usqlsp7q5oz4jdv7am5n4lnd6vpenr1cnzlrfv4hkj5x9j1jaz7prarevsljrw5383nls\", \"8f4e565s717tcfnwi4elmt06\", \"cvbuaz0zjdd4q1e6qebxzpo21jxa3f7oycve1ucvypjcf8fhz47hs42aypaj1yxbohsex2tcmq823wmeycf3d575tdf744m6ttv3kxyqy2naetm1il6s1rpjrva7k\" ],\n        \"row\" : [ { }, { } ]\n      },\n      \"precision\" : 1.7749771025962656E38,\n      \"quadraticKappa\" : 3.7918856438141845E37,\n      \"recall\" : 2.757512933147165E38,\n      \"meanSquaredError\" : 3.3866601690175012E38,\n      \"linearKappa\" : 1.5928292808815426E38,\n      \"meanAbsoluteError\" : 6.217511628532785E37,\n      \"f1Score\" : 1.4283257673263262E38\n    },\n    \"createTime\" : \"2022-07-27T11:33:33.130915Z\",\n    \"displayName\" : \"Sheri Kuhic\",\n    \"name\" : \"Fletcher Keebler\",\n    \"translationEvaluationMetrics\" : {\n      \"bleuScore\" : 3.1115746595271425E307,\n      \"baseBleuScore\" : 9.41898285479999E307\n    },\n    \"regressionEvaluationMetrics\" : {\n      \"meanAbsolutePercentageError\" : 2.908882891596018E38,\n      \"rootMeanSquaredError\" : 2.7570948963532468E38,\n      \"rSquared\" : 1.3938603198533795E38,\n      \"meanAbsoluteError\" : 7.823042625880534E37,\n      \"rootMeanSquaredLogError\" : 1.7609405464695843E38\n    },\n    \"classificationEvaluationMetrics\" : {\n      \"auPrc\" : 9.06633208134399E37,\n      \"annotationSpecId\" : [ \"ape1hp1iu25lcsg1x9nuq6gy1els822xabxc8w1v6z8ozjjmzck8dee\", \"6iwk396lpnac1j2gqtnusy1spom8682smkc06okcho44v02268l2w7ky4kkdrmljnm5i0bdqjnlg8petgd2z910uiifgekvn0bnn1ph8r93vu3u8lgy5bhmu0mux3cr2qw63hodpc9760bj05kxsq\", \"vw8365zzaelagt83wknkmgi1jzd3459xlzbr4lwphzbmnffj010m9jp4509rfpjx9ogzs53iiyrgv6tbjqerv8dl627grrmjxtkyp89bprf5e1rwhtkjgj2ow3lyy14d2k1pz391eatov1oniomnknz89xxfux217cwq7i0ypjz2rulai6\", \"7zmmwdi91hk2rb1whq7otfr65ic1k25h4h9jt9wt2e7gtc902p8k0t7oqmq4c70mmdqvj2c24a96l7g3xwt51uztu88hw5cnkw866smhgupsmt6sq42f6eouazn5crl92e7wtjyhwm7up\", \"p2aci16fl2t6t9t1\" ],\n      \"confidenceMetricsEntry\" : [ {\n        \"falsePositiveRate\" : 3.101957186625736E38,\n        \"positionThreshold\" : 697969247,\n        \"precisionAt1\" : 2.2826534068658323E38,\n        \"confidenceThreshold\" : 1.2712911176244354E38,\n        \"trueNegativeCount\" : \"nff5457amnd5krg4bd95doy6218wmixgkl2c5e8dtfge3cpngcl8hrwxugwv7uz83lfcwgctyqdog5xqgmdz87yytco212afidbad9msss6u7fwmbj5lyux5s02i3\",\n        \"precision\" : 1.3305983585733548E38,\n        \"truePositiveCount\" : \"exzzh13gh2w758qdkcd295ecnx4cykz2pbot9g5kg41rg5b5mby6m7kp1kt5vq96g4f3hhx2wvb57hjwf0fwetjv3t65e6ob36fix5a4wwo4sd1shr3wck4psew0dzbauzc1qo1lqy2c2tik2wy3ko1t\",\n        \"recallAt1\" : 1.859098994271288E38,\n        \"f1ScoreAt1\" : 3.07307678191932E38,\n        \"falsePositiveCount\" : \"hgn28gptb9e8mh1m7cyswcjq3p1e0tijwy5j9qvx981lh87urx4vow3ngjiifblgiink7lerr9txmbr9ce68mg6r3shynf85j4z6rqeq8t8y9kauxa9gwsgukjdhmbfnqfv9sy3q1\",\n        \"recall\" : 5.898157268063474E37,\n        \"falseNegativeCount\" : \"985plq6dvifte9yet14o4srtgvfk4euttpbixf6jkwruryth6lbixgb20siztrozjdspdrrrbqyzhobj3nr0552jprm3qbdvgpz3evh2v0pfx3iag5v3\",\n        \"falsePositiveRateAt1\" : 2.2614906506369274E38,\n        \"f1Score\" : 3.2443885986129527E38\n      }, {\n        \"falsePositiveRate\" : 1.3155382238620303E38,\n        \"positionThreshold\" : 1664416588,\n        \"precisionAt1\" : 1.9483446651043132E38,\n        \"confidenceThreshold\" : 5.4335961468438505E37,\n        \"trueNegativeCount\" : \"v4aj3xabd8czqe6pryilkm74nla8chxju\",\n        \"precision\" : 2.126000128153478E38,\n        \"truePositiveCount\" : \"nkb22efcrei1d2yu4z5y2vqo53y7hxgbiv4conh5cq9yxg8601eggqa2xo8dci9gc6ub8x351svtjome96uu6krhrsekzndolidpd1pn2sbowy9ifai\",\n        \"recallAt1\" : 1.0054499843090179E38,\n        \"f1ScoreAt1\" : 3.370910478601331E38,\n        \"falsePositiveCount\" : \"x2v8wlzjul28z7yzvw84p2x1c4erlgxwoi0i9jafef8o9dvcmenef2m6uv7ipyloqk7h5m1em9223p54fhbyzh3824qw8d23v8dw1hmse6nyfza91875gixb3upex7c72j4goalterezyf8vsv4riic0fyuo81dul\",\n        \"recall\" : 1.5358375195888308E38,\n        \"falseNegativeCount\" : \"cmj23x2cadu8iodpyp016y1pv7o8c4p654md1y97ic13ssemezr36msf0vxv7syjo39vsaa1wiifcgnktsnq4y4qlnl3s8wiwj8zyjuy1irpk2wq\",\n        \"falsePositiveRateAt1\" : 1.838516828446324E38,\n        \"f1Score\" : 9.160064222300724E37\n      }, {\n        \"falsePositiveRate\" : 1.057795789765296E38,\n        \"positionThreshold\" : 353091794,\n        \"precisionAt1\" : 3.019759936457009E38,\n        \"confidenceThreshold\" : 2.399630495372347E38,\n        \"trueNegativeCount\" : \"0e80drjx54mf8jrkbhq2b0j\",\n        \"precision\" : 1.7482550401927397E38,\n        \"truePositiveCount\" : \"6n96rfljqbmfjb2tq359kt7u1eb2f6nnwrqn5i0k7q0m9h1749fun023y10mlcjv38aby7xayex1po66xm37elof474pkj2fbtvy\",\n        \"recallAt1\" : 2.4181448598247084E38,\n        \"f1ScoreAt1\" : 2.3262291196979833E38,\n        \"falsePositiveCount\" : \"vba90omkxb1xbb72s4izncx7zl8mqxyzi8lh7x3lco138yhux9lxjbk1c8u94a7ep2lrdj5cyt1fs\",\n        \"recall\" : 1.1905604284748552E38,\n        \"falseNegativeCount\" : \"911vuxpkzhgf2zbr53g686n66t72u7ss7rtzw4xbi3zqwfyii1cp75rvlta6edjwo92\",\n        \"falsePositiveRateAt1\" : 2.222633779126048E38,\n        \"f1Score\" : 9.433282007220512E37\n      }, {\n        \"falsePositiveRate\" : 1.954274050695131E37,\n        \"positionThreshold\" : 736227651,\n        \"precisionAt1\" : 1.2148393018446206E37,\n        \"confidenceThreshold\" : 1.2800550088906206E38,\n        \"trueNegativeCount\" : \"3244k7wui25g0nvbff10nnkp9qsvxkgal88dtdc8b79o3pcqv7v48x3pco4c1botg8aw3qzzdz924rc29i2nov33rygdweljjcrxfv1peh3z7q0ur4hmc8znysq34vdn0956jo\",\n        \"precision\" : 1.4621701393380483E38,\n        \"truePositiveCount\" : \"c2c8o4ecukncldwbinj5w249hbqp0z89vnwkbycnufx0l7sik3ln8nb44ds5b1oxh3kpw71tgqwso9cc8bolc5m05ahavtgz79slkjoo6skbqwf29g5rwwuslfdr4fi29e0y2yeao6c0ki53cax9oc2lnqkd3bmu2xbha\",\n        \"recallAt1\" : 3.1098976143636545E38,\n        \"f1ScoreAt1\" : 5.252899787256781E37,\n        \"falsePositiveCount\" : \"13oyorao6snpmga76cumiw490owyg5lrbr9u4rg\",\n        \"recall\" : 1.3885624687450863E38,\n        \"falseNegativeCount\" : \"4e547eudqyfjpt0ow2ciqvibuxleo1xwcxix6od6h6\",\n        \"falsePositiveRateAt1\" : 3.324083861955416E37,\n        \"f1Score\" : 1.182946200842626E37\n      }, {\n        \"falsePositiveRate\" : 3.2048653863142015E38,\n        \"positionThreshold\" : 2105240493,\n        \"precisionAt1\" : 6.551946912571129E37,\n        \"confidenceThreshold\" : 3.084740497144171E38,\n        \"trueNegativeCount\" : \"x542vx85w2b2hymch6a2qsk1x8pzdz5tyjfaxrheznyh81rwlcma5i2911bzb3h06mxid74hxrl6d86yhazs3xv37k3z809z43aw2tgcft8hg107ej19c875uamey7xudui6w9eh\",\n        \"precision\" : 2.945296691529081E38,\n        \"truePositiveCount\" : \"xrdla7urotpli1u8vkbdijs45p1zqoecyca7jo3dd6jnmhof6ymar8ym9xnza755d7ds5h812xplbqidv2nd1qxp04ixd3us96cx2977cl3c10sle9ow\",\n        \"recallAt1\" : 1.8982099331284253E38,\n        \"f1ScoreAt1\" : 5.943865762980748E37,\n        \"falsePositiveCount\" : \"2z7k2suorfr\",\n        \"recall\" : 2.864646495290362E38,\n        \"falseNegativeCount\" : \"9kmb66vr3vg3l3ycutqzzce2l33krrdks8u2wpauxgjmguqivnyfm311ae3mmud10qz0g5yyw5hc8w8nnq63nmgoxyfeggbrsnjgofk0piln24m28qx5cjbygc0w7ullsf7o1ltjnfk5eu6osjczvkmvygdkl5p3ltt2vlbo\",\n        \"falsePositiveRateAt1\" : 6.61804643327632E37,\n        \"f1Score\" : 2.4684172657687115E38\n      }, {\n        \"falsePositiveRate\" : 3.2544423826662216E37,\n        \"positionThreshold\" : 1565526348,\n        \"precisionAt1\" : 1.8321949400228347E38,\n        \"confidenceThreshold\" : 1.8713169436261607E38,\n        \"trueNegativeCount\" : \"n52wnxjf9zyganxb1m9uyscqk0nk\",\n        \"precision\" : 1.2814506961973654E38,\n        \"truePositiveCount\" : \"xzel1m8vhjpeofjwoxcq1bwg2wzmxvmbgmcqaiacvasoa4znhb5pe8v6gvy2ots2gdzjzk6anwcfzoac\",\n        \"recallAt1\" : 1.060843780296661E38,\n        \"f1ScoreAt1\" : 2.547794257392776E38,\n        \"falsePositiveCount\" : \"v8flzfhmpfli81apz6bsr7da6h55mtu15u67zpz8uixlq4dfajpwdrd\",\n        \"recall\" : 2.4219736661932564E38,\n        \"falseNegativeCount\" : \"jjab\",\n        \"falsePositiveRateAt1\" : 1.771093072385072E38,\n        \"f1Score\" : 9.399422379592139E37\n      }, {\n        \"falsePositiveRate\" : 8.964650608745162E37,\n        \"positionThreshold\" : 2085833191,\n        \"precisionAt1\" : 7.911643762169896E37,\n        \"confidenceThreshold\" : 1.0469762521782413E38,\n        \"trueNegativeCount\" : \"2ybtfotqypindlftn9z61q6hz2xhdy7jyiq8j52vlpbsp0qatv5fz8su95t68cteappt8p30upcv2bf94\",\n        \"precision\" : 9.881615100974533E37,\n        \"truePositiveCount\" : \"not5i6eb5mi61jhsbvdwvz7akon6ntljsd8z88k9h2bqw4o\",\n        \"recallAt1\" : 2.1173986949769822E38,\n        \"f1ScoreAt1\" : 9.48272796170947E37,\n        \"falsePositiveCount\" : \"gxug71xlqhkzhozvayvmm1yz5cqei9y1hae8m9yvr00nyg79u9fmln6hfxggln9n8cobdiop7k6rktpgaf4phwyhdag5726h5m8y4na8hmft0p\",\n        \"recall\" : 3.2837187245940477E37,\n        \"falseNegativeCount\" : \"nrm8\",\n        \"falsePositiveRateAt1\" : 1.97212032228011E38,\n        \"f1Score\" : 2.397806807486327E38\n      } ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"6698evjrc1razjuw90fqcgtj5b2b2ts899103augzwspvniupsnqf5d8xekx5tdxtmze1y7qc60jhtpefi86djdrpcvor4s1mvj9oxzz3ufghrc3g0w53w588ffnu28jci99x3hhb0dvc5f07ddow1uf39xu57a\", \"rlp5f5r1n3gintgeqg0qk6ybto1lnqepwbq9gfohactydhva50z7oqdw17rm3x58rfwvwz0ezr51wov98hqa5v5ewnlrua7wf68e4ht9rdzu873ru60lxpf7klox0c7ds256nuyx07bxlx94on1gdubkkjbm8gzn347bma24c7\", \"f2pxkr0t6wnfeoreajkq2xdqio6ualctyq2h5n3k8r9ph\", \"k18fvk4sn3fltqytpajpsbokhh2y5d6y9gn61ztwqtldwa3ybqdscjpr5panlagelumy44iia7o0yubrezpjg4qla65hyyfg1axfy99avl0yvubqb889gl\", \"en7pwp6ej6vl5rqbdpny38dul6pg3tacngxholcmmguxbli7okg3ym83grw5zvb09ud7bbi3eqjo5vrfmfjfelex3asrxhikkbqi64wixr6pw09hb66il1dzq94w6q4hhxs\" ],\n        \"displayName\" : [ \"vern51vsrsyas4wodlug9og5vjaikjv5hmtre0xwlk9r051w5yg6jjs1bq9cr3y3k4bs2p6ko413lp6tv8vjcjtye\", \"fs9uoqs700weiwup3sy0m6woruj0l7erimqg5v990dybvw5j13amm4in01714ou3czmpur7iia001pe9kzzf10c2dtbjed1lbrog33pljncplipfaksl7h4f78lylg8oxmcp264g88dkv4thsedzn3b4zxpfyandx4bxtl0pz\", \"tqa9ox83c17tytxamw0pv4fd3srva1jqj5m6xkdy06ine9ve90w9ny74daznm85pzcf35eml3amymi\", \"6lpk7qoddk1j3nz4ya\", \"p3lg1gegjj07ea4281tb2crzndu80xfktmpwtyolfr4o8y16yr03se98fczpq5ixpacpthkrwlvnbf0pme863jb636qrilarm3xw3kdhrrqhd36rok462qswqvj2r9mev3dkdlz0f\", \"ciuociw02y7g79ehius7w1atdyjlk77gzdve56jb56cu3jt3zzklubpdtfiemhvym9fhpzslkobfcfrug946dzlmskjju4lyb58dostv2ayp51ekz\", \"zjfomte5oa8mj3wn8rlsgy3ch0\" ],\n        \"row\" : [ { }, { }, { } ]\n      },\n      \"baseAuPrc\" : 3.373182170640637E38,\n      \"logLoss\" : 1.5515839443890823E38,\n      \"auRoc\" : 6.788672800461528E37\n    },\n    \"videoObjectTrackingEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 1.5631371543995718E38,\n      \"evaluatedBoundingBoxCount\" : 2110628335,\n      \"evaluatedFrameCount\" : 1217079872,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 1.7222921577117014E38,\n        \"iouThreshold\" : 1.2498309953984748E37,\n        \"confidenceMetricsEntries\" : [ { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.4960230982798429E38,\n        \"iouThreshold\" : 2.448897811132263E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.6555366926990997E38,\n        \"iouThreshold\" : 1.362146334451919E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 3.3935615119817376E38,\n        \"iouThreshold\" : 6.925539655491545E37,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.2709692825035398E38,\n        \"iouThreshold\" : 1.7594293550372123E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.7090939269349813E38,\n        \"iouThreshold\" : 4.599497511097546E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { } ]\n      } ]\n    },\n    \"evaluatedExampleCount\" : 1042901445,\n    \"textExtractionEvaluationMetrics\" : {\n      \"auPrc\" : 2.6185850889042926E38,\n      \"confidenceMetricsEntries\" : [ {\n        \"confidenceThreshold\" : 2.7545544400471516E38,\n        \"precision\" : 1.482900957325227E38,\n        \"recall\" : 2.3081728808467886E38,\n        \"f1Score\" : 3.041270060945706E38\n      }, {\n        \"confidenceThreshold\" : 2.5498330304365294E38,\n        \"precision\" : 2.0423099734512467E37,\n        \"recall\" : 2.2735037546207987E38,\n        \"f1Score\" : 7.58013575996084E37\n      }, {\n        \"confidenceThreshold\" : 1.974334446036494E38,\n        \"precision\" : 9.923393543972504E37,\n        \"recall\" : 2.8409564059160558E38,\n        \"f1Score\" : 2.6371151912394377E38\n      }, {\n        \"confidenceThreshold\" : 1.4628413236807323E38,\n        \"precision\" : 1.0282172205106586E38,\n        \"recall\" : 2.9980113589417702E38,\n        \"f1Score\" : 2.2790397917804624E36\n      }, {\n        \"confidenceThreshold\" : 1.9703163105378516E38,\n        \"precision\" : 3.066889867419079E38,\n        \"recall\" : 2.1067493695992126E38,\n        \"f1Score\" : 2.6386281090001792E38\n      }, {\n        \"confidenceThreshold\" : 8.026161581747768E37,\n        \"precision\" : 1.401654099177256E38,\n        \"recall\" : 3.31241685805456E38,\n        \"f1Score\" : 2.9055834220322763E38\n      }, {\n        \"confidenceThreshold\" : 1.217307963015973E38,\n        \"precision\" : 1.6776926173786032E36,\n        \"recall\" : 1.4053835118714334E38,\n        \"f1Score\" : 1.006458049895014E38\n      }, {\n        \"confidenceThreshold\" : 2.9407638914507868E38,\n        \"precision\" : 2.408629040743663E38,\n        \"recall\" : 1.140697545494663E38,\n        \"f1Score\" : 7.714009087089959E37\n      } ]\n    }\n  }, {\n    \"imageObjectDetectionEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 3.6469185803604036E37,\n      \"evaluatedBoundingBoxCount\" : 732151906,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 3.085230568985776E38,\n        \"iouThreshold\" : 3.3438161813487444E36,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 5.835292310818375E37,\n        \"iouThreshold\" : 1.9936980729063196E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.862368836984674E38,\n        \"iouThreshold\" : 1.2089432156861754E38,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.5023947880879413E38,\n        \"iouThreshold\" : 2.01004665150372E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.48295666579182E38,\n        \"iouThreshold\" : 3.9450780465404406E37,\n        \"confidenceMetricsEntries\" : [ { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.7550087166286033E38,\n        \"iouThreshold\" : 1.0001003329886708E38,\n        \"confidenceMetricsEntries\" : [ { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.7855067686593606E38,\n        \"iouThreshold\" : 1.7472048545079213E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { } ]\n      } ]\n    },\n    \"annotationSpecId\" : \"8fvs\",\n    \"textSentimentEvaluationMetrics\" : {\n      \"annotationSpecId\" : [ \"u6btvey32ckc9hkuabgykck5sck924irkg6guez905b8k6fg0yd1onf5nwpb4i0vjp62pcm8o2jgh2i15qhorsjpgmjbh8cii834wijt5mf047n1seh0lgfgdd58a6g7ueek9t28jyhkprfetr812wav5u34vhpf17yf3uvsu59kflf3wcqbtrud9pb54no8te05hs7\", \"a4nnmgaftwtno7b9kul784fshd8x5latfx85511gm1mvf3ct8zvnwvoj5g6uq95kbjscv2wqioqqroqhp7japzzz23nrpbbmdh880ugu9xw6ehdaat8ous8dcqe89osiqwot4tjagveg4\", \"bv86b9gi68oe4aen9s157uqpofy1k7k1qclydhfmhsnj0a54lb3uft94rbsz870mb35xs4r5g96ahnlewzxjmu3wn2gi8pptbprmsf7jmygxpx37cpkhs8npoe1qjqqtgn\", \"go3y9qdilo76ebgaon2apvkaev5g1yv7f5ui8fzzr7a60kbmgzu\", \"5pff584ygkl4e69u8e5wrujqn0bkdgiae3jp0qee461kqd1oc3pa2k56fxiithkv7d6nwgvjcjolft95uzd83bp2lybrg48d3\", \"ci4s8ep1v6z1yn5lqr07b2juy5m5\", \"qh8j5nlzu1v0vcv67ygu0dn54256yc3tcqz81fashp64waq28wg2sjp21ux8pmfnvfdw215squow8jcuzkhwvioefkiwgq92gbi5plgjdj9ub765quy071bftdp80osm\" ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"l4m41x7c3636x5uiq0qkmyv732vr8\", \"d7uitcahc7yxme04c4m6ntk7crq98vazu7kt386ouvn7dgzhdat2ls8gqyspnrp0c95i9yy4t4z7yln78iqc5m1nb6gia3bouopwkixwlmw9jixmxkbbg8097t77sow4bio0g75g6zh3ndibw\", \"1txzmek1f69ha0m1fev08yynzadnwqhc6mb11idv5lbtmjg0o4hzv6g\", \"up1fnfm3dbhjqqs338dslr9238atd1862dkf62gte404esl1qg5v4mixdwkp3fm2fdl5phlqihd1\" ],\n        \"displayName\" : [ \"mnyfc6p7fg82io3h83m1v9a65l5w1fbjck6qaaekjtuwapf4hxuygpe69ho65ffr8g8efqepn9j8rg3bynjdr8yjefwowrs6jm0yc8swnlkq49rvhqwjjtoql12qdq7fmmj7g2u22ow9e8a6g1ljdmq9j\" ],\n        \"row\" : [ { }, { } ]\n      },\n      \"precision\" : 2.5469578244529775E38,\n      \"quadraticKappa\" : 1.6810322049881851E38,\n      \"recall\" : 9.37615993870232E37,\n      \"meanSquaredError\" : 6.768132197991095E36,\n      \"linearKappa\" : 1.0307892394175356E38,\n      \"meanAbsoluteError\" : 1.2906390169760368E38,\n      \"f1Score\" : 1.8488506694050086E38\n    },\n    \"createTime\" : \"2022-07-05T12:13:33.132611Z\",\n    \"displayName\" : \"Arnulfo D'Amore\",\n    \"name\" : \"Frederic Conroy\",\n    \"translationEvaluationMetrics\" : {\n      \"bleuScore\" : 3.294267904887332E306,\n      \"baseBleuScore\" : 5.170809749523277E307\n    },\n    \"regressionEvaluationMetrics\" : {\n      \"meanAbsolutePercentageError\" : 1.0612758950857317E38,\n      \"rootMeanSquaredError\" : 2.60308500592142E38,\n      \"rSquared\" : 9.684006710719512E37,\n      \"meanAbsoluteError\" : 1.7678540167430546E38,\n      \"rootMeanSquaredLogError\" : 3.188915250444164E38\n    },\n    \"classificationEvaluationMetrics\" : {\n      \"auPrc\" : 6.818578741962211E37,\n      \"annotationSpecId\" : [ \"nhe6enbkrc1slvqi1gmytf1y088u09c7hfgqixey2hxpihenaymw9f8ghowicibimouw4xix35epijy08zj7i83aplnn1m0izsn4lp1f7p449s40kymtvz714gox7javbmdernbrxofynmzr69rbgmnjh\", \"1jdah9h5i4kjjz582rqkua9g21znribcuceae77z5128pw3ar29a82texti61\" ],\n      \"confidenceMetricsEntry\" : [ {\n        \"falsePositiveRate\" : 2.466652854126055E38,\n        \"positionThreshold\" : 1208289153,\n        \"precisionAt1\" : 2.321851174685132E38,\n        \"confidenceThreshold\" : 3.3006811818320634E38,\n        \"trueNegativeCount\" : \"iklr4ujgl5smr8ttkqt9eglb66d52sqcba\",\n        \"precision\" : 2.203020987713176E38,\n        \"truePositiveCount\" : \"vcfnk4qj4yt16ykf5uq9uqpk62onhsqje57zb61uuz5pb40uml14iod6v632ln665j01tltokcchc5yi1j5cbylabvz8fb6sonsry79ir\",\n        \"recallAt1\" : 4.919623260205351E37,\n        \"f1ScoreAt1\" : 2.769699492982035E38,\n        \"falsePositiveCount\" : \"apgy1dczmix5l4ltofmkwehkq99xjmx3hej42zuzyd7c9gg4q1eqsv5wcu6cgr5qvq1fun187hk9w2t1ypyv4lf84qgfearqlena3sjnod77qgzx3t1ewpvevzup5c92fskaewyqt1tqvb6e67jrk367on13xpy24y6mf9xanhy363ipaa2nbu\",\n        \"recall\" : 1.1014586468881062E38,\n        \"falseNegativeCount\" : \"2wievm4oz2nhlbb4421i16vfl1nfy6autf9l1pcx33ga61rh2thnij6iverb0qnqon3pzcq8ougazolp37eodyjut30bxmjjksonrcdt7qro8198r30okwcpibbgnh8dgscz2dlb0v29177i\",\n        \"falsePositiveRateAt1\" : 2.134564872617277E38,\n        \"f1Score\" : 5.415324651504261E37\n      }, {\n        \"falsePositiveRate\" : 2.2634386171376324E38,\n        \"positionThreshold\" : 194277965,\n        \"precisionAt1\" : 2.599807179971626E38,\n        \"confidenceThreshold\" : 3.1447232609593256E38,\n        \"trueNegativeCount\" : \"uthsk3dyak16f0bkimm81glylqc5t1vmshc48rkkdppt7oremrp4kdbbxhvea3pnaso1rq2kpuzknbf6jgykv0esn1sbk68totfhcpu3mqa5\",\n        \"precision\" : 5.662395958386296E37,\n        \"truePositiveCount\" : \"jcqwutjfsl1fqabk6jbtd9ppfoy9ofukqrnonvtvaasl62xcygqo7osm86tvhtzu0ygqwx2jbn0gofuimqyn526pz4f\",\n        \"recallAt1\" : 2.864883839033273E38,\n        \"f1ScoreAt1\" : 4.1087301854172085E37,\n        \"falsePositiveCount\" : \"vhmbd0jza1ag8tg2pryniufcmp5\",\n        \"recall\" : 1.5744827719249267E38,\n        \"falseNegativeCount\" : \"iibvkv2cgvgtagixc2fe6dk5cxk6c5qntt4v05ig9sdy6y9k88vhja8ohj71zuoldlkef2lfoja62mfu4yxp6ux8fwc7yjjhqy4b6g5lq08d8d8tg88lfbiaymoqj9bfgg3bh8weezy0ejhnq0x6lvbwc8ayjg03o43p8lky8tdfpkcuo8v3ybpvz2vs\",\n        \"falsePositiveRateAt1\" : 2.658058229432571E38,\n        \"f1Score\" : 9.683356245440491E37\n      } ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"6k78nmtzdrq59u8qcbwva8d2xf\", \"szzynmbmeozfjyl5dp3kyyo8e810vz9oq374860ze3\", \"mzy9yxryfezyl44e38zfcla5uz87qttykkjlw8ukevbmy1mhx7hg6clfcfzfp3krfev4mbk8wffx5g2szpom1irjbge68hcdo1zph59cgiwb49afgfqn7webihyxlbptqmrhfpziemqd4yluo7tqfylpluyup7bwt\", \"2980kb0cqj9h3z0834r8rrogejp6s7g0is8t264oxw4ukdjupnaqiww80kz7tmngcdjx7m0azpiv0uuds761x71fvm2xwwc0ck545nvcodojbk2n6zfspi7hztscg\", \"yldqbicxhypn9kzdu53ghtx92wuccco9jphm1objmh9bjzfofq1jtqq1g\", \"888jlxsv5azzyph3a0gsxp4padhjuo3slspgvdi8mddkm03864os7oy2nbrpa4r8txdg91aykek93z24bfd5utqvqdz2ivo1tugz6n6y2pa2yjwzmx33bz3bwul041pyspyhsmakxesj5rno32hemquf1g4\" ],\n        \"displayName\" : [ \"uzlybko3uuwpevjca5at4kg7sgdv6lfsvu1q53xkt0cp3ojkxbhv12gqopuew3642zbw1r9u89a8qbxkqfra08uijdvy2orpdwm4qwxgwr7rk86cz20k4m5egugrcy24aqzqpyco3j1wwjdrlo0336eufedlvoxhmdgesan2ywmcalw\", \"l4jlxvaaxtrht6wwfdj0n1yt3bkgdt2dlejybaj5b62yhhtdk1q3b5sru7v6v7tv04vpmsfz9u6dzf7n7mrf6psn4e8kqas5kq\", \"ues9boyfun63jjviaapgo8xitljjsh9pq2lfmc246h43zo2maniikqcxglvvktdvyuyq4t920\" ],\n        \"row\" : [ { }, { } ]\n      },\n      \"baseAuPrc\" : 2.5360102321036803E38,\n      \"logLoss\" : 2.4781527028007577E38,\n      \"auRoc\" : 1.8416764392915197E38\n    },\n    \"videoObjectTrackingEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 2.2870094731280304E38,\n      \"evaluatedBoundingBoxCount\" : 1047112199,\n      \"evaluatedFrameCount\" : 1409781166,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 7.967564522341107E37,\n        \"iouThreshold\" : 3.379709773944891E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.86022383936945E38,\n        \"iouThreshold\" : 3.033203271980195E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.4054685862016405E38,\n        \"iouThreshold\" : 1.3153165276408317E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.0817722990941083E38,\n        \"iouThreshold\" : 4.0693635965649207E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.4716702383844894E38,\n        \"iouThreshold\" : 2.812075983522757E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 6.6724698725171405E37,\n        \"iouThreshold\" : 3.1113097508178392E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 3.5905878021790917E37,\n        \"iouThreshold\" : 2.118208882467333E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.6432805457897878E38,\n        \"iouThreshold\" : 1.0670631180281838E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { } ]\n      } ]\n    },\n    \"evaluatedExampleCount\" : 1224397714,\n    \"textExtractionEvaluationMetrics\" : {\n      \"auPrc\" : 8.639965528354724E36,\n      \"confidenceMetricsEntries\" : [ {\n        \"confidenceThreshold\" : 2.9803009691131943E38,\n        \"precision\" : 8.74658493801889E37,\n        \"recall\" : 1.0759155482978062E38,\n        \"f1Score\" : 1.7053542085770177E38\n      }, {\n        \"confidenceThreshold\" : 2.5199716217705585E38,\n        \"precision\" : 9.33713377808333E37,\n        \"recall\" : 1.4471221915494933E38,\n        \"f1Score\" : 2.4250756812651917E38\n      } ]\n    }\n  }, {\n    \"imageObjectDetectionEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 3.35893416548288E38,\n      \"evaluatedBoundingBoxCount\" : 822508341,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 1.9624077204064966E38,\n        \"iouThreshold\" : 2.6845287411939177E38,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 6.687333700075141E36,\n        \"iouThreshold\" : 1.955939022130228E37,\n        \"confidenceMetricsEntries\" : [ { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.0382220063780269E38,\n        \"iouThreshold\" : 3.709599121680248E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 3.1389909979983506E38,\n        \"iouThreshold\" : 2.5889003026850115E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 4.54093088053521E37,\n        \"iouThreshold\" : 3.8307766028271144E36,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      } ]\n    },\n    \"annotationSpecId\" : \"h27g\",\n    \"textSentimentEvaluationMetrics\" : {\n      \"annotationSpecId\" : [ \"1mzk805tnk9mi7tcn753560njd4s1au78vbqs64\", \"79lm6tjitspefxvkvnp8fea3iz6hjbol2lz7uu0982qbex9yd0j1mx5ib\" ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"2b779ofzshxtdjovjcasgvd9qzodrd67srwh66i7xowdn9fxa3g1mwq5kjv6z4wosu6dfz6b6v63ux6pl0x6xpjc4zww9b0g3mrgae5gekals1c\" ],\n        \"displayName\" : [ \"d55gkkbmtuz7g4y3l4xevrsb6o0t84jxkaecnlebigkxaqrcjfgvv494a70xjnadf0wfaquoronx4k23v6en9ixeprv7qmu1g0ef133ppk3lwr3gkcyw9z93i7xafnlje5thz11ruelko8dmm29s723f2k\" ],\n        \"row\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"precision\" : 1.927830653938117E38,\n      \"quadraticKappa\" : 2.3298711659294785E38,\n      \"recall\" : 3.7218918169789984E37,\n      \"meanSquaredError\" : 9.999241025780088E36,\n      \"linearKappa\" : 1.0756423285961305E38,\n      \"meanAbsoluteError\" : 5.292689313289369E37,\n      \"f1Score\" : 2.761218116580521E38\n    },\n    \"createTime\" : \"2022-05-18T13:34:33.133567Z\",\n    \"displayName\" : \"Graig Graham\",\n    \"name\" : \"Jason Luettgen\",\n    \"translationEvaluationMetrics\" : {\n      \"bleuScore\" : 6.053586922520643E307,\n      \"baseBleuScore\" : 1.4305607657046636E308\n    },\n    \"regressionEvaluationMetrics\" : {\n      \"meanAbsolutePercentageError\" : 3.079306032426869E38,\n      \"rootMeanSquaredError\" : 2.762763840786192E38,\n      \"rSquared\" : 1.6813994911006521E38,\n      \"meanAbsoluteError\" : 2.8625053191203245E38,\n      \"rootMeanSquaredLogError\" : 1.96313099887595E38\n    },\n    \"classificationEvaluationMetrics\" : {\n      \"auPrc\" : 3.142392790832402E37,\n      \"annotationSpecId\" : [ \"6c1ujpjl72vbftxmiy3ladzfpexowh1w2p5mywbh28634diibv5hrnfbm7mj7njopog7ivb7ulx9vyxmiks3bwssb9pxb1wda0oobfv0hxpgbtlyw9ljqc0af\", \"il79gzs9mj4zj7bhd1zgmu3toj78wh14v74ptdtej8wvc8tc9741b8ieigua4qcvi618nn0bzum0w2d453fg8s5sm03q460o1oi3fypg4l7dnql5fl2fsrdo0w6luas5rzuhp6clh\", \"4u6e47y5pglv4xs47y3att5e7tcfyp32rk3lqrvhy24fdshuitsz5q6zvwaaq2yhydhdkaxstzhtfw7rz01cqc9oznnxe5fpfshj1rakjq4ahqpb9f1jseq0foxwoxwm68yqib89y5aoo9dq93cmcd54zi0jdyb01vtmu2p1s76xoex0w63wmsa87x\", \"dcpj85d1lh9ekb34go24d10ecbv52wjb3v9otpjkd8061p7i\", \"34s4fqi85f4r1223ps1f0vg10iyx9ask8amevgphrwnkk0r4o8ozrf5ezqf5ocvb14wcpbsgluf474xz7w67avc4olgj8ihogom5n48pin5li2km3upy7y6hbev47ajhmwspcjprcpjnpo1rsd61u9iekt2nxicvrrq9xjq8hq30do\" ],\n      \"confidenceMetricsEntry\" : [ {\n        \"falsePositiveRate\" : 4.642856843799956E37,\n        \"positionThreshold\" : 1679702388,\n        \"precisionAt1\" : 1.2059082188539727E38,\n        \"confidenceThreshold\" : 1.519890808117867E38,\n        \"trueNegativeCount\" : \"r3cp50dfcigtxhx6te6gh4yhwoie5mfh7r4s8gkiatlq9nebu4u94niipl898g7lmvoonsrmjsulf262zr8p99rnn0eoldsm3n99jo7g041pul9sk7p0w99772nsylzm5i2njhbczlxwqr159yzyuff72irf700cpdbijh95d3e9kpf09jr7u4qrzm6af7e\",\n        \"precision\" : 1.6994883592852988E38,\n        \"truePositiveCount\" : \"1c2oli4e\",\n        \"recallAt1\" : 2.2220701013738045E38,\n        \"f1ScoreAt1\" : 1.9955347925207796E38,\n        \"falsePositiveCount\" : \"w721ig1fed60r\",\n        \"recall\" : 3.3799464225390946E38,\n        \"falseNegativeCount\" : \"3neobttpwm6xome184rw44mjp5rulrigbs3f33qshuwe6861iwva6zpj0edygl076on6fhzqf5el4861s8n0c6\",\n        \"falsePositiveRateAt1\" : 2.145367401788295E37,\n        \"f1Score\" : 5.260591513700765E37\n      }, {\n        \"falsePositiveRate\" : 9.922345175727499E37,\n        \"positionThreshold\" : 1275142906,\n        \"precisionAt1\" : 1.243018501518415E38,\n        \"confidenceThreshold\" : 1.4133398565303318E38,\n        \"trueNegativeCount\" : \"0bpf8haos7uvg1ns3w5p5snz3q8ahbrgymsmhjsgofpahsa7yhx1p69r9c8p1krmbzytayo5lzytj8wdrj8b8bkjrvgq2pd1x7xmku2jrye4vzt5advxugap3kho2ejb7t1mf72rjuk3wn9fwwucnflzfi2hi4yaxujxruohwo16c69s8kk0rm\",\n        \"precision\" : 1.5546381664374307E38,\n        \"truePositiveCount\" : \"ou8l91m1t0jiqqphp47bx0ktqvctsrjgk6k0t9v3rhb7en0h64kkckdropwbpop0j7g8kauhnkgw5umyxv0w4wsjqaflsahgr90wl9thwpj30s4q7mamsjjbbgaaxtbwr1pdp5e5q8f7357niv72hxglv95v3wvnrx2u\",\n        \"recallAt1\" : 2.8335064082019987E37,\n        \"f1ScoreAt1\" : 3.0025700118695855E38,\n        \"falsePositiveCount\" : \"rf1qgo56ky26mb719ixsez8h13gn4o66fn7bj94z6w25389xbubm74x0mm0xjm7b106jf1ko2efn289n9snxnlgqb9rkvtn\",\n        \"recall\" : 2.1523705382315776E38,\n        \"falseNegativeCount\" : \"i5sk2iqvxm7bs030anjgu5fo8m0tjnzcxygd4iq7qtckwq6tb3\",\n        \"falsePositiveRateAt1\" : 1.5443231943941717E38,\n        \"f1Score\" : 3.140673408033976E38\n      }, {\n        \"falsePositiveRate\" : 2.800682082947358E37,\n        \"positionThreshold\" : 820851509,\n        \"precisionAt1\" : 9.20899011879418E37,\n        \"confidenceThreshold\" : 1.1794304272499958E37,\n        \"trueNegativeCount\" : \"y85l9\",\n        \"precision\" : 1.4129914800405595E37,\n        \"truePositiveCount\" : \"uceeqqu7jsr3io4iyo1og760j8sg0sdccijh8egkpc94m11tbch681fq7qc53c0qd4oh57qgjphn5d66a2504y2zxokifx4v38mwlyaijkuegsks7kuzljprfyndtjn0h0858il54m8vexhtjdm5abhpx0egtdrwrmfxdo\",\n        \"recallAt1\" : 3.0942321557915987E38,\n        \"f1ScoreAt1\" : 1.5278007211760944E38,\n        \"falsePositiveCount\" : \"x40v5oxst4rafph0ojduiume3lqd6ymgpmdh1fy15464s0xwn36zqi9wyiup6wk709nrg99xxizbkzkvhqmalkkambpjn2kzc1vw2wh\",\n        \"recall\" : 3.39450791891091E38,\n        \"falseNegativeCount\" : \"cy1edtkshyk4zcutfgusfzrvl7b5v4pt47k8j216avwd5bos9ghroyk1fb67sxpst1kx2ku0yu\",\n        \"falsePositiveRateAt1\" : 2.321423455834067E38,\n        \"f1Score\" : 3.378891836786465E38\n      }, {\n        \"falsePositiveRate\" : 2.2108456393838934E38,\n        \"positionThreshold\" : 1680426859,\n        \"precisionAt1\" : 1.8012300835774027E38,\n        \"confidenceThreshold\" : 1.8771139649333617E38,\n        \"trueNegativeCount\" : \"jqme2mmn\",\n        \"precision\" : 8.829409343962496E37,\n        \"truePositiveCount\" : \"fqtmjcwpf2dfz5fsad2pxxbcn6dhdnwu97c1moyh7nztxcmp3b5rhncb1du831olro8sh1fyo14dsapgmtjze02kuz69y0ndwu8fmfb8itdilbgl0drm81dkmiqmrjj8qexalniz9v0ovuebvht77yg2t99vevh78qymfxnv105fgj1odjefu1lwr\",\n        \"recallAt1\" : 4.792623571570874E37,\n        \"f1ScoreAt1\" : 1.0487508315054962E38,\n        \"falsePositiveCount\" : \"wr3zcj86uoqyi54l4ifk7mpq4wdimgh9o6meagqb4ly0n7jkiql06nkkqffpju2pkofiu7hezcepp6oh61bnpola8qucirv553zlyemns3q4\",\n        \"recall\" : 2.2470722049435555E38,\n        \"falseNegativeCount\" : \"bfh0czky1cszyvm2g9j4lo844cn69j4p1r3hus05pajisecp810uxii9i8cffc9qtisud0o0dn8pwty8l\",\n        \"falsePositiveRateAt1\" : 2.6177141619523785E37,\n        \"f1Score\" : 3.1559419495228966E38\n      }, {\n        \"falsePositiveRate\" : 5.102681840076622E37,\n        \"positionThreshold\" : 935105743,\n        \"precisionAt1\" : 8.001659737745049E37,\n        \"confidenceThreshold\" : 3.355740954180723E38,\n        \"trueNegativeCount\" : \"7is25rlv2fq2y3i8nq6ijy4pztpbq8k82huis4ljra5cn198903r67jt2p2jiiozlsz98d3r9ecn3wn4lgit4jquvn6dycte3ico2g83u00m\",\n        \"precision\" : 1.1382111361320007E38,\n        \"truePositiveCount\" : \"li3cr1ez3oeuo4hi5h0t5mktdhlvgmn9i5q1euaql1d0n7j41wo6ufocsdhsi1zdzhwniezpdxuhdfprszwmyjwouthp9nksx33\",\n        \"recallAt1\" : 2.732630242373686E38,\n        \"f1ScoreAt1\" : 2.0724495688528268E38,\n        \"falsePositiveCount\" : \"tka489tuf6674llokm1a195myygonbuy4ph5h95m1awilzyk0aks8ho5a6plopt1ay2o8gd91qyg3m83ok4mqpip0fk6d609555663ei5mzmn692cqs4vr3pfvxd1lj8i43pq28elq0r9ifokmd6yv\",\n        \"recall\" : 3.3295048503287402E38,\n        \"falseNegativeCount\" : \"gw0jnklro81mybud1x3pjbt4ciuqmhrwurzy0ccl98skc588ux6wzrqz3ox41493zmgi71ixqwu0pgb28rxx3pwsskril82zs\",\n        \"falsePositiveRateAt1\" : 2.905213292554949E38,\n        \"f1Score\" : 3.0732706236245983E38\n      }, {\n        \"falsePositiveRate\" : 1.9356781163258713E38,\n        \"positionThreshold\" : 905177987,\n        \"precisionAt1\" : 2.9833369859620466E38,\n        \"confidenceThreshold\" : 1.9274021054228116E38,\n        \"trueNegativeCount\" : \"n2uupcd9xykc69nwfxh1t8y5q\",\n        \"precision\" : 2.6535019190527563E38,\n        \"truePositiveCount\" : \"4s5cy63c1vao0imtyfj8wy8vgowien67tx44xhwgksoloz8dei2616qg5wcy6ikwkfwvpndokhzgtontih49hnevv60oa2ogyopvvr0f615ax9da6tlpcci4faowi5uz24z14vj3sxr2me4k3d0ven848ejbpd6axdpgv5dfqr8156fsl5urf6bd30lddik\",\n        \"recallAt1\" : 2.9371975667557833E38,\n        \"f1ScoreAt1\" : 9.770567206982633E37,\n        \"falsePositiveCount\" : \"81a7thachymsh0oycrotc1gu7t5h3f75c2sc8onjhldo7ll2hg02e1wohey0io4bkrsxnqjd35pijb2alestf5z3bmb5srl28wkvu2bblesx4o8aijiimjb3z6cax3qnn9m5qlifkco1bgiahdwmj01oictv21srmi\",\n        \"recall\" : 1.7310912704942736E38,\n        \"falseNegativeCount\" : \"ky7etszsnvcb1mkffcn69v2jmgvaaahgwpgd3aerctdho2gy1gycjgey1uxey\",\n        \"falsePositiveRateAt1\" : 2.950444960117331E38,\n        \"f1Score\" : 6.868957258948418E37\n      } ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"p80wly4e7oo2gei79gpf04iv48a\", \"xuh8ptmx46ekriek7vmo0g2\", \"6okg8tbtn9zswc6mfk02rqtvbgznqubvdmyqlviwkpypwg40jdjvbesc66ex22lgyt1bldl41zbp94ke3bzs8cibie9v51ndfdp19gyf20tveil258zss0m8duwryqtx3whdhjcc0wdl5p9018dhdaeouuec3z41fwq3cxaohrnucl2fpl1d4vtzu8o9ujqw\", \"o4bf7jvhg81kp82887g8vghc0l\" ],\n        \"displayName\" : [ \"bd7kx91pg81re0mi3b7a0g0cic52l7iztmbzcijz8upisxv1673lf85inwe3xyyhmal9u1cz7xklii4x61fn0\" ],\n        \"row\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"baseAuPrc\" : 3.31160059668115E38,\n      \"logLoss\" : 2.5241612652723756E38,\n      \"auRoc\" : 1.612570894686607E38\n    },\n    \"videoObjectTrackingEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 2.4485870268645153E38,\n      \"evaluatedBoundingBoxCount\" : 1439664412,\n      \"evaluatedFrameCount\" : 1301070958,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 2.6879845601871663E38,\n        \"iouThreshold\" : 2.6313365058807635E38,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 7.384504525976774E37,\n        \"iouThreshold\" : 1.0584285245129061E38,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.3153159350479159E38,\n        \"iouThreshold\" : 1.7436006023678406E38,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.0319155597640521E38,\n        \"iouThreshold\" : 1.4816585405530445E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      } ]\n    },\n    \"evaluatedExampleCount\" : 122974102,\n    \"textExtractionEvaluationMetrics\" : {\n      \"auPrc\" : 1.533131308972207E38,\n      \"confidenceMetricsEntries\" : [ {\n        \"confidenceThreshold\" : 1.6280278599199673E38,\n        \"precision\" : 2.424366822373076E38,\n        \"recall\" : 2.6874009522704038E38,\n        \"f1Score\" : 7.044205380019294E37\n      }, {\n        \"confidenceThreshold\" : 1.216208445066629E38,\n        \"precision\" : 2.454716386318959E38,\n        \"recall\" : 4.108672023160941E35,\n        \"f1Score\" : 7.854598602400568E37\n      } ]\n    }\n  } ],\n  \"nextPageToken\" : \"k5s3bg7mtreo10vxzw65beirtxvptblvw312wrbk6fpgdicn2q867bpkte5p\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3672630-be93-40d5-8309-03da5f71d167",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.134901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.modelEvaluations.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListModelEvaluations.",
            "properties" : {
              "modelEvaluation" : {
                "description" : "List of model evaluations in the requested page.",
                "items" : {
                  "$ref" : "#/components/schemas/ModelEvaluation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to the ListModelEvaluationsRequest.page_token field of a new AutoMl.ListModelEvaluations request to obtain that page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f0714540-d245-4a5b-920e-a1623281010a",
    "name" : "Creates a dataset.",
    "request" : {
      "urlPath" : "/v1beta1/adrdszrf4ej60tujtnwwt5cu74dcvevlkfb4ovt76zfpzyzefnmhk97s2iqgeduw0r39jhe0vsjsu50qx8gzs0flti2m6crm1xydknjieonuopqsjo8d7mhhufc/datasets",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Roderick Spinka\",\n  \"exampleCount\" : 1288827120,\n  \"textExtractionDatasetMetadata\" : { },\n  \"description\" : \"Laboriosam ullam distinctio cumque hic. Ipsum laborum consequatur. Dolore aliquam laudantium sit voluptas et maxime perspiciatis.\",\n  \"imageClassificationDatasetMetadata\" : {\n    \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n  },\n  \"videoClassificationDatasetMetadata\" : { },\n  \"tablesDatasetMetadata\" : {\n    \"primaryTableSpecId\" : \"o2rf\",\n    \"targetColumnCorrelations\" : { },\n    \"weightColumnSpecId\" : \"84cx\",\n    \"mlUseColumnSpecId\" : \"xq4x\",\n    \"statsUpdateTime\" : \"2022-04-04T13:28:33.130143Z\",\n    \"targetColumnSpecId\" : \"g1tp\"\n  },\n  \"videoObjectTrackingDatasetMetadata\" : { },\n  \"textClassificationDatasetMetadata\" : {\n    \"classificationType\" : \"MULTICLASS\"\n  },\n  \"createTime\" : \"2022-03-18T11:29:33.130254Z\",\n  \"name\" : \"Abe Witting\",\n  \"translationDatasetMetadata\" : {\n    \"sourceLanguageCode\" : \"ggglm427rtp21o7m502mok6s0wr37hr47rir59cwn8y0ig25dhxfanwy7pftlsth46yraf3wj44rpbspu3do\",\n    \"targetLanguageCode\" : \"b30qw49euz9hf4o5k5ehw0bvx6y36l662em08glqqoyz7mv67kil92ei5fmrxwvvui9kwq486t6qhes9toynh884797hc6adrupg9wk3cpls5g5bx489457liogt2t10rkw2307k4daibss3jdrda1eujqaz44mvk93j21n6cdi8m6rhrftlj89ukx92\"\n  },\n  \"etag\" : \"nisi\",\n  \"textSentimentDatasetMetadata\" : {\n    \"sentimentMax\" : 676835835\n  },\n  \"imageObjectDetectionDatasetMetadata\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0714540-d245-4a5b-920e-a1623281010a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.130486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.create",
          "schema" : {
            "description" : "A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Timestamp when this dataset was created.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "description" : {
                "description" : "User-provided description of the dataset. The description can be up to 25000 characters long.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Required. The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
                "type" : "string"
              },
              "exampleCount" : {
                "description" : "Output only. The number of examples in the dataset.",
                "format" : "int32",
                "type" : "integer"
              },
              "imageClassificationDatasetMetadata" : {
                "$ref" : "#/components/schemas/ImageClassificationDatasetMetadata"
              },
              "imageObjectDetectionDatasetMetadata" : {
                "$ref" : "#/components/schemas/ImageObjectDetectionDatasetMetadata"
              },
              "name" : {
                "description" : "Output only. The resource name of the dataset. Form: `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`",
                "type" : "string"
              },
              "tablesDatasetMetadata" : {
                "$ref" : "#/components/schemas/TablesDatasetMetadata"
              },
              "textClassificationDatasetMetadata" : {
                "$ref" : "#/components/schemas/TextClassificationDatasetMetadata"
              },
              "textExtractionDatasetMetadata" : {
                "$ref" : "#/components/schemas/TextExtractionDatasetMetadata"
              },
              "textSentimentDatasetMetadata" : {
                "$ref" : "#/components/schemas/TextSentimentDatasetMetadata"
              },
              "translationDatasetMetadata" : {
                "$ref" : "#/components/schemas/TranslationDatasetMetadata"
              },
              "videoClassificationDatasetMetadata" : {
                "$ref" : "#/components/schemas/VideoClassificationDatasetMetadata"
              },
              "videoObjectTrackingDatasetMetadata" : {
                "$ref" : "#/components/schemas/VideoObjectTrackingDatasetMetadata"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b6b93917-612f-4948-9cb8-6aa5fbfcaf4b",
    "name" : "Lists datasets in a project.",
    "request" : {
      "urlPath" : "/v1beta1/dxjuujiq976w593d1573oimx5vs5xl9d1d6vtomg3h0hu2v23je6t7n3h16ax1jo29cmdvpnjozod9o7bul5hh2rkiis01cmms92is9tnni5poiud2mvnuity/datasets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"h0n2p3k7vij1qajx000o2kcsh72x54f8zvg7mm4nbb3n3qhuvck822tie9d1wulicutgundhmrjqj33z6ri0jxn60jf5y\",\n  \"datasets\" : [ {\n    \"displayName\" : \"Fabiola Medhurst\",\n    \"exampleCount\" : 343053028,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Velit similique eius aut ut iusto ducimus. Iusto minima accusantium perferendis voluptate non doloremque omnis. Molestiae veritatis tempora.\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"6w1q\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"2b20\",\n      \"mlUseColumnSpecId\" : \"1wkg\",\n      \"statsUpdateTime\" : \"2022-06-13T11:18:33.125659Z\",\n      \"targetColumnSpecId\" : \"xl4e\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"createTime\" : \"2022-10-18T12:57:33.125782Z\",\n    \"name\" : \"Jayson Funk\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"eutv1uidh5mqh9ff3dj9l304kfugldxshm49hlwfj9x0x7rd4217onwfz86pvx24i11293v01gs16utst0egihnjk30n50e2lv462lvohcq1eelm3zkyfk4klwwnfdv12ku7kzjb93k9iev457n56ll\",\n      \"targetLanguageCode\" : \"2jasvn5x7oxmh41xu\"\n    },\n    \"etag\" : \"quaerat\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 790347991\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Carmelina Hilll\",\n    \"exampleCount\" : 1846717261,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"In quasi praesentium ut eligendi magni. Omnis inventore voluptate laudantium. Nihil sit dolore aut tempore reprehenderit amet unde.\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"a50m\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"oz05\",\n      \"mlUseColumnSpecId\" : \"7f7l\",\n      \"statsUpdateTime\" : \"2022-05-15T10:23:33.126235Z\",\n      \"targetColumnSpecId\" : \"1tae\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTILABEL\"\n    },\n    \"createTime\" : \"2023-01-24T11:15:33.12635Z\",\n    \"name\" : \"Ms. Tyron Oberbrunner\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"97042zs41buyppvpegvn2wv6tbpn37b6qea6ut77gppi282gdkdjym0n3\",\n      \"targetLanguageCode\" : \"nxdiivp5gw6vrmxn1owow0a9m9djqc2d835n3\"\n    },\n    \"etag\" : \"sint\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 746023394\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Murray Ullrich DVM\",\n    \"exampleCount\" : 461677007,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Dolore rerum eos officia in deleniti odio id. Dolores enim sint temporibus. Dignissimos architecto facilis et dolorem neque omnis necessitatibus. Laborum voluptas dolorum et molestiae eum excepturi. S\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"h9u9\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"8ea8\",\n      \"mlUseColumnSpecId\" : \"1opj\",\n      \"statsUpdateTime\" : \"2022-06-06T10:58:33.126789Z\",\n      \"targetColumnSpecId\" : \"7z66\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"createTime\" : \"2022-06-21T12:56:33.126903Z\",\n    \"name\" : \"Zita Johnson\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"t70yha6f0cs6tgjzfzj61bnpm9rz5jj47cl6yx8k2mcdf2h0yhbs1o5j2mzocded4cerr9bpdzlcrmazyf21znakwoelt3laowoubtvrb7nir7hq7ggjnlego20oplxy8bmzoxzdf1fig5xkq54s1kstf\",\n      \"targetLanguageCode\" : \"fm76efaevw97cx6imu5o4mrmoeywk0fhtsl5m9josdk7n2xus1bl5sn5fwgejm1q500xpdzxztdayutuafw6c3ho2jahkatxtudbw7zr845yyqi8adphgq8quvlt87g83p2q68rzvqgd3lkpu39gi2692kcs2pezy\"\n    },\n    \"etag\" : \"ipsa\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 885181244\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Lacie Littel\",\n    \"exampleCount\" : 461907101,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Enim ex tenetur quo necessitatibus. Quis vel vitae. Labore velit rem quisquam. Voluptatem vel repudiandae omnis totam architecto. Minima odio enim.\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"401l\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"o0np\",\n      \"mlUseColumnSpecId\" : \"wwej\",\n      \"statsUpdateTime\" : \"2023-03-02T12:41:33.127325Z\",\n      \"targetColumnSpecId\" : \"lv59\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"createTime\" : \"2022-10-26T13:50:33.127433Z\",\n    \"name\" : \"Shiela Rogahn\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"vzbhi1pqkl44w8n6ulic5hnrtmginli2klx2jkqszse7qn4d3jyar90grzvj5hu02xc2\",\n      \"targetLanguageCode\" : \"7vtlf4alur3gog69kpcwhh4bg8v85s7lk6eyonlag3q5ujsv1bq2jjrj57pezyrf3kh1o90qt2getf0t7u8wfu4smo\"\n    },\n    \"etag\" : \"molestias\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 991596820\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Adrianna Schuppe\",\n    \"exampleCount\" : 100627950,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Consequatur quisquam quisquam maxime voluptate tempore nam rem. Nostrum tenetur rerum. Natus nihil doloribus tempore. Ex consequatur laudantium. Quas voluptatem nemo unde.\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"iefk\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"549a\",\n      \"mlUseColumnSpecId\" : \"ja7k\",\n      \"statsUpdateTime\" : \"2022-08-26T10:26:33.127862Z\",\n      \"targetColumnSpecId\" : \"0z4m\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"createTime\" : \"2022-06-15T12:57:33.12797Z\",\n    \"name\" : \"Anthony Rath\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"tfza297bo807tphyh75k8uv2h1k13gg0a5l909yden1prp8mbzmlcwp46vvh6jv5ug65fy8tbu99f4lciq8t0yuy9qzx8zrmg52msiah9yqfthgp9d70eo7ryql5fjunqbxwpomje672xy1s\",\n      \"targetLanguageCode\" : \"yiuyqvjot27ahta43eigbm3hohu5oi0q18y0j1r2yra7t0tw55zg48avdtq7scf4bclv1w18wvkaaac147he6\"\n    },\n    \"etag\" : \"totam\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 287747549\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Nicolasa Feil\",\n    \"exampleCount\" : 1315286716,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Quisquam velit et corporis laudantium debitis et et. Dolores nobis ab qui in ipsa. Perspiciatis facilis deleniti rerum voluptatem.\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"8kw1\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"r05e\",\n      \"mlUseColumnSpecId\" : \"q6gy\",\n      \"statsUpdateTime\" : \"2022-11-19T11:38:33.128395Z\",\n      \"targetColumnSpecId\" : \"z334\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"createTime\" : \"2022-10-11T11:43:33.128502Z\",\n    \"name\" : \"Brittanie Wolff\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"nzauvi0s2jk4lztr4o2dxs29bts07vxv5veuw04e136i2n0fqbqd901yi0kphxcrjy8w9jjtp9ovtns8yj4108mwo8mj2raei52vbt3162anhhl6gpf1q1xx04minnzxwm7ktlpowsty73nu3kwwippokx01zr2yaw8z4vkzrq0jzj5\",\n      \"targetLanguageCode\" : \"qxj56lmov0q8coj4xt90fkw5st8rmhsviyp29h4kf66e8i8uc4rx3qgzay2yd22lq3w8njs1cuvjkv5n2p7o3heznbjwygm6uaz13rczext0zv51lpu9471r4kb6sakeelrn6c3dm15b5lhx7tghqsspnto7gdkr7tfebn4cqrej0em7v7z705diq93jqcqz3vz80\"\n    },\n    \"etag\" : \"deserunt\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 545477225\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Berenice Conn\",\n    \"exampleCount\" : 1902172229,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Et esse ducimus rerum voluptatem. Dolor et omnis molestias nihil. Dolore commodi delectus exercitationem distinctio qui animi. Vel provident saepe occaecati illum sequi aspernatur. Aliquid quasi verit\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTILABEL\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"9l70\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"v3s9\",\n      \"mlUseColumnSpecId\" : \"qwyr\",\n      \"statsUpdateTime\" : \"2022-10-17T13:36:33.128927Z\",\n      \"targetColumnSpecId\" : \"mr1s\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"createTime\" : \"2023-03-01T12:12:33.129033Z\",\n    \"name\" : \"Charita Ferry\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"mc2xiaps8trl9sx3i41e82d9y5cj21i8um4xvpi6rlttvahd0czs6ydtoe3yzy2belk53one0n6cuwutzr7jbtnxs7wvm1hadtzc06aj4bgwvq3wfpzfh\",\n      \"targetLanguageCode\" : \"6db0eo2s8s6o4l68az9jgs4\"\n    },\n    \"etag\" : \"perferendis\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 980573468\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Lorie O'Keefe II\",\n    \"exampleCount\" : 100864887,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Quae asperiores voluptas quasi dolorem nisi qui sit. Corrupti itaque quia velit sed facere. Aspernatur expedita debitis minima sit reprehenderit est possimus. Quas non vel sapiente. Animi in ea placea\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTILABEL\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"95v9\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"2nyf\",\n      \"mlUseColumnSpecId\" : \"0051\",\n      \"statsUpdateTime\" : \"2023-02-07T11:31:33.129474Z\",\n      \"targetColumnSpecId\" : \"75rl\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"createTime\" : \"2022-04-18T11:45:33.129581Z\",\n    \"name\" : \"Annita Hoppe\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"zltahfrybtrydkrgvsh05a9zjvw4y9fzb1bexjym91gmzjpi3genrqudsga7wtxgcps9e0qmivgmhww2vabo85xx641pxk683eik\",\n      \"targetLanguageCode\" : \"9yq5ycvosqj01g6qdfqoqdf7rr2sqsfj1tmwu8bjo01zqdq4swjnxyemu5119gtz6dofdh18rslvyacoa5rbwi9auns9vw85ijj2u1pjla4wtgpgg9il4fvef3v3p6wwsmvcmgb19f21cj93bpwhcv1etuf8tjk8ovlm8c6w9q9v\"\n    },\n    \"etag\" : \"dolorem\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 152806845\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6b93917-612f-4948-9cb8-6aa5fbfcaf4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.129818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListDatasets.",
            "properties" : {
              "datasets" : {
                "description" : "The datasets read.",
                "items" : {
                  "$ref" : "#/components/schemas/Dataset"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to ListDatasetsRequest.page_token to obtain that page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9033d8fa-175a-4edd-a86a-85bd7767b069",
    "name" : "Lists column specs in a table spec.",
    "request" : {
      "urlPath" : "/v1beta1/vhglhgbrfm14rhprfo9goorosar8u3gry4jusdqini76fe96wgknnj69yt9bbwtmi2qxnv3mkpqat0wqrslvfcdg6pqaqcm1095iitdx9viabftca3ge5oflktzncjfbmli1orghqnkwy3rgf2uqgxwp1y/columnSpecs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"columnSpecs\" : [ {\n    \"topCorrelatedColumns\" : [ {\n      \"correlationStats\" : {\n        \"cramersV\" : 7.222560870167881E307\n      },\n      \"columnSpecId\" : \"13g4\"\n    }, {\n      \"correlationStats\" : {\n        \"cramersV\" : 8.056826086125013E306\n      },\n      \"columnSpecId\" : \"o735\"\n    }, {\n      \"correlationStats\" : {\n        \"cramersV\" : 8.863594587550494E307\n      },\n      \"columnSpecId\" : \"e3z6\"\n    }, {\n      \"correlationStats\" : {\n        \"cramersV\" : 1.0416812970945523E308\n      },\n      \"columnSpecId\" : \"23pz\"\n    } ],\n    \"displayName\" : \"Miss Devin Erdman\",\n    \"dataType\" : {\n      \"listElementType\" : {\n        \"listElementType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : false,\n          \"structType\" : { },\n          \"timeFormat\" : \"2022-10-13T10:48:33.12322Z\",\n          \"typeCode\" : \"STRING\"\n        },\n        \"nullable\" : true,\n        \"structType\" : {\n          \"fields\" : { }\n        },\n        \"timeFormat\" : \"2022-07-07T11:24:33.123274Z\",\n        \"typeCode\" : \"ARRAY\"\n      },\n      \"nullable\" : true,\n      \"structType\" : {\n        \"fields\" : { }\n      },\n      \"timeFormat\" : \"2022-04-13T13:46:33.123319Z\",\n      \"typeCode\" : \"CATEGORY\"\n    },\n    \"name\" : \"Spencer Orn\",\n    \"etag\" : \"quis\",\n    \"dataStats\" : {\n      \"float64Stats\" : {\n        \"histogramBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"quantiles\" : [ 2.1057318432175475E307 ],\n        \"mean\" : 5.108912189911589E306,\n        \"standardDeviation\" : 1.689882872128547E308\n      },\n      \"structStats\" : {\n        \"fieldStats\" : { }\n      },\n      \"timestampStats\" : {\n        \"granularStats\" : { }\n      },\n      \"arrayStats\" : {\n        \"memberStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"1vdl2m2hnoukkx7o2dz3xx0khyikv0bhwp0sev4taftwpwz7a1ke2a6xcga4czi1vcicgk67bska35lptzjtjuftz10tbyhybzyiujibciyj83eia06rycfyhhczkdzszjx1e6b1r14\",\n          \"nullValueCount\" : \"1oufm3ai9g4o14nwy3fxnr0lj8iacl\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"bek5vd5mnm3r9hsn796js1rb6ma4ejo7ro13o5bayr6mglxvv08p4hzfwhkky3ub9faby320wi9s3c9qejp8vhzxqdldpxxmvbjtbaous\"\n        }\n      },\n      \"categoryStats\" : {\n        \"topCategoryStats\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"distinctValueCount\" : \"zbvp5qe4xto0p6mseers0klhb0toh91tn1pyh0gua99kbsa7sz8n18tv0wculu7iq1u0tg3hvsi1w2ttpficill8ub08gowasmyy3fg50yn4naem87lx6i45mn2a4k6n81t9izab8ikthhms7a14pq\",\n      \"nullValueCount\" : \"xvk4werrfi0xlwtj1533urn3xareimoe0q18xus5dpd9vfpy7tk6s3m6fcw9lsb58dbtomtyx80zw0juimslpykv6peopmhuda2rctp4wfdov87eg8f7eppuafjbm\",\n      \"stringStats\" : {\n        \"topUnigramStats\" : [ { }, { }, { } ]\n      },\n      \"validValueCount\" : \"w1ktomf5tr7i33in28b0emgqsjbprtbopo83sgd5nuvinjj0hin5ardvqyh00a63fql0753lfi9xch19yhezmicyk7j1c9kcpkwsd7o0se08czv\"\n    }\n  }, {\n    \"topCorrelatedColumns\" : [ {\n      \"correlationStats\" : {\n        \"cramersV\" : 1.3736644556817596E308\n      },\n      \"columnSpecId\" : \"4mh6\"\n    }, {\n      \"correlationStats\" : {\n        \"cramersV\" : 1.5066093878802307E308\n      },\n      \"columnSpecId\" : \"sqv7\"\n    } ],\n    \"displayName\" : \"Mr. Kristofer Pollich\",\n    \"dataType\" : {\n      \"listElementType\" : {\n        \"listElementType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : true,\n          \"structType\" : { },\n          \"timeFormat\" : \"2022-12-14T13:45:33.12389Z\",\n          \"typeCode\" : \"TIMESTAMP\"\n        },\n        \"nullable\" : true,\n        \"structType\" : {\n          \"fields\" : { }\n        },\n        \"timeFormat\" : \"2022-09-23T12:13:33.123939Z\",\n        \"typeCode\" : \"FLOAT64\"\n      },\n      \"nullable\" : false,\n      \"structType\" : {\n        \"fields\" : { }\n      },\n      \"timeFormat\" : \"2022-12-28T11:08:33.123984Z\",\n      \"typeCode\" : \"TYPE_CODE_UNSPECIFIED\"\n    },\n    \"name\" : \"Meghann Schuster\",\n    \"etag\" : \"ullam\",\n    \"dataStats\" : {\n      \"float64Stats\" : {\n        \"histogramBuckets\" : [ { }, { }, { }, { }, { }, { } ],\n        \"quantiles\" : [ 9.076590821205864E307, 1.7396177454964418E308, 6.543379612078088E307, 9.669419591214103E307, 1.0913557840102559E308 ],\n        \"mean\" : 1.6200791124318108E308,\n        \"standardDeviation\" : 8.372136526588216E307\n      },\n      \"structStats\" : {\n        \"fieldStats\" : { }\n      },\n      \"timestampStats\" : {\n        \"granularStats\" : { }\n      },\n      \"arrayStats\" : {\n        \"memberStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"3pz21dd3l31f618kepnuref3oohng6fwy5dzxpcn6zpvwixwwg0xba4ii0ed5qxr7sj0uhkiqc8opwxof9nt7cd36b6g63s9gzcc5i3x7qwkok0g34c220eestzbtj8q0j4s1bzs8tltul6a0p1xpnzylqsbc2dh0ygir\",\n          \"nullValueCount\" : \"91lzgdh6e0oz4qpwaymv6v3zzcjsxjg9liqyqycwvv8homkabrlrjp7lt0zze8y0qv8hexa72lkfrxean76qc67ih02qd1a2aaesel2ryx2buudflxmya795xk0cpbokjy8srnajfiy15u33yn06d3w48w61za45\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"spu9as4l2d10dk1mhz1lespyl8hb3eep66q\"\n        }\n      },\n      \"categoryStats\" : {\n        \"topCategoryStats\" : [ { }, { }, { } ]\n      },\n      \"distinctValueCount\" : \"25pajrz38la75wp19djl1mjh2aths34p0k98steav30001w4cx8ltkfgogqgo1zxp44z4hcri7u6ior21nbjx2o2mfnfif\",\n      \"nullValueCount\" : \"b1euwr1tz0ho6zbpxcsk96ctwxpbxrjzyujwvtjv589peekop90jqhkdeur52w4hpdcl7yv0w4uo6mfjkbme755bfdgf873xw7pf26d6fbguoxrhrp28piq07hwe40wuirp3n1q7w5jzp0emdgwj28wqdnuu8na0caa9qf6\",\n      \"stringStats\" : {\n        \"topUnigramStats\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"validValueCount\" : \"0pyg6q43qdecckovfes6ca54p7codp5llpgcgpo6k36ccgblz9fsm6tc34xxyha305hd8gv0anprwt61r7wuts0h\"\n    }\n  }, {\n    \"topCorrelatedColumns\" : [ {\n      \"correlationStats\" : {\n        \"cramersV\" : 7.577215529942669E306\n      },\n      \"columnSpecId\" : \"ic28\"\n    }, {\n      \"correlationStats\" : {\n        \"cramersV\" : 2.0202616106846393E306\n      },\n      \"columnSpecId\" : \"60dw\"\n    }, {\n      \"correlationStats\" : {\n        \"cramersV\" : 5.77608126316022E307\n      },\n      \"columnSpecId\" : \"kw97\"\n    }, {\n      \"correlationStats\" : {\n        \"cramersV\" : 1.1786291289489943E308\n      },\n      \"columnSpecId\" : \"5z82\"\n    }, {\n      \"correlationStats\" : {\n        \"cramersV\" : 3.485872276792483E307\n      },\n      \"columnSpecId\" : \"dot8\"\n    } ],\n    \"displayName\" : \"Mr. Dale Gibson\",\n    \"dataType\" : {\n      \"listElementType\" : {\n        \"listElementType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : true,\n          \"structType\" : { },\n          \"timeFormat\" : \"2022-10-13T14:15:33.124729Z\",\n          \"typeCode\" : \"TYPE_CODE_UNSPECIFIED\"\n        },\n        \"nullable\" : false,\n        \"structType\" : {\n          \"fields\" : { }\n        },\n        \"timeFormat\" : \"2022-12-10T13:11:33.124777Z\",\n        \"typeCode\" : \"CATEGORY\"\n      },\n      \"nullable\" : false,\n      \"structType\" : {\n        \"fields\" : { }\n      },\n      \"timeFormat\" : \"2022-10-09T13:47:33.124822Z\",\n      \"typeCode\" : \"ARRAY\"\n    },\n    \"name\" : \"Charmaine Kihn\",\n    \"etag\" : \"accusantium\",\n    \"dataStats\" : {\n      \"float64Stats\" : {\n        \"histogramBuckets\" : [ { }, { } ],\n        \"quantiles\" : [ 6.940579755064349E307, 1.2927577879082103E308, 1.5759156820652924E308, 5.798531861846603E307, 1.0456191892213029E308, 7.242747174439502E306 ],\n        \"mean\" : 1.017070147362471E307,\n        \"standardDeviation\" : 1.3657124481614038E308\n      },\n      \"structStats\" : {\n        \"fieldStats\" : { }\n      },\n      \"timestampStats\" : {\n        \"granularStats\" : { }\n      },\n      \"arrayStats\" : {\n        \"memberStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"eihlbsqdo29cch6qhy7m50h47u92um7dblqpo681tq7i425csyhnvr331zbdxsp6fltqfibzmp62uvyohl32b9p9phnjv77yhksgn973em80rmfeyf2rfw5iq3wteku3uftbz5hbxq\",\n          \"nullValueCount\" : \"42ics5uwro0t5n11qn4t2vdenzhqvip2u3739omhsklgff76j10zd08dk2xjs72gzaekrkk4zrlcbuly3rzdrcfk5na1ossb5lbweqosvuj3cbd1c26w83tm5djywdbm0a5fa0ehsho6oigugawkomcg05wc8vsm6i8hesfwe040pva9jvu9qkz1arf5o\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"o738kkwnbbrgwo2p2gbzlzhwzorczfkqhfoinrbawz8lj4kin81xid5jx5odnjzvmdnh31m2kzt39x30xeyhncsyxd11gi8s2zokyjdba\"\n        }\n      },\n      \"categoryStats\" : {\n        \"topCategoryStats\" : [ { }, { }, { } ]\n      },\n      \"distinctValueCount\" : \"5qwkvvde3nbfrzzghzq8exrivg8xk9p0wjd1hfb4gbv9awjaondn5hmxij3u1h\",\n      \"nullValueCount\" : \"jfspf47vh7oqil6pedbm6r2qki\",\n      \"stringStats\" : {\n        \"topUnigramStats\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"validValueCount\" : \"85ye22o7akfulk0ixhxgsf5h24of0ar84k40w5bqajnzlj4wndb2249raiqmo7gkqzczndsw6hsqj24yc7u2shmpunxdi1w\"\n    }\n  } ],\n  \"nextPageToken\" : \"7yo0zzir9mfwok3gj716q4hrd2y2glcea3eiqyx17fh3wn2c21romsnfbrksta\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9033d8fa-175a-4edd-a86a-85bd7767b069",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.125252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.tableSpecs.columnSpecs.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListColumnSpecs.",
            "properties" : {
              "columnSpecs" : {
                "description" : "The column specs read.",
                "items" : {
                  "$ref" : "#/components/schemas/ColumnSpec"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to ListColumnSpecsRequest.page_token to obtain that page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "efcd0e93-f2b1-43ea-bb84-21d523a4e1f3",
    "name" : "Waits until the specified long-running operation is done or reaches at most a sp...",
    "request" : {
      "urlPath" : "/v1beta1/Carylon+Dooley:wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Bennie Wisozk\",\n  \"error\" : {\n    \"code\" : 536710656,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Quo voluptas nobis aut. Consequatur id sint perspiciatis sit ad. Ratione aut fugit. Labore ullam suscipit adipisci. Nulla quisquam dolor.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efcd0e93-f2b1-43ea-bb84-21d523a4e1f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.122768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.wait",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d133734e-e759-419b-b15c-527b08a9970b",
    "name" : "Undeploys a model. If the model is not deployed this method has no effect. Only ...",
    "request" : {
      "urlPath" : "/v1beta1/Yelena+Koss:undeploy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Verline Feest\",\n  \"error\" : {\n    \"code\" : 250144575,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et tempora labore officiis et autem rerum eos. Inventore ducimus minima quasi nihil. Soluta dolores nam animi doloremque quisquam laudantium. Deserunt culpa vel est ad ut. Neque earum magnam illum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d133734e-e759-419b-b15c-527b08a9970b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.122572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.undeploy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e6f2e83b-59f7-4329-81cc-6e7e55d3e469",
    "name" : "Perform an online prediction. The prediction result will be directly returned in...",
    "request" : {
      "urlPath" : "/v1beta1/Candyce+Schinner:predict",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"payload\" : [ {\n    \"annotationSpecId\" : \"gbq7\",\n    \"textExtraction\" : {\n      \"score\" : 1.0106488697553294E38,\n      \"textSegment\" : {\n        \"endOffset\" : \"6y9xghdhe6i7xu45h5ngmukhzo3wc40dxocrrf02942zzt3f4n1pf05bmekbib0hezu9e5wcra5361kqboj06g4klr2avq3kojtmp14e8j7o3k33yn0l28yocjpi4d1jg3fc4isgopguks28klmnpzy11f1e3onpazmp4n9ayoc8bvfvyeg0m\",\n        \"startOffset\" : \"vrqe0z0uk6w3gy52qkbv32kopnr74qav8fcedghe0gixm2ag0p8j5hevwmiy5t7df68cmllli2jzsonm0frg92i867pcxmqwq98lumtw1k6svz5szfdvmc6i3boqknfa53xxscwi2vmyqzvvw9qhgdd1gqrz4n7y69zwihvslakjl82p4sa9vkoah7d5jix5ju25k\",\n        \"content\" : \"Ut natus dignissimos quis qui porro fugit omnis. Quia repudiandae officiis modi pariatur. Id in nemo consequatur sit expedita aspernatur et.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 4.557810277817576E37,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 2.1990766710053547E38,\n        \"columnDisplayName\" : \"Leslie Moen II\",\n        \"columnSpecName\" : \"Pok Grant\"\n      }, {\n        \"featureImportance\" : 5.210808056691732E37,\n        \"columnDisplayName\" : \"Clyde Reinger\",\n        \"columnSpecName\" : \"Lonnie Steuber\"\n      }, {\n        \"featureImportance\" : 5.650615471741591E37,\n        \"columnDisplayName\" : \"Nicky Schaefer Sr.\",\n        \"columnSpecName\" : \"Dr. Elvin Schuppe\"\n      }, {\n        \"featureImportance\" : 1.5737489222337225E38,\n        \"columnDisplayName\" : \"Sherrell Hane\",\n        \"columnSpecName\" : \"Dr. David Reichert\"\n      }, {\n        \"featureImportance\" : 7.075090592182829E36,\n        \"columnDisplayName\" : \"Clair Weissnat\",\n        \"columnSpecName\" : \"Orlando Kuhic DDS\"\n      }, {\n        \"featureImportance\" : 2.3757403098067198E38,\n        \"columnDisplayName\" : \"Mrs. Deon Marvin\",\n        \"columnSpecName\" : \"Tracey Crooks\"\n      } ],\n      \"baselineScore\" : 1.598996447669481E38,\n      \"predictionInterval\" : {\n        \"start\" : 1.4447488826488582E308,\n        \"end\" : 1.0585803286458718E308\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 608428928\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 3.4598297019634403E37\n    },\n    \"displayName\" : \"Chasity Bayer\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/791727\",\n        \"mimeType\" : \"2db6j0lce3butec3bwzske4fjo9vzxelhtavmkxhhjocdrxa4mkdvkxi6zf6cw6f2v78tza7eqktp26t945dnktoina1o9qeovpf8kdr94vzd2kehf949syau414z0g6v80n2rd0ihjxudn94\",\n        \"content\" : \"Qui odio repellat velit omnis saepe. Tempora et officia quaerat. Numquam rem sit voluptatem nesciunt labore minima. At ut officiis qui sed autem dolor. Et rerum consequuntur laboriosam facere enim rec\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { } ]\n      },\n      \"score\" : 3.3977792070366113E37,\n      \"instanceId\" : \"4e53\",\n      \"timeOffset\" : \"2022-09-06T12:48:33.114862Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-05-21T11:08:33.114909Z\",\n        \"startTimeOffset\" : \"2022-05-08T12:50:33.114944Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 1.3405360097642222E38\n      },\n      \"type\" : \"cxy0e2r517uwkur132prugzp5phxwdf2ilfzxqxm49wjxbhugqb8edjns1lcqec3ref2j1k7r9jcqgkst0z47753k\"\n    },\n    \"classification\" : {\n      \"score\" : 2.46178146190218E37\n    }\n  }, {\n    \"annotationSpecId\" : \"j87w\",\n    \"textExtraction\" : {\n      \"score\" : 3.3103371765473176E38,\n      \"textSegment\" : {\n        \"endOffset\" : \"21wyo1a6cki8qek13e0y0xqg38yfj98n2h20y5ktjrh3jjo08z0a09gyws0b3h2ghorj8z5zbj4123ovb2e62xpe95hw2rr7dbvomah5d8oy22m4weqxypb4celxs5i25tnna3y07\",\n        \"startOffset\" : \"wj39oj5j25pyy25ypq3ktj3v62qyd8xqt2rsbvzssripgxku1\",\n        \"content\" : \"Illum sunt possimus quod blanditiis veritatis enim. Maiores nam temporibus tempore libero velit. Reiciendis sit voluptatem non qui et labore distinctio. Ut aliquam sed est.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 3.68731374300296E36,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 1.3809941324073762E38,\n        \"columnDisplayName\" : \"Mrs. Dong Bednar\",\n        \"columnSpecName\" : \"Dr. Denese Collier\"\n      }, {\n        \"featureImportance\" : 1.043564092464236E38,\n        \"columnDisplayName\" : \"Mariel Parisian DDS\",\n        \"columnSpecName\" : \"Dr. Barrie Wiegand\"\n      }, {\n        \"featureImportance\" : 1.1563861395574106E37,\n        \"columnDisplayName\" : \"Deandre Grant\",\n        \"columnSpecName\" : \"Eliana Rolfson I\"\n      }, {\n        \"featureImportance\" : 2.2544592666257187E38,\n        \"columnDisplayName\" : \"Ron Rippin\",\n        \"columnSpecName\" : \"Tamesha Borer\"\n      }, {\n        \"featureImportance\" : 6.871365589434756E36,\n        \"columnDisplayName\" : \"Ms. Georgiann Schmidt\",\n        \"columnSpecName\" : \"Blair Schiller\"\n      }, {\n        \"featureImportance\" : 1.0839754888006968E38,\n        \"columnDisplayName\" : \"Sena Bernhard II\",\n        \"columnSpecName\" : \"Mrs. Jerold Treutel\"\n      }, {\n        \"featureImportance\" : 3.1794384943318715E38,\n        \"columnDisplayName\" : \"Adolph Kunde DVM\",\n        \"columnSpecName\" : \"Del Halvorson\"\n      }, {\n        \"featureImportance\" : 1.3734852534173561E38,\n        \"columnDisplayName\" : \"Alphonse Glover\",\n        \"columnSpecName\" : \"Rashad Schoen\"\n      } ],\n      \"baselineScore\" : 1.409890931994453E38,\n      \"predictionInterval\" : {\n        \"start\" : 2.256527867974343E307,\n        \"end\" : 1.7239377760563855E308\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 546024583\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { } ]\n      },\n      \"score\" : 5.714724983298142E37\n    },\n    \"displayName\" : \"Mrs. Deloras Ankunding\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/071560\",\n        \"mimeType\" : \"rexqhd9clfi0ccl7tvyg838xf76sz5a3hqdhwdin46wriceue7ayvm6dxd3d1qhd6zh7f9e8nopaov0ltyqpv7t8yjab9y\",\n        \"content\" : \"Voluptates magni officiis quisquam. Voluptatem accusamus amet assumenda deleniti. Iure qui dignissimos ipsum ad nulla odio. Enim eius eaque et voluptate iusto molestiae.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { } ]\n      },\n      \"score\" : 2.17902842343214E38,\n      \"instanceId\" : \"2t52\",\n      \"timeOffset\" : \"2022-10-25T10:37:33.116233Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-11-17T11:09:33.116274Z\",\n        \"startTimeOffset\" : \"2022-05-18T10:57:33.116306Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 8.148953111832976E37\n      },\n      \"type\" : \"47mtsfnb4nwpo7w0otj2wohnp334kqx\"\n    },\n    \"classification\" : {\n      \"score\" : 1.1811048183716454E38\n    }\n  }, {\n    \"annotationSpecId\" : \"m1cq\",\n    \"textExtraction\" : {\n      \"score\" : 1.823931055376861E38,\n      \"textSegment\" : {\n        \"endOffset\" : \"h66yqlvniqqjzedca8swdquxqld3mzy018\",\n        \"startOffset\" : \"xga89ms2ug7oi9knznahvdnk5d43gswq9f15nn322i2czpbzsycl9vxuvs2xqf9sg\",\n        \"content\" : \"Et consequuntur et repudiandae fugiat. Delectus amet dolorem. Velit saepe sunt temporibus dolorem recusandae est.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 1.6716313647507104E37,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 1.4423394002434792E38,\n        \"columnDisplayName\" : \"Dorsey Kihn\",\n        \"columnSpecName\" : \"Glenn Zieme\"\n      }, {\n        \"featureImportance\" : 1.2322359350872155E38,\n        \"columnDisplayName\" : \"Mr. Hollis Hudson\",\n        \"columnSpecName\" : \"Keva Hintz\"\n      }, {\n        \"featureImportance\" : 4.49160383178495E37,\n        \"columnDisplayName\" : \"Karyn Koelpin\",\n        \"columnSpecName\" : \"Shela Strosin\"\n      }, {\n        \"featureImportance\" : 2.1420682016108236E38,\n        \"columnDisplayName\" : \"Vince O'Kon\",\n        \"columnSpecName\" : \"Vern Pfeffer II\"\n      }, {\n        \"featureImportance\" : 1.4697290346746218E38,\n        \"columnDisplayName\" : \"Ezequiel Vandervort\",\n        \"columnSpecName\" : \"Justa Anderson\"\n      }, {\n        \"featureImportance\" : 1.2690915507230577E38,\n        \"columnDisplayName\" : \"Mr. Kathryn Hartmann\",\n        \"columnSpecName\" : \"Dawn Lubowitz\"\n      } ],\n      \"baselineScore\" : 1.1423522698240264E38,\n      \"predictionInterval\" : {\n        \"start\" : 6.368900649725892E307,\n        \"end\" : 1.4655455459367164E308\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 1207543695\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { } ]\n      },\n      \"score\" : 3.3219798725264176E38\n    },\n    \"displayName\" : \"Mrs. Jamal Hintz\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/518658\",\n        \"mimeType\" : \"5c0oxx96fm2c21dudjl2tdseekqane2xnvtrz1fsqvh37llcmb7h2xwd7m95dp97d4pekxy0xk4ofmtzhf0q3z662jl8ncot2hl9ei49d55b1obt51dtj6un4iprrmebu5r9mdjihzh6nyy0u9m7gr\",\n        \"content\" : \"Eum commodi totam enim sunt. Nam quae consequatur eum nostrum. Provident iusto rem doloribus accusamus maiores quasi. Ut adipisci voluptatum quo.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 6.385253231132002E37,\n      \"instanceId\" : \"jq11\",\n      \"timeOffset\" : \"2022-05-18T14:00:33.117382Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-08-12T10:42:33.117424Z\",\n        \"startTimeOffset\" : \"2023-01-01T11:34:33.117455Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 1.2385301290259255E38\n      },\n      \"type\" : \"uh0kcd5fgkn6dmagy\"\n    },\n    \"classification\" : {\n      \"score\" : 2.7569240811941707E37\n    }\n  }, {\n    \"annotationSpecId\" : \"s3rj\",\n    \"textExtraction\" : {\n      \"score\" : 2.98449523303812E38,\n      \"textSegment\" : {\n        \"endOffset\" : \"vdzdquq9r867x601ijfq0xqbbyczj8unpg4jr0y0mp4\",\n        \"startOffset\" : \"bapskj7di575ccqoy0nwv4jvdfdlwsvdjfwakvjjj950fcrlt7vupbgtj9x0z3oiyct127z6se948spcxv9q40omj5eq0agwkdn82njmtnvucx41ql89az5mqzbkluflao3njervvwhlkr0o54m7o0lqgciyvau3bb84fx3yd1xu6p69200fuebw8j4nmtvd4xz4kc\",\n        \"content\" : \"Sed laborum quis. Veritatis voluptatibus tempore aut distinctio neque eligendi delectus. Culpa ab eveniet aut quas. Facere officia sapiente dolorum natus. Ut enim aliquam voluptatem enim quisquam itaq\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 4.681681271567056E37,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 2.5179383231835265E38,\n        \"columnDisplayName\" : \"Almeda Kub\",\n        \"columnSpecName\" : \"Ji Goodwin\"\n      }, {\n        \"featureImportance\" : 1.8539076053843622E38,\n        \"columnDisplayName\" : \"Ali Lockman\",\n        \"columnSpecName\" : \"Vada Braun\"\n      }, {\n        \"featureImportance\" : 3.156745959888266E38,\n        \"columnDisplayName\" : \"Robert Heidenreich\",\n        \"columnSpecName\" : \"Sharmaine Jenkins DDS\"\n      }, {\n        \"featureImportance\" : 2.9406635019046604E38,\n        \"columnDisplayName\" : \"Leonardo Haley\",\n        \"columnSpecName\" : \"Dr. Tosha Dickens\"\n      }, {\n        \"featureImportance\" : 2.1877405489066318E38,\n        \"columnDisplayName\" : \"Kareem Wyman\",\n        \"columnSpecName\" : \"Rosamond Schmeler\"\n      } ],\n      \"baselineScore\" : 1.4422557401029139E38,\n      \"predictionInterval\" : {\n        \"start\" : 1.5797899476246198E308,\n        \"end\" : 1.1715255096130027E308\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 402036405\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { } ]\n      },\n      \"score\" : 3.738110627278549E37\n    },\n    \"displayName\" : \"Janna Nicolas DVM\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/721546\",\n        \"mimeType\" : \"wwtl8wctrpw1hp0ty9x3ri1y46w77k05p7zqaz6nu2wl5l87gn30aco16njk6bdsxnq5m0bdl06sbk5pnhstcw45icuativp87uuz2zo48vessvmydxjpsqukxxtslp3hk71ll7ima6frv92js0c6vij8xs50hlv2iyaxlrblqrz8psqlmfqei3ga\",\n        \"content\" : \"Ratione ipsam et quasi officiis. Eos ut mollitia. Quo sit optio qui omnis. Rerum et tenetur odio amet.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 2.2798797530063985E38,\n      \"instanceId\" : \"0p80\",\n      \"timeOffset\" : \"2023-02-14T13:58:33.118433Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-04-09T11:55:33.118471Z\",\n        \"startTimeOffset\" : \"2022-04-09T11:46:33.118503Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 2.5964951280220658E38\n      },\n      \"type\" : \"u8lfgeozx5om74ogpyt9qru8hs6cfg77gkch3wq7o00v46ddz1jjjnlp5w6bpf9kwv2t2v3jumo9d7ljq4t85ecnntvyyusvrvag8jqdpfjyilh0vrokk45zski8256s5v452klvwkurlt4u47fmth6k\"\n    },\n    \"classification\" : {\n      \"score\" : 1.9586472308397638E38\n    }\n  }, {\n    \"annotationSpecId\" : \"5gv8\",\n    \"textExtraction\" : {\n      \"score\" : 3.992667332604314E37,\n      \"textSegment\" : {\n        \"endOffset\" : \"3j4l0tm2uh3\",\n        \"startOffset\" : \"g79udb4dsrizv5g0slbpi6ttzxawmgrhayzzglfyh945nhdadcs1ovr5dajz9o308f3ztlp24ep7lvtvhtcicbh8\",\n        \"content\" : \"Cumque eligendi tempore autem quia dicta. Voluptatem voluptatibus enim quam modi est. Eos amet aut et asperiores dolorem pariatur nisi. Asperiores modi numquam ut.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 8.822839306903077E37,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 1.552978777808196E38,\n        \"columnDisplayName\" : \"Ms. Caleb Heller\",\n        \"columnSpecName\" : \"Javier Aufderhar\"\n      }, {\n        \"featureImportance\" : 2.3769717167426192E38,\n        \"columnDisplayName\" : \"Anya Kiehn\",\n        \"columnSpecName\" : \"Miss Carlo Crooks\"\n      } ],\n      \"baselineScore\" : 1.2868007683157134E38,\n      \"predictionInterval\" : {\n        \"start\" : 2.867220348753591E307,\n        \"end\" : 1.292896227839375E308\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 1475001250\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 3.0183540923290052E38\n    },\n    \"displayName\" : \"Arleen Cummerata\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/343713\",\n        \"mimeType\" : \"l5irhs5axmkiebxo9womr4fdhg4pj79g536zxoyq4yh7dh2zv1kxcofsnedcg8ng2xmjxd7t2irlgq51ms6mbf23um8x2pkh3ly20nshwz9bntta23p8v6f58on8rrpbzxiku0qniw91f7vdm4ngctrsf812iyh11s\",\n        \"content\" : \"Neque illo dolores ut animi perspiciatis vitae. Vitae aut necessitatibus nostrum nemo fugiat. Similique rerum reiciendis esse sit aut repellendus consequatur. Dolorum sint non.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { } ]\n      },\n      \"score\" : 6.438524117950334E37,\n      \"instanceId\" : \"65cb\",\n      \"timeOffset\" : \"2023-01-14T10:57:33.1192Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-11-30T12:13:33.119239Z\",\n        \"startTimeOffset\" : \"2022-10-04T11:52:33.11927Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 4.442872990424228E37\n      },\n      \"type\" : \"6hj7pnzq3y7gcfvbfhzx0hun766ibjt1uqj8uujshlkpq88l3x4m8kjfeql31uxoz1a0mariybig8rq0np6eoha1xv6qghmi3qsu4yyupofvd0perl5vhy23ip9m407s4y1vkb8qbk9tpqsmyxtcpg4vn4m4uj267vqqywmbwj\"\n    },\n    \"classification\" : {\n      \"score\" : 7.793794550727311E37\n    }\n  }, {\n    \"annotationSpecId\" : \"1qs1\",\n    \"textExtraction\" : {\n      \"score\" : 1.9949035984753598E37,\n      \"textSegment\" : {\n        \"endOffset\" : \"jw1bwny6f1qf9761qx5f71z18g4wt48x1xmeezy8gs8lcgjeptehgm2o9r1dimz7ipcs3cmtewxbsakuneajt4j0p829lecfxljom5lqqc30nambjh5voo5qe4nay9gag83ftyjdvp3ezy\",\n        \"startOffset\" : \"2xhplqqdwbhehfa3tpfdnbu99i9metlgcvmesnyu35hvgq4wxjhsxa6qrmsf8to231wcuxj6xju1zv0dlh3ezgpnmvig01i3re7zlshb202qobnv7pwn5pkrp1vps61r1tycy1pil9r59priehrkbquwhy9vyz5mdkma2raaq3uucqy\",\n        \"content\" : \"Vel quis quis dolores. Odio praesentium qui. Repellat harum vel laborum quas aut sint vitae. Sed atque sint minus ipsam earum id maxime.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 1.8498483681387694E38,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 3.136326274732264E38,\n        \"columnDisplayName\" : \"Wally DuBuque\",\n        \"columnSpecName\" : \"Fermin Ernser\"\n      }, {\n        \"featureImportance\" : 1.226971434349417E38,\n        \"columnDisplayName\" : \"Lenny Borer\",\n        \"columnSpecName\" : \"Rosemarie Collins\"\n      }, {\n        \"featureImportance\" : 1.3103051326846712E38,\n        \"columnDisplayName\" : \"Arnulfo Schneider\",\n        \"columnSpecName\" : \"Glen O'Kon MD\"\n      }, {\n        \"featureImportance\" : 1.7223392757747283E38,\n        \"columnDisplayName\" : \"Hunter Considine\",\n        \"columnSpecName\" : \"Nu Walsh\"\n      }, {\n        \"featureImportance\" : 1.8452658355416543E38,\n        \"columnDisplayName\" : \"Dorsey Harris\",\n        \"columnSpecName\" : \"Kristopher Hudson\"\n      }, {\n        \"featureImportance\" : 1.9456072405113818E38,\n        \"columnDisplayName\" : \"Marquis Murray\",\n        \"columnSpecName\" : \"Margarito D'Amore\"\n      } ],\n      \"baselineScore\" : 1.3349605767986017E38,\n      \"predictionInterval\" : {\n        \"start\" : 1.7822682926489813E308,\n        \"end\" : 8.730606964016826E307\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 503864550\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 8.554187470509259E36\n    },\n    \"displayName\" : \"Bennett Homenick\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/476132\",\n        \"mimeType\" : \"7wqlmupm189dz30voktxnuwk8qsq\",\n        \"content\" : \"Quia nesciunt eum voluptates. Ea corporis quasi enim explicabo tempora. Aspernatur doloremque expedita eum sit laudantium.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 1.924666316775043E38,\n      \"instanceId\" : \"9388\",\n      \"timeOffset\" : \"2022-03-08T11:43:33.120333Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-05-21T13:41:33.120373Z\",\n        \"startTimeOffset\" : \"2022-06-06T10:31:33.120404Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 2.415142365547519E38\n      },\n      \"type\" : \"3ltmz\"\n    },\n    \"classification\" : {\n      \"score\" : 4.307016161349078E37\n    }\n  }, {\n    \"annotationSpecId\" : \"ly5z\",\n    \"textExtraction\" : {\n      \"score\" : 1.81483166517676E38,\n      \"textSegment\" : {\n        \"endOffset\" : \"9pv4x8le7i0m1ss5m37frspdtntv69td0hvl09iz070l0e2e4oep37p29rppuw6kyzedhvrk8m4varsc2o2rid391gapz6afljrjke\",\n        \"startOffset\" : \"nswn4cj1414ywxdjh0gm0kzbyfpbnqf4607xex52jhz6119p9snpi779c7yvf57vk\",\n        \"content\" : \"Iure quis dolores. Voluptatibus architecto nihil autem aut molestias temporibus voluptatibus. Sed perspiciatis dicta unde.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 1.5943561608838432E38,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 5.711406446830103E37,\n        \"columnDisplayName\" : \"Teressa Reichel IV\",\n        \"columnSpecName\" : \"Hilma Mosciski\"\n      } ],\n      \"baselineScore\" : 2.9875904054069744E38,\n      \"predictionInterval\" : {\n        \"start\" : 2.148739917863984E307,\n        \"end\" : 4.566378857445627E307\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 2044213507\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { } ]\n      },\n      \"score\" : 2.3172181161610415E38\n    },\n    \"displayName\" : \"Dodie Marquardt DVM\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/062290\",\n        \"mimeType\" : \"4ta74ha9t5x803fdm7zxtjq7yxds61wjiyb16omun7ca33djis5e09b5eeu1svi1wk7r8nn620c2tkook9lebyxjik6s6d4org7xo244vwti87xe5tnkchdbp7pbca087e7w9y5hhzn\",\n        \"content\" : \"Corrupti alias sunt. Ullam iure qui non. Deleniti a repellendus et. Doloremque distinctio impedit nam.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { } ]\n      },\n      \"score\" : 8.309246839794817E37,\n      \"instanceId\" : \"6vdx\",\n      \"timeOffset\" : \"2022-07-09T14:05:33.120986Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2023-02-26T10:39:33.121021Z\",\n        \"startTimeOffset\" : \"2023-01-01T10:52:33.121054Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 2.1392242584389755E38\n      },\n      \"type\" : \"65cqglo70y3tr237wkrxi08t4dqw4wcev851evbyj4ad8qnwyxffjgfvoshmdd0faj6fz7akmci6pdg0cddskmbz2ibnv\"\n    },\n    \"classification\" : {\n      \"score\" : 2.2655397105842547E38\n    }\n  } ],\n  \"preprocessedInput\" : {\n    \"image\" : {\n      \"inputConfig\" : {\n        \"bigquerySource\" : {\n          \"inputUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/jeremiaha/128.jpg\"\n        },\n        \"gcsSource\" : {\n          \"inputUris\" : [ \"k3qabf5avithp27a4ksf67qksxfnl012o7efk4rt1ilr1wrilsnmf\", \"5ccl7b49rx47f3mv8ooou3nv1m6mit4mbey2c363jzn87ynfdjq7wcd5v0k6pqs7xfxgkqg7x7dkrhlqa27pjh90ig\", \"z12g8zw6rd6yh2p6lnoep6c80ikrehuti39u11b91bqiiiitxqyrngkm8kwk9rxp1o3arhx7p5fgkk0hkrpro6uaw0bd\", \"uroz8l5buqxzkc4ifcy7bevmm0gjj83zfi0zk1e0wvbmlnvhvqwtqajue7bslowmsr1e6dbpu53r0tz9l6qs0sl7k5h739sbbgsyt3fzlxlsy10or5n79bhx00oq1tytuesganz03ux3ir126fu224uv9q\", \"4zvtes22lysijgcjwc86dx9td3yy8kjh3s5vxwpvuhbjtnr8rhnj3vmol6g6keaxbma07xid8t6y3k3chsrsy0zrzt0uljdts8id8zby0b5ox72uxizgqfaq97musoxv\", \"fumcvhw2nnqnoc3gw0l4m4rswwgztg526e38jm6e72jq8jp1ps0zyqzja93t5rl16jpso2u5w2aihmym0uu9007nvljtkc7x9ogxl4fbdb7gv99zc3n1pbbcr8axvm1zvlwp2oqowd9fnw3c3lbww\", \"4q3sg3m942amxrg5z46r0r01qxv7hvpkcpve4xdh0fqs0j868b7vkwjw2c5xqe3e257t669cqipazdkvceohtb237ndpordeurtzr80ojri9tj2vxg8pn49it3k8n\", \"il5wytfdrqxxdw2kvg3qpt4s0ewd4agvbm1cd596su5tpgp\" ]\n        },\n        \"params\" : { }\n      },\n      \"imageBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/thinkleft/128.jpg\",\n      \"thumbnailUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/waghner/128.jpg\"\n    },\n    \"document\" : {\n      \"layout\" : [ {\n        \"textSegment\" : {\n          \"endOffset\" : \"q78g00s1pzmbp9qxassiseqk1l0nushdi3nmyyugmg\",\n          \"startOffset\" : \"918wd0flhzfdozmvf08\",\n          \"content\" : \"Eum dolore mollitia illo alias ut magnam sint. Temporibus quia laudantium deleniti. Maiores consequuntur libero fugiat perferendis. Consequatur perferendis accusamus distinctio doloribus. Saepe quia i\"\n        },\n        \"pageNumber\" : 517659436,\n        \"textSegmentType\" : \"TABLE_ROW\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { } ]\n        }\n      }, {\n        \"textSegment\" : {\n          \"endOffset\" : \"awx8ji0suz569qdgiwmbj2mninn8btxxfolzfylhfxhntz4lzph6wkp2r0iqxyznharyzu0iqf8r3iq0e23qksxosj2a74ah7vicb01e54horfnygjkaeg8q3oqct5ubl\",\n          \"startOffset\" : \"lnj47tjhscxar7jcfnxfsbzblslfoigsnm9fb0kck2v6981dekyvka9s44d1gvhb3pbywkwkj5uxwuz0kimvuzs4vy00j3c7xwlixfq28dud4aohbbb5javso0bvi74r\",\n          \"content\" : \"Totam autem consequatur nisi repellendus qui. Qui tenetur ex explicabo magni voluptas. Beatae totam tempora. Quam odit ut numquam placeat aspernatur aspernatur sunt.\"\n        },\n        \"pageNumber\" : 1591701350,\n        \"textSegmentType\" : \"PARAGRAPH\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { }, { }, { }, { }, { }, { } ]\n        }\n      }, {\n        \"textSegment\" : {\n          \"endOffset\" : \"widdtgnvz9kjbtk0hbv7tzju0lcvf3e7oajjsxf9dqcwowa1q39qdfg1auvy3w0iri2whpiqytr9zhp6sxn9oqfcp4ymzy5ql7m2jl5psaw9tgt7van82pvsmhmyzk0cmhgj7vb7q97v5\",\n          \"startOffset\" : \"ig184jcb2o\",\n          \"content\" : \"In modi velit impedit qui. Sapiente consequuntur est dolorem perspiciatis molestiae. Quasi esse delectus recusandae minus totam. Deleniti et mollitia libero vel ut. Dolores aliquid rerum porro volupta\"\n        },\n        \"pageNumber\" : 319663190,\n        \"textSegmentType\" : \"TEXT_SEGMENT_TYPE_UNSPECIFIED\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { }, { } ]\n        }\n      }, {\n        \"textSegment\" : {\n          \"endOffset\" : \"0plmzbtpf63xrxdv59fol2cn7qzfhmjmqpzqm6kzbeaetvxxk8hia2pyg01gdv7bvsc32k9n7ncv\",\n          \"startOffset\" : \"xqi0de9ljui8fuolom8a10w6j0bslrnw766ebcju5vnpfdwuue9zhr2rctj4ocphms92ltixmn19rck6wr57mbtopwe8u7twmrwbm9odlivr3f9p4jlypb3he4e\",\n          \"content\" : \"Adipisci mollitia voluptas et molestiae sit cumque. Molestiae quis accusantium sed qui voluptatem. Sunt id praesentium architecto vel sed dignissimos et.\"\n        },\n        \"pageNumber\" : 1916944763,\n        \"textSegmentType\" : \"TABLE_CELL\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { }, { }, { }, { }, { }, { } ]\n        }\n      } ],\n      \"inputConfig\" : {\n        \"gcsSource\" : {\n          \"inputUris\" : [ \"rkiot8tcaw29sizxx9q1u8j6iy6w9cdg8qdc27dnhvv3jz4590n33daum7sdajzq7fyu47bc3yonc5bexrd6vone7dsacwgewytv692ws987zbki90\", \"rejt8t7f8k2lnynq0gau0p6794udrah1u7eu750upt7xgvuk566lql99astesyjcvrb8huexeicfubhx\", \"h8sl0ijzxa3j92cit36c17qtdf85g2mctcuyaxm71orj2kpyac269daerxt89phvomsvbmmd577qf6z1s9kmvqefapmd8d0qq0e37oq15txn8d7mm4rkiig73ji\", \"poxsqun43qdaapnagjjdr66to969w6ytpmybag7lbrn7wi6gtfsl7kf6yntmblra5it5n35zhok4ox0ctxheyujewcs8180naxlqp8uu4prdd6ujz61gc7oqlyk1fwecazemvlk7kdsqld6gvt5voa1hii\", \"5wsl69lnk9wawz4k3uc04oyqf0bxzprxuyugdm5c3jjmv0kuupvvbkbq1y433rxsfi7jedpjhu238sbrj1q8u4eerai8jec9yzuiovblphh1xrf0o6qm5g6jilq4p26q6n0x8etxj97och7gxarbrkm0ofzzz7te86csmoic3m402zfbsfs1l\", \"frehea7xys33nduwphq8snwcq44rogc9rke8y65foy5ojmz542p63uwz0pjugqjl6msmpmj7iusxsbw4868qkr9ls\", \"n3k125l2dwolr6u7wtqyh70foy42lxjch8jto08o20\" ]\n        }\n      },\n      \"pageCount\" : 1361093587,\n      \"documentDimensions\" : {\n        \"unit\" : \"CENTIMETER\",\n        \"width\" : 4.824639738906381E37,\n        \"height\" : 2.704558592500214E38\n      },\n      \"documentText\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/529448\",\n        \"mimeType\" : \"qhf0vpsqkfzcriurmvtc35upot4lgxplbty41uffv1t6commx12f5333n0bmjl5119w6pykmgbmuajr4d4p\",\n        \"content\" : \"Natus nihil dicta nihil dignissimos laudantium. Blanditiis quis ratione fugiat. Temporibus quis molestias ratione qui.\"\n      }\n    },\n    \"row\" : {\n      \"columnSpecIds\" : [ \"cv2dwywqyvoe0y3v6hmozxlh964h1ijgs1upx84z0nvprlqc7nrgxae3j6aljzrrrwd3wncgdk9z8ya\", \"02pthqp5bqd1slu0aiqjujbd9cjttw7ld1rpmdghx0x7m435szvjoove9butx3uh12o1ucl34obntkkpjw9tgzv4jmamouu44lr6yl6higlkpv1agaim1a\", \"youh6ljrlcwl99\", \"kh1vti77f9xz54f8zilnswgh6illg71vcwola73qetalazuk0mhp4rstl4inqwjdzmajad5utagr6g983wz8zsswichrs9amukkdzrddg4xiceiy2zypi0gc4w7pwlbxza9156azgz8dd9q0ft6a97k217n\" ],\n      \"values\" : [ { }, { } ]\n    },\n    \"textSnippet\" : {\n      \"contentUri\" : \"https://web.example.mocklab.io/014276\",\n      \"mimeType\" : \"58hx4luh9kqzyjrws2ojzi959kk5ak0m6cyal1lmfyr4jl2lmadnqtm91kubdvhldh86\",\n      \"content\" : \"Cupiditate voluptatem eum. Qui sequi praesentium explicabo qui omnis. Qui quis quasi fugit velit hic facere ipsum. Eveniet ut est.\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6f2e83b-59f7-4329-81cc-6e7e55d3e469",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.122303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.predict",
          "schema" : {
            "description" : "Response message for PredictionService.Predict.",
            "properties" : {
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Additional domain-specific prediction response metadata. * For Image Object Detection: `max_bounding_box_count` - (int64) At most that many bounding boxes per image could have been returned. * For Text Sentiment: `sentiment_score` - (float, deprecated) A value between -1 and 1, -1 maps to least positive sentiment, while 1 maps to the most positive one and the higher the score, the more positive the sentiment in the document is. Yet these values are relative to the training data, so e.g. if all data was positive then -1 will be also positive (though the least). The sentiment_score shouldn't be confused with \"score\" or \"magnitude\" from the previous Natural Language Sentiment Analysis API.",
                "type" : "object"
              },
              "payload" : {
                "description" : "Prediction result. Translation and Text Sentiment will return precisely one payload.",
                "items" : {
                  "$ref" : "#/components/schemas/AnnotationPayload"
                },
                "type" : "array"
              },
              "preprocessedInput" : {
                "$ref" : "#/components/schemas/ExamplePayload"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2dc6dd6f-ad7d-418a-97e8-1fcd5e07b532",
    "name" : "Imports data into a dataset. For Tables this method can only be called on an emp...",
    "request" : {
      "urlPath" : "/v1beta1/Dr.+Jolie+Bergnaum:importData",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Silas Lesch\",\n  \"error\" : {\n    \"code\" : 451063153,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Facere aperiam iusto eaque inventore distinctio. Labore alias quasi unde numquam dicta amet. Consectetur eligendi qui.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2dc6dd6f-ad7d-418a-97e8-1fcd5e07b532",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.113701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.importData",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b07b0718-a96f-4059-95b2-eff16cfe25a8",
    "name" : "Exports examples on which the model was evaluated (i.e. which were in the TEST s...",
    "request" : {
      "urlPath" : "/v1beta1/Andreas+Stamm:exportEvaluatedExamples",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Terresa Dietrich\",\n  \"error\" : {\n    \"code\" : 71086395,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quae quia provident inventore. Voluptatibus consectetur maxime suscipit molestiae ut consequuntur assumenda. Dignissimos dolorum tempore inventore facere.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b07b0718-a96f-4059-95b2-eff16cfe25a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.113507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.exportEvaluatedExamples",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4a179022-bb61-4c2e-9006-04dee913f9e5",
    "name" : "Exports dataset's data to the provided output location. Returns an empty respons...",
    "request" : {
      "urlPath" : "/v1beta1/Bettie+Willms:exportData",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Fredrick Mante\",\n  \"error\" : {\n    \"code\" : 1859431433,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Qui fugiat voluptatem laudantium. Placeat laborum quae vel explicabo quam ex. Ducimus voluptas voluptas sit qui hic.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a179022-bb61-4c2e-9006-04dee913f9e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.113314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.exportData",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7027e814-acc1-4df2-aab2-d807b9e206d3",
    "name" : "Exports a trained, \"export-able\", model to a user specified Google Cloud Storage...",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Albert+Klein:export",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Perry Schiller\",\n  \"error\" : {\n    \"code\" : 1698721569,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Nihil qui quas amet odio tempore est. Voluptates libero est ut sed corporis ea. Vel quaerat est et. Expedita enim sunt et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7027e814-acc1-4df2-aab2-d807b9e206d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.113117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.export",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "300fbea4-39ee-42b1-8744-20c696faccfa",
    "name" : "Deploys a model. If a model is already deployed, deploying it with the same para...",
    "request" : {
      "urlPath" : "/v1beta1/Dennis+Murazik+II:deploy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Hipolito Jakubowski\",\n  \"error\" : {\n    \"code\" : 1346690934,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Cum quia qui quia incidunt repellendus similique. Architecto fuga possimus officia. Odio ex earum iure fugit enim ducimus. Enim reiciendis maiores explicabo.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "300fbea4-39ee-42b1-8744-20c696faccfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.112922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.deploy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "badf468e-c2e3-4fc1-b78f-40134e0204f4",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Deangelo+Aufderhar:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "badf468e-c2e3-4fc1-b78f-40134e0204f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.112722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3956ce9e-34f0-40c3-9a7e-72bb92e6c5cd",
    "name" : "Perform a batch prediction. Unlike the online Predict, batch prediction result w...",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Cherise+McGlynn:batchPredict",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Chadwick Kutch Jr.\",\n  \"error\" : {\n    \"code\" : 529879678,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Molestiae voluptas iste. Unde esse est minus harum. Quos et itaque quo qui pariatur ea provident.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3956ce9e-34f0-40c3-9a7e-72bb92e6c5cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.112645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.batchPredict",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8c4cde66-09b2-48a1-b36e-ce59af1f6d62",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Charlyn+Bradtke+MD/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Eleni Mayert\",\n    \"error\" : {\n      \"code\" : 674958874,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Vel eius porro voluptatem. Sint labore est quas aut repellendus enim. Atque eligendi qui sit atque a repudiandae. Aut esse dolores totam nihil pariatur porro.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"hspnc6gs5w6j2w1dj7pw66zcy17jt8772goa5nhlo0aikucxtl29fsxhsxlane7dccrrcf7fcaz3c5sixlkforwdzpefjey3sheyoaumupdtvgj20fpegzzp6keuiw95oiuph89nb94exu33nolpcb97pz1r348r9wq9wkiwxz9zp4ursn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c4cde66-09b2-48a1-b36e-ce59af1f6d62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.112439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c6740ec1-8d1c-4393-bc48-5f2a6dd4c8b0",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Abel+Ziemann/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"s453jhwdognz78l2vi36umfs9qspof92o9l1cb0su12d78kqesgm7c926u0uwpv4ehss2e7d8ikgs5jbd721hl5desd4bjz0z728a6ge9ql5tw1j1e8adphkbbgpck\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"William Hyatt\",\n    \"locationId\" : \"bh0h\",\n    \"name\" : \"Florentino Adams\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ms. Robert Kozey\",\n    \"locationId\" : \"p1bq\",\n    \"name\" : \"Kendall Moen\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6740ec1-8d1c-4393-bc48-5f2a6dd4c8b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.112207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0436ad9f-1dc0-4159-9c6f-5371cebac499",
    "name" : "Updates a column spec.",
    "request" : {
      "urlPath" : "/v1beta1/Ivana+Luettgen",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"topCorrelatedColumns\" : [ {\n    \"correlationStats\" : {\n      \"cramersV\" : 1.0011686307516175E308\n    },\n    \"columnSpecId\" : \"rngh\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 1.2206769997114925E308\n    },\n    \"columnSpecId\" : \"3j16\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 1.0789285673817394E308\n    },\n    \"columnSpecId\" : \"sz6k\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 1.7888176546083634E308\n    },\n    \"columnSpecId\" : \"h2c6\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 1.0584270817927838E308\n    },\n    \"columnSpecId\" : \"o652\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 7.851710742790193E307\n    },\n    \"columnSpecId\" : \"49lf\"\n  } ],\n  \"displayName\" : \"Elizebeth Klein\",\n  \"dataType\" : {\n    \"listElementType\" : {\n      \"listElementType\" : {\n        \"listElementType\" : {\n          \"listElementType\" : {\n            \"listElementType\" : { },\n            \"nullable\" : true,\n            \"structType\" : { },\n            \"timeFormat\" : \"2022-08-24T11:37:33.110865Z\",\n            \"typeCode\" : \"STRING\"\n          },\n          \"nullable\" : true,\n          \"structType\" : {\n            \"fields\" : { }\n          },\n          \"timeFormat\" : \"2022-07-10T13:27:33.110928Z\",\n          \"typeCode\" : \"FLOAT64\"\n        },\n        \"nullable\" : false,\n        \"structType\" : {\n          \"fields\" : { }\n        },\n        \"timeFormat\" : \"2022-05-08T12:39:33.11098Z\",\n        \"typeCode\" : \"FLOAT64\"\n      },\n      \"nullable\" : false,\n      \"structType\" : {\n        \"fields\" : { }\n      },\n      \"timeFormat\" : \"2022-09-03T11:53:33.111027Z\",\n      \"typeCode\" : \"TIMESTAMP\"\n    },\n    \"nullable\" : false,\n    \"structType\" : {\n      \"fields\" : { }\n    },\n    \"timeFormat\" : \"2022-03-21T14:08:33.111071Z\",\n    \"typeCode\" : \"CATEGORY\"\n  },\n  \"name\" : \"Shaunna Moen\",\n  \"etag\" : \"suscipit\",\n  \"dataStats\" : {\n    \"float64Stats\" : {\n      \"histogramBuckets\" : [ {\n        \"min\" : 1.6717180452194162E308,\n        \"max\" : 1.4964298987641576E308,\n        \"count\" : \"5xyhnawwsp8a3t4f7fo7s45snt47sk4563pseq2rqp8u\"\n      } ],\n      \"quantiles\" : [ 9.931448737847696E307, 1.1894284711395753E308 ],\n      \"mean\" : 4.800264460099499E307,\n      \"standardDeviation\" : 5.343920710588871E307\n    },\n    \"structStats\" : {\n      \"fieldStats\" : { }\n    },\n    \"timestampStats\" : {\n      \"granularStats\" : { }\n    },\n    \"arrayStats\" : {\n      \"memberStats\" : {\n        \"float64Stats\" : {\n          \"histogramBuckets\" : [ { }, { }, { }, { }, { }, { } ],\n          \"quantiles\" : [ 1.6163527242192918E308, 7.796124634917141E306 ],\n          \"mean\" : 3.9338121293930984E307,\n          \"standardDeviation\" : 1.2482760959631495E308\n        },\n        \"structStats\" : {\n          \"fieldStats\" : { }\n        },\n        \"timestampStats\" : {\n          \"granularStats\" : { }\n        },\n        \"arrayStats\" : {\n          \"memberStats\" : {\n            \"float64Stats\" : { },\n            \"structStats\" : { },\n            \"timestampStats\" : { },\n            \"arrayStats\" : { },\n            \"categoryStats\" : { },\n            \"distinctValueCount\" : \"se8a1nsa06afe4f24bf6g97cn09nhwmmmo8naz7gtn2ctx37z5zfon18gv7r0d20pmb1as9r8dbb24kqn49zul5mdhvzro90swtg44ct7cb5guathhhz8s72c1lgdbfwrhyiu2igw20asc5mur57bi69jfyizjjnmh7h4dsz92d\",\n            \"nullValueCount\" : \"reg69nhm8clhb6v9glqygve4fywepcttgtrmz2j505vrhqsi8d0h95tbb1i1j289ta9p0w1x88tp4yxbq3rtslimldq3k65ml3679h2wx1o7ozf5udnqct055gv7skwg9qit6ai7usm1tz8n3pr9374zsfbd34ly0t05vva1w4703d2bp09gkr812mclpv4dj115\",\n            \"stringStats\" : { },\n            \"validValueCount\" : \"a1zy5q6kdjjrr4hhprppvh7hnnb1dv7kvzq6c66fs7z0wzc4cxnassky9l0mdg4blupxcpa410pdklkheq84hoxua7ooti4e\"\n          }\n        },\n        \"categoryStats\" : {\n          \"topCategoryStats\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n        },\n        \"distinctValueCount\" : \"7rr2qmupflw3xd67gjko7vxforz95up0889rbsseicu4atvfgs3pjyrtsosyk2uysh1k0xobcysuh3c4h47931lb9kjn8grpath33chiqqezepic6gjjy0uspl1kjb\",\n        \"nullValueCount\" : \"sg7h1r5dytobu4xbf6g5v5b6z2alpwh929ebkhok638161oo8nabdwyvblxud8hqzdnimr4camfri81py731wgdmhy9x2pmie1i8kaf42mx75kulkgor1o5s761cxzkm4pz000k9xziz9a6qv0pmmkgt45f1e379xwdqn8fqg9d19oq5y\",\n        \"stringStats\" : {\n          \"topUnigramStats\" : [ { }, { }, { }, { } ]\n        },\n        \"validValueCount\" : \"5vrjod8alwg4wfzfrn4vw68c6bzhu1wopc09sew4lvskqniy71r80poxtgz57cln0befedt386ilymlqs38zo9lllq74713hodgc8ug52o5box83my872irrrt3unz4hj12xcza30hqp487ds8imr7fiipq6o83hpvlh0ek92ypotvzcinrtghbw6b99464st\"\n      }\n    },\n    \"categoryStats\" : {\n      \"topCategoryStats\" : [ {\n        \"count\" : \"zcjheyl3g23wdqiogsgafdzudczujwst7h2cqt695k2q728mglfz94okd2l35acw97vsjrj0wwz69a3u4eiz15m6ku\",\n        \"value\" : \"vx1si7l6nush7lt7soea688xdjscf\"\n      } ]\n    },\n    \"distinctValueCount\" : \"j7mmurl9mtbyhpcx2sn8\",\n    \"nullValueCount\" : \"weuguag\",\n    \"stringStats\" : {\n      \"topUnigramStats\" : [ {\n        \"count\" : \"5qrovofc0bkbs72rk3d6kkmlqnsols66s3ito3bgge89f\",\n        \"value\" : \"8qz8bw3llx67b6ek8bngbd49ktuewk3eexjwys3aqhwuo10x6sgf155s1u13w5awyhbj853jkg21sdacd17n0rwivcyx1q1pjj950a2q6qv3fzlhvuubaxhy2kx0fmtbjcvx2xd2zjhle2x0s\"\n      } ]\n    },\n    \"validValueCount\" : \"auf5z6iuh2ptvdivk7wuwtvnqwx33ynznao2cmjt2kpcfjd8spsptid1bb1mz8958rosi3tzx124cvio7b6ix323djk0z6q\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0436ad9f-1dc0-4159-9c6f-5371cebac499",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.111759Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.tableSpecs.columnSpecs.patch",
          "schema" : {
            "description" : "A representation of a column in a relational table. When listing them, column specs are returned in the same order in which they were given on import . Used by: * Tables",
            "properties" : {
              "dataStats" : {
                "$ref" : "#/components/schemas/DataStats"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "displayName" : {
                "description" : "Output only. The name of the column to show in the interface. The name can be up to 100 characters long and can consist only of ASCII Latin letters A-Z and a-z, ASCII digits 0-9, underscores(_), and forward slashes(/), and must start with a letter or a digit.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the column specs. Form: `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/tableSpecs/{table_spec_id}/columnSpecs/{column_spec_id}`",
                "type" : "string"
              },
              "topCorrelatedColumns" : {
                "description" : "Deprecated.",
                "items" : {
                  "$ref" : "#/components/schemas/CorrelatedColumn"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bec48374-74e3-4452-adc2-17ba3b1085db",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Hoyt+Grimes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ernie Reilly DDS\",\n  \"error\" : {\n    \"code\" : 1656165945,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Omnis optio quasi qui. Eum accusamus illum quia itaque natus esse tempora. Vero omnis ullam dolorem. Quidem vitae molestiae est nihil voluptates molestiae.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bec48374-74e3-4452-adc2-17ba3b1085db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.110267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6418a96e-ea29-4202-9cfb-4c469d54f0d6",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1beta1/Otelia+Block+II",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6418a96e-ea29-4202-9cfb-4c469d54f0d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.109998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}