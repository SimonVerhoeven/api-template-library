{
  "mappings" : [ {
    "id" : "2930d01e-b429-4a2c-ae03-f2f953e80b5e",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/au2m5olpaj69nccbq32pmz9nwf7c8y2vpyhj1u9pk7dkt30g3av0ug8xcn1gjaynp496n4px0:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"h8qaaoupu3xcw67ft5ij7kzvyg4f8u50r3h0octskmcboqzh96nn5ite2nao48oqrcu6fznubra2iuih5bxuebkc9zx0d08\", \"i663t1vbzdgy3m3gi3kotc7a\", \"m20a8sgkhguqn1q2qotyqpi49bxpan5vjc5vkny1gvldpvvy2l140rd6n5krqa08ayyj4dhu2356x9l8whkj16scplbaygn0pxcu3685ptq8bfuo1s136id9edo3c7\", \"ntxwspucucq335j39d1js5j4893wnvgay5x4l4v3u7naosmqley04rek2g3u7vxg15t0i60wq6ykpy2bqcmj6w7fpd56q45uajxv21en2iprazv8hkbrp2yy2srprxhiyplqtmcg1h2z02nfj1itxrh1ox3yu3l2p29njwv\", \"j5910gfqn80v9gkzxwpt046wowxv7f769msus5a59ta7v55tez6ve56haxmmobpm1zd1ugzdjs3mlpeib3vc23ux0m45j49oogn3kh2ybb2srwuw4a8euhqsx5e2lupvxqrqh5004j5p1ytvuyp88gmdyne1gyg9hqis4g8ukwyl\", \"5tzwk3p4sh9qfxh08hin7gs8ldpccz1jhxxqf3uj0emf6nnn0t\", \"adru8nb8wsfnvzqk0jbau7zrlgxfrbcnf912gp47oy7j9bxfi72eo14frdvdgljusvuimcdt2nbpyk57vcurp53jqqke8epn6r7monr96axvouzub81n6ol0klf\", \"21wdyv7b5poxlcwgv1wh3xsf1ewkl6elayyyxmpja4yxz2y8tqsp55ctc3p78ryj2b6bwswxzw2rjzmo00scmtvgpoywqu3uxcb83kde29h6scd055fmpii8dzfdfe5sxt4vv3jyt796nduoc\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2930d01e-b429-4a2c-ae03-f2f953e80b5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.831412Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "92aea006-9200-4ed8-977b-04ec0d35a41a",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/mmc6260mw3v6u1ld9l31kgpiraesbfo3v4se7tsg6mnwnouf5gzsgfgjw5jzgol2ogms:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"z0ng0ilct7w1yitiv6hsgcgci1b8heyqasb9xdjmkxu6gl3bcoq47g578gmimcvzehht8c7vipnkxlnvh92u4aifrj9g0us01coyzi5yvsmedq23r2xelu2yzfpsojqra04hz95f7ej9xbwewm3fewqi4b\",\n      \"description\" : \"Modi aut fuga quibusdam inventore rerum aut. Voluptas laudantium optio quia consequuntur autem quia voluptatem. Voluptate libero aut vero. Delectus eius repudiandae.\",\n      \"location\" : \"3p8yiyxz3y5r7ihl8lt1zgaesz287hkxok40n9az9rrhjejlkzbo6wpjuz1uxgvdkf4yczcqna9pnyh5sh9764eulev1oxl7mjr5cc1pg233yx029pege7dy197j9du8akuuisf888q72\",\n      \"title\" : \"Soluta illum repudiandae placeat quidem.\"\n    },\n    \"role\" : \"bbdzvmza0jsmkg9yw9heo4u3qxlc05o2nz5q6qhcdw69p5na5lz99vtcit2opp0di743nm4m95sjfuauaxowmw2ez415i0k6ndpekxceh6lowwjdzju0g261h86zzl4tdr9nmo59z7pky67\",\n    \"members\" : [ \"2xxbl7zh11dmvzawnf4wnc8j01iine4j4g3ojik91omclx619l9hb0ea\", \"g8genytutoqbruwfvofl2expj3xhy3o0gsqhssbxz628dy4\", \"ox4x2dhyxhv13bz3lntrqrcw3ade\", \"zvfq639cy3rpwmarocnq9ef1j58riwfn4dkswbkdqdaiz2y3l8k1br8c75fp2ck5ycemvv\", \"qiqpchqt1570sqipnfaey3bbzlr6srt2qp95ylrq2nqdrzlukvu8a2fm8kbhq7h5bb7isw6zsweyl4y45fnsraz3o44en6dr58tj12j9otbd92fo1da3p8yfx34uu0exj7xwac5c\", \"dtj1n4enporjddaojpnjbgqusi540wsc9vw7ieevmehjpdf5shwc474i4pvlk8sbi2jw3ngib7w7uyfhug5i2c3be8d5uq5opvjtato6yqekp4ys0f\", \"q3yqcg9renk4vpgxt89t1bdxo9878dn8ojowxteom5imjmu9cya40e9gfx1y5sn0irtwf5ujx2yb6nv49w8m3dl4cigavo7g85a6oxkker6rozgjo6hlqxugt0yfjql65h7mencgnczex44pslnf66j0k\", \"o9s5acears0joavld15tpyj3kepj6r5r7jwwfy7gl3999fqp1z3drc5c4owcr6awlierbl6gr54oxeckpwdb9sfww68d35zmx\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dkn7s6otzaz9md4btsvwqsfw27y5hb2dlktl7y4e25ef5shpjmbb5g091oqjje1cytlicu3l2lp73dte0agaey0fko42vyxwvhw8p72isfrahwey74u0brr490ku05m1\",\n      \"description\" : \"Dolore autem harum dolores. Enim rerum est illo. Dolor autem ad possimus quidem voluptatum.\",\n      \"location\" : \"dti5bxqhxgau8iin2u9rbxbbhjkqrdzbdpsu73pmxcd7il9dd979gl6ch24dgo8fqxjx7o27vq66v90zsgp6tdlq6899d5j9c3tlp55ru23ge5zna2rylbdqp\",\n      \"title\" : \"Ut libero ipsam vel et minus dicta accusamus.\"\n    },\n    \"role\" : \"4q4m1zp3ib9saxbmqb2l3hj4ixjuc6h8ex0bpiaxn0oz4ry\",\n    \"members\" : [ \"irokil40luq6op7sjh25m40zwxtkw0sgp81d3tga497zedphi4i2lcfd\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"5kebn6y2lixbnpg3twctfahexx0y42pm4mai27us7lj40bqxmeus5l\",\n      \"description\" : \"Molestiae qui dignissimos molestiae soluta. Quos inventore soluta non consectetur. Alias est facilis.\",\n      \"location\" : \"oa5s2hjp2xqwi3v8pgk59fb6fzw4ip71u0t9vf427vl3kjvpbe2t9d5wg8uobvkoky71bpsi848ayz2sqadybo4ev6r2v2nsa5lw4z3v6n7lhzip3ytg301wt3kv7gklz6hbsvuatgtclw6i6sivlyjdiss2p5\",\n      \"title\" : \"Tenetur odit quaerat qui tempora.\"\n    },\n    \"role\" : \"gm7xwy91p6ob583gkp391kkd6ptfnfkwk1ltmox6h2qd74quzpqlpma6rueier3agogt5mdosuviocq20mvz19ta2i4dipq9jlh2u8hfsq3b0\",\n    \"members\" : [ \"0v5791epv00v2l5ecq4riqkercpsutl9b63n5yoon22fdi6ia4hoonrawmht90mv0zcj6197ijp35rbnk2g329g1f0stwzssgvnqdz5p50ankfspvszo28p13o3vj1dsbhex841oz4s9kzalu6oit3vr052025sk05ejg3zeh7sy\", \"oz1y56b6ughtu0fl3lvge4i1t6bo87dusbk9h9xun6x00kkshxj6ybswk55g8850eb\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ksk3d9betp8287m1veu56p551ckzlth75ymu8ksujgx5cnri7b6njit90f26k\",\n      \"description\" : \"Sint est qui ratione tempora beatae. Qui vel veniam pariatur fugit nihil est. Voluptates dolor et temporibus. Ut voluptatem impedit quisquam aliquid commodi iusto.\",\n      \"location\" : \"jvyrfdppwzwa3sfn0yla94hktxdo7xd6hc26wmx8jdb7wqcq3ny6j244e3n4lkgq\",\n      \"title\" : \"Velit nemo est.\"\n    },\n    \"role\" : \"0zrn6greo4xzrevtrrmhm96oljd96v23134mp7q2ybdgahktdu4qyh9a72m40kd55uimb1yvqzj6gtjv4e3m6r7jczf3bo8zl9heazil5j4fx17r5ns826i33\",\n    \"members\" : [ \"kybbj99zw81wxfmr5ip41gmg3nm5j4p8auxsfrspmbmkxaqrpdzvgdg43s0hzk00wybdukpo9kddh9wocjyii7077lhy3\", \"6iln5v8ns7\", \"nk2dtoeaipk7z57nudrpgua9v24l9ln5uo0480nyhcdyj791w18mvduhbprvvganwwxfwz2zg3vvh7ak7yvcineza64nu9e017ydug73v3k\", \"mq4ebb3lpwhgf3s1t4ijy2zyib6zufolkhe42mklq7f54xcinsf9z52n4q0s\", \"c5rxotb7voiu5lxglcgtj2pw9in22cx0dt3vo69xkqjb1j1q7l94we6v3qnehypgbwa8na138skq05c15j7pyfi597ikm2jzxil2xp3mdexls8xmuqq0hl6uqbr9qk521aa8esexo0ail7pcdheaa9udzgdust00xmiqfa7doi3b2\", \"donzrlpsvd3ztiymsisldhcdb8s28652pxsv7pmmam2rsr7zfsxvpkhbxc8uapdhggbcrp3gsaokkm8v7auheuq2559mwks92msy7qad3hpcw3tkp4sglwo6n0ghsbnsfynxilo\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"jolg1jc8uf18lzp2vawzpwnjolc9h49qaufacrx2ui200k0a6mr180me3ilu1usg25cp48gc4j8gr45xdtsjd32bywwq8dh3clpvry502aaz3nixjnyikqxkaiyafpn5vrucar9ohjk2d8e90payw953iczs8hio02azh9imjbklb9\",\n      \"description\" : \"Aperiam officiis consequuntur repellat quod accusantium. Quaerat et repudiandae sunt architecto. Quisquam asperiores ea corrupti sit modi repudiandae. Animi aut cum atque dignissimos. Deleniti esse no\",\n      \"location\" : \"y1mmsbe4ckqrz22bb2yx3esqhr2idq1u5fwynqxqgs9glb3c77m4ioaerf1kopujcfj4zhv1tj00alr5jmn2ol4514si0bgex0twkkb8sryatcvs193clqnhrhpxb3vd66c5fy5udpr\",\n      \"title\" : \"Soluta rerum reprehenderit eum aut.\"\n    },\n    \"role\" : \"24sq37i7l\",\n    \"members\" : [ \"uiywolmspi7\", \"246fshnzjjq980ppgmufis00ebw92n3v26lt5ndjelo75rs0g8jfu8cbzllxtgvsrco8dmoq7c2kznldaokvzib3t2hialmjonp9rdouek0242ce3a16h75mtiu096yr2mcnll9t2254mqu6juch7b2t968q6i2ko5erdi7in0yofvthdt7z3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"fdcg1rlhpy8tlk36juf0ulblkofdy8kkove3bkjed7zt51yioiacw7keno2a72j6yn0kdvkq8rb0h5nv5e837wl5m5wkotjly4i3gv711947a\",\n      \"description\" : \"Reprehenderit aperiam est voluptas rem rerum officia. Minus cum ad velit neque voluptate vero. Minus et nisi porro autem blanditiis.\",\n      \"location\" : \"zbg38aj18tg7sys2e3icrs55qww3uln1qoqk0ygqbu2710gtd1tnop2enacphbzve54vyt7o11ef95tyjzqfsb\",\n      \"title\" : \"Eum temporibus qui est fugiat et rerum et.\"\n    },\n    \"role\" : \"82a9sag92kwgbzo07ln4t1a2fp335rojz2huih0ubgp2jz1qfpp8rxwdazr3pylku2q7xvthxu5hwa2loadj0eqt453itrayo7cg8soekse9jyx8kalcevnalq710mri6jeybnkvswqcnx\",\n    \"members\" : [ \"lt9dhlkd5775vfte0sa0p3xodduo459quinejnduaaqk8rqr1o5ziypflr0y60qybrgoky309l4qxtpzr30iwtnmtpsherwrsoo9k961mb7idtdyss\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7iimxxmrkiu4lwjf5ip7pnj5noqzu8txwb1q90emb0n2fzmu7uknqg8tdfu2m2ot8o9n3cm82w3snd20u57fq0ohiljrv9i63ab7euiwlexk267d2vgby4picwzdtkfldld0b4xnw24wzk8uvkx343vcoqgjqne6qk9w5osor7bralq3\",\n      \"description\" : \"Voluptatem fugiat hic officia architecto animi. Officiis nihil sit possimus alias dolor praesentium temporibus. Voluptates sapiente ratione hic temporibus sunt. Soluta labore et voluptatem atque ipsum\",\n      \"location\" : \"do0e4o45lh493snjsnbjum1zawv2g3nzh900w78l7mjf9ky55d0e2cnvydw8ydcz45j6o88b10zlzcnhmjnr797zzxcpand5xszrvmojam4gqmx5d0495q9wnmjfoiaj9uqzlf9sogi0h2hf4574c2u07ee8oyymof67jon45aav82mgg7sxdb\",\n      \"title\" : \"Perspiciatis distinctio sunt commodi debitis cum.\"\n    },\n    \"role\" : \"6r2b6diy0ftbk8dl3ow0ys8xtxlp4vx8unn1x7tqiep4ifs6yqrknp2shbaa7vdzx5hwipb0hrkdeonhpr9hgqdvrw78q3wgufsy8t59fugtp4v9i3m1lujnj\",\n    \"members\" : [ \"5xmhjb21q6gh2s132cwkq92en7tassiyu6wuknxpjyzj5ubjddys0\", \"ge8nma1618r0f1b5ia9nopker0czxxawvtbyq7duzuvqufwfm1ogst7adenclbh3eczjucdsecmjdmmx99i6408cqeervsallegjpa8m37ykbiwguuj1al7jjg1g00id6wepn7uce6hdqn676\", \"jccry1b5ml65fcr4l9wkygyv0z1o\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"2gbqq50yb9nwhfwfo5l0fa6x61iqxtm8qr1ha6k1mnva53382emr8uixotrxo216fbqy5woq9uabhq63e68aqu5wihq0mjskw7tsne6pmi5i5iy91ji4xsfogvrolbmftv3zgx9elsoroo8nmj0qsp4ktpt0a3to7k8s4opu9773w753yxwvxocwhrhdpfhpl43zb92\",\n      \"description\" : \"Ipsum praesentium eum. Vitae quod facere quibusdam sequi voluptatem ut id. Aliquid velit provident in laudantium. Dolorem rem quisquam. Earum reiciendis ut autem sapiente.\",\n      \"location\" : \"ilebdjmlj69n00w31v8kck3djpez3fdeszvscr5lbaabvwyqwzsgde16dsfuei71qvnjhpp3awm9kjeygz96ewl16z7wy2mx50viflvm8dil3l895i7rmf5hkvcf5f1wwulu2eyuephq02leediutdtnf3oh5p0c5n2mumn0k7l2ciciszmpbb498\",\n      \"title\" : \"Ut est totam rerum optio itaque.\"\n    },\n    \"role\" : \"rveeq928k09xbbjnr1smjhnmg5iiznxe7biy1zeowg9d9v07zyg6glw184388qwpzcjsphx85jo7p7xh5l4epfhq44ir94cqxfaajz2vo\",\n    \"members\" : [ \"4vu6tg5u8z3y38fp9tc50qhgnzdrnmiipsdffkw2vfkidwa2zkyuo6s0a1bc1avcxtziw9kwicx9b2f6fpl8c9utwm7ekbdfefvbgb5cw69ndlbtiokh5fb5lyh02zjv81eljm3m6ydvu7433x85jfvyqaortqxsavgh9hy5j7\", \"jnxupacun6ly0153vfscb7jsxvl461rm\", \"ae7zw5351lcqn7h9zlw4p33csfkipp5eivirs2tnip8l1qu48svi5xiyntlw7fgk6vb79damcibbd4aq8liw8dlcxt642y7bjp55f1suvisxz5iujq97ehwpbaop4gs5cm5eei1l4ecr6zlov8b0bczx3qr9e7pl5qm2hob4\", \"srkdbpqwm59ynopxzd1j0720bcmkmo4vk5cyx7s31w\", \"9djq6oqg1wsyn6vml1a1qoyz3dwv6fktll4wswho5wfg92lks4r23uggi10rkvyensbh50u58t9jjzyluywhlhl4uusa\" ]\n  } ],\n  \"etag\" : \"sapiente\",\n  \"version\" : 1143423433\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92aea006-9200-4ed8-977b-04ec0d35a41a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.83126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "334d05b0-91b3-4f67-9049-d653413e7273",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/y9euflg1xqvk2lmonzfqhbv4rogyu2kj37gcm3dl4744ucgfdf7gijurc3rl6oy4z8844cqcfqqizexq1y69my4vbyp65l7aj183mcmqgd6wlhp02rlctzlcafkbn29vavxvp6jvtyoptjzrd7malgv2jwnfxmwlmpobd3lr7g0yqhb6ugyqkawxr4lrmrrdtn:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"3jrdpwk9cuot5dm2wc8e2eekgpw\",\n      \"description\" : \"Mollitia et dolorum nostrum nesciunt ad. In consequatur reprehenderit beatae et voluptatem laudantium. Eveniet sit itaque consectetur sequi. Odio et enim eum. Voluptas dolorem eveniet.\",\n      \"location\" : \"6j17dp0yb9sn65ycn94xa932z4q17l60th3545a65d7kjqfv75v9bmg4jky6iir0jf4bornnkvlldklxhn7h6c6qmlr1sem9pv8nvhwzgr038eviw5szj7i4b9z6db8qnvjvbrwbc\",\n      \"title\" : \"Quisquam sunt dolor modi.\"\n    },\n    \"role\" : \"qotkebgv4ev1d60qse3q742as3vy50ugjryyogx88j7pb2dspq6qiyzf1413boz02iwmo4i3jed0ubfstxks04a4m8zqdact5im9hekm3q7ngvj\",\n    \"members\" : [ \"5le7od5if5kan57sqqkihjv582o9caqzoksa9rnxv53kllj62rb07fl5tqpxvq2flgivj96i9unztx52keh6vzmnq1trujb0yg943l\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"2i6ojuuwjvsiue8621rgju6udu7daubcuco5j3f7xcp6010yn8dx6d2zjh2phr4kddd8iwec8ljoe8nlq7w3x1q9sdoultecwozdbs0zo2epaz9wmvlcxpij3ntkjieaaq90aewl8ie0ayje7s5hs3v51r0qhwbdo2vcrw65xmvfwdobfl268e0gaszu9tuxipkaat\",\n      \"description\" : \"Ratione qui eum. Necessitatibus tempora eius dolores quam dolorum. Placeat sit assumenda omnis aliquam voluptas consequatur. Numquam molestias dolore.\",\n      \"location\" : \"b6k61m6kwa674i9dhntupotvw1vorpjydworwdgs5z3ds21q6tam8q4sem9tl1ac71redz8rl7i32e4ee3x9ce31ur1fl6ybodb7odvo3r9fouulut2pn6i322c2ui07tfauxm0\",\n      \"title\" : \"Explicabo voluptatum rerum ullam eius.\"\n    },\n    \"role\" : \"zhu1g93w9pxlazwrtk86ou3bsarcpqam3prnem66q0h797f531zq5vjpuiiv2j8gsbkmv5k0pq9x1em9r0k5m4w9unx2glwukm212lhsh5vhkrlmlvo5o\",\n    \"members\" : [ \"hdvt0odpb7oz46hcu8tnfjsjfctt5gxp1etfsebgr06aff6t2diuvz8egdjw9dwsam7lhl6ua3wyclwutxtrfqq1tc7ull2srowr085byh7zb4ryhx271fq0tzmrods2hvyhz88ebeflgxk2dxhhiaho53w80glprdns7cn06z49nw2i3xx5202l44wv\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"qbsnxo24vw4pysjcnypiw4prvnvgz8dfpel2kuoll7lilc6e85jzkn8ch5h2n8b1me2at2ylncalj97hiufrg7t07muzpynmuyqrxavgz2ozuast5qty1ogkznitt261c26101pjbimu\",\n      \"description\" : \"Asperiores rerum et enim. Eum iusto voluptatibus dignissimos reiciendis. At est soluta. Soluta sint laboriosam eaque.\",\n      \"location\" : \"ec4hhzfzmz9pivzmkfkoh54ifx1wkx5z7u8a\",\n      \"title\" : \"Sed est omnis omnis.\"\n    },\n    \"role\" : \"4tzaofklbala3w99jzb9a9kadb8rwiqit2u748w3zyhlldl3qqxki5qtjk72f9hw3lnptcagwd7i1i16sg2653tqtlq72q58qs2wg8nqvlhucg39w24r87spzb3nle7kt0o9\",\n    \"members\" : [ \"w30v202sknt22ambxk3hau6e13tzmmub33fgepva7z3v18rotel6z00tdsu2ch8vawwimamn5youytnpm4uu2pi97jti4osq38otds0nwp1rqgku8boc25djvf1h\", \"inkt3gt4cqit345xsa9i03ybre6omcqpgf1zs8co178om31\", \"z46kqloet8nugeshnmuov0ku00m9fwdik1truw7oy70pmm90inne5mb1662yceesl\", \"tqa7n2hauog3g5pqkve36kpzg\", \"k33b33mzigjt82ympkgccgz35hrb0nip6fu5sil9ivedo5fc4b68hxavdob0n55p7mfvno4oinzu31x8twk2mqeuf1npz10uodilnnvxb7kcmicejmdybalwnhg2gjlasnvoq5uykz7o78h2il6hkcaeq7aau9ifoslwq7e\", \"qbntyhadpjqpilhw45eumm05t6eu37tyox6d2q8ys6doo\", \"2tpb4oi1gx9tpwezh1rs9thyeiu2wa9662anxq7eyt0sfrmsiekhn2yc3awa9cs9l94dctyrsyi6hxtxkjo18dyr2u6zjmlczcnlku21iaxr4xa87\", \"inbc3mwnikcr2vjef2d9wdb2o1c7v7rg02jbxduhbjrqtbfugcf2lyk\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"w3w5hpwz2s454hufxz3t1cb2yk42c7sfubk8qwk3k5tlro1h9u11dxj5qaf2ifxqiugc1ghq5iggde039iuig56tsv6zpwyt7s61qug9gf8oaq06tj95j5xcidp0xtrxep0r9tjsyja7ahjdvkwvvgr08psyyuwd28crmq46uc6w1ukaq39tyv4xb7m3ckmvg3wj5\",\n      \"description\" : \"Facilis temporibus laboriosam voluptatum recusandae ea veritatis rerum. Accusantium alias sapiente nostrum ullam accusamus labore sequi. Praesentium qui in iste expedita tempora corrupti. Sed deleniti\",\n      \"location\" : \"o8nqlq5wa02u5rc0cw1na9bcow4vxr9wcg5plp2s7tc91l53u9uv4ns1u23vyokmb6hkea00wolj8mk07hr8a\",\n      \"title\" : \"Repellat et quis.\"\n    },\n    \"role\" : \"6cqh5bnnbm0qbzfnnh1hs85d9ot73cq4qit6dlofaedarjdqjdm5myvyd9s9b6u0gqgm7vpnfom9g9p8cynm9yfncycrh8ps4s9wri2ouq3g349cwryj89pu1l7zn2rh1wqgai6zd3keix5h082onfgc35vpz3np0vyfz21\",\n    \"members\" : [ \"d3s3u9lhvi4z8hr2fgxyz7hnhvcq047rs825so4lxu7wfx700wn7vevvnm2yd0wic89q07mfhygh36zq3uothy35mootw7lgw4pioj05j\", \"nqmjbnrams5hb012eyqtcxivrbtdmerpmipvnwmz6twjr46fyh5gj1hpwb9ujuq09hdv6dg6ntko7kh0p9vwufo07hy1zsghl0l0sh2hm7q9f9oinjzpgstwry7ek598xfbt1mv0zxqej4jvnjvua2bxm2vws68lywa5x34xy3\" ]\n  } ],\n  \"etag\" : \"tempora\",\n  \"version\" : 1187635266\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "334d05b0-91b3-4f67-9049-d653413e7273",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.830048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc56e0a0-9977-4e31-b82d-b13513df7c30",
    "name" : "Lists table specs in a dataset.",
    "request" : {
      "urlPath" : "/v1beta1/18cfji6zaqbdzmrgwglfj7t497qu9ar5t52zya31j4z4r59zk0860rzdnzbj0b7g18sijg7p7mz7alr7v3t1qfm8ekmk1lprsx4vyai1ejzxl4iiufmpghryyawfetuaho/tableSpecs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tableSpecs\" : [ {\n    \"timeColumnSpecId\" : \"qfj3\",\n    \"validRowCount\" : \"97lkohamccdloqzzsp9766bcb8j387gwsj0mq8xig8vpjq4r62mlnurq9w7mntyg2vxuyy6nbhg5n0codmrcc6qn279foh1frq78de9wqfv3jiozojwq2f2awxrtvauyiyzcz1imoy51mzfbg\",\n    \"name\" : \"Colin Gutmann II\",\n    \"etag\" : \"quia\",\n    \"columnCount\" : \"6upsyu44oad764tskjms5hek3ntwtro2w6poasdp7dg2rmdaqh9aqe8jm0vkk8o11kp7yfjrf5bp13e2gl7jx8vn739vdh4g1i0xl8hkm48wmm1araagq5lui8dssvj14z8noaor5014gsqkq8sf3ya5i3xb2e\",\n    \"rowCount\" : \"en0du0pdi3m9a3dq373cd40r94so0l6jhuj97yfuwyx5i1koy8ibb\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/276245\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"5tsdrwype9uj9vhc7ubjcihbodya9p3agx2hvqih026joprjy4gmkd9gxzclqftosojqqlk6lrrts9d11rbf1tmuz9l4b5k3e450r0tc8ph1y1n2r3gn9\", \"32uppj657c1byfv0ypw8t2j5emqo3cr220evz6679agrwwkfmyfmu8ua40kek\", \"dywc1f3hwcmw04bioagdj7dxty6dihnxye37nygi75l39lgkf9f6qy5nt9m4lmn6\", \"ew0xy22ewxefqb61kxig4q7a202ol5d9chcqulizn0tq7q4i0psor0mbgghrxrkemvszujxkthq360qhgv82mj3209whgzijq8trwcv1qucbyvwtpwz9r\", \"i94ai2qgbci8wbeuk70xjddrxowkcpoo8336saqm4zyl69l0nvqjmmj91ftm8edg2t5bu970v2bl16tktgp9xn3l8vjt74lownr6mxbuvpgg\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/910329\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"jg0x\", \"7s2n0jkq3mml9ps4pvxiak3a8l1gnbp34p7xxo62s4h70rmqsmx2ga5o9r5x5z1sd8aw97wzm6zuybm2kfxou991xb69kj40lzvfizmlg5wcqrq491cm3y21v1r8053lp5y31e88nrjy2wcow8rxxlq0v9974ik5sr\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/054646\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"bhhs8ntnr4awvjzztpkzgzll33ahfoxzxt8jfouq0t5mnfmgy9og49wljh24kkmzp2y4\", \"ivptfpdcf2efrrmu9v4so9yvsmm8mwq3g608at2r8h3c8a9nsquqh06h3qfy5os3ha85t4n7ldist1kmsvpw3w7r3u91e6kyx5ukft1bmhgbynhj4qnqmko3940poxttv1\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/593609\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"rfofzb0ibnz9nzbm6t9974r7gthy4u1ynhb42qe44prmleb94rkjkg1eh2j\", \"za0fhaczyw63fcv6ri2dx4f6jdfksbqazed0g13i16z8q2lvxrmldlm06cyxfsync0tsnlnktbhx92p0a7sljd53d437sdgqyjeeq3a\", \"2cvtkxxjldqi8oj9bvmbd493py4ao82kdxlkaza47j35zhnfe2cl3mkdw3e3sg91h6orx7cokg3hkdp9158v9of8jqshck4hve37q4cofecg8syokasr6h9xjbyqahkj3wb9ei5bkjjhcop7iv634hi4f93c\", \"mbfyuixtwx3iwkmthdgeyty8kma9kdhw\", \"4tup570ktb3w7z8e7wze56iutg9dgqyf8pxf6ywk4rw1nz30f9zm2xphbjb2j9guvr2peazbn2goiteija7wjfd1z0nkxr9syg5pmu0qylkgf9lokoztqbdnud4g52zcrwb41wwvcbj6w3ky72\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/371212\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"fqe2s39zdal8h9upj28uy4yxz93ap8sk1j3m81icpjlv7wefdo386lplvef6k5rvivrzsgt3xrjw3mxpje95nuxl1rd\", \"wg39111p8dpg3e1ukuqcsenmwskcl2c6ioldd4gyb2z6j0kwdu1dsusiwqalm6fbchemps0u3eeeiwgsgo\", \"avq8i8txouf4bl2brms4dzasqxdicdut29hij2x8zffc2xg9mj4y0mxveq1jk3tvtugxd00o113b7r11p6235oohz2wdr5qyhnqdfr5p64hw2yqzcj7np49blsaqdr1dkk9a5ip8uc4f93j1z9xuvfadgerff3dd8dg4894dpchc\", \"6o8iq6ovxhbykhnnwtpqjahlgirlqbmetpv9n28fx990qvwde35do1mj62i1tupt6mc09t79wuuvod6bmb5hpc\", \"85f2vhqa2qvn0vburwzw3ijxbhxskc6086qayc5r9oyjf1bqfd86vcllzq7vgsfd10ae4j5by04zhoz0jhspvtkhs3i1avdytzfq4yj5zbhvq89xfw4qgfal18lxghckujixv1i9v0r5\", \"0iqkfrwl17okqkm0aai0hresaskopgr3g79dxz2krvlxwsp5owwq0rkhcmqtactdhcfs2ouyvwe0qa3lxxnk0e6divu7epegmtb1qq3qoa66w1q40xm894fp\", \"orc6kal8fv6i5ehjkue7lnc11rwh376wrtj3gkkbrb722cpbgu8sacq1yijib9wlek9e064g6icwajuyvwz10dh82kfbdaqzhq2hmhm3tldt2kidc8j5os6ciax4ko8b5l1bbhokm21luurqjfj\", \"n4ak2wahb45jx1yl76dn89bzxeh2mocres9jbx8d2lfa3bhleis1izovn0m3bvesd1t8cwy7bpv36s5002iqud8g173logmuih2yweg6a02mxhia5rgakztszjsrzud11j9i8eagwqfw5asu1rk63e4g1k2dpl2c\" ]\n      },\n      \"params\" : { }\n    } ]\n  }, {\n    \"timeColumnSpecId\" : \"l6y4\",\n    \"validRowCount\" : \"pqfutbe3w4pq6u5c2cl8t8aj2cf5d8vdvot1nt9knlxhu95hiqls0fg9wz4xbi42633p0yhpln567s1fzymogn3lj9g02fc2gqghwa5hi7qt7fax05g309ozvnvcgeskt6l3qallvssu\",\n    \"name\" : \"Ngan Price\",\n    \"etag\" : \"doloribus\",\n    \"columnCount\" : \"e6ivzwrbg\",\n    \"rowCount\" : \"1l7pps20lilh723kmqjtf4saee4le7pt5pfitdfatvsho38hd5qj2c7lz6n5ovq43cxd15ct3r5e5k6868jks4s\",\n    \"inputConfigs\" : [ {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/369789\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"5vr0hsy4aombffd2jml8wgng1lnz60okxkf2ftk0gah87owfia86bzcphw4gqrdfl7n0f3x4v96zkrr1oga2mqqqcs5lrjzypvkb2z92r33fo52hrme8iwxti01uj8sstb15cs0owun9rltf5n5g3ptrkw01otquahu85vqej8zzfck392anciubcd30qzas6s4n\", \"snab7a6vm9cy3vgbq7ekyvx926xf25z82dq1dddqqql1k0w519reu2gexidk02qhmn9k44xfe7wovnvuzgcwtuq4elq21i9wkc768yibhd06wmbc\", \"ogymd8ijl4mpjb68osc8xmha3gspr689pw2puvasdl8kn4wildvtvsppsp3895npc1otl1kf4drzubtszo14x0ltqp8pvguexk2wbbjt2bh89eolgbugfqpddqstcxbcwcz73y4wvwxhwfe1a9uv69k1pblkydkb5qcau0j2rvcqikfsr76yi7s52tqthlu70l74zesp\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/432214\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"tb1rtn3a2d\", \"erqby0os4al9\", \"auntnqh67utdvpsxdyu0dgdm4kpd5x52zvocr9xkmc11plm\", \"9tn3cqxm33lkj3sphpf8yjigtkxzbyjwcj3zfzw3og64jl74uedggg9\", \"n6fuqjmuddmd6i0dni8\", \"ckovywmqn0ju9uoeaqao4qf5moijbcvyam5cbcpam5nve4n74wy616g9qh0u8zr3w8lct4dig6j86ctyajwhen9e0lgbkpjzdq53p1zxvl4u5dthy1fues1dssuz2e9elw0enab129d06k9tcdbw27p5z5ns8obggfq8eg8kd23zixnpa2sr\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/079419\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"9pgxjvav6u08080lz9f1f68a30vpt1zlxqa\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/161751\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"br5lx0ai3mtrdkouvngfk30ao6e49gr4997zzcfhbutnjc9a1uhurgu8zryefdgooffkcn8n5eekygbax7567rufxzq1sxwaj4csgnw8tvlk6e1bdejawo003ehf6x2qcd52rz0tqw6b9kk87m1o78zhx3lib3adg90zubfhi6kvk8n13s9ifhrsmm47q5dam5vbz\", \"tc41gh8g4yfjkbaoncfred75avg8ju775gwc0z5xbvu\", \"x1beup99c3ouqd7nl0zwbc1qicaalap9srnzad1hnu5ks2ygxa46djd55z3o3yexl5djv4936drlz3v1cxdgm8gcpv295t8gdem6dvvgolvp8seuol7z2r5ki2q2uip4ue22zqiwdwfhjzziw11qof6dwjztberdukjpmo5j9fzcf1m6gngmxolzf9u17x8lz\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/665871\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"kr2nhakyyhgmchdvoju3mp56y2kao6y37z2fv05jtwa9nsjm1vimabqghw4cxpe37rjlvi22139rnka6hshlg2frj5k8c75eo2tm7oadnfbmzp1tn6novkb\", \"2uz3ac6lh3hs5g2nlzgymq4a20b662xtc1c0qmkzmomcl6tgs5k368n165k6olrawfvcmu8i6sysdgazt44pvgilirxcjzpf40exafqmwobud7mz246x6y8cim7a1n8w9wcyhm\", \"z7w3pb0l4lef72hgyoz3qgkv8w7sqnwalse0m4g2s6vn31qad7fhnd21fg8dkum99e\", \"3t4x5teaiotdsdnba7m2wo4k8dnlrlreo2zgjp5hbxt2y8oyg9ofw94ry53e8q9bku5xyc3w4u1hy9278o3kbei000h4wsf052ifmgp0qfi3bpc83pjkgj1nwpprkz7fexaf2qqcxh3nakorn30os824z1s2rram6bu8nrk7a0suz5kbtv\", \"rk672xtxyltseos20fofn7qzl30mc7vzmd96by63pmebql5m8hfkhl\", \"afkfsubm233oylcejmht43kvcbtllf9es1a4dbj5o0r1f2azgrr1bhm2xcdopgvfwh1to0l2ljdfbo0chyws3hoecaulicxc6pt5tdgdh0h5b74jx5or70dl3sjahfxjasj15pp2drwx637m6joxgk7tragt\", \"1jg0n9f95oc44jz52tjrdsm5idnwnmohmskh02cmvbfypcoalixozamygkr6sm6clpljdb80k78i3jp39g5w07aagpxpdhqzi6mi3ci87sukjnphkggzvuvygqrzljrf1zaet14t1150cwxbvr4htjlih1wmwo7b\" ]\n      },\n      \"params\" : { }\n    }, {\n      \"bigquerySource\" : {\n        \"inputUri\" : \"https://web.example.mocklab.io/499397\"\n      },\n      \"gcsSource\" : {\n        \"inputUris\" : [ \"4t2ki4dmn8oaifsh2krvfs8acrayoq8pvdjfwldivj11ol9zh\", \"sbuk9nqvueimjvn6651lmmq8r7nlran2xpzvaf8q11pqorkdp0ocb89x1urf9\", \"jggpkhd5fkszea0971fqh1k5ojyba0ik15027knh2nfiowlzacet9ew1ypy9t6n2h8fb7wa5s9mvoe4md3m6hv4v1jda0h18gcxhnrrfpxxemjhwg1rictvx2i5bm1vfllisdo2u2jc77j9c5z546albll4olytu9kis471rb1flxmjjm9c233rjh1014k0pk\", \"5ad7go2e32xouvwc5u3uzr8y0x8mbw62pbek02df16kz5hna75n2j5nkazkeu\" ]\n      },\n      \"params\" : { }\n    } ]\n  } ],\n  \"nextPageToken\" : \"il9lbdkflnttk0s5g4dfywo495p56yglguzkals997q0tot9sf2wywmu7cesphzg2zgpq08chfg133fzmn4lmt56wmdcsx010ocze08vn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc56e0a0-9977-4e31-b82d-b13513df7c30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.829341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.tableSpecs.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListTableSpecs.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to ListTableSpecsRequest.page_token to obtain that page.",
                "type" : "string"
              },
              "tableSpecs" : {
                "description" : "The table specs read.",
                "items" : {
                  "$ref" : "#/components/schemas/TableSpec"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "aa69bfef-96a2-41be-9d59-b741aabf3cf0",
    "name" : "Creates a model. Returns a Model in the response field when it completes. When y...",
    "request" : {
      "urlPath" : "/v1beta1/n1zddy55xx9usz42ij77io/models",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Coy Treutel\",\n  \"error\" : {\n    \"code\" : 2110190154,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Atque atque aut nemo. Quia sapiente error nobis. Quas nihil et quisquam. Et quos praesentium saepe dolorem distinctio.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa69bfef-96a2-41be-9d59-b741aabf3cf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.827623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b0456383-b8b3-4f01-9617-ac65f320d557",
    "name" : "Lists models.",
    "request" : {
      "urlPath" : "/v1beta1/dsr6a4lz8b3n5750fpjz6v3mfl0o4znonndegrh83nk3ic7yrc41e9hxj9jsnxjb1fb4s6k9gsajbeiktg0ofplkas624xl51tqcvse0yxzng1ljuuv06f7px9/models",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"c7zsctdnty7z4qtgwm6u1luxhwqz83hisaznxo2xzkcc6ew3ik9dnmscwfuy03tlcf6mlld7l1dfhv6n56wy722l6ks5r4ki7z2ax270ge5fs3he9xnmwipimaj3scj61ahz8c87ueglkg7mq0qcagdx8x724zpzunq87jc7cdms889\",\n  \"model\" : [ {\n    \"videoObjectTrackingModelMetadata\" : { },\n    \"displayName\" : \"Ian Green\",\n    \"validateExampleCount\" : 367248553,\n    \"textSentimentModelMetadata\" : { },\n    \"textClassificationModelMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"trainExampleCount\" : 500020182,\n    \"translationModelMetadata\" : {\n      \"baseModel\" : \"kjv1abqgutayd022e2wgle5bhn5f4gkur436l9tch2qc0zdd5ud0vsmdptf2xcl94r7ln40lu29p\",\n      \"sourceLanguageCode\" : \"n68dx96g7jikxspvq2phulofkvy1lg6nbq4dmw19stcym49zmr9ootd9dsoy3\",\n      \"targetLanguageCode\" : \"ns0y5b87c630l1xe8y2xpg908nfg24qze6bj2yeky7k7enx28g2tvema0u48l74l3c0j9fbz0a4as0gv4f9h18kihsrmj38jr6y5fvi1112nuhai540mczd871rki12gtkix0hnpm5w47xgbmsq24yzebx7gbs0hyicfl\"\n    },\n    \"updateTime\" : \"2022-03-24T16:08:22.823035Z\",\n    \"videoClassificationModelMetadata\" : { },\n    \"imageClassificationModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/eitarafa/128.jpg\",\n      \"nodeQps\" : 1.339819984450019E308,\n      \"trainBudget\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/kylefoundry/128.jpg\",\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/joshuasortino/128.jpg\",\n      \"trainCost\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/terpimost/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/adamawesomeface/128.jpg\",\n      \"baseModelId\" : \"2duj\"\n    },\n    \"deploymentState\" : \"DEPLOYMENT_STATE_UNSPECIFIED\",\n    \"tablesModelMetadata\" : {\n      \"optimizationObjectivePrecisionValue\" : 2.0949523054848604E38,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 1.7545497210622192E38,\n        \"columnDisplayName\" : \"Dr. Waylon Wuckert\",\n        \"columnSpecName\" : \"Eldridge Wilderman\"\n      }, {\n        \"featureImportance\" : 2.8357177971355833E38,\n        \"columnDisplayName\" : \"Hoyt Herman\",\n        \"columnSpecName\" : \"Merideth Ryan\"\n      }, {\n        \"featureImportance\" : 5.809652531586384E36,\n        \"columnDisplayName\" : \"Blaine Boyer\",\n        \"columnSpecName\" : \"Miss Dakota Labadie\"\n      } ],\n      \"targetColumnSpec\" : {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Carole Leuschke II\",\n        \"dataType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : true,\n          \"structType\" : { },\n          \"timeFormat\" : \"2023-01-23T16:06:22.823769Z\",\n          \"typeCode\" : \"STRING\"\n        },\n        \"name\" : \"Gussie Hand\",\n        \"etag\" : \"rerum\",\n        \"dataStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"7hpnsof8h2iju22nabiqxlf4lwgczta28jwpef4\",\n          \"nullValueCount\" : \"ehb9edj03ysm22oz4vor7qrso37irlbywv59mlohh0i60cpqy0cf8xtt4c1142su6nf4gvkowt9ou1qcd4hdgovrv7u4bmafz9dgokqtoa1ej7ql2xc09k2xoz2d3b1u4m3u6cf8kiuuat5qsnee\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"9wlrmbzwi9uxz0azrpo02q3lueotxy6qwuxzg1ehxvrj4pve7e0dt06yk9xmdu9cq7amol2ju4hdugw7hojnqyqb4anxmupxdrwbc61fn6v2aise6ya1ifhvwtle6ma7c9o8dwa4uj3vcxfoddc15swaz\"\n        }\n      },\n      \"optimizationObjective\" : \"7bsn0ao4tbgmn6957frsyb04p5g930o9zawdxvdmow8tibhedrrcfmd913raccn6xhzk\",\n      \"trainBudgetMilliNodeHours\" : \"ju05kqgxei9b9lmrsfd2gxv9ad4a0yx1y1yhia7lta0ittnh3fade0dr66rksw213l4d0tibzsfmd5u4vn9zp0m7g605p4rsah9ecwhipgfhxuajfpihcm5x\",\n      \"optimizationObjectiveRecallValue\" : 2.5483883127187242E38,\n      \"disableEarlyStopping\" : false,\n      \"inputFeatureColumnSpecs\" : [ {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { } ],\n        \"displayName\" : \"Grady Quitzon\",\n        \"dataType\" : { },\n        \"name\" : \"Kevin Cormier\",\n        \"etag\" : \"aperiam\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Kacy Davis\",\n        \"dataType\" : { },\n        \"name\" : \"Shandra Klocko\",\n        \"etag\" : \"dolorum\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { } ],\n        \"displayName\" : \"Eleanor Stracke\",\n        \"dataType\" : { },\n        \"name\" : \"Miss Byron Botsford\",\n        \"etag\" : \"dolores\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Salvatore Kilback MD\",\n        \"dataType\" : { },\n        \"name\" : \"Ms. Tonisha Simonis\",\n        \"etag\" : \"quia\",\n        \"dataStats\" : { }\n      } ],\n      \"trainCostMilliNodeHours\" : \"r0o2r0g40m9\"\n    },\n    \"createTime\" : \"2022-04-01T17:27:22.82463Z\",\n    \"imageObjectDetectionModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/timmillwood/128.jpg\",\n      \"nodeQps\" : 1.1016980231921956E308,\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/digitalmaverick/128.jpg\",\n      \"trainBudgetMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/seyedhossein1/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/a1chapone/128.jpg\",\n      \"trainCostMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/idiot/128.jpg\"\n    },\n    \"name\" : \"Latoyia Runte II\",\n    \"textExtractionModelMetadata\" : {\n      \"modelHint\" : \"v36b10vdmm7ejrv38x0cuqactcfbippkikj1y3fg9w1kwwpnlsr039g7v68j4o7s16t1bn1urdn5a3mgon23vqbh59ryhr1f5dxyy62c278csuk66ctq2gj8yta6vzat2qk8b01tqwryrmspn08htwjhz8vz53nacnxotzfv1buaxic\"\n    },\n    \"datasetId\" : \"hwlg\"\n  }, {\n    \"videoObjectTrackingModelMetadata\" : { },\n    \"displayName\" : \"Lyman Littel\",\n    \"validateExampleCount\" : 1450193503,\n    \"textSentimentModelMetadata\" : { },\n    \"textClassificationModelMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"trainExampleCount\" : 654211472,\n    \"translationModelMetadata\" : {\n      \"baseModel\" : \"eemny9z599whpqtfoljw2yk9t7mj6sndhjrl54s6tnm077x68fidxc4htihtz4koaf574vj79sqnrravgu4nuk0ja\",\n      \"sourceLanguageCode\" : \"1x4f45mmm8s1x68dxoyi3d25kvm235atwk3ikkczactqxdzkogexwfpysvb2zsvccqfp23bqwdo6fj087s3j8h8xe10ukjtu6agnrg32ly5v08fkiys8tufqgldy36u2mad5hik9pmbfx7odj9wce3812n6mudcp\",\n      \"targetLanguageCode\" : \"ovc6oommihdlk8l5cvtlbxyt06o05zj0s8vj4js5yxrvbx5j3hyv9ulaisamkefdc03boqyib6ikizi26cel4g2h08ofdo1th745nx8bjj3g2d7w25g0b1d6i7lxosubbypb5ksookudmxx3a8up4vpbb4v9egasllcfuzsgezf9qqfe8ca23gi\"\n    },\n    \"updateTime\" : \"2022-10-03T15:54:22.825151Z\",\n    \"videoClassificationModelMetadata\" : { },\n    \"imageClassificationModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/ludwiczakpawel/128.jpg\",\n      \"nodeQps\" : 6.287393712964343E307,\n      \"trainBudget\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/helderleal/128.jpg\",\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/kevinjohndayy/128.jpg\",\n      \"trainCost\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/guischmitt/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/apriendeau/128.jpg\",\n      \"baseModelId\" : \"q2qt\"\n    },\n    \"deploymentState\" : \"UNDEPLOYED\",\n    \"tablesModelMetadata\" : {\n      \"optimizationObjectivePrecisionValue\" : 1.4935442785348659E38,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 2.907798784941424E38,\n        \"columnDisplayName\" : \"Gilbert Prohaska\",\n        \"columnSpecName\" : \"Ricky Fadel\"\n      }, {\n        \"featureImportance\" : 4.2455911111419126E37,\n        \"columnDisplayName\" : \"Mrs. Michale Osinski\",\n        \"columnSpecName\" : \"Carl Schulist\"\n      }, {\n        \"featureImportance\" : 1.7102576863774623E38,\n        \"columnDisplayName\" : \"Loriann Jaskolski\",\n        \"columnSpecName\" : \"Danial Mann III\"\n      }, {\n        \"featureImportance\" : 3.99136214733813E37,\n        \"columnDisplayName\" : \"Yvone Spinka\",\n        \"columnSpecName\" : \"Ms. Cassondra Moore\"\n      }, {\n        \"featureImportance\" : 3.370773242388267E37,\n        \"columnDisplayName\" : \"Andre Dare\",\n        \"columnSpecName\" : \"Celia Daugherty\"\n      }, {\n        \"featureImportance\" : 2.6606491765019046E38,\n        \"columnDisplayName\" : \"Bethany Nolan\",\n        \"columnSpecName\" : \"Porsche Schuppe\"\n      }, {\n        \"featureImportance\" : 2.6563153680777768E38,\n        \"columnDisplayName\" : \"Bernarda Russel\",\n        \"columnSpecName\" : \"Juanita DuBuque\"\n      } ],\n      \"targetColumnSpec\" : {\n        \"topCorrelatedColumns\" : [ { } ],\n        \"displayName\" : \"Ms. Phil Skiles\",\n        \"dataType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : false,\n          \"structType\" : { },\n          \"timeFormat\" : \"2022-09-24T14:23:22.826204Z\",\n          \"typeCode\" : \"FLOAT64\"\n        },\n        \"name\" : \"Chas O'Reilly\",\n        \"etag\" : \"placeat\",\n        \"dataStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"fgvvfpmyom42ykfj9upg4phhm4m8pov83rx7zj6reeigd03ge84fzojiqxlk7g6pc0p3fo7uuovzgwb94l557pl8368zvuuyvu2e8hefq5eaxp1oy6zv3gyhmbk84wrhli8mk3eacg763417kl\",\n          \"nullValueCount\" : \"mzk145io0gg8wzhwy2p2mk1jlutafofthv57kfliukk\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"j2ccsm28x1pzcaqube299r030lxjj6ri9sliyemwfw8s1bqzwtaml1hcukk8yww6vimh9k9sdk9qkgtjvup038myumgko9x8pkghvxdiktoej\"\n        }\n      },\n      \"optimizationObjective\" : \"nkohq2vjqj0q7r24vkvbeybxiemxmu3kvrq2q8dgqrjj6qduvs98nt2xvs61fp8kv0h1f120o9wu\",\n      \"trainBudgetMilliNodeHours\" : \"4s4rxc2i4rx1k\",\n      \"optimizationObjectiveRecallValue\" : 6.025760268418465E37,\n      \"disableEarlyStopping\" : true,\n      \"inputFeatureColumnSpecs\" : [ {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { } ],\n        \"displayName\" : \"Ms. Dick Kunde\",\n        \"dataType\" : { },\n        \"name\" : \"Lenard Hessel\",\n        \"etag\" : \"odio\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { } ],\n        \"displayName\" : \"Nia Sauer\",\n        \"dataType\" : { },\n        \"name\" : \"Angelic Graham\",\n        \"etag\" : \"aaaab\",\n        \"dataStats\" : { }\n      }, {\n        \"topCorrelatedColumns\" : [ { }, { }, { }, { }, { } ],\n        \"displayName\" : \"Miss Germaine Ortiz\",\n        \"dataType\" : { },\n        \"name\" : \"Bernie Kris\",\n        \"etag\" : \"rerum\",\n        \"dataStats\" : { }\n      } ],\n      \"trainCostMilliNodeHours\" : \"0mjk2jvmfwwm6hlf8sjkjss8k2qq9q2b5z21a8s0irk8pguia58k05f7deyx8xnstovuhz5fz47swxsqsg6m72syz1we64oomt6u9vu1q2ooyrojtdnudevqacr6jz800gbvpctgsqtpwk926xdosl\"\n    },\n    \"createTime\" : \"2022-12-13T17:57:22.826874Z\",\n    \"imageObjectDetectionModelMetadata\" : {\n      \"stopReason\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/curiousonaut/128.jpg\",\n      \"nodeQps\" : 7.966244635745467E307,\n      \"nodeCount\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/digitalmaverick/128.jpg\",\n      \"trainBudgetMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/scottgallant/128.jpg\",\n      \"modelType\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/nilshelmersson/128.jpg\",\n      \"trainCostMilliNodeHours\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/_pedropinho/128.jpg\"\n    },\n    \"name\" : \"Dino Parker\",\n    \"textExtractionModelMetadata\" : {\n      \"modelHint\" : \"fr3qu56hjteacaimkyttwgrcoc837v8uu234wqghoojxrjiipv63ae27e685qyvuxti1c5rsnucny0yi3notdshj2dh9yhac8fjm3jmiarbakj578vdk8fa51pkjfu1h3n15vji5yaa557pxivmsjp59rdbrelz\"\n    },\n    \"datasetId\" : \"xt2f\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b0456383-b8b3-4f01-9617-ac65f320d557",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.827371Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListModels.",
            "properties" : {
              "model" : {
                "description" : "List of models in the requested page.",
                "items" : {
                  "$ref" : "#/components/schemas/Model"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to ListModelsRequest.page_token to obtain that page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e5cb32bc-5ace-4ea2-81ac-09b59c929264",
    "name" : "Lists model evaluations.",
    "request" : {
      "urlPath" : "/v1beta1/q6mbi66cugl1niod319g8edsknzu1l0x64rzt541xf9u3mfnwxnel7t5clxbdb9eh6rs3hrfr7vznp78qdbi8k8uteyifspg7uszg/modelEvaluations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"modelEvaluation\" : [ {\n    \"imageObjectDetectionEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 2.277261565382306E38,\n      \"evaluatedBoundingBoxCount\" : 2003646471,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 1.5963442568264315E38,\n        \"iouThreshold\" : 3.124786146849077E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { } ]\n      } ]\n    },\n    \"annotationSpecId\" : \"99ak\",\n    \"textSentimentEvaluationMetrics\" : {\n      \"annotationSpecId\" : [ \"aycji5wfvob1zkrko8b6jkfjp7vddqt2ygl0be9eukafjzywgunwu8cn28nlpfj0p41kix7car8ee0z9x0j3ucg9a\", \"vdnpzjhi84mpqc4gmvszv77mym1qunon6o1k8jn88gx0przjw3dhbme9pwjmdngtdhuu4q4wwlka5qu1ppastun4cpsczazw0z265ll21zr9fl1lzbp0h08atya4s7wj25c6xbdmzkestt8s6f4p3z0ko42b8j7jb\", \"gyoj07ija7wzmycm2ubjdg9noq4wtizm90n3dntra59neugjjixibefcibjwh9ghfkusx06f7y4oyc3t6iq0ewmdfsvj64z4l518kvztw9teapf201h8idt0q1p110sfyz9hufbzr5z65cekn7ura6ymumz3h8bhsd16al12swuy0u1793m0\", \"iswoan8zqs6bsg1uqmqcw7roz043tjdk0n27e2s9jwpmnqvqcxict6v\" ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"6nudoe2jlj9cl0f2uvbzup086xyijl10cnudolbzy3cef3fzfv0xcbkdkm8mhzrzg1kawbdn9rux65qm7c1prm3xxhghqv9elqmyrpy36i9dxc0mdeg3771zjx2v1u79advj6qnsp1vf87lo3g8zt93\" ],\n        \"displayName\" : [ \"n3rq53p0h1cuq2v9d23x9cdssqvgntil21yr30wokuwzp12c42zils68akmswnonwt1ukqdxziayop0l46v023b6brdp7be0ump2ir66y9mx\", \"oy607bbktrtojo4pr88w8tugdgss4tzoxteqw4gubeejh65llh0nbajhaaw46z\", \"z2a527v2iw34rxr1s4by38jdas1xvuhcap45o4gvky17ff0y02\", \"brg4ft6xg69fqind1581sbmiqsxflrp80j8bqxqt55ls\", \"wezokxb0z7l01il1t9ljrnhjbkvc8fqf6k4kd5bmy0gflk6ulp3yxt2ok60sci9phqbzw7u7v3oin4v6db0ufk89u6v7qli4icsm2bsazu3iwotaoij9t6b7ppj1oihl8u4pstpr151z03elyn5xytqhbu9miodnbnn099pnd9vd7dvbzx5f3gzrqu0e6z8vn\", \"10mfkyfhh72tjvh5my8hoaafk964mlwbtywk6o2ftp169a2xeqopiod9xzbntw1iec3o5nyq01h3mtord8m2gbe7zxw\", \"bvl5r02dlif3sjq2e3hrc6w5ydxvf7epgdhd6wsif3l7gzzahyfhxpdzcj2d7sbbrb5t2q9izr2o98yorf1pfgakafdyhqtda7jxcgvw88g6lu8j54dzfxnv8xym93g66utyudf1c8p5mjw\" ],\n        \"row\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"precision\" : 2.3517553650117593E38,\n      \"quadraticKappa\" : 2.137071960860224E38,\n      \"recall\" : 2.0072369889584048E38,\n      \"meanSquaredError\" : 2.7447071256387487E38,\n      \"linearKappa\" : 1.958628591403138E38,\n      \"meanAbsoluteError\" : 1.3678933096317032E38,\n      \"f1Score\" : 2.1591047415713996E38\n    },\n    \"createTime\" : \"2022-12-11T17:11:22.819875Z\",\n    \"displayName\" : \"Renaldo Kshlerin\",\n    \"name\" : \"Young Emmerich\",\n    \"translationEvaluationMetrics\" : {\n      \"bleuScore\" : 5.074666136113493E307,\n      \"baseBleuScore\" : 1.613063078233758E308\n    },\n    \"regressionEvaluationMetrics\" : {\n      \"meanAbsolutePercentageError\" : 1.8584313694483635E38,\n      \"rootMeanSquaredError\" : 2.1256353928184586E37,\n      \"rSquared\" : 2.531072963741578E38,\n      \"meanAbsoluteError\" : 1.62942457032872E37,\n      \"rootMeanSquaredLogError\" : 2.772847224576811E37\n    },\n    \"classificationEvaluationMetrics\" : {\n      \"auPrc\" : 2.07452793224205E38,\n      \"annotationSpecId\" : [ \"gg5l4xhkaa8ggluadgtmfbyf88q4lxilm1tzz\", \"5nal2rgtpbq7r8504an0hf9j1w5d5vrcwclv4nh9zw3yi3768vf4sm1fs6w9mrkc9pj39hpxktkd5hly3ui50td10j3r5gf44uix566yxvnr5bmnwieyd5tifjri9fjcir39cuekx6x7kci2p9923lux\", \"ykxykolrdknipiz01xuyuqwte2t44owkrjk12rbs6lu11k0gres5s4x1s\", \"jn1djr68t216bdsruc87ph5p06auprgo3vamjt3tcmrv8apc9pun290hqaltz9fu06puu1g8dflyjja16sg5nqf409ao1hzy7h3vy3f5ll6556r9zgztf28ge3txg557bzkv0zqpv8f6mxgkjdrr8j\", \"8316q7bs5nuxhs5rl529gghgnvt5a77hgj8knvfl5dm0uxbtfhfx9gy4r5smkxkkdk0urd6iiki7r1p5k1mnp4bbiebq0zzu6bgcus03gp81zzavinzjjby0ksdtiek4z6cfncka04c3jcwirhfh9\" ],\n      \"confidenceMetricsEntry\" : [ {\n        \"falsePositiveRate\" : 3.2106651950026085E37,\n        \"positionThreshold\" : 600265838,\n        \"precisionAt1\" : 2.8096889572291916E38,\n        \"confidenceThreshold\" : 2.0818318976699235E38,\n        \"trueNegativeCount\" : \"gqgtsajyypnf3us2g5a8cazel4v2qmieg1r8lqp3uyn5lke25amkm8dae54fi4wgftejxi45a9ybcrhh7tv6mnxomz7ryl0amdew2tt5mmlus6f384xo4v5n00zaw0ngpvq\",\n        \"precision\" : 1.7796989291172732E38,\n        \"truePositiveCount\" : \"xonti30ovmsb9izm4zt6ej44aqbs1s8xpbef9dd5zaazz2nft9oz09puracf1pp49yul3n19ua6vqo3t5hup7omx88kt8txex0eh45hlerwyhfr38fyx7u11c4t4830djykco70v38suc7ghliy9\",\n        \"recallAt1\" : 1.3963989585716806E38,\n        \"f1ScoreAt1\" : 1.1466932781605026E38,\n        \"falsePositiveCount\" : \"zpew5djfqeokzb9newp59f0q56idvnvg4q3n1dpw2yrd9h078xq4n6xsjsuz2vtiojh95w56irwtzz242bzqd9uvelu2o8pkqw85g439mhsl5pwbdn74hobinlzfbnl17gyb5zocxsvffmdsdmrfio4\",\n        \"recall\" : 2.5717389702385513E38,\n        \"falseNegativeCount\" : \"fq5xnpp04g3qf91emohxmcrew096kou42iobl2z4habrxc2veuoi37dc5oljjeyb0fmkp4ehr10x5p21bayonlj\",\n        \"falsePositiveRateAt1\" : 3.328301308328209E38,\n        \"f1Score\" : 7.344277680432463E37\n      }, {\n        \"falsePositiveRate\" : 2.9061415756921214E38,\n        \"positionThreshold\" : 1595497432,\n        \"precisionAt1\" : 3.1641500238184537E38,\n        \"confidenceThreshold\" : 2.6273941355751777E38,\n        \"trueNegativeCount\" : \"2psqkrw1bvnfr4tua2p6rirm6ukelorzvtajjr650kgx86q1sr6nvq5yzlzhdqfz8da\",\n        \"precision\" : 6.049031436045092E36,\n        \"truePositiveCount\" : \"k5dfr8q2lcmqz8an7wkymyjyhdj6hcdyyh26n8spcq58k3xqn8y34bj1pkyzcwbxwdnap6qxt71vh03uwybfvzwqnnhmggrs2v1qet\",\n        \"recallAt1\" : 2.8971939539422834E38,\n        \"f1ScoreAt1\" : 7.238132710820901E37,\n        \"falsePositiveCount\" : \"vcou6dz55aekn3unitfjp5cxjm0w\",\n        \"recall\" : 1.684490186142841E38,\n        \"falseNegativeCount\" : \"1hcc9w7x0m16f31fj193q3ms6wj918gfvf07igg3k2vgww6lmklm9u8gioxhfnbg0ch3a8hlytif8zxu80n1b9qdfpfdqzc75wqdkm063x89jdn5mdhym3b0lsd1qvkiky4n4yws6tn1thjk4v1yolr03lemv0prxobfmfdpc0zbm31s15c2nyfnpcv\",\n        \"falsePositiveRateAt1\" : 4.1501668188209826E37,\n        \"f1Score\" : 1.5114790278507088E38\n      }, {\n        \"falsePositiveRate\" : 7.962693076983597E37,\n        \"positionThreshold\" : 1355549066,\n        \"precisionAt1\" : 2.787015875998832E38,\n        \"confidenceThreshold\" : 9.434000703112126E36,\n        \"trueNegativeCount\" : \"uvx76xkwh8x5hdpbuqoojmkeyhel6yvevyqdpjgtmtygr0fq6vdsppx6bjnscqcikjzjddcdpxoci9m5tcrtrz83k6yqe9vc1509pnk8\",\n        \"precision\" : 5.886612688057551E37,\n        \"truePositiveCount\" : \"6g1qdjqkoyqlr7ass1tt4fg6uj3kthf1bbz2brux8zrxu47y6thtc37sdz6ejsku88pmime99rkaguy0jgaurw1yr43je3h1xjzfir2rhymwc1mhmshq9c5awi7k4sxmjlszvv\",\n        \"recallAt1\" : 1.508419914216352E38,\n        \"f1ScoreAt1\" : 1.4249467447607278E38,\n        \"falsePositiveCount\" : \"2sbxmcws50zd4dr5isv066l0zy0cnpfv1n5oijme\",\n        \"recall\" : 3.0296894559167362E38,\n        \"falseNegativeCount\" : \"yoh8zsysi4zr4osi9kt6zfmm07cxvokpo37g9nstuuxrhd4zfyucfingkslpnh4hnqj00bgl4ym0lhcnxd7j31061fgjnedn84h3yusfsuz1v9cb\",\n        \"falsePositiveRateAt1\" : 9.995946792310576E37,\n        \"f1Score\" : 7.761727258071077E37\n      }, {\n        \"falsePositiveRate\" : 4.000327926951666E37,\n        \"positionThreshold\" : 1207920497,\n        \"precisionAt1\" : 2.0537516529714572E38,\n        \"confidenceThreshold\" : 1.0887801825600864E38,\n        \"trueNegativeCount\" : \"icxxrd5i0j0e1eb0f4iwksh7uzik2valjcaymc30bxvqtifs2tjwrh80ndve00ffif56nsgwz8nfpiy05fxiya\",\n        \"precision\" : 1.20005477552563E38,\n        \"truePositiveCount\" : \"dzn1ns5ibr8oa70qv2auxbmhxxxjz5vpxb6mvfmnqgg35li0tayblyv9avl6c8z2rks7ownipjxv9uugg5zz8p73cwzcickzbjd2mzfi8ci6oign0wx1\",\n        \"recallAt1\" : 2.537838112613502E38,\n        \"f1ScoreAt1\" : 2.0345075913446455E38,\n        \"falsePositiveCount\" : \"dt8ka73zxr2wqlp10zf1bxfn58a1s3x363zyrq42gbxol8n8g0xj636hjpowiwuofcjikpecfya768gt2doeu4oe4rloelnybm0dxoxcijsp357wlpets359vdlwpo5eihp15ftvmnsxh0gg9tfr04lycodq33m38mezx3qcyih\",\n        \"recall\" : 1.6695913888158007E38,\n        \"falseNegativeCount\" : \"1s9ocqvo9dznvvjgm94u3voz838ja0uql95wtolqlgvj2udf232dm1po910i6gu\",\n        \"falsePositiveRateAt1\" : 3.248977993034028E38,\n        \"f1Score\" : 7.149604091312516E37\n      } ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"i7ejb56yys1vj4p669u5uv5nybmihac8ky3m1n4wrv\", \"1irdxpsit4nekc7vl4vvrubexvpccug55ltp7lrbjedt40q3atsi7ufv44icuh17soar27\" ],\n        \"displayName\" : [ \"6ebk95ii04q4icr2og9zucagdjzvzcbxwrkml6kjnm5apt9mcpimxeajkifuk2qtyet2gmrqvwkb99zp5ftk89a3eriqem21zgy8ohtbwh0fbujkk6p3vyjrye8z\", \"iyzcl60ik40jzqhc3mewci25pkj0060ql5416jxwljwfu1kaxr308cakx4g9elt8vt62p490q5fjccdorkjjsgeifs296u8iuq9nzkauit4fvhalpnnj\", \"c3opndo2m684rmzb0dvu0pdzvj93fcnhgcnfvc5qkl6ftqclrotnf6ccqnst3i1x25prz7whkwcd8ossdb0vd8uytldxjg\", \"kophwa4713b4gfhqbi6oa297boqldkpr8gvtag6gtru7q9z7f1teta671ftd3bimabni33nddhu1vec5o9nohvbig4d2gsw8ui0yfem2tbmj0vwd1k5ye7p4hcelnerrxh\", \"jaxrtxnp5k5p04mntuph9aqm7os0iwjbobb8nzeyig7xplphngptqlr26aoun7djk5e1o7evol76op6fzrcoh0k743wnv1wk4fm2yustzf5dnl2x04apvkshl3lcnsvjkl3gcc4\", \"0nk1z3jnpezc45aehqvxozl2jtk2iuveqv30hk0vmdmp2yipnpzdxgkbz3okfjtemltq6inqnnv5uqa4\", \"qomahd6n16apqdvh9pr3a3ozb9famf39i9pcwexchctfho6xuxdd7tjhh0kvjiz0es7brn70tpmjxc95hpvypeow0pnna9pm82zn6tj71eb9pbslguq\", \"mg7kv02ek4ieh11uu7ejjgqwv34e69izey6itq5s2s09tho2cu4v57yfeon8leucsj7xwsl9r0w7zhtu7qa01omiajbvnapkd8y43txkjf5k3i463o05lnp7z1wv\" ],\n        \"row\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"baseAuPrc\" : 1.7596457113509246E38,\n      \"logLoss\" : 2.541033229009056E38,\n      \"auRoc\" : 1.0027278126918318E38\n    },\n    \"videoObjectTrackingEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 5.852725001070401E37,\n      \"evaluatedBoundingBoxCount\" : 887124792,\n      \"evaluatedFrameCount\" : 1212694702,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 1.705245410681757E38,\n        \"iouThreshold\" : 5.005734509732913E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.0155255062087187E38,\n        \"iouThreshold\" : 1.5288798032210386E38,\n        \"confidenceMetricsEntries\" : [ { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.9419388158620722E38,\n        \"iouThreshold\" : 4.081573680487224E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 3.3803949477338178E38,\n        \"iouThreshold\" : 1.1744199959231883E37,\n        \"confidenceMetricsEntries\" : [ { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.1888611020870103E38,\n        \"iouThreshold\" : 6.897973564681257E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 9.669789367177114E37,\n        \"iouThreshold\" : 1.2805282001708318E38,\n        \"confidenceMetricsEntries\" : [ { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.912892026568769E38,\n        \"iouThreshold\" : 1.4706163917209839E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.6232882520465493E38,\n        \"iouThreshold\" : 1.973020615146197E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      } ]\n    },\n    \"evaluatedExampleCount\" : 825499473,\n    \"textExtractionEvaluationMetrics\" : {\n      \"auPrc\" : 3.339683682246755E38,\n      \"confidenceMetricsEntries\" : [ {\n        \"confidenceThreshold\" : 1.610830395747236E38,\n        \"precision\" : 7.805872548957749E37,\n        \"recall\" : 1.788558911146554E38,\n        \"f1Score\" : 1.9686375186233865E38\n      }, {\n        \"confidenceThreshold\" : 3.0261794642002724E38,\n        \"precision\" : 3.3851990840924688E38,\n        \"recall\" : 3.239805371719042E37,\n        \"f1Score\" : 2.3877869372096566E38\n      }, {\n        \"confidenceThreshold\" : 1.741399814122954E38,\n        \"precision\" : 4.329602553813662E37,\n        \"recall\" : 3.204741452723125E38,\n        \"f1Score\" : 4.3297911336652125E37\n      }, {\n        \"confidenceThreshold\" : 1.0898506259008894E38,\n        \"precision\" : 3.160696269716634E38,\n        \"recall\" : 8.413959135633526E37,\n        \"f1Score\" : 1.6972226192170577E38\n      }, {\n        \"confidenceThreshold\" : 4.047537117508244E37,\n        \"precision\" : 3.3151087893892014E38,\n        \"recall\" : 2.7802732698972135E37,\n        \"f1Score\" : 1.1918264624438713E38\n      } ]\n    }\n  }, {\n    \"imageObjectDetectionEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 5.847085585176511E37,\n      \"evaluatedBoundingBoxCount\" : 1424979320,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 5.876277833835752E37,\n        \"iouThreshold\" : 1.6782703814803007E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.751485941997893E38,\n        \"iouThreshold\" : 1.7394938600359978E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 2.8245622789586008E38,\n        \"iouThreshold\" : 2.402571068373518E38,\n        \"confidenceMetricsEntries\" : [ { } ]\n      } ]\n    },\n    \"annotationSpecId\" : \"t2ah\",\n    \"textSentimentEvaluationMetrics\" : {\n      \"annotationSpecId\" : [ \"4f15jihtm6q7wlcn50k1s41y0tval7x367eha2hz8irjsdlfzk6j25zj89z46m7ntnr2nr9kz27u78wv8ih4pqzknwkj5skwcglhwwn7ft\", \"qkpaou82hnddan4cjmr99pwwiefjmqpmt3fs0i2y6z0xdg5c18h49d1rgq4kjqb\" ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"zkzqg5oemhpma8lq3aw79857zud\", \"y0j4ut0qrkxfc84x92h7oawq2506xz7xe8wfkcr93hnk4aq\", \"vyhcgjaryt87u28znwe4c3aih79zhi8frj7ogq4f363ns161u0m6th1yc639a7nzaqrgt\", \"ns5cuqptuxtemxyyjgzlom0cag3vihdk6amup83fidpifjfpd9mv484a2pm1la454q7uzbz97nz85jlectz920omw614eanuyvxn9ij\", \"uxsz40iwbwxn6q4lfrhhr8zrj\", \"f9bmv5qp0oqxkkjw4qxrt9glu0v48yde2wnjcw3tm694jx0c9rxi8d4sq20893tf55dbm7jrdy9gfmkbrsmdh3au147l9irtjuuarcrnlbop089cu38pwmkgu6w\" ],\n        \"displayName\" : [ \"x9cfjst8c5n4wtcb7wen1mz3tcgrdmqrvuhu4oavm933fnlytbxlw2r5dq1hp4hmtg3vmt2d83elp72a7h3nm118mkygtv6yyuz75f6ytiefc18hrx9cc8xf5aoleqy1def8ynuxmrlrn6r7j016pua71fpm3atsga1jcc\", \"46qjhwvpfjbx6evt71qnyqmcs9aj7jdmqf6b5hjqhlrzkrqozlnyh85l1dtptc97hgq5\" ],\n        \"row\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"precision\" : 1.2327036766044153E37,\n      \"quadraticKappa\" : 2.326394165929006E38,\n      \"recall\" : 2.2490444145294534E38,\n      \"meanSquaredError\" : 3.372919554758781E38,\n      \"linearKappa\" : 1.8438633009836642E38,\n      \"meanAbsoluteError\" : 7.901860278209324E37,\n      \"f1Score\" : 3.0891506503982536E38\n    },\n    \"createTime\" : \"2022-11-17T18:11:22.821367Z\",\n    \"displayName\" : \"Jazmin Krajcik Jr.\",\n    \"name\" : \"Mr. Warren Gleason\",\n    \"translationEvaluationMetrics\" : {\n      \"bleuScore\" : 1.0078994899575223E308,\n      \"baseBleuScore\" : 8.976788722467E307\n    },\n    \"regressionEvaluationMetrics\" : {\n      \"meanAbsolutePercentageError\" : 8.2597030005732945E37,\n      \"rootMeanSquaredError\" : 1.828488975729127E38,\n      \"rSquared\" : 2.444984892353711E38,\n      \"meanAbsoluteError\" : 6.273845268615342E37,\n      \"rootMeanSquaredLogError\" : 5.47252687780643E37\n    },\n    \"classificationEvaluationMetrics\" : {\n      \"auPrc\" : 5.823915003145984E37,\n      \"annotationSpecId\" : [ \"suzvfgeanbnuaq9\", \"433py0pdof0k0ha9ryxcc1znpe6kd3ksdhk3vsmr5p1fvtptterd7jtmalu641a6p6cgu0xs77fn4e6mf7aca7ea5cd\" ],\n      \"confidenceMetricsEntry\" : [ {\n        \"falsePositiveRate\" : 3.2407214200711908E38,\n        \"positionThreshold\" : 117413046,\n        \"precisionAt1\" : 2.6083538825101034E38,\n        \"confidenceThreshold\" : 5.59018071713026E37,\n        \"trueNegativeCount\" : \"r5fclkdofwkx26ddjp5oh42pisqezg2frsi20dgzjiany0ddbgowveniojbvhc3bdjf5v20roij7i7g1215oicznaddccg\",\n        \"precision\" : 9.363575578934253E37,\n        \"truePositiveCount\" : \"gdonxkb3oaq284hhq4lhnbsgb7ee84da9sbpu7gfx9zt3zv0pabp34i8ivlufozyfd0wqkv4goxauh2b0or07hrye202udlp3p1t3h3kqfxm0tgzufqmb9nt3aaenucr0svmntwbm2jw449wbrgnb4vakc42ljjgn\",\n        \"recallAt1\" : 7.311966983793339E37,\n        \"f1ScoreAt1\" : 3.2911475998881962E38,\n        \"falsePositiveCount\" : \"relu4ynqp30zkie1kl4yzy3y4krqkyzk2\",\n        \"recall\" : 2.573825376807992E38,\n        \"falseNegativeCount\" : \"tgh4ou2z95l8skmz4s6fy19tr19dxqzoazcbxztm7qc7dsm2gjlzuqr4cte96tjpi0ex14n9gij9fqa6d0x139m7j6r1dr8wpkhdkj3bipczhyed7s1zi490ghugr141jmv9b2b7r89gk0qhy9yfudlyzhyjb8998rzeyr18\",\n        \"falsePositiveRateAt1\" : 3.2147085272078577E38,\n        \"f1Score\" : 6.450099654722339E36\n      }, {\n        \"falsePositiveRate\" : 2.3221536344009302E38,\n        \"positionThreshold\" : 205378291,\n        \"precisionAt1\" : 7.719580923654628E37,\n        \"confidenceThreshold\" : 1.944912315092109E38,\n        \"trueNegativeCount\" : \"c8vx4id4omy98v7bl6a645m7ue9ugentcc43\",\n        \"precision\" : 8.226857197220897E37,\n        \"truePositiveCount\" : \"4hbf80n3p5kxxzlc5pt14m36tvag3kko1s8h77k8oix2stmnyqs8szu6janiz0lee7hip6dcpos20d4e15qwhdl0o312so8epm46uh50kud3cm6hvpm9vy7ehr2g4zq984bxq4lvcsj\",\n        \"recallAt1\" : 3.103667442642706E38,\n        \"f1ScoreAt1\" : 1.082145012428464E38,\n        \"falsePositiveCount\" : \"sdkind933244ddlmmyk9a7x82blf72yrf3s9n5crgzrshn03pq44ceff0gwxq1d1wmd820bydubms9501cidgi73nqioajkikdhd7vdlsy4eubix1dp2s0u546q2cv95l\",\n        \"recall\" : 2.574336544161604E38,\n        \"falseNegativeCount\" : \"x7zr30ieuhnwkcrvjkjszjygwr6u9n4pb1sfsulovubukemh10qfw2gta8pie47u2k2yyb\",\n        \"falsePositiveRateAt1\" : 1.2019185834220209E38,\n        \"f1Score\" : 6.355712507241146E37\n      }, {\n        \"falsePositiveRate\" : 1.7106415948987617E38,\n        \"positionThreshold\" : 1627270517,\n        \"precisionAt1\" : 9.036837976027062E37,\n        \"confidenceThreshold\" : 2.8867902313868113E38,\n        \"trueNegativeCount\" : \"2nvvn8uuunonl6peciori832vnwzobo3plk3zdnc6dirwjn5s2yk32jqpugni4uvvc3pz9vzu9lrpw2rl9013h05llel2ia00g1ujobcn8z3nhx8c3u\",\n        \"precision\" : 1.96181952245929E38,\n        \"truePositiveCount\" : \"dkne6xdeeje68xhlf0ykd0c0a9zk4g7k5btkvplwnrs7w7dsnyshal\",\n        \"recallAt1\" : 1.2563457008101671E38,\n        \"f1ScoreAt1\" : 7.7688505799834965E37,\n        \"falsePositiveCount\" : \"fwx7mf9ombm5fjzg0scp5e8okksw5k0wji7eg4hxs691n359ho03832w1pzc4ip5ehgpsq2p6v49yr4z48znbhbh2cuhk1rlda32b33danxpguphh\",\n        \"recall\" : 3.07573353923909E36,\n        \"falseNegativeCount\" : \"mw7r2oucjyled36nmjakwb0rcun4\",\n        \"falsePositiveRateAt1\" : 1.6146427100535788E38,\n        \"f1Score\" : 1.7601332007595475E38\n      }, {\n        \"falsePositiveRate\" : 5.868544361459227E37,\n        \"positionThreshold\" : 1720512147,\n        \"precisionAt1\" : 5.955836485606807E37,\n        \"confidenceThreshold\" : 1.440256391885906E38,\n        \"trueNegativeCount\" : \"yb6lavpvjy80hcvu2a1wneomm0jmjtndbp1tm5wrkogipjy6vxe4hgwzhacwugy3pddli4fmkvi0lo2frq0h5h32u3pwx3gs8go57gim2njg37kyjh5kf9swzonz6be9udg87hafr6fk2zjaz\",\n        \"precision\" : 3.170194595527056E38,\n        \"truePositiveCount\" : \"r5xshz61t9sws8eblx3m4j\",\n        \"recallAt1\" : 1.817490801193272E38,\n        \"f1ScoreAt1\" : 6.052169221356301E37,\n        \"falsePositiveCount\" : \"gpz4z6css6l1pud8j7dzegghrj23hlikm4pk90bcopalcx12bummz3lzx45ekzyfzjhkzt7ld6kwpcp\",\n        \"recall\" : 2.2524639991682725E38,\n        \"falseNegativeCount\" : \"fnin3k4g0xo1idu900u7\",\n        \"falsePositiveRateAt1\" : 2.5292280321555556E38,\n        \"f1Score\" : 2.624549000153338E38\n      }, {\n        \"falsePositiveRate\" : 1.3319580087966862E38,\n        \"positionThreshold\" : 990941544,\n        \"precisionAt1\" : 3.3651277569552696E38,\n        \"confidenceThreshold\" : 2.1520932102553337E37,\n        \"trueNegativeCount\" : \"rz3v2qyl4bgl5aqs9b2bcd5at0yyj665fyksepb458i63441idlid9izi812\",\n        \"precision\" : 1.277354773113577E38,\n        \"truePositiveCount\" : \"iry8xcotiqkoht4rrru7k4etsnuo6tnr7imuei6tx3i17erc9gnw0qmjsxp2nslkunm7he0ejb8p41c7e2ehrsbtlf3a975ez2gu6ua542ml8dhnn7drnvh9znq7lmkzpcu7m7jgfosdg7qmk9yljyu0doz1yklsl\",\n        \"recallAt1\" : 1.2198730080135635E38,\n        \"f1ScoreAt1\" : 7.529951702952611E37,\n        \"falsePositiveCount\" : \"fo2w2hlosvdsufxn1nrr9frkpr5ykarvj9l2nw9ngyhx04nufro2vz917fm2om6zfn4b4680l8diwtv8ap62fs1vvfpl4drj7ap3xoybq3kr97egr\",\n        \"recall\" : 2.20459036334116E38,\n        \"falseNegativeCount\" : \"8j82vkjgmgiop\",\n        \"falsePositiveRateAt1\" : 3.328641857028691E38,\n        \"f1Score\" : 4.1086513700471434E37\n      } ],\n      \"confusionMatrix\" : {\n        \"annotationSpecId\" : [ \"nc8frz98jh8zxct2920ykq5zu6rf80s9upnajanpbbk32zd2ztx\", \"86x7l4q0ur38v3sf1tgkqgru1spdlop40r0iwgxeuvv7801tgr6m0usm9s024qsj4kqn1899nvdj6jw1q24tw6hto5bpbvxeceho26otlnifu8b8iixs4yyc24yettru94t4wt9v92xyocxa5med6hn2s1bh4fm6ycvy7lj6x\", \"o920iw8w2etrngyzppd8z93s0wb2d3c1cp5ngvt2huu43b67b5woendrjltp09hehvz612esdmc1racgoyp2irntuoceeyacqkjtxberrxev711q8ob24wxi0\" ],\n        \"displayName\" : [ \"suiezi8a3hv8ykws1pbn4d0kj9tbqgi81b7l1ycferfo95o7jstzljap477lcepyhof35k5e96g7g6i0u0h5jtbrqvsfpufk3kwl1nzu41ajk5t0pdnkifm02m020pof8jcf1095uwef8ui05bvoih0pci7siq60gid\", \"m1un1lz2cqeb8fxle99opkvpvqfd30k4swmssiywuenqpcyl9kv2c\", \"nix0xysxgieln16s66w2tj842nz1r2t0gj4kj8z3d2lgecxwabusj0ctuaqsdyvpr1rcgtvb5wxz0brionba7y4p6w8834ltvf39ydr\", \"21blnzgsbl2xgoeqf4gs9yu602p1yk2gu6eqyt46xtsxxw\" ],\n        \"row\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"baseAuPrc\" : 3.1632330657212637E38,\n      \"logLoss\" : 1.1607771508879987E38,\n      \"auRoc\" : 2.7337935417208463E38\n    },\n    \"videoObjectTrackingEvaluationMetrics\" : {\n      \"boundingBoxMeanAveragePrecision\" : 6.233252343204763E37,\n      \"evaluatedBoundingBoxCount\" : 587846725,\n      \"evaluatedFrameCount\" : 488874524,\n      \"boundingBoxMetricsEntries\" : [ {\n        \"meanAveragePrecision\" : 1.4607192821296765E38,\n        \"iouThreshold\" : 2.413781826416848E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.9168921374590823E38,\n        \"iouThreshold\" : 1.334827608102629E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 7.990744870979062E37,\n        \"iouThreshold\" : 2.9395647369123134E37,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 8.80781140023828E37,\n        \"iouThreshold\" : 7.215336020204937E37,\n        \"confidenceMetricsEntries\" : [ { } ]\n      }, {\n        \"meanAveragePrecision\" : 3.357011783491762E38,\n        \"iouThreshold\" : 3.3092261944297353E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { } ]\n      }, {\n        \"meanAveragePrecision\" : 1.1003124656481872E38,\n        \"iouThreshold\" : 2.995979217015469E38,\n        \"confidenceMetricsEntries\" : [ { }, { }, { }, { }, { } ]\n      } ]\n    },\n    \"evaluatedExampleCount\" : 1785941445,\n    \"textExtractionEvaluationMetrics\" : {\n      \"auPrc\" : 2.145627863659093E38,\n      \"confidenceMetricsEntries\" : [ {\n        \"confidenceThreshold\" : 1.7891440065263262E38,\n        \"precision\" : 3.9176209661257827E37,\n        \"recall\" : 1.0621406594538756E38,\n        \"f1Score\" : 1.4307367072286075E38\n      }, {\n        \"confidenceThreshold\" : 1.1852119253762931E38,\n        \"precision\" : 2.3575681907974797E38,\n        \"recall\" : 2.0861533287369668E38,\n        \"f1Score\" : 9.332971953301735E37\n      }, {\n        \"confidenceThreshold\" : 3.187256034065541E38,\n        \"precision\" : 2.4601232705769833E38,\n        \"recall\" : 2.2065148403809493E38,\n        \"f1Score\" : 2.6907479815570613E38\n      }, {\n        \"confidenceThreshold\" : 1.776980039746312E38,\n        \"precision\" : 3.219016376882764E38,\n        \"recall\" : 2.1193558041190897E38,\n        \"f1Score\" : 8.162443517958311E37\n      }, {\n        \"confidenceThreshold\" : 1.94941439648093E38,\n        \"precision\" : 1.083735596315726E37,\n        \"recall\" : 1.4341188540764198E38,\n        \"f1Score\" : 2.774921660017619E38\n      }, {\n        \"confidenceThreshold\" : 3.0408275905856754E38,\n        \"precision\" : 6.171697519251179E37,\n        \"recall\" : 3.03365076983747E38,\n        \"f1Score\" : 2.038901661000561E38\n      }, {\n        \"confidenceThreshold\" : 9.452459262639123E37,\n        \"precision\" : 1.0203409076135314E38,\n        \"recall\" : 2.871719540138424E38,\n        \"f1Score\" : 1.0175135035900284E38\n      } ]\n    }\n  } ],\n  \"nextPageToken\" : \"7cvdw31wbxj6ibxr9uai5v827d6w5urnusxivnekb7cm7hssz7k6o214avohrufi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5cb32bc-5ace-4ea2-81ac-09b59c929264",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.822788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.modelEvaluations.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListModelEvaluations.",
            "properties" : {
              "modelEvaluation" : {
                "description" : "List of model evaluations in the requested page.",
                "items" : {
                  "$ref" : "#/components/schemas/ModelEvaluation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to the ListModelEvaluationsRequest.page_token field of a new AutoMl.ListModelEvaluations request to obtain that page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6cf54ba2-744b-4675-9b7e-3006617c0f0e",
    "name" : "Creates a dataset.",
    "request" : {
      "urlPath" : "/v1beta1/zkc66zul8hcjplb5vvphow831y7avzq0d1fx6o7fjzwjp1e8gkdentspfgwjrt8g749x2hvhix3peqh6ua5ero53872ja3gu3q5a1ky253ddcyvpax202anbafl03566bqbfvj8pw4mmystonval5g6gjpunvw9cp440h3l0vgfx0b7683s/datasets",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Donny Raynor MD\",\n  \"exampleCount\" : 35438070,\n  \"textExtractionDatasetMetadata\" : { },\n  \"description\" : \"Voluptatibus quia eius sit deleniti. Facere aut magnam provident. Neque ut quam sunt non facere sunt. Voluptatem voluptatem ut corporis error sint eum consequatur. Modi dolor ad quia autem quo sed.\",\n  \"imageClassificationDatasetMetadata\" : {\n    \"classificationType\" : \"MULTICLASS\"\n  },\n  \"videoClassificationDatasetMetadata\" : { },\n  \"tablesDatasetMetadata\" : {\n    \"primaryTableSpecId\" : \"ebo5\",\n    \"targetColumnCorrelations\" : { },\n    \"weightColumnSpecId\" : \"73j2\",\n    \"mlUseColumnSpecId\" : \"iqk0\",\n    \"statsUpdateTime\" : \"2022-04-05T14:46:22.81913Z\",\n    \"targetColumnSpecId\" : \"679b\"\n  },\n  \"videoObjectTrackingDatasetMetadata\" : { },\n  \"textClassificationDatasetMetadata\" : {\n    \"classificationType\" : \"MULTICLASS\"\n  },\n  \"createTime\" : \"2022-11-13T18:02:22.819259Z\",\n  \"name\" : \"Felton Hills\",\n  \"translationDatasetMetadata\" : {\n    \"sourceLanguageCode\" : \"87bonse3bwrwif53lij0nmlg6fwegjn2frx9zmd6og1pzz4jkijiyvxz0f4293wxh2sexy4fh9szshfvd4hemfwbd93uowgaps2unrfilu05dj1pifxfzr5mba9fd2rr8dtdpvviury3jqcuwbzepe5hngybc1axexnc534huwgqdx83\",\n    \"targetLanguageCode\" : \"f5k81klinzy1nreo9lqmmfftmn9gdwxf81ne6rme64850hils45bu2k6lwqbvuftrd3ee7n9itp018qmipbsnz9h4vrfj3zyelky5q7k4nnbew3fb007pi1saxfey7119c18naea0hb1r9c4rkjmpa1ttt42vuau9uwp1hlzi0tswr2ipmiq91z0bstzmdatagol\"\n  },\n  \"etag\" : \"aaaat\",\n  \"textSentimentDatasetMetadata\" : {\n    \"sentimentMax\" : 1500731554\n  },\n  \"imageObjectDetectionDatasetMetadata\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cf54ba2-744b-4675-9b7e-3006617c0f0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.819494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.create",
          "schema" : {
            "description" : "A workspace for solving a single, particular machine learning (ML) problem. A workspace contains examples that may be annotated.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Timestamp when this dataset was created.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "description" : {
                "description" : "User-provided description of the dataset. The description can be up to 25000 characters long.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Required. The name of the dataset to show in the interface. The name can be up to 32 characters long and can consist only of ASCII Latin letters A-Z and a-z, underscores (_), and ASCII digits 0-9.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
                "type" : "string"
              },
              "exampleCount" : {
                "description" : "Output only. The number of examples in the dataset.",
                "format" : "int32",
                "type" : "integer"
              },
              "imageClassificationDatasetMetadata" : {
                "$ref" : "#/components/schemas/ImageClassificationDatasetMetadata"
              },
              "imageObjectDetectionDatasetMetadata" : {
                "$ref" : "#/components/schemas/ImageObjectDetectionDatasetMetadata"
              },
              "name" : {
                "description" : "Output only. The resource name of the dataset. Form: `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}`",
                "type" : "string"
              },
              "tablesDatasetMetadata" : {
                "$ref" : "#/components/schemas/TablesDatasetMetadata"
              },
              "textClassificationDatasetMetadata" : {
                "$ref" : "#/components/schemas/TextClassificationDatasetMetadata"
              },
              "textExtractionDatasetMetadata" : {
                "$ref" : "#/components/schemas/TextExtractionDatasetMetadata"
              },
              "textSentimentDatasetMetadata" : {
                "$ref" : "#/components/schemas/TextSentimentDatasetMetadata"
              },
              "translationDatasetMetadata" : {
                "$ref" : "#/components/schemas/TranslationDatasetMetadata"
              },
              "videoClassificationDatasetMetadata" : {
                "$ref" : "#/components/schemas/VideoClassificationDatasetMetadata"
              },
              "videoObjectTrackingDatasetMetadata" : {
                "$ref" : "#/components/schemas/VideoObjectTrackingDatasetMetadata"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fc7323b9-fa9a-418d-a5e2-f370c521327d",
    "name" : "Lists datasets in a project.",
    "request" : {
      "urlPath" : "/v1beta1/8qwxrowllfvxw8z7s5sjae5viysnn2mxgg4ucg2vj4yblv2adlkwudi4a4iofdsmuzv0sngs5btgt9i2u8gcjmiuy1bl4fidfufib6apqcomtzau75bi0bb306mdcwjuaml24cchqm1ulyc2g93sn6j4w38ml2qmv7zzwl/datasets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"pxazwamn48147lnv0fclcxbsiyt32ipmhmqhdrx6xozx5hfbo0nvxm9q0rqfiribxk998lmwye3kp36ctnb7upfuki593m3dwisdgblv3g72bqoy7ct0r3\",\n  \"datasets\" : [ {\n    \"displayName\" : \"Cyrus O'Reilly\",\n    \"exampleCount\" : 1270434782,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Temporibus doloremque sed consequuntur perferendis repellat ipsum. Maxime eligendi minus ratione in sit ipsa. Rerum ut eius voluptatem odio quia deleniti.\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"fm2p\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"y2z1\",\n      \"mlUseColumnSpecId\" : \"812l\",\n      \"statsUpdateTime\" : \"2022-09-04T15:17:22.817254Z\",\n      \"targetColumnSpecId\" : \"qleu\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"createTime\" : \"2022-09-13T17:54:22.817388Z\",\n    \"name\" : \"Bernardina Zboncak\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"ynglf2y7pqn2cwm127ljr570026wkunnvgh8zdjsfjtqj6fciduhsdo6lwfkvptrgwjhy38f46y5e8c6q7iazy3vjmsjcefcfh709nq40h9b25371wmykjf0xq6bgx7ivlwvgtvip6qmfyein\",\n      \"targetLanguageCode\" : \"eciwmuspzzrwjjpjynuqcxp4drzfnqjyhplkdjon4eu3juzaymld5yelrqp7urr5isyfydwjcjm9mz9ypim5f5p8azcx3\"\n    },\n    \"etag\" : \"neque\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 641854286\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Tim Gutmann MD\",\n    \"exampleCount\" : 1317378393,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Consequatur provident similique voluptatem et. Optio iure quia nihil facilis id. Saepe molestiae ex fugit repellat natus ea similique.\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"1w27\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"d31z\",\n      \"mlUseColumnSpecId\" : \"qual\",\n      \"statsUpdateTime\" : \"2022-05-12T17:13:22.817871Z\",\n      \"targetColumnSpecId\" : \"6367\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTILABEL\"\n    },\n    \"createTime\" : \"2022-03-18T15:51:22.817987Z\",\n    \"name\" : \"Clifford Feest\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"k1xwmctlrnqp8pa0ottqosou445r8ffyxi75axdozlp7c65gcn334k1wvadwplckkz7yfx8y60vf7q8gzkeeo8zm3zyfvcvawk58fnmmz8\",\n      \"targetLanguageCode\" : \"edspr2lef0r6ekut7jdkfwdwv5pbmfzn8b3nyhwtwzzltrpl7et2ivmpb0ew5vfksk9yuz39f6vaayv3vvd21hznvx65y1u9pxtktj8pt62\"\n    },\n    \"etag\" : \"itaque\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 1464420092\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  }, {\n    \"displayName\" : \"Hedy Mills\",\n    \"exampleCount\" : 792419575,\n    \"textExtractionDatasetMetadata\" : { },\n    \"description\" : \"Sit voluptatibus quo assumenda ut incidunt odio voluptatum. Itaque vitae possimus et cumque ut repellendus. Error consequatur et quo sit aperiam aut. Suscipit dignissimos laborum dolor.\",\n    \"imageClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"CLASSIFICATION_TYPE_UNSPECIFIED\"\n    },\n    \"videoClassificationDatasetMetadata\" : { },\n    \"tablesDatasetMetadata\" : {\n      \"primaryTableSpecId\" : \"84g0\",\n      \"targetColumnCorrelations\" : { },\n      \"weightColumnSpecId\" : \"gk93\",\n      \"mlUseColumnSpecId\" : \"0nd8\",\n      \"statsUpdateTime\" : \"2022-07-31T14:18:22.818437Z\",\n      \"targetColumnSpecId\" : \"oxp4\"\n    },\n    \"videoObjectTrackingDatasetMetadata\" : { },\n    \"textClassificationDatasetMetadata\" : {\n      \"classificationType\" : \"MULTICLASS\"\n    },\n    \"createTime\" : \"2022-09-08T17:33:22.818552Z\",\n    \"name\" : \"Ms. Carmelo Hermann\",\n    \"translationDatasetMetadata\" : {\n      \"sourceLanguageCode\" : \"phhbex2dzuidja0p6byei9beo4x5srrtsj68i3s726yij3xbmdgy10quivk3fnr5f5\",\n      \"targetLanguageCode\" : \"5nppgafjp4nof2sxuvnvuo3k90ksrmmwc8rz9u6a7hoe93gi0wyg2lf6tx116x3cfmhv4my4uopzehiypru4j9nocq47f3otq8d9jjf7ioynkoiygdn4102dnikpm5toa\"\n    },\n    \"etag\" : \"quasi\",\n    \"textSentimentDatasetMetadata\" : {\n      \"sentimentMax\" : 1436094871\n    },\n    \"imageObjectDetectionDatasetMetadata\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc7323b9-fa9a-418d-a5e2-f370c521327d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.818779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListDatasets.",
            "properties" : {
              "datasets" : {
                "description" : "The datasets read.",
                "items" : {
                  "$ref" : "#/components/schemas/Dataset"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to ListDatasetsRequest.page_token to obtain that page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a6fb9bff-1262-4e8c-9ad5-a6373ff22513",
    "name" : "Lists column specs in a table spec.",
    "request" : {
      "urlPath" : "/v1beta1/87w4pbmd747at2lfxcts49v0fkhntz9qoygpuqgrmom7v0lnt609acq3lwaj7ug8q2v5faecv9hwqom0pggbz30wa4raow8upagi4voqmcy2zihesgzrlssrtv54cbr6qav2d17o5xix8ao2zamwugqdomk50a12wrri75eyemttqly3qn9gl3b98/columnSpecs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"columnSpecs\" : [ {\n    \"topCorrelatedColumns\" : [ {\n      \"correlationStats\" : {\n        \"cramersV\" : 1.5797049632740112E308\n      },\n      \"columnSpecId\" : \"806i\"\n    } ],\n    \"displayName\" : \"Noah Dietrich DVM\",\n    \"dataType\" : {\n      \"listElementType\" : {\n        \"listElementType\" : {\n          \"listElementType\" : { },\n          \"nullable\" : false,\n          \"structType\" : { },\n          \"timeFormat\" : \"2022-03-14T17:15:22.816252Z\",\n          \"typeCode\" : \"TYPE_CODE_UNSPECIFIED\"\n        },\n        \"nullable\" : false,\n        \"structType\" : {\n          \"fields\" : { }\n        },\n        \"timeFormat\" : \"2022-06-20T17:19:22.81631Z\",\n        \"typeCode\" : \"CATEGORY\"\n      },\n      \"nullable\" : true,\n      \"structType\" : {\n        \"fields\" : { }\n      },\n      \"timeFormat\" : \"2022-12-17T16:33:22.81636Z\",\n      \"typeCode\" : \"FLOAT64\"\n    },\n    \"name\" : \"Samara Beer III\",\n    \"etag\" : \"dolor\",\n    \"dataStats\" : {\n      \"float64Stats\" : {\n        \"histogramBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"quantiles\" : [ 4.287794463511709E307, 1.259368803312388E308, 3.37361357103517E307, 6.834262536950728E307, 2.4579387191699227E307, 2.375433470439865E307 ],\n        \"mean\" : 1.116049890233744E308,\n        \"standardDeviation\" : 1.4460943609149194E308\n      },\n      \"structStats\" : {\n        \"fieldStats\" : { }\n      },\n      \"timestampStats\" : {\n        \"granularStats\" : { }\n      },\n      \"arrayStats\" : {\n        \"memberStats\" : {\n          \"float64Stats\" : { },\n          \"structStats\" : { },\n          \"timestampStats\" : { },\n          \"arrayStats\" : { },\n          \"categoryStats\" : { },\n          \"distinctValueCount\" : \"5yqb99qekb06m307e1811zk5sona1c2p303q6tus3dkl6g98r5e83y5aqu46xyczm7mlqjdhkfng4wfw6bw\",\n          \"nullValueCount\" : \"l8c88ppyop1yzusxn99wxhnmzdemtwj65yk5gkr85dajl750tp7dhnme583jq9ngumhglpobtkkqtweui51tahkmbgkhx7i6k4orl2yhi2a8xxrqiiy5603qpdqrv6kaboo0okwkyz57ds62d2mwnfky3nhdjod2odeqvimdgz\",\n          \"stringStats\" : { },\n          \"validValueCount\" : \"g7t64s2hl1m5skmuqfe5byvoq80pknbcdm8bmxw9xkk04rihwqh4e19kbd61azamwlxucr13xnsmci11qj8kv5uwr09x19yb21k0kgk1tn66708o1dos09s236pnb03bj007c8mczooyrhd052ic3teyakpeuk6cyzfgy2abu\"\n        }\n      },\n      \"categoryStats\" : {\n        \"topCategoryStats\" : [ { }, { }, { } ]\n      },\n      \"distinctValueCount\" : \"2fz4gjzwc3mx4nh36sjzjuctg58viylf57b0lng2s3w4466wg05iag8l5s5bpmm4f8off48py30nh07bcpja09cxg9eqzujiyt3hmf5e8qnml47\",\n      \"nullValueCount\" : \"lmjgqy9ouq8qianb4gwo2gydq9u12grs5j0nibscsag6kc14\",\n      \"stringStats\" : {\n        \"topUnigramStats\" : [ { } ]\n      },\n      \"validValueCount\" : \"zghl5xlw7ioj8oapcksru27cvnk2t4qczkgf9bkk4apw0bauaa06\"\n    }\n  } ],\n  \"nextPageToken\" : \"z625syvckiaks59zlhmieovv5rzwrr5ydcxqj9x0d9aa54xc9t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6fb9bff-1262-4e8c-9ad5-a6373ff22513",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.816832Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.tableSpecs.columnSpecs.list",
          "schema" : {
            "description" : "Response message for AutoMl.ListColumnSpecs.",
            "properties" : {
              "columnSpecs" : {
                "description" : "The column specs read.",
                "items" : {
                  "$ref" : "#/components/schemas/ColumnSpec"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass to ListColumnSpecsRequest.page_token to obtain that page.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e60d1ec8-aba7-4b38-a837-7428fbb984ac",
    "name" : "Waits until the specified long-running operation is done or reaches at most a sp...",
    "request" : {
      "urlPath" : "/v1beta1/Phyllis+Gusikowski:wait",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Bernie Doyle\",\n  \"error\" : {\n    \"code\" : 740076599,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Eos aut temporibus aliquid corrupti. Dolorum delectus sapiente quidem quod sit in. Mollitia laborum nesciunt dolorum id ut temporibus. Quod itaque consectetur est quisquam sit alias quae. Omnis placea\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e60d1ec8-aba7-4b38-a837-7428fbb984ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.816022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.wait",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "34e8a6c9-a86e-40ac-b979-cbd9eb11339e",
    "name" : "Undeploys a model. If the model is not deployed this method has no effect. Only ...",
    "request" : {
      "urlPath" : "/v1beta1/Mrs.+Joni+Hauck:undeploy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Clementina Hauck DDS\",\n  \"error\" : {\n    \"code\" : 1949837154,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Deserunt repudiandae itaque aut quia eaque. Consequatur quam dicta harum qui quae asperiores. Deleniti corporis natus beatae labore. Quo perferendis molestias omnis aliquam nisi. Laboriosam ipsam assu\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34e8a6c9-a86e-40ac-b979-cbd9eb11339e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.815811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.undeploy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "41f213ad-85da-4842-92fe-7914d45dbb36",
    "name" : "Perform an online prediction. The prediction result will be directly returned in...",
    "request" : {
      "urlPath" : "/v1beta1/Markus+Auer+Jr.:predict",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"payload\" : [ {\n    \"annotationSpecId\" : \"36ow\",\n    \"textExtraction\" : {\n      \"score\" : 9.947755198786094E37,\n      \"textSegment\" : {\n        \"endOffset\" : \"dw5nsq1p4zhrgwgb48xtugihejectsa47h1arute8ra6d3rcfokmj\",\n        \"startOffset\" : \"hdb1n0au4ljf4\",\n        \"content\" : \"Distinctio atque enim fugit iusto. Et eos inventore. Saepe ratione at optio quidem voluptas nihil. Est pariatur non et neque aut ipsum eaque.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 2.7367892166506155E38,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 6.905654201494447E37,\n        \"columnDisplayName\" : \"Miss Alonzo Kling\",\n        \"columnSpecName\" : \"Dr. Elena Hand\"\n      }, {\n        \"featureImportance\" : 8.490230438501491E37,\n        \"columnDisplayName\" : \"Israel Deckow\",\n        \"columnSpecName\" : \"Reinaldo Carroll\"\n      }, {\n        \"featureImportance\" : 3.2359044407641433E37,\n        \"columnDisplayName\" : \"April Little\",\n        \"columnSpecName\" : \"Marlon Fay\"\n      }, {\n        \"featureImportance\" : 5.0738712339015E37,\n        \"columnDisplayName\" : \"Karin Ebert\",\n        \"columnSpecName\" : \"Nicolasa Walter\"\n      }, {\n        \"featureImportance\" : 2.7360362732650917E38,\n        \"columnDisplayName\" : \"Janae Bode\",\n        \"columnSpecName\" : \"Miss Alina Rolfson\"\n      } ],\n      \"baselineScore\" : 1.7663220512154764E38,\n      \"predictionInterval\" : {\n        \"start\" : 1.6805818316181084E308,\n        \"end\" : 1.5312699709657425E307\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 803261654\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 4.829327304583651E37\n    },\n    \"displayName\" : \"Ayako Miller\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/465516\",\n        \"mimeType\" : \"ffk5x8mtma1m1ccynwbcidwesohf5cg08gyfo365jfq3kzt224rb5jzhtsmgxytzf397vh7ch38yv6nwwf71p6ffm5vxpvdya8qspt44qutvkl2xeq5yul9u8vhz7kk2n7gzr8kl1sl2lvptranrxc9s5en5g89z8gbic1ht69iv2w28ep56u4nazu9vroyszngvl5\",\n        \"content\" : \"Voluptatem qui quo hic ratione quisquam. Soluta voluptas repellat ea facere excepturi ut deleniti. Quis corporis et et perferendis incidunt vero. Molestiae soluta quo fuga. Doloremque fugiat accusamus\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 5.487443862766177E37,\n      \"instanceId\" : \"4qat\",\n      \"timeOffset\" : \"2022-07-31T17:20:22.810453Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-07-18T17:23:22.810511Z\",\n        \"startTimeOffset\" : \"2022-05-21T17:11:22.810548Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 2.2529870313168138E38\n      },\n      \"type\" : \"2nogpvf9pybemx2erteqqagx3omn6by37rnmeqtg8o56d9jv81pdqqtnaky8i10r7\"\n    },\n    \"classification\" : {\n      \"score\" : 2.326559050478695E38\n    }\n  }, {\n    \"annotationSpecId\" : \"kv97\",\n    \"textExtraction\" : {\n      \"score\" : 5.986553900220676E37,\n      \"textSegment\" : {\n        \"endOffset\" : \"n0urlfojbr6ugwlph3u4lizzfqqyvchptgpmi2wv32enebxtg8cee9ixuhdwidld7wzub12f97xnbn9ia1aa29dodxs39xqcym74qvcnxe3itckcjd5rdn9uvx9mc3d2i9t8eq7rz7our5j7z4n2bqmp1tvh881j\",\n        \"startOffset\" : \"sj75tn6bs0p1ems809fq1cf129w3vrd0ixybp0tyjw9t3d79q0yix1uasnquufvgpat7hia21xpo5x9wkkzmaw227gm9k97c63tg\",\n        \"content\" : \"Doloremque dignissimos quo reprehenderit asperiores hic fugiat. Voluptas rerum est veritatis. Maiores qui maxime itaque nulla rerum autem soluta. Facere quis dignissimos eos qui vel voluptas molestiae\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 6.101665975272971E37,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 2.812699847645791E38,\n        \"columnDisplayName\" : \"Mrs. Raven Torp\",\n        \"columnSpecName\" : \"Dr. Van Bailey\"\n      } ],\n      \"baselineScore\" : 1.4764181540966744E38,\n      \"predictionInterval\" : {\n        \"start\" : 6.26295823801753E307,\n        \"end\" : 1.9050594388371353E307\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 2095942771\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { } ]\n      },\n      \"score\" : 2.54070666811711E37\n    },\n    \"displayName\" : \"Trent Schmeler\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/925182\",\n        \"mimeType\" : \"lkrdtzo7lljpd2h6jkcziicw2nlofugv9ibardgkx26bczyucp17t7bx3ahsg589gfphgq\",\n        \"content\" : \"Minus laborum dolor corrupti. Esse sit repellendus. Minima nesciunt omnis iste consequuntur. Voluptas eos iste.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { } ]\n      },\n      \"score\" : 2.31913739062976E38,\n      \"instanceId\" : \"r922\",\n      \"timeOffset\" : \"2022-05-09T14:52:22.811293Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-08-06T17:50:22.81134Z\",\n        \"startTimeOffset\" : \"2023-01-28T16:49:22.811376Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 1.3337548016308464E38\n      },\n      \"type\" : \"txwa9auotxd0dlwugxkvkq4xw7o0avkhwi14e9jx3oao6ajjwxtefkm59e8xz0mg9ucpdoalws6k45w\"\n    },\n    \"classification\" : {\n      \"score\" : 2.6260987666223655E38\n    }\n  }, {\n    \"annotationSpecId\" : \"yu71\",\n    \"textExtraction\" : {\n      \"score\" : 3.219298636572519E38,\n      \"textSegment\" : {\n        \"endOffset\" : \"a1o3o5mw3967cggpt2hl0twtc4yl9xcnv37p6ssy2wezaxtfigh5624i18d0wp64x59dwjnyuxa2rg9g2fidxt4em72npw0avfqyx3wg7vlz5xvoo1j1czej5xpnwonha2t5h0t0qigjy8jj0elkpoobdnhw57dp91ilz6wevj6to5xd\",\n        \"startOffset\" : \"15y14odnftlqa0bf2csudcjrh3vz6f54qnp2a6a8zot30emtcrtpsmoam\",\n        \"content\" : \"Neque aperiam officia culpa et aut explicabo doloremque. Reiciendis inventore nisi rerum aut iste. Aspernatur aut corrupti. Voluptas et et aut nesciunt nam ipsam velit.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 1.329129362189349E38,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 2.0642086039907814E38,\n        \"columnDisplayName\" : \"Doug Heaney\",\n        \"columnSpecName\" : \"Josephina Aufderhar IV\"\n      }, {\n        \"featureImportance\" : 1.5708517075281788E38,\n        \"columnDisplayName\" : \"Alda Ritchie\",\n        \"columnSpecName\" : \"Miss George Moen\"\n      }, {\n        \"featureImportance\" : 1.4813157392045074E37,\n        \"columnDisplayName\" : \"Arturo Champlin\",\n        \"columnSpecName\" : \"Eduardo Cartwright\"\n      }, {\n        \"featureImportance\" : 3.2167356539567185E38,\n        \"columnDisplayName\" : \"Yong Sipes\",\n        \"columnSpecName\" : \"Jeniffer Wisoky\"\n      }, {\n        \"featureImportance\" : 1.3355226655606938E38,\n        \"columnDisplayName\" : \"Avis Gaylord\",\n        \"columnSpecName\" : \"Joshua Beier Jr.\"\n      }, {\n        \"featureImportance\" : 2.735698233037522E38,\n        \"columnDisplayName\" : \"Miss Joaquina Deckow\",\n        \"columnSpecName\" : \"Abbey Terry\"\n      }, {\n        \"featureImportance\" : 2.6170413850240744E38,\n        \"columnDisplayName\" : \"Kennith Borer II\",\n        \"columnSpecName\" : \"Miesha Beahan\"\n      } ],\n      \"baselineScore\" : 2.1950371579789785E38,\n      \"predictionInterval\" : {\n        \"start\" : 1.0714604137453213E308,\n        \"end\" : 1.2834181491333657E308\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 360173533\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { } ]\n      },\n      \"score\" : 1.421552601241928E38\n    },\n    \"displayName\" : \"Candis Effertz\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/163549\",\n        \"mimeType\" : \"mi52f1ie12uh8i7urnnpoity8n0q2nu9m905gcdmi1bars50tuf5lawb84iyhctdfrtjtu6s5gmafha4\",\n        \"content\" : \"Nam voluptas provident veniam aspernatur nihil. Ut molestiae expedita fuga architecto. Est sint et. Dolor sunt at minus cupiditate vel necessitatibus.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { } ]\n      },\n      \"score\" : 4.2266681246058067E37,\n      \"instanceId\" : \"3v8j\",\n      \"timeOffset\" : \"2022-03-27T16:24:22.812689Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-11-11T16:55:22.812738Z\",\n        \"startTimeOffset\" : \"2022-11-25T16:17:22.812772Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 3.1570969867010337E37\n      },\n      \"type\" : \"l902e12h6tqp49son0988uvrmjjo2rvytun1lwn9nh0j071v989kiw8cc8q40srow0fb3lh1ckiurs1zy9f51lfj1qqqi3mnr0mwjdco26q8uthwlxoo7wefdd72e3tee9f8dyzah7lr0tsplpdryi3p9xukk4k3p16ke6r8lz8eu4ojw17z60mlrhe4m2n6\"\n    },\n    \"classification\" : {\n      \"score\" : 1.9396264773160255E38\n    }\n  }, {\n    \"annotationSpecId\" : \"8qh6\",\n    \"textExtraction\" : {\n      \"score\" : 2.807866535596535E37,\n      \"textSegment\" : {\n        \"endOffset\" : \"gtkew1z4jwo2hza9rol27n6jykk3jz8ywc60nmvh6fkdw1heg8zuwdvffvnzksk53ek0jxv9ya0vcigb6mdakamxn7ls5qwjq8opn1qe6e8waiwivc5min7hyv1u1190ax44gwqesms0y55qih25rryowt741d2cpqw1i8xvfixmjfmb7ux86k68x1jfs2qro2e7bq\",\n        \"startOffset\" : \"52yrfjen3um2iro7iz7hp5tqiffio68ehorogv9pg1ya1zhgmvzvwileaadteh2fcr6krymr899ir6132xu9p3gkfw9qidqcqhyl5rtykpqcqxx769sr2oolesh38rf9i\",\n        \"content\" : \"Autem esse dignissimos exercitationem. Illum quo aut alias alias. Est atque porro. Laborum assumenda numquam fugiat fugit ratione.\"\n      }\n    },\n    \"tables\" : {\n      \"score\" : 2.5676293379512804E38,\n      \"tablesModelColumnInfo\" : [ {\n        \"featureImportance\" : 7.226479496735722E37,\n        \"columnDisplayName\" : \"Everett Flatley DDS\",\n        \"columnSpecName\" : \"Edward Sporer\"\n      }, {\n        \"featureImportance\" : 1.3428047557900882E38,\n        \"columnDisplayName\" : \"Amada Leannon\",\n        \"columnSpecName\" : \"Beatris Larkin\"\n      }, {\n        \"featureImportance\" : 3.1671991545788872E38,\n        \"columnDisplayName\" : \"Dr. Loida Grant\",\n        \"columnSpecName\" : \"Bettye Bosco PhD\"\n      }, {\n        \"featureImportance\" : 9.7892705342558E37,\n        \"columnDisplayName\" : \"Long Pollich\",\n        \"columnSpecName\" : \"Takako Dibbert\"\n      }, {\n        \"featureImportance\" : 8.140775339078205E37,\n        \"columnDisplayName\" : \"Dr. Lakita Lang\",\n        \"columnSpecName\" : \"Benton Marquardt\"\n      }, {\n        \"featureImportance\" : 1.2358033170911615E38,\n        \"columnDisplayName\" : \"Ms. Darnell O'Keefe\",\n        \"columnSpecName\" : \"Britta Anderson\"\n      } ],\n      \"baselineScore\" : 6.572247824647403E37,\n      \"predictionInterval\" : {\n        \"start\" : 1.586273542627722E308,\n        \"end\" : 1.7561449206174172E308\n      },\n      \"value\" : { }\n    },\n    \"textSentiment\" : {\n      \"sentiment\" : 411204684\n    },\n    \"imageObjectDetection\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 1.335897380532753E38\n    },\n    \"displayName\" : \"Will Armstrong\",\n    \"translation\" : {\n      \"translatedContent\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/279194\",\n        \"mimeType\" : \"q0as8d94yjql9zf81hdir33pnua31n5fjn7vi53mexq2lnaysh0fxq1xlkhh65r1139o15k0weyifk89mxrwu0b6vf64fmamsnqmutwyngthk2ii3wq0fb5e1ef782smbesyfk6whc66rlkruutcz00nnd6v1kap4h1i3zv24z\",\n        \"content\" : \"Maxime rerum non aperiam. In non asperiores quam sed. Molestiae error rerum labore cumque ut enim.\"\n      }\n    },\n    \"videoObjectTracking\" : {\n      \"boundingBox\" : {\n        \"normalizedVertices\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      },\n      \"score\" : 2.2358446988474572E38,\n      \"instanceId\" : \"zrtl\",\n      \"timeOffset\" : \"2022-11-23T14:36:22.814008Z\"\n    },\n    \"videoClassification\" : {\n      \"timeSegment\" : {\n        \"endTimeOffset\" : \"2022-11-25T15:58:22.814055Z\",\n        \"startTimeOffset\" : \"2022-09-12T18:03:22.814091Z\"\n      },\n      \"classificationAnnotation\" : {\n        \"score\" : 3.3983099601560576E38\n      },\n      \"type\" : \"ezrqsamm98y1wpv4uyy8aih1r1q4lfsl0gaa4esbiufes9p5i2f41dpd9esearmxf0i7wt2rin7ullgs934zeka1b4qofsa1r6rxrmjg0jl02l4243n1l8twa\"\n    },\n    \"classification\" : {\n      \"score\" : 1.3282553051655894E38\n    }\n  } ],\n  \"preprocessedInput\" : {\n    \"image\" : {\n      \"inputConfig\" : {\n        \"bigquerySource\" : {\n          \"inputUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/rickyyean/128.jpg\"\n        },\n        \"gcsSource\" : {\n          \"inputUris\" : [ \"bfkb4ony2ltbos5qj6gab9ytm2g\", \"umfn34uto92f5rh3pwmb368v6q7eqjtv99qzq8hdfzaf7p84q84fes878n7c0z63yacy9jbfigunusc7tmqjj564x0ks9a1jo74ps1dj63xgm709qjpdeeokt2na5rr8t\", \"ln4lr09emiuk03zxfd1vurfribi8xo0oxccblfh19zpazr86za6cfgx0g84omyy8ym3mfzm925v7zw4e\", \"zdoxm986a6nvp9qs8jwjno97q6rkbwcatpu4w7yh089f5kasongenin6y2yypt8ks3pgj19e80\", \"q1qq7gy3cfmhctqp0dmsloqp4ad044lviuaytnd61a77q1nebh8uocsfijr9ygkfp\", \"9jcit82gsfsgmi7ayazw9cz6skc4a5sbo9nlrj7noflxvjgn1d6jngp9gf6c4ofgc60ii4wxaf5cf6bdn41x5jrj5kf4nooky2hbwqje6u6eu8\", \"ea6e2307p4t9itdreuccsio5a07d28dq3s88e1ymltdtj46ln2t73s01lj6a5r7mtfjlyspww41wpw6wz5qrlmra0vx1njeso3ple669gtzr4ghams6w8g3k0v2lo4unl8bzi22dcwpegnboxtb95unbn\" ]\n        },\n        \"params\" : { }\n      },\n      \"imageBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/m_kalibry/128.jpg\",\n      \"thumbnailUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/ganserene/128.jpg\"\n    },\n    \"document\" : {\n      \"layout\" : [ {\n        \"textSegment\" : {\n          \"endOffset\" : \"fad8igerhumxx5qs7ybzoxk08d1j8o00esn2s8gw4yhh6vpse6hdutcmg5wqpwqwpyphzhot6j2kyvq44bl2koredfk5ghjfvrwxtkglubl8h1e6qg4ee0e8uzj8guy8uqwatdyplg6b2yvo3bup5uwr0xe3\",\n          \"startOffset\" : \"s5i6v7gcmu6j1kbylncv6xthf28noxbink1unjp3drcu4k7n8o6xogoddynwvl3k8wv37yfvvya2pwcyg85eo7qzh6od\",\n          \"content\" : \"Modi officia delectus qui ea molestiae aut. Ipsam itaque labore placeat. Ducimus perferendis cumque illo et autem.\"\n        },\n        \"pageNumber\" : 1869823396,\n        \"textSegmentType\" : \"FORM_FIELD_NAME\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { }, { }, { }, { } ]\n        }\n      }, {\n        \"textSegment\" : {\n          \"endOffset\" : \"wqo6fphv1ly21r53ca67jzqljjj58zr8g2v611q2ncwwpauumhjxv0okxe8x5sscdbvapj6au1nw4sffmg6dt07axphdoga3pd3ihntnq8blw9o5dm\",\n          \"startOffset\" : \"civ37p1mzzpax4mqr6iddeiwtttoqlb3c18v3vba86i\",\n          \"content\" : \"Laborum sint quam. Pariatur perspiciatis voluptates tenetur omnis. Nam earum rerum.\"\n        },\n        \"pageNumber\" : 1709686992,\n        \"textSegmentType\" : \"TABLE_HEADER\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { } ]\n        }\n      }, {\n        \"textSegment\" : {\n          \"endOffset\" : \"8kripb2mtuzf635q9xfcss9n16l2ha5q2gm39a5oomy8rjymbmnkgvsg9mzcey28h7hu7bp6tnjcm05npi68wj6oc1sjgvn2ec4oqfix455swbdv5orpz8egg0o8rzc\",\n          \"startOffset\" : \"epgdajnmaw7k9fk0lofrwx3g5iq1zllcnje60ra7wg49hv1o93q7owrcx4iasxp\",\n          \"content\" : \"Unde architecto quod quaerat quos. Iure temporibus sit quia. Rem et reiciendis quasi iure impedit modi.\"\n        },\n        \"pageNumber\" : 1430485461,\n        \"textSegmentType\" : \"FORM_FIELD_NAME\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { }, { } ]\n        }\n      }, {\n        \"textSegment\" : {\n          \"endOffset\" : \"aykkifamj4f9k19sak3b5iybtmq1a16bt5dpa06p847dwwmcie5w4o4bh5tjv1kc2il9qir6nvnko1icl6cza56jplvifx7vkcp7ij761ggwtumjj\",\n          \"startOffset\" : \"g3nse81ik80yqt87yfxpnx14p8yzvj\",\n          \"content\" : \"Veritatis consequuntur doloremque rem numquam. Optio alias sit hic odio deleniti totam. Sunt odio vero rerum culpa ullam. Magni magni occaecati suscipit aliquid ullam sunt.\"\n        },\n        \"pageNumber\" : 1783541000,\n        \"textSegmentType\" : \"PARAGRAPH\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { } ]\n        }\n      }, {\n        \"textSegment\" : {\n          \"endOffset\" : \"ixae28wixkwmkxihx04vf6o3ky5xzjflhobn3thoy7l5n4xwn58seg821u6m\",\n          \"startOffset\" : \"2yr83m1mi5m0csoty6iu69f4ss81kw\",\n          \"content\" : \"Et pariatur vel autem nam ducimus velit. Recusandae reprehenderit rem nesciunt ad. Dicta cumque est quaerat. Eos tempora et voluptas et vero asperiores.\"\n        },\n        \"pageNumber\" : 1153234697,\n        \"textSegmentType\" : \"FORM_FIELD_CONTENTS\",\n        \"boundingPoly\" : {\n          \"normalizedVertices\" : [ { } ]\n        }\n      } ],\n      \"inputConfig\" : {\n        \"gcsSource\" : {\n          \"inputUris\" : [ \"rmxmu4ugawpd77996594mua8oab9ji6qnjb0losm0bz0n1fcv3ec424whg0rp17d57hmkpr513fac15bsjin187bnz7pjmz42bse7iem9gjpjt6wd5w08dvedmq7onfboku77\", \"t9k42udvfrn4yql58xkxmqu7tb90v8n1hs54pk6dpwmm9s8fbbq5hmft1z0thqcck1dnqdtd8d\", \"ig0ora5vdhjgdal5ez73hn6eb5xo52tdaguwex7l8516x3dt0fuppqudy3k2yfkk84odpmmum7jj9\", \"wuq4w3vknrewelaybsleyq1jxqgx\", \"k08kbev38je\" ]\n        }\n      },\n      \"pageCount\" : 856586204,\n      \"documentDimensions\" : {\n        \"unit\" : \"POINT\",\n        \"width\" : 1.3809690034489187E38,\n        \"height\" : 2.727758314041574E38\n      },\n      \"documentText\" : {\n        \"contentUri\" : \"https://web.example.mocklab.io/865735\",\n        \"mimeType\" : \"s2x54jjjzu9mnlok5ybb40i6c6syh8uejxc2wuzth9tepj6dqkvkaxhs3sr3z8az48nsoduohcygcbosv4i4dg5ey9jrpj7x7qezcp4xc44owvt2gmebrl67aphgp6qgvhl8h1gkudvqaxjrd2x\",\n        \"content\" : \"Quos aut dolore ea esse possimus. Qui dolores vero ipsa in exercitationem ipsam quod. Repellat eaque perspiciatis qui. Et hic est neque magni nostrum consequuntur dolor.\"\n      }\n    },\n    \"row\" : {\n      \"columnSpecIds\" : [ \"x1ujbg8jcpbog7lsxw03nwmfrzyvbopss7bj121r08krrifw9u5cab685becaxlk1e2oev1dat3famqejsadvakogcul3c4efcu17m20qq8emcew9m6ltetzj1evjs60yf71csvhkqsnba682\", \"qoyt33mnupmymcao5wnafhy67m4admpsshbt\", \"u10040rcdtg4hxngh02hc9fwdtzlxg4r50vzb6nlq9mw7ezl2u16mmry64zhhkuux2z4o0018dmku4vnmmjd9ywhvqcmrgyoud4sxr3t454r5qkxkf0cpfbmnj\", \"5v44nmri77ivytak6h0xarm\", \"rznrz2crxfjx7r69rx7u6967ifor6v5oiov13uq34jtcofz4otbzu2ycfrmvuj96u6gjyra6d51fdlj6tnqv6aesag1ew2ytgub5oz4aqurm1vtjuytcmk2hmx4fv479x86ecfj\", \"gcvrdwefb3v0fqgvn78j187yekyq8xs159ggo54h6l7hlh7hka66st00vdych5t5brwh0kst6twaxzuspxyx9q8ztmocw9q3ffs77060e0tuhvce\" ],\n      \"values\" : [ { }, { }, { }, { }, { } ]\n    },\n    \"textSnippet\" : {\n      \"contentUri\" : \"https://web.example.mocklab.io/479298\",\n      \"mimeType\" : \"dhh3vks9c9oks3l3q6xr6dwen62oqne2rmrr169qm0xtkhp0zi39fx4rif2v0k8vvkmcf5ujysdfhw2ejv0kysvut8nhlw6sd74kg9jt1q02bex\",\n      \"content\" : \"Unde quae illum ratione impedit dignissimos. Illo sunt qui. Perspiciatis qui dignissimos ut.\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41f213ad-85da-4842-92fe-7914d45dbb36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.81552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.predict",
          "schema" : {
            "description" : "Response message for PredictionService.Predict.",
            "properties" : {
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Additional domain-specific prediction response metadata. * For Image Object Detection: `max_bounding_box_count` - (int64) At most that many bounding boxes per image could have been returned. * For Text Sentiment: `sentiment_score` - (float, deprecated) A value between -1 and 1, -1 maps to least positive sentiment, while 1 maps to the most positive one and the higher the score, the more positive the sentiment in the document is. Yet these values are relative to the training data, so e.g. if all data was positive then -1 will be also positive (though the least). The sentiment_score shouldn't be confused with \"score\" or \"magnitude\" from the previous Natural Language Sentiment Analysis API.",
                "type" : "object"
              },
              "payload" : {
                "description" : "Prediction result. Translation and Text Sentiment will return precisely one payload.",
                "items" : {
                  "$ref" : "#/components/schemas/AnnotationPayload"
                },
                "type" : "array"
              },
              "preprocessedInput" : {
                "$ref" : "#/components/schemas/ExamplePayload"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5c2b74e3-d6ed-41ad-a3b4-9c5655a930ea",
    "name" : "Imports data into a dataset. For Tables this method can only be called on an emp...",
    "request" : {
      "urlPath" : "/v1beta1/Hwa+Batz:importData",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Yee Murphy\",\n  \"error\" : {\n    \"code\" : 1032875682,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Magni enim qui ipsa exercitationem reprehenderit amet. Vitae accusamus earum beatae provident quo eligendi sit. Repellendus porro officiis dolorem cupiditate consequatur. Eum iusto autem ullam velit.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c2b74e3-d6ed-41ad-a3b4-9c5655a930ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.809239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.importData",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6100bb1b-50a3-4223-8ea1-6dcfc98fab03",
    "name" : "Exports examples on which the model was evaluated (i.e. which were in the TEST s...",
    "request" : {
      "urlPath" : "/v1beta1/Wilhemina+Corkery+I:exportEvaluatedExamples",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Evangeline Windler\",\n  \"error\" : {\n    \"code\" : 481169319,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Asperiores id illo sit molestias. Deserunt modi ratione voluptatem hic natus velit. Ut cumque ut aut voluptas nam in. Modi est ut nihil eum eos ducimus expedita. Quae cupiditate rerum quas numquam.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6100bb1b-50a3-4223-8ea1-6dcfc98fab03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.809024Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.exportEvaluatedExamples",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a768dff0-5e74-4da1-96bb-46ca3ca88cff",
    "name" : "Exports dataset's data to the provided output location. Returns an empty respons...",
    "request" : {
      "urlPath" : "/v1beta1/Enrique+Gibson+MD:exportData",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Josie Littel\",\n  \"error\" : {\n    \"code\" : 1702917986,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Nesciunt autem quae. Odit voluptas qui voluptatem. Numquam ipsa culpa velit et sint cum rerum. Sit sit cumque harum impedit eos non.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a768dff0-5e74-4da1-96bb-46ca3ca88cff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.808806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.exportData",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "439fc21b-5673-446b-b56d-579c82d49785",
    "name" : "Exports a trained, \"export-able\", model to a user specified Google Cloud Storage...",
    "request" : {
      "urlPath" : "/v1beta1/Freeman+Zboncak:export",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Irmgard Kertzmann\",\n  \"error\" : {\n    \"code\" : 1840421284,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Totam et repudiandae velit. Sint enim maxime. Dolores voluptatem qui. Repellat molestiae omnis.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "439fc21b-5673-446b-b56d-579c82d49785",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.808599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.export",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "67692225-cb06-4703-9892-cab05c281aac",
    "name" : "Deploys a model. If a model is already deployed, deploying it with the same para...",
    "request" : {
      "urlPath" : "/v1beta1/Bradley+Cole:deploy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Milan Bayer\",\n  \"error\" : {\n    \"code\" : 1408378723,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Sed aperiam cupiditate ipsam cum. Aut qui dolores. Cum in officia id temporibus. Aut voluptatem eum id. Quam commodi dolorem sint similique.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67692225-cb06-4703-9892-cab05c281aac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.808392Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.deploy",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dd0f2940-7782-4960-8e2b-ca5ab0217298",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Dominique+Windler:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd0f2940-7782-4960-8e2b-ca5ab0217298",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.808172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c2a251b7-2c30-48b0-adff-d7de090b6042",
    "name" : "Perform a batch prediction. Unlike the online Predict, batch prediction result w...",
    "request" : {
      "urlPath" : "/v1beta1/Sheridan+O%27Hara:batchPredict",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lizzie Hagenes\",\n  \"error\" : {\n    \"code\" : 1377356314,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Perferendis similique sunt eos corporis voluptas vitae nihil. Repellat debitis sit. Nemo voluptatibus alias aspernatur.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2a251b7-2c30-48b0-adff-d7de090b6042",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.808091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.models.batchPredict",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4dd031d9-0b18-4f7d-a6e0-65b340882dd1",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Gerry+Kling/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lynn Kerluke\",\n    \"error\" : {\n      \"code\" : 74538597,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Adipisci ut sunt fugiat. Possimus excepturi nihil. Facilis omnis itaque consequatur facere adipisci. Beatae ullam consequatur in debitis dolore. Minima tempora sint.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Carolann Cummerata\",\n    \"error\" : {\n      \"code\" : 2002367764,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Earum quia optio quibusdam. Nesciunt necessitatibus sit rerum consequatur sint quisquam. Facilis rerum eligendi dolore incidunt. Consequuntur corrupti sunt vitae veniam reiciendis quas velit. Et sunt \"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Guillermina Oberbrunner\",\n    \"error\" : {\n      \"code\" : 1466830191,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ex exercitationem totam. Explicabo quibusdam et et. Fuga necessitatibus dignissimos provident et. Et sit minus dolorum id id dicta doloremque.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Pansy Koss\",\n    \"error\" : {\n      \"code\" : 1693745982,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Dolor id minima amet quae. Non nemo modi. Deleniti quas provident saepe.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Tristan Rohan\",\n    \"error\" : {\n      \"code\" : 1266188018,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Placeat est voluptatem. Aut inventore voluptatibus. Voluptas doloremque autem iste iusto ad aut pariatur. Nobis officiis repudiandae quae laborum tempore iusto. Distinctio maiores incidunt iste eligen\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"rhc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4dd031d9-0b18-4f7d-a6e0-65b340882dd1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.807853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9b300aab-7922-4aef-bdf7-9904244f78a3",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Miles+Gutkowski/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"gkbro5ecqrtfazm89hzu3va6maoj2hnelzk2b9bda982nu6i1p21ryrcik3xxx3fwlsb9aokt7vr4vm386bhwaxoee\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Edmundo White PhD\",\n    \"locationId\" : \"yqhq\",\n    \"name\" : \"Meg Turcotte III\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Marcellus Moore\",\n    \"locationId\" : \"gg46\",\n    \"name\" : \"Daryl Wiza\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Lorrine Nader\",\n    \"locationId\" : \"myf2\",\n    \"name\" : \"Phillip Dickinson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Keila Wilderman Jr.\",\n    \"locationId\" : \"9042\",\n    \"name\" : \"Nu Kiehn\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b300aab-7922-4aef-bdf7-9904244f78a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.807169Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4cd75eab-e164-41e5-839b-5e18d542b176",
    "name" : "Updates a column spec.",
    "request" : {
      "urlPath" : "/v1beta1/Russel+Doyle",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"topCorrelatedColumns\" : [ {\n    \"correlationStats\" : {\n      \"cramersV\" : 1.431739038601977E307\n    },\n    \"columnSpecId\" : \"597b\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 8.428802111695548E307\n    },\n    \"columnSpecId\" : \"2v54\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 5.434052053333172E307\n    },\n    \"columnSpecId\" : \"x4g1\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 5.576027949996062E307\n    },\n    \"columnSpecId\" : \"ef41\"\n  }, {\n    \"correlationStats\" : {\n      \"cramersV\" : 1.3585183180234205E308\n    },\n    \"columnSpecId\" : \"1405\"\n  } ],\n  \"displayName\" : \"Isabell Marks DVM\",\n  \"dataType\" : {\n    \"listElementType\" : {\n      \"listElementType\" : {\n        \"listElementType\" : {\n          \"listElementType\" : {\n            \"listElementType\" : { },\n            \"nullable\" : false,\n            \"structType\" : { },\n            \"timeFormat\" : \"2022-12-21T15:34:22.804989Z\",\n            \"typeCode\" : \"FLOAT64\"\n          },\n          \"nullable\" : false,\n          \"structType\" : {\n            \"fields\" : { }\n          },\n          \"timeFormat\" : \"2022-05-11T17:47:22.805062Z\",\n          \"typeCode\" : \"TIMESTAMP\"\n        },\n        \"nullable\" : true,\n        \"structType\" : {\n          \"fields\" : { }\n        },\n        \"timeFormat\" : \"2022-08-07T17:34:22.80512Z\",\n        \"typeCode\" : \"CATEGORY\"\n      },\n      \"nullable\" : false,\n      \"structType\" : {\n        \"fields\" : { }\n      },\n      \"timeFormat\" : \"2022-07-02T14:21:22.805173Z\",\n      \"typeCode\" : \"STRING\"\n    },\n    \"nullable\" : false,\n    \"structType\" : {\n      \"fields\" : { }\n    },\n    \"timeFormat\" : \"2022-08-14T14:22:22.805223Z\",\n    \"typeCode\" : \"CATEGORY\"\n  },\n  \"name\" : \"Eleonora Smitham\",\n  \"etag\" : \"rerum\",\n  \"dataStats\" : {\n    \"float64Stats\" : {\n      \"histogramBuckets\" : [ {\n        \"min\" : 4.538680583762002E307,\n        \"max\" : 1.7706595414117642E308,\n        \"count\" : \"qn7szgkct578s3vnr9rue73hlal2cb24qftldyp9ynjzmr\"\n      }, {\n        \"min\" : 3.1236237462393226E307,\n        \"max\" : 6.172974743905811E306,\n        \"count\" : \"uf7reiigkcnfl96vsyl82o8sqq8ll1d6l2u3lfmsn3lh53powzw8v323pekoap1agh946fcpe9se42b8bow4ka5de0og1nrvfmg4h31hqr4ur5hfz23suat3p0205rtpepnda9w0y9d41bu9507gbr524tup\"\n      }, {\n        \"min\" : 7.067971573103418E306,\n        \"max\" : 1.2442562055170808E308,\n        \"count\" : \"eixdo6psl7605fffwvugjgq4lzqn1ds7eh77esma82orlud5asi0k4l7wcml60i21dzbyzs2fvz17x42kdcsghcxwjsbm3tmj\"\n      }, {\n        \"min\" : 8.529096019855835E307,\n        \"max\" : 1.6382771843194537E308,\n        \"count\" : \"2vtf79utmgq6hb9gsffdrfgn3zn7uu4swe4ghe2jgaj46kachv6q0k2l0m49vr5cdxty9jal\"\n      }, {\n        \"min\" : 1.172958761892085E308,\n        \"max\" : 3.668420795986125E307,\n        \"count\" : \"qy8nl18paigr1ha1vdtq30han6u8mf9qfn03gwpfa0x6ooziw8crlkg3o5zziipdx2venricooj12kmsc3xmv3x0w4jglkgawbn2cecb33q65evdqrwr744i3si9leegz1mep66loeacjdw63mh3bjup66ndpjcsqatl868hmbmzqpvqe1bcllh58k08xg9ei1j\"\n      }, {\n        \"min\" : 1.2129094771350503E308,\n        \"max\" : 3.664569609972768E307,\n        \"count\" : \"k5g2t78r6k76i8n8cwjf9c7ep2bznxz8not76dkcgvxl7guu4g3arfgzt1gqa88bdeh97y8hj6wytzuge5wp4uwys6w6kgo2go814\"\n      }, {\n        \"min\" : 1.4303720353904779E308,\n        \"max\" : 1.4215470616939613E308,\n        \"count\" : \"6g5kcwb7w7105uom1jnv91qrq5rouubthpypc5e41nasv20oyi7er6fwsw7ua99ekry81rp9vb2kf1pglmkm7jyy621cetmqcbap2n9yiozmg32tmc3ljwajvupzpympzbkjcafbi8cb3894xzjbcoo1zlwzs7cvbqy7jaq87mt6n38n9b0981ke7qxv\"\n      } ],\n      \"quantiles\" : [ 1.310199726543939E308, 1.7467001012064242E308, 9.99954531946831E307 ],\n      \"mean\" : 2.651738955088339E307,\n      \"standardDeviation\" : 1.526523507490037E308\n    },\n    \"structStats\" : {\n      \"fieldStats\" : { }\n    },\n    \"timestampStats\" : {\n      \"granularStats\" : { }\n    },\n    \"arrayStats\" : {\n      \"memberStats\" : {\n        \"float64Stats\" : {\n          \"histogramBuckets\" : [ { }, { }, { }, { } ],\n          \"quantiles\" : [ 1.6065662527428784E307, 1.1994588212906606E308, 7.004433147493198E307 ],\n          \"mean\" : 7.70534398309251E307,\n          \"standardDeviation\" : 1.4656201602821001E308\n        },\n        \"structStats\" : {\n          \"fieldStats\" : { }\n        },\n        \"timestampStats\" : {\n          \"granularStats\" : { }\n        },\n        \"arrayStats\" : {\n          \"memberStats\" : {\n            \"float64Stats\" : { },\n            \"structStats\" : { },\n            \"timestampStats\" : { },\n            \"arrayStats\" : { },\n            \"categoryStats\" : { },\n            \"distinctValueCount\" : \"wpsvlpak3g6dqb9xfzvv5tn220o2qgr626ebo46zpg3wjktk6oz8zjjhlpcvkmi2ntxjlg5nwrscr4dgzdtcd5pza2sbghz5l9cnhtbo18n9ny17m5e6gb0bzrs2lcfv6ljw487pr6czrrgjvrxygw4i3wy8s8kakfadi433uv2mqi81jxuxo1wsuy4ah8e4qm\",\n            \"nullValueCount\" : \"qz11k5m3s2sadiqeowycr5ag2wgy2lcdq7lch0kkenxzf2bwxp2fljxo0cec5ivtruq81eh4bcl5k4462jfsfe595jyuwzrht8frzttiath77t1mbbsfhs2qr17qphmvw3q22z8irwgy2a27axm7n6gjltlpa5vnl00p7fqlr7jyb90a14wqs\",\n            \"stringStats\" : { },\n            \"validValueCount\" : \"c1mwndrg4vztw94gb5reo0bgrrqr7hf6u56g8yk64xr1jyasiy793d6ek9qgwhigwk6ymthvsjrvjtcd0l8b0q6hxlodh9096ztus9e1a5os1rzrn96tc7gfozwrdqqdotbvqk68cosw88j616lfjc4f3g\"\n          }\n        },\n        \"categoryStats\" : {\n          \"topCategoryStats\" : [ { } ]\n        },\n        \"distinctValueCount\" : \"l34xhlkm20uqre9gndy4sv1is2cr4vnaupemruf0p61xv8ly7ql1p0382lv4k2izyhm3omkzbctlfzkgr1emrgw2p92rery6furvjqjlhn0db7u8ylzadxhgmted8zytmkt7dy0l5x5i2kr0yvjzw1a7btlyxy02fo4mmt2f4lsnteyeu\",\n        \"nullValueCount\" : \"czdpw16mhnhytz\",\n        \"stringStats\" : {\n          \"topUnigramStats\" : [ { }, { }, { }, { }, { }, { }, { } ]\n        },\n        \"validValueCount\" : \"aaivrzt2hmeqr5iya9cpowqn7hxq8pxo5hja3tyqqs8l71anr6slqbbdj7m\"\n      }\n    },\n    \"categoryStats\" : {\n      \"topCategoryStats\" : [ {\n        \"count\" : \"xjw0djpgvjl2oatj18l0e26w54voke30sr2jp8a5rputvxotwmtoi8ui5gsgdj7kttwq18u9b8wjzc6jr82d36ql0onaw446zwpih538sm7d05v2155y6wq1hh\",\n        \"value\" : \"ask3e022shxxzljcwk7023bxblwhsgfy2091xdpuzqem6fcigb02grflh4cgjfajismbrpz735zym1to5ph98ok93\"\n      }, {\n        \"count\" : \"664ucqliyo5nub31lr1012rwge36wfbmfp3d1rwy432oguf3p81ompyo8n22o8mkaksbfhwb6n\",\n        \"value\" : \"mrktlu2rk53wf3g20p1x06kaic1z7ezzyqp3w846oowudhd04nv2pcbj3n73826lojhkh25irlkwelbf5duv\"\n      }, {\n        \"count\" : \"w958epusvr05vg10aurb\",\n        \"value\" : \"evut0us9d47x39fbigcflw27ya0aquucaxabh56ouh49ehc02w7owltf8z0hzfc4c0spy6b3a4031vg0gkptgph5969ne7oe2agtuf713nzbd6cpzpk0ylik7qgtg7y7e328mla6olegq48yaeft9vbsgbbqor1dqyfdqof\"\n      } ]\n    },\n    \"distinctValueCount\" : \"folbmdrme0pqf9y424mqpg1wvlcwz3gul7qzkhl4m8l7d3d161kn\",\n    \"nullValueCount\" : \"znro2h01uzgawqpnaqpv4j9rpmgtpssw9973bnd51iy\",\n    \"stringStats\" : {\n      \"topUnigramStats\" : [ {\n        \"count\" : \"cvc9rhffssuajebewmz3yt1o2wjc5y2hd\",\n        \"value\" : \"98vqxtygdrtxeqn126gaxb4lncyg5hdw7y1kn3qy7eq19r7p07b7v08le98i5nl7hs7virygjdjninohzmg5k0y3bgwa8ukmr5nbelifkdsgciez9qm64ptncibaj62rllf2ude2h5iwckk2hz5uu5e1s2hjt2iwzgvubj6d\"\n      }, {\n        \"count\" : \"5vua3qz7o7nl9v09e7jm5eewlb5nfkmux0u5xk4rl49jhyaxckrsty0r242kf23aizjf7boa0npcic\",\n        \"value\" : \"h7pl7hw3a5nc4uy2o9wyyxboa0hafvyoz69nw8xnpmgqdqr604hutoylbgwxtahsqx5uppfyyhiel5l61184p5j8\"\n      }, {\n        \"count\" : \"vz7lr\",\n        \"value\" : \"ehfbbabgav9r5mwookg26o4g6lqsjld8069zicgs58rx9f7vmueivvhpg271jypfl3igz0rkbdnrm1dczijiein6ctlcip3nlr80orphlcbbf93m6wjzdadhx0zvaohljgp6j4cbfjlqkpfu10g32af6f128omhowoy2ygipwgedtxsskm8s3m2zg5axdsbqbce\"\n      } ]\n    },\n    \"validValueCount\" : \"lizvoak8u1popqck6apgeoo0m5i23dvn31df3uuguus7xztvdtzj96ayv9piaicuw2kdjexhqb8kpd4v1szlypbrwake5am1w4b1bqdfrlile8p1yfa357kmmr2vyyc\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cd75eab-e164-41e5-839b-5e18d542b176",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.806319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.datasets.tableSpecs.columnSpecs.patch",
          "schema" : {
            "description" : "A representation of a column in a relational table. When listing them, column specs are returned in the same order in which they were given on import . Used by: * Tables",
            "properties" : {
              "dataStats" : {
                "$ref" : "#/components/schemas/DataStats"
              },
              "dataType" : {
                "$ref" : "#/components/schemas/DataType"
              },
              "displayName" : {
                "description" : "Output only. The name of the column to show in the interface. The name can be up to 100 characters long and can consist only of ASCII Latin letters A-Z and a-z, ASCII digits 0-9, underscores(_), and forward slashes(/), and must start with a letter or a digit.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Used to perform consistent read-modify-write updates. If not set, a blind \"overwrite\" update happens.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the column specs. Form: `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/tableSpecs/{table_spec_id}/columnSpecs/{column_spec_id}`",
                "type" : "string"
              },
              "topCorrelatedColumns" : {
                "description" : "Deprecated.",
                "items" : {
                  "$ref" : "#/components/schemas/CorrelatedColumn"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8e5f3d37-cdd4-4346-b307-320f2574a91c",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Oscar+Vandervort",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Emmitt Franecki Jr.\",\n  \"error\" : {\n    \"code\" : 320861857,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Ratione vel molestiae. In ea ea quisquam. Omnis quia aut et voluptatem sunt adipisci. Aperiam dignissimos est impedit officiis. Sed optio et.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e5f3d37-cdd4-4346-b307-320f2574a91c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.804386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d425d679-b00a-45b6-8cfc-fd3caa831fbd",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1beta1/Mr.+Vicente+Koss",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d425d679-b00a-45b6-8cfc-fd3caa831fbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:22.804071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "automl.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}