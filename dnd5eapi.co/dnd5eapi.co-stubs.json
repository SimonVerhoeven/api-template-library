{
  "mappings" : [ {
    "id" : "83b3aa0f-e0d1-47c9-90df-c82c75b8373f",
    "name" : "Get list of all available resources for an endpoint.",
    "request" : {
      "urlPath" : "/api/ability-scores",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1.7596471031220225E308,\n  \"results\" : [ {\n    \"name\" : \"Donnell Reichel MD\",\n    \"index\" : \"kl16dbc05073e5uk93hdwvxro86zy52xk899tz9rl1yuu1yu7cucfhwa7qxkulhxy1bcnn74gxyeumwud9d864mar95or0c7pa2agfb7ys1b50\",\n    \"url\" : \"https://web.example.mocklab.io/672979\"\n  }, {\n    \"name\" : \"Mrs. Maricruz Crist\",\n    \"index\" : \"x6soa3os99h5itkpnd3ms0tk6af9gn25os27n6m1xgxc415vrae2mibctv2qz7erptzcsxx9km5znpk9z4ua3rottb3nt9yyp1afeopc6s4sha2vj32erg82ilpiqyqwb0whd1e9w3ixck5hj32e5s\",\n    \"url\" : \"https://web.example.mocklab.io/266077\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83b3aa0f-e0d1-47c9-90df-c82c75b8373f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.125215Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "b7e67507-3c56-4dcd-b7c0-7fd8eeb62345",
    "name" : "Get a weapon property by index.",
    "request" : {
      "urlPath" : "/api/weapon-properties/thrown",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : [ \"You can use a weapon that has the ammunition property to make a ranged attack only if you have ammunition to fire from the weapon. Each time you attack with the weapon, you expend one piece of ammunition. Drawing the ammunition from a quiver, case, or other container is part of the attack (you need a free hand to load a one-handed weapon).\", \"At the end of the battle, you can recover half your expended ammunition by taking a minute to search the battlefield. If you use a weapon that has the ammunition property to make a melee attack, you treat the weapon as an improvised weapon (see \\\"Improvised Weapons\\\" later in the section). A sling must be loaded to deal any damage when used in this way.\" ],\n  \"index\" : \"ammunition\",\n  \"name\" : \"Ammunition\",\n  \"url\" : \"/api/weapon-properties/ammunition\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7e67507-3c56-4dcd-b7c0-7fd8eeb62345",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.124837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            } ],
            "description" : "WeaponProperty"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "a11060c3-8d88-4780-a32f-746b45ac8b97",
    "name" : "Get a trait by index.",
    "request" : {
      "urlPath" : "/api/traits/fey-ancestry",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : [ \"Elves do not need to sleep. Instead, they meditate deeply, remaining semiconscious, for 4 hours a day. (The Common word for such meditation is \\\"trance.\\\") While meditating, you can dream after a fashion; such dreams are actually mental exercises that have become reflexive through years of practice. After resting this way, you gain the same benefit that a human does from 8 hours of sleep.\" ],\n  \"index\" : \"trance\",\n  \"name\" : \"Trance\",\n  \"proficiencies\" : [ ],\n  \"races\" : [ {\n    \"index\" : \"elf\",\n    \"name\" : \"Elf\",\n    \"url\" : \"/api/races/elf\"\n  } ],\n  \"subraces\" : [ ],\n  \"url\" : \"/api/traits/trance\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a11060c3-8d88-4780-a32f-746b45ac8b97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.124761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "language_options" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "proficiencies" : {
                  "description" : "List of `Proficiencies` this trait grants.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "proficiency_choices" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "races" : {
                  "description" : "List of `Races` that have access to the trait.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "subraces" : {
                  "description" : "List of `Subraces` that have access to the trait.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "trait_specific" : {
                  "description" : "Information specific to this trait",
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/Choice"
                  }, {
                    "$ref" : "#/components/schemas/Choice"
                  }, {
                    "properties" : {
                      "breath-weapon" : {
                        "description" : "The breath weapon action associated with a draconic ancestry.",
                        "properties" : {
                          "area_of_effect" : {
                            "$ref" : "#/components/schemas/AreaOfEffect"
                          },
                          "damage" : {
                            "properties" : {
                              "damage_at_character_level" : {
                                "additionalProperties" : {
                                  "type" : "string"
                                },
                                "type" : "object"
                              },
                              "damage_type" : {
                                "allOf" : [ {
                                  "$ref" : "#/components/schemas/APIReference"
                                } ]
                              }
                            },
                            "type" : "object"
                          },
                          "dc" : {
                            "$ref" : "#/components/schemas/DC"
                          },
                          "desc" : {
                            "type" : "string"
                          },
                          "name" : {
                            "type" : "string"
                          },
                          "usage" : {
                            "description" : "Description of the usage constraints of this action.",
                            "properties" : {
                              "times" : {
                                "type" : "number"
                              },
                              "type" : {
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          }
                        },
                        "type" : "object"
                      },
                      "damage-type" : {
                        "allOf" : [ {
                          "$ref" : "#/components/schemas/APIReference"
                        } ],
                        "description" : "A damage type associated with this trait."
                      }
                    },
                    "type" : "object"
                  } ]
                }
              },
              "type" : "object"
            } ],
            "description" : "`Trait`\n"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "128be4f9-2278-44b8-b519-f52115a8149d",
    "name" : "Get traits available for a subrace.",
    "request" : {
      "urlPath" : "/api/subraces/rock-gnome/traits",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 8.984280053923007E307,\n  \"results\" : [ {\n    \"name\" : \"Wm Brekke\",\n    \"index\" : \"i81ao308lnul5m\",\n    \"url\" : \"https://web.example.mocklab.io/247041\"\n  }, {\n    \"name\" : \"Mao Breitenberg\",\n    \"index\" : \"09nfif3n6q5l\",\n    \"url\" : \"https://web.example.mocklab.io/626885\"\n  }, {\n    \"name\" : \"Howard Wolf\",\n    \"index\" : \"4fboqc2qu0hq0fpngy3h0mtuv825zu5o7n9wzz2j\",\n    \"url\" : \"https://web.example.mocklab.io/528050\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "128be4f9-2278-44b8-b519-f52115a8149d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.124455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "6b109638-e55f-403d-a2c9-f26c058ca879",
    "name" : "Get proficiences available for a subrace.",
    "request" : {
      "urlPath" : "/api/subraces/rock-gnome/proficiencies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 2.4735510953045424E307,\n  \"results\" : [ {\n    \"name\" : \"Dr. Arlen Abernathy\",\n    \"index\" : \"hkyqmufxwhfolyllye3gdfz2cr4ujcjxykg4zxd7yx1sykvepri6xe19xt40j15trpq22o40ajo55g3byjr23bq95c36akrjdp38pkrvfs486lrr57ynse091xl62w4a7702l46ly\",\n    \"url\" : \"https://web.example.mocklab.io/943627\"\n  }, {\n    \"name\" : \"Ms. Brunilda McGlynn\",\n    \"index\" : \"g2h9y11pjbcz0hk3r4upxn1kbxyehisu\",\n    \"url\" : \"https://web.example.mocklab.io/609030\"\n  }, {\n    \"name\" : \"Mr. Denna Tremblay\",\n    \"index\" : \"3u81nm0qb4pt3lkpval7fqzkvx443z7trwd0woau2odoyh5ds57ei0y510p9g939msajq71pvjp4eqzuvkoiwtyiyvy55jfvz26e1nh7x4bmd5u6ym21l4dhus5ljz2u0qrahep7hd88upm26512phz766z\",\n    \"url\" : \"https://web.example.mocklab.io/813599\"\n  }, {\n    \"name\" : \"Brendon Grant V\",\n    \"index\" : \"78a8yw784hy0\",\n    \"url\" : \"https://web.example.mocklab.io/647970\"\n  }, {\n    \"name\" : \"Cindy Parker\",\n    \"index\" : \"oalccs65w8sr6ole3r64ogdyk6xpbgrodhig60986ol2cqbywghjyxc8nipautpv0tz683qnzgp5lca59vmu3zmq210cypy2n9p7td3v1f9c8ezywlx9jybapkfciinm85br72o5qyz6ik55zpvqnirm0p1q6ls9qq51\",\n    \"url\" : \"https://web.example.mocklab.io/386898\"\n  }, {\n    \"name\" : \"Mr. Max Herzog\",\n    \"index\" : \"cogd4ykpxcakhmpsk16pk8pimufe1wece0658stjtcjoju0dq52\",\n    \"url\" : \"https://web.example.mocklab.io/463608\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b109638-e55f-403d-a2c9-f26c058ca879",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.123891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "7e117930-2203-4a2f-b8a7-16b1454be5e3",
    "name" : "Get a subrace by index.",
    "request" : {
      "urlPath" : "/api/subraces/high-elf",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ability_bonuses\" : [ {\n    \"ability_score\" : {\n      \"index\" : \"wis\",\n      \"name\" : \"WIS\",\n      \"url\" : \"/api/ability-scores/wis\"\n    },\n    \"bonus\" : 1\n  } ],\n  \"desc\" : \"As a hill dwarf, you have keen senses, deep intuition, and remarkable resilience.\",\n  \"index\" : \"hill-dwarf\",\n  \"languages\" : [ ],\n  \"name\" : \"Hill Dwarf\",\n  \"race\" : {\n    \"index\" : \"dwarf\",\n    \"name\" : \"Dwarf\",\n    \"url\" : \"/api/races/dwarf\"\n  },\n  \"racial_traits\" : [ {\n    \"index\" : \"dwarven-toughness\",\n    \"name\" : \"Dwarven Toughness\",\n    \"url\" : \"/api/traits/dwarven-toughness\"\n  } ],\n  \"starting_proficiencies\" : [ ],\n  \"url\" : \"/api/subraces/hill-dwarf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e117930-2203-4a2f-b8a7-16b1454be5e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.122701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "ability_bonuses" : {
                  "description" : "Additional ability bonuses for the subrace.",
                  "items" : {
                    "$ref" : "#/components/schemas/AbilityBonus"
                  },
                  "type" : "array"
                },
                "desc" : {
                  "description" : "Description of the subrace.",
                  "type" : "string"
                },
                "language_options" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "languages" : {
                  "description" : "Starting languages for all new characters of the subrace.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "race" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/APIReference"
                  } ],
                  "description" : "Parent race for the subrace."
                },
                "racial_traits" : {
                  "description" : "List of traits that for the subrace.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "starting_proficiencies" : {
                  "description" : "Starting proficiencies for all new characters of the subrace.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Subrace`\n"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c35659b1-2c19-4c4d-bf25-4addfd267753",
    "name" : "Get features of the requested spell level available to the class.",
    "request" : {
      "urlPath" : "/api/subclasses/lore/levels/13/features",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 6.105257095734692E307,\n  \"results\" : [ {\n    \"name\" : \"Elden Reilly\",\n    \"index\" : \"sb0cg6cethp7mp2p2c0wtgmaqu2gz9ii6vrmtfb5o41dfl2enejsz8lmhlz3rnevznfke2j2ogo0618z61tq8ngz77wkyustwn9frjtfltkpagp7b2fmj8qp3kx24b99hbvmpchnqvmogz1wpebhlpwr381qetk\",\n    \"url\" : \"https://web.example.mocklab.io/602418\"\n  }, {\n    \"name\" : \"Amada Lockman I\",\n    \"index\" : \"1juo7912h4x542qsw1aq4gjgdh5w49hsigamzn04bgwclxsq1ew5s9x0gn7fnqsna6bvhd44ky54utajnmhi5405k2lwjupfrxig2vuiwjs4emiuldmwnyeq66rwohe0mhup2o27cqa5mc1m3k24mxdbcau3fqzefrz5c2\",\n    \"url\" : \"https://web.example.mocklab.io/420199\"\n  }, {\n    \"name\" : \"Dorethea King\",\n    \"index\" : \"55hvaihlsqxswzb9ho78i2k656y455q017jxuhlt7q3fsu1rwe51084pxqqm9uj6zxcayz2sdci98j6tuf0m3y5ddutt40l6bldd1u2el0xmujro8n0\",\n    \"url\" : \"https://web.example.mocklab.io/366809\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c35659b1-2c19-4c4d-bf25-4addfd267753",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.12243Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "cd587928-6494-46e6-ba64-ee2b164c1c76",
    "name" : "Get level resources for a subclass and level.",
    "request" : {
      "urlPath" : "/api/subclasses/evocation/levels/8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"class\" : {\n    \"index\" : \"paladin\",\n    \"name\" : \"Paladin\",\n    \"url\" : \"/api/classes/paladin\"\n  },\n  \"features\" : [ {\n    \"index\" : \"channel-divinity\",\n    \"name\" : \"Channel Divinity\",\n    \"url\" : \"/api/features/channel-divinity\"\n  } ],\n  \"index\" : \"devotion-3\",\n  \"level\" : 3,\n  \"subclass\" : {\n    \"index\" : \"devotion\",\n    \"name\" : \"Devotion\",\n    \"url\" : \"/api/subclasses/devotion\"\n  },\n  \"url\" : \"/api/subclasses/devotion/levels/3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd587928-6494-46e6-ba64-ee2b164c1c76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.121727Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`SubclassLevel`\n",
            "properties" : {
              "ability_score_bonuses" : {
                "description" : "Total number of ability score bonuses gained, added from previous levels.",
                "type" : "number"
              },
              "classspecific" : {
                "description" : "Class specific information such as dice values for bard songs and number of warlock invocations."
              },
              "features" : {
                "description" : "List of features gained at this level.",
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              },
              "index" : {
                "description" : "Resource index for shorthand searching.",
                "type" : "string"
              },
              "level" : {
                "description" : "Number value for the current level object.",
                "type" : "number"
              },
              "prof_bonus" : {
                "description" : "Proficiency bonus for this class at the specified level.",
                "type" : "number"
              },
              "spellcasting" : {
                "description" : "Summary of spells known at this level.",
                "properties" : {
                  "cantrips_known" : {
                    "type" : "number"
                  },
                  "spell_slots_level_1" : {
                    "type" : "number"
                  },
                  "spell_slots_level_2" : {
                    "type" : "number"
                  },
                  "spell_slots_level_3" : {
                    "type" : "number"
                  },
                  "spell_slots_level_4" : {
                    "type" : "number"
                  },
                  "spell_slots_level_5" : {
                    "type" : "number"
                  },
                  "spell_slots_level_6" : {
                    "type" : "number"
                  },
                  "spell_slots_level_7" : {
                    "type" : "number"
                  },
                  "spell_slots_level_8" : {
                    "type" : "number"
                  },
                  "spell_slots_level_9" : {
                    "type" : "number"
                  },
                  "spells_known" : {
                    "type" : "number"
                  }
                },
                "type" : "object"
              },
              "url" : {
                "description" : "URL of the referenced resource.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "75bfbfb9-088b-4f05-8df3-5b1b837c7b69",
    "name" : "Get all level resources for a subclass.",
    "request" : {
      "urlPath" : "/api/subclasses/draconic/levels",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"features\" : [ {\n    \"name\" : \"Jonathon Simonis DVM\",\n    \"index\" : \"4xiei3eba631g42jp4a3qfy6fo75f1i9q1nob5xyzkih2nt8lvb3eo8ul6ch7vuk195o23mzezqmcic9skjc6s2ye3l7ppig4gg6xmns3v8qjvg6dm6uk5iojrue5q37sfr4y8r8\",\n    \"url\" : \"https://web.example.mocklab.io/294790\"\n  }, {\n    \"name\" : \"Jorge Macejkovic\",\n    \"index\" : \"vwb7joh690bth5dn2h85i4m0k0s58yasgt4q2zw4tm6hcvtxt8t5nh7n9hynoy9wf8ug5yqq4gw2l8to9hxjny017gn7fnnz1apqqnbh21a3deqkxdzmatapf8\",\n    \"url\" : \"https://web.example.mocklab.io/667807\"\n  }, {\n    \"name\" : \"Chau Hamill\",\n    \"index\" : \"2x3znl3kmigga41tc059jn5ayzf01xq1h4d8d\",\n    \"url\" : \"https://web.example.mocklab.io/564798\"\n  }, {\n    \"name\" : \"Lucina Runte\",\n    \"index\" : \"yv18ou7rppizrsnj6c03su1c7j1s4ct042cboerd96f3lqhyibi0c48ijoeyvfze3niymiy1h7tqyj00l75gpskgzi5rru3k96s2mj4lfkykn9nw1fmq96uk0my49wa27owtoxy2gzguapn2o7b4f4\",\n    \"url\" : \"https://web.example.mocklab.io/985511\"\n  }, {\n    \"name\" : \"Rodrigo Donnelly DDS\",\n    \"index\" : \"wgc2ne1mf7rnigyhskcdn0zpu3om85huudb8l2p4f8ylskdloyo3coykfkbs4\",\n    \"url\" : \"https://web.example.mocklab.io/342775\"\n  }, {\n    \"name\" : \"Lacey Mraz\",\n    \"index\" : \"anog9op3hsld3fym4jz9wyzsni2ekzdt27okvt5ng37zzhxr9zph5pqy1u6hh79tpt7i4985zh6zn0rzcgih\",\n    \"url\" : \"https://web.example.mocklab.io/513192\"\n  }, {\n    \"name\" : \"Raymonde Mayert\",\n    \"index\" : \"yzhvh4zb49\",\n    \"url\" : \"https://web.example.mocklab.io/359888\"\n  } ],\n  \"level\" : 1.353987075127007E308,\n  \"subclass\" : {\n    \"name\" : \"Wilburn Armstrong II\",\n    \"index\" : \"pjy3mzr8xfet6f0abp4hu5yytzi1unx9egtoew57kh4goznbegjd98\",\n    \"url\" : \"https://web.example.mocklab.io/140658\"\n  },\n  \"index\" : \"7rktgp9o749ceo8qxf6n\",\n  \"class\" : {\n    \"name\" : \"Quentin Zemlak\",\n    \"index\" : \"acx2icg1qp7qzbhhxy3uwkqqomhartk6oenvtp2aqvje9\",\n    \"url\" : \"https://web.example.mocklab.io/133564\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/551534\"\n}, {\n  \"features\" : [ {\n    \"name\" : \"Abby Douglas\",\n    \"index\" : \"5xpxishx0l4y85f0vl609nd6hg69lbyx1\",\n    \"url\" : \"https://web.example.mocklab.io/366062\"\n  }, {\n    \"name\" : \"Krystle Connelly\",\n    \"index\" : \"blp6wl2f8a97lqb958h5pczufxsz8snvs36mnvtc6yvknhaf7p9labftsym8aw67vwdifjk53gzifeii89sulgyytatkgs4q8bdxqzzzmvndg6vitnn869zp4pmbl\",\n    \"url\" : \"https://web.example.mocklab.io/774350\"\n  }, {\n    \"name\" : \"Danilo Hagenes\",\n    \"index\" : \"kuisreu6mvmp0oyvwmm3pp8aext31elo4x4qesi1omngklzs80x3gyrtt1rz6s94d80to1ktu9a6oh8g8xb79nhb38twe3b4q6m787068pks8cv1a7hsjw40uusvj49bdpmv8cbv1x0s8rab3v7\",\n    \"url\" : \"https://web.example.mocklab.io/436901\"\n  }, {\n    \"name\" : \"Felix Shanahan MD\",\n    \"index\" : \"4u7qlr7yuieyij5vucv5kprci98f76epfejddgefxavqw5rhlzogu6ascxtzws7jk9t3xtu3ff4cuv0fkk8gyo0p03vpds\",\n    \"url\" : \"https://web.example.mocklab.io/851563\"\n  }, {\n    \"name\" : \"Octavia Kutch\",\n    \"index\" : \"ulo1n6w7bhdnxbj56pjjhdoe8tbyd6aw7uv0z4\",\n    \"url\" : \"https://web.example.mocklab.io/103262\"\n  }, {\n    \"name\" : \"Edgardo Langworth\",\n    \"index\" : \"5ponf1ha10f2t2qoghvt9lzzdl03zql7b4b28qhv26szoj0c3z6m466k7lqxvnmhsrkwxysxzg8rzux1u01032\",\n    \"url\" : \"https://web.example.mocklab.io/514039\"\n  } ],\n  \"level\" : 7.246099885552878E306,\n  \"subclass\" : {\n    \"name\" : \"Rozanne Nicolas\",\n    \"index\" : \"tjgipfjflax7a4g2se5j4sh9puqjvldyae0wlm9k651xfptmoiuc98kf7lpmh6mcfo467sx7mhwj3qzj4oqulhlzt3n0fcfma7d6uhd6bar5ur2z2x158ntm78kvygb1arycr9yyn8wuezwh0w15byjp5ltnaavnijb5tk3oxdynqcf55hw5iidzntpae\",\n    \"url\" : \"https://web.example.mocklab.io/511072\"\n  },\n  \"index\" : \"24qc81cn3jf06uc7io4oe57zbuac2uyxl6aanfndn70jvk0yo9iru3kt\",\n  \"class\" : {\n    \"name\" : \"Taunya Schroeder\",\n    \"index\" : \"sti6hxm2p6wllrugyk24wzqwm885aavj6saprhtemhzwt4wy4gzxt2c7ra75qq5n8ao231sp4n15p\",\n    \"url\" : \"https://web.example.mocklab.io/149857\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/675363\"\n}, {\n  \"features\" : [ {\n    \"name\" : \"Chang Wisoky\",\n    \"index\" : \"7hwzrppz46qavzk9jeq9z6i34fvmywylyqe9vl513o6j1ydg18ur6rusomjm31uzcxswvwa9hlbx999andq0lsx4a1wy3m7isx8cxwdzbkn4r2jiyho8fdovp587sxbpfe7146llxib6k3jd6x2z46yu26yat1l8\",\n    \"url\" : \"https://web.example.mocklab.io/519975\"\n  } ],\n  \"level\" : 5.829027473636278E307,\n  \"subclass\" : {\n    \"name\" : \"Casey Boehm PhD\",\n    \"index\" : \"0yaqk33qxltc8v7ixzk51brdtemwii377x4cmwgdgki7uta3caqlae7rqtalyymvrtkon67yogln9xjnmn993gmo2z76wuewfl7dqtyl9ex3bvee2no5exv6adas0ql2shwwt4ba818ceub4ct9gts4j5iazeelxd6os6\",\n    \"url\" : \"https://web.example.mocklab.io/749657\"\n  },\n  \"index\" : \"t31cr31mcaylu8ipu793lu06q3d4umfrz9ay3ghh1s44i1d1x2z0yy5l9d1kv0w8q2ez5wcnojmztts8cimfmmurciegxvqr2ed0d5\",\n  \"class\" : {\n    \"name\" : \"Lucio Kautzer\",\n    \"index\" : \"8g9ndy1kws5nqi5cjevwhbvuu5jlvbj3c2zukccxvx9q30yf2d4vwgxk01bvktsoji43hoq8u5m0bnsokwnbn74gwe5i8nr9j18bsng7zcihnwyjzfik38hb006n4tlytlv1tspfr37utvh3de68v1\",\n    \"url\" : \"https://web.example.mocklab.io/221219\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/963910\"\n}, {\n  \"features\" : [ {\n    \"name\" : \"Violette Beier\",\n    \"index\" : \"fne45x5ux8sjly5qzn570jol6op3jnus4awj739mishbplvqm0le7ox24i8ovznwy20w4dq5dx6atvg8b7uh35krxbgqwu4q4xbiosspp33fchnyb1wk4r24lkacwpmlyd0m7cgw3vzzs6obdo6mu5kt5kymtc71degvpo9kikfacw3e2e9voqd\",\n    \"url\" : \"https://web.example.mocklab.io/203779\"\n  } ],\n  \"level\" : 3.8938725203182093E307,\n  \"subclass\" : {\n    \"name\" : \"Dr. Marcene Wisozk\",\n    \"index\" : \"kut2lt47wza85\",\n    \"url\" : \"https://web.example.mocklab.io/995693\"\n  },\n  \"index\" : \"h8opsh5c6tq3wu6vhif7lippv98lupmpjgiay4s8qhb5xxh4cyiet0eebypxrrqx5ev31zhh8t49mwrk24ean007b67l2ga0c4f8q5sq\",\n  \"class\" : {\n    \"name\" : \"Migdalia Auer\",\n    \"index\" : \"r25taq8oqapfd0g82pesmrpll64mawv4y72wn8u9md0or2fvpdeox6zn5b3reitlfgeitkn1z50h7cqtw8jmvwhxxroqfo5dloldhiwmjpfgmpg2ubx1ab5vi929908940erjmf6u6tjwo73stvzc9han6p2w90bhcupegy964\",\n    \"url\" : \"https://web.example.mocklab.io/232741\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/210963\"\n}, {\n  \"features\" : [ {\n    \"name\" : \"Val Walker\",\n    \"index\" : \"wzyw81d2szz4gr661ffprfcqrdle8hik4pkngqqrmpnzzkfa9q3biex7gts\",\n    \"url\" : \"https://web.example.mocklab.io/527442\"\n  }, {\n    \"name\" : \"Sean Weimann\",\n    \"index\" : \"kvc9sbpa11d2mnqgyxv0prqqzyzrhli8ju6wre0ade7ph1pd2jwowno50t848qkj21xpfk9x9ori2aby00byd0hp8vkx3dbr0ttm3g8floh0cjg7bqd2lxeeq5p9p522agbrj7gdrodf78zc\",\n    \"url\" : \"https://web.example.mocklab.io/978268\"\n  }, {\n    \"name\" : \"Jessica Okuneva\",\n    \"index\" : \"640dafryit4jtx9qut7y6kpoh9pcb9f56mvbe6noobbcc464iayrjqj8aa9ua\",\n    \"url\" : \"https://web.example.mocklab.io/192530\"\n  }, {\n    \"name\" : \"Patricia Dare\",\n    \"index\" : \"adehw19z7hhcaybxdepawrfu6d4l7a6l7jmgu8mzd19b2c3ekumpplp9508dk7p15ful4235\",\n    \"url\" : \"https://web.example.mocklab.io/673296\"\n  }, {\n    \"name\" : \"Debora Strosin\",\n    \"index\" : \"gwdmsdojr9o1iz2g9g7p13vwtnzzpo6m6ofuacwprsmr\",\n    \"url\" : \"https://web.example.mocklab.io/454677\"\n  }, {\n    \"name\" : \"Lyndsey Mills\",\n    \"index\" : \"b057d5mcwwsvlxsf5qb7it9nqskg5x49uhxrqs7k9c5o7hecytt0243gewccbo2urzvxyobo9t5cptay0yo1b7qs7vx9i12zepbuar4l5\",\n    \"url\" : \"https://web.example.mocklab.io/848210\"\n  }, {\n    \"name\" : \"Buena Considine\",\n    \"index\" : \"lhh9p60hdliqn6bc7keldgrxx8yktfzb9zgr6cir1lkttlkoo10xql51n0unj437hrdqhtbxj30tsyktshqlzje6yp7a9wwqmsprtevq7cs8uac7v0nzzf51wu6\",\n    \"url\" : \"https://web.example.mocklab.io/217534\"\n  } ],\n  \"level\" : 6.377151609862763E307,\n  \"subclass\" : {\n    \"name\" : \"Mr. Emile O'Hara\",\n    \"index\" : \"j18znb718v9rnh4lpdhpjb9ljejn2snh92rwly9naxe054eugyonjvtyll9h4gvdi1rbtkx36awkligahch8ckquqmj4w2nenbik7pvhy763l45pb7wh0yv7m4o4keu9f3yuzdsqikq14fp0bu5mptwso0r1mgu\",\n    \"url\" : \"https://web.example.mocklab.io/749861\"\n  },\n  \"index\" : \"rubk7x7dwcg15b9nroezc9vv91krv16tvyfxox5ozfwk1vawx5i202xvy6pfju367o3b9ck3yxzyioh7wlgh6heixtazqd93fjsjdj4jupeucfqew19jeumgqvi5gwaj11699bdnibcq7jpk2xgqs1hghn1fd6cfzwsdp6fgmtbcy7eb58uw3uzuvzo3gv9e\",\n  \"class\" : {\n    \"name\" : \"Joellen DuBuque\",\n    \"index\" : \"9w0zf36ex4lbup8xcmam457xybsff3kty6lni5qxu4rfaf72inrytqbzscipj7n8lia87m2uy99s21bo0211go1xgs6zgwhx267qom3j6tkb63oiyg5errlphvt8goqt2ajxrhnvdu442leksgercv3336iyxauz8ru0d8wbzco8l4hvjj4bhd72i9xkb29zg5x1mi\",\n    \"url\" : \"https://web.example.mocklab.io/365679\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/835803\"\n}, {\n  \"features\" : [ {\n    \"name\" : \"Lindsey Marks\",\n    \"index\" : \"v88m3jgipsiur8628m002p7s9mzwdhjuglssyw5x7ajajl\",\n    \"url\" : \"https://web.example.mocklab.io/282002\"\n  }, {\n    \"name\" : \"Cathie Jerde\",\n    \"index\" : \"v7qcjepfqk7fbqb562ki9dlgd6gx7lx3wsbvs1niv186ilwxb4ptbhqxiflrva9n3ok37ua9pynjjnju4b13pw1zs12xjd5q30votpjkrv3mon10hkr8brk2226rpjljteauwwleukdo3t5m9lssdt3gss39om2r43y6mmh\",\n    \"url\" : \"https://web.example.mocklab.io/446803\"\n  }, {\n    \"name\" : \"Wilfredo Batz\",\n    \"index\" : \"3sbj5dhgnz8jcvo52f3cmvqjap2ppnhmtv2275ai259cy3tx13eflnzaqhxne4t7nuwynqwnwz2ofl1ormdt8ef1qol5w89lph9vvkbu2w7b89u63f0\",\n    \"url\" : \"https://web.example.mocklab.io/425504\"\n  }, {\n    \"name\" : \"Leonora Kunde\",\n    \"index\" : \"t8sj5c18qc1vwqdiavwojk19srxvr7nb8wlsc3d97b\",\n    \"url\" : \"https://web.example.mocklab.io/624588\"\n  }, {\n    \"name\" : \"Helaine Stroman\",\n    \"index\" : \"tw3mu87uq7csrwcd63x3n2s2nidhndeopnj5w0lqyojxtgifqls6qqxo09u1wgo9ayif71p5l51yu7g9mtg0hzq157uhywnohsjlfds7tf6smd5ehewbk7oo2znn9y0s9mzjujargucrkzfyf5t1rgfekl584wnem7u5arkx6a\",\n    \"url\" : \"https://web.example.mocklab.io/052035\"\n  } ],\n  \"level\" : 6.286222940222955E307,\n  \"subclass\" : {\n    \"name\" : \"Herbert Johnston\",\n    \"index\" : \"19ib72zgvqxaxcrqj3v8iwin2hrxe27wjdzi9xbusk800ysoa2p6bwmmnonkcz6bfboj5iywzw22u6qck4gcra9ph0mgczbhpcro3ncb4sli3jk5uj5rc7g2gg6ew\",\n    \"url\" : \"https://web.example.mocklab.io/017429\"\n  },\n  \"index\" : \"lcn9ybosjm0zxyfiw31iun0seqb4dwc117evd9xt3m6z7ij7pp4ngpp2je0rphxs16e9z7th6eynucj95ti9vcq18w0pwht6lomh0ddp\",\n  \"class\" : {\n    \"name\" : \"Leanne Wyman Sr.\",\n    \"index\" : \"7e2e032l5r3t2npva42eqs8lc7v6uaag4ty4baoqccse1myh3dpp2c72ied5m7bzm8sdpiwid\",\n    \"url\" : \"https://web.example.mocklab.io/407933\"\n  },\n  \"url\" : \"https://web.example.mocklab.io/439474\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75bfbfb9-088b-4f05-8df3-5b1b837c7b69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.12141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/SubclassLevelResource"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "63e25044-7a9e-4c29-b296-16726d6f1fe0",
    "name" : "Get features available for a subclass.",
    "request" : {
      "urlPath" : "/api/subclasses/evocation/features",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1.2415414775727717E308,\n  \"results\" : [ {\n    \"name\" : \"Wally Trantow\",\n    \"index\" : \"9h6erdabpn4omam01tcwt984hmnmof8xsq3qqol0eajb6\",\n    \"url\" : \"https://web.example.mocklab.io/108375\"\n  }, {\n    \"name\" : \"Merlin Oberbrunner DVM\",\n    \"index\" : \"pul71lzvu1cn0681bohclbr6cxa6dqk3qp44yj7onbdqx9w1axmp6p991ncuvwc6t1w3fl3yq9lj781stmuuc70oj6ym9cf2coqqj07bfe3n9ar9ivu1zu5js1t2l2hm9kdjzvayi1gl0kqybc5p154qaydno1lovz563w\",\n    \"url\" : \"https://web.example.mocklab.io/617646\"\n  }, {\n    \"name\" : \"Nadene Bradtke\",\n    \"index\" : \"gl7gea9ib0x3pji3rfh5jt4a7x3x5njudejci1mx1x7o6ccfkh2iv8ywmhp1bpar42kfbpqjulkdqa99drrg4tc7ymqobjtkgaq9s0wuq7ji\",\n    \"url\" : \"https://web.example.mocklab.io/577463\"\n  }, {\n    \"name\" : \"Sherell Kulas\",\n    \"index\" : \"zozw871jruwdunt2fqjrduz5pppa\",\n    \"url\" : \"https://web.example.mocklab.io/982005\"\n  }, {\n    \"name\" : \"Carmon Schultz\",\n    \"index\" : \"5jrjfi9hgoffzm5k0pv611i9w5vmg01yeju77ldtxsb3dlxt18yem3irkd7bpbza41rh88foiozao2z6is67j7mjlbohe9d59r6t9ix1p1bp0eq781awi18vcv61b23d8w4g384pkphv7swf\",\n    \"url\" : \"https://web.example.mocklab.io/589035\"\n  }, {\n    \"name\" : \"Spring Wisozk\",\n    \"index\" : \"9adydes5avnctry55ja1armsk9pa971tkeia0v06npdtxe7yyead3yj3vquplwareefx4brnovqumew74qhgb9e3fcrm0z15935rp268l7g8hl6efqjci0l64k3awsquoqvpq4vd\",\n    \"url\" : \"https://web.example.mocklab.io/295904\"\n  }, {\n    \"name\" : \"Williams Beahan\",\n    \"index\" : \"odwqgf1dv3xq43ot92amkfufy2n7idyal2n6pfqk4029romh8foxih7lgw5pp575noxchp9q3327a070m8nlmv5k2a5gqy82qkuqqcycdd8sfr\",\n    \"url\" : \"https://web.example.mocklab.io/024071\"\n  }, {\n    \"name\" : \"Jamel Kuhlman\",\n    \"index\" : \"xygibzaayuvxk806ybftckinyunsdeiqiaar0e4uenzrvdtplz36p16bsti8w6hvf715h9oaeldn3h3t11a1v267gjswagluck16vmt8rk1cc1hcrxgfh8ugkkbk4n5i8pfdh20q64fy68h3jk9fsaxr\",\n    \"url\" : \"https://web.example.mocklab.io/714643\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63e25044-7a9e-4c29-b296-16726d6f1fe0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.114227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "18e61357-5776-4f4b-b8ed-ef0abecd69a5",
    "name" : "Get a subclass by index.",
    "request" : {
      "urlPath" : "/api/subclasses/devotion",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"class\" : {\n    \"index\" : \"warlock\",\n    \"name\" : \"Warlock\",\n    \"url\" : \"/api/classes/warlock\"\n  },\n  \"desc\" : [ \"You have made a pact with a fiend from the lower planes of existence, a being whose aims are evil, even if you strive against those aims. Such beings desire the corruption or destruction of all things, ultimately including you. Fiends powerful enough to forge a pact include demon lords such as Demogorgon, Orcus, Fraz'Urb-luu, and Baphomet; archdevils such as Asmodeus, Dispater, Mephistopheles, and Belial; pit fiends and balors that are especially mighty; and ultroloths and other lords of the yugoloths.\" ],\n  \"index\" : \"fiend\",\n  \"name\" : \"Fiend\",\n  \"spells\" : [ {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-1\",\n      \"name\" : \"Warlock 1\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/1\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"burning-hands\",\n      \"name\" : \"Burning Hands\",\n      \"url\" : \"/api/spells/burning-hands\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-1\",\n      \"name\" : \"Warlock 1\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/1\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"command\",\n      \"name\" : \"Command\",\n      \"url\" : \"/api/spells/command\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-3\",\n      \"name\" : \"Warlock 3\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/3\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"blindness-deafness\",\n      \"name\" : \"Blindness/Deafness\",\n      \"url\" : \"/api/spells/blindness-deafness\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-3\",\n      \"name\" : \"Warlock 3\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/3\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"scorching-ray\",\n      \"name\" : \"Scorching Ray\",\n      \"url\" : \"/api/spells/scorching-ray\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-5\",\n      \"name\" : \"Warlock 5\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/5\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"fireball\",\n      \"name\" : \"Fireball\",\n      \"url\" : \"/api/spells/fireball\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-5\",\n      \"name\" : \"Warlock 5\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/5\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"stinking-cloud\",\n      \"name\" : \"Stinking Cloud\",\n      \"url\" : \"/api/spells/stinking-cloud\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-7\",\n      \"name\" : \"Warlock 7\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/7\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"fire-shield\",\n      \"name\" : \"Fire Shield\",\n      \"url\" : \"/api/spells/fire-shield\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-7\",\n      \"name\" : \"Warlock 7\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/7\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"wall-of-fire\",\n      \"name\" : \"Wall of Fire\",\n      \"url\" : \"/api/spells/wall-of-fire\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-9\",\n      \"name\" : \"Warlock 9\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/9\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"flame-strike\",\n      \"name\" : \"Flame Strike\",\n      \"url\" : \"/api/spells/flame-strike\"\n    }\n  }, {\n    \"prerequisites\" : [ {\n      \"index\" : \"warlock-9\",\n      \"name\" : \"Warlock 9\",\n      \"type\" : \"level\",\n      \"url\" : \"/api/classes/warlock/levels/9\"\n    } ],\n    \"spell\" : {\n      \"index\" : \"hallow\",\n      \"name\" : \"Hallow\",\n      \"url\" : \"/api/spells/hallow\"\n    }\n  } ],\n  \"subclass_flavor\" : \"Otherworldly Patron\",\n  \"subclass_levels\" : \"/api/subclasses/fiend/levels\",\n  \"url\" : \"/api/subclasses/fiend\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18e61357-5776-4f4b-b8ed-ef0abecd69a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.112744Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "class" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "spells" : {
                  "items" : {
                    "properties" : {
                      "prerequisites" : {
                        "items" : {
                          "$ref" : "#/components/schemas/SpellPrerequisite"
                        },
                        "type" : "array"
                      },
                      "spell" : {
                        "$ref" : "#/components/schemas/APIReference"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                },
                "subclass_flavor" : {
                  "description" : "Lore-friendly flavor text for a classes respective subclass.",
                  "type" : "string"
                },
                "subclass_levels" : {
                  "description" : "Resource url that shows the subclass level progression.",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Subclass`\n"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "42eb2c78-d02b-4bfe-8e74-f5dba2b78742",
    "name" : "Get a spell by index.",
    "request" : {
      "urlPath" : "/api/spells/atchwzl54iww",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attack_type\" : \"ranged\",\n  \"casting_time\" : \"1 action\",\n  \"classes\" : [ {\n    \"index\" : \"cleric\",\n    \"name\" : \"Cleric\",\n    \"url\" : \"/api/classes/cleric\"\n  } ],\n  \"components\" : [ \"V\", \"S\" ],\n  \"concentration\" : false,\n  \"damage\" : {\n    \"damage_at_character_level\" : {\n      \"1\" : \"1d8\",\n      \"5\" : \"2d8\",\n      \"11\" : \"3d8\",\n      \"17\" : \"4d8\"\n    },\n    \"damage_type\" : {\n      \"index\" : \"radiant\",\n      \"name\" : \"Radiant\",\n      \"url\" : \"/api/damage-types/radiant\"\n    }\n  },\n  \"dc\" : {\n    \"dc_success\" : \"none\",\n    \"dc_type\" : {\n      \"index\" : \"dex\",\n      \"name\" : \"DEX\",\n      \"url\" : \"/api/ability-scores/dex\"\n    }\n  },\n  \"desc\" : [ \"Flame-like radiance descends on a creature that you can see within range. The target must succeed on a dexterity saving throw or take 1d8 radiant damage. The target gains no benefit from cover for this saving throw.\", \"The spell's damage increases by 1d8 when you reach 5th level (2d8), 11th level (3d8), and 17th level (4d8).\" ],\n  \"duration\" : \"Instantaneous\",\n  \"higher_level\" : [ ],\n  \"index\" : \"sacred-flame\",\n  \"level\" : 0,\n  \"name\" : \"Sacred Flame\",\n  \"range\" : \"60 feet\",\n  \"ritual\" : false,\n  \"school\" : {\n    \"index\" : \"evocation\",\n    \"name\" : \"Evocation\",\n    \"url\" : \"/api/magic-schools/evocation\"\n  },\n  \"subclasses\" : [ {\n    \"index\" : \"lore\",\n    \"name\" : \"Lore\",\n    \"url\" : \"/api/subclasses/lore\"\n  } ],\n  \"url\" : \"/api/spells/sacred-flame\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42eb2c78-d02b-4bfe-8e74-f5dba2b78742",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.112574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "area_of_effect" : {
                  "$ref" : "#/components/schemas/AreaOfEffect"
                },
                "attack_type" : {
                  "description" : "Attack type of the spell.",
                  "type" : "string"
                },
                "casting_time" : {
                  "description" : "How long it takes for the spell to activate.",
                  "type" : "string"
                },
                "classes" : {
                  "description" : "List of classes that are able to learn the spell.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "components" : {
                  "description" : "List of shorthand for required components of the spell.\nV: verbal\nS: somatic\nM: material\n",
                  "items" : {
                    "enum" : [ "V", "S", "M" ],
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "concentration" : {
                  "description" : "Determines if a spell needs concentration to persist.",
                  "type" : "boolean"
                },
                "damage" : {
                  "oneOf" : [ {
                    "$ref" : "#/components/schemas/DamageAtCharacterLevel"
                  }, {
                    "$ref" : "#/components/schemas/DamageAtSlotLevel"
                  } ]
                },
                "duration" : {
                  "description" : "How long the spell effect lasts.",
                  "type" : "string"
                },
                "higher_level" : {
                  "description" : "List of descriptions for casting the spell at higher levels.",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "level" : {
                  "description" : "Level of the spell.",
                  "type" : "number"
                },
                "material" : {
                  "description" : "Material component for the spell to be cast.",
                  "type" : "string"
                },
                "range" : {
                  "description" : "Range of the spell, usually expressed in feet.",
                  "type" : "string"
                },
                "ritual" : {
                  "description" : "Determines if a spell can be cast in a 10-min(in-game) ritual.",
                  "type" : "boolean"
                },
                "school" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "subclasses" : {
                  "description" : "List of subclasses that have access to the spell.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Spell`\n"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "214ae67d-e54f-4990-a910-505c7b277acc",
    "name" : "Get list of spells with optional filtering.",
    "request" : {
      "urlPath" : "/api/spells",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1.7084823359578221E308,\n  \"results\" : [ {\n    \"name\" : \"Jackqueline Emmerich\",\n    \"index\" : \"ekhnsvucug2p42ojnqn66myvt668aufaqdtkz7y51lh4b6phw655qc0yrme5vs65uuipcq57fi7st84gfojyp75971vpit199q5n3i0r2vce5i41vfglhowyqd0pxdblv1qh8lgb61z9clw91zhs0r2jr9211cn95jgsvcwlpa157s62s12\",\n    \"url\" : \"https://web.example.mocklab.io/317362\"\n  }, {\n    \"name\" : \"Windy Bednar\",\n    \"index\" : \"7hdb6g697fmwvu3m4fc2gfcfex8pqwloamtvh60ae0m1n8wubfxzydgszskvcb3pm18uohg23qsvw05uq6sle7lndzkgtnvx0d7o3rmgjba720xmgkofk9tfvfpmlnkeoyuox26idyhj0m8yudaa4um7ubipz8eithoyoj5ftc8\",\n    \"url\" : \"https://web.example.mocklab.io/706101\"\n  }, {\n    \"name\" : \"Lolita Fritsch\",\n    \"index\" : \"o2yu3waf9jo7w453vgpcwiwo82dy17naawo64ctl9ut7hhg68amkq7zxniaw0vue8y\",\n    \"url\" : \"https://web.example.mocklab.io/003454\"\n  }, {\n    \"name\" : \"Laila Bruen V\",\n    \"index\" : \"0depabq6mk13hnf2epmas770bronoog5y1igxxe1alig17lp44u3d84g4pvdzuv4pr8gund4o9fp\",\n    \"url\" : \"https://web.example.mocklab.io/473598\"\n  }, {\n    \"name\" : \"Ms. Sherell Dietrich\",\n    \"index\" : \"50jyozkj3nc3s26c6i2pchkynkfut6gs56ms1t86qa2kubolqgzv7c2il8mr0o6vj5vqitkw3a2j1qnculp6kxup7rxcheoeus6\",\n    \"url\" : \"https://web.example.mocklab.io/539934\"\n  }, {\n    \"name\" : \"Annie Bergnaum I\",\n    \"index\" : \"t6det0pks6w5un\",\n    \"url\" : \"https://web.example.mocklab.io/990656\"\n  }, {\n    \"name\" : \"August Stark\",\n    \"index\" : \"ql4py2j\",\n    \"url\" : \"https://web.example.mocklab.io/019444\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "214ae67d-e54f-4990-a910-505c7b277acc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.112265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "abad6911-97b1-4d3f-b545-0a739fe9b4e7",
    "name" : "Get a skill by index.",
    "request" : {
      "urlPath" : "/api/skills/animal-handling",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ability_score\" : {\n    \"index\" : \"dex\",\n    \"name\" : \"DEX\",\n    \"url\" : \"/api/ability-scores/dex\"\n  },\n  \"desc\" : [ \"Your Dexterity (Acrobatics) check covers your attempt to stay on your feet in a tricky situation, such as when you're trying to run across a sheet of ice, balance on a tightrope, or stay upright on a rocking ship's deck. The GM might also call for a Dexterity (Acrobatics) check to see if you can perform acrobatic stunts, including dives, rolls, somersaults, and flips.\" ],\n  \"index\" : \"acrobatics\",\n  \"name\" : \"Acrobatics\",\n  \"url\" : \"/api/skills/acrobatics\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abad6911-97b1-4d3f-b545-0a739fe9b4e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.111011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "ability_score" : {
                  "$ref" : "#/components/schemas/APIReference"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Skill`\n"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "a0b4489e-a222-4641-a463-70ec30237a43",
    "name" : "Get a rule by index.",
    "request" : {
      "urlPath" : "/api/rules/adventuring",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : \"# Using Ability Scores\\n\\nSix abilities provide a quick description of every creature's physical and mental characteristics:\\n- **Strength**, measuring physical power\\n- **Dexterity**, measuring agility\\n- **Constitution**, measuring endurance\\n- **Intelligence**, measuring reasoning and memory\\n- **Wisdom**, measuring perception and insight\\n- **Charisma**, measuring force of personality\\n\\nIs a character muscle-bound and insightful? Brilliant and charming? Nimble and hardy? Ability scores define these qualities-a creature's assets as well as weaknesses.\\n\\nThe three main rolls of the game-the ability check, the saving throw, and the attack roll-rely on the six ability scores. The book's introduction describes the basic rule behind these rolls: roll a d20, add an ability modifier derived from one of the six ability scores, and compare the total to a target number.\\n\\n**Ability Scores and Modifiers** Each of a creature's abilities has a score, a number that defines the magnitude of that ability. An ability score is not just a measure of innate capabilities, but also encompasses a creature's training and competence in activities related to that ability.\\n\\nA score of 10 or 11 is the normal human average, but adventurers and many monsters are a cut above average in most abilities. A score of 18 is the highest that a person usually reaches. Adventurers can have scores as high as 20, and monsters and divine beings can have scores as high as 30.\\n\\nEach ability also has a modifier, derived from the score and ranging from -5 (for an ability score of 1) to +10 (for a score of 30). The Ability Scores and Modifiers table notes the ability modifiers for the range of possible ability scores, from 1 to 30.\\n\",\n  \"index\" : \"using-ability-scores\",\n  \"name\" : \"Using Ability Scores\",\n  \"subsections\" : [ {\n    \"index\" : \"ability-scores-and-modifiers\",\n    \"name\" : \"Ability Scores and Modifiers\",\n    \"url\" : \"/api/rule-sections/ability-scores-and-modifiers\"\n  }, {\n    \"index\" : \"advantage-and-disadvantage\",\n    \"name\" : \"Advantage and Disadvantage\",\n    \"url\" : \"/api/rule-sections/advantage-and-disadvantage\"\n  }, {\n    \"index\" : \"proficiency-bonus\",\n    \"name\" : \"Proficiency Bonus\",\n    \"url\" : \"/api/rule-sections/proficiency-bonus\"\n  }, {\n    \"index\" : \"ability-checks\",\n    \"name\" : \"Ability Checks\",\n    \"url\" : \"/api/rule-sections/ability-checks\"\n  }, {\n    \"index\" : \"using-each-ability\",\n    \"name\" : \"Using Each Ability\",\n    \"url\" : \"/api/rule-sections/using-each-ability\"\n  }, {\n    \"index\" : \"saving-throws\",\n    \"name\" : \"Saving Throws\",\n    \"url\" : \"/api/rule-sections/saving-throws\"\n  } ],\n  \"url\" : \"/api/rules/using-ability-scores\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0b4489e-a222-4641-a463-70ec30237a43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.110929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "desc" : {
                  "description" : "Description of the rule.",
                  "type" : "string"
                },
                "subsections" : {
                  "description" : "List of sections for each subheading underneath the rule in the SRD.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Rule`\n"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "6d1cb4df-6fee-4e28-9f09-9770a8d02135",
    "name" : "Get a rule section by index.",
    "request" : {
      "urlPath" : "/api/rule-sections/saving-throws",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : \"## Time\\n\\nIn situations where keeping track of the passage of time is important, the GM determines the time a task requires. The GM might use a different time scale depending on the context of the situation at hand. In a dungeon environment, the adventurers' movement happens on a scale of **minutes**. It takes them about a minute to creep down a long hallway, another minute to check for traps on the door at the end of the hall, and a good ten minutes to search the chamber beyond for anything interesting or valuable.\\n\\nIn a city or wilderness, a scale of **hours** is often more appropriate. Adventurers eager to reach the lonely tower at the heart of the forest hurry across those fifteen miles in just under four hours' time.\\n\\nFor long journeys, a scale of **days** works best.\\n\\nFollowing the road from Baldur's Gate to Waterdeep, the adventurers spend four uneventful days before a goblin ambush interrupts their journey.\\n\\nIn combat and other fast-paced situations, the game relies on **rounds**, a 6-second span of time.\\n\",\n  \"index\" : \"time\",\n  \"name\" : \"Time\",\n  \"url\" : \"/api/rule-sections/time\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d1cb4df-6fee-4e28-9f09-9770a8d02135",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.110797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "desc" : {
                  "description" : "Description of the rule.",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ],
            "description" : "`RuleSection`\n"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "3df6567e-55b6-4a15-8c5f-a2149e872842",
    "name" : "Get traits available for a race.",
    "request" : {
      "urlPath" : "/api/races/half-elf/traits",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 7.785114855232753E306,\n  \"results\" : [ {\n    \"name\" : \"Bruna Wuckert V\",\n    \"index\" : \"uowpa6p0z5vrnf4hzqmyknfrmfeh13sl1izk45cfkyz2ri0r9a92kl677hbonnk20wrbrbsepppyf06smkfpvs11z\",\n    \"url\" : \"https://web.example.mocklab.io/592400\"\n  }, {\n    \"name\" : \"Elza Christiansen IV\",\n    \"index\" : \"m973xlqrag0q2mkipkaq2m5dio2m0cpiaywsoelb1rpjspze76tewj3ny6ffzku6cf6s957e3wf8kbaqjjzyt0zmkfswmklvut5\",\n    \"url\" : \"https://web.example.mocklab.io/475244\"\n  }, {\n    \"name\" : \"Malvina Walsh\",\n    \"index\" : \"85zwr8n3pmlld400gd05gw4jdbrmuu4gj4m0ctna4wd2kcjdo7j6h2xma737548re2myl8hao7jw9my37\",\n    \"url\" : \"https://web.example.mocklab.io/113600\"\n  }, {\n    \"name\" : \"Golda Bauch\",\n    \"index\" : \"mwipdibb70u059diobuaw8tjlfid7lee5uqieewtt8jlsiif1l22c49jv3e8zdhk5f7uni4ut53sn31r87s29tu7pexqi5fp5cssiicef27o62vcuna0ksl17rw1zj3b6prdoenayw6s2tymyt66rq9\",\n    \"url\" : \"https://web.example.mocklab.io/814085\"\n  }, {\n    \"name\" : \"Marcelo Witting IV\",\n    \"index\" : \"h0h5jhf5lxounccxss6a8fwim3qsfx19174pz95jene19ekqiw6lcqj765dlmc2nfutxg0ndqm0xez07keum45ktapycxpx3ykl84gjss9d1x74v2ur9445frlxnayvtbyskxzyakp6zwbn7in4ugnsqgrtsnoig90tjpkdq3myuxhn62u6dsnzdurvtp03ow5syin2\",\n    \"url\" : \"https://web.example.mocklab.io/263244\"\n  }, {\n    \"name\" : \"Edgar Runolfsdottir\",\n    \"index\" : \"w1p5bsyy83qygfhrilziao45rh3cm7w97n8kmbkyayjcdvxc9j9zzy9ej21nkr6wi2ubm5eh5xg91aiie9n5tgxsnnlnc3cu9vq5d8dga6je9h1g86e0ma4hh9im1pdqsq9ai6hyr2uw472n1flggt5e\",\n    \"url\" : \"https://web.example.mocklab.io/018664\"\n  }, {\n    \"name\" : \"Reyes Bartoletti\",\n    \"index\" : \"n5ua1hebhe8xa5n2zugleltzcel0j5fljld40dd2hvz0sd85mvodu34ucyv977zo1hfrsaw5s6p46rs5siobzcwvm16l2h2uttu18w3dleekvjsnetk228cb8b234klwqqvfgfjh502eod3doxrr4nl9u9jkxerxhnmo9vg2n3146d6259fu0pxdh254\",\n    \"url\" : \"https://web.example.mocklab.io/949880\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3df6567e-55b6-4a15-8c5f-a2149e872842",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.11071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "88eea782-9409-40ed-bbc9-297c3980f48d",
    "name" : "Get subraces available for a race.",
    "request" : {
      "urlPath" : "/api/races/elf/subraces",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 4.681465481273729E307,\n  \"results\" : [ {\n    \"name\" : \"Nedra O'Keefe MD\",\n    \"index\" : \"jnyghcestl5hia3zg20f078k7sk9dgg6\",\n    \"url\" : \"https://web.example.mocklab.io/353293\"\n  }, {\n    \"name\" : \"Shannon O'Hara Jr.\",\n    \"index\" : \"qccdbns4oci6m\",\n    \"url\" : \"https://web.example.mocklab.io/434410\"\n  }, {\n    \"name\" : \"Joella Koelpin\",\n    \"index\" : \"dpijmyc9nza64q8pup66vkg6726st4li5utycrzg3c6biop107ofj54spuqp2poby6jub5l4g5e6e53lg27giy9d2lo3u32key4pjeiffynrfd532vnovjpgqjcdqu2snd4szswv6skgq40ay5d4jcii2ujht2dfsvgu4oynuz5rvy02lpss2\",\n    \"url\" : \"https://web.example.mocklab.io/206379\"\n  }, {\n    \"name\" : \"Rayford Kling\",\n    \"index\" : \"alkx0o97ppyj4kt7wm9m87ezhwmmx3dsxaige9m1d1eb9jvq78idkffoz4h9hc7d9ofvi6w2d3v9ieypaa8u9o6emwvbvrko06nsddx387c1yla5i6873zn22s82fww56tfunofjjs5zexbxy59z6fqok\",\n    \"url\" : \"https://web.example.mocklab.io/537162\"\n  }, {\n    \"name\" : \"Wendell Homenick\",\n    \"index\" : \"aeuv3ljhghu0jen7rp0jpf1dyschch8fqec7feii5c1vrqs869s5g9afb5b3abi29sc032iysvmh5zrtynpjq0ei208t\",\n    \"url\" : \"https://web.example.mocklab.io/553666\"\n  }, {\n    \"name\" : \"Vicente O'Kon\",\n    \"index\" : \"zrctojdwrbqjcrsaflpauvy9taq8fbevgkpejadfqudeofya5p1rmouahnzummpjgn44963x4hu8p0gy49xfs4wnvxmbmeuov4qvz7tyr8j7azxnst1\",\n    \"url\" : \"https://web.example.mocklab.io/060618\"\n  }, {\n    \"name\" : \"Patience Larson\",\n    \"index\" : \"bxgdena3y5j7cusm38e7bdqtpbomyk6si7fof5eurglgjm08kbstc0geacntc5en3s1d532tf43v8qi2yvqfs588xfomll2tf5thj8ge97sqazqc4cddqvkul06gqzb84goju8ezkfs16sn9ifkgyn29b7lgawzl0apk9htqdms2o5j3sakru\",\n    \"url\" : \"https://web.example.mocklab.io/270661\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88eea782-9409-40ed-bbc9-297c3980f48d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.109395Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "a201d6c4-9fcb-4db3-8e8f-2d96b5248c1d",
    "name" : "Get proficiencies available for a race.",
    "request" : {
      "urlPath" : "/api/races/half-elf/proficiencies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 2.640366615773381E307,\n  \"results\" : [ {\n    \"name\" : \"Roderick Gislason I\",\n    \"index\" : \"gbng9lib7tvvbnerq8mr5s3893xdup795nvydwzcuk9bsh8hbre4tmmt2s765sk6jnsjzdyx5cd6xytu5lltrsabgsaht4jn9bui19nbo5gtiu60zs07meepone0guyzk7rf2z3hqvpabexby1b859i92dup8p3ff2e6l49wce6zct5xxo2qi\",\n    \"url\" : \"https://web.example.mocklab.io/332332\"\n  }, {\n    \"name\" : \"Hugo Emmerich\",\n    \"index\" : \"utepuqpga07rzo46959w07p5rcla2t16vapdwv5doahgk6wtszzy6tann80215i22euoon54x5ahm59r3yh1zdvtr5h8gziobdqw8bqu2vn0yghav28df2ikp93jnkyoueh3wu47u5zrkgmk3v74\",\n    \"url\" : \"https://web.example.mocklab.io/188367\"\n  }, {\n    \"name\" : \"Hermelinda Turcotte\",\n    \"index\" : \"jeegt5oc4do100tpyqoubp5gw17su1y\",\n    \"url\" : \"https://web.example.mocklab.io/125311\"\n  }, {\n    \"name\" : \"Gale Kovacek Jr.\",\n    \"index\" : \"ea7mo2fu8j355pae0dme3x3y1y7au9rqzvkxs7zpem2ignhrdpi61pi96wwdt2vkmbfzla1lrxdglvuyj5mla1z7w72odjyygntr344rktlxwja3qwzfa4px4z7zhq30gaykq34is94bqpwv1upn\",\n    \"url\" : \"https://web.example.mocklab.io/067635\"\n  }, {\n    \"name\" : \"Marcel Hermann\",\n    \"index\" : \"ukw4nf6teuembb64r64fk9sgrrhsscq\",\n    \"url\" : \"https://web.example.mocklab.io/559764\"\n  }, {\n    \"name\" : \"Lemuel Langosh II\",\n    \"index\" : \"qnbebesxwntxkkfnpbelyuc71xuowitltr\",\n    \"url\" : \"https://web.example.mocklab.io/496788\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a201d6c4-9fcb-4db3-8e8f-2d96b5248c1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.108192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "2604f95c-840f-43ae-b30a-4b396d78e6c7",
    "name" : "Get a race by index.",
    "request" : {
      "urlPath" : "/api/races/half-orc",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ability_bonuses\" : [ {\n    \"ability_score\" : {\n      \"index\" : \"dex\",\n      \"name\" : \"DEX\",\n      \"url\" : \"/api/ability-scores/dex\"\n    },\n    \"bonus\" : 2\n  } ],\n  \"age\" : \"Although elves reach physical maturity at about the same age as humans, the elven understanding of adulthood goes beyond physical growth to encompass worldly experience. An elf typically claims adulthood and an adult name around the age of 100 and can live to be 750 years old.\",\n  \"alignment\" : \"Elves love freedom, variety, and self-expression, so they lean strongly toward the gentler aspects of chaos. They value and protect others' freedom as well as their own, and they are more often good than not. The drow are an exception; their exile has made them vicious and dangerous. Drow are more often evil than not.\",\n  \"index\" : \"elf\",\n  \"language_desc\" : \"You can speak, read, and write Common and Elvish. Elvish is fluid, with subtle intonations and intricate grammar. Elven literature is rich and varied, and their songs and poems are famous among other races. Many bards learn their language so they can add Elvish ballads to their repertoires.\",\n  \"languages\" : [ {\n    \"index\" : \"common\",\n    \"name\" : \"Common\",\n    \"url\" : \"/api/languages/common\"\n  }, {\n    \"index\" : \"elvish\",\n    \"name\" : \"Elvish\",\n    \"url\" : \"/api/languages/elvish\"\n  } ],\n  \"name\" : \"Elf\",\n  \"size\" : \"Medium\",\n  \"size_description\" : \"Elves range from under 5 to over 6 feet tall and have slender builds. Your size is Medium.\",\n  \"speed\" : 30,\n  \"starting_proficiencies\" : [ {\n    \"index\" : \"skill-perception\",\n    \"name\" : \"Skill: Perception\",\n    \"url\" : \"/api/proficiencies/skill-perception\"\n  } ],\n  \"subraces\" : [ {\n    \"index\" : \"high-elf\",\n    \"name\" : \"High Elf\",\n    \"url\" : \"/api/subraces/high-elf\"\n  } ],\n  \"traits\" : [ {\n    \"index\" : \"darkvision\",\n    \"name\" : \"Darkvision\",\n    \"url\" : \"/api/traits/darkvision\"\n  }, {\n    \"index\" : \"fey-ancestry\",\n    \"name\" : \"Fey Ancestry\",\n    \"url\" : \"/api/traits/fey-ancestry\"\n  }, {\n    \"index\" : \"trance\",\n    \"name\" : \"Trance\",\n    \"url\" : \"/api/traits/trance\"\n  } ],\n  \"url\" : \"/api/races/elf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2604f95c-840f-43ae-b30a-4b396d78e6c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.107019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "ability_bonuses" : {
                  "description" : "Racial bonuses to ability scores.",
                  "items" : {
                    "$ref" : "#/components/schemas/AbilityBonus"
                  },
                  "type" : "array"
                },
                "age" : {
                  "description" : "Flavor description of possible ages for this race.",
                  "type" : "string"
                },
                "alignment" : {
                  "description" : "Flavor description of likely alignments this race takes.",
                  "type" : "string"
                },
                "language_desc" : {
                  "description" : "Flavor description of the languages this race knows.",
                  "type" : "string"
                },
                "languages" : {
                  "description" : "Starting languages for all new characters of this race.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "size" : {
                  "description" : "Size class of this race.",
                  "type" : "string"
                },
                "size_description" : {
                  "description" : "Flavor description of height and weight for this race.",
                  "type" : "string"
                },
                "speed" : {
                  "description" : "Base move speed for this race (in feet per round).",
                  "type" : "number"
                },
                "starting_proficiencies" : {
                  "description" : "Starting proficiencies for all new characters of this race.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "starting_proficiency_options" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "subraces" : {
                  "description" : "All possible subraces that this race includes.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "traits" : {
                  "description" : "Racial traits that provide benefits to its members.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Race`\n"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "d6e55d40-ae54-451b-850f-5bb0d4b133b6",
    "name" : "Get a proficiency by index.",
    "request" : {
      "urlPath" : "/api/proficiencies/kqyjrmzia6dh9y61f617afjh60qzq5kbsvi96v5i1mqhfdh8mfgd3cd4h9j4",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"classes\" : [ {\n    \"index\" : \"barbarian\",\n    \"name\" : \"Barbarian\",\n    \"url\" : \"/api/classes/barbarian\"\n  }, {\n    \"index\" : \"cleric\",\n    \"name\" : \"Cleric\",\n    \"url\" : \"/api/classes/cleric\"\n  }, {\n    \"index\" : \"druid\",\n    \"name\" : \"Druid\",\n    \"url\" : \"/api/classes/druid\"\n  }, {\n    \"index\" : \"ranger\",\n    \"name\" : \"Ranger\",\n    \"url\" : \"/api/classes/ranger\"\n  } ],\n  \"index\" : \"medium-armor\",\n  \"name\" : \"Medium Armor\",\n  \"races\" : [ ],\n  \"reference\" : {\n    \"index\" : \"medium-armor\",\n    \"name\" : \"Medium Armor\",\n    \"url\" : \"/api/equipment-categories/medium-armor\"\n  },\n  \"type\" : \"Armor\",\n  \"url\" : \"/api/proficiencies/medium-armor\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6e55d40-ae54-451b-850f-5bb0d4b133b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.106785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "classes" : {
                  "description" : "Classes that start with this proficiency.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "races" : {
                  "description" : "Races that start with this proficiency.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "reference" : {
                  "allOf" : [ {
                    "$ref" : "#/components/schemas/APIReference"
                  } ],
                  "description" : "`APIReference` to the full description of the related resource.\n"
                },
                "type" : {
                  "description" : "The general category of the proficiency.",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Proficiency`\n"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "79fc854f-2770-4615-8c59-a33f0bbe7d3f",
    "name" : "Get monster by index.",
    "request" : {
      "urlPath" : "/api/monsters/biv818tiaxbib2bf3xtxysxxnz5u9c87ak4jhnnl6p5wkrrkrtrkoqtb3a61ol4ra86rwpqboj0tu0h07te6h889kih5me8bu1do60hudxewxkwamxrbbzkqt6v9amvsstyfpzjrv2m2gkv",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"actions\" : [ {\n    \"actions\" : [ {\n      \"action_name\" : \"Tentacle\",\n      \"count\" : 3,\n      \"type\" : \"melee\"\n    } ],\n    \"attacks\" : [ ],\n    \"damage\" : [ ],\n    \"desc\" : \"The aboleth makes three tentacle attacks.\",\n    \"multiattack_type\" : \"actions\",\n    \"name\" : \"Multiattack\"\n  }, {\n    \"attack_bonus\" : 9,\n    \"attacks\" : [ ],\n    \"damage\" : [ {\n      \"damage_dice\" : \"2d6+5\",\n      \"damage_type\" : {\n        \"index\" : \"bludgeoning\",\n        \"name\" : \"Bludgeoning\",\n        \"url\" : \"/api/damage-types/bludgeoning\"\n      }\n    }, {\n      \"damage_dice\" : \"1d12\",\n      \"damage_type\" : {\n        \"index\" : \"acid\",\n        \"name\" : \"Acid\",\n        \"url\" : \"/api/damage-types/acid\"\n      }\n    } ],\n    \"dc\" : {\n      \"dc_type\" : {\n        \"index\" : \"con\",\n        \"name\" : \"CON\",\n        \"url\" : \"/api/ability-scores/con\"\n      },\n      \"dc_value\" : 14,\n      \"success_type\" : \"none\"\n    },\n    \"desc\" : \"Melee Weapon Attack: +9 to hit, reach 10 ft., one target. Hit: 12 (2d6 + 5) bludgeoning damage. If the target is a creature, it must succeed on a DC 14 Constitution saving throw or become diseased. The disease has no effect for 1 minute and can be removed by any magic that cures disease. After 1 minute, the diseased creature's skin becomes translucent and slimy, the creature can't regain hit points unless it is underwater, and the disease can be removed only by heal or another disease-curing spell of 6th level or higher. When the creature is outside a body of water, it takes 6 (1d12) acid damage every 10 minutes unless moisture is applied to the skin before 10 minutes have passed.\",\n    \"name\" : \"Tentacle\"\n  }, {\n    \"attack_bonus\" : 9,\n    \"attacks\" : [ ],\n    \"damage\" : [ {\n      \"damage_dice\" : \"3d6+5\",\n      \"damage_type\" : {\n        \"index\" : \"bludgeoning\",\n        \"name\" : \"Bludgeoning\",\n        \"url\" : \"/api/damage-types/bludgeoning\"\n      }\n    } ],\n    \"desc\" : \"Melee Weapon Attack: +9 to hit, reach 10 ft. one target. Hit: 15 (3d6 + 5) bludgeoning damage.\",\n    \"name\" : \"Tail\"\n  }, {\n    \"attacks\" : [ ],\n    \"damage\" : [ ],\n    \"dc\" : {\n      \"dc_type\" : {\n        \"index\" : \"wis\",\n        \"name\" : \"WIS\",\n        \"url\" : \"/api/ability-scores/wis\"\n      },\n      \"dc_value\" : 14,\n      \"success_type\" : \"none\"\n    },\n    \"desc\" : \"The aboleth targets one creature it can see within 30 ft. of it. The target must succeed on a DC 14 Wisdom saving throw or be magically charmed by the aboleth until the aboleth dies or until it is on a different plane of existence from the target. The charmed target is under the aboleth's control and can't take reactions, and the aboleth and the target can communicate telepathically with each other over any distance.\\nWhenever the charmed target takes damage, the target can repeat the saving throw. On a success, the effect ends. No more than once every 24 hours, the target can also repeat the saving throw when it is at least 1 mile away from the aboleth.\",\n    \"name\" : \"Enslave\",\n    \"usage\" : {\n      \"times\" : 3,\n      \"type\" : \"per day\"\n    }\n  } ],\n  \"alignment\" : \"lawful evil\",\n  \"armor_class\" : [ {\n    \"type\" : \"natural\",\n    \"value\" : 17\n  } ],\n  \"challenge_rating\" : 10,\n  \"charisma\" : 18,\n  \"condition_immunities\" : [ ],\n  \"constitution\" : 15,\n  \"damage_immunities\" : [ ],\n  \"damage_resistances\" : [ ],\n  \"damage_vulnerabilities\" : [ ],\n  \"dexterity\" : 9,\n  \"forms\" : [ ],\n  \"hit_dice\" : \"18d10\",\n  \"hit_points\" : 135,\n  \"hit_points_roll\" : \"18d10+36\",\n  \"index\" : \"aboleth\",\n  \"intelligence\" : 18,\n  \"languages\" : \"Deep Speech, telepathy 120 ft.\",\n  \"legendary_actions\" : [ {\n    \"damage\" : [ ],\n    \"desc\" : \"The aboleth makes a Wisdom (Perception) check.\",\n    \"name\" : \"Detect\"\n  }, {\n    \"damage\" : [ ],\n    \"desc\" : \"The aboleth makes one tail attack.\",\n    \"name\" : \"Tail Swipe\"\n  }, {\n    \"attack_bonus\" : 0,\n    \"damage\" : [ {\n      \"damage_dice\" : \"3d6\",\n      \"damage_type\" : {\n        \"index\" : \"psychic\",\n        \"name\" : \"Psychic\",\n        \"url\" : \"/api/damage-types/psychic\"\n      }\n    } ],\n    \"desc\" : \"One creature charmed by the aboleth takes 10 (3d6) psychic damage, and the aboleth regains hit points equal to the damage the creature takes.\",\n    \"name\" : \"Psychic Drain (Costs 2 Actions)\"\n  } ],\n  \"name\" : \"Aboleth\",\n  \"proficiencies\" : [ {\n    \"proficiency\" : {\n      \"index\" : \"saving-throw-con\",\n      \"name\" : \"Saving Throw: CON\",\n      \"url\" : \"/api/proficiencies/saving-throw-con\"\n    },\n    \"value\" : 6\n  }, {\n    \"proficiency\" : {\n      \"index\" : \"saving-throw-int\",\n      \"name\" : \"Saving Throw: INT\",\n      \"url\" : \"/api/proficiencies/saving-throw-int\"\n    },\n    \"value\" : 8\n  }, {\n    \"proficiency\" : {\n      \"index\" : \"saving-throw-wis\",\n      \"name\" : \"Saving Throw: WIS\",\n      \"url\" : \"/api/proficiencies/saving-throw-wis\"\n    },\n    \"value\" : 6\n  }, {\n    \"proficiency\" : {\n      \"index\" : \"skill-history\",\n      \"name\" : \"Skill: History\",\n      \"url\" : \"/api/proficiencies/skill-history\"\n    },\n    \"value\" : 12\n  }, {\n    \"proficiency\" : {\n      \"index\" : \"skill-perception\",\n      \"name\" : \"Skill: Perception\",\n      \"url\" : \"/api/proficiencies/skill-perception\"\n    },\n    \"value\" : 10\n  } ],\n  \"reactions\" : [ ],\n  \"senses\" : {\n    \"darkvision\" : \"120 ft.\",\n    \"passive_perception\" : 20\n  },\n  \"size\" : \"Large\",\n  \"special_abilities\" : [ {\n    \"damage\" : [ ],\n    \"desc\" : \"The aboleth can breathe air and water.\",\n    \"name\" : \"Amphibious\"\n  }, {\n    \"damage\" : [ ],\n    \"dc\" : {\n      \"dc_type\" : {\n        \"index\" : \"con\",\n        \"name\" : \"CON\",\n        \"url\" : \"/api/ability-scores/con\"\n      },\n      \"dc_value\" : 14,\n      \"success_type\" : \"none\"\n    },\n    \"desc\" : \"While underwater, the aboleth is surrounded by transformative mucus. A creature that touches the aboleth or that hits it with a melee attack while within 5 ft. of it must make a DC 14 Constitution saving throw. On a failure, the creature is diseased for 1d4 hours. The diseased creature can breathe only underwater.\",\n    \"name\" : \"Mucous Cloud\"\n  }, {\n    \"damage\" : [ ],\n    \"desc\" : \"If a creature communicates telepathically with the aboleth, the aboleth learns the creature's greatest desires if the aboleth can see the creature.\",\n    \"name\" : \"Probing Telepathy\"\n  } ],\n  \"speed\" : {\n    \"swim\" : \"40 ft.\",\n    \"walk\" : \"10 ft.\"\n  },\n  \"strength\" : 21,\n  \"type\" : \"aberration\",\n  \"url\" : \"/api/monsters/aboleth\",\n  \"wisdom\" : 15,\n  \"xp\" : 5900\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79fc854f-2770-4615-8c59-a33f0bbe7d3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.106553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "charisma" : {
                  "description" : "A monster's ability to charm or intimidate a player.",
                  "type" : "number"
                },
                "constitution" : {
                  "description" : "How sturdy a monster is.\"",
                  "type" : "number"
                },
                "dexterity" : {
                  "description" : "The monster's ability for swift movement or stealth",
                  "type" : "number"
                },
                "intelligence" : {
                  "description" : "The monster's ability to outsmart a player.",
                  "type" : "number"
                },
                "strength" : {
                  "description" : "How hard a monster can hit a player.",
                  "type" : "number"
                },
                "wisdom" : {
                  "description" : "A monster's ability to ascertain the player's plan.",
                  "type" : "number"
                }
              },
              "type" : "object"
            }, {
              "properties" : {
                "actions" : {
                  "description" : "A list of actions that are available to the monster to take during combat.",
                  "items" : {
                    "description" : "Action available to a `Monster` in addition to the standard creature actions.",
                    "properties" : {
                      "action_options" : {
                        "$ref" : "#/components/schemas/Choice"
                      },
                      "actions" : {
                        "items" : {
                          "properties" : {
                            "action_name" : {
                              "type" : "string"
                            },
                            "count" : {
                              "type" : "number"
                            },
                            "type" : {
                              "enum" : [ "melee", "ranged", "ability", "magic" ],
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "attack_bonus" : {
                        "type" : "number"
                      },
                      "attacks" : {
                        "items" : {
                          "properties" : {
                            "damage" : {
                              "$ref" : "#/paths/~1api~1monsters~1%7Bindex%7D/get/responses/200/content/application~1json/schema/allOf/3/properties/actions/items/properties/damage/items"
                            },
                            "dc" : {
                              "$ref" : "#/components/schemas/DC"
                            },
                            "name" : {
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "damage" : {
                        "items" : {
                          "description" : "Damage type and dice associated with a particular attack.",
                          "properties" : {
                            "damage_dice" : {
                              "example" : "2d6+5",
                              "pattern" : "^\\d+d\\d+(\\+\\d+)?$",
                              "type" : "string"
                            },
                            "damage_type" : {
                              "$ref" : "#/components/schemas/APIReference"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "dc" : {
                        "$ref" : "#/components/schemas/DC"
                      },
                      "desc" : {
                        "type" : "string"
                      },
                      "multiattack_type" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "options" : {
                        "$ref" : "#/components/schemas/Choice"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                },
                "alignments" : {
                  "description" : "A creature's general moral and personal attitudes.",
                  "enum" : [ "chaotic neutral", "chaotic evil", "chaotic good", "lawful neutral", "lawful evil", "lawful good", "neutral", "neutral evil", "neutral good", "any alignment", "unaligned" ],
                  "type" : "string"
                },
                "armor_class" : {
                  "description" : "The difficulty for a player to successfully deal damage to a monster.",
                  "items" : {
                    "description" : "The armor class of a monster.",
                    "oneOf" : [ {
                      "properties" : {
                        "desc" : {
                          "type" : "string"
                        },
                        "type" : {
                          "enum" : [ "dex" ],
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "number"
                        }
                      },
                      "type" : "object"
                    }, {
                      "properties" : {
                        "desc" : {
                          "type" : "string"
                        },
                        "type" : {
                          "enum" : [ "natural" ],
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "number"
                        }
                      },
                      "type" : "object"
                    }, {
                      "properties" : {
                        "armor" : {
                          "items" : {
                            "$ref" : "#/components/schemas/APIReference"
                          },
                          "type" : "array"
                        },
                        "desc" : {
                          "type" : "string"
                        },
                        "type" : {
                          "enum" : [ "armor" ],
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "number"
                        }
                      },
                      "type" : "object"
                    }, {
                      "properties" : {
                        "desc" : {
                          "type" : "string"
                        },
                        "spell" : {
                          "$ref" : "#/components/schemas/APIReference"
                        },
                        "type" : {
                          "enum" : [ "spell" ],
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "number"
                        }
                      },
                      "type" : "object"
                    }, {
                      "properties" : {
                        "condition" : {
                          "$ref" : "#/components/schemas/APIReference"
                        },
                        "desc" : {
                          "type" : "string"
                        },
                        "type" : {
                          "enum" : [ "condition" ],
                          "type" : "string"
                        },
                        "value" : {
                          "type" : "number"
                        }
                      },
                      "type" : "object"
                    } ],
                    "type" : "object"
                  },
                  "type" : "array"
                },
                "challenge_rating" : {
                  "description" : "A monster's challenge rating is a guideline number that says when a monster becomes an appropriate challenge against the party's average level. For example. A group of 4 players with an average level of 4 would have an appropriate combat challenge against a monster with a challenge rating of 4 but a monster with a challenge rating of 8 against the same group of players would pose a significant threat.",
                  "maximum" : 21,
                  "minimum" : 0,
                  "type" : "number"
                },
                "condition_immunities" : {
                  "description" : "A list of conditions that a monster is immune to.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "damage_immunities" : {
                  "description" : "A list of damage types that a monster will take double damage from.",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "damage_resistances" : {
                  "description" : "A list of damage types that a monster will take half damage from.",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "damage_vulnerabilities" : {
                  "description" : "A list of damage types that a monster will take double damage from.",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                },
                "forms" : {
                  "description" : "List of other related monster entries that are of the same form. Only applicable to Lycanthropes that have multiple forms.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "hit_dice" : {
                  "description" : "The hit die of a monster can be used to make a version of the same monster whose hit points are determined by the roll of the die. For example: A monster with 2d6 would have its hit points determine by rolling a 6 sided die twice.",
                  "type" : "string"
                },
                "hit_points" : {
                  "description" : "The hit points of a monster determine how much damage it is able to take before it can be defeated.",
                  "type" : "number"
                },
                "hit_points_roll" : {
                  "description" : "The roll for determining a monster's hit points, which consists of the hit dice (e.g. 18d10) and the modifier determined by its Constitution (e.g. +36). For example, 18d10+36",
                  "type" : "string"
                },
                "image" : {
                  "description" : "The image url of the monster.",
                  "type" : "string"
                },
                "languages" : {
                  "description" : "The languages a monster is able to speak.",
                  "type" : "string"
                },
                "legendary_actions" : {
                  "description" : "A list of legendary actions that are available to the monster to take during combat.",
                  "items" : {
                    "$ref" : "#/components/schemas/Monster/allOf/3/properties/actions/items"
                  },
                  "type" : "array"
                },
                "proficiencies" : {
                  "description" : "A list of proficiencies of a monster.",
                  "items" : {
                    "properties" : {
                      "proficiency" : {
                        "$ref" : "#/components/schemas/APIReference"
                      },
                      "value" : {
                        "type" : "number"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                },
                "reactions" : {
                  "description" : "A list of reactions that is available to the monster to take during combat.",
                  "items" : {
                    "$ref" : "#/components/schemas/Monster/allOf/3/properties/actions/items"
                  },
                  "type" : "array"
                },
                "senses" : {
                  "allOf" : [ {
                    "properties" : {
                      "blindsight" : {
                        "description" : "A monster with blindsight can perceive its surroundings without relying on sight, within a specific radius.",
                        "type" : "string"
                      },
                      "darkvision" : {
                        "description" : "A monster with darkvision can see in the dark within a specific radius.",
                        "type" : "string"
                      },
                      "passive_perception" : {
                        "description" : "The monster's passive perception (wisdom) score.",
                        "type" : "number"
                      },
                      "tremorsense" : {
                        "description" : "A monster with tremorsense can detect and pinpoint the origin of vibrations within a specific radius, provided that the monster and the source of the vibrations are in contact with the same ground or substance.",
                        "type" : "string"
                      },
                      "truesight" : {
                        "description" : "A monster with truesight can, out to a specific range, see in normal and magical darkness, see invisible creatures and objects, automatically detect visual illusions and succeed on saving throws against them, and perceive the original form of a shapechanger or a creature that is transformed by magic. Furthermore, the monster can see into the Ethereal Plane within the same range.",
                        "type" : "string"
                      }
                    },
                    "type" : "object"
                  } ],
                  "description" : "Monsters typically have a passive perception but they might also have other senses to detect players."
                },
                "size" : {
                  "description" : "The size of the monster ranging from Tiny to Gargantuan.\"",
                  "enum" : [ "Tiny", "Small", "Medium", "Large", "Huge", "Gargantuan" ],
                  "type" : "string"
                },
                "special_abilities" : {
                  "description" : "A list of the monster's special abilities.",
                  "items" : {
                    "properties" : {
                      "attack_bonus" : {
                        "type" : "number"
                      },
                      "damage" : {
                        "items" : {
                          "$ref" : "#/paths/~1api~1monsters~1%7Bindex%7D/get/responses/200/content/application~1json/schema/allOf/3/properties/actions/items/properties/damage/items"
                        },
                        "type" : "array"
                      },
                      "dc" : {
                        "$ref" : "#/components/schemas/DC"
                      },
                      "desc" : {
                        "type" : "string"
                      },
                      "name" : {
                        "type" : "string"
                      },
                      "spellcasting" : {
                        "properties" : {
                          "ability" : {
                            "$ref" : "#/components/schemas/APIReference"
                          },
                          "components_required" : {
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          },
                          "dc" : {
                            "type" : "number"
                          },
                          "modifier" : {
                            "type" : "number"
                          },
                          "school" : {
                            "type" : "string"
                          },
                          "slots" : {
                            "additionalProperties" : {
                              "type" : "number"
                            },
                            "type" : "object"
                          },
                          "spells" : {
                            "items" : {
                              "properties" : {
                                "level" : {
                                  "type" : "number"
                                },
                                "name" : {
                                  "type" : "string"
                                },
                                "url" : {
                                  "type" : "string"
                                },
                                "usage" : {
                                  "$ref" : "#/paths/~1api~1monsters~1%7Bindex%7D/get/responses/200/content/application~1json/schema/allOf/3/properties/special_abilities/items/properties/usage"
                                }
                              },
                              "type" : "object"
                            },
                            "type" : "array"
                          }
                        },
                        "type" : "object"
                      },
                      "usage" : {
                        "properties" : {
                          "rest_types" : {
                            "items" : {
                              "type" : "string"
                            },
                            "type" : "array"
                          },
                          "times" : {
                            "type" : "number"
                          },
                          "type" : {
                            "enum" : [ "at will", "per day", "recharge after rest", "recharge on roll" ],
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                },
                "speed" : {
                  "description" : "Speed for a monster determines how fast it can move per turn.",
                  "properties" : {
                    "burrow" : {
                      "description" : "A monster that has a burrowing speed can use that speed to move through sand, earth, mud, or ice. A monster can’t burrow through solid rock unless it has a special trait that allows it to do so.",
                      "type" : "string"
                    },
                    "climb" : {
                      "description" : "A monster that has a climbing speed can use all or part of its movement to move on vertical surfaces. The monster doesn’t need to spend extra movement to climb.",
                      "type" : "string"
                    },
                    "fly" : {
                      "description" : "A monster that has a flying speed can use all or part of its movement to fly.",
                      "type" : "string"
                    },
                    "swim" : {
                      "description" : "A monster that has a swimming speed doesn’t need to spend extra movement to swim.",
                      "type" : "string"
                    },
                    "walk" : {
                      "description" : "All creatures have a walking speed, simply called the monster’s speed. Creatures that have no form of ground-based locomotion have a walking speed of 0 feet.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "subtype" : {
                  "description" : "The sub-category of a monster used for classification of monsters.\"",
                  "type" : "string"
                },
                "type" : {
                  "description" : "The type of monster.",
                  "type" : "string"
                },
                "xp" : {
                  "description" : "The number of experience points (XP) a monster is worth is based on its challenge rating.",
                  "type" : "number"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Monster`\n"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "545884fa-a623-440b-8252-3cfab7c36832",
    "name" : "Get list of monsters with optional filtering",
    "request" : {
      "urlPath" : "/api/monsters",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1.691358473976573E308,\n  \"results\" : [ {\n    \"name\" : \"Fatimah Bernier\",\n    \"index\" : \"wumfd4j71sf5n27saq6mib0t1ps5qlittdbdwnyuyg12u61s3rf0vtpob6d225o5egeowxma7cxlkm1iphkh88zmrie7bnueqmizff9wg\",\n    \"url\" : \"https://web.example.mocklab.io/784243\"\n  }, {\n    \"name\" : \"Susy Rowe\",\n    \"index\" : \"z44dhwz269aszw631ikeotco97udu3iobbce5bn9yovvgca5qds4hpfvdyyzkgexw4vywu2h9nwxj1z94dwbaowht64bffppjrqcl6lmjhg76c0f9hhlceuq5bwkrzaef97pk27vw6945tinqt4d\",\n    \"url\" : \"https://web.example.mocklab.io/309839\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "545884fa-a623-440b-8252-3cfab7c36832",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.104838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "77c55619-2e84-4521-be4a-edb5b2a233ef",
    "name" : "Get a magic school by index.",
    "request" : {
      "urlPath" : "/api/magic-schools/necromancy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : \"Conjuration spells involve the transportation of objects and creatures from one location to another. Some spells summon creatures or objects to the caster's side, whereas others allow the caster to teleport to another location. Some conjurations create objects or effects out of nothing.\",\n  \"index\" : \"conjuration\",\n  \"name\" : \"Conjuration\",\n  \"url\" : \"/api/magic-schools/conjuration\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77c55619-2e84-4521-be4a-edb5b2a233ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.104383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "desc" : {
                  "description" : "Brief description of the resource.",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ],
            "description" : "`MagicSchool`\n"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "055fd5fe-7580-4cb9-a192-593472c31d7d",
    "name" : "Get a magic item by index.",
    "request" : {
      "urlPath" : "/api/magic-items/zq8mbq81q2ueo3ywz29goqdx94cftle0wjc6f80csok9vimvf75zoc39vie0l7qyqqof4k6nsvb94sul4abyoq8rey0dmdmjp1u50cgpqporh1",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : [ \"Armor (medium or heavy, but not hide), uncommon\", \"This suit of armor is reinforced with adamantine, one of the hardest substances in existence. While you're wearing it, any critical hit against you becomes a normal hit.\" ],\n  \"equipment_category\" : {\n    \"index\" : \"armor\",\n    \"name\" : \"Armor\",\n    \"url\" : \"/api/equipment-categories/armor\"\n  },\n  \"index\" : \"adamantine-armor\",\n  \"name\" : \"Adamantine Armor\",\n  \"rarity\" : {\n    \"name\" : \"Uncommon\"\n  },\n  \"url\" : \"/api/magic-items/adamantine-armor\",\n  \"variant\" : false,\n  \"variants\" : [ ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "055fd5fe-7580-4cb9-a192-593472c31d7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.104295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "equipment_category" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "rarity" : {
                  "properties" : {
                    "name" : {
                      "description" : "The rarity of the item.",
                      "enum" : [ "Varies", "Common", "Uncommon", "Rare", "Very Rare", "Legendary", "Artifact" ],
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "variant" : {
                  "description" : "Whether this is a variant or not",
                  "type" : "boolean"
                },
                "variants" : {
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`MagicItem`\n"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "f8c59e2d-f5fe-4299-8e39-b758c8ac9c0d",
    "name" : "Get a language by index.",
    "request" : {
      "urlPath" : "/api/languages/giant",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : \"Elvish is fluid, with subtle intonations and intricate grammar. Elven literature is rich and varied, and their songs and poems are famous among other races. Many bards learn their language so they can add Elvish ballads to their repertoires.\",\n  \"index\" : \"elvish\",\n  \"name\" : \"Elvish\",\n  \"script\" : \"Elvish\",\n  \"type\" : \"Standard\",\n  \"typical_speakers\" : [ \"Elves\" ],\n  \"url\" : \"/api/languages/elvish\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8c59e2d-f5fe-4299-8e39-b758c8ac9c0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.104147Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "desc" : {
                  "description" : "Brief description of the language.",
                  "type" : "string"
                },
                "script" : {
                  "description" : "Script used for writing in the language.",
                  "type" : "string"
                },
                "type" : {
                  "enum" : [ "Standard", "Exotic" ],
                  "type" : "string"
                },
                "typical_speakers" : {
                  "description" : "List of races that tend to speak the language.",
                  "items" : {
                    "type" : "string"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Language`\n"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "e371c660-c31a-4c90-ab62-008198abf1de",
    "name" : "Get a feature by index.",
    "request" : {
      "urlPath" : "/api/features/2yoankkuoyctqvfc248eqhfvaw29vxunqahjujg8z3edqbcutjo1p",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"class\" : {\n    \"index\" : \"fighter\",\n    \"name\" : \"Fighter\",\n    \"url\" : \"/api/classes/fighter\"\n  },\n  \"desc\" : [ \"Starting at 2nd level, you can push yourself beyond your normal limits for a moment. On your turn, you can take one additional action on top of your regular action and a possible bonus action.\", \"Once you use this feature, you must finish a short or long rest before you can use it again. Starting at 17th level, you can use it twice before a rest, but only once on the same turn.\" ],\n  \"index\" : \"action-surge-1-use\",\n  \"level\" : 2,\n  \"name\" : \"Action Surge (1 use)\",\n  \"prerequisites\" : [ ],\n  \"url\" : \"/api/features/action-surge-1-use\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e371c660-c31a-4c90-ab62-008198abf1de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.103983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "class" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "feature_specific" : {
                  "additionalProperties" : true,
                  "description" : "Information specific to this feature."
                },
                "level" : {
                  "description" : "The level this feature is gained.",
                  "type" : "number"
                },
                "parent" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "prerequisites" : {
                  "description" : "The prerequisites for this feature.",
                  "example" : [ {
                    "level" : 3,
                    "type" : "level"
                  }, {
                    "feature" : "martial-archetype",
                    "type" : "feature"
                  }, {
                    "spell" : "shield",
                    "type" : "spell"
                  } ],
                  "items" : {
                    "anyOf" : [ {
                      "properties" : {
                        "level" : {
                          "type" : "number"
                        },
                        "type" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }, {
                      "properties" : {
                        "feature" : {
                          "type" : "string"
                        },
                        "type" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    }, {
                      "properties" : {
                        "spell" : {
                          "type" : "string"
                        },
                        "type" : {
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    } ]
                  },
                  "type" : "array"
                },
                "subclass" : {
                  "$ref" : "#/components/schemas/APIReference"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Feature`\n"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "5c75c4f8-bacf-4653-bf37-a7b9cfc5ca4f",
    "name" : "Get a feat by index.",
    "request" : {
      "urlPath" : "/api/feats/grappler",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : [ \"You’ve developed the Skills necessary to hold your own in close--quarters Grappling. You gain the following benefits:\", \"- You have advantage on Attack Rolls against a creature you are Grappling.\", \"- You can use your action to try to pin a creature Grappled by you. To do so, make another grapple check. If you succeed, you and the creature are both Restrained until the grapple ends.\" ],\n  \"index\" : \"grappler\",\n  \"name\" : \"Grappler\",\n  \"prerequisites\" : [ {\n    \"ability_score\" : {\n      \"index\" : \"str\",\n      \"name\" : \"STR\",\n      \"url\" : \"/api/ability-scores/str\"\n    },\n    \"minimum_score\" : 13\n  } ],\n  \"url\" : \"/api/feats/grappler\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c75c4f8-bacf-4653-bf37-a7b9cfc5ca4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.103684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "prerequisites" : {
                  "description" : "An object of APIReferences to ability scores and minimum scores.",
                  "items" : {
                    "$ref" : "#/components/schemas/Prerequisite"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Feat`\n"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "6947b5d5-3562-4805-b611-1ccf82fbfc22",
    "name" : "Get an equipment item by index.",
    "request" : {
      "urlPath" : "/api/equipment/xeprz6thajj5ypwvpn14uhf3vb0r1m38dpwstizii575wqbz735fdvj6c6bdzay7pjqxn5u38u3znn0ubzi3aomfxq1fgy7ljo7ugjb58zfdqp1h7tcdhlp21x9bfbwnujsi9ph7q0gh1vkiqfcqgwskxxvb87yst6fvda1m",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"category_range\" : \"Simple Melee\",\n  \"contents\" : [ ],\n  \"cost\" : {\n    \"quantity\" : 1,\n    \"unit\" : \"sp\"\n  },\n  \"damage\" : {\n    \"damage_dice\" : \"1d4\",\n    \"damage_type\" : {\n      \"index\" : \"bludgeoning\",\n      \"name\" : \"Bludgeoning\",\n      \"url\" : \"/api/damage-types/bludgeoning\"\n    }\n  },\n  \"desc\" : [ ],\n  \"equipment_category\" : {\n    \"index\" : \"weapon\",\n    \"name\" : \"Weapon\",\n    \"url\" : \"/api/equipment-categories/weapon\"\n  },\n  \"index\" : \"club\",\n  \"name\" : \"Club\",\n  \"properties\" : [ {\n    \"index\" : \"light\",\n    \"name\" : \"Light\",\n    \"url\" : \"/api/weapon-properties/light\"\n  }, {\n    \"index\" : \"monk\",\n    \"name\" : \"Monk\",\n    \"url\" : \"/api/weapon-properties/monk\"\n  } ],\n  \"range\" : {\n    \"normal\" : 5\n  },\n  \"special\" : [ ],\n  \"url\" : \"/api/equipment/club\",\n  \"weapon_category\" : \"Simple\",\n  \"weapon_range\" : \"Melee\",\n  \"weight\" : 2\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6947b5d5-3562-4805-b611-1ccf82fbfc22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.103523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "anyOf" : [ {
              "$ref" : "#/components/schemas/Weapon"
            }, {
              "$ref" : "#/components/schemas/Armor"
            }, {
              "$ref" : "#/components/schemas/Gear"
            }, {
              "$ref" : "#/components/schemas/EquipmentPack"
            } ],
            "description" : "`Equipment`\n"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "6c2a6bcd-bfd1-4ae9-b101-d5abbfd9a05c",
    "name" : "Get an equipment category by index.",
    "request" : {
      "urlPath" : "/api/equipment-categories/3q60qidym3hk8nkezleux0lgp5ghgboec76b41ke522molxe802sfb2ml5mc73zenn05thjjfwf0vgex10wv8do7q27lrqknjwpe0a",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"equipment\" : [ {\n    \"index\" : \"galley\",\n    \"name\" : \"Galley\",\n    \"url\" : \"/api/equipment/galley\"\n  }, {\n    \"index\" : \"keelboat\",\n    \"name\" : \"Keelboat\",\n    \"url\" : \"/api/equipment/keelboat\"\n  }, {\n    \"index\" : \"longship\",\n    \"name\" : \"Longship\",\n    \"url\" : \"/api/equipment/longship\"\n  }, {\n    \"index\" : \"rowboat\",\n    \"name\" : \"Rowboat\",\n    \"url\" : \"/api/equipment/rowboat\"\n  }, {\n    \"index\" : \"sailing-ship\",\n    \"name\" : \"Sailing ship\",\n    \"url\" : \"/api/equipment/sailing-ship\"\n  }, {\n    \"index\" : \"warship\",\n    \"name\" : \"Warship\",\n    \"url\" : \"/api/equipment/warship\"\n  } ],\n  \"index\" : \"waterborne-vehicles\",\n  \"name\" : \"Waterborne Vehicles\",\n  \"url\" : \"/api/equipment-categories/waterborne-vehicles\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c2a6bcd-bfd1-4ae9-b101-d5abbfd9a05c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.103388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "equipment" : {
                  "description" : "A list of the equipment that falls into this category.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`EquipmentCategory`\n"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "41674b5b-2bce-43f9-b1dc-ea273e882900",
    "name" : "Get a damage type by index.",
    "request" : {
      "urlPath" : "/api/damage-types/fire",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : [ \"The corrosive spray of a black dragon's breath and the dissolving enzymes secreted by a black pudding deal acid damage.\" ],\n  \"index\" : \"acid\",\n  \"name\" : \"Acid\",\n  \"url\" : \"/api/damage-types/acid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41674b5b-2bce-43f9-b1dc-ea273e882900",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.103221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            } ],
            "description" : "`DamageType`\n"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "57b758e6-eefe-47ec-846d-c94c80997ced",
    "name" : "Get a condition by index.",
    "request" : {
      "urlPath" : "/api/conditions/grappled",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : [ \"- A blinded creature can't see and automatically fails any ability check that requires sight.\", \"- Attack rolls against the creature have advantage, and the creature's attack rolls have disadvantage.\" ],\n  \"index\" : \"blinded\",\n  \"name\" : \"Blinded\",\n  \"url\" : \"/api/conditions/blinded\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57b758e6-eefe-47ec-846d-c94c80997ced",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.103148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            } ],
            "description" : "`Condition`\n"
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "d6ac99c4-f9dd-4d71-a69e-af8892d75673",
    "name" : "Get subclasses available for a class.",
    "request" : {
      "urlPath" : "/api/classes/paladin/subclasses",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1,\n  \"results\" : [ {\n    \"index\" : \"berserker\",\n    \"name\" : \"Berserker\",\n    \"url\" : \"/api/subclasses/berserker\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6ac99c4-f9dd-4d71-a69e-af8892d75673",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.10304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "d36902e8-4d99-4883-8849-6db8720d99da",
    "name" : "Get spells available for a class.",
    "request" : {
      "urlPath" : "/api/classes/paladin/spells",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 2,\n  \"results\" : [ {\n    \"index\" : \"power-word-kill\",\n    \"name\" : \"Power Word Kill\",\n    \"url\" : \"/api/spells/power-word-kill\"\n  }, {\n    \"index\" : \"true-polymorph\",\n    \"name\" : \"True Polymorph\",\n    \"url\" : \"/api/spells/true-polymorph\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d36902e8-4d99-4883-8849-6db8720d99da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.102967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "ce9efe6a-6e02-4308-b626-84d30cb76062",
    "name" : "Get spellcasting info for a class.",
    "request" : {
      "urlPath" : "/api/classes/warlock/spellcasting",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error\" : \"Not found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce9efe6a-6e02-4308-b626-84d30cb76062",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.102889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "error" : {
                "type" : "string"
              }
            },
            "required" : [ "error" ],
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "fcbb630c-1ead-4c46-b369-38b1f73297fb",
    "name" : "Get spellcasting info for a class.",
    "request" : {
      "urlPath" : "/api/classes/fighter/spellcasting",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"info\" : [ {\n    \"desc\" : [ \"You know two cantrips of your choice from the bard spell list. You learn additional bard cantrips of your choice at higher levels, as shown in the Cantrips Known column of the Bard table.\" ],\n    \"name\" : \"Cantrips\"\n  }, {\n    \"desc\" : [ \"The Bard table shows how many spell slots you have to cast your spells of 1st level and higher. To cast one of these spells, you must expend a slot of the spell's level or higher. You regain all expended spell slots when you finish a long rest.\", \"For example, if you know the 1st-level spell cure wounds and have a 1st-level and a 2nd-level spell slot available, you can cast cure wounds using either slot.\" ],\n    \"name\" : \"Spell Slots\"\n  }, {\n    \"desc\" : [ \"You know four 1st-level spells of your choice from the bard spell list.\", \"The Spells Known column of the Bard table shows when you learn more bard spells of your choice.\", \"Each of these spells must be of a level for which you have spell slots, as shown on the table. For instance, when you reach 3rd level in this class, you can learn one new spell of 1st or 2nd level.\", \"Additionally, when you gain a level in this class, you can choose one of the bard spells you know and replace it with another spell from the bard spell list, which also must be of a level for which you have spell slots.\" ],\n    \"name\" : \"Spells Known of 1st Level and Higher\"\n  }, {\n    \"desc\" : [ \"Charisma is your spellcasting ability for your bard spells. Your magic comes from the heart and soul you pour into the performance of your music or oration. You use your Charisma whenever a spell refers to your spellcasting ability. In addition, you use your Charisma modifier when setting the saving throw DC for a bard spell you cast and when making an attack roll with one.\", \"Spell save DC = 8 + your proficiency bonus + your Charisma modifier.\", \"Spell attack modifier = your proficiency bonus + your Charisma modifier.\" ],\n    \"name\" : \"Spellcasting Ability\"\n  }, {\n    \"desc\" : [ \"You can cast any bard spell you know as a ritual if that spell has the ritual tag.\" ],\n    \"name\" : \"Ritual Casting\"\n  }, {\n    \"desc\" : [ \"You can use a musical instrument (see Equipment) as a spellcasting focus for your bard spells.\" ],\n    \"name\" : \"Spellcasting Focus\"\n  } ],\n  \"level\" : 1,\n  \"spellcasting_ability\" : {\n    \"index\" : \"cha\",\n    \"name\" : \"CHA\",\n    \"url\" : \"/api/ability-scores/cha\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcbb630c-1ead-4c46-b369-38b1f73297fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.102817Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`Spellcasting`\n",
            "properties" : {
              "info" : {
                "description" : "Descriptions of the class' ability to cast spells.",
                "items" : {
                  "properties" : {
                    "desc" : {
                      "description" : "Feature description.",
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "name" : {
                      "description" : "Feature name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "level" : {
                "description" : "Level at which the class can start using its spellcasting abilities.",
                "type" : "number"
              },
              "spellcasting_ability" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/APIReference"
                } ],
                "description" : "Reference to the `AbilityScore` used for spellcasting by the class."
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "1e7e6b30-d868-40a3-a0e0-c32b405a9096",
    "name" : "Get proficiencies available for a class.",
    "request" : {
      "urlPath" : "/api/classes/wizard/proficiencies",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 9.598705863649434E306,\n  \"results\" : [ {\n    \"name\" : \"Clarissa Lockman DVM\",\n    \"index\" : \"zez7yoruqjeq3pyq77ogxjk67bhd8sau5t75c63bb\",\n    \"url\" : \"https://web.example.mocklab.io/795738\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e7e6b30-d868-40a3-a0e0-c32b405a9096",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.10263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "e9052cc0-5f75-4934-8178-347ffa62d412",
    "name" : "Get multiclassing resource for a class.",
    "request" : {
      "urlPath" : "/api/classes/barbarian/multi-classing",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"prerequisites\" : [ {\n    \"ability_score\" : {\n      \"index\" : \"str\",\n      \"name\" : \"STR\",\n      \"url\" : \"/api/ability-scores/str\"\n    },\n    \"minimum_score\" : 13\n  } ],\n  \"proficiencies\" : [ {\n    \"index\" : \"shields\",\n    \"name\" : \"Shields\",\n    \"url\" : \"/api/proficiencies/shields\"\n  }, {\n    \"index\" : \"simple-weapons\",\n    \"name\" : \"Simple Weapons\",\n    \"url\" : \"/api/proficiencies/simple-weapons\"\n  }, {\n    \"index\" : \"martial-weapons\",\n    \"name\" : \"Martial Weapons\",\n    \"url\" : \"/api/proficiencies/martial-weapons\"\n  } ],\n  \"proficiency_choices\" : [ ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9052cc0-5f75-4934-8178-347ffa62d412",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.102194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`Multiclassing`\n",
            "properties" : {
              "prerequisite_options" : {
                "description" : "List of choices of prerequisites to meet for.",
                "items" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "type" : "array"
              },
              "prerequisites" : {
                "description" : "List of prerequisites that must be met.",
                "items" : {
                  "$ref" : "#/components/schemas/Prerequisite"
                },
                "type" : "array"
              },
              "proficiencies" : {
                "description" : "List of proficiencies available when multiclassing.",
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              },
              "proficiency_choices" : {
                "description" : "List of choices of proficiencies that are given when multiclassing.",
                "items" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "fe3e22e0-eb47-429f-9bdb-6be90f79e10e",
    "name" : "Get spells of the requested level available to the class.",
    "request" : {
      "urlPath" : "/api/classes/ranger/levels/3.089465772538013/spells",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 5,\n  \"results\" : [ {\n    \"index\" : \"dominate-monster\",\n    \"name\" : \"Dominate Monster\",\n    \"url\" : \"/api/spells/dominate-monster\"\n  }, {\n    \"index\" : \"earthquake\",\n    \"name\" : \"Earthquake\",\n    \"url\" : \"/api/spells/earthquake\"\n  }, {\n    \"index\" : \"incendiary-cloud\",\n    \"name\" : \"Incendiary Cloud\",\n    \"url\" : \"/api/spells/incendiary-cloud\"\n  }, {\n    \"index\" : \"power-word-stun\",\n    \"name\" : \"Power Word Stun\",\n    \"url\" : \"/api/spells/power-word-stun\"\n  }, {\n    \"index\" : \"sunburst\",\n    \"name\" : \"Sunburst\",\n    \"url\" : \"/api/spells/sunburst\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe3e22e0-eb47-429f-9bdb-6be90f79e10e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.10199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "2e1f71e0-ff18-44b5-9108-f0f58b5ec29f",
    "name" : "Get features available to a class at the requested level.",
    "request" : {
      "urlPath" : "/api/classes/cleric/levels/8.8012893874389/features",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 2,\n  \"results\" : [ {\n    \"index\" : \"barbarian-unarmored-defense\",\n    \"name\" : \"Unarmored Defense\",\n    \"url\" : \"/api/features/barbarian-unarmored-defense\"\n  }, {\n    \"index\" : \"rage\",\n    \"name\" : \"Rage\",\n    \"url\" : \"/api/features/rage\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e1f71e0-ff18-44b5-9108-f0f58b5ec29f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.10191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "07d02ab5-75cc-4d10-9d62-c58a6fa6101c",
    "name" : "Get level resource for a class and level.",
    "request" : {
      "urlPath" : "/api/classes/paladin/levels/11.064642766752076",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ability_score_bonuses\" : 0,\n  \"class\" : {\n    \"index\" : \"barbarian\",\n    \"name\" : \"Barbarian\",\n    \"url\" : \"/api/classes/barbarian\"\n  },\n  \"class_specific\" : {\n    \"brutal_critical_dice\" : 0,\n    \"rage_count\" : 2,\n    \"rage_damage_bonus\" : 2\n  },\n  \"features\" : [ {\n    \"index\" : \"rage\",\n    \"name\" : \"Rage\",\n    \"url\" : \"/api/features/rage\"\n  }, {\n    \"index\" : \"barbarian-unarmored-defense\",\n    \"name\" : \"Unarmored Defense\",\n    \"url\" : \"/api/features/barbarian-unarmored-defense\"\n  } ],\n  \"index\" : \"barbarian-1\",\n  \"level\" : 1,\n  \"prof_bonus\" : 2,\n  \"url\" : \"/api/classes/barbarian/levels/1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07d02ab5-75cc-4d10-9d62-c58a6fa6101c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.101743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`ClassLevel`\n",
            "properties" : {
              "ability_score_bonuses" : {
                "description" : "Total number of ability score bonuses gained, added from previous levels.",
                "type" : "number"
              },
              "class_specific" : {
                "anyOf" : [ {
                  "description" : "Barbarian Class Specific Features",
                  "properties" : {
                    "brutal_critical_dice" : {
                      "type" : "number"
                    },
                    "rage_count" : {
                      "type" : "number"
                    },
                    "rage_damage_bonus" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Bard Class Specific Features",
                  "properties" : {
                    "bardic_inspiration_dice" : {
                      "type" : "number"
                    },
                    "magical_secrets_max_5" : {
                      "type" : "number"
                    },
                    "magical_secrets_max_7" : {
                      "type" : "number"
                    },
                    "magical_secrets_max_9" : {
                      "type" : "number"
                    },
                    "song_of_rest_die" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Cleric Class Specific Features",
                  "properties" : {
                    "channel_divinity_charges" : {
                      "type" : "number"
                    },
                    "destroy_undead_cr" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Druid Class Specific Features",
                  "properties" : {
                    "wild_shape_fly" : {
                      "type" : "boolean"
                    },
                    "wild_shape_max_cr" : {
                      "type" : "number"
                    },
                    "wild_shape_swim" : {
                      "type" : "boolean"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Fighter Class Specific Features",
                  "properties" : {
                    "action_surges" : {
                      "type" : "number"
                    },
                    "extra_attacks" : {
                      "type" : "number"
                    },
                    "indomitable_uses" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Monk Class Specific Features",
                  "properties" : {
                    "ki_points" : {
                      "type" : "number"
                    },
                    "martial_arts" : {
                      "properties" : {
                        "dice_count" : {
                          "type" : "number"
                        },
                        "dice_value" : {
                          "type" : "number"
                        }
                      },
                      "type" : "object"
                    },
                    "unarmored_movement" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Paladin Class Specific Features",
                  "properties" : {
                    "aura_range" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Bard Ranger Specific Features",
                  "properties" : {
                    "favored_enemies" : {
                      "type" : "number"
                    },
                    "favored_terrain" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Bard Rogue Specific Features",
                  "properties" : {
                    "sneak_attack" : {
                      "properties" : {
                        "dice_count" : {
                          "type" : "number"
                        },
                        "dice_value" : {
                          "type" : "number"
                        }
                      },
                      "type" : "object"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Bard Sorcerer Specific Features",
                  "properties" : {
                    "creating_spell_slots" : {
                      "items" : {
                        "properties" : {
                          "sorcery_point_cost" : {
                            "type" : "number"
                          },
                          "spell_slot_level" : {
                            "type" : "number"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "metamagic_known" : {
                      "type" : "number"
                    },
                    "sorcery_points" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Bard Warlock Specific Features",
                  "properties" : {
                    "invocations_known" : {
                      "type" : "number"
                    },
                    "mystic_arcanum_level_6" : {
                      "type" : "number"
                    },
                    "mystic_arcanum_level_7" : {
                      "type" : "number"
                    },
                    "mystic_arcanum_level_8" : {
                      "type" : "number"
                    },
                    "mystic_arcanum_level_9" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                }, {
                  "description" : "Wizard Class Specific Features",
                  "properties" : {
                    "arcane_recover_levels" : {
                      "type" : "number"
                    }
                  },
                  "type" : "object"
                } ],
                "description" : "Class specific information such as dice values for bard songs and number of warlock invocations."
              },
              "features" : {
                "description" : "Features automatically gained at this level.",
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              },
              "index" : {
                "description" : "Resource index for shorthand searching.",
                "type" : "string"
              },
              "level" : {
                "description" : "The number value for the current level object.",
                "type" : "number"
              },
              "prof_bonus" : {
                "description" : "Proficiency bonus for this class at the specified level.",
                "type" : "number"
              },
              "spellcasting" : {
                "description" : "Summary of spells known at this level.",
                "properties" : {
                  "cantrips_known" : {
                    "type" : "number"
                  },
                  "spell_slots_level_1" : {
                    "type" : "number"
                  },
                  "spell_slots_level_2" : {
                    "type" : "number"
                  },
                  "spell_slots_level_3" : {
                    "type" : "number"
                  },
                  "spell_slots_level_4" : {
                    "type" : "number"
                  },
                  "spell_slots_level_5" : {
                    "type" : "number"
                  },
                  "spell_slots_level_6" : {
                    "type" : "number"
                  },
                  "spell_slots_level_7" : {
                    "type" : "number"
                  },
                  "spell_slots_level_8" : {
                    "type" : "number"
                  },
                  "spell_slots_level_9" : {
                    "type" : "number"
                  },
                  "spells_known" : {
                    "type" : "number"
                  }
                },
                "type" : "object"
              },
              "url" : {
                "description" : "URL of the referenced resource.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "24bd7a3a-1ef2-4048-bec5-64263ab1073f",
    "name" : "Get all level resources for a class.",
    "request" : {
      "urlPath" : "/api/classes/bard/levels",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"class_specific\" : {\n    \"aura_range\" : 8.226102316431861E307\n  },\n  \"features\" : [ {\n    \"name\" : \"Arlen Dare\",\n    \"index\" : \"w73hpsgchsmrnmo9fgx2vnxtx5vk24vuto349huwu79fqrqit734rlrduokq5d1ar6ceb55mgodowwhh98nqf4zpbf4qefzlrg1iaowtgm300pay0syd20yw4uccars93medma8xil10qp1dvmmt9poicczzkxld0d73s3kua2m772dv466y7i9jt1509pe1fg970m\",\n    \"url\" : \"https://web.example.mocklab.io/224267\"\n  }, {\n    \"name\" : \"Shonta Parker\",\n    \"index\" : \"51nwsbsfg8s4em6562f9v2tyswcmjs8lw66yhc4k9bb1uudsxfw1sbut7hnfsb8wxgakwq6ziw6bd8imgoc2tmmp3m9uq\",\n    \"url\" : \"https://web.example.mocklab.io/706356\"\n  }, {\n    \"name\" : \"Jung Price\",\n    \"index\" : \"2j3m99th9ss5afc8t3qvi6dlx8vti9hi6dwddkhparsw656upbsvm58v91bhgnci88lv6a4takhi31v51yg8w1jdmnxrsykvnp1fmwowkv604wbbg9uh0s2h31yuw2hrjb5e39vi1hwpz2eh6b9ztslutweu6brtdqcw7ojzc57qiv4vk4ytpiwkvy1gwdjxsy\",\n    \"url\" : \"https://web.example.mocklab.io/043842\"\n  }, {\n    \"name\" : \"Hortencia Breitenberg\",\n    \"index\" : \"sx03bnrugeia5rf1ttg1lwvd0s60ggzwa6ww7jxq6yv7bdq9tki4oe\",\n    \"url\" : \"https://web.example.mocklab.io/127165\"\n  }, {\n    \"name\" : \"Mauro Marvin\",\n    \"index\" : \"g9ti9facwxvt4r3otadgog1iwx2ekgogtsv4954epfjj3s7llzye3hd4fdl9gxn6g7au4aj4bhmz5e88qtkuu4k1dr4ntdqbg1j94v20xv75zd6wso5kd1059zwtzk8wm6eonwdhne3421prk4mx0n\",\n    \"url\" : \"https://web.example.mocklab.io/718078\"\n  }, {\n    \"name\" : \"Harley Windler\",\n    \"index\" : \"d2efc59a7ot3l2hyky24cqkd9rkcst7odj9ydi4gzmc90bp48pdb8wsn7o4u1o52jib5sydbksjbg97qfmgrlfrolbvikxgjhcx4bdr7cp2nkmcjxjk6zodzbk02e9830tl7e8z7l3u0103865emb9k18279umgzzh9qspp3c0p5hbts2z8xc8iy6n8i5\",\n    \"url\" : \"https://web.example.mocklab.io/215104\"\n  } ],\n  \"level\" : 8.181621626403112E307,\n  \"ability_score_bonuses\" : 1.0817209591483136E308,\n  \"prof_bonus\" : 2.4274612391014425E307,\n  \"spellcasting\" : {\n    \"spell_slots_level_8\" : 4.959961183381111E307,\n    \"spell_slots_level_9\" : 1.6539505020660996E308,\n    \"spell_slots_level_6\" : 5.846338631037622E307,\n    \"spell_slots_level_7\" : 1.3012013288799714E308,\n    \"spell_slots_level_4\" : 7.815150427071096E307,\n    \"spell_slots_level_5\" : 6.947781092721552E307,\n    \"cantrips_known\" : 1.4482408909626375E308,\n    \"spell_slots_level_2\" : 1.487578312002499E308,\n    \"spell_slots_level_3\" : 1.7164656653529979E308,\n    \"spell_slots_level_1\" : 1.2892525677501197E308,\n    \"spells_known\" : 1.510463250746695E308\n  },\n  \"index\" : \"wzju7\",\n  \"url\" : \"https://web.example.mocklab.io/430184\"\n}, {\n  \"class_specific\" : {\n    \"magical_secrets_max_5\" : 5.865442163754912E307,\n    \"song_of_rest_die\" : 1.124496657761276E307,\n    \"magical_secrets_max_7\" : 1.059846551680774E308,\n    \"magical_secrets_max_9\" : 6.90445211783565E307,\n    \"bardic_inspiration_dice\" : 3.6607798979606143E307\n  },\n  \"features\" : [ {\n    \"name\" : \"Spencer Rippin III\",\n    \"index\" : \"eqib96sgdpgxncbtd6ndk3wt9k9afg9821lvffispucpistzu08f6a93h8z4tihdh8ige0r4p3jjos7614d8068ojn129mzds9gmkg5yp4pm5xj4thdz241cnwv3dh19uz8vfsm9f6qmtrs8iny0cbkbunfk676x331qxg0lgztcs1yqpvesldmlfsf4kjzucfx\",\n    \"url\" : \"https://web.example.mocklab.io/233673\"\n  }, {\n    \"name\" : \"Ms. Jeane Morar\",\n    \"index\" : \"q4yihrmav1k3l5wjtnjjrde3p3lbmp6nogehit3edmwvz664q0vo7alf38i4kh7dlbw5z8l2s4nyd9z4h90wubdz3nlkg42dpwgeo7zlewidsmc5ky9a1b159igkzzifkjrng0fn9gon44lu4sf3f1aclomo0r4c31odrpn0nfp24txfd6\",\n    \"url\" : \"https://web.example.mocklab.io/398144\"\n  }, {\n    \"name\" : \"Cortez Wilderman\",\n    \"index\" : \"b9wnxw9kifwrp6zt7bkojtqy0xdn6inkirqxpz63wxs6nahz3xtmndt9b6kski9soienxyo1h97beai61tdyprzg4qmdlrjyu56e6fnfwq716qy01bv9u0l4lxtpu6tt\",\n    \"url\" : \"https://web.example.mocklab.io/808959\"\n  }, {\n    \"name\" : \"Mr. Jimmy Casper\",\n    \"index\" : \"w4x9yqxlgymotcjl5hj2uzvfgnjxu6nqv0ely7yhpp8m63fw9qc42unl71tsix7lljwn3hwqi77n3bts6uf24rfh03641z8bevtufrjrk73r001hwm0k8vys323d\",\n    \"url\" : \"https://web.example.mocklab.io/334165\"\n  } ],\n  \"level\" : 4.713958860799302E307,\n  \"ability_score_bonuses\" : 2.431921526977499E307,\n  \"prof_bonus\" : 1.5175395594315876E308,\n  \"spellcasting\" : {\n    \"spell_slots_level_8\" : 1.4589775846864217E308,\n    \"spell_slots_level_9\" : 8.527804815960222E307,\n    \"spell_slots_level_6\" : 5.336928375966162E307,\n    \"spell_slots_level_7\" : 1.285783652964378E307,\n    \"spell_slots_level_4\" : 1.5366060112009286E308,\n    \"spell_slots_level_5\" : 1.7602244073544803E308,\n    \"cantrips_known\" : 1.198171068034512E308,\n    \"spell_slots_level_2\" : 7.081088400183089E307,\n    \"spell_slots_level_3\" : 9.92300378189382E307,\n    \"spell_slots_level_1\" : 1.7273005585860059E308,\n    \"spells_known\" : 8.914895232513579E307\n  },\n  \"index\" : \"04k21r2n4hqs7uark1ov9rmplc66q29jvaqw8qihchuk3h0xy27cptf77cec9dq2dy7phg8l99irmcyq9bg4g7gqkthw9yhy6dln50p3bs8gwf26i1jxwnyh0n2s24tskvmnmc93x6a0hequ9v4t08ww2fjd0puetboh6baqwhub5le99mv24yajbwmij0x3ht1o\",\n  \"url\" : \"https://web.example.mocklab.io/207531\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24bd7a3a-1ef2-4048-bec5-64263ab1073f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.100473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "items" : {
              "$ref" : "#/components/schemas/ClassLevel"
            },
            "type" : "array"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "fcb88d32-207c-4c9d-b29a-d3d166b54689",
    "name" : "Get features available for a class.",
    "request" : {
      "urlPath" : "/api/classes/ranger/features",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"count\" : 1.4971204628869863E308,\n  \"results\" : [ {\n    \"name\" : \"Carroll Huels\",\n    \"index\" : \"odaxa0fphi9srdguporuqmlzsmzl9kij00i53t62gdv70smacqhe062giqzkct7uy1zuaq17vjqx583oo0hmnpdmb27rxdsr8kwymjiljrry715f91kqkiw4qnef\",\n    \"url\" : \"https://web.example.mocklab.io/956844\"\n  }, {\n    \"name\" : \"Robyn Kuphal\",\n    \"index\" : \"epp61755hf8oylroyyj6s0chxib4y1wuc2zzog0oru8ab8nw1a8vlavc0mnqdvfhc2c31walwhx92dykms973\",\n    \"url\" : \"https://web.example.mocklab.io/082704\"\n  }, {\n    \"name\" : \"Felton Walter I\",\n    \"index\" : \"3lv1bo6f317ur94den5c\",\n    \"url\" : \"https://web.example.mocklab.io/994536\"\n  }, {\n    \"name\" : \"Nancee Yundt\",\n    \"index\" : \"ig44e5snsrn29x01ogxv7xf4qozm8r3lcvx2lclrz8vm7mvbz9p3mh1n5u3mydd4grxg1r6u8w8qu5s40auhr8m28pq9gm1pvhtvuvzryv98s1ixvrqt0y0i3crye25j35dizb5juow3vvdyxbzn0euvtt33oqpvkrg86snlwt3bh9ie542cb8d\",\n    \"url\" : \"https://web.example.mocklab.io/218426\"\n  }, {\n    \"name\" : \"Ken Roberts\",\n    \"index\" : \"dbtnmyja9e\",\n    \"url\" : \"https://web.example.mocklab.io/426553\"\n  }, {\n    \"name\" : \"Dr. Steven Carter\",\n    \"index\" : \"3oico318\",\n    \"url\" : \"https://web.example.mocklab.io/396101\"\n  }, {\n    \"name\" : \"Miss Mervin Moore\",\n    \"index\" : \"r4kapvbvt5domdcc7tzf1z5p48gytpa9ia8si7bon6prqrlqejumacevlyavgav4r4th8fbo5yn29f2gbrtt2tllhctcf3ymf477nlryjz4ruepasvw4aluca9c3bh58e0ek84mv9ye89vs7a1drd404yvcnbq5xgpe62x4ebf7zn7cb\",\n    \"url\" : \"https://web.example.mocklab.io/022019\"\n  }, {\n    \"name\" : \"Theron Kulas\",\n    \"index\" : \"4zt3v05tcoubapuh3azu3mpg0y38v7gxi5e7kzq59ao0j1w0q42jzyu16hpfd8qohr\",\n    \"url\" : \"https://web.example.mocklab.io/791171\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcb88d32-207c-4c9d-b29a-d3d166b54689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.098083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "`APIReferenceList`\n",
            "properties" : {
              "count" : {
                "description" : "Total number of resources available.",
                "type" : "number"
              },
              "results" : {
                "items" : {
                  "$ref" : "#/components/schemas/APIReference"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "ef152ff1-d381-478a-905a-b0ae0534e729",
    "name" : "Get a class by index.",
    "request" : {
      "urlPath" : "/api/classes/sorcerer",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"class_levels\" : \"/api/classes/barbarian/levels\",\n  \"hit_die\" : 12,\n  \"index\" : \"barbarian\",\n  \"multi_classing\" : {\n    \"prerequisites\" : [ {\n      \"ability_score\" : {\n        \"index\" : \"str\",\n        \"name\" : \"STR\",\n        \"url\" : \"/api/ability-scores/str\"\n      },\n      \"minimum_score\" : 13\n    } ],\n    \"proficiencies\" : [ {\n      \"index\" : \"shields\",\n      \"name\" : \"Shields\",\n      \"url\" : \"/api/proficiencies/shields\"\n    }, {\n      \"index\" : \"simple-weapons\",\n      \"name\" : \"Simple Weapons\",\n      \"url\" : \"/api/proficiencies/simple-weapons\"\n    }, {\n      \"index\" : \"martial-weapons\",\n      \"name\" : \"Martial Weapons\",\n      \"url\" : \"/api/proficiencies/martial-weapons\"\n    } ],\n    \"proficiency_choices\" : [ ]\n  },\n  \"name\" : \"Barbarian\",\n  \"proficiencies\" : [ {\n    \"index\" : \"light-armor\",\n    \"name\" : \"Light Armor\",\n    \"url\" : \"/api/proficiencies/light-armor\"\n  }, {\n    \"index\" : \"medium-armor\",\n    \"name\" : \"Medium Armor\",\n    \"url\" : \"/api/proficiencies/medium-armor\"\n  }, {\n    \"index\" : \"shields\",\n    \"name\" : \"Shields\",\n    \"url\" : \"/api/proficiencies/shields\"\n  }, {\n    \"index\" : \"simple-weapons\",\n    \"name\" : \"Simple Weapons\",\n    \"url\" : \"/api/proficiencies/simple-weapons\"\n  }, {\n    \"index\" : \"martial-weapons\",\n    \"name\" : \"Martial Weapons\",\n    \"url\" : \"/api/proficiencies/martial-weapons\"\n  } ],\n  \"proficiency_choices\" : [ {\n    \"choose\" : 2,\n    \"desc\" : \"Choose two from Animal Handling, Athletics, Intimidation, Nature, Perception, and Survival\",\n    \"from\" : {\n      \"option_set_type\" : \"options_array\",\n      \"options\" : [ {\n        \"item\" : {\n          \"index\" : \"skill-animal-handling\",\n          \"name\" : \"Skill: Animal Handling\",\n          \"url\" : \"/api/proficiencies/skill-animal-handling\"\n        },\n        \"option_type\" : \"reference\"\n      }, {\n        \"item\" : {\n          \"index\" : \"skill-athletics\",\n          \"name\" : \"Skill: Athletics\",\n          \"url\" : \"/api/proficiencies/skill-athletics\"\n        },\n        \"option_type\" : \"reference\"\n      }, {\n        \"item\" : {\n          \"index\" : \"skill-intimidation\",\n          \"name\" : \"Skill: Intimidation\",\n          \"url\" : \"/api/proficiencies/skill-intimidation\"\n        },\n        \"option_type\" : \"reference\"\n      }, {\n        \"item\" : {\n          \"index\" : \"skill-nature\",\n          \"name\" : \"Skill: Nature\",\n          \"url\" : \"/api/proficiencies/skill-nature\"\n        },\n        \"option_type\" : \"reference\"\n      }, {\n        \"item\" : {\n          \"index\" : \"skill-perception\",\n          \"name\" : \"Skill: Perception\",\n          \"url\" : \"/api/proficiencies/skill-perception\"\n        },\n        \"option_type\" : \"reference\"\n      }, {\n        \"item\" : {\n          \"index\" : \"skill-survival\",\n          \"name\" : \"Skill: Survival\",\n          \"url\" : \"/api/proficiencies/skill-survival\"\n        },\n        \"option_type\" : \"reference\"\n      } ]\n    },\n    \"type\" : \"proficiencies\"\n  } ],\n  \"saving_throws\" : [ {\n    \"index\" : \"str\",\n    \"name\" : \"STR\",\n    \"url\" : \"/api/ability-scores/str\"\n  }, {\n    \"index\" : \"con\",\n    \"name\" : \"CON\",\n    \"url\" : \"/api/ability-scores/con\"\n  } ],\n  \"starting_equipment\" : [ {\n    \"equipment\" : {\n      \"index\" : \"explorers-pack\",\n      \"name\" : \"Explorer's Pack\",\n      \"url\" : \"/api/equipment/explorers-pack\"\n    },\n    \"quantity\" : 1\n  }, {\n    \"equipment\" : {\n      \"index\" : \"javelin\",\n      \"name\" : \"Javelin\",\n      \"url\" : \"/api/equipment/javelin\"\n    },\n    \"quantity\" : 4\n  } ],\n  \"starting_equipment_options\" : [ {\n    \"choose\" : 1,\n    \"desc\" : \"(a) a greataxe or (b) any martial melee weapon\",\n    \"from\" : {\n      \"option_set_type\" : \"options_array\",\n      \"options\" : [ {\n        \"count\" : 1,\n        \"of\" : {\n          \"index\" : \"greataxe\",\n          \"name\" : \"Greataxe\",\n          \"url\" : \"/api/equipment/greataxe\"\n        },\n        \"option_type\" : \"counted_reference\"\n      }, {\n        \"choice\" : {\n          \"choose\" : 1,\n          \"desc\" : \"any martial melee weapon\",\n          \"from\" : {\n            \"equipment_category\" : {\n              \"index\" : \"martial-melee-weapons\",\n              \"name\" : \"Martial Melee Weapons\",\n              \"url\" : \"/api/equipment-categories/martial-melee-weapons\"\n            },\n            \"option_set_type\" : \"equipment_category\"\n          },\n          \"type\" : \"equipment\"\n        },\n        \"option_type\" : \"choice\"\n      } ]\n    },\n    \"type\" : \"equipment\"\n  }, {\n    \"choose\" : 1,\n    \"desc\" : \"(a) two handaxes or (b) any simple weapon\",\n    \"from\" : {\n      \"option_set_type\" : \"options_array\",\n      \"options\" : [ {\n        \"count\" : 2,\n        \"of\" : {\n          \"index\" : \"handaxe\",\n          \"name\" : \"Handaxe\",\n          \"url\" : \"/api/equipment/handaxe\"\n        },\n        \"option_type\" : \"counted_reference\"\n      }, {\n        \"choice\" : {\n          \"choose\" : 1,\n          \"desc\" : \"any simple weapon\",\n          \"from\" : {\n            \"equipment_category\" : {\n              \"index\" : \"simple-weapons\",\n              \"name\" : \"Simple Weapons\",\n              \"url\" : \"/api/equipment-categories/simple-weapons\"\n            },\n            \"option_set_type\" : \"equipment_category\"\n          },\n          \"type\" : \"equipment\"\n        },\n        \"option_type\" : \"choice\"\n      } ]\n    },\n    \"type\" : \"equipment\"\n  } ],\n  \"subclasses\" : [ {\n    \"index\" : \"berserker\",\n    \"name\" : \"Berserker\",\n    \"url\" : \"/api/subclasses/berserker\"\n  } ],\n  \"url\" : \"/api/classes/barbarian\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef152ff1-d381-478a-905a-b0ae0534e729",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.096602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "class_levels" : {
                  "description" : "URL of the level resource for the class.",
                  "type" : "string"
                },
                "hit_die" : {
                  "description" : "Hit die of the class. (ex: 12 == 1d12).",
                  "type" : "number"
                },
                "multi_classing" : {
                  "$ref" : "#/components/schemas/Multiclassing"
                },
                "proficiencies" : {
                  "description" : "List of starting proficiencies for all new characters of this class.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "proficiency_choices" : {
                  "description" : "List of choices of starting proficiencies.",
                  "items" : {
                    "$ref" : "#/components/schemas/Choice"
                  },
                  "type" : "array"
                },
                "saving_throws" : {
                  "description" : "Saving throws the class is proficient in.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "spellcasting" : {
                  "$ref" : "#/components/schemas/Spellcasting"
                },
                "spells" : {
                  "description" : "URL of the spell resource list for the class.",
                  "type" : "string"
                },
                "starting_equipment" : {
                  "description" : "List of equipment and their quantities all players of the class start with.",
                  "items" : {
                    "properties" : {
                      "equipment" : {
                        "$ref" : "#/components/schemas/APIReference"
                      },
                      "quantity" : {
                        "type" : "number"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                },
                "starting_equipment_options" : {
                  "description" : "List of choices of starting equipment.",
                  "items" : {
                    "$ref" : "#/components/schemas/Choice"
                  },
                  "type" : "array"
                },
                "subclasses" : {
                  "description" : "List of all possible subclasses this class can specialize in.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Class`\n"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "9fbce1fb-b980-4032-9684-5bfdaef67fb0",
    "name" : "Get a background by index.",
    "request" : {
      "urlPath" : "/api/backgrounds/acolyte",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bonds\" : {\n    \"choose\" : 1,\n    \"from\" : {\n      \"option_set_type\" : \"options_array\",\n      \"options\" : [ {\n        \"option_type\" : \"string\",\n        \"string\" : \"I would die to recover an ancient relic of my faith that was lost long ago.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I will someday get revenge on the corrupt temple hierarchy who branded me a heretic.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I owe my life to the priest who took me in when my parents died.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"Everything I do is for the common people.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I will do anything to protect the temple where I served.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I seek to preserve a sacred text that my enemies consider heretical and seek to destroy.\"\n      } ]\n    },\n    \"type\" : \"bonds\"\n  },\n  \"feature\" : {\n    \"desc\" : [ \"As an acolyte, you command the respect of those who share your faith, and you can perform the religious ceremonies of your deity. You and your adventuring companions can expect to receive free healing and care at a temple, shrine, or other established presence of your faith, though you must provide any material components needed for spells. Those who share your religion will support you (but only you) at a modest lifestyle.\", \"You might also have ties to a specific temple dedicated to your chosen deity or pantheon, and you have a residence there. This could be the temple where you used to serve, if you remain on good terms with it, or a temple where you have found a new home. While near your temple, you can call upon the priests for assistance, provided the assistance you ask for is not hazardous and you remain in good standing with your temple.\" ],\n    \"name\" : \"Shelter of the Faithful\"\n  },\n  \"flaws\" : {\n    \"choose\" : 1,\n    \"from\" : {\n      \"option_set_type\" : \"options_array\",\n      \"options\" : [ {\n        \"option_type\" : \"string\",\n        \"string\" : \"I judge others harshly, and myself even more severely.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I put too much trust in those who wield power within my temple's hierarchy.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"My piety sometimes leads me to blindly trust those that profess faith in my god.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I am inflexible in my thinking.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I am suspicious of strangers and expect the worst of them.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"Once I pick a goal, I become obsessed with it to the detriment of everything else in my life.\"\n      } ]\n    },\n    \"type\" : \"flaws\"\n  },\n  \"ideals\" : {\n    \"choose\" : 1,\n    \"from\" : {\n      \"option_set_type\" : \"options_array\",\n      \"options\" : [ {\n        \"alignments\" : [ {\n          \"index\" : \"lawful-good\",\n          \"name\" : \"Lawful Good\",\n          \"url\" : \"/api/alignments/lawful-good\"\n        }, {\n          \"index\" : \"lawful-neutral\",\n          \"name\" : \"Lawful Neutral\",\n          \"url\" : \"/api/alignments/lawful-neutral\"\n        }, {\n          \"index\" : \"lawful-evil\",\n          \"name\" : \"Lawful Evil\",\n          \"url\" : \"/api/alignments/lawful-evil\"\n        } ],\n        \"desc\" : \"Tradition. The ancient traditions of worship and sacrifice must be preserved and upheld.\",\n        \"option_type\" : \"ideal\"\n      }, {\n        \"alignments\" : [ {\n          \"index\" : \"lawful-good\",\n          \"name\" : \"Lawful Good\",\n          \"url\" : \"/api/alignments/lawful-good\"\n        }, {\n          \"index\" : \"neutral-good\",\n          \"name\" : \"Neutral Good\",\n          \"url\" : \"/api/alignments/neutral-good\"\n        }, {\n          \"index\" : \"chaotic-good\",\n          \"name\" : \"Chaotic Good\",\n          \"url\" : \"/api/alignments/chaotic-good\"\n        } ],\n        \"desc\" : \"Charity. I always try to help those in need, no matter what the personal cost.\",\n        \"option_type\" : \"ideal\"\n      }, {\n        \"alignments\" : [ {\n          \"index\" : \"chaotic-good\",\n          \"name\" : \"Chaotic Good\",\n          \"url\" : \"/api/alignments/chaotic-good\"\n        }, {\n          \"index\" : \"chaotic-neutral\",\n          \"name\" : \"Chaotic Neutral\",\n          \"url\" : \"/api/alignments/chaotic-neutral\"\n        }, {\n          \"index\" : \"chaotic-evil\",\n          \"name\" : \"Chaotic Evil\",\n          \"url\" : \"/api/alignments/chaotic-evil\"\n        } ],\n        \"desc\" : \"Change. We must help bring about the changes the gods are constantly working in the world.\",\n        \"option_type\" : \"ideal\"\n      }, {\n        \"alignments\" : [ {\n          \"index\" : \"lawful-good\",\n          \"name\" : \"Lawful Good\",\n          \"url\" : \"/api/alignments/lawful-good\"\n        }, {\n          \"index\" : \"lawful-neutral\",\n          \"name\" : \"Lawful Neutral\",\n          \"url\" : \"/api/alignments/lawful-neutral\"\n        }, {\n          \"index\" : \"lawful-evil\",\n          \"name\" : \"Lawful Evil\",\n          \"url\" : \"/api/alignments/lawful-evil\"\n        } ],\n        \"desc\" : \"Power. I hope to one day rise to the top of my faith's religious hierarchy.\",\n        \"option_type\" : \"ideal\"\n      }, {\n        \"alignments\" : [ {\n          \"index\" : \"lawful-good\",\n          \"name\" : \"Lawful Good\",\n          \"url\" : \"/api/alignments/lawful-good\"\n        }, {\n          \"index\" : \"lawful-neutral\",\n          \"name\" : \"Lawful Neutral\",\n          \"url\" : \"/api/alignments/lawful-neutral\"\n        }, {\n          \"index\" : \"lawful-evil\",\n          \"name\" : \"Lawful Evil\",\n          \"url\" : \"/api/alignments/lawful-evil\"\n        } ],\n        \"desc\" : \"Faith. I trust that my deity will guide my actions. I have faith that if I work hard, things will go well.\",\n        \"option_type\" : \"ideal\"\n      }, {\n        \"alignments\" : [ {\n          \"index\" : \"lawful-good\",\n          \"name\" : \"Lawful Good\",\n          \"url\" : \"/api/alignments/lawful-good\"\n        }, {\n          \"index\" : \"neutral-good\",\n          \"name\" : \"Neutral Good\",\n          \"url\" : \"/api/alignments/neutral-good\"\n        }, {\n          \"index\" : \"chaotic-good\",\n          \"name\" : \"Chaotic Good\",\n          \"url\" : \"/api/alignments/chaotic-good\"\n        }, {\n          \"index\" : \"lawful-neutral\",\n          \"name\" : \"Lawful Neutral\",\n          \"url\" : \"/api/alignments/lawful-neutral\"\n        }, {\n          \"index\" : \"neutral\",\n          \"name\" : \"Neutral\",\n          \"url\" : \"/api/alignments/neutral\"\n        }, {\n          \"index\" : \"chaotic-neutral\",\n          \"name\" : \"Chaotic Neutral\",\n          \"url\" : \"/api/alignments/chaotic-neutral\"\n        }, {\n          \"index\" : \"lawful-evil\",\n          \"name\" : \"Lawful Evil\",\n          \"url\" : \"/api/alignments/lawful-evil\"\n        }, {\n          \"index\" : \"neutral-evil\",\n          \"name\" : \"Neutral Evil\",\n          \"url\" : \"/api/alignments/neutral-evil\"\n        }, {\n          \"index\" : \"chaotic-evil\",\n          \"name\" : \"Chaotic Evil\",\n          \"url\" : \"/api/alignments/chaotic-evil\"\n        } ],\n        \"desc\" : \"Aspiration. I seek to prove myself worthy of my god's favor by matching my actions against his or her teachings.\",\n        \"option_type\" : \"ideal\"\n      } ]\n    },\n    \"type\" : \"ideals\"\n  },\n  \"index\" : \"acolyte\",\n  \"language_options\" : {\n    \"choose\" : 2,\n    \"from\" : {\n      \"option_set_type\" : \"resource_list\",\n      \"resource_list_url\" : \"/api/languages\"\n    },\n    \"type\" : \"languages\"\n  },\n  \"name\" : \"Acolyte\",\n  \"personality_traits\" : {\n    \"choose\" : 2,\n    \"from\" : {\n      \"option_set_type\" : \"options_array\",\n      \"options\" : [ {\n        \"option_type\" : \"string\",\n        \"string\" : \"I idolize a particular hero of my faith, and constantly refer to that person's deeds and example.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I can find common ground between the fiercest enemies, empathizing with them and always working toward peace.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I see omens in every event and action. The gods try to speak to us, we just need to listen.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"Nothing can shake my optimistic attitude.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I quote (or misquote) sacred texts and proverbs in almost every situation.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I am tolerant (or intolerant) of other faiths and respect (or condemn) the worship of other gods.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I've enjoyed fine food, drink, and high society among my temple's elite. Rough living grates on me.\"\n      }, {\n        \"option_type\" : \"string\",\n        \"string\" : \"I've spent so long in the temple that I have little practical experience dealing with people in the outside world.\"\n      } ]\n    },\n    \"type\" : \"personality_traits\"\n  },\n  \"starting_equipment\" : [ {\n    \"equipment\" : {\n      \"index\" : \"clothes-common\",\n      \"name\" : \"Clothes, common\",\n      \"url\" : \"/api/equipment/clothes-common\"\n    },\n    \"quantity\" : 1\n  }, {\n    \"equipment\" : {\n      \"index\" : \"pouch\",\n      \"name\" : \"Pouch\",\n      \"url\" : \"/api/equipment/pouch\"\n    },\n    \"quantity\" : 1\n  } ],\n  \"starting_equipment_options\" : [ {\n    \"choose\" : 1,\n    \"from\" : {\n      \"equipment_category\" : {\n        \"index\" : \"holy-symbols\",\n        \"name\" : \"Holy Symbols\",\n        \"url\" : \"/api/equipment-categories/holy-symbols\"\n      },\n      \"option_set_type\" : \"equipment_category\"\n    },\n    \"type\" : \"equipment\"\n  } ],\n  \"starting_proficiencies\" : [ {\n    \"index\" : \"skill-insight\",\n    \"name\" : \"Skill: Insight\",\n    \"url\" : \"/api/proficiencies/skill-insight\"\n  }, {\n    \"index\" : \"skill-religion\",\n    \"name\" : \"Skill: Religion\",\n    \"url\" : \"/api/proficiencies/skill-religion\"\n  } ],\n  \"url\" : \"/api/backgrounds/acolyte\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fbce1fb-b980-4032-9684-5bfdaef67fb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.096384Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "bonds" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "feature" : {
                  "description" : "Special feature granted to new characters of this background.",
                  "properties" : {
                    "desc" : {
                      "items" : {
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "name" : {
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "flaws" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "ideals" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "language_options" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "personality_traits" : {
                  "description" : "Choice of personality traits for this background.",
                  "type" : "object"
                },
                "starting_equipment" : {
                  "description" : "Starting equipment for all new characters of this background.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                },
                "starting_equipment_options" : {
                  "$ref" : "#/components/schemas/Choice"
                },
                "starting_proficiencies" : {
                  "description" : "Starting proficiencies for all new characters of this background.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Background`\n"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "96b9b54d-c5e9-4e37-b2e6-7614c717dfbc",
    "name" : "Get an alignment by index.",
    "request" : {
      "urlPath" : "/api/alignments/neutral-evil",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"abbreviation\" : \"CN\",\n  \"desc\" : \"Chaotic neutral (CN) creatures follow their whims, holding their personal freedom above all else. Many barbarians and rogues, and some bards, are chaotic neutral.\",\n  \"index\" : \"chaotic-neutral\",\n  \"name\" : \"Chaotic Neutral\",\n  \"url\" : \"/api/alignments/chaotic-neutral\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96b9b54d-c5e9-4e37-b2e6-7614c717dfbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.096186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "properties" : {
                "abbreviation" : {
                  "description" : "Abbreviation/initials/acronym for the alignment.",
                  "type" : "string"
                },
                "desc" : {
                  "description" : "Brief description of the resource.",
                  "type" : "string"
                }
              },
              "type" : "object"
            } ],
            "description" : "`Alignment`\n"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "114cb389-9146-4155-84e1-bc230da099af",
    "name" : "Get an ability score by index.",
    "request" : {
      "urlPath" : "/api/ability-scores/cha",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"desc\" : [ \"Charisma measures your ability to interact effectively with others. It includes such factors as confidence and eloquence, and it can represent a charming or commanding personality.\", \"A Charisma check might arise when you try to influence or entertain others, when you try to make an impression or tell a convincing lie, or when you are navigating a tricky social situation. The Deception, Intimidation, Performance, and Persuasion skills reflect aptitude in certain kinds of Charisma checks.\" ],\n  \"full_name\" : \"Charisma\",\n  \"index\" : \"cha\",\n  \"name\" : \"CHA\",\n  \"skills\" : [ {\n    \"index\" : \"deception\",\n    \"name\" : \"Deception\",\n    \"url\" : \"/api/skills/deception\"\n  }, {\n    \"index\" : \"intimidation\",\n    \"name\" : \"Intimidation\",\n    \"url\" : \"/api/skills/intimidation\"\n  }, {\n    \"index\" : \"performance\",\n    \"name\" : \"Performance\",\n    \"url\" : \"/api/skills/performance\"\n  }, {\n    \"index\" : \"persuasion\",\n    \"name\" : \"Persuasion\",\n    \"url\" : \"/api/skills/persuasion\"\n  } ],\n  \"url\" : \"/api/ability-scores/cha\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "114cb389-9146-4155-84e1-bc230da099af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.096074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "allOf" : [ {
              "$ref" : "#/components/schemas/APIReference"
            }, {
              "$ref" : "#/components/schemas/ResourceDescription"
            }, {
              "properties" : {
                "full_name" : {
                  "description" : "Full name of the ability score.",
                  "type" : "string"
                },
                "skills" : {
                  "description" : "List of skills that use this ability score.",
                  "items" : {
                    "$ref" : "#/components/schemas/APIReference"
                  },
                  "type" : "array"
                }
              },
              "type" : "object"
            } ],
            "description" : "`AbilityScore`\n"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "b6e234f2-7b74-4c33-8b65-c1e7b9abbff3",
    "name" : "Get all resource URLs.",
    "request" : {
      "urlPath" : "/api",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ability-scores\" : \"/api/ability-scores\",\n  \"alignments\" : \"/api/alignments\",\n  \"backgrounds\" : \"/api/backgrounds\",\n  \"classes\" : \"/api/classes\",\n  \"conditions\" : \"/api/conditions\",\n  \"damage-types\" : \"/api/damage-types\",\n  \"equipment\" : \"/api/equipment\",\n  \"equipment-categories\" : \"/api/equipment-categories\",\n  \"feats\" : \"/api/feats\",\n  \"features\" : \"/api/features\",\n  \"languages\" : \"/api/languages\",\n  \"magic-items\" : \"/api/magic-items\",\n  \"magic-schools\" : \"/api/magic-schools\",\n  \"monsters\" : \"/api/monsters\",\n  \"proficiencies\" : \"/api/proficiencies\",\n  \"races\" : \"/api/races\",\n  \"rule-sections\" : \"/api/rule-sections\",\n  \"rules\" : \"/api/rules\",\n  \"skills\" : \"/api/skills\",\n  \"spells\" : \"/api/spells\",\n  \"subclasses\" : \"/api/subclasses\",\n  \"subraces\" : \"/api/subraces\",\n  \"traits\" : \"/api/traits\",\n  \"weapon-properties\" : \"/api/weapon-properties\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6e234f2-7b74-4c33-8b65-c1e7b9abbff3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:22.095954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "additionalProperties" : {
              "type" : "string"
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 47
  } ]
}