{
  "mappings" : [ {
    "id" : "542f681b-9124-4fe5-8c49-19903441af6e",
    "name" : "<p>Passes transformed objects to a <code>GetObject</code> operation when using O... - 200",
    "request" : {
      "urlPath" : "/WriteGetObjectResponse#x-amz-request-route&x-amz-request-token",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "542f681b-9124-4fe5-8c49-19903441af6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.519365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "WriteGetObjectResponse"
        }
      }
    }
  }, {
    "id" : "05c98503-a6e9-4561-99fc-166e190273a8",
    "name" : "<p>Uploads a part by copying data from an existing object as data source. You sp...",
    "request" : {
      "urlPath" : "/cqamb0k81r72vrizqdjd33wk61bgsufv526n0lb8e45nh5vc9xgialrdhx7blb84qj5gy3nbss8qa6q5qxvxvksa46mxygde5ugqcmvlwjo1cr5leh7i0yc1an37oncxvsnbg5jlhp4i92ip412d0rm0jykg93kr2/vovhkud6ltrj2bq29d1ixmwi43anfje13mvalivcj3qxzuoxtp8zt9iz7swojvdepsagpudppu5xr8woen5miapi#x-amz-copy-source&partNumber&uploadId",
      "method" : "PUT",
      "queryParameters" : {
        "uploadId" : {
          "equalTo" : "s667"
        },
        "partNumber" : {
          "equalTo" : "1978007581938619408"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CopyPartResult\" : {\n    \"ETag\" : \"\\\"b0c6f0e7e054ab8fa2536a2677f8734d\\\"\",\n    \"LastModified\" : \"2016-12-29T21:24:43.000Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "05c98503-a6e9-4561-99fc-166e190273a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.519333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UploadPartCopy",
          "schema" : {
            "type" : "object",
            "example" : {
              "CopyPartResult" : {
                "ETag" : "\"b0c6f0e7e054ab8fa2536a2677f8734d\"",
                "LastModified" : "2016-12-29T21:24:43.000Z"
              }
            },
            "properties" : {
              "CopyPartResult" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CopyPartResult"
                }, {
                  "description" : "Container for all response elements."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "92212837-5168-4156-b3d8-0e54418b50d6",
    "name" : "<p>Uploads a part in a multipart upload.</p> <note> <p>In this operation, you pr...",
    "request" : {
      "urlPath" : "/ck9h4nr2ja5jetz43v9jt3kcv9ets9uc4xaljl939d1qjud7dltt9lb1e0qlbeeps6muz9m4099gt3oj1hinhgbwd94t6j8t461x7vr2o9islqg9r2kszuidnlsjk92x9d/7mbp6w9iv1bmq3h5cyqn1g8c8ja1xi3d7c9f7k71dbj2ehp23acmamanzjx38ihnt6l08hpxa7ej40hwlln7w6v9yr8gmzm39i3qxrlttk79ca4s76lid6hc6m50zrqz6t3rixke3y7oc2vd9hbqrxnab1yacjyfpip0rd82#partNumber&uploadId",
      "method" : "PUT",
      "queryParameters" : {
        "uploadId" : {
          "equalTo" : "300o"
        },
        "partNumber" : {
          "equalTo" : "6270287047248729067"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ETag\" : \"\\\"d8c2eafd90c266e19ab9dcacc479f8af\\\"\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "92212837-5168-4156-b3d8-0e54418b50d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.519165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UploadPart",
          "schema" : {
            "type" : "object",
            "example" : {
              "ETag" : "\"d8c2eafd90c266e19ab9dcacc479f8af\""
            }
          }
        }
      }
    }
  }, {
    "id" : "a2ece7bd-c389-43e4-8a10-487721fb8b47",
    "name" : "<p>This action filters the contents of an Amazon S3 object based on a simple str...",
    "request" : {
      "urlPath" : "/dzwlemeikkfrprpdf67nrermoxow8d0gjlb9thb96nr8a32e8zwxkwswsyu68u2jyv3alq5vr/dlcjzpwtuyq84geawpt89nsctlb6nfpepe3vxenjqin2oyef2hvf9msdemi83oo3e7ua3h1b6twcy7ddwlfyjioikzwnmx5atyc8huhiftei4r0qxn43ylc060g48sazi2e4vc68#select&select-type=2",
      "method" : "POST",
      "queryParameters" : {
        "select" : {
          "equalTo" : "false"
        },
        "select-type" : {
          "equalTo" : "2"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Payload\" : {\n    \"Progress\" : {\n      \"Details\" : {\n        \"BytesScanned\" : { },\n        \"BytesProcessed\" : { },\n        \"BytesReturned\" : { }\n      }\n    },\n    \"Cont\" : { },\n    \"Stats\" : {\n      \"Details\" : {\n        \"BytesScanned\" : { },\n        \"BytesProcessed\" : { },\n        \"BytesReturned\" : { }\n      }\n    },\n    \"End\" : { },\n    \"Records\" : {\n      \"Payload\" : { }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "a2ece7bd-c389-43e4-8a10-487721fb8b47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.518992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "SelectObjectContent",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Payload" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SelectObjectContentEventStream"
                }, {
                  "description" : "The array of results."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "7b244d00-9c67-4cb8-be94-54bc439e0a6a",
    "name" : "<p>Restores an archived copy of an object back into Amazon S3</p> <p>This action...",
    "request" : {
      "urlPath" : "/76p8ft5bwywd2hs3ocn1patz92dpsqfv3hnhq07zzhr9i26ew62rh55yk6nc5hvhuzxclzvrjbg12seicvsgzloshugllj8h95kwfmng/mnz0qm6pt8vuz1n68ditzhk9x6rjiv15ozsb93t8c2t22ai6yhle8mt2idyuhxtr7fwdhpwgx7qiiev0wz9i0isusv#restore",
      "method" : "POST",
      "queryParameters" : {
        "restore" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "7b244d00-9c67-4cb8-be94-54bc439e0a6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.518829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RestoreObject"
        }
      }
    }
  }, {
    "id" : "1d966ce5-235f-4509-9816-35972b508e9f",
    "name" : "<p>Restores an archived copy of an object back into Amazon S3</p> <p>This action...",
    "request" : {
      "urlPath" : "/pcpbe23i9plxtpp0iut1vxx74pw2s17uv4sucv6o376pdkxwi2dwj736odn4mekc6aryzyxi2b4df1fjhechirziwidcgjoh6thlj4shzufrq361yyfcsluj8gqkmnfbtzvlc7r0ewjqsyij9i1ax2r4if6v17/lhdsqxzvu6f4d4tvpwe0hxgmm5bkryxck3zobpy0k3u7kltmhynjshlk8y16nnqhvlpqf2g8zk6qnn5pwhs6yngbelui1jmsn3dfuqp8xexsai9x2iju4zlvj7jse6#restore",
      "method" : "POST",
      "queryParameters" : {
        "restore" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "1d966ce5-235f-4509-9816-35972b508e9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.518775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "RestoreObject",
          "schema" : {
            "type" : "object",
            "example" : { }
          }
        }
      }
    }
  }, {
    "id" : "316c13dd-01a4-48e7-987f-e36eb29aa420",
    "name" : "<p>Returns some or all (up to 1,000) of the objects in a bucket with each reques...",
    "request" : {
      "urlPath" : "/3r97mg87709buw0kpsytzyqlqv8a1lg7t7q7h5czc7f6vugr1228aj4mxvs6uk3n8j19ham6ixbryoj0k6qxdxrhoby90yot01vsqvbln4zf8ay5x2e7itahzbo22jym1wm4pne8dp29satn2umf7vu8qn#list-type=2",
      "method" : "GET",
      "queryParameters" : {
        "list-type" : {
          "equalTo" : "2"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "316c13dd-01a4-48e7-987f-e36eb29aa420",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.518708Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListObjectsV2"
        }
      }
    }
  }, {
    "id" : "65970d25-b7d5-469b-8331-83968b9794f9",
    "name" : "<p>Returns some or all (up to 1,000) of the objects in a bucket with each reques...",
    "request" : {
      "urlPath" : "/i8hzpq#list-type=2",
      "method" : "GET",
      "queryParameters" : {
        "list-type" : {
          "equalTo" : "2"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Contents\" : [ {\n    \"ETag\" : \"\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\"\",\n    \"Key\" : \"happyface.jpg\",\n    \"LastModified\" : \"2014-11-21T19:40:05.000Z\",\n    \"Size\" : 11,\n    \"StorageClass\" : \"STANDARD\"\n  }, {\n    \"ETag\" : \"\\\"becf17f89c30367a9a44495d62ed521a-1\\\"\",\n    \"Key\" : \"test.jpg\",\n    \"LastModified\" : \"2014-05-02T04:51:50.000Z\",\n    \"Size\" : 4192256,\n    \"StorageClass\" : \"STANDARD\"\n  } ],\n  \"IsTruncated\" : true,\n  \"KeyCount\" : \"2\",\n  \"MaxKeys\" : \"2\",\n  \"Name\" : \"examplebucket\",\n  \"NextContinuationToken\" : \"1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==\",\n  \"Prefix\" : \"\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "65970d25-b7d5-469b-8331-83968b9794f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.518641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListObjectsV2",
          "schema" : {
            "type" : "object",
            "example" : {
              "Contents" : [ {
                "ETag" : "\"70ee1738b6b21e2c8a43f3a5ab0eee71\"",
                "Key" : "happyface.jpg",
                "LastModified" : "2014-11-21T19:40:05.000Z",
                "Size" : 11,
                "StorageClass" : "STANDARD"
              }, {
                "ETag" : "\"becf17f89c30367a9a44495d62ed521a-1\"",
                "Key" : "test.jpg",
                "LastModified" : "2014-05-02T04:51:50.000Z",
                "Size" : 4192256,
                "StorageClass" : "STANDARD"
              } ],
              "IsTruncated" : true,
              "KeyCount" : "2",
              "MaxKeys" : "2",
              "Name" : "examplebucket",
              "NextContinuationToken" : "1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==",
              "Prefix" : ""
            },
            "properties" : {
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : "Set to false if all of the results were returned. Set to true if more keys are available to return. If the number of results exceeds that specified by MaxKeys, all of the results might not be returned."
                } ]
              },
              "Contents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectList"
                }, {
                  "description" : "Metadata about each object returned."
                } ]
              },
              "Name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketName"
                }, {
                  "description" : "<p>The bucket name.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>"
                } ]
              },
              "Prefix" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prefix"
                }, {
                  "description" : " Keys that begin with the indicated prefix."
                } ]
              },
              "Delimiter" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Delimiter"
                }, {
                  "description" : "Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the CommonPrefixes collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the <code>MaxKeys</code> value."
                } ]
              },
              "MaxKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MaxKeys"
                }, {
                  "description" : "Sets the maximum number of keys returned in the response. By default the action returns up to 1,000 key names. The response might contain fewer keys but will never contain more."
                } ]
              },
              "CommonPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CommonPrefixList"
                }, {
                  "description" : "<p>All of the keys (up to 1,000) rolled up into a common prefix count as a single return when calculating the number of returns.</p> <p>A response can contain <code>CommonPrefixes</code> only if you specify a delimiter.</p> <p> <code>CommonPrefixes</code> contains all (if there are any) keys between <code>Prefix</code> and the next occurrence of the string specified by a delimiter.</p> <p> <code>CommonPrefixes</code> lists keys that act like subdirectories in the directory specified by <code>Prefix</code>.</p> <p>For example, if the prefix is <code>notes/</code> and the delimiter is a slash (<code>/</code>) as in <code>notes/summer/july</code>, the common prefix is <code>notes/summer/</code>. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns. </p>"
                } ]
              },
              "EncodingType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncodingType"
                }, {
                  "description" : "<p>Encoding type used by Amazon S3 to encode object key names in the XML response.</p> <p>If you specify the encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>"
                } ]
              },
              "KeyCount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KeyCount"
                }, {
                  "description" : "KeyCount is the number of keys returned with this request. KeyCount will always be less than or equals to MaxKeys field. Say you ask for 50 keys, your result will include less than equals 50 keys "
                } ]
              },
              "ContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : " If ContinuationToken was sent with the request, it is included in the response."
                } ]
              },
              "NextContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : " <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which means there are more keys in the bucket that can be listed. The next list requests to Amazon S3 can be continued with this <code>NextContinuationToken</code>. <code>NextContinuationToken</code> is obfuscated and is not a real key"
                } ]
              },
              "StartAfter" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/StartAfter"
                }, {
                  "description" : "If StartAfter was sent with the request, it is included in the response."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d9d5e490-6da4-42b4-87db-4448af9bea1d",
    "name" : "<p>Returns metadata about all versions of the objects in a bucket. You can also ...",
    "request" : {
      "urlPath" : "/ro3y4nuwztj2bpsgj1f0m8fjapybj0hmsc5d94tzgmygpiemxndj6p2thn#versions",
      "method" : "GET",
      "queryParameters" : {
        "versions" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Versions\" : [ {\n    \"ETag\" : \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\",\n    \"IsLatest\" : true,\n    \"Key\" : \"HappyFace.jpg\",\n    \"LastModified\" : \"2016-12-15T01:19:41.000Z\",\n    \"Owner\" : {\n      \"DisplayName\" : \"owner-display-name\",\n      \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n    },\n    \"Size\" : 3191,\n    \"StorageClass\" : \"STANDARD\",\n    \"VersionId\" : \"null\"\n  }, {\n    \"ETag\" : \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\",\n    \"IsLatest\" : false,\n    \"Key\" : \"HappyFace.jpg\",\n    \"LastModified\" : \"2016-12-13T00:58:26.000Z\",\n    \"Owner\" : {\n      \"DisplayName\" : \"owner-display-name\",\n      \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n    },\n    \"Size\" : 3191,\n    \"StorageClass\" : \"STANDARD\",\n    \"VersionId\" : \"PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "d9d5e490-6da4-42b4-87db-4448af9bea1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.518369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListObjectVersions",
          "schema" : {
            "type" : "object",
            "example" : {
              "Versions" : [ {
                "ETag" : "\"6805f2cfc46c0f04559748bb039d69ae\"",
                "IsLatest" : true,
                "Key" : "HappyFace.jpg",
                "LastModified" : "2016-12-15T01:19:41.000Z",
                "Owner" : {
                  "DisplayName" : "owner-display-name",
                  "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
                },
                "Size" : 3191,
                "StorageClass" : "STANDARD",
                "VersionId" : "null"
              }, {
                "ETag" : "\"6805f2cfc46c0f04559748bb039d69ae\"",
                "IsLatest" : false,
                "Key" : "HappyFace.jpg",
                "LastModified" : "2016-12-13T00:58:26.000Z",
                "Owner" : {
                  "DisplayName" : "owner-display-name",
                  "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
                },
                "Size" : 3191,
                "StorageClass" : "STANDARD",
                "VersionId" : "PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k"
              } ]
            },
            "properties" : {
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : "A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria. If your results were truncated, you can make a follow-up paginated request using the NextKeyMarker and NextVersionIdMarker response parameters as a starting place in another request to return the rest of the results."
                } ]
              },
              "KeyMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KeyMarker"
                }, {
                  "description" : "Marks the last key returned in a truncated response."
                } ]
              },
              "VersionIdMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VersionIdMarker"
                }, {
                  "description" : "Marks the last version of the key returned in a truncated response."
                } ]
              },
              "NextKeyMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextKeyMarker"
                }, {
                  "description" : "When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextKeyMarker</code> specifies the first key not returned that satisfies the search criteria. Use this value for the key-marker request parameter in a subsequent request."
                } ]
              },
              "NextVersionIdMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextVersionIdMarker"
                }, {
                  "description" : "When the number of responses exceeds the value of <code>MaxKeys</code>, <code>NextVersionIdMarker</code> specifies the first object version not returned that satisfies the search criteria. Use this value for the version-id-marker request parameter in a subsequent request."
                } ]
              },
              "Versions" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectVersionList"
                }, {
                  "xml" : {
                    "name" : "Version"
                  },
                  "description" : "Container for version information."
                } ]
              },
              "DeleteMarkers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DeleteMarkers"
                }, {
                  "xml" : {
                    "name" : "DeleteMarker"
                  },
                  "description" : "Container for an object that is a delete marker."
                } ]
              },
              "Name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketName"
                }, {
                  "description" : "The bucket name."
                } ]
              },
              "Prefix" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prefix"
                }, {
                  "description" : "Selects objects that start with the value supplied by this parameter."
                } ]
              },
              "Delimiter" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Delimiter"
                }, {
                  "description" : "The delimiter grouping the included keys. A delimiter is a character that you specify to group keys. All keys that contain the same string between the prefix and the first occurrence of the delimiter are grouped under a single result element in <code>CommonPrefixes</code>. These groups are counted as one result against the max-keys limitation. These keys are not returned elsewhere in the response."
                } ]
              },
              "MaxKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MaxKeys"
                }, {
                  "description" : "Specifies the maximum number of objects to return."
                } ]
              },
              "CommonPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CommonPrefixList"
                }, {
                  "description" : "All of the keys rolled up into a common prefix count as a single return when calculating the number of returns."
                } ]
              },
              "EncodingType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncodingType"
                }, {
                  "description" : "<p> Encoding type used by Amazon S3 to encode object key names in the XML response.</p> <p>If you specify encoding-type request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>KeyMarker, NextKeyMarker, Prefix, Key</code>, and <code>Delimiter</code>.</p>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "13393978-de39-4e3d-add8-6ce4075c4fcc",
    "name" : "<p>This action lists in-progress multipart uploads. An in-progress multipart upl...",
    "request" : {
      "urlPath" : "/k516dxlmbqk1up49gi6i5n679m7h8czqnu1kmukhmg#uploads",
      "method" : "GET",
      "queryParameters" : {
        "uploads" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Bucket\" : \"acl1\",\n  \"IsTruncated\" : true,\n  \"KeyMarker\" : \"\",\n  \"MaxUploads\" : \"2\",\n  \"NextKeyMarker\" : \"someobjectkey\",\n  \"NextUploadIdMarker\" : \"examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--\",\n  \"UploadIdMarker\" : \"\",\n  \"Uploads\" : [ {\n    \"Initiated\" : \"2014-05-01T05:40:58.000Z\",\n    \"Initiator\" : {\n      \"DisplayName\" : \"ownder-display-name\",\n      \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n    },\n    \"Key\" : \"JavaFile\",\n    \"Owner\" : {\n      \"DisplayName\" : \"mohanataws\",\n      \"ID\" : \"852b113e7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n    },\n    \"StorageClass\" : \"STANDARD\",\n    \"UploadId\" : \"gZ30jIqlUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--\"\n  }, {\n    \"Initiated\" : \"2014-05-01T05:41:27.000Z\",\n    \"Initiator\" : {\n      \"DisplayName\" : \"ownder-display-name\",\n      \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n    },\n    \"Key\" : \"JavaFile\",\n    \"Owner\" : {\n      \"DisplayName\" : \"ownder-display-name\",\n      \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n    },\n    \"StorageClass\" : \"STANDARD\",\n    \"UploadId\" : \"b7tZSqIlo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "13393978-de39-4e3d-add8-6ce4075c4fcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.518087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListMultipartUploads",
          "schema" : {
            "type" : "object",
            "example" : {
              "Bucket" : "acl1",
              "IsTruncated" : true,
              "KeyMarker" : "",
              "MaxUploads" : "2",
              "NextKeyMarker" : "someobjectkey",
              "NextUploadIdMarker" : "examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--",
              "UploadIdMarker" : "",
              "Uploads" : [ {
                "Initiated" : "2014-05-01T05:40:58.000Z",
                "Initiator" : {
                  "DisplayName" : "ownder-display-name",
                  "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
                },
                "Key" : "JavaFile",
                "Owner" : {
                  "DisplayName" : "mohanataws",
                  "ID" : "852b113e7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
                },
                "StorageClass" : "STANDARD",
                "UploadId" : "gZ30jIqlUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--"
              }, {
                "Initiated" : "2014-05-01T05:41:27.000Z",
                "Initiator" : {
                  "DisplayName" : "ownder-display-name",
                  "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
                },
                "Key" : "JavaFile",
                "Owner" : {
                  "DisplayName" : "ownder-display-name",
                  "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
                },
                "StorageClass" : "STANDARD",
                "UploadId" : "b7tZSqIlo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--"
              } ]
            },
            "properties" : {
              "Bucket" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketName"
                }, {
                  "description" : "The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used."
                } ]
              },
              "KeyMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KeyMarker"
                }, {
                  "description" : "The key at or after which the listing began."
                } ]
              },
              "UploadIdMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/UploadIdMarker"
                }, {
                  "description" : "Upload ID after which listing began."
                } ]
              },
              "NextKeyMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextKeyMarker"
                }, {
                  "description" : "When a list is truncated, this element specifies the value that should be used for the key-marker request parameter in a subsequent request."
                } ]
              },
              "Prefix" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prefix"
                }, {
                  "description" : "When a prefix is provided in the request, this field contains the specified prefix. The result contains only keys starting with the specified prefix."
                } ]
              },
              "Delimiter" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Delimiter"
                }, {
                  "description" : "Contains the delimiter you specified in the request. If you don't specify a delimiter in your request, this element is absent from the response."
                } ]
              },
              "NextUploadIdMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextUploadIdMarker"
                }, {
                  "description" : "When a list is truncated, this element specifies the value that should be used for the <code>upload-id-marker</code> request parameter in a subsequent request."
                } ]
              },
              "MaxUploads" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MaxUploads"
                }, {
                  "description" : "Maximum number of multipart uploads that could have been included in the response."
                } ]
              },
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : "Indicates whether the returned list of multipart uploads is truncated. A value of true indicates that the list was truncated. The list can be truncated if the number of multipart uploads exceeds the limit allowed or specified by max uploads."
                } ]
              },
              "Uploads" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MultipartUploadList"
                }, {
                  "xml" : {
                    "name" : "Upload"
                  },
                  "description" : "Container for elements related to a particular multipart upload. A response can contain zero or more <code>Upload</code> elements."
                } ]
              },
              "CommonPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CommonPrefixList"
                }, {
                  "description" : "If you specify a delimiter in the request, then the result returns each distinct key prefix containing the delimiter in a <code>CommonPrefixes</code> element. The distinct key prefixes are returned in the <code>Prefix</code> child element."
                } ]
              },
              "EncodingType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncodingType"
                }, {
                  "description" : "<p>Encoding type used by Amazon S3 to encode object keys in the response.</p> <p>If you specify <code>encoding-type</code> request parameter, Amazon S3 includes this element in the response, and returns encoded key name values in the following response elements:</p> <p> <code>Delimiter</code>, <code>KeyMarker</code>, <code>Prefix</code>, <code>NextKeyMarker</code>, <code>Key</code>.</p>"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d36c7e7b-34a2-41a0-81c0-03efda8968ff",
    "name" : "Returns a list of all buckets owned by the authenticated sender of the request. ...",
    "request" : {
      "urlPath" : "/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Buckets\" : [ {\n    \"CreationDate\" : \"2012-02-15T21: 03: 02.000Z\",\n    \"Name\" : \"examplebucket\"\n  }, {\n    \"CreationDate\" : \"2011-07-24T19: 33: 50.000Z\",\n    \"Name\" : \"examplebucket2\"\n  }, {\n    \"CreationDate\" : \"2010-12-17T00: 56: 49.000Z\",\n    \"Name\" : \"examplebucket3\"\n  } ],\n  \"Owner\" : {\n    \"DisplayName\" : \"own-display-name\",\n    \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "d36c7e7b-34a2-41a0-81c0-03efda8968ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.517812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListBuckets",
          "schema" : {
            "type" : "object",
            "example" : {
              "Buckets" : [ {
                "CreationDate" : "2012-02-15T21: 03: 02.000Z",
                "Name" : "examplebucket"
              }, {
                "CreationDate" : "2011-07-24T19: 33: 50.000Z",
                "Name" : "examplebucket2"
              }, {
                "CreationDate" : "2010-12-17T00: 56: 49.000Z",
                "Name" : "examplebucket3"
              } ],
              "Owner" : {
                "DisplayName" : "own-display-name",
                "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31"
              }
            },
            "properties" : {
              "Buckets" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Buckets"
                }, {
                  "description" : "The list of buckets owned by the requester."
                } ]
              },
              "Owner" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Owner"
                }, {
                  "description" : "The owner of the buckets listed."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c58839f0-5672-4d61-9e97-327c64ca1eb1",
    "name" : "<p>Lists the metrics configurations for the bucket. The metrics configurations a...",
    "request" : {
      "urlPath" : "/22u8ywkxtgxjgrkoetyx09rvicx7afm09sbg4efgc4gamf36f#metrics",
      "method" : "GET",
      "queryParameters" : {
        "metrics" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextContinuationToken\" : { },\n  \"ContinuationToken\" : { },\n  \"MetricsConfigurationList\" : { },\n  \"IsTruncated\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "c58839f0-5672-4d61-9e97-327c64ca1eb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.517738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListBucketMetricsConfigurations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : "Indicates whether the returned list of metrics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request."
                } ]
              },
              "ContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : "The marker that is used as a starting point for this metrics configuration list response. This value is present if it was sent in the request."
                } ]
              },
              "NextContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "The marker used to continue a metrics configuration listing that has been truncated. Use the <code>NextContinuationToken</code> from a previously truncated list response to continue the listing. The continuation token is an opaque value that Amazon S3 understands."
                } ]
              },
              "MetricsConfigurationList" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MetricsConfigurationList"
                }, {
                  "xml" : {
                    "name" : "MetricsConfiguration"
                  },
                  "description" : "The list of metrics configurations for a bucket."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "aaeb69b4-59ee-45b3-ba01-3982fb2bcd9e",
    "name" : "<p>Returns a list of inventory configurations for the bucket. You can have up to...",
    "request" : {
      "urlPath" : "/ue5qwlhtwn4uceyjo60eybhxd700m6lyv2fulucylz16av20mqu012ww9m8x0zx4k0dnp8wsnard51oblqeen86p2upjkr2pbn0ao6x29o3bgwkr6lh7ynvcy69l4bixaoknshz8ogs8wtmtc5y5j5r6kkotidnd4mgq4nyju7z4dqu87w6umlez0mza7jr#inventory",
      "method" : "GET",
      "queryParameters" : {
        "inventory" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextContinuationToken\" : { },\n  \"ContinuationToken\" : { },\n  \"IsTruncated\" : { },\n  \"InventoryConfigurationList\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "aaeb69b4-59ee-45b3-ba01-3982fb2bcd9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.517599Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListBucketInventoryConfigurations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : "If sent in the request, the marker that is used as a starting point for this inventory configuration list response."
                } ]
              },
              "InventoryConfigurationList" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InventoryConfigurationList"
                }, {
                  "xml" : {
                    "name" : "InventoryConfiguration"
                  },
                  "description" : "The list of inventory configurations for a bucket."
                } ]
              },
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : "Tells whether the returned list of inventory configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken is provided for a subsequent request."
                } ]
              },
              "NextContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "The marker used to continue this inventory configuration listing. Use the <code>NextContinuationToken</code> from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "153f5d9b-eb1e-448d-8ecd-2e136cb588ba",
    "name" : "<p>Lists the S3 Intelligent-Tiering configuration from the specified bucket.</p>...",
    "request" : {
      "urlPath" : "/n060icyov3qlf7f8fgd6x44dhc6rfva8j2ok70hql6wlv63i40sz9cv7mp1mkarsaipz402y8apd2tjqfu7t1jflpo4sllqpq6jdjaaztt49ylth98h4jlrz8gwf9b1vawqhq9vuvcx1z3yio7jkcybji2o#intelligent-tiering",
      "method" : "GET",
      "queryParameters" : {
        "intelligent-tiering" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"IntelligentTieringConfigurationList\" : { },\n  \"NextContinuationToken\" : { },\n  \"ContinuationToken\" : { },\n  \"IsTruncated\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "153f5d9b-eb1e-448d-8ecd-2e136cb588ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.517457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListBucketIntelligentTieringConfigurations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : "Indicates whether the returned list of analytics configurations is complete. A value of <code>true</code> indicates that the list is not complete and the <code>NextContinuationToken</code> will be provided for a subsequent request."
                } ]
              },
              "ContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : "The <code>ContinuationToken</code> that represents a placeholder from where this request should begin."
                } ]
              },
              "NextContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "The marker used to continue this inventory configuration listing. Use the <code>NextContinuationToken</code> from this response to continue the listing in a subsequent request. The continuation token is an opaque value that Amazon S3 understands."
                } ]
              },
              "IntelligentTieringConfigurationList" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntelligentTieringConfigurationList"
                }, {
                  "xml" : {
                    "name" : "IntelligentTieringConfiguration"
                  },
                  "description" : "The list of S3 Intelligent-Tiering configurations for a bucket."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1a759937-d40b-41f2-88cc-9823d6564896",
    "name" : "<p>Lists the analytics configurations for the bucket. You can have up to 1,000 a...",
    "request" : {
      "urlPath" : "/2j1y4gfy2ub35eegw60mrtjvxnn50jm2rhau8eqtfbfrsyj6x1cq09b9h6kiz0zshuhvzdx73t8m7b#analytics",
      "method" : "GET",
      "queryParameters" : {
        "analytics" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextContinuationToken\" : { },\n  \"ContinuationToken\" : { },\n  \"IsTruncated\" : { },\n  \"AnalyticsConfigurationList\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "1a759937-d40b-41f2-88cc-9823d6564896",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.517324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListBucketAnalyticsConfigurations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : "Indicates whether the returned list of analytics configurations is complete. A value of true indicates that the list is not complete and the NextContinuationToken will be provided for a subsequent request."
                } ]
              },
              "ContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : "The marker that is used as a starting point for this analytics configuration list response. This value is present if it was sent in the request."
                } ]
              },
              "NextContinuationToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : " <code>NextContinuationToken</code> is sent when <code>isTruncated</code> is true, which indicates that there are more analytics configurations to list. The next request must include this <code>NextContinuationToken</code>. The token is obfuscated and is not a usable value."
                } ]
              },
              "AnalyticsConfigurationList" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AnalyticsConfigurationList"
                }, {
                  "xml" : {
                    "name" : "AnalyticsConfiguration"
                  },
                  "description" : "The list of analytics configurations for a bucket."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "96529bf6-ed22-4ad2-8fcc-1ce834424c94",
    "name" : "<p>Returns torrent files from a bucket. BitTorrent can save you bandwidth when y...",
    "request" : {
      "urlPath" : "/wwqssbp2g8ka3u6wy2v1z1nlz4pnq4goamg49yeeg2675mymc1fnaalmwqh3go2h6byw82qok9dnrxzbnhh2raq2zvvpr6cilbs7vnrorwxcpy22jus6gus789hatold3i2pdv5p2n9mfmz08kqowqibb6a9puygrdkj2v3h9zjomk5ehfqbg1ibn/gll1g3qysv84t3bya5gbmn51sl2ghlhxdhijqlu76oq4z#torrent",
      "method" : "GET",
      "queryParameters" : {
        "torrent" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "96529bf6-ed22-4ad2-8fcc-1ce834424c94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.517191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectTorrent",
          "schema" : {
            "type" : "object",
            "example" : { },
            "properties" : {
              "Body" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Body"
                }, {
                  "description" : "A Bencoded dictionary as defined by the BitTorrent specification"
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "aa0b6f1e-02a8-47a8-af9b-25fa92819126",
    "name" : "<p>Places an Object Retention configuration on an object. For more information, ...",
    "request" : {
      "urlPath" : "/li38xwzvgg6o85tnbvdnvqncdyc0sokd7894bxktcv7kog6it3os8tummx3w8ocgbaij14y/c2qkhxul6wfw2rqpa1f9wsvygxqxrbq18st2f0ndqbbwim4ctq9tk5lm4ph5pjs6f1e9ix2auqlp5oj7jwxswauvkkg9lg2pjhf9o3yy7hxt2ph3xbwz8mirgoi5h#retention",
      "method" : "PUT",
      "queryParameters" : {
        "retention" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "aa0b6f1e-02a8-47a8-af9b-25fa92819126",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.517113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutObjectRetention",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "52135dc7-c5de-41d6-8780-ae76c0c9dd3d",
    "name" : "<p>Retrieves an object's retention settings. For more information, see <a href=\"...",
    "request" : {
      "urlPath" : "/udk9r2sh1rn8f2ncx3dwspue8o9x42z3oh1ryenwrszv4n8g8j4qqghycknhn6g3amqlvqrexwnebheoa7demiqvvtkh3gwsh2j8gau7ijl7otp33ij89/ir14kbfcfrr8ujjk1kat1s7gvcdzlaj7u2n0hqy0a2q6tphf8jegn1e0rn16sye2sl1ge6lhwx7jdkul2nvvs99o7tv5j9bnwkbloap8#retention",
      "method" : "GET",
      "queryParameters" : {
        "retention" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Retention\" : {\n    \"Mode\" : { },\n    \"RetainUntilDate\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "52135dc7-c5de-41d6-8780-ae76c0c9dd3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.517052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectRetention",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Retention" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectLockRetention"
                }, {
                  "description" : "The container element for an object's retention settings."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b65ab8f3-83cd-4ee7-88aa-5802a8551ee0",
    "name" : "<p>Places an Object Lock configuration on the specified bucket. The rule specifi...",
    "request" : {
      "urlPath" : "/02uko7c9013541k2u4yu2zyxc14oex463yf1gepaam4b5o09v43y0hvhv0z93vj50z0pl0camiqwexftg3qukrlyqi572xvu6113t7hiocpg429plyysekfx5xqrow0l25a8pgt49hlwghmo#object-lock",
      "method" : "PUT",
      "queryParameters" : {
        "object-lock" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "b65ab8f3-83cd-4ee7-88aa-5802a8551ee0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutObjectLockConfiguration",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a402f6b7-b93d-43b2-a30a-23cd543a03a1",
    "name" : "<p>Gets the Object Lock configuration for a bucket. The rule specified in the Ob...",
    "request" : {
      "urlPath" : "/tvncxr8vx1zsv6eiwk1wtyqksee02suq3eyi2mzx0h37w08bhpt585dqk4mfzz9q#object-lock",
      "method" : "GET",
      "queryParameters" : {
        "object-lock" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ObjectLockConfiguration\" : {\n    \"ObjectLockEnabled\" : { },\n    \"Rule\" : {\n      \"DefaultRetention\" : {\n        \"Years\" : { },\n        \"Mode\" : { },\n        \"Days\" : { }\n      }\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "a402f6b7-b93d-43b2-a30a-23cd543a03a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectLockConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ObjectLockConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectLockConfiguration"
                }, {
                  "description" : "The specified bucket's Object Lock configuration."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2dd25132-2220-4084-afea-a71d36f7fe7a",
    "name" : "<p>Applies a legal hold configuration to the specified object. For more informat...",
    "request" : {
      "urlPath" : "/46qaj5az3pdj6hd62g7915fjfmgvmupbl5r1fnqiyczjwb0g6yohpudgzx0hv44t004mcdnkoxiwhipqrvu5pqrkpcr9wmpdnvsbbbnqzqt5ks1axl5jh/i7msq6ccevfxe92qvm3807j5hvtkdipnttrwmc0u9hl5x8kpmo5oqakq4f8z2xz0k7vuou70x1qcab0h7duo4ytp7skeceb44notm38qbfn8ib5e7lsn4xfb1xepa2pv1s32y8vjboujz4s4isaywx1anqgdt9ggneoo3st94ac9kika8m3okv8r9bvl42#legal-hold",
      "method" : "PUT",
      "queryParameters" : {
        "legal-hold" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "2dd25132-2220-4084-afea-a71d36f7fe7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516797Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutObjectLegalHold",
          "schema" : {
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "836668fb-3a57-44b2-b9d5-87e0e2317966",
    "name" : "<p>Gets an object's current legal hold status. For more information, see <a href...",
    "request" : {
      "urlPath" : "/vjqtb715hi23n5o58a90mx9joh853jvz08xf9rzt85ns9tkamkn25xj7v3uy1nhx8a32mgbjze377rh6idpfyshvhgasc/6s6yv#legal-hold",
      "method" : "GET",
      "queryParameters" : {
        "legal-hold" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"LegalHold\" : {\n    \"Status\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "836668fb-3a57-44b2-b9d5-87e0e2317966",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectLegalHold",
          "schema" : {
            "type" : "object",
            "properties" : {
              "LegalHold" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectLockLegalHold"
                }, {
                  "description" : "The current legal hold status for the specified object."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "0cd6cb9b-b45d-4a89-ab37-ed030e9fc92c",
    "name" : "<p>Retrieves all the metadata from an object without returning the object itself...",
    "request" : {
      "urlPath" : "/gl43li6bz92y6j9qm0t8g5y1xjpn9dfr6c51fj80gr84x57qz081f6x42qa9ao3u0kuvanbmgkxjmv34e6bqk8qjmx1j71whoquang4633r8w3h10dgxwqr0b96sc6hkye4r8vyfrwkflvacc3tn0ksmu1sqmd6wjjpvjhmxapxwx5/zpop7wo69gvn36y47oqfgph5zmfut8t0gby5jcorwmeyqrpp41nhslw1cscjblhpxs41htizgd9tnhmyh824tnijzmr69m284tsd#attributes&x-amz-object-attributes",
      "method" : "GET",
      "queryParameters" : {
        "attributes" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "0cd6cb9b-b45d-4a89-ab37-ed030e9fc92c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516645Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectAttributes"
        }
      }
    }
  }, {
    "id" : "acef503e-ea40-4d3c-a8f2-c45c4bed3f93",
    "name" : "<p>Retrieves all the metadata from an object without returning the object itself...",
    "request" : {
      "urlPath" : "/fpmr0t9409ebiudvdouffrrljlvzu8mbtveyjxn2p3pm706f33jk67nufmkqftu9jc23tbcvmc77t0vzt6l5pndstlxxa9pt77zwbersm5lp32g0517gmy382sg4s5prjkva092njhaxy2w4l55hpbi5cq4ztinfh8lg9ivmk0af1k1p3i4l1nmus8p5wmr/9ii869f0hqhj1fpm1qqoe80phkbbxw7ykwei29gt4koue87mmmkx11zh57kc7o9k0xs0aozpfe0igx1qtpa9f3aqg6xwjqnjjqv265msmif88dtxqa3ru1gweg2sfeu0qwad2ic5bu7jlp3xg1i3#attributes&x-amz-object-attributes",
      "method" : "GET",
      "queryParameters" : {
        "attributes" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ETag\" : { },\n  \"Checksum\" : {\n    \"ChecksumCRC32C\" : { },\n    \"ChecksumSHA1\" : { },\n    \"ChecksumCRC32\" : { },\n    \"ChecksumSHA256\" : { }\n  },\n  \"StorageClass\" : { },\n  \"ObjectSize\" : { },\n  \"ObjectParts\" : {\n    \"PartNumberMarker\" : { },\n    \"NextPartNumberMarker\" : { },\n    \"Parts\" : { },\n    \"IsTruncated\" : { },\n    \"TotalPartsCount\" : { },\n    \"MaxParts\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "acef503e-ea40-4d3c-a8f2-c45c4bed3f93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectAttributes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ETag" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ETag"
                }, {
                  "description" : "An ETag is an opaque identifier assigned by a web server to a specific version of a resource found at a URL."
                } ]
              },
              "Checksum" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Checksum"
                }, {
                  "description" : "The checksum or digest of the object."
                } ]
              },
              "ObjectParts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/GetObjectAttributesParts"
                }, {
                  "description" : "A collection of parts associated with a multipart upload."
                } ]
              },
              "StorageClass" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/StorageClass"
                }, {
                  "description" : "<p>Provides the storage class information of the object. Amazon S3 returns this header for all objects except for S3 Standard storage class objects.</p> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html\">Storage Classes</a>.</p>"
                } ]
              },
              "ObjectSize" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectSize"
                }, {
                  "description" : "The size of the object in bytes."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5377b610-91c1-4f99-9016-503b73a3a6a3",
    "name" : "<p>Uses the <code>acl</code> subresource to set the access control list (ACL) pe...",
    "request" : {
      "urlPath" : "/0ayxbkttwgz7z8l4muonlwwmip6rjumifq70uhsisvsou16dqdsnha2pugoax5s2lexbj5e0dbfaw3gc72zedui0lpi0gr2qmhyf36t0zjdd5a72y71osspxit527c71jngfom0c4/q4cwr517ab960sz9uuil34vcn8rzp716lxolvtvnb4i4mmrhd5dbi78do81jcotbi7vnhef50cvninggpsktn50dqglqze6tez850e1lh9j086w1iy9lsz#acl",
      "method" : "PUT",
      "queryParameters" : {
        "acl" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "5377b610-91c1-4f99-9016-503b73a3a6a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutObjectAcl"
        }
      }
    }
  }, {
    "id" : "e40b2da9-1d6a-4811-b88c-bef5d57cd11c",
    "name" : "<p>Uses the <code>acl</code> subresource to set the access control list (ACL) pe...",
    "request" : {
      "urlPath" : "/8fmiecb5xivckzlt7o7z3b9ljpbt11hiy52q9lzllxp32kpcdnxifzsnv8kat7gx028ltfpiagqqdf59grkyv9zdeoas54wx3mgztrptou10a0vszj/ho8vikwmhkkflsv5913gayfel5zi8qiospng4o4l9noeu323jmn770tnzw7ryryh2vxu5pllyfj36no10dsdp9yo4ir1y067509hhivb88eava7xyu9r38i0l0uzspyb1qg238n483tc76hho2u0bzehh1eu0uzbhhutdsj29bjljw5z74hl3gdakpgylujdhvm9hzlm#acl",
      "method" : "PUT",
      "queryParameters" : {
        "acl" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "e40b2da9-1d6a-4811-b88c-bef5d57cd11c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutObjectAcl",
          "schema" : {
            "type" : "object",
            "example" : { }
          }
        }
      }
    }
  }, {
    "id" : "f35ed2fe-98c9-49ea-af87-d1c489a533f7",
    "name" : "<p>Returns the access control list (ACL) of an object. To use this operation, yo...",
    "request" : {
      "urlPath" : "/07y/uzhw233o0ac7xkwnd50xg125tfiy9kfh04u31yf6z03ow338x8r35x96x31al4fkk29okmf7pow0yg987auspnnszrp7ls5es1xb6kbm06rfibljlb8at5qynnk5akjpawdopr2oepwtot5#acl",
      "method" : "GET",
      "queryParameters" : {
        "acl" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f35ed2fe-98c9-49ea-af87-d1c489a533f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectAcl"
        }
      }
    }
  }, {
    "id" : "fab685fa-60b8-4f8b-8748-6ee9bf3f4879",
    "name" : "<p>Returns the access control list (ACL) of an object. To use this operation, yo...",
    "request" : {
      "urlPath" : "/eueikfg72i40rl6wriffnqofei0v4goz5wytozw9a1zcvzk80w6tm52fawp7mu0stu6fbib40gkcg6rvbz4/yj8mpo1uc2xrwi1bvhm#acl",
      "method" : "GET",
      "queryParameters" : {
        "acl" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Grants\" : [ {\n    \"Grantee\" : {\n      \"DisplayName\" : \"owner-display-name\",\n      \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\",\n      \"Type\" : \"CanonicalUser\"\n    },\n    \"Permission\" : \"WRITE\"\n  }, {\n    \"Grantee\" : {\n      \"DisplayName\" : \"owner-display-name\",\n      \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\",\n      \"Type\" : \"CanonicalUser\"\n    },\n    \"Permission\" : \"WRITE_ACP\"\n  }, {\n    \"Grantee\" : {\n      \"DisplayName\" : \"owner-display-name\",\n      \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\",\n      \"Type\" : \"CanonicalUser\"\n    },\n    \"Permission\" : \"READ\"\n  }, {\n    \"Grantee\" : {\n      \"DisplayName\" : \"owner-display-name\",\n      \"ID\" : \"852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\",\n      \"Type\" : \"CanonicalUser\"\n    },\n    \"Permission\" : \"READ_ACP\"\n  } ],\n  \"Owner\" : {\n    \"DisplayName\" : \"owner-display-name\",\n    \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "fab685fa-60b8-4f8b-8748-6ee9bf3f4879",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516201Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectAcl",
          "schema" : {
            "type" : "object",
            "example" : {
              "Grants" : [ {
                "Grantee" : {
                  "DisplayName" : "owner-display-name",
                  "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
                  "Type" : "CanonicalUser"
                },
                "Permission" : "WRITE"
              }, {
                "Grantee" : {
                  "DisplayName" : "owner-display-name",
                  "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
                  "Type" : "CanonicalUser"
                },
                "Permission" : "WRITE_ACP"
              }, {
                "Grantee" : {
                  "DisplayName" : "owner-display-name",
                  "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
                  "Type" : "CanonicalUser"
                },
                "Permission" : "READ"
              }, {
                "Grantee" : {
                  "DisplayName" : "owner-display-name",
                  "ID" : "852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc",
                  "Type" : "CanonicalUser"
                },
                "Permission" : "READ_ACP"
              } ],
              "Owner" : {
                "DisplayName" : "owner-display-name",
                "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              }
            },
            "properties" : {
              "Owner" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Owner"
                }, {
                  "description" : " Container for the bucket owner's display name and ID."
                } ]
              },
              "Grants" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Grants"
                }, {
                  "xml" : {
                    "name" : "AccessControlList"
                  },
                  "description" : "A list of grants."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "61f54b43-389f-4a8d-b497-0656a85dce4b",
    "name" : "<p>Sets the versioning state of an existing bucket.</p> <p>You can set the versi... - 200",
    "request" : {
      "urlPath" : "/k3da4k6aildexjnzupze9cjksqbyvp66ggrlxu8idn5xkvn5rijdcantmsgd5azm2y21n9iyuzkxbul5ve35pvd1gr6ajzfm2p3og0pqrcqmwewmb0ag4ylmn013wwad7g6uy9kelnyfadw4vxywllcvfl9a0ltkusjp8zcf7b61xmesedhmcrd#versioning",
      "method" : "PUT",
      "queryParameters" : {
        "versioning" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "61f54b43-389f-4a8d-b497-0656a85dce4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketVersioning"
        }
      }
    }
  }, {
    "id" : "62df09c7-99bb-4b1b-8295-1488e00ab974",
    "name" : "<p>Returns the versioning state of a bucket.</p> <p>To retrieve the versioning s...",
    "request" : {
      "urlPath" : "/tobjfqyjb25g3dwovkuj2lt4w4lzk52kafmmpnh53jrb1ql266efxi1afi4qnd7k0xb819m8kgnuqq198ddcaahfs2rfqpmgqipti82dfc#versioning",
      "method" : "GET",
      "queryParameters" : {
        "versioning" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"MFADelete\" : \"Disabled\",\n  \"Status\" : \"Enabled\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "62df09c7-99bb-4b1b-8295-1488e00ab974",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.516029Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketVersioning",
          "schema" : {
            "type" : "object",
            "example" : {
              "MFADelete" : "Disabled",
              "Status" : "Enabled"
            },
            "properties" : {
              "Status" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketVersioningStatus"
                }, {
                  "description" : "The versioning state of the bucket."
                } ]
              },
              "MFADelete" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MFADeleteStatus"
                }, {
                  "xml" : {
                    "name" : "MfaDelete"
                  },
                  "description" : "Specifies whether MFA delete is enabled in the bucket versioning configuration. This element is only returned if the bucket has been configured with MFA delete. If the bucket has never been so configured, this element is not returned."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d47d9fae-50fd-4746-b63c-601aaf2a6abe",
    "name" : "<p>Sets the request payment configuration for a bucket. By default, the bucket o... - 200",
    "request" : {
      "urlPath" : "/tbsy964skkfivs3bgbnkferj0p4ye2bdpaq4c7ltyjy2yjsmyqiucis4wz5wnkg3mmgms3qj9wej2kegypgiks36419t0hwnf1ms9wkp#requestPayment",
      "method" : "PUT",
      "queryParameters" : {
        "requestPayment" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d47d9fae-50fd-4746-b63c-601aaf2a6abe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketRequestPayment"
        }
      }
    }
  }, {
    "id" : "95680694-594e-4dd8-831e-1698e8b11adc",
    "name" : "<p>Returns the request payment configuration of a bucket. To use this version of...",
    "request" : {
      "urlPath" : "/zd6vtw1cdbs5juqjyq6s8ds5alwslr6ugq5c6jvqvt71nqerfdqtlwlc6qatz4f3xl8jfnfvbiylci1yjksz772kj7rcob5e9gy9zaqvp9ts18b2#requestPayment",
      "method" : "GET",
      "queryParameters" : {
        "requestPayment" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Payer\" : \"BucketOwner\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "95680694-594e-4dd8-831e-1698e8b11adc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketRequestPayment",
          "schema" : {
            "type" : "object",
            "example" : {
              "Payer" : "BucketOwner"
            },
            "properties" : {
              "Payer" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Payer"
                }, {
                  "description" : "Specifies who pays for the download and request fees."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "f02d11d0-a366-42dd-abbd-faba2d6997b7",
    "name" : "<p>Retrieves the policy status for an Amazon S3 bucket, indicating whether the b...",
    "request" : {
      "urlPath" : "/cu2rmzzvb5hj3vs7iun250x6m08#policyStatus",
      "method" : "GET",
      "queryParameters" : {
        "policyStatus" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"PolicyStatus\" : {\n    \"IsPublic\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f02d11d0-a366-42dd-abbd-faba2d6997b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515823Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketPolicyStatus",
          "schema" : {
            "type" : "object",
            "properties" : {
              "PolicyStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PolicyStatus"
                }, {
                  "description" : "The policy status for the specified bucket."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d08754cb-d899-4454-bf8e-671945226826",
    "name" : " No longer used, see the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/AP... - 200",
    "request" : {
      "urlPath" : "/mn629o44ray2c76xx7rdefxjycua6oktgzryiemgkhusvas6o4w2luq1v55p6knay291azj7i8o9hiw2p1zf1ycsj8ixvrbf7rihn3jvsnblytk6kkgnx2uvxovi1482svwe71863d2g#notification&deprecated!",
      "method" : "PUT",
      "queryParameters" : {
        "notification" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d08754cb-d899-4454-bf8e-671945226826",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515743Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketNotification"
        }
      }
    }
  }, {
    "id" : "87764edf-c95a-4eee-aee4-3e16623a62e9",
    "name" : " No longer used, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/AP...",
    "request" : {
      "urlPath" : "/446pdubg1dsgvmrsqfccfrwvmlponh9u25k36rxwzdyg0hbm7u5opurixi2otpj6onau91v7jr0s6apws5oidb5unrqve0h7z8rkdvu5p4ue3o81i8ojtf#notification&deprecated!",
      "method" : "GET",
      "queryParameters" : {
        "notification" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"QueueConfiguration\" : {\n    \"Event\" : \"s3:ObjectCreated:Put\",\n    \"Events\" : [ \"s3:ObjectCreated:Put\" ],\n    \"Id\" : \"MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx\",\n    \"Queue\" : \"arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue\"\n  },\n  \"TopicConfiguration\" : {\n    \"Event\" : \"s3:ObjectCreated:Copy\",\n    \"Events\" : [ \"s3:ObjectCreated:Copy\" ],\n    \"Id\" : \"YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi\",\n    \"Topic\" : \"arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "87764edf-c95a-4eee-aee4-3e16623a62e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.51567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketNotification",
          "schema" : {
            "type" : "object",
            "example" : {
              "QueueConfiguration" : {
                "Event" : "s3:ObjectCreated:Put",
                "Events" : [ "s3:ObjectCreated:Put" ],
                "Id" : "MDQ2OGQ4NDEtOTBmNi00YTM4LTk0NzYtZDIwN2I3NWQ1NjIx",
                "Queue" : "arn:aws:sqs:us-east-1:acct-id:S3ObjectCreatedEventQueue"
              },
              "TopicConfiguration" : {
                "Event" : "s3:ObjectCreated:Copy",
                "Events" : [ "s3:ObjectCreated:Copy" ],
                "Id" : "YTVkMWEzZGUtNTY1NS00ZmE2LWJjYjktMmRlY2QwODFkNTJi",
                "Topic" : "arn:aws:sns:us-east-1:acct-id:S3ObjectCreatedEventTopic"
              }
            },
            "properties" : {
              "TopicConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TopicConfigurationDeprecated"
                }, {
                  "description" : "This data type is deprecated. A container for specifying the configuration for publication of messages to an Amazon Simple Notification Service (Amazon SNS) topic when Amazon S3 detects specified events. "
                } ]
              },
              "QueueConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QueueConfigurationDeprecated"
                }, {
                  "description" : "This data type is deprecated. This data type specifies the configuration for publishing messages to an Amazon Simple Queue Service (Amazon SQS) queue when Amazon S3 detects specified events. "
                } ]
              },
              "CloudFunctionConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CloudFunctionConfiguration"
                }, {
                  "description" : "Container for specifying the Lambda notification configuration."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "8f9c95f9-03c3-4666-b5d9-512f29e02c30",
    "name" : "<p>Enables notifications of specified events for a bucket. For more information ... - 200",
    "request" : {
      "urlPath" : "/dhn7a0pan0xh41tv4mbmciake85gzkjkvh09h2kqzoqqc1r7k25o5wa78uaq0wqlrrvbqgni4o74i2u1eg6k2ktul97m9bvykd4v0nibxwqs7krmir3jnhafsrpyfxke32qqx4a1rdjy3yscjc3t8l9jtgway1z7ubqnvyy#notification",
      "method" : "PUT",
      "queryParameters" : {
        "notification" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8f9c95f9-03c3-4666-b5d9-512f29e02c30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.51555Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketNotificationConfiguration"
        }
      }
    }
  }, {
    "id" : "52f1d741-ae0a-428d-8741-a8fe0093460e",
    "name" : "<p>Returns the notification configuration of a bucket.</p> <p>If notifications a...",
    "request" : {
      "urlPath" : "/mcbtivoqdvwg5j7hhdbfnhji4lgtczw5m6eagnpg8bddfbjmz5ab4j21bpmzp33t8pvuh8gknugeg9qudkldtb2sqmook3vfnd4m00hv5e64ejw9bi7gq9xnbwispx7dxfk9lov0utyrqj1sdkoh5lwvly5zralc5eol9pjran4e37#notification",
      "method" : "GET",
      "queryParameters" : {
        "notification" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"LambdaFunctionConfigurations\" : { },\n  \"TopicConfigurations\" : { },\n  \"QueueConfigurations\" : { },\n  \"EventBridgeConfiguration\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "52f1d741-ae0a-428d-8741-a8fe0093460e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515504Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketNotificationConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "TopicConfigurations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TopicConfigurationList"
                }, {
                  "xml" : {
                    "name" : "TopicConfiguration"
                  },
                  "description" : "The topic to which notifications are sent and the events for which notifications are generated."
                } ]
              },
              "QueueConfigurations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QueueConfigurationList"
                }, {
                  "xml" : {
                    "name" : "QueueConfiguration"
                  },
                  "description" : "The Amazon Simple Queue Service queues to publish messages to and the events for which to publish messages."
                } ]
              },
              "LambdaFunctionConfigurations" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LambdaFunctionConfigurationList"
                }, {
                  "xml" : {
                    "name" : "CloudFunctionConfiguration"
                  },
                  "description" : "Describes the Lambda functions to invoke and the events for which to invoke them."
                } ]
              },
              "EventBridgeConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EventBridgeConfiguration"
                }, {
                  "description" : "Enables delivery of events to Amazon EventBridge."
                } ]
              }
            },
            "description" : "A container for specifying the notification configuration of the bucket. If this element is empty, notifications are turned off for the bucket."
          }
        }
      }
    }
  }, {
    "id" : "579ccef8-d12f-486b-a5e4-69ea13cb7fcd",
    "name" : "<p>Set the logging parameters for a bucket and to specify permissions for who ca... - 200",
    "request" : {
      "urlPath" : "/48fcktigvaiuppkcpz85upl32m1sklz6ttk2jeeo2vcaoykm40eegbxfnqoa20j0y0xskh6bimyz25xp#logging",
      "method" : "PUT",
      "queryParameters" : {
        "logging" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "579ccef8-d12f-486b-a5e4-69ea13cb7fcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketLogging"
        }
      }
    }
  }, {
    "id" : "99c2a9e9-304b-432a-a73e-c02711071f52",
    "name" : "<p>Returns the logging status of a bucket and the permissions users have to view...",
    "request" : {
      "urlPath" : "/6vgou39t7c2r1q7i8allagwd2pa5n0aeachzr3krfajvzqrgv3bp60eami8l0qmqpqoq0saszo0te7baf8ossvkcoxr500gv3c9q4ea4#logging",
      "method" : "GET",
      "queryParameters" : {
        "logging" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"LoggingEnabled\" : {\n    \"TargetPrefix\" : { },\n    \"TargetBucket\" : { },\n    \"TargetGrants\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "99c2a9e9-304b-432a-a73e-c02711071f52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.51532Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketLogging",
          "schema" : {
            "type" : "object",
            "properties" : {
              "LoggingEnabled" : {
                "$ref" : "#/components/schemas/LoggingEnabled"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2a90f899-f5a7-4187-a10d-b8844997383f",
    "name" : "<p>Returns the Region the bucket resides in. You set the bucket's Region using t...",
    "request" : {
      "urlPath" : "/7xm0is5vklub39lm7915l8lmhbxzy25rd#location",
      "method" : "GET",
      "queryParameters" : {
        "location" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"LocationConstraint\" : \"us-west-2\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "2a90f899-f5a7-4187-a10d-b8844997383f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515239Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketLocation",
          "schema" : {
            "type" : "object",
            "example" : {
              "LocationConstraint" : "us-west-2"
            },
            "properties" : {
              "LocationConstraint" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketLocationConstraint"
                }, {
                  "description" : "Specifies the Region where the bucket resides. For a list of all the Amazon S3 supported location constraints by Region, see <a href=\"https://docs.aws.amazon.com/general/latest/gr/rande.html#s3_region\">Regions and Endpoints</a>. Buckets in Region <code>us-east-1</code> have a LocationConstraint of <code>null</code>."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "7de8fc78-f4c3-418c-a43c-69ca2c4024bc",
    "name" : "<important> <p>For an updated version of this API, see <a href=\"https://docs.aws... - 200",
    "request" : {
      "urlPath" : "/hv7x6lhs934v8u8ykmfazh5mlcbsj0uu0zqevmbbnp8hevx1t0fidcnkmxxstile8wzzzdnsbjzgmzioi43weoqqbi8mgshxy8zgga2ommf0dimz9609scvwo9oc44f4x4ilyq5qfeu5vkb0gh5v544zq66th2f5t339nvi6mrwf4x8#lifecycle&deprecated!",
      "method" : "PUT",
      "queryParameters" : {
        "lifecycle" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7de8fc78-f4c3-418c-a43c-69ca2c4024bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.51517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketLifecycle"
        }
      }
    }
  }, {
    "id" : "ac6e3aa3-c2e4-4de4-a127-3969bfd14da2",
    "name" : "<important> <p>For an updated version of this API, see <a href=\"https://docs.aws...",
    "request" : {
      "urlPath" : "/obk3ebw0hiap3ubjq7abellfjjyhoeejk6aftvjd2kv5nyierzzyjytfaknpzh04b939wp9f8h5j19ajitintafi07q6dov5nb3krpfgknffo23h31tpfrmk15bomhq#lifecycle&deprecated!",
      "method" : "GET",
      "queryParameters" : {
        "lifecycle" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Rules\" : [ {\n    \"Expiration\" : {\n      \"Days\" : 1\n    },\n    \"ID\" : \"delete logs\",\n    \"Prefix\" : \"123/\",\n    \"Status\" : \"Enabled\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "ac6e3aa3-c2e4-4de4-a127-3969bfd14da2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketLifecycle",
          "schema" : {
            "type" : "object",
            "example" : {
              "Rules" : [ {
                "Expiration" : {
                  "Days" : 1
                },
                "ID" : "delete logs",
                "Prefix" : "123/",
                "Status" : "Enabled"
              } ]
            },
            "properties" : {
              "Rules" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Rules"
                }, {
                  "xml" : {
                    "name" : "Rule"
                  },
                  "description" : "Container for a lifecycle rule."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "dee40041-fc7e-41d1-bb56-46adbdec41a2",
    "name" : "<p>Sets the permissions on an existing bucket using access control lists (ACL). ... - 200",
    "request" : {
      "urlPath" : "/7yofkzxie969bwtiwashmqjqtgmm8iy9qtm7bi26ykiczc9mudxd6m8wl9af5ly7s43kdbnoucvlzr2mttcew10ba0xn9x6t965v3i1nec1tncd4wihp3gdxal3tb11dcnia8b8d648yc5x6h0sljb67#acl",
      "method" : "PUT",
      "queryParameters" : {
        "acl" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dee40041-fc7e-41d1-bb56-46adbdec41a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketAcl"
        }
      }
    }
  }, {
    "id" : "c7a800dc-4ab0-44bc-aed4-48c3364c9020",
    "name" : "<p>This implementation of the <code>GET</code> action uses the <code>acl</code> ...",
    "request" : {
      "urlPath" : "/7lx7wrnl4euzf3nr1gyiz2kbn5on20lrkb2j5m3rbnwzzvo41xo6w08b28n2zdawgwu0kr3p7sunx63auo4u429so9gm7bzk09evvj3fc2g8pgbtu09qnolg51wv#acl",
      "method" : "GET",
      "queryParameters" : {
        "acl" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Owner\" : {\n    \"DisplayName\" : { },\n    \"ID\" : { }\n  },\n  \"Grants\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "c7a800dc-4ab0-44bc-aed4-48c3364c9020",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.515003Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketAcl",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Owner" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Owner"
                }, {
                  "description" : "Container for the bucket owner's display name and ID."
                } ]
              },
              "Grants" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Grants"
                }, {
                  "xml" : {
                    "name" : "AccessControlList"
                  },
                  "description" : "A list of grants."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "bedf068d-8427-4b49-978a-4df8bb0e797e",
    "name" : "<p>Sets the accelerate configuration of an existing bucket. Amazon S3 Transfer A... - 200",
    "request" : {
      "urlPath" : "/0ngrioieq9n8owgvympfsvpxbqym3mdlxbn9cruwg48admsiy5g0q5u3dfbhjemqevuiutlg2o4kep87cj7#accelerate",
      "method" : "PUT",
      "queryParameters" : {
        "accelerate" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bedf068d-8427-4b49-978a-4df8bb0e797e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketAccelerateConfiguration"
        }
      }
    }
  }, {
    "id" : "8587800a-086a-4c8c-8c0b-a1a03a69d97f",
    "name" : "<p>This implementation of the GET action uses the <code>accelerate</code> subres...",
    "request" : {
      "urlPath" : "/jv353flr21kkc2mphp8b6ire4xpoiv6yojz8e1yla7gdbmsavneawrwvzeg293riv2etqu8ipdc1znhv9vwioeldflhmci0l1v85vfo5nvbddloo6zq2uus3wf4j63158043k0sbc9i4tjwpolkjb4qu26c5krmry7a3ec5psz4aeh3l77b3z7fmlwt06mbne6rlxbft#accelerate",
      "method" : "GET",
      "queryParameters" : {
        "accelerate" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Status\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "8587800a-086a-4c8c-8c0b-a1a03a69d97f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketAccelerateConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Status" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketAccelerateStatus"
                }, {
                  "description" : "The accelerate configuration of the bucket."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "57d48eb0-ac49-46e4-90f3-f28f1acf3cb0",
    "name" : "<p>Creates or modifies the <code>PublicAccessBlock</code> configuration for an A... - 200",
    "request" : {
      "urlPath" : "/5ixqb8cxy8wqaxeb7djq4y5adg81oh40iejwsro9debi2dty10hy1x13epji15jbqbef511i1us1sxym5smmns8gxiaogon5lqh4isj3p6q3mfybdfl1fwv6fo8e6ezyo2h8#publicAccessBlock",
      "method" : "PUT",
      "queryParameters" : {
        "publicAccessBlock" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "57d48eb0-ac49-46e4-90f3-f28f1acf3cb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514779Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutPublicAccessBlock"
        }
      }
    }
  }, {
    "id" : "87568ac8-cb41-4f9c-95a5-4264331af813",
    "name" : "<p>Retrieves the <code>PublicAccessBlock</code> configuration for an Amazon S3 b...",
    "request" : {
      "urlPath" : "/lr94pp8tkyx20ftv3vtu5f6qdlbfbpyo1o11kp3u2itoiw6dprnw4k0pfy4nwnh71#publicAccessBlock",
      "method" : "GET",
      "queryParameters" : {
        "publicAccessBlock" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"PublicAccessBlockConfiguration\" : {\n    \"RestrictPublicBuckets\" : { },\n    \"BlockPublicPolicy\" : { },\n    \"BlockPublicAcls\" : { },\n    \"IgnorePublicAcls\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "87568ac8-cb41-4f9c-95a5-4264331af813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetPublicAccessBlock",
          "schema" : {
            "type" : "object",
            "properties" : {
              "PublicAccessBlockConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PublicAccessBlockConfiguration"
                }, {
                  "description" : "The <code>PublicAccessBlock</code> configuration currently in effect for this Amazon S3 bucket."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "131037fc-5a66-462f-9697-58ca6e16bf8d",
    "name" : "<p>Removes the <code>PublicAccessBlock</code> configuration for an Amazon S3 buc... - 204",
    "request" : {
      "urlPath" : "/xg3lg9ewryk63k1knki1n1dtnlr6s3az9tql4ckdruxk2uttcivr2qh7tpycji0e4hykz4rccarm2ju4xeahie8k47o8wua6xxp712y57qyp52d30urhnepluvpfvu4#publicAccessBlock",
      "method" : "DELETE",
      "queryParameters" : {
        "publicAccessBlock" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "131037fc-5a66-462f-9697-58ca6e16bf8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.51464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeletePublicAccessBlock"
        }
      }
    }
  }, {
    "id" : "d20f2629-8a81-4d88-82d7-afbd6610d7cd",
    "name" : "<p>This action enables you to delete multiple objects from a bucket using a sing...",
    "request" : {
      "urlPath" : "/w0w8voqwfddvafepqm479afwgy5tp6nmy4hzrjf7rb39w04px5i9sp5htexsm2v6zv9od6n4rly2cary4tlbn69dca7lnd16xscwea3x5tkrkz2qucte6pmgjguqanfq1j67l#delete",
      "method" : "POST",
      "queryParameters" : {
        "delete" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Deleted\" : [ {\n    \"Key\" : \"HappyFace.jpg\",\n    \"VersionId\" : \"yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd\"\n  }, {\n    \"Key\" : \"HappyFace.jpg\",\n    \"VersionId\" : \"2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "d20f2629-8a81-4d88-82d7-afbd6610d7cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514594Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteObjects",
          "schema" : {
            "type" : "object",
            "example" : {
              "Deleted" : [ {
                "Key" : "HappyFace.jpg",
                "VersionId" : "yoz3HB.ZhCS_tKVEmIOr7qYyyAaZSKVd"
              }, {
                "Key" : "HappyFace.jpg",
                "VersionId" : "2LWg7lQLnY41.maGB5Z6SWW.dcq0vx7b"
              } ]
            },
            "properties" : {
              "Deleted" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DeletedObjects"
                }, {
                  "description" : "Container element for a successful delete. It identifies the object that was successfully deleted."
                } ]
              },
              "Errors" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Errors"
                }, {
                  "xml" : {
                    "name" : "Error"
                  },
                  "description" : "Container for a failed delete action that describes the object that Amazon S3 attempted to delete and the error it encountered."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "05c7344e-7a7d-4225-a437-f158a9f0236e",
    "name" : "<p>Sets the supplied tag-set to an object that already exists in a bucket.</p> <...",
    "request" : {
      "urlPath" : "/i2tfqtqadg0q4yp0lrmchwaoy43uo62lge37v6zudt30ubyyngqk0vsf5ji161nzm1mtgcfljj8yhtrknz6tfongn9t26bq29c7mopj0a5ar3klym3gnwjgykho1443koroqzquyb4fxe4fhfw9q6sexygbqkovgp8q11w00ycpml15v7/vpazfv04asuk3v8k7vkb42tzi5fzdbec2va5j8yzp5e9uaf5gi9ktt0lsab2p3ri21lnpw3k4apn7g62knf3hljab9e3hweazyrkpd6fwhndzxxa0thkip48a3m46qybuf65vhl5jwepqt5dbew#tagging",
      "method" : "PUT",
      "queryParameters" : {
        "tagging" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"VersionId\" : \"null\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "05c7344e-7a7d-4225-a437-f158a9f0236e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutObjectTagging",
          "schema" : {
            "type" : "object",
            "example" : {
              "VersionId" : "null"
            }
          }
        }
      }
    }
  }, {
    "id" : "c65ceeab-1186-4ab1-8286-19a59be1c384",
    "name" : "<p>Returns the tag-set of an object. You send the GET request against the taggin...",
    "request" : {
      "urlPath" : "/vncz07rotrcgbiw7s5f4w59kzl0dzw0hi8yiq9afp5zhu8p1nd7p5r76k28wiufm1r6min8pe1tsjbr63zvy1/nh7x#tagging",
      "method" : "GET",
      "queryParameters" : {
        "tagging" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TagSet\" : [ {\n    \"Key\" : \"Key4\",\n    \"Value\" : \"Value4\"\n  }, {\n    \"Key\" : \"Key3\",\n    \"Value\" : \"Value3\"\n  } ],\n  \"VersionId\" : \"null\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "c65ceeab-1186-4ab1-8286-19a59be1c384",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObjectTagging",
          "schema" : {
            "type" : "object",
            "required" : [ "TagSet" ],
            "example" : {
              "TagSet" : [ {
                "Key" : "Key4",
                "Value" : "Value4"
              }, {
                "Key" : "Key3",
                "Value" : "Value3"
              } ],
              "VersionId" : "null"
            },
            "properties" : {
              "TagSet" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagSet"
                }, {
                  "description" : "Contains the tag set."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5f8cfbea-97e9-4f57-91af-4fa52815d703",
    "name" : "<p>Removes the entire tag set from the specified object. For more information ab...",
    "request" : {
      "urlPath" : "/56jr11k8vj8vikg2u8fy1ief7gslra5xq0frxm710nexz90psqy8rf4ksyijvusv8mmozd28nskp6ujjwt6c9tb22z/gs75pitbxr9jqam1m6b3ctqwhqs7fzql224zvwimetdmgjz6fkviyvoj0zqocx06f5kx7bkqcr9ll9vsl953oo3ouka3udrurkg6wyk9uaehxli3o3gxdzqypzgckmnsqnzy76m847z0z3fysf0560gfvupbv1j#tagging",
      "method" : "DELETE",
      "queryParameters" : {
        "tagging" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 204,
      "body" : "{\n  \"VersionId\" : \"ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "5f8cfbea-97e9-4f57-91af-4fa52815d703",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteObjectTagging",
          "schema" : {
            "type" : "object",
            "example" : {
              "VersionId" : "ydlaNkwWm0SfKJR.T1b1fIdPRbldTYRI"
            }
          }
        }
      }
    }
  }, {
    "id" : "d6972084-220a-4b97-9f3b-87f11f8510cb",
    "name" : "<p>Adds an object to a bucket. You must have WRITE permissions on a bucket to ad...",
    "request" : {
      "urlPath" : "/4c635x5we9s949cb3yj7mml38hor5gpmijwkwva0anuzu0ho25r3ixvter3pnn2hbrj0rzj8sf26123qlar5/0d2d7ebashk1vwxank201gmgxisvju9j7hgnj2s3i8osqbxhih4guxzd9nr46rfbvocmrl9qd2ity2yvgamriulelw12o1c0ws1ya6l230bszggsxfjxystr1aof84cd6ufn1pmh2kh1ka675zgjtaz0teo1blmfab728va988zdp",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ETag\" : \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\",\n  \"VersionId\" : \"Kirh.unyZwjQ69YxcQLA8z4F5j3kJJKr\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "d6972084-220a-4b97-9f3b-87f11f8510cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutObject",
          "schema" : {
            "type" : "object",
            "example" : {
              "ETag" : "\"6805f2cfc46c0f04559748bb039d69ae\"",
              "VersionId" : "Kirh.unyZwjQ69YxcQLA8z4F5j3kJJKr"
            }
          }
        }
      }
    }
  }, {
    "id" : "398eb4e1-87fb-42db-8e16-252f9c15650e",
    "name" : "<p>The HEAD action retrieves metadata from an object without returning the objec...",
    "request" : {
      "urlPath" : "/3dbdt8dxy0cobcfizpn3la5jt4v3nbwhtkxmnjzrvovpmxa6evfm4ifojgfayecnyu57ilm76lunpbu97q7nywfff6d5588ejvelonkr5/lcfrstjph0eigteggcwu",
      "method" : "HEAD"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "398eb4e1-87fb-42db-8e16-252f9c15650e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HeadObject"
        }
      }
    }
  }, {
    "id" : "b6967ccf-0994-43d2-a901-008ee22b33d4",
    "name" : "<p>The HEAD action retrieves metadata from an object without returning the objec...",
    "request" : {
      "urlPath" : "/xg9u1dmhv2hc9kei0xolg8xwts2l21br1v2vkhbnwyrcc4a0lmcwkgrgs9b9bx6swrf9ciqr3fnfstt8qx6almdgkyv0vwqx0q84xz5w4gc8mnwfex3r2jo7puawvrh7ndh8m8tipz3v57j1f4pr0ujm3covjphy772h39dnpe2oy81pg42ut7gd6l/p7kof3gkcviu28gdbrg6ex3rmylx1lcy87sk21srkj2ux3hmug0ev1cemhqb6gj5xk5l6bizpiqo1nenp38pgmxvqd5avyj7ezc00pgi1roc0seqqacw013im0w18nw3oemw",
      "method" : "HEAD"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"AcceptRanges\" : \"bytes\",\n  \"ContentLength\" : \"3191\",\n  \"ContentType\" : \"image/jpeg\",\n  \"ETag\" : \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\",\n  \"LastModified\" : \"Thu, 15 Dec 2016 01:19:41 GMT\",\n  \"Metadata\" : { },\n  \"VersionId\" : \"null\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "b6967ccf-0994-43d2-a901-008ee22b33d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HeadObject",
          "schema" : {
            "type" : "object",
            "example" : {
              "AcceptRanges" : "bytes",
              "ContentLength" : "3191",
              "ContentType" : "image/jpeg",
              "ETag" : "\"6805f2cfc46c0f04559748bb039d69ae\"",
              "LastModified" : "Thu, 15 Dec 2016 01:19:41 GMT",
              "Metadata" : { },
              "VersionId" : "null"
            },
            "properties" : {
              "Metadata" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Metadata"
                }, {
                  "xml" : {
                    "name" : "x-amz-meta-"
                  },
                  "description" : "A map of metadata to store with the object in S3."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "03bc0ef9-7ded-4cd8-9fdc-e2b95300ba2a",
    "name" : "<p>Retrieves objects from Amazon S3. To use <code>GET</code>, you must have <cod...",
    "request" : {
      "urlPath" : "/nvwfugkmuzpdmgoxb6yyjxzcm122qwdqmsnqyqldpvnzgl2vr33b271iyxs6edqpx6v2i2/yytmerv2g",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "03bc0ef9-7ded-4cd8-9fdc-e2b95300ba2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObject"
        }
      }
    }
  }, {
    "id" : "f71dbf41-66ce-4ead-8c14-4cfc650cbc73",
    "name" : "<p>Retrieves objects from Amazon S3. To use <code>GET</code>, you must have <cod...",
    "request" : {
      "urlPath" : "/ohdbx5drriqk1nzuc6hayqmah/5vr7oj9aprmv1t3p7ch0c1vlwvy8eptwc0admpiseedc6wdgv4ivhruvvck7du0o949yswoc6fk5l27jmzga1sifomh3bvo7jo0pe59k7eribfzysuwqqth0ksddkge7z2izjfo784gijf7dmg",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f71dbf41-66ce-4ead-8c14-4cfc650cbc73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObject"
        }
      }
    }
  }, {
    "id" : "87a0b6ff-54bf-4aba-827d-9dc164962a53",
    "name" : "<p>Retrieves objects from Amazon S3. To use <code>GET</code>, you must have <cod...",
    "request" : {
      "urlPath" : "/hwzoy87e70p8uteyeold640mo33aihxe4rb7ubzcp5t3nbkv0fwm1hw8n8xovy6rpr68f3kh6oi/ht5y6fdvl3ojyyt8tarl4gb1svbo1z3ianrp3r7ypi7v7yi4klloq2ir35sjvce3gxbkhdgnnu9wf94b6ikwvxydpvhol2fm76xb2lwzrmvqa3tmjsj7sk7wsjgs15yhrbzipkzplrddzku8",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"AcceptRanges\" : \"bytes\",\n  \"ContentLength\" : \"3191\",\n  \"ContentType\" : \"image/jpeg\",\n  \"ETag\" : \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\",\n  \"LastModified\" : \"Thu, 15 Dec 2016 01:19:41 GMT\",\n  \"Metadata\" : { },\n  \"TagCount\" : 2,\n  \"VersionId\" : \"null\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "87a0b6ff-54bf-4aba-827d-9dc164962a53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.514015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetObject",
          "schema" : {
            "type" : "object",
            "example" : {
              "AcceptRanges" : "bytes",
              "ContentLength" : "3191",
              "ContentType" : "image/jpeg",
              "ETag" : "\"6805f2cfc46c0f04559748bb039d69ae\"",
              "LastModified" : "Thu, 15 Dec 2016 01:19:41 GMT",
              "Metadata" : { },
              "TagCount" : 2,
              "VersionId" : "null"
            },
            "properties" : {
              "Body" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Body"
                }, {
                  "description" : "Object data."
                } ]
              },
              "Metadata" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Metadata"
                }, {
                  "xml" : {
                    "name" : "x-amz-meta-"
                  },
                  "description" : "A map of metadata to store with the object in S3."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "104fe391-5999-4983-97d2-b9bebdc3b4cb",
    "name" : "<p>Removes the null version (if there is one) of an object and inserts a delete ...",
    "request" : {
      "urlPath" : "/cp2qw4y60mrt66zcrbo0gvk75eaq/797hqt2a9729bx1feixy1rj548wzrpi99o",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "104fe391-5999-4983-97d2-b9bebdc3b4cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteObject",
          "schema" : {
            "type" : "object",
            "example" : { }
          }
        }
      }
    }
  }, {
    "id" : "02d86df1-9418-4a75-a3e5-a2c412ca1b48",
    "name" : "<p>Sets the configuration of the website that is specified in the <code>website<... - 200",
    "request" : {
      "urlPath" : "/2zgoj1lm6vuz2u4dttukstj7pgciwkkzmcuw9fbld566d65v1qivr32w6#website",
      "method" : "PUT",
      "queryParameters" : {
        "website" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "02d86df1-9418-4a75-a3e5-a2c412ca1b48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketWebsite"
        }
      }
    }
  }, {
    "id" : "4317a29c-20c5-4766-8953-be3d8420604e",
    "name" : "<p>Returns the website configuration for a bucket. To host website on Amazon S3,...",
    "request" : {
      "urlPath" : "/ydkxx2jhtqy20p86u3bz2zqan9ntkeynoxqa27o9k8z4vkbkj0esxqttjx3zgqlpykmoc22h8n2vt5vg6y57c860r#website",
      "method" : "GET",
      "queryParameters" : {
        "website" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ErrorDocument\" : {\n    \"Key\" : \"error.html\"\n  },\n  \"IndexDocument\" : {\n    \"Suffix\" : \"index.html\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "4317a29c-20c5-4766-8953-be3d8420604e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketWebsite",
          "schema" : {
            "type" : "object",
            "example" : {
              "ErrorDocument" : {
                "Key" : "error.html"
              },
              "IndexDocument" : {
                "Suffix" : "index.html"
              }
            },
            "properties" : {
              "RedirectAllRequestsTo" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RedirectAllRequestsTo"
                }, {
                  "description" : "Specifies the redirect behavior of all requests to a website endpoint of an Amazon S3 bucket."
                } ]
              },
              "IndexDocument" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IndexDocument"
                }, {
                  "description" : "The name of the index document for the website (for example <code>index.html</code>)."
                } ]
              },
              "ErrorDocument" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ErrorDocument"
                }, {
                  "description" : "The object key name of the website error document to use for 4XX class errors."
                } ]
              },
              "RoutingRules" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RoutingRules"
                }, {
                  "description" : "Rules that define when a redirect is applied and the redirect behavior."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c63061ac-e4d4-4c69-999f-e4f32b771659",
    "name" : "<p>This action removes the website configuration for a bucket. Amazon S3 returns... - 204",
    "request" : {
      "urlPath" : "/cca7sf1kqqibc9hw79fwf7bpw6fw3zaypj5hllsicts#website",
      "method" : "DELETE",
      "queryParameters" : {
        "website" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "c63061ac-e4d4-4c69-999f-e4f32b771659",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketWebsite"
        }
      }
    }
  }, {
    "id" : "71ee26a2-3daf-4b2c-afcf-c62553af1cde",
    "name" : "<p>Sets the tags for a bucket.</p> <p>Use tags to organize your Amazon Web Servi... - 200",
    "request" : {
      "urlPath" : "/s5smrquwhgyujbukltaws9qv3hfsnn3magojkwxzlzenq11smaqod5jciy1hlzk0wop4yn6qr3u1lmteeugf745bbjyhtxm27t#tagging",
      "method" : "PUT",
      "queryParameters" : {
        "tagging" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "71ee26a2-3daf-4b2c-afcf-c62553af1cde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketTagging"
        }
      }
    }
  }, {
    "id" : "05417d35-1541-43be-b9d8-d2fa87493e4a",
    "name" : "<p>Returns the tag set associated with the bucket.</p> <p>To use this operation,...",
    "request" : {
      "urlPath" : "/be1bqrrye905zztsivk40395v1letkj6k1vf60x7lnqvyqp1wh#tagging",
      "method" : "GET",
      "queryParameters" : {
        "tagging" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TagSet\" : [ {\n    \"Key\" : \"key1\",\n    \"Value\" : \"value1\"\n  }, {\n    \"Key\" : \"key2\",\n    \"Value\" : \"value2\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "05417d35-1541-43be-b9d8-d2fa87493e4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketTagging",
          "schema" : {
            "type" : "object",
            "required" : [ "TagSet" ],
            "example" : {
              "TagSet" : [ {
                "Key" : "key1",
                "Value" : "value1"
              }, {
                "Key" : "key2",
                "Value" : "value2"
              } ]
            },
            "properties" : {
              "TagSet" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagSet"
                }, {
                  "description" : "Contains the tag set."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "7918aca4-b1ff-4b85-b3b0-e8aa25232fa9",
    "name" : "<p>Deletes the tags from the bucket.</p> <p>To use this operation, you must have... - 204",
    "request" : {
      "urlPath" : "/5k17rsskkl0m0otn7uuz4hiw9tye642xuwa0an0ollv6lbcevbtl9h3ul5ctjq2o2fcsflm0uipputanbm3r4pk2vnjlytb7w6fp8c#tagging",
      "method" : "DELETE",
      "queryParameters" : {
        "tagging" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "7918aca4-b1ff-4b85-b3b0-e8aa25232fa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513536Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketTagging"
        }
      }
    }
  }, {
    "id" : "08936ae5-76fa-429f-b08a-d9f934124e8b",
    "name" : "<p> Creates a replication configuration or replaces an existing one. For more in... - 200",
    "request" : {
      "urlPath" : "/mltywr5sggrcjls9qzxe4pm36cjbh1v8suqit3b7uh7v5agob32xie3dsi07k13loe8u66gcdp5eje938zx2eybjwirniyvzr9q4mujzvqjuqtg91i643b50ypdkucud8b4nxghwd#replication",
      "method" : "PUT",
      "queryParameters" : {
        "replication" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "08936ae5-76fa-429f-b08a-d9f934124e8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketReplication"
        }
      }
    }
  }, {
    "id" : "d3cfc936-6212-4f81-a4be-3708a07aa9a9",
    "name" : "<p>Returns the replication configuration of a bucket.</p> <note> <p> It can take...",
    "request" : {
      "urlPath" : "/aakgv6i8tkuduo7ocj2mv7kyl30sp9b9gu1d0empyxi3mmknji1c69pf0yror49gldkc169cs6uuvqcyj#replication",
      "method" : "GET",
      "queryParameters" : {
        "replication" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplicationConfiguration\" : {\n    \"Role\" : \"arn:aws:iam::acct-id:role/example-role\",\n    \"Rules\" : [ {\n      \"Destination\" : {\n        \"Bucket\" : \"arn:aws:s3:::destination-bucket\"\n      },\n      \"ID\" : \"MWIwNTkwZmItMTE3MS00ZTc3LWJkZDEtNzRmODQwYzc1OTQy\",\n      \"Prefix\" : \"Tax\",\n      \"Status\" : \"Enabled\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "d3cfc936-6212-4f81-a4be-3708a07aa9a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketReplication",
          "schema" : {
            "type" : "object",
            "example" : {
              "ReplicationConfiguration" : {
                "Role" : "arn:aws:iam::acct-id:role/example-role",
                "Rules" : [ {
                  "Destination" : {
                    "Bucket" : "arn:aws:s3:::destination-bucket"
                  },
                  "ID" : "MWIwNTkwZmItMTE3MS00ZTc3LWJkZDEtNzRmODQwYzc1OTQy",
                  "Prefix" : "Tax",
                  "Status" : "Enabled"
                } ]
              }
            },
            "properties" : {
              "ReplicationConfiguration" : {
                "$ref" : "#/components/schemas/ReplicationConfiguration"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "639ce3af-8eb0-4c36-a051-4fece71e0409",
    "name" : "<p> Deletes the replication configuration from the bucket.</p> <p>To use this op... - 204",
    "request" : {
      "urlPath" : "/hp0xicn2bl74kmp222ksje0dxa0iebf32m1s8ilqwjbk2v01omfrar7yvprgdobtmuw49qfd8wq1wh38ryj5b2wxreo1nd9a1sxhzqjv9plw66t7snbdtk8wxgenj6w9jopmv3h9xxjo6g3e5onw1xu0qztni36uhn#replication",
      "method" : "DELETE",
      "queryParameters" : {
        "replication" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "639ce3af-8eb0-4c36-a051-4fece71e0409",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketReplication"
        }
      }
    }
  }, {
    "id" : "bc6aa30e-39ef-4531-a59f-e0d873f59ef2",
    "name" : "<p>Applies an Amazon S3 bucket policy to an Amazon S3 bucket. If you are using a... - 200",
    "request" : {
      "urlPath" : "/me9mff51pnvb83ujae393f48r0g77x5los70ochrb0mgcwnhmwkqme4haypvy1pavycpu2ffo0vw5o3ixoysjs9ux0hsteu9je55wqc6jlr0bjuockivy6i8t3cr7sgjxf5b532d0h9bl10yak89js3whihgszwexehvjvjqkc3upxtsg63l6qpg95h276g#policy",
      "method" : "PUT",
      "queryParameters" : {
        "policy" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bc6aa30e-39ef-4531-a59f-e0d873f59ef2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513343Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketPolicy"
        }
      }
    }
  }, {
    "id" : "0c59ed18-6062-4f5a-9fec-78e13bd59bb3",
    "name" : "<p>Returns the policy of a specified bucket. If you are using an identity other ...",
    "request" : {
      "urlPath" : "/ucjqw2sjtwtcpkacsba2tc3wvfr8r1ymlr2sw24pthguempgsw2wvb9wom3666hwwv9aus16b8hdkwc6r9igbyx50330jg67x9byh9tjnvt72phriyy9tt359c3r896j6qdc74lz50b3l52v4jo0cpuhqz8if6ust8pe8ld#policy",
      "method" : "GET",
      "queryParameters" : {
        "policy" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Policy\" : \"{\\\"Version\\\":\\\"2008-10-17\\\",\\\"Id\\\":\\\"LogPolicy\\\",\\\"Statement\\\":[{\\\"Sid\\\":\\\"Enables the log delivery group to publish logs to your bucket \\\",\\\"Effect\\\":\\\"Allow\\\",\\\"Principal\\\":{\\\"AWS\\\":\\\"111122223333\\\"},\\\"Action\\\":[\\\"s3:GetBucketAcl\\\",\\\"s3:GetObjectAcl\\\",\\\"s3:PutObject\\\"],\\\"Resource\\\":[\\\"arn:aws:s3:::policytest1/*\\\",\\\"arn:aws:s3:::policytest1\\\"]}]}\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "0c59ed18-6062-4f5a-9fec-78e13bd59bb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.5133Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketPolicy",
          "schema" : {
            "type" : "object",
            "example" : {
              "Policy" : "{\"Version\":\"2008-10-17\",\"Id\":\"LogPolicy\",\"Statement\":[{\"Sid\":\"Enables the log delivery group to publish logs to your bucket \",\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"111122223333\"},\"Action\":[\"s3:GetBucketAcl\",\"s3:GetObjectAcl\",\"s3:PutObject\"],\"Resource\":[\"arn:aws:s3:::policytest1/*\",\"arn:aws:s3:::policytest1\"]}]}"
            },
            "properties" : {
              "Policy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Policy"
                }, {
                  "description" : "The bucket policy as a JSON document."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a76eab56-fb80-48af-b21d-c10a42fc9d40",
    "name" : "<p>This implementation of the DELETE action uses the policy subresource to delet... - 204",
    "request" : {
      "urlPath" : "/75m5jgst4ied5u4gb2tlaqtbc2fczpg8lawkat8hhyun#policy",
      "method" : "DELETE",
      "queryParameters" : {
        "policy" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a76eab56-fb80-48af-b21d-c10a42fc9d40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketPolicy"
        }
      }
    }
  }, {
    "id" : "f4847211-5e80-4dfc-b06d-0c60fbed3af5",
    "name" : "<p>Creates or modifies <code>OwnershipControls</code> for an Amazon S3 bucket. T... - 200",
    "request" : {
      "urlPath" : "/c81ir7ljwqx5e8sfikn783z79r#ownershipControls",
      "method" : "PUT",
      "queryParameters" : {
        "ownershipControls" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f4847211-5e80-4dfc-b06d-0c60fbed3af5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketOwnershipControls"
        }
      }
    }
  }, {
    "id" : "eb0b99aa-dd1c-4629-ac19-d28a9988aa5e",
    "name" : "<p>Retrieves <code>OwnershipControls</code> for an Amazon S3 bucket. To use this...",
    "request" : {
      "urlPath" : "/6muqjrw2yu26q3miuho5kea7bionntdzjrm6tuxsi7rhm2k7j8ziry88j0x2zkp6xau59lr9zoygb2vlzbcd#ownershipControls",
      "method" : "GET",
      "queryParameters" : {
        "ownershipControls" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"OwnershipControls\" : {\n    \"Rules\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "eb0b99aa-dd1c-4629-ac19-d28a9988aa5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketOwnershipControls",
          "schema" : {
            "type" : "object",
            "properties" : {
              "OwnershipControls" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OwnershipControls"
                }, {
                  "description" : "The <code>OwnershipControls</code> (BucketOwnerEnforced, BucketOwnerPreferred, or ObjectWriter) currently in effect for this Amazon S3 bucket."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d037b370-03b9-4d66-a67e-31735fc3a73d",
    "name" : "<p>Removes <code>OwnershipControls</code> for an Amazon S3 bucket. To use this o... - 204",
    "request" : {
      "urlPath" : "/srj2qmuay1bgw6gc5aoff9mgwsroervnkaq6pdkegdw33znaco3hxjv0jdfhwvkhezrn4ahmcewfj#ownershipControls",
      "method" : "DELETE",
      "queryParameters" : {
        "ownershipControls" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d037b370-03b9-4d66-a67e-31735fc3a73d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.51306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketOwnershipControls"
        }
      }
    }
  }, {
    "id" : "de2f61c2-1538-4f8c-acf0-e4c18594bb1e",
    "name" : "<p>Sets a metrics configuration (specified by the metrics configuration ID) for ... - 200",
    "request" : {
      "urlPath" : "/5sofwnqs8aytqwzppt653z5ofvooeykm5ply3fkew5yhhypobqh34qtz5l04yhzbqa3qvkcijcszjoeitgihnqn5j78ldrsjqag3f9j4y9mft8zrr81ilgtfej6pgxahrvq14ednvuyottr2xyuu2d7gy6cpqmmf7b7jtvyjvrv46vwzzqpdkov5z7ti0fv5#metrics&id",
      "method" : "PUT",
      "queryParameters" : {
        "id" : {
          "equalTo" : "yvfm"
        },
        "metrics" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "de2f61c2-1538-4f8c-acf0-e4c18594bb1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.513019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketMetricsConfiguration"
        }
      }
    }
  }, {
    "id" : "f3964e96-afa3-44e9-b1da-fdc43d84295d",
    "name" : "<p>Gets a metrics configuration (specified by the metrics configuration ID) from...",
    "request" : {
      "urlPath" : "/kvzlh7b3y6xyh0y3r1a6wfbs3yfa48fchqf09i1mq9dprtvciwjqv1r#metrics&id",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "e1w1"
        },
        "metrics" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"MetricsConfiguration\" : {\n    \"Filter\" : {\n      \"AccessPointArn\" : { },\n      \"And\" : {\n        \"AccessPointArn\" : { },\n        \"Prefix\" : { },\n        \"Tags\" : { }\n      },\n      \"Prefix\" : { },\n      \"Tag\" : {\n        \"Value\" : { },\n        \"Key\" : { }\n      }\n    },\n    \"Id\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f3964e96-afa3-44e9-b1da-fdc43d84295d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.512905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketMetricsConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "MetricsConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MetricsConfiguration"
                }, {
                  "description" : "Specifies the metrics configuration."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5268f139-9ad0-46ce-8db7-6df7556c3aba",
    "name" : "<p>Deletes a metrics configuration for the Amazon CloudWatch request metrics (sp... - 204",
    "request" : {
      "urlPath" : "/c5psr8fbnkmt8mzf4sydheqpxj2ldux82g7lsnpt0uo3e8xi97g8z0j3oh2gugljz0amg2xr6p29br3fqgr35mbalq39s5qmeffxlrvl8lhra8z1p7okqx44cmct2mbg#metrics&id",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "p7y5"
        },
        "metrics" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "5268f139-9ad0-46ce-8db7-6df7556c3aba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.512714Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketMetricsConfiguration"
        }
      }
    }
  }, {
    "id" : "7ad555fe-a080-4bac-a5d2-7e463c6433e3",
    "name" : "<p>Creates a new lifecycle configuration for the bucket or replaces an existing ... - 200",
    "request" : {
      "urlPath" : "/bjrxelki6s04vsxlfl8gtgqc5ctuiv8zvz3kna7jft0hn27ti5a4itkt04j509fza7hdxz9vpjpy81o6p3i9vk6yd4jyv2be8k3q918zjees#lifecycle",
      "method" : "PUT",
      "queryParameters" : {
        "lifecycle" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7ad555fe-a080-4bac-a5d2-7e463c6433e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.5126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketLifecycleConfiguration"
        }
      }
    }
  }, {
    "id" : "8ea776ce-ba47-4e8f-b8f0-460a15f0c510",
    "name" : "<note> <p>Bucket lifecycle configuration now supports specifying a lifecycle rul...",
    "request" : {
      "urlPath" : "/gv8k17pgspr76vc73j7abitjxl6m6prhjpcmk3w79sdu7r5lwg65pi2w15w4qqbc7r92pbvfo488zqtm9b1wey5882lk3dn45hqawi44uxoqmqi8clt9f4o30te9syrfzvf8sv9714qkr9mlvp0t8alyk8i8itb6bao0m8vqys99bo#lifecycle",
      "method" : "GET",
      "queryParameters" : {
        "lifecycle" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Rules\" : [ {\n    \"ID\" : \"Rule for TaxDocs/\",\n    \"Prefix\" : \"TaxDocs\",\n    \"Status\" : \"Enabled\",\n    \"Transitions\" : [ {\n      \"Days\" : 365,\n      \"StorageClass\" : \"STANDARD_IA\"\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "8ea776ce-ba47-4e8f-b8f0-460a15f0c510",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.512554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketLifecycleConfiguration",
          "schema" : {
            "type" : "object",
            "example" : {
              "Rules" : [ {
                "ID" : "Rule for TaxDocs/",
                "Prefix" : "TaxDocs",
                "Status" : "Enabled",
                "Transitions" : [ {
                  "Days" : 365,
                  "StorageClass" : "STANDARD_IA"
                } ]
              } ]
            },
            "properties" : {
              "Rules" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LifecycleRules"
                }, {
                  "xml" : {
                    "name" : "Rule"
                  },
                  "description" : "Container for a lifecycle rule."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "826e45a1-3da1-4cd7-953a-02882c2ccd5c",
    "name" : "<p>Deletes the lifecycle configuration from the specified bucket. Amazon S3 remo... - 204",
    "request" : {
      "urlPath" : "/avnvh5cz4ewpc2o3hk23dmwjd22s6jy9vbetham1bzs5pm2v55zljg3gyde9m2vww6a98n3z78povk8j8zzotlvynq5sd0za94zg3cfj9i9v0ymf6jakws9ez2xsmgplcul1gd37lpiyuudfa8ko9ssj7ctvx8yr3wjmpy26ao5h#lifecycle",
      "method" : "DELETE",
      "queryParameters" : {
        "lifecycle" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "826e45a1-3da1-4cd7-953a-02882c2ccd5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.512473Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketLifecycle"
        }
      }
    }
  }, {
    "id" : "9f54b795-9d3e-43e1-8658-c2e1348b0ce0",
    "name" : "<p>This implementation of the <code>PUT</code> action adds an inventory configur... - 200",
    "request" : {
      "urlPath" : "/fhr9cbmrqkf8vwzd5cxch3wlm9ak900av4p04o44j32wyu0eyz9ugikefsqn2lfq9kkekvgych30bn5fz2c6vyut5llhgk4m6bzo2dk89m6kmgnuc9xbcbpf5ggphhfwpdvykq3ila2h32x1ylxmo91quj3gmj1u2k0rfxhgwusn1qiq8dj#inventory&id",
      "method" : "PUT",
      "queryParameters" : {
        "id" : {
          "equalTo" : "l3ga"
        },
        "inventory" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9f54b795-9d3e-43e1-8658-c2e1348b0ce0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.512425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketInventoryConfiguration"
        }
      }
    }
  }, {
    "id" : "e8b4437a-8562-4e49-bde7-4cee6bc1b705",
    "name" : "<p>Returns an inventory configuration (identified by the inventory configuration...",
    "request" : {
      "urlPath" : "/5lasyvqazo5c2bp4lp7ip7bnx2q1luahh06d7xwy1dc1odw679q1kprj4vkai7629vd3h#inventory&id",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "zkgc"
        },
        "inventory" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"InventoryConfiguration\" : {\n    \"Destination\" : {\n      \"S3BucketDestination\" : {\n        \"AccountId\" : { },\n        \"Format\" : { },\n        \"Bucket\" : { },\n        \"Prefix\" : { },\n        \"Encryption\" : {\n          \"SSEKMS\" : {\n            \"KeyId\" : { }\n          },\n          \"SSES3\" : { }\n        }\n      }\n    },\n    \"OptionalFields\" : { },\n    \"IsEnabled\" : { },\n    \"Filter\" : {\n      \"Prefix\" : { }\n    },\n    \"IncludedObjectVersions\" : { },\n    \"Schedule\" : {\n      \"Frequency\" : { }\n    },\n    \"Id\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "e8b4437a-8562-4e49-bde7-4cee6bc1b705",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.51231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketInventoryConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "InventoryConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InventoryConfiguration"
                }, {
                  "description" : "Specifies the inventory configuration."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b8169393-7667-498d-b200-0737eb4f1bd6",
    "name" : "<p>Deletes an inventory configuration (identified by the inventory ID) from the ... - 204",
    "request" : {
      "urlPath" : "/ubp#inventory&id",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "zwc5"
        },
        "inventory" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "b8169393-7667-498d-b200-0737eb4f1bd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.512083Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketInventoryConfiguration"
        }
      }
    }
  }, {
    "id" : "051e9cf5-29f3-4468-85f0-e00d73beef0c",
    "name" : "<p>Puts a S3 Intelligent-Tiering configuration to the specified bucket. You can ... - 200",
    "request" : {
      "urlPath" : "/2798fgs0twkodwvgcuo75g2tkj4ee4s689axyxk2n5krmy2b7kwon6dam9ii4skw3c3rglea9hdgqsoxhvr51pwrek72b1t3knfa4jrofcngya6rk2jh74rgolzr8d882wsgu1mpbbuawwqwgh9xepzltwi4um0ebn1z6m48nm2kub#intelligent-tiering&id",
      "method" : "PUT",
      "queryParameters" : {
        "id" : {
          "equalTo" : "8440"
        },
        "intelligent-tiering" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "051e9cf5-29f3-4468-85f0-e00d73beef0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketIntelligentTieringConfiguration"
        }
      }
    }
  }, {
    "id" : "71cf0c27-5300-446a-9cd2-dc0bf45c3d00",
    "name" : "<p>Gets the S3 Intelligent-Tiering configuration from the specified bucket.</p> ...",
    "request" : {
      "urlPath" : "/7nrn78y2hcbp45etmvlg0qhfb9xq3vt0rh8b8ebw74mcbo2qf9ecyuamghe2llgea8m576zcl5kiseaelmjp7m2dkdxjav6y4zad73e7js3z3dqyc9a9fh7ot0fpldurcrqbh9dk8htrhfny0b42vv9ww8dorgtigw0q0csc6452mg1hssiy2cl8dvsk3rzifauc0hvq#intelligent-tiering&id",
      "method" : "GET",
      "queryParameters" : {
        "id" : {
          "equalTo" : "j2be"
        },
        "intelligent-tiering" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"IntelligentTieringConfiguration\" : {\n    \"Status\" : { },\n    \"Tierings\" : { },\n    \"Filter\" : {\n      \"And\" : {\n        \"Prefix\" : { },\n        \"Tags\" : { }\n      },\n      \"Prefix\" : { },\n      \"Tag\" : {\n        \"Value\" : { },\n        \"Key\" : { }\n      }\n    },\n    \"Id\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "71cf0c27-5300-446a-9cd2-dc0bf45c3d00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketIntelligentTieringConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "IntelligentTieringConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntelligentTieringConfiguration"
                }, {
                  "description" : "Container for S3 Intelligent-Tiering configuration."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e4169802-5026-4526-b1fe-2b0784a81760",
    "name" : "<p>Deletes the S3 Intelligent-Tiering configuration from the specified bucket.</... - 204",
    "request" : {
      "urlPath" : "/xaweme#intelligent-tiering&id",
      "method" : "DELETE",
      "queryParameters" : {
        "id" : {
          "equalTo" : "mzwv"
        },
        "intelligent-tiering" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e4169802-5026-4526-b1fe-2b0784a81760",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketIntelligentTieringConfiguration"
        }
      }
    }
  }, {
    "id" : "f3e5ce46-63e0-4b34-be03-38c8044e2606",
    "name" : "<p>This action uses the <code>encryption</code> subresource to configure default... - 200",
    "request" : {
      "urlPath" : "/0srsouniv2sy90a4i64erzfz4m98ofc89aaj77hnrn3yl10g7jzqhswpvmphmtstvuoo126z27zp91587fdtl59ge2y76r01n7pfz68575kc74iwza8qvamk2jzvmbhn45id1d17ax5#encryption",
      "method" : "PUT",
      "queryParameters" : {
        "encryption" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f3e5ce46-63e0-4b34-be03-38c8044e2606",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketEncryption"
        }
      }
    }
  }, {
    "id" : "a8c68071-51c1-48b3-8c76-fd774bba9ac6",
    "name" : "<p>Returns the default encryption configuration for an Amazon S3 bucket. If the ...",
    "request" : {
      "urlPath" : "/esihwz0lltp966gfsae32z5dj5vz12yd43xeyfok7jrz1vhr2tg5nk895wcxzh6xuqz6y9otes4zseqf2tvpkkl93ujnv6cqqcsr4xuhovl7x56j322609md2u77fvtcg6bfsjork2pl9jzye2ma0t1ytp1ifqngq093djgs3qpfz#encryption",
      "method" : "GET",
      "queryParameters" : {
        "encryption" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ServerSideEncryptionConfiguration\" : {\n    \"Rules\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "a8c68071-51c1-48b3-8c76-fd774bba9ac6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketEncryption",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ServerSideEncryptionConfiguration" : {
                "$ref" : "#/components/schemas/ServerSideEncryptionConfiguration"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4af4a0b9-32ae-42f6-b013-2944ed1e8d77",
    "name" : "<p>This implementation of the DELETE action removes default encryption from the ... - 204",
    "request" : {
      "urlPath" : "/zed8y36kyh2bvoabin4vdmnufa335rbkiw1ybplbs1mnyof5ej1a3824oh6wxkiew1ozb7p5mdqjv1drfh7tfn0rb7z34q5ikktlx8aem2xym7plvs8omv9#encryption",
      "method" : "DELETE",
      "queryParameters" : {
        "encryption" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "4af4a0b9-32ae-42f6-b013-2944ed1e8d77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketEncryption"
        }
      }
    }
  }, {
    "id" : "419d7d66-4415-48ee-8695-7dead6b619e4",
    "name" : "<p>Sets the <code>cors</code> configuration for your bucket. If the configuratio... - 200",
    "request" : {
      "urlPath" : "/ejog23wwjnkbdvbgbqcgiz5ar3jt0lhwrgrvsyuw7q957omu5q4ncj53ps5wrui3a3d56rajg6b7do9fao9cnupdf5d5hdfwfr79gpz5cp6k4brhr70whpu81330mxi7o4w3a5wzmb2lscr3vk12knrx0h5wq92ks7xs47#cors",
      "method" : "PUT",
      "queryParameters" : {
        "cors" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "419d7d66-4415-48ee-8695-7dead6b619e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511406Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketCors"
        }
      }
    }
  }, {
    "id" : "68cbbb86-a52b-4a55-81b3-176972a16f03",
    "name" : "<p>Returns the Cross-Origin Resource Sharing (CORS) configuration information se...",
    "request" : {
      "urlPath" : "/m9r14wb751udx04643u9a7b7v3kgu52085wxbvdfxxn00zm5n0s5eixpplvhnpg7ijxiinrmif5bsvgsto4rur0ae1ug8lszh72yzftop118y8ceqpuf8zahjhvngtdwkgqr4zoo9ht5f62o9xu52t6kjrr5ds#cors",
      "method" : "GET",
      "queryParameters" : {
        "cors" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CORSRules\" : [ {\n    \"AllowedHeaders\" : [ \"Authorization\" ],\n    \"AllowedMethods\" : [ \"GET\" ],\n    \"AllowedOrigins\" : [ \"*\" ],\n    \"MaxAgeSeconds\" : 3000\n  } ]\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "68cbbb86-a52b-4a55-81b3-176972a16f03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketCors",
          "schema" : {
            "type" : "object",
            "example" : {
              "CORSRules" : [ {
                "AllowedHeaders" : [ "Authorization" ],
                "AllowedMethods" : [ "GET" ],
                "AllowedOrigins" : [ "*" ],
                "MaxAgeSeconds" : 3000
              } ]
            },
            "properties" : {
              "CORSRules" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CORSRules"
                }, {
                  "xml" : {
                    "name" : "CORSRule"
                  },
                  "description" : "A set of origins and methods (cross-origin access that you want to allow). You can add up to 100 rules to the configuration."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e46fab08-8c6b-470f-a91b-fcbd77cb0f45",
    "name" : "<p>Deletes the <code>cors</code> configuration information set for the bucket.</... - 204",
    "request" : {
      "urlPath" : "/3ss3f27f8kz1x4lusqqxb63kznmjsjuornfedn54bflyn1wlbcnwxqyb31clwwwbps0e7#cors",
      "method" : "DELETE",
      "queryParameters" : {
        "cors" : {
          "equalTo" : "true"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "e46fab08-8c6b-470f-a91b-fcbd77cb0f45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketCors"
        }
      }
    }
  }, {
    "id" : "83a538f1-133b-4023-947f-4c6255e2f331",
    "name" : "<p>Sets an analytics configuration for the bucket (specified by the analytics co... - 200",
    "request" : {
      "urlPath" : "/8djh34gcdnid7fir1kpshi5dq9xrtfnj3l3pjqnog#analytics&id",
      "method" : "PUT",
      "queryParameters" : {
        "analytics" : {
          "equalTo" : "true"
        },
        "id" : {
          "equalTo" : "2aj1"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "83a538f1-133b-4023-947f-4c6255e2f331",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PutBucketAnalyticsConfiguration"
        }
      }
    }
  }, {
    "id" : "bd0f42ec-1c3f-4d3f-8852-7278515ae81c",
    "name" : "<p>This implementation of the GET action returns an analytics configuration (ide...",
    "request" : {
      "urlPath" : "/3ec088fjzuc63goeix8hl0kzxsrc1xq48bt06xwgcbni59mevogne6jzm2ucs2hf7impo2dcy8z31nwf4crv6jrwqyv6uukmm3bev36ae3rdbzkf33b61aip628spa2giy8m3x4fjuhsj093wmlikovru0bhvmjfyjojkchryb7o9eorkudtt47pdutuusgg6txh6e4#analytics&id",
      "method" : "GET",
      "queryParameters" : {
        "analytics" : {
          "equalTo" : "true"
        },
        "id" : {
          "equalTo" : "sid7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"AnalyticsConfiguration\" : {\n    \"StorageClassAnalysis\" : {\n      \"DataExport\" : {\n        \"Destination\" : {\n          \"S3BucketDestination\" : {\n            \"Format\" : { },\n            \"Bucket\" : { },\n            \"BucketAccountId\" : { },\n            \"Prefix\" : { }\n          }\n        },\n        \"OutputSchemaVersion\" : { }\n      }\n    },\n    \"Filter\" : {\n      \"And\" : {\n        \"Prefix\" : { },\n        \"Tags\" : { }\n      },\n      \"Prefix\" : { },\n      \"Tag\" : {\n        \"Value\" : { },\n        \"Key\" : { }\n      }\n    },\n    \"Id\" : { }\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "bd0f42ec-1c3f-4d3f-8852-7278515ae81c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.511115Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetBucketAnalyticsConfiguration",
          "schema" : {
            "type" : "object",
            "properties" : {
              "AnalyticsConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AnalyticsConfiguration"
                }, {
                  "description" : "The configuration and any analyses for the analytics filter."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3a8997d7-4022-4af3-a2b1-0cdcdfd50ff6",
    "name" : "<p>Deletes an analytics configuration for the bucket (specified by the analytics... - 204",
    "request" : {
      "urlPath" : "/vglv69w3dp4wl4o74dnuounh3y9vujtnfn7jaq5gkj1c3gbp2s17odfy5ft2x40c888yjchq6nqkx7nan4vltycuzcbvu05psbprsi11q3i2durw5jufdf7#analytics&id",
      "method" : "DELETE",
      "queryParameters" : {
        "analytics" : {
          "equalTo" : "false"
        },
        "id" : {
          "equalTo" : "3279"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3a8997d7-4022-4af3-a2b1-0cdcdfd50ff6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucketAnalyticsConfiguration"
        }
      }
    }
  }, {
    "id" : "567eb462-b72c-407a-9376-6558441b5644",
    "name" : "<p>This action initiates a multipart upload and returns an upload ID. This uploa...",
    "request" : {
      "urlPath" : "/t741vqh894kbqod726jkioqiu972lnmml1jcozve6zybhkmzzo4gcxe9g1t47ww05hazokqwasxh0q2c3warn2t3ei2mwzyuixta0cez7ic73f8bqgh3k2owolk/70tu30v06neemd0b8#uploads",
      "method" : "POST",
      "queryParameters" : {
        "uploads" : {
          "equalTo" : "false"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Bucket\" : \"examplebucket\",\n  \"Key\" : \"largeobject\",\n  \"UploadId\" : \"ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "567eb462-b72c-407a-9376-6558441b5644",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateMultipartUpload",
          "schema" : {
            "type" : "object",
            "example" : {
              "Bucket" : "examplebucket",
              "Key" : "largeobject",
              "UploadId" : "ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--"
            },
            "properties" : {
              "Bucket" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketName"
                }, {
                  "description" : "<p>The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>"
                } ]
              },
              "Key" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectKey"
                }, {
                  "description" : "Object key for which the multipart upload was initiated."
                } ]
              },
              "UploadId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MultipartUploadId"
                }, {
                  "description" : "ID for the initiated multipart upload."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ad7b4a7e-5dd2-4b72-9d8b-57acc670e918",
    "name" : "<p>Returns some or all (up to 1,000) of the objects in a bucket. You can use the...",
    "request" : {
      "urlPath" : "/mmjyl0a9m9je",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "ad7b4a7e-5dd2-4b72-9d8b-57acc670e918",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListObjects"
        }
      }
    }
  }, {
    "id" : "982ec1b7-7a81-4f38-aaa1-d4189773d035",
    "name" : "<p>Returns some or all (up to 1,000) of the objects in a bucket. You can use the...",
    "request" : {
      "urlPath" : "/fe1626odllg6ia5ykm26n5l1kk3rn6bcu1xans351ioj8ad87yh0o3psvb5bbqih67dn4vdm48lb7fdkmgvgis5h7tz7iinal9605mdt2rwgkqc7pcz4jy7y4evj5hq317mjjppdjyo0ui7o3",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Contents\" : [ {\n    \"ETag\" : \"\\\"70ee1738b6b21e2c8a43f3a5ab0eee71\\\"\",\n    \"Key\" : \"example1.jpg\",\n    \"LastModified\" : \"2014-11-21T19:40:05.000Z\",\n    \"Owner\" : {\n      \"DisplayName\" : \"myname\",\n      \"ID\" : \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n    },\n    \"Size\" : 11,\n    \"StorageClass\" : \"STANDARD\"\n  }, {\n    \"ETag\" : \"\\\"9c8af9a76df052144598c115ef33e511\\\"\",\n    \"Key\" : \"example2.jpg\",\n    \"LastModified\" : \"2013-11-15T01:10:49.000Z\",\n    \"Owner\" : {\n      \"DisplayName\" : \"myname\",\n      \"ID\" : \"12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n    },\n    \"Size\" : 713193,\n    \"StorageClass\" : \"STANDARD\"\n  } ],\n  \"NextMarker\" : \"eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "982ec1b7-7a81-4f38-aaa1-d4189773d035",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListObjects",
          "schema" : {
            "type" : "object",
            "example" : {
              "Contents" : [ {
                "ETag" : "\"70ee1738b6b21e2c8a43f3a5ab0eee71\"",
                "Key" : "example1.jpg",
                "LastModified" : "2014-11-21T19:40:05.000Z",
                "Owner" : {
                  "DisplayName" : "myname",
                  "ID" : "12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
                },
                "Size" : 11,
                "StorageClass" : "STANDARD"
              }, {
                "ETag" : "\"9c8af9a76df052144598c115ef33e511\"",
                "Key" : "example2.jpg",
                "LastModified" : "2013-11-15T01:10:49.000Z",
                "Owner" : {
                  "DisplayName" : "myname",
                  "ID" : "12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
                },
                "Size" : 713193,
                "StorageClass" : "STANDARD"
              } ],
              "NextMarker" : "eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ=="
            },
            "properties" : {
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : "A flag that indicates whether Amazon S3 returned all of the results that satisfied the search criteria."
                } ]
              },
              "Marker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Marker"
                }, {
                  "description" : "Indicates where in the bucket listing begins. Marker is included in the response if it was sent with the request."
                } ]
              },
              "NextMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextMarker"
                }, {
                  "description" : "When response is truncated (the IsTruncated element value in the response is true), you can use the key name in this field as marker in the subsequent request to get next set of objects. Amazon S3 lists objects in alphabetical order Note: This element is returned only if you have delimiter request parameter specified. If response does not include the NextMarker and it is truncated, you can use the value of the last Key in the response as the marker in the subsequent request to get the next set of object keys."
                } ]
              },
              "Contents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectList"
                }, {
                  "description" : "Metadata about each object returned."
                } ]
              },
              "Name" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketName"
                }, {
                  "description" : "The bucket name."
                } ]
              },
              "Prefix" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Prefix"
                }, {
                  "description" : "Keys that begin with the indicated prefix."
                } ]
              },
              "Delimiter" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Delimiter"
                }, {
                  "description" : "Causes keys that contain the same string between the prefix and the first occurrence of the delimiter to be rolled up into a single result element in the <code>CommonPrefixes</code> collection. These rolled-up keys are not returned elsewhere in the response. Each rolled-up result counts as only one return against the <code>MaxKeys</code> value."
                } ]
              },
              "MaxKeys" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MaxKeys"
                }, {
                  "description" : "The maximum number of keys returned in the response body."
                } ]
              },
              "CommonPrefixes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CommonPrefixList"
                }, {
                  "description" : "<p>All of the keys (up to 1,000) rolled up in a common prefix count as a single return when calculating the number of returns. </p> <p>A response can contain CommonPrefixes only if you specify a delimiter.</p> <p>CommonPrefixes contains all (if there are any) keys between Prefix and the next occurrence of the string specified by the delimiter.</p> <p> CommonPrefixes lists keys that act like subdirectories in the directory specified by Prefix.</p> <p>For example, if the prefix is notes/ and the delimiter is a slash (/) as in notes/summer/july, the common prefix is notes/summer/. All of the keys that roll up into a common prefix count as a single return when calculating the number of returns.</p>"
                } ]
              },
              "EncodingType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncodingType"
                }, {
                  "description" : "Encoding type used by Amazon S3 to encode object keys in the response."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1c1355fc-d0a1-4cdd-b743-f7401c1f330a",
    "name" : "<p>This action is useful to determine if a bucket exists and you have permission... (text/xml)",
    "request" : {
      "urlPath" : "/gkw9243h8e62u0bdyecx2s7lwg2c4y4oyke74gvvcjp57ol1yw2s1tfm6lz6g2l9ggq4u0jbpx13qojfj8lgnsbi6puv7992ia10wvtp20oemyl428pxjk5ihdz9dl3gb0v7zers8q0ejnf8qmm31a823miihpj3wogi53gtuya59tujc4kv851pf",
      "method" : "HEAD",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "1c1355fc-d0a1-4cdd-b743-f7401c1f330a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HeadBucket"
        }
      }
    }
  }, {
    "id" : "d3eafba5-ee30-434e-b8e5-5caf25cd2ea9",
    "name" : "<p>This action is useful to determine if a bucket exists and you have permission... - 200",
    "request" : {
      "urlPath" : "/val2rjq8nlatn4lip45gbd18ep",
      "method" : "HEAD"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d3eafba5-ee30-434e-b8e5-5caf25cd2ea9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.51032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "HeadBucket"
        }
      }
    }
  }, {
    "id" : "860115b6-d846-4cc2-84b9-ad7663c261e3",
    "name" : "<p>Deletes the S3 bucket. All objects (including all object versions and delete ... - 204",
    "request" : {
      "urlPath" : "/ryv59jtnb",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "860115b6-d846-4cc2-84b9-ad7663c261e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510291Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeleteBucket"
        }
      }
    }
  }, {
    "id" : "fa34c327-3230-422a-b8b0-50cc0eb3646e",
    "name" : "<p>Creates a new S3 bucket. To create a bucket, you must register with Amazon S3...",
    "request" : {
      "urlPath" : "/pip7jwacg2lw6mhwoi63cpsbznhtgsgbly4brk964z5go9c4apystavu3stvxpp95xs85c0t5141t04mkq65d5zxhrnhig17k0phpvz8i3xw4khxdoysim6zux5i5h",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "fa34c327-3230-422a-b8b0-50cc0eb3646e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBucket"
        }
      }
    }
  }, {
    "id" : "b56c8695-b6b5-488e-b64b-2345eaed773d",
    "name" : "<p>Creates a new S3 bucket. To create a bucket, you must register with Amazon S3...",
    "request" : {
      "urlPath" : "/wgc1exqevve7ttv0ulbl6aenidntmrq77xfpdfbd5rwknp8a9c3onoesq01osswdhjzrmynq3sxbvb5d0innklv2o2ct38t5bdckcf6qa4f2mo37c2q6kmihjsrqeilerdq2zcakghrbrfpop2c1sy7w5xm1qvb1u9tnk85thc24m8opfciovt",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "b56c8695-b6b5-488e-b64b-2345eaed773d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBucket"
        }
      }
    }
  }, {
    "id" : "102be2be-9da1-45f2-a716-f9941b7d6ade",
    "name" : "<p>Creates a new S3 bucket. To create a bucket, you must register with Amazon S3...",
    "request" : {
      "urlPath" : "/3ni3k26sczqz3t7ts2a6d84opdbo4zy1ae4mbvpe63tnemts9a1kh4spd1rp1d552ph8o3qzm8bb46275ogkhskzesduaoivnz3yfg6692xo1pgpt0st",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Location\" : \"/examplebucket\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "102be2be-9da1-45f2-a716-f9941b7d6ade",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateBucket",
          "schema" : {
            "type" : "object",
            "example" : {
              "Location" : "/examplebucket"
            }
          }
        }
      }
    }
  }, {
    "id" : "66b7c205-c718-4f83-99a5-96198b285e36",
    "name" : "<p>Creates a copy of an object that is already stored in Amazon S3.</p> <note> <...",
    "request" : {
      "urlPath" : "/tbpnf2zpwfrsn5bhf90urgw1ttwj1q0t1lubj00jvqzyzt1m9x63hbyg5nq3hw2hjd0b8tw9td55mirple/woxb0pe6dg4ynsppagrw7qialmmb1sz#x-amz-copy-source",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "66b7c205-c718-4f83-99a5-96198b285e36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CopyObject"
        }
      }
    }
  }, {
    "id" : "26397c0f-b6ef-4c8d-a7ae-5f41b515da92",
    "name" : "<p>Creates a copy of an object that is already stored in Amazon S3.</p> <note> <...",
    "request" : {
      "urlPath" : "/vcgvqpr5r5ai4ot3bsdvvkk3kqs8vr7pei7j2kcqq0ikrog1xute58zojvtpxz7t5y8zna5ruxpxg0b4ao4x7h2qpowvyxdspenl58jr703dfpdbusofzkdmcm7d0e4xuwk0xx9bjh0bxyi8tovsj5lza338ml9/0z2rtdeh05gewbml7u5g20uzulvcrokbfcjwoav74hp0mf2pqmyitvd82i7a9sisb20hc8o41zqvi8v9z1g73lqie7azs473vnpm6z2kwggwwyi1vck5#x-amz-copy-source",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"CopyObjectResult\" : {\n    \"ETag\" : \"\\\"6805f2cfc46c0f04559748bb039d69ae\\\"\",\n    \"LastModified\" : \"2016-12-15T17:38:53.000Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "26397c0f-b6ef-4c8d-a7ae-5f41b515da92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.510082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CopyObject",
          "schema" : {
            "type" : "object",
            "example" : {
              "CopyObjectResult" : {
                "ETag" : "\"6805f2cfc46c0f04559748bb039d69ae\"",
                "LastModified" : "2016-12-15T17:38:53.000Z"
              }
            },
            "properties" : {
              "CopyObjectResult" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CopyObjectResult"
                }, {
                  "description" : "Container for all response elements."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "aea52fee-158a-470c-b7e7-f89f05e1ac20",
    "name" : "<p>Lists the parts that have been uploaded for a specific multipart upload. This...",
    "request" : {
      "urlPath" : "/zw9jhjki2nqwoieze2vnmkbqdmubru2adn3atmfz5tva5kxgrx0jchp029tmsontbbnv3j2jd344pt6hm7gznzrg22c3ky5i9h6rk7a4u7geoil3k/3ct46lfftxoeatj3wosjuzlduqbo46s6mi5iu9o7qi0x325t48sny2jcittar7dfjoh599scuf1zhtz67dtirwp2fmu92kw4yy6h6dmgdh3nkxg1nshw78t3tqnfnc9mknm6aybk2kb9l6t7vdbliywcrhqegoz4e0#uploadId",
      "method" : "GET",
      "queryParameters" : {
        "uploadId" : {
          "equalTo" : "v23l"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Initiator\" : {\n    \"DisplayName\" : \"owner-display-name\",\n    \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n  },\n  \"Owner\" : {\n    \"DisplayName\" : \"owner-display-name\",\n    \"ID\" : \"examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc\"\n  },\n  \"Parts\" : [ {\n    \"ETag\" : \"\\\"d8c2eafd90c266e19ab9dcacc479f8af\\\"\",\n    \"LastModified\" : \"2016-12-16T00:11:42.000Z\",\n    \"PartNumber\" : \"1\",\n    \"Size\" : 26246026\n  }, {\n    \"ETag\" : \"\\\"d8c2eafd90c266e19ab9dcacc479f8af\\\"\",\n    \"LastModified\" : \"2016-12-16T00:15:01.000Z\",\n    \"PartNumber\" : \"2\",\n    \"Size\" : 26246026\n  } ],\n  \"StorageClass\" : \"STANDARD\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "aea52fee-158a-470c-b7e7-f89f05e1ac20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.509987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ListParts",
          "schema" : {
            "type" : "object",
            "example" : {
              "Initiator" : {
                "DisplayName" : "owner-display-name",
                "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "Owner" : {
                "DisplayName" : "owner-display-name",
                "ID" : "examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc"
              },
              "Parts" : [ {
                "ETag" : "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
                "LastModified" : "2016-12-16T00:11:42.000Z",
                "PartNumber" : "1",
                "Size" : 26246026
              }, {
                "ETag" : "\"d8c2eafd90c266e19ab9dcacc479f8af\"",
                "LastModified" : "2016-12-16T00:15:01.000Z",
                "PartNumber" : "2",
                "Size" : 26246026
              } ],
              "StorageClass" : "STANDARD"
            },
            "properties" : {
              "Bucket" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketName"
                }, {
                  "description" : "The name of the bucket to which the multipart upload was initiated. Does not return the access point ARN or access point alias if used."
                } ]
              },
              "Key" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectKey"
                }, {
                  "description" : "Object key for which the multipart upload was initiated."
                } ]
              },
              "UploadId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MultipartUploadId"
                }, {
                  "description" : "Upload ID identifying the multipart upload whose parts are being listed."
                } ]
              },
              "PartNumberMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PartNumberMarker"
                }, {
                  "description" : "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request."
                } ]
              },
              "NextPartNumberMarker" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextPartNumberMarker"
                }, {
                  "description" : "When a list is truncated, this element specifies the last part in the list, as well as the value to use for the part-number-marker request parameter in a subsequent request."
                } ]
              },
              "MaxParts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MaxParts"
                }, {
                  "description" : "Maximum number of parts that were allowed in the response."
                } ]
              },
              "IsTruncated" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IsTruncated"
                }, {
                  "description" : " Indicates whether the returned list of parts is truncated. A true value indicates that the list was truncated. A list can be truncated if the number of parts exceeds the limit returned in the MaxParts element."
                } ]
              },
              "Parts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Parts"
                }, {
                  "xml" : {
                    "name" : "Part"
                  },
                  "description" : " Container for elements related to a particular part. A response can contain zero or more <code>Part</code> elements."
                } ]
              },
              "Initiator" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Initiator"
                }, {
                  "description" : "Container element that identifies who initiated the multipart upload. If the initiator is an Amazon Web Services account, this element provides the same information as the <code>Owner</code> element. If the initiator is an IAM User, this element provides the user ARN and display name."
                } ]
              },
              "Owner" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Owner"
                }, {
                  "description" : " Container element that identifies the object owner, after the object is created. If multipart upload is initiated by an IAM user, this element provides the parent account ID and display name."
                } ]
              },
              "StorageClass" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/StorageClass"
                }, {
                  "description" : "Class of storage (STANDARD or REDUCED_REDUNDANCY) used to store the uploaded object."
                } ]
              },
              "ChecksumAlgorithm" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChecksumAlgorithm"
                }, {
                  "description" : "The algorithm that was used to create a checksum of the object."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "07146277-6b5b-4ff3-9368-ef2954858bce",
    "name" : "<p>Completes a multipart upload by assembling previously uploaded parts.</p> <p>...",
    "request" : {
      "urlPath" : "/joiaodjmg64v5i8uqh3kkq5klw7pqrss0jtc5ulltkn35xlc8avjvsylne0tz95zdb64b22q/z233xwnn9ovyxcogrui1egkeess70zrh0jcvsmveqni65hkd9yjblcss6ic9zfedwfo0c9cbjxkz4zil4s2f42241ep6v8rxbudd6fg884tyiyg203ymahiwupqfkp8le5rrf197asweva8yentnxz#uploadId",
      "method" : "POST",
      "queryParameters" : {
        "uploadId" : {
          "equalTo" : "v6qo"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Bucket\" : \"acexamplebucket\",\n  \"ETag\" : \"\\\"4d9031c7644d8081c2829f4ea23c55f7-2\\\"\",\n  \"Key\" : \"bigobject\",\n  \"Location\" : \"https://examplebucket.s3.<Region>.amazonaws.com/bigobject\"\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "07146277-6b5b-4ff3-9368-ef2954858bce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.509626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CompleteMultipartUpload",
          "schema" : {
            "type" : "object",
            "example" : {
              "Bucket" : "acexamplebucket",
              "ETag" : "\"4d9031c7644d8081c2829f4ea23c55f7-2\"",
              "Key" : "bigobject",
              "Location" : "https://examplebucket.s3.<Region>.amazonaws.com/bigobject"
            },
            "properties" : {
              "Location" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Location"
                }, {
                  "description" : "The URI that identifies the newly created object."
                } ]
              },
              "Bucket" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BucketName"
                }, {
                  "description" : "<p>The name of the bucket that contains the newly created object. Does not return the access point ARN or access point alias if used.</p> <p>When using this action with an access point, you must direct requests to the access point hostname. The access point hostname takes the form <i>AccessPointName</i>-<i>AccountId</i>.s3-accesspoint.<i>Region</i>.amazonaws.com. When using this action with an access point through the Amazon Web Services SDKs, you provide the access point ARN in place of the bucket name. For more information about access point ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-access-points.html\">Using access points</a> in the <i>Amazon S3 User Guide</i>.</p> <p>When using this action with Amazon S3 on Outposts, you must direct requests to the S3 on Outposts hostname. The S3 on Outposts hostname takes the form <code> <i>AccessPointName</i>-<i>AccountId</i>.<i>outpostID</i>.s3-outposts.<i>Region</i>.amazonaws.com</code>. When using this action with S3 on Outposts through the Amazon Web Services SDKs, you provide the Outposts bucket ARN in place of the bucket name. For more information about S3 on Outposts ARNs, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/S3onOutposts.html\">Using Amazon S3 on Outposts</a> in the <i>Amazon S3 User Guide</i>.</p>"
                } ]
              },
              "Key" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObjectKey"
                }, {
                  "description" : "The object key of the newly created object."
                } ]
              },
              "ETag" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ETag"
                }, {
                  "description" : "Entity tag that identifies the newly created object's data. Objects with different object data will have different entity tags. The entity tag is an opaque string. The entity tag may or may not be an MD5 digest of the object data. If the entity tag is not an MD5 digest of the object data, it will contain one or more nonhexadecimal characters and/or will consist of less than 32 or more than 32 hexadecimal digits. For more information about how the entity tag is calculated, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html\">Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
                } ]
              },
              "ChecksumCRC32" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChecksumCRC32"
                }, {
                  "description" : "The base64-encoded, 32-bit CRC32 checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
                } ]
              },
              "ChecksumCRC32C" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChecksumCRC32C"
                }, {
                  "description" : "The base64-encoded, 32-bit CRC32C checksum of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
                } ]
              },
              "ChecksumSHA1" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChecksumSHA1"
                }, {
                  "description" : "The base64-encoded, 160-bit SHA-1 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
                } ]
              },
              "ChecksumSHA256" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChecksumSHA256"
                }, {
                  "description" : "The base64-encoded, 256-bit SHA-256 digest of the object. This will only be present if it was uploaded with the object. With multipart uploads, this may not be a checksum value of the object. For more information about how checksums are calculated with multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/checking-object-integrity.html#large-object-checksums\"> Checking object integrity</a> in the <i>Amazon S3 User Guide</i>."
                } ]
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "156cd6b6-2c65-44f7-b822-2683f2b7bda8",
    "name" : "<p>This action aborts a multipart upload. After a multipart upload is aborted, n...",
    "request" : {
      "urlPath" : "/11kiekwddhahzy8ksxoibxwvrzgrc41gzhcng0st2398m2ejyp4ul4wvb4bzancylnnrq7e2v/yb0eqnqyknjgvpapqfp0eejn1tbe0jelcagdp4sg78im6vrd555536ghndkq3gohp30x9kcv5cayevfbxedp46o2vyzuaxmq0ef9m5ybrn2n1mtjlfrvnekzx30u2c1byycblgcl1k9e6tx26bl59pvnspvxdvkkyw910als3wob5a8fr7pxrxpq84ck14jq6#uploadId",
      "method" : "DELETE",
      "queryParameters" : {
        "uploadId" : {
          "equalTo" : "5zf7"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "156cd6b6-2c65-44f7-b822-2683f2b7bda8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.509329Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AbortMultipartUpload"
        }
      }
    }
  }, {
    "id" : "343bcecd-d22e-4e9c-b6f1-c8d06593b46d",
    "name" : "<p>This action aborts a multipart upload. After a multipart upload is aborted, n...",
    "request" : {
      "urlPath" : "/7h97oh287juz3xin22x7meacf32qipjx14k5ia2taw4dkdbfznc4760ljv/t2d6id79lkcgauc6#uploadId",
      "method" : "DELETE",
      "queryParameters" : {
        "uploadId" : {
          "equalTo" : "30az"
        }
      }
    },
    "response" : {
      "status" : 204,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "343bcecd-d22e-4e9c-b6f1-c8d06593b46d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:07.509165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "AbortMultipartUpload",
          "schema" : {
            "type" : "object",
            "example" : { }
          }
        }
      }
    }
  } ]
}