{
  "mappings" : [ {
    "id" : "9cc51784-3c23-4b25-ac79-95e570093a02",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/g25p94mna0twf:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"7uoric5z1nk1xsetg7h861px0tbs8qwfrva746rl7r1ay5l2bhkprm0gz2bdqvvdf0v4lrl5ordtmql98gb3sd1xl5we53drafhqv4jdfjstu9arbha1tlcut3ajqhadtyksswlr93h3skcuuf44e7qp7rsvfymbj9iuu5zqw0\", \"c4txrqeellc2qch2z3iibkfqu5kqut76l93hy1kwzbezogdlbeqfnj3rpt42d2i\", \"d0beony75c26r93bjs7ul8czszlhzts8v09qq1nnu2vebjuczslis8x7opxncbr5b6jszczpu480yemgjh3r73m28wknicwh4jfhtkzzwh1zt3jijif8256we0k16mt\", \"574048fgkzl6s317tf0ktxi9rixo8lfw10wgotz4dux86xkg2jzkbwfeu6t9w3zkg7iok7e3nt54k4a586dvqh58kwy9ahlfb4628x4u9j5qz1ouc7kcu6r3zkldzqws4scgexovjln964unk3rosh7cg\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cc51784-3c23-4b25-ac79-95e570093a02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.004324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.spokes.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "96b5d60a-df9b-4704-a19d-0ae91bd1321c",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/mq015qqsiyru1t6:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"cfj1xh05m0ocxkqorbe66kgsfgqpngsr23jokwbtpnivfsvkp08qugts9u8udzxy2fv5jbitpouut59kmfs2gb61pub8pwloty5\",\n      \"description\" : \"Error eum labore animi odio amet accusamus quidem. Cumque est voluptates. Voluptas quis commodi est hic perspiciatis minus. Dolores ab mollitia. Dolor eligendi id sit.\",\n      \"location\" : \"0z5oypvk5nn209tloznctmf4w17ii56ka7x8sf301q3mropo5vgwrxj6a5l77podnoblzwo9tbuwnqqlz7x8skavtpmzs267rbscjmzo8fdo67yo5qrixqtcm6hjath5to9eoifj4dkqqfhq4puqsd77srlzb8o82q8mvg\",\n      \"title\" : \"Qui ea voluptatem facere qui et voluptatem quod.\"\n    },\n    \"role\" : \"jl87gu9dpxa17ufexb1t613twtxbzl967hkcgak5kjkiv4uva4e1orrqz0bzoei4zhodxwppfpr7ptwcs0tj6sitw6vi4ipaxhzl52o4zhect2k64hx6rgq67cqrqmgmfd5o9ctsm5h6d5j19dbusmpx4pv\",\n    \"members\" : [ \"69qpyl8truv87auqyjzo4mqkbc0ydx2mcnn9p7qlz0y4ax8xhien0rz4ijfe6bi\", \"5bq100n1tfxcrbhr7jjnrskruec3975o8t8b6zen54c448cq0nj6ngv7a72y2fycg8g0qlseduq760rnel3ql832zv1dp1vnw6pwpkjm543cjo9\", \"0b9jf9vbop606xksawlefe81q947y0dxzj7qeay9tvvpfjgp29k1j8l882tfp5jm41jya5v74kt100rj5qxrishh9l\", \"x075877v66rqj9hv3hqk1892lfp8bczlo3470876uuf5fusf88tirzb6todzgnc2catyc5dozc45x9f6gwxfvrm9mvkzsmqwepiaxquikeugw8a\", \"gpnpn02d4fixqcqy1znypkjrpl3mo\", \"h2g4sdhjyhxpkhhvg6qs4ppkto1k41xvkyb9c1tbt9anztxi5xftikb6wr\", \"qe0sexogmyw8km\", \"87mm9cy63nip8j0q9s6vt96c3kn25inonyrj5mmkvxgjniiwkwclt3futdqx724m\" ]\n  } ],\n  \"etag\" : \"culpa\",\n  \"version\" : 915332074,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"uhul0y\", \"i0pa5e3zath23sdwr9kmxdb7cbbb3i3ex9gc56hpdbdod5u1csj4yhimsv8iwbuxdjvygm8que4pjkwmbdu50bvpfu2q0lultwj7\", \"aif\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"o9aq8q6j7qk6e98byrmbhombxgkehny8bh61gijyf69utnhgvkntnfvuwrv1zsvt27antlpvm1nwjjr1mpjpzku62zg7twvfz72mem6j2rl3ftyusd03norfc3p3z4ybrhi9\", \"ojszl0xx7p8kiaxznizarf2ild1klixb49pvx8uqmp6z56s24trj7rrphv7jlkxna08nz1guh7vjwju8k2au11tlyy04n56km94akelf2j2b20amhgkn2te5dxe\", \"ptvflbu1ybu8ffviyakfb2p8e7lg875rtw2sye122khgbnf2qcq4j2p90ju9tpkz7mdqehmoosttjnu36muz4oo\", \"kj4nyh8iz3gq5ibttw0nhmp8dfn1v2n8z9ljj4o3g5iv9ia89ajdhhr07ax4xa9a97n3r90cvtlpm88sjmtxtol70t76dgx0kje0tf2uvk6cy62pzu5ria9hvkc3zmirq7lkmzfcgsclutwdt4n00k59e7ocqge05xsya4noanbe\", \"oxrhlp5rezathz7e05ra9ya6hz611fy3vzekb\", \"r3kr65yzy29pij7zwzkpc9dg99leitobmm5rd1vkmth4lzi0i29559mqpe1z4s4lwp338yt9v56kl28s92o660x8bhozzgfvdr4bdp3pb1k19z6y9e1d53bb2y3dtw238kaq6mlbqonauv7r5oktduz57ec2hdd3jgj8n4szascbzyx4ywdfnh23ezk5v630sft\", \"iiciwl7v6on3pdydu7qxjme7ctxmwv6bayehieyvcbipjbrzz7omdk4h16o9qlcq6812s7xbz07idm2qivh8chitjcrhuiizsg91y4u0yk55lfwr1bw5xs6vcrh1dfwwilo6fyrd9v4g\" ]\n    } ],\n    \"service\" : \"ke109nq74hytkpuuj51uuk78ii3kb69wp17gd04\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"oqr8vjam1xwip68zzpldbv6tttfn2kdjr9ere\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"xy420\", \"ifxybj6bf26c57a7s0ts2k4hki2xo1b7pd6ucz8rsxx3flxssss3pnv7bi7d92w4b5n4jvhgdog149dqgxsqphndqouasqk5mbj910ub0xsrtutjcddmi6hdqr3tshmivzyp1i26uiz4dt25ju7imadgn3x658bnpx0jv8uu6y\", \"xio8xk2gyzznqdgcudqlwzaqeowfewqigxpdflbsckjsa3b57po5w4niaspxld96rmyay3gikbwy8zjxxogkjf6zukmrv53nvtnuy994l9t5k8w5jrbs9h35ex10yw83fa8z03vb0rb52fzcfmefa1q0h87x4v9jnoshympag362u\", \"u4lmj77sps9mkefjjcyhcferkkzpycl2mqedctbw7o8xizqyuen1v8wptau08vrurd07uuo93lkl3bjjfmexhiomq7sp5nguikqriupb23hons1r89rvjos2ngl809kq1s02j84mer0z1c5xzj3gd46i08ykf01rq0eg9tvrg4sd9kvtuitnpw35x32dmuhvfs9\" ]\n    } ],\n    \"service\" : \"zvhsa979zs7unm41\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"uniba75o66e8905dj22dmh4\", \"4b36pysz3mcsb9rhr0iq2g7hcbtzvaau6aix52p8emm83m1j8ef5c63\", \"4cx4wkst38r1cq2p1dl3wgnes5dghz30z1qeeqek06sqkc96er1zjyaxnjimfzbrupflo1wbtixu10go4erep47pkwwghwb1tw7tn79qc5vksjk8hjal2a2w9vpo665ykku43arxc9h141psrtf8yjvp9xp3mlivv6hsjc8hoyq166fy4tganhy839a4252\", \"18rkamr5bmm6enlpr1iyf32n3iomy8v5863lnulsrps2ax4rjb2ckki3ohm0bpsmdu4k1182243w1lhly2w0ukusmqjnt222wld4ukx0cns0jkd4hmycfod040xyokx500f4lhre8y3qky7\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"f6dx1u45bj35tsl3vyr8o7hn5n\", \"pisuaka3jdbvuftucw3k5dto2ozb83oq2ialf7xw9vacu1wbx01ut52z3utzp\", \"2ecrfzx1vohh0bmlf5dhye1a9qo8pp65x1ckbxqbzw5hvs83zrfyexxemd7rghylrv2abm\", \"ivd2n19qu7fapzfvp5b6huqu9behiu7uxiw6675kuduvmm4j5aifw3gyczj1o5k9eqoaxocfqg3ffuth49zsd2e595o9203c5lwc9u2ggc14mwa2ft3ro018az4pv2zb5ornl0bqtgo0fqydy8gyescz0z3tofs78y76izey5xs59mjnho8g6e0h3be18j4k\", \"xw97946lmvbeuhwgmhmerha2v62seqadgqha06nokwfhkz2qdq25612up1jy0d07k037kxfqn137bkd9i9gofww0jqb0209kclht8ezhwno08ss1253bbcvdzy94vp44k1j5xdrp5\", \"8974nw3jpdh4ha478cju77hk4y9k61g3bbln56xonre2zcy9dwst597xmdq2nbdusqr4awdsa1eiorjjt2ro1dgj3vuem9i38dbyl4h1rlt5e1ef7n96d8\", \"0qa4on8n91a3ivhnmagq5ht7kvzb3mhd9tx7yppmktaf18zhpc77lgqr0nit2cdqzzkidyskythpdwo8k6wdgv1ttsxex7w5gnsk1pvfc0d67cx5whv8iksd8yf6kddjvdouevcepj3hkfnickm\" ]\n    } ],\n    \"service\" : \"p8y72tlfi2r7r7aa81dv49emmipkpi7z75dumflymtj7oub2x87bw6f21p0bl9x4f1uj2eo5p53yp86fxkwvwhc513sqvcwzpitng4lpw900dihufahf\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96b5d60a-df9b-4704-a19d-0ae91bd1321c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.004196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.spokes.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "bae79676-38bc-4418-bda1-9bcfa7e1c5d6",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/hfj3trzaexw0enckl47iqqv2bw16jznpq35h4hwwozebhwr06a4mpe2befzy2wl3c08wdshtwok0tiww5s81kp6:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"5agr17f4361m222jd4w9m1bsvlqum3w4l92kaoech9hbcbxr4tdwe3s35pxjs4iho2zm3xxjk8l\",\n      \"description\" : \"Et odit assumenda sed mollitia deleniti delectus reiciendis. Corporis unde ut laboriosam necessitatibus sunt eius. Et natus inventore quasi omnis. Laudantium accusantium et sequi enim. Et labore quas \",\n      \"location\" : \"kk34g3ecvnxj7jifd9fb6y4t51626sdoontbjtvdz7jfiwdw2\",\n      \"title\" : \"Quia tenetur voluptatum.\"\n    },\n    \"role\" : \"hog5fd0vgrik1mx21qhb29fgmu9dclsq1t25qwmilul08je6rf6b4xvqhz6jieon1eifhqhsay5hg572q9qa96udq475oxd3lj28pymh4bk8565ybu0r4f516bcuxdz0tw8qg\",\n    \"members\" : [ \"kpqxuaeidozxd0lh77jqpysof4n1mtj4bkbdtdrxkwjmptwos862412wb69z2u9g7j6qax2y1kz19f6xbq6e8bqgansprcfgb205u9d1rmvzp425hvrtd8uj436gnoatgy1eprmyvabs9qkldz5g3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"etx0e1y4tk5zxpon0jkf5ed0aztbu0tuxefszpgzwaltb3ef7nfn3w34lb3ggcvac3cxxq2u952e7k9o3hzyaieigi4qqkshffpwve0dn8nqc00a1xde10zvl3a8kxf3mrlxmc24181cf085exctp27u26fjpf5ohiwfubrntcn5\",\n      \"description\" : \"Facilis voluptatem quo non nihil. Omnis quo nulla dicta voluptatibus voluptatem dolore mollitia. Quo qui explicabo nihil quidem.\",\n      \"location\" : \"rtjtxbfba6kqsm2dv7arupcevcvrrcugzy0q3tictc94j5rlzku77qkjt\",\n      \"title\" : \"Eum consectetur modi a quia.\"\n    },\n    \"role\" : \"8lro6gs1udwow2g8otyuc4wisucyu3dukv59vbhrldi0jwk6lhgralo7a3wxjohoo\",\n    \"members\" : [ \"pc23e24ody73nfgrqf1n1kw7d3pmq6t8c5kczpfch0r5y86inc38ciuhcw2n49q0073z5r0l44dawt6sb34rn5ie4g5x2x6w4ty55v838ucnofsnplny5cdij7oypcioifaemeu2bccwa0ztvpolb5epiqfsox6tlq9y95lf8odo3lgtoobm\", \"jf1r683e3mzmn7668df1hv9km4g23yd27qug2wq5vp1w0hd2xrn64ftussa89vtki8wvm84g9cdzctngo9n1ja6w1yps2sqf6ljezenxjinl9wbc59rhggi9mqc2wdkumo0b5qpbnk80fgv3l\", \"0seq9pf34uinpceh\", \"1zhigddj8kh2nl72rt2p630iutlm07juquu04lfd4nl2d484q1tfl775e8wprel7d1xfs8xzhnox4o0i6z4tl1ngghg1nr5w3bthe9gipn1wj2z3zz7vz67dzegjdt9xbxvtgga6ot5dm4uxj1qptsokwt11m8rptgf3c6mmv3gux\", \"o4f5a7qzzwiqdcdv238v19yduceh0fvczow08821t3nahrlx05gxdyl6590o2zch8xji7e1xy4n80kdyeqzrxv1vau6c0js487rh8dowji8qqjy3dxd1kmfs0f0w2bz0fh47zqi9gqv365n81s27v9je\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"newx6jdb1qv3k7ehvjlvjy7ufoc7zbnx7tclavjq2qjz9py6bgqejs5t0dyc8hnxcagojna65fd298b9e\",\n      \"description\" : \"Sit et excepturi accusamus modi soluta quisquam. Suscipit vel modi dignissimos. Aut dicta dolores. Omnis qui rerum ipsum quis officia sunt.\",\n      \"location\" : \"fxj46fsprnalsn6eo28wrnil5d5xt216k051qts417cb0wl\",\n      \"title\" : \"Est sit sequi atque corrupti sint reiciendis sed.\"\n    },\n    \"role\" : \"hm79v3vmko7vnkwzym2bc04hhr8mhi1y77bsw5go1khc2bbftg5rzfvnahthgcptcra9vaq9uopsbjuu6rhirkqwl80vpfr1llx7cj4gw4l3ozstgawh79uqfhe3bsuie104w7zib7us8rdqw\",\n    \"members\" : [ \"ixrfhaj4irkpgmp2m58olaswmkcm9yfbnzh16wrg75ae32k8nuc9nv5xma7q0e6z843plptflf5uaifa1k95s5t2r9wn0ct8xf532w9zf0pp4zlvt55uakm3s5olh0\", \"ntltmcxjcgby4wvd6t2julef0ebz4gd6fsqzl00s78gcpmepchl2hb4d5ebtxr7cnzwosxx4asf6imrjibyf5tsfb4hxo58ziku1ek55dtegg8qki1qwummp4kaj1xp779fp0hj4kl67qimgu9zwt7buqq3cl198\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ifjqutscuung73p1lqv37k2i9aqp21wu8iuvrlw2nr1eushxij42j5n4m402fosrxpoqgcgauki73t2g7hiua7j7ddl5w1c2o27n53l14\",\n      \"description\" : \"Aliquid iure repellat saepe esse ut eos sunt. Non eveniet vitae id. Porro maxime fuga dolor sit atque. Expedita non aut libero rem et totam.\",\n      \"location\" : \"ccvtj94xjzoa7o3yj69sxmenz73aoc7bvc87\",\n      \"title\" : \"Aut nihil doloribus qui.\"\n    },\n    \"role\" : \"h9o6jfrcp554ufvvnjyxpe4f5cr2knz8k04fk6yz7j96t5l3\",\n    \"members\" : [ \"n6l61mckipi2ikubcwopgwne87s7mb9uo1eor5jss3egg4xag35vnfu4sloezs2j79pfqm456nr85j2vo5o1w7ptekm4d6cddb\", \"7nv20783cqevu6oxnx7uiaa6b4r1i2cm5dmnfj8ustd1acnaaks1np7y1fpe2humqmek95gjtkyavxpyu4wh7vzuojp5sxn7av28y9d70rj9z4fgap1afhixueh3xpg8oyu4ujmzsuab42buwoct1fnkhzbrfy979cqr\", \"h2t0y0675fs1negc9aq5rzhgwbsnsmpgceolrx99i5wp40iwxix4kdwra4oowov0qzwzoipbwuyvljixme2cehmxguk1bp2bw6gohjulqio03b0c8q6fas3l35nfl5g20v5rt8xsssdk2xgs49ge3x3bpw2a6kn0oa27558jipvz23id5oltbo7w9okexrutz2\", \"nc76y86nkau0gcv2irucfmesgpyzhrb6dzxmswz0w402535eguh9bivwrr7zrdgih6y43sl80i6cge2qyx4miy3pkmqrkm14zg1xafzrew7xhqgqt68vj\", \"fcz5l2gc18gvu8ajdoqvz8324jt808lt582gdug7kkkg3ugn1yd3vlz\", \"mxm4r7zxtc0ggwuv7wz33op41mw2bhj9aup031dy6ur9t6mgmhucyzb0yscfr1qgaxmkfgmabbd4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kixvxn\",\n      \"description\" : \"Qui nihil fugiat ipsum eos. Ut sit hic quis officiis praesentium. Non unde id beatae aliquid dignissimos.\",\n      \"location\" : \"fkajbfvqhty1t9p\",\n      \"title\" : \"Voluptatem quia minima non magnam.\"\n    },\n    \"role\" : \"b9r3jum4ln83qevi06m2j8xivmex19xk0lgg43l6ae06yn9d8ok339ph9b7x1c1smnrpcw70ttggea5qdr6k7kbjft26prsnuftr9\",\n    \"members\" : [ \"katxaj6c4pfps9lqsv7mvp09hywnnkoxakx5gfsi1jp1v2c7hs5ym84e2d3mzbpgegpsiy3ox3scep05ygpbf5nassbd6yhrmxmwvqc6720pe1e85rroy4mst0xqs4m9pk32ki1p00iqz2e19\", \"vn6wfe329tzhq5vg76z9q51ppdm1a9eci1x5nojjdjgk0lfwsiilr5ptgu5adesxekdl54trnlpl9zos0kefv2jh2zpj5gpffyo5turxjxquh51jck2nzzlapyfe9irzi8y5man2hcikfqmdat2sf8x7gnakrff52lmdy9z5q9xrti3qk\", \"x09wxn0digxb3giqm3p3m9x1gksu0ap9b1m46jvua6cyycic4jyqsozw3gylayr1m4nkltggspmfqz2coh0cu2am1sn0fl2qtj407xxjzq0loph2aylkpgqbqgk2haf6876ss\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"arvja2uxkseswdyo3qnpm4h7\",\n      \"description\" : \"Blanditiis nostrum sequi. Quia error optio et distinctio temporibus vitae sunt. Est optio quibusdam vero esse. Laborum non illum.\",\n      \"location\" : \"iphremlaejcm6ld1bcuzi4ei56ed32zljtithfw23jt7sbpwsz254226s2ouva9c9nikgw9f2rixnl3koxstci9xf4xu5k9nsbqn20nwq3blerwqjhqgtvo9qnc9agw9o7g983gm5vx9uys16l2w85apdc10hmp3xtew565\",\n      \"title\" : \"Velit ex velit iure est qui pariatur.\"\n    },\n    \"role\" : \"258d6oevhd6ewn65jxp6f1yo2sprote3zx1qjtthdoh6l7pz2m1b1tpy6hxcpysq94xxo7tsazw8mimp71uw8p3cesr5svmj39z5r1yug8a2naydjj3p57w2on3v4441q95v5\",\n    \"members\" : [ \"g28nqpxid2ay2ecjvhlgbl7ru3af3kf87fqygl6bijdk18n34yhi6qzsoclhrxzlccky2l2qi15v2zqid4ek8xkdv7fnmc5665q2wdhudzel\", \"ra3awse7z5jrlti6ppnsstuaznvzyn17wgo1vw759sq15j1tme9p5ww7b0f648dffowuv0olz7ox0jganu5\", \"qpuieeo0tc66uzmorixn53khvoycqo1y3t5qiy44o68k5sspzgt4vne0lnng3jae37wg23ig6qx0dx44smhsiloux2j27x3tnqcvnwgtd52j6wbw3cy805g74iz42akb1v8dv0cawftifkj5z570j\", \"6cg5abm4h\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"0de3yjtyhtx83izpalokv7s6imfxie71vz0yo0vc0bumgpk92uhaypq9iq765eekxjg9he\",\n      \"description\" : \"Sed nobis iste. Omnis voluptate saepe aliquam. Dolores quia deserunt modi ut. Perspiciatis modi mollitia explicabo.\",\n      \"location\" : \"5brbauab3vemgnyr3u18ti1nr4l7mn40bev48mc2tca5ej6jzar1qiuecil2f224oc0tity671\",\n      \"title\" : \"Repudiandae dolorem eum.\"\n    },\n    \"role\" : \"wfyq94d1k8u6egz6cnvkm8jp7h92cn9wyg1rb\",\n    \"members\" : [ \"1hswo7r1tttnjx9st8uzj500j4h18kyuxu1zmwfg7jnpiuprcjmvdnxreyr33t0z4dem5pfav4ubnkziqnge7wp9sa0cj2m9t3at2jz34k2snwe56r\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"wu08zhpkeu8ijlxxc7pbewm7pxtki4ilg5nnqvgurnbsytn3iemq13eww4\",\n      \"description\" : \"Velit est tempore qui. Debitis nisi molestiae quis non vel ipsum. Cumque animi accusantium eos rerum sed quae. Accusamus quia unde ipsam.\",\n      \"location\" : \"jisgnkmgflp3uu2cv4107n9vf6fjrx3dea6jqa537vinwnzyh84spguyh1y8m6gc0cijvjc47let1po79ammnfdh9broaa7f22k4jgoukvg4k831idcix7ar738nf022br7pgxzc525xznbidh6xuturspl64hk9svo3v5z\",\n      \"title\" : \"Corrupti molestias aspernatur necessitatibus alias.\"\n    },\n    \"role\" : \"9ix3w3km44yb23dzfmo6pxooq0sdsok4cbft997xx2jrsxr8xn9z1ic7rhxvy97xe4oidue2bac7ed450y7x38l2fdr2ik8akvjuur74y8kb20mgmd9k\",\n    \"members\" : [ \"3iy4vp0nuhfl6usyb1biw1mf5swzlh5kzye0e2dgecf55kq5focke413jrnv65gvolaags3kvl6gxwuk2i6rxm7vo6n69ujeuuwql7utijpydi9hjuhglbkip8l7iqaa7ywjo3qo66vu4ixiegcae7weh99zlqdgdzcx7gnxry94474lc45nbhoa\", \"8ztpz1rsb1auow5eckqgocnf5aq6dlrqf9masz7ecmrqpgwzjns8xvfmklri1i1lu9r260k1pulotrydipsa9qutcryyykskiv6gp33pm1\", \"29u68zc6bvqdcruz5m5pwteunk28a1yy4iq433mhogzy4l7vetei9ku997yxvn3yy6zix7ohp6qknvp11gy3vi3rbx2esfnvnqnpcrii7kwjp7ohthp1xl3s6oe1jjyr3dk0l70oqu0xyn5q3zc7bm5wgas97hpbf\", \"sw47od07usm3pc7tatjaob7sd8zzowj53bg1x6ak6zw7gfxezcw\" ]\n  } ],\n  \"etag\" : \"aliquid\",\n  \"version\" : 1597457379,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"omcw21nqspp423bxhub8lp4k1mx145lmrunmdkmnqx44dvhcppjsn4gt66pu4py1teudn85ptrh8sxa1nbqrmv6crjnruupogz6h7qeclv26aecvr4nkd\", \"ub94frwhi4txdrufm9lb56ax960xfajzb6p9exd3htn7b5npilirk6b3ujkdqs4\", \"j1aougg2ox1poyb2kbj79vlr72ugdryod8nqbog19da0z9rsw8cblktt1dlk7907one0940ohvybzuowkza0s08ysg2g7yp9pr76au1o7zovhi21j47bt00trijez4\", \"knbpf0md8mp5tf\", \"h0zz8kwtid23jojswaanxy4hyjv9i12w52pk24gcbmkjt3ne9wlwx8fhdgzyuty50uypcf165ybvhu8kc69io65iw5t3qd6s9kz6ojhehqjgav3du18nux6v6zjie8od9r0otzexf0nbmaqi7ng\", \"yr87a4p9vh865ymt00816c8871y1hooomyo2sdosnx4oimpqv21qhcgct46alb36igwaklmxowts55sj8dp7jd5z6hpjao6xdh746gbwh33fgl62zsujijunpvnxv8g68sboy7t98hyeyd394wlctzbj7mccm1\", \"52x6kdn1gxn5nwcdg3o1x08mi3vzrolc7ts4p8mtr4e7j55hyiqtpnizqw2ab5yruwy7lts3dlenfin476xjhz146saf7rhb6zaped181ekr1f1i75kr4f5hnjw0wvm8nqxrhahb03ag2umk7gjc7nm7ogb7uf5bm0nhx6hkp9semg0xqy0gjw5tt4wdp4y0yeb7co3c\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"9uy7ojgvyxroryhdagytuygpod1iz3en9qzyefr249uyig69x6nu08vkbo7984ogjr2t9wrq8zjx6ozjb7po8pchiu9kgkecr9v78efdzyo8rmb25uyc3ak\", \"w7wmljjh6jewz1dhm7cw72wyz6iukzparaatpc68w0onh3gf4lpe862nl9xnsww990kjw1opai0w\", \"av45svowmjz986tc07bl159quscrai3ucnpfs9l0t0qbdxitar9cznmk81yy3guilb5jo33zjxoxrkoy5snzrmewn4iv0ptxzmbids9ogfqlr0oroiy6qbtxglv9g9kxw0sz7hlx9k8hxdmzk1l9fhua5kmsljyjr6ju162o01o996e0b9\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"yuhj4ft532rlkgi6z4icveziyq844c1mm4dcdpcux31rs5stze7jtx6fiol1sqiimgg7x5ggtjucc6g7m1zy183kn32i2elb0m062878jelmt68n0o78une94w047zwkvq5g5aa7konc7ley1ij1enrmddzm7qxm3gzy15pviy3by1sk5hdey4t6mvdgu2t1\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"tbruxgidvp4z3ym\", \"pefc8ayy97e9bv3ofge4ypask0oyhyiq7tsj7h5x15dt718wdxu2klp0ylhez5ef2ihuxv1xye1m7ncyqv\", \"d2ba0m0u0so1e5r98obgs96czquqhhgk5jkdilxnmidgc5f2t9s6vu68en4q8qsywg2esrlr3msm\", \"j12deuuz413pbezu6p8clgc5xojdt30dhevmd6l8efn\", \"y8vsq0b9obcqgp85r5wxe3aee9pnqqaqtczr9uvb998v8k18eu7qt4kahpvfot3oy7iokvqqs4xn9wi3ew0riniip4gb6oancui9s5o2qs3o0h3fxdraxp5pixwv3h6blx6gcb15wo64xkfvo3dtb\", \"stdrapd7w82ht5\", \"cjm1wn7jxka651wickwbog63vqif35pl0alrask3b1ey5j02d25k\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"t1v92wfowz21dr1dv6c1rtqt5chhjzpaxq50fto4osqm5a4ha9iqhbgnelc4kj80c8vv4sxxm5cz8hj2qsazn9knnvyctusux9uhz391w54xlba863hrjtxxra0ky626lsyyu4k21l5f0qp723n47twh7epycwvhnhb7\" ]\n    } ],\n    \"service\" : \"rfvq0ha0m1l2xfjxhk1kx9jygynhbzlptjas4ayqq90yaa4wupx\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"qz06vc5twoidhv0ntsla4qkmqtkye53em6s2q2lekc7yilwyr\", \"u1wtbvtzrj8cwroystcacwonntqgh4b7oz93f7od638zjqmi6hhmltx4yv7ztznw2up1d4gmamq80qal65b0g6p\", \"lkxrd2h8abivtp8v8blih21rjqlzd6rt11k0pdgespeevzwuskis9wwnybryhzg9mzosez4iu1wqpafgkg6zetnfjgus2maz661fv6hfq0dz3e12kbyc7n9s19hp9bhdz\", \"jqxf1rjc03xm9gky2ro48lqm24m5teka4qyyyel4u5h0\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mcw8eqn22e427r559v0m1qmsgwohx3e14o9ov9d1s04uxyfdlm3y0bqo3dsymldebfa0cd5id6xxn40c1bbs62k7zpznfa1z9b0eq40oxpspseg912u6h71u406sgfvasip9l0mkspz0xqpll3rzn34\", \"4lovbmwxvgtgsbbxjloqtvnzigp2rcdz7yrc9w0sjzs7fk4q2zvh7esspu7gtktr3nmqs0bgm444gq\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"gd25yqtl4ficwrkowyfyl1x4lfh8ofplud0g8v2uso8e7g1y1r8mg8b3j24\", \"upnhhvyk2j83mxse88yl03oed4a5z4k4pgd6mcl0hifs\", \"z8m7sn6nvf1lbtcaaf182vqnw6vf3dbsrb6eid1rlbniolkpni6bwwrk2tq2lre35cotys9elbbccy7kb2p07agjtrgycxwkpc6e8s7hzr95zevw3sr19ugbwz76w0soift4zuuwt7xd94udmmo5nmzto4lhtr769x\", \"mln3az40xiv4zdz9ells97kptewekh7rgt474i5muzsrhnup8t3zckbluxa1874zpqsp98u7rdsfoxaapoqsc5v588nchrw5wkgjp57kgp26dzzen5z4gn67b6yb58r5di3u7yhpjq7frtlcldqs6bv3gcf3u8pwxlqvgm64mm65t4wpbkui00mo\", \"g72m7mfup46e3fnasopyzrvh67rc5h0w1hxcl5xby4y5vmkcjhju70dhtoic0dz9jriv8icnxrovtw8gi3fdvha3dets0ap87bro6k0jne4ynxi4oaqzfhim63jk830eku5p1v9ff820g3etl6c\", \"dav4zs3jls8ipt0xhqddj460wbi3ifyyg3t1ftyh6uobul1dgvxe1d7v1lov74fx5912fw1vqh80gkre7r6g9xq06jbz4dg6b4fzvbg1t367wgv5\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"71e1als68dudd46z61xhewp45tvvj6ezc6ubopiavrze291q4q0jlb9h07166mbtj52u1qt17hy4bse95syhwutjkieq6etq3fryj0db3brprihh57zhrxnf0vwpajvqtg1cwgbq4dxs9qblq\", \"wuneq4g7pttx6obolnokpeazgpf5dh5c0syyxxuj6uokfqk2grzxusmk2dhu706gbgm9u93fn623vjxh8fhbn3qkeuel6ccf8ijkvzssrxpwpsap44uz26burojjgm5486waq1f8mfld1w8awpt9gzyy6ggka6\", \"vlvywcyvffuzb5bmtjj7t0c8o1tpbcty6mshopajib27fhsog03rxhjcxtuvacz89o8olekrmkq762oj4j51l4xqk0y6xs1pr1v68okvu6mjnhautwnkwicddzkodbtssb\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"c9k1ocvts2lefyqx4fjxp9h44rlwlmfc4bba40b3fkjz\", \"b2ic1b1160inukxve78h8v\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"yknrnqgv5722kcsmu5\", \"4kz4ztv0omsok2srrq6dimyyh59iwgs1e24qnumdbd1okvls1ww0xss2foct4j303m3texwytsqsktd27vantgfvvwnoayp581po4s9l0mhf9a1nqeloff7edpkbnx1vj5lg3cg4rf1nbcx829z33tbdpc71a8\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"fhail872j240m2plqcgmq63a0d4qti40q0y7o7boi4nqhn9ks7z7\", \"i09z5uhycs6y4rtdq5e7ft38p11ytcc2uyy91hcm4y4rylscttt9hcs3cs9v4ou2l57dmh0dcawwzv9w115oclscqadda\", \"27jmu6smv4v2z9mw0u536a6suc45v8xro4vx33rguc604ovo759540mt03yrj8v7aypb7ep\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"v6uq4clb342ylv7myhhd1kygnssi5knsjuelftauo4uj142q5yny0rxhs9dmjev9ma8hja3pbgh0a1vuttiju3bmjkkopsyhfoskoyeiqck0xji280p4nwj8yawfyn2iy6ehiqhuzvn7mtf5o54a2\", \"dzfgujkxzb558jjlexn67dw51orvs01zist5qegat3qahzni3qvwj3t8cry1beac9r0tg9m1mqhh6ja9ln3zsjx3c36h6acz2uc19za2q4evu5\", \"8ng8gp84mgx61hwx4keezl71ed29wkzxl1489lxs4xamrgfy1eppsmwd6e1etkhay3v3aw30rn4kymykw8hyekxretbl7akbtbt3iyvh1hmiudukfja1e4dom2uzcrj7ciaeyo539y95pomp47k6n4xzqxgg8l4fw\", \"vpeqlqm8r4qvr7l9e8qz08jdi7oomowjihl0vzyfgmy5cj3vdwhbrii8xqn2vi0xlihvgip4z0t66jrnm47m8suk93yraps4a\" ]\n    } ],\n    \"service\" : \"swcrbt85jkpqe6gfgryhiphorec9181fjvn02alasuha9y195wgi\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"9x75u84ufq1sbpgqlh5cspbrh6rrk08w9470e4edv7c3xhqorut0r3t2a9hswvsbzss261xh9tqnk6t5aa9yck673g08r\", \"ocua7770b\", \"4mu0gpztctyiepsrp12tmvgm80i2p4rbd139wt0ncphnphwdumqcpumavmm6ac237c3zoev77ddqx6vand5qft4yfzjhqriho3cm5f6c5j6nz16dcp5zfpbus6ucyqpzeqdy20uvepkee8dz838nmg28h1kkpw1pylznzdm7xtozrx7jp3hm3pb38aufk\", \"9zyf2dxrik11dpokmiudqm4rw0zj2ifw1mja7nzg9j9g5wa0yac2rwhrf7nelgsd94a6vm0s427spe7r3melt1zdz2lgb1fsko4z76ocj\", \"yqq8xdp8ai61ekaqinp9pgovz3yjoihpyncfxhygz8il8vadkcvlwjzxzr6e1a7xvw7xu4s5rjjtoykngikl13tbv22bmph6olax5qj8s8ysbhk3gfyf\", \"xmei549lsjkzu5r30i5w2shi3ekt4pnqqn48pmpalqealf5uve92btbbo6sntxzfxjf7502c3re0gq5iolg46pwz8e4u8szk8fj4wi46q4zd4qzr6859fvstqbfmu3oz76zj4p4hkf2gxkbqij9nu7ftmxu6fw\" ]\n    } ],\n    \"service\" : \"dj6kjxay57\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bae79676-38bc-4418-bda1-9bcfa7e1c5d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.003553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.spokes.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "7180aea1-e392-443c-9ab0-69953231ce22",
    "name" : "Creates a Network Connectivity Center spoke.",
    "request" : {
      "urlPath" : "/v1/2ltowb79e8qn4m0xc6idgrql573spjvv9n1mo1dbw6lnqzhx2tnhywuhsueu7ghlx84hxp8mfg0t6sdyuo1smidnu8mg03jeube00dop963fltbtt9pc3l84bvxcrkm3c573n4v4g3izdvspnmlrxtrn1wqsd76sbe4u6rjg9wiwat7rwny3lzptfupvd5q4rabiw/spokes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Cherly Feil\",\n  \"error\" : {\n    \"code\" : 394395455,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Nobis pariatur quae. Soluta modi quaerat voluptates modi. Eos ea et rerum adipisci exercitationem consequatur exercitationem.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7180aea1-e392-443c-9ab0-69953231ce22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.000726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.spokes.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "35fc636c-f7e7-4290-a23e-0909e43d8ea1",
    "name" : "Lists the Network Connectivity Center spokes in a specified project and location...",
    "request" : {
      "urlPath" : "/v1/b7eqat85pd1an0i1gcpwtkzsse9ztaa7zpeuyguyrvn7v2hbywd5z7dbow4rq49u8g4pepro2nxw01d3lzn3qovhur9in8idnftrbmwfl9m9m8hyach6863n3l0yvbat34lsrbs9xdnu84pk95j34uc97vgpic4qdh85fnnb9bg3cbih10jo/spokes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"uljhukma7ceco5vnxgqqc5jx8nloqdnzvj3if9osvxhvwro2vahn174iw12grph6nfucgq1lsxopjupl7pegu2ibatup9rpiva19md0vtp111o97kd8tvakt3bsm8bi773t7uruh39ege\", \"aoni9tk3h3js6ix0t8jbuoxm565holfo77q5kxccfpur90\", \"2e6wss8kjytx9cysgjr950n43f4j8sh6zz05mr1rs7kqkgua0mjj16my3hqz1z0z8mmt06behf6qjj5my2ddmewn27ctkt368bpe2552r9c90q1\", \"wpn60dfl00o8yw064tyi9kt9cz6rvgxaugx1q1ekpb9m0k3o96q922t2vdrtz7ove5o6c25t2tg9fujuhoms29gshzdj6nm5vc106ew4gy1zn9wer5lqv3gxsvnigtvg9wgrnpzp469r7ba41ing5r7aro9c0033w7j04my7bhzag4tez09g53\" ],\n  \"nextPageToken\" : \"sipyx6eldm8osqazr368hvumayoxl6i5sf2f65fq9mjkph94i97424dbbrn4cji3663unc51vdxbokrs0zsn5u3hhq5pb26nq01wxmwzd5u288mxzqd0jxj8k7v3qj5hpm6go4k8m13k6k3he7zk4m3ckz3uo3xth\",\n  \"spokes\" : [ {\n    \"hub\" : \"futj8a8oilg9t\",\n    \"createTime\" : \"2022-05-24T15:11:30.998496Z\",\n    \"linkedVpnTunnels\" : {\n      \"uris\" : [ \"gugy2zsgbi42rckbedy0l6d3rurnaeq\", \"j6q31ofnisxs0agd2segu8uy886hnllkecom5ica3ymz8hkc0d0nfbzjo0exxnlsp5a5sh2uk4o5d6ua4nzrxxfsztq7l59lu2w7ajxs8ais9uxjk35w4ytp2xtcrbdb2dakw60t512ge0u\", \"xkfwkdoitnxdj1w2kedg3vfkaih341jcisa23920nyb5ckg6tm5z0qq5iu2\" ],\n      \"siteToSiteDataTransfer\" : false,\n      \"vpcNetwork\" : \"2nxxs\"\n    },\n    \"name\" : \"Mr. Graham King\",\n    \"description\" : \"Iure vitae qui sed et numquam unde consequuntur. Et ab mollitia. Architecto iure aperiam voluptate nihil voluptatem. Et explicabo enim ut consequatur minima omnis.\",\n    \"updateTime\" : \"2022-08-06T13:08:30.998676Z\",\n    \"state\" : \"DELETING\",\n    \"linkedInterconnectAttachments\" : {\n      \"uris\" : [ \"996qf2vu10p4kumm00eaf5c876oney65lwhvl9a0qrfuh947iylqjo2mh4kw1s28iak3phws12v9zg6d3h27x\", \"1o7501nsc3m302wg1cjlg3ee7tspqfo9d0mb\", \"4987q0v83fnhedlc30c0fxellxv9537rrlzvmly47zqauovdvrrvmmlexd7mvq61us7alhpk4k6gux9au05ny0wd8ogledla2vb8f6ir75ohqicrca18zsdtgph5cid5q1x9kjz5gbgui1bpopl2t2kzf5hwb60nsz044coj3m6zq0ef\" ],\n      \"siteToSiteDataTransfer\" : false,\n      \"vpcNetwork\" : \"p7nbpplky98cjpvnp7xpgcom91652ewkuvb8zixnmnlu2vq2ewub9aib0qrgz4pl07rgpuj297ikb3plyxlthgd43vueb0zbr5jazrwfquh2g70keh2sqhs\"\n    },\n    \"uniqueId\" : \"x565\",\n    \"labels\" : { },\n    \"linkedRouterApplianceInstances\" : {\n      \"siteToSiteDataTransfer\" : false,\n      \"instances\" : [ {\n        \"virtualMachine\" : \"onu85dflimc69or3dac18k06oy58iskb40f8eldxk4ho8az90mt40lk3tg7olxufq6qwu0xwy0g6k81xntqd5rws3z9qlt1w2u1rlbj5a2e2m7tk5f1r6sodii8\",\n        \"ipAddress\" : \"se3u0ocle5hxigkws2npvgjvz2gbql6o1iv1srm2mfepmip4zfzjoxhr81eaymi4jgz7orez4c6gv6ggurwuw231o9urd3vlbcjcwygqkggb9q7787fl5bant1mtn2008oir46wsq1yhgkpjx5jx0b9aix00wpn9iuhkw37uktlb4panqnphxro7cd\"\n      }, {\n        \"virtualMachine\" : \"uqe3bxwggf3ik4yjktx809i984rmkwzxsrftn43qitpkxyuvv5ss5xp9djbicf4w1s9s8aaxg8e8m0qwczjqlba89zziplxae3db4tu5vcqhd7co6iu75vxdou\",\n        \"ipAddress\" : \"2fqkpabko7voha9d42cb16u6aga86q9np2sildi8qx82o92n5iyu67paahqhrh2cl4mzp6su7\"\n      } ],\n      \"vpcNetwork\" : \"78y7rwfkv4yjhzj268hbu62yj9zd0taj56i8xvemr5rfzw7z8e3hjwhb3ufqi698d4x40uig362my3md7xow5g3lv04w0morzlji4kr0eopg7a6ipp2yb60wdtafp9b\"\n    }\n  }, {\n    \"hub\" : \"ba7nm2ey45n6wje841p62s7b68sba0g67t6h5dmh\",\n    \"createTime\" : \"2022-05-15T12:22:30.998977Z\",\n    \"linkedVpnTunnels\" : {\n      \"uris\" : [ \"ebbnexeukzwzdmqgomi0d2n4co28yflisne20w1jisu6mn1lbtcbjb7bkivmpdh65dsyc0i4voj37y3xzwmobvzm912ziejh2yj6lhi8dbo91jm2tzo4p14v8i6w9cv591tzgrdffeohvvsrbz638n2950n\", \"m2hlzivjo526ipbqeqeuels432kb2o8ja9u4ldrhpsdtv1htzpzuqttcooocqgr3wp65xn6qja6vzpew33d1iv6bta8bab36venwiarfwdbjpr6g90z417ozxc6d3k10ms74swbsifzd5dudaol6n87yqmx4fkcl2fwtzahoib\", \"9obpnv2eo44xr0m6afeiio6k1xnigdzpdosupc8v3q9tw5msnrdhw193d6zuf7k9fqtzdpwd1bhbluxyn8vtrzbfvzzdfcmxrys4cqxyyqngh8zuobo7bj56xtgj4k4rpq91175lvr7ntn\", \"ba6\", \"nmudvystd7i2\", \"t0kv3lf425x8ehcjt3x5p1s08c8cjdd23r48ioab2f54c6p1wxbf1v8pj184dqs7bhfrs76gekxer97yqcclnfmrk8xqn63e5q0lkhc8p5gtc0wrpoao1lfiqhny01i75asisvyz3jr66bil8x\" ],\n      \"siteToSiteDataTransfer\" : false,\n      \"vpcNetwork\" : \"lk4erf63a6ad7ognbs5jngtxunmxq0tonp4ap28ex64j3wbmzocxfqgfdoinurrnrrb07vxwexahc86p3ccw0rj\"\n    },\n    \"name\" : \"Van Tillman IV\",\n    \"description\" : \"Consequatur est neque ut impedit assumenda qui. Sint ut qui error officia. Voluptatem provident pariatur amet placeat libero voluptatem explicabo. Rerum quia recusandae quo.\",\n    \"updateTime\" : \"2022-08-20T13:58:30.999138Z\",\n    \"state\" : \"UPDATING\",\n    \"linkedInterconnectAttachments\" : {\n      \"uris\" : [ \"uonxznp1zduv2rt5hwwmxt59vzc7jhu6p2n83osf1f5yuh1acu14g5h2oxzl1iap9oepm73rx6wcrtfhy1jt731382nsx7661q\", \"qzqjy\", \"0eko3vgrqnq9f2fk0lrr7yofvrqblmvgin03keqcdfncrk292eyscw3xqmjolm358dqhpo0n0x8ek2dxdiyou8k9zglqkw6q58k6r60z42pia5kopd6cjhe6nbh720nr6scvcv8pw4ihpsbmsvn1i8di1mva7rie3kjeic8wtg6gdgra7z5kbbxeawfr71\", \"10njab2s4a87jaj0p5wqe9luxqa53m7chvj0irwkyvyuge9qfmj6kpbrvt1xzqkem6it9\", \"xv1bn83q6si1t3zc04jtaprahaf1c5i4uxomdw2r3360ezvvfec6w96mmolz2u3nasc6xxuuvplnu3jg5clsna91py09euewggapjhkjaxlvew5d3s8taaf91xksne5ik2xn4lcuk30kdyyxykkfi3ew6gnr1sppp5htkghrhsttgd5oc4eaen40\" ],\n      \"siteToSiteDataTransfer\" : false,\n      \"vpcNetwork\" : \"gpgla3r58s47uy9pyg423vnrgec4787dnzyd26h9cskux4e9habk6srmuqulsgowulz3l9r39dqjskthqq7nqr5do26j2su0usz3nmrf0g5qb96vx40ofuv790opzjrqybh0s3gh03r8ds5\"\n    },\n    \"uniqueId\" : \"4v3g\",\n    \"labels\" : { },\n    \"linkedRouterApplianceInstances\" : {\n      \"siteToSiteDataTransfer\" : true,\n      \"instances\" : [ {\n        \"virtualMachine\" : \"i6gcrdqfr5smk60k729biswqb0rf2hwyw8pgoavublpqy5rpvjwkugasvz1wqkbxbwn6s607sdd9dd342kbfwdulffvdxwttr3qpkkwe33n2hvc2cpsjj2kbnhivzimqszrlz6pftpftqu1q9xid3o8c3r11bqt7u1ie2xxp4h6irw4q5m6uue207n\",\n        \"ipAddress\" : \"6ey8x42rxnuii90fkyre4pmn4rz3kduodcmuyuot65cg3tmh092zlmbls6pdj0t1v\"\n      }, {\n        \"virtualMachine\" : \"09kk33encftn9c0s9dfdr3cmrgtjvtpgjjdmtjebtod5wzv845ne89l22kahjm2lvraju3cbn940nq5766o9389cxe9m6p56zyh5rvjsv1jc3elua0v2ystpvmm682rexw0afl1qxd7tribkqrvx8ytoa499ghft712k\",\n        \"ipAddress\" : \"9crznm6k9h4r2hadnn1d48lrz9xhupj4rl49v7lbluv2abdbux4m8nrua6gjoro24cnqci7mta4dfxw9puml7wq6bufcq2amgpijnc11cdewr6896c7xx96112yvkjrulk5g1htky468w3byua3fe6sh90gdttqpmumgxhtv0igdns\"\n      }, {\n        \"virtualMachine\" : \"hazsah423iaks2sjgon0cdvaxkajd51h549luhig4mcjc5r57udbq1sb9vpio7ft4ldbt57e0tqbtqakj9chrg9mzju5b8kfqb8q7jr71n3dq59qkhvdc5sa\",\n        \"ipAddress\" : \"b9932fojgnd1603k3v6s8o4qfpkbmmwxbplpce1myg13ubps811tnvu9l1zt6ayk7vy2lfeh1os2it4tfrhzy7bh2in9m0ge3im6kbw01zy4x3iqpxxua3772f4jki1vnwr1qp\"\n      }, {\n        \"virtualMachine\" : \"6b9m5ulkp08m45cm95a81194c7tmw\",\n        \"ipAddress\" : \"7bbvbv\"\n      }, {\n        \"virtualMachine\" : \"xedq11utwnom72hbetvhzl0ieme282oja76p8kdcoq77xduzu3j6dmry0y68j589fu5nftx3dgpcbkd5tonbc8hox2ro8po6fazpbop6n1ahs7q69tvlbi5otclany7a05qdyh6b1kjp1wg17mfpycw57apfmt1cgxklj9\",\n        \"ipAddress\" : \"qnetl7lbda1mrm6zntcvhzesrqxalax747nwpk\"\n      } ],\n      \"vpcNetwork\" : \"tipbqh6i5bkxj1ojdij2a\"\n    }\n  }, {\n    \"hub\" : \"rdohsyz1psp91y2bp3tpex0b39gzr5cbbf57\",\n    \"createTime\" : \"2022-12-14T12:43:30.999465Z\",\n    \"linkedVpnTunnels\" : {\n      \"uris\" : [ \"9as4hiyav1md1hl9t70fwmkndipm0am5vr76jl194vn622mmcfemn0clf2gffpczzkswzvi28v6gzdaqy3fky8z77bcir8bvl3yh2q460dnyrds1x23uuuy9vkb5\" ],\n      \"siteToSiteDataTransfer\" : true,\n      \"vpcNetwork\" : \"bh5ae320x2adfghe2ky9yagk4qvv0dy29hu888rb18ekenjgw4u47e2qy2toxcbidoyuah38znzdqr9c2jomr5lb50bqy6jvq3a5xjyr026kskre4jk45y88ly846ov8pt7i0d370neh7zcnpde4mecouicttd2u64ob7334a034\"\n    },\n    \"name\" : \"Travis Metz\",\n    \"description\" : \"Dolor sunt exercitationem eos et. Distinctio quisquam tempora officiis. Cum ut perferendis ut dignissimos qui maxime. Optio enim veritatis dolor non officia mollitia voluptatem.\",\n    \"updateTime\" : \"2022-10-13T14:26:30.999598Z\",\n    \"state\" : \"DELETING\",\n    \"linkedInterconnectAttachments\" : {\n      \"uris\" : [ \"ffo7fcmfvkxqdfv3mu61oamc9woaq6kbj034n82qxfqvd61n8qjcqg6ymw0j1lm8xbfz2hrxii69w7ty\", \"uoyac86nli09xymaog9vkq9dl2uipr97v7gnemze6dm3r28onbe0rq68ipwv43und75q6gbl3nk5wmyfii8utwg1ngkukiq3iup0gwgiylbq4tt\", \"2aivn1rxsik7gmz38nogx4ns62ef51fxkw02gm2hewbmejy8a0687t63nowobu0xzggste6vjmmt21e0k94\" ],\n      \"siteToSiteDataTransfer\" : false,\n      \"vpcNetwork\" : \"p3mwsc0so3k8eqgue01z3l7k6ozso1bn4ox19e1makhhpt7nipqsb0\"\n    },\n    \"uniqueId\" : \"7655\",\n    \"labels\" : { },\n    \"linkedRouterApplianceInstances\" : {\n      \"siteToSiteDataTransfer\" : true,\n      \"instances\" : [ {\n        \"virtualMachine\" : \"o8i3ss18uweg80beddvqb0xfrxvskp4rnge2x2awj9ytuodmf7zcacgrz6vm25dqcqct4g\",\n        \"ipAddress\" : \"n3jw51hzrp1bof8hly2k1h4mo469ykcn8q00acvws3ierxf3yj54eb42wnvcrupgzca0gmv530s5b7fd43r6uxy0svzesl0d8gto76jpixsutwu0ykz9tl51ntrydipg73gnf9qek8lixmylwdaxbh1zy03k6x\"\n      }, {\n        \"virtualMachine\" : \"us3bfzk4wl5paaefvm82cf42er9qnulqxkjkppm22il3zqeq37m5ga08olqqhydpf6nis9wcsqimfsz4heeq1ox4lv9m1v3l2loonvl4cwpic4f3p18aue2n55cgv0zodd5ywq87ynaok3g3cb58gjlh473q6e9k8\",\n        \"ipAddress\" : \"pu0nayw90966e8zk7y4ut9n2vb77benw83lzha9ixksg4fo2jnpwvyrmmxvsrnkxhwo506sy081hqzbrptfi2ayrh3etgzarpp6ktvjggcl4wtwjhmynmdwfrouzoj4q3yq1t1wghf\"\n      }, {\n        \"virtualMachine\" : \"xet0x82pui4jxybho77iwvqlqlfl7wm7zuxaagnqvbwxujgz149k0n7w9fnyjtgablf6eyaw26oa34kv23jmxk1h2rs\",\n        \"ipAddress\" : \"54wjdl4zrbax2zislan00tc3tl98l2b7ggkm8irvifvmfy1h15fn760nn3iwftrjj89rcts4jonmx0mhgyenwj8uon1p0vnn2mwvl0nul35u2wqrhjmoparpworlthsva6wemx8y\"\n      }, {\n        \"virtualMachine\" : \"y94hbpiikjgxsr53nx5qynl8r6zp80j4bvxfrtqgu82b\",\n        \"ipAddress\" : \"rt9r1mftpefvlqr46n6kf4t7r98brh34mi76am5bkaegidwxtmpobk2pcsztiemj2x5wy32zow60totivhy80w7h9ft8046rb1q42qs77tybc9mfhz510so\"\n      }, {\n        \"virtualMachine\" : \"w3xpgdfdbxzwvoaa24qvh3w8\",\n        \"ipAddress\" : \"damea6q5w8o7y7ww3tiyu9n10hkxkz7uzdywd1cntid2cdpnx8euac5n3oc76uq7mxi38p2ejvobn27trn9px0w03j447i04ushor9fz8iy3zzuybq\"\n      }, {\n        \"virtualMachine\" : \"m7co3zsjonzz0cyp6v7swhqrnhfs8n5taypw14l2rekk9v8lbak8hwoyigyawdnp0qbtg19uy787x9vssb4czp8667e1snngle2dwoudtxdu\",\n        \"ipAddress\" : \"lbov10urmbvqddqium74onw8s9cqkzz9id1blzppalqxlbx2f4evyfhdwf6qhitzslz2vum1uvc8unzd\"\n      }, {\n        \"virtualMachine\" : \"pqr208459niw4yvuoo60pp9kk6qo8z0sx9m6clkn3kiyvez08aamc0jok6t9wl0dq4srbrt2e95qyko9fefwkq5oohyqu0dbs35mdewgfs5tc8scsdcxpz1oywxbj2tll60i61wbdkcer5y3nieyiupcle\",\n        \"ipAddress\" : \"qyd6c95i2dyhndqb6pxggsr9lx6tf6ix088q1ubqh4ac55q200gcigs6xbkjhpp17invlioqo2476jjpf\"\n      } ],\n      \"vpcNetwork\" : \"s5pvmntq6lk7696opwc7sxlqb93dkdpnhtnuulsjn2lzgee9sx14jxgged8quu11d6x82zggx5zei4wkfluipm2689lvym\"\n    }\n  }, {\n    \"hub\" : \"6n80n22ja1lpz1xjvkm5lsps17sf42ghrpt5k9sa26ewc5fb1\",\n    \"createTime\" : \"2023-03-16T11:44:30.999976Z\",\n    \"linkedVpnTunnels\" : {\n      \"uris\" : [ \"trdz04zf0v1xzosp6ltberg25b2qxy7w0ljpt1jnfe2sd0ftyfbkuccnl95o06nu7fyhe26615x\", \"ptjtqmm7awp4qc99zq9unjvfo64yjxjqyijgd9wng10uqrmdzm\", \"sikuwbyjj93jcf8oqmw1ygcc1mdeigryse1120owc7pd0b0rpkbjbxsbv2zv69s5zsy7uatjpua55qop021pvd34jmqtqv8p8mljs5p9t\", \"ntk88taqf1ufmvpi198ymt2ci0lvr2st\", \"hfvbb5wlav6iv1me3hkt9xbgt3mqpt41iqj2ubxrmf4ejwpwgfg1u7283jn3lai06z8k37yharsrd44nws623iquyr3cmt7zo3t996az9tawpbbut70t2ajdidbvam95hw7zrwqtbf1672abnx7ipj1jwkr4i1ay0lq3y\" ],\n      \"siteToSiteDataTransfer\" : false,\n      \"vpcNetwork\" : \"ogw43rxgwf8srpgirdiov3qsvgo8h07bhur6sfhpgxz6xhrd8s4ldf03o5ydgy12s760j5ujnnjiufstpc6iyvy41p514xb7ov7kks9001l1n3klp9iu4r3ej20mmklnlist3tslji5lebum\"\n    },\n    \"name\" : \"Denny Mann\",\n    \"description\" : \"Officia dolores ut velit ullam commodi perspiciatis animi. Labore quae fugiat est veritatis et. Dicta sunt laborum asperiores.\",\n    \"updateTime\" : \"2022-05-14T14:39:31.000123Z\",\n    \"state\" : \"CREATING\",\n    \"linkedInterconnectAttachments\" : {\n      \"uris\" : [ \"l1icmdaftx6skli54li73cchd21m11xkb71\" ],\n      \"siteToSiteDataTransfer\" : true,\n      \"vpcNetwork\" : \"x7h53a289pi1vjujtqglejhzmm3xp82y\"\n    },\n    \"uniqueId\" : \"67aq\",\n    \"labels\" : { },\n    \"linkedRouterApplianceInstances\" : {\n      \"siteToSiteDataTransfer\" : true,\n      \"instances\" : [ {\n        \"virtualMachine\" : \"08q6g7g4qlreog6fntkjjrtj4dlyzomjveuimdhmcb5qucjtxyj7adch60ik7y1ziub4rzvqbo54xt61x60jzcy2r724a0tfj49rd9e22fa9pwfyyufn268eezuk38sqgof9enby25ttqn2c429fu6owfkxhckcxsla43uo2l2mw7k3ovyhjo4fo6q0fv\",\n        \"ipAddress\" : \"ayaz5f5k64t4sjc0wx8xw4dzpu7l59r7qto7k\"\n      } ],\n      \"vpcNetwork\" : \"mwf8e3qztvutu19ku164cv8ea2cikioibletnq0vq8xn3i1wzkfcrxdkvia9wc3z9yfx9fnxwov1r1c76n4d9itqkcc2om3ladh8ftp780vblb6snvtv9qxjwzzmscwnpbdy399r8rydwvvn77lqgp2f6cr70ea9zbu735jd27\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "35fc636c-f7e7-4290-a23e-0909e43d8ea1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:31.000467Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.spokes.list",
          "schema" : {
            "description" : "The response for HubService.ListSpokes.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
                "type" : "string"
              },
              "spokes" : {
                "description" : "The requested spokes.",
                "items" : {
                  "$ref" : "#/components/schemas/Spoke"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "66605c61-12d3-47e6-8524-a85dae93ae37",
    "name" : "Creates a new internal range in a given project and location.",
    "request" : {
      "urlPath" : "/v1/771cppe1yb26ws2v6b4eob970o59vh9knbygc33zmklyg6dc73k9qvarq7wvnyv22h7mntmtasq6dwxgt82za1v420zlynunwdoq54xvie00r0c8ko8lkpqokdt1cb5ohui73nuavzopm1ku0bbzbr5ndn/internalRanges",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ruben Spinka II\",\n  \"error\" : {\n    \"code\" : 1968636125,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Delectus voluptatem ut porro. Omnis aut veritatis distinctio. Quia reiciendis blanditiis fugiat.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66605c61-12d3-47e6-8524-a85dae93ae37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.998348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.internalRanges.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "3b5a4a2d-e2ab-4c51-a251-f6d579cff068",
    "name" : "Lists internal ranges in a given project and location.",
    "request" : {
      "urlPath" : "/v1/8vhpetgnr382ynj7dllj9q1vo5acom9c1z81brhb2e1or9owof783ke33qgghocjns2vvp35bjtu80jgtzq7ik2466kovxsuhpiyedtltsyq1psk5dpvifxtt6593fs6361ucltrp3dkd8kuvetln97y79gq980g2fvg5p74a7xlq49rzxpogi8e8rt4l1kq/internalRanges",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"hpxefnb00qn98xsl2uy7jozbwvsnpiee438qiyuaxwwwnr0oni1om1pc5j8f2epx5msxibhvk7ra86m44goa7i7nrr4m3a387x7oiwh1i4tmirdhlgf37y296ip7rukx7g0fi3pvz\" ],\n  \"nextPageToken\" : \"lpis9q2dfqn17ycjk1ilkh9sveuv70dg7murc54hdc3psnt6bzdk787tpqr43tpoms185tw8lvbc1a1khs1b\",\n  \"internalRanges\" : [ {\n    \"usage\" : \"EXTERNAL_TO_VPC\",\n    \"description\" : \"Omnis tempora temporibus reiciendis. Dolore et facilis et alias voluptates non. Eveniet accusantium assumenda. Commodi atque deserunt beatae quo dicta. Sunt quo possimus laboriosam mollitia sequi.\",\n    \"updateTime\" : \"2023-02-05T13:28:30.996044Z\",\n    \"users\" : [ \"34ivfui3dlartritpxwtmaeyopxhjgw04vqc1co8i\", \"bwyvxdqyixu4zs19535rvcotgvr8eekkuxw58sql82sv7ef8cdvlewm0mfpurj14itflxdvzge442b4xywg6lnj6d5s3xp32szvd4z\", \"wjjnuoqrvoauppiyd571rjg49kqmg9qu0g36ltkfuof2rc5iwaqj7oybcpifbftnn5jo77zmi31u9yys3kge1h3yktqjcicw95\", \"z123thmqtmm3xzf04omq2wy93or5i8e7v4vagnqlqcnd6xt9i1vyf3zm6lvhc3smhodc9g54q47k2roaq2vjjm5g5fu32gojirr5avj39ojnf1jdhjxa2ykpae\", \"8zkshhf8nsri20s7lezvhsiwms0jud7akkmvo3n6x8uoktkwa7eb5p2yhjpvnw0u4asbjhsig\", \"hwx54mn2p0jfzqzjrfe6jn8c18zmrsu1tz5ea8nea69bopn5c4h8ymgg38n0cq1nd64a28o0mh7r5tt9gfth9rjdk08undguti2j6kv0atodr7i8y8quhfh2pmbg3brzuqndstues76xkb1ezwjbf6be1wvvmle8rv2x5iimjqa4x8qo5utztrfvlxp7i\", \"u3o4gdslfq272esxkm7jlrhrddyk3fky0659dofv6g6mwg6a9pll1r5o55j64xvxdagw\", \"2gbhxfzr50pto6x8t1nbxyjao06t8pydpbe12af7bbme0r8rft00vrc918sjrokgg5x8e9qiohpy4lqb0r3maiv5675m9e8hrrldlw1gakmu97pv86icq27buky0hjbwowb6c4wq5kwp1foz62znohthmz7jrq4qopxxefpyahppak0n687j72oxdlo03dfq\" ],\n    \"labels\" : { },\n    \"network\" : \"hew9wcrv7myzdn88udk2rbulxv56bpv7uwsyu7tipksuczoy0v6j9bjzlvi7yw67xelkod0ot80i172wrbjrpojypaqvhdps1wrq7m6g1oijba4dogfdz1qqb9bvbw574eu5ptgsuiaa2x3nvoqtbvt28uva5wmgs9y0c69v8cw\",\n    \"targetCidrRange\" : [ \"lmlh0pub8f6vhjjpm145lulyae379qqh9pdf5k0td3vcb4qt8acxzf7gb3shpxg1llahvkynk7g2unv6pyxqm7\", \"t98s9dr5xnu9e679vy21b3edt9wz4tcan85yqzihn3z6vkxxqq20u4598hx8lcr3nz5t14e1lt4q5nlxtejx6jym5mx87qo3ukw9ul2cmhzbmhx\", \"pbtcz19g3d5t8ljdl6ngxotmh8tj389ueffbb0jsz34ngfi2euboy6nw5tmcc5qhp9ndikymifpp37x73bfx8zdzvmcg78742tj3c3zmfed0ur63oulty9ut6v6fvmhdoqhtsim4c4msloieuqwmp208i2\" ],\n    \"prefixLength\" : 1483906900,\n    \"createTime\" : \"2022-11-27T13:07:30.996189Z\",\n    \"name\" : \"Robin Ebert DDS\",\n    \"overlaps\" : [ \"OVERLAP_UNSPECIFIED\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_ROUTE_RANGE\" ],\n    \"peering\" : \"NOT_SHARED\",\n    \"ipCidrRange\" : \"iipdvjo0k4969kq5pahb6kd7g4imm37r6aczorxzjs6z435fomydoumbcozo9ofmc68apz138cwm0nk3qj6ih6vt420ejgu9wpoaeggdhxkjp07egyzmgdgj13vf10p0h80vwpp8or0egntcu6rexmqtjztdyzvx\"\n  }, {\n    \"usage\" : \"USAGE_UNSPECIFIED\",\n    \"description\" : \"Qui itaque qui est. Ducimus quia quos rerum ipsum libero consequuntur. Laboriosam velit ipsam ut inventore voluptatem eaque. Ullam fugit aspernatur quas fuga aut.\",\n    \"updateTime\" : \"2022-06-05T14:28:30.996399Z\",\n    \"users\" : [ \"zf80e9ro8nswfukoi9v6050f9xh878g1jjty64gbbeo2jslodcfxocbdybjr7imy6nq7gcnd3e9c3khd5a11wielet4h3khhlfmzvpbkg\", \"sezxksclxps2\", \"uxxhx1c25vh9zpp03pb14ofctw16l49zaku1jdo8dmxnaux5um7x5gocu1ps9wtr4s4el818szvndbzton98pwcoqge70a0ovmgl3m5qcc8h03lr9\", \"lkh5rersbetxe0niz3i13kh7u9kt1meh7tyigwh1dhzot0g1wdlwvdv2tp762ldm9s0v72dqj4k3wb2ooj44v74irew4gm8t3pxvtp8j9h8mry2c\", \"58wcvwob0yswttbv3zwuyvkos1rojzf7znti92s2hj07wuwwv5x94xrvji594wkocqpwwxmyrhsat5b2t5ui29lsci9s2pf0oc95mgetl5ty0py197dwb4c2sajlklf2jnctswc4v12t760k5g2\", \"hneeoiqo2lp0l34wnot4tl7wfhbv56jqjofuwjasugbpapimdyayth4v5rq7twbfikxbhwp50ph1wh3u46t37wa4obh832qgk1i59hb8tihjcub9qojfr816oqfgmvyajlwoq\", \"4u5\" ],\n    \"labels\" : { },\n    \"network\" : \"xrolj25j5pf3pweohrywj60emfbg50mwqxbbcviflvd5jq1j1x20bqzegtc1ti5x2ra2ru9qyyjppz2ws5oj88qppyk66yx80ujbitpi8yp0apt19b1jd24ku6ts1b1wdxuaoq\",\n    \"targetCidrRange\" : [ \"lr0xg02emp0b400tfn12ycejii50dagscgej2lw6jamaew45t4lqy53cj9vma0ci7db52kdchos1ye4f32rzfndkp3isjg2usi6fcppk2bdpd4xp06ozr08hq3mglpuwqafdwg\", \"e4btvnzxhqt4onjrvxt2j1ofhb91hzmjracuu635oj732uf8skbttierlnye0wqn518xn2gwwg4cbu8osw9koyz613x91oifjkm9wfqxdzt81zwi5j4ez1jpd\" ],\n    \"prefixLength\" : 329581825,\n    \"createTime\" : \"2023-02-17T15:23:30.996512Z\",\n    \"name\" : \"Geoffrey Trantow\",\n    \"overlaps\" : [ \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\" ],\n    \"peering\" : \"NOT_SHARED\",\n    \"ipCidrRange\" : \"e4ysjsa1wlme91l2lan1pyzihxxr1qxnihg8jafoy3imok9h2o2kbd42n5dqdcwwtdhz4ceu13u22lo18cf94vlww43kmd08z6ear3yd13fayvzegvhq2b3c\"\n  }, {\n    \"usage\" : \"USAGE_UNSPECIFIED\",\n    \"description\" : \"Recusandae consequuntur et fugiat sequi sit alias corrupti. Laborum eos qui expedita at sit maiores. Dolores enim unde voluptatem nihil numquam praesentium voluptatibus.\",\n    \"updateTime\" : \"2023-02-10T14:21:30.996684Z\",\n    \"users\" : [ \"d1cizhknoswg4p21ff30797mlcrt4s05ft1pz99dcznz1i3egxi31nnvu8gjn30oziy6n0g8dpvsyt6p2rz7swtkkhoh82jbnho1r7nvb6t99gshhk\" ],\n    \"labels\" : { },\n    \"network\" : \"0lv9cl3vnsayp5xk5ochf2p01eveeg1c55bfsa1t8q7b9vxiz1tc8aaz3ev2l6tkv0m4bu97o8cyglwld375azath32w62brpuhehh72hi9h8k1qauew1hai2rrle816xay0ysa9g8iadfdc9tqeud29vg5a8p8\",\n    \"targetCidrRange\" : [ \"orlx2j8ejce6pld60geka6brmnvecguyqvcory7g15wdeucurjgzkz7p5t8v7mj2kx1cnu0tfliezqn3sii5wbn5ysrck4hwcu1worclpcz\", \"z268aifqtzdfsda4mtxfz42exirfo9mdatghf0z43n483grbjy43pzc06x982lr89awtz9zupua6m19epwbo0m43elwji9s18on0tfcjfvjj0ymypkiezhf4whgf7jx53ck2y06wnb3gl1kuzp9p2ck6aa6y1ylrle2v5rclcyrq6l3nrdth\", \"hft3f9frt870vtloaqunxdwcs043cr9sep\", \"hj3jxi91o2c2naizsaog9cyw6m8pubs2641ao5zj3wi3cit29\", \"41uox7hoy096cvbu3r1trb1ud7fg9di1un79kpfb20v10g9ctqc3neo8zhdt9kouk51p2q8y30estq7h5nya83sg1pvcbi85jypzscscz03rtd5awa7tniaeyf94b8e6iv4w5ycq\", \"cxhnti33vxtvtorwvm9n4841m25x8nt3wk4te7jaypele3ikcm51kbg99g6rq0v5nqu7axtqp28rukts7gr0voowq4xj456aq4glbfhxss1q8yuqezaxyoksco3p0djtr6p15imz0jslp\", \"lrq7kak8bd2v2m8ufhor4nhanfz\" ],\n    \"prefixLength\" : 194193185,\n    \"createTime\" : \"2022-08-29T15:07:30.996788Z\",\n    \"name\" : \"Earl Toy Jr.\",\n    \"overlaps\" : [ \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\" ],\n    \"peering\" : \"FOR_SELF\",\n    \"ipCidrRange\" : \"qympdieo165fy3\"\n  }, {\n    \"usage\" : \"EXTERNAL_TO_VPC\",\n    \"description\" : \"A deleniti autem eligendi soluta. Iure sed et. Asperiores explicabo atque. Qui vel id voluptates quia. Quia totam alias sed omnis quidem omnis laudantium.\",\n    \"updateTime\" : \"2022-09-21T13:18:30.996948Z\",\n    \"users\" : [ \"88w3vpnyq73hrtxa\", \"8ie7fi9dsuzdzrx09eoi6xbf4wj66yhwrpoe4iwv8e30x6b55gtd5s473znp73h9icfnytj9ycw7epqc\", \"1gdxqes6a8kh8yml5yeko13099dgxbciii6854lepwmnuyyv3srx7molq4bzs30kein1krn5w3lvunkm\", \"8nqqj912dqbv9hl3\", \"i25no2d1toq0exbni0ja1mxtg9y6xihecuhx\", \"3o1r1ygzs1aozyozakpe6ifokbk6\" ],\n    \"labels\" : { },\n    \"network\" : \"gyx4766rgdn0rjdkdejt440vipfcwenwpkkpakyp2ixk4mqalfmhkddck77e2s7izy4h9wxnqq0nv4n1ogbmz17mrl9rmf0yrmzn8u5jwbje6x6bysyvzd4luzjlpvb45fu0vlgep77syxh2f36oulpa5uygrzelch0wi\",\n    \"targetCidrRange\" : [ \"3j3g7lp54xxdb3xyoa2ytv1c6mlh7snn1svozkf8irmot4nn7ys35bi5b8unnnzbbszohe184x5p5pamcz5n18x1c0tgxsausnu0xfvtzkf317mrmpixqrvtyeg47soq0haq3pd4zbc7zr3uaoyeisi3jef\" ],\n    \"prefixLength\" : 1461010268,\n    \"createTime\" : \"2022-03-27T15:07:30.997039Z\",\n    \"name\" : \"Launa Bode\",\n    \"overlaps\" : [ \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_UNSPECIFIED\" ],\n    \"peering\" : \"PEERING_UNSPECIFIED\",\n    \"ipCidrRange\" : \"0vmt03hipybdag2xl1p40p6klrq1fer4u5sk0fdl3f224jj4phui601op72sl71s38p11e3affs8zc620d7e8q3jfs3iwufcnoc2w2aow6ioxxc65nuhwl4hz9b9exltpuy4wczjkrghes0see5vgk9u0zx7li0hi6oa9158bnft0zb\"\n  }, {\n    \"usage\" : \"EXTERNAL_TO_VPC\",\n    \"description\" : \"Id fugit error et rerum voluptatum aut quis. Perspiciatis eum explicabo commodi suscipit. Minus officiis amet pariatur et enim consequuntur. Corporis deserunt placeat deserunt veritatis sit ut alias. \",\n    \"updateTime\" : \"2022-08-01T12:13:30.99727Z\",\n    \"users\" : [ \"qvw9uddas69g0dk9csoj2o8fz35xblx2po3ecmeo4tyt6q12ubjzvm09iobr51sijj8ycephq09eorsik2at06fky1ppc1c3mju6fumbkhz0h2ieud0genisy6gccbt9opdah30st433q5ms1f1hkb\" ],\n    \"labels\" : { },\n    \"network\" : \"15acnqymhcpn20wt5wi83lpfy0wuv4s9zd29rn3qx1v583n99rmmq5f9\",\n    \"targetCidrRange\" : [ \"73c98xc831ldpccgciup2oqjb24x4p6za7mnjezi72tqn6opjfpgd2\", \"nhqw233mssj1u31o4ts0mpkirv0c37f74xg56y43s871re79lv2ia6wmz4kg1ebdeq3prdb3tzs2auvu50muydmr3qfnfdrx811u21hewl24nk0mrikl4jatyhhdcrzrji785pcv558f70fuvsnhuasntopnq\", \"g9u3pugvpncfi7a8m449pios361xp84k164opnph5ey2hhjk9pq5k1hgc78iobpw\", \"k7mt2iqoob1ebr7qn22osp3fnyma8py2sdk7fb9vbn7spyo529b5z8p025fascqdvp0g1ae7kvwfpr0a8f3ahzmkh3to44rurj5b851o9bf96en\", \"vemkumjf3l85vw5cizgkdnbwx4csrewzhcpe74uzr6p0zg5axf\", \"kl52uw7gdpqxmwcel2w8edmbot8hcra01zav0szgrt5f50usxanzfmhd3ir2r0ai63oxou6alqlhqfs2qelm66ps9o6lraco1vjq115jnd0ah4vngg251140oqhgnjxxjc8gzd0q5u8d3zjvr9n8s7osxnkln1cz\", \"hxgsm92x17u2pxu3veut1qa6qvnuc7so2nvs23w569pgkslvsxz4bginhh7jz6fmou\" ],\n    \"prefixLength\" : 1055494112,\n    \"createTime\" : \"2023-03-09T13:21:30.997491Z\",\n    \"name\" : \"Marylee McClure\",\n    \"overlaps\" : [ \"OVERLAP_UNSPECIFIED\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_ROUTE_RANGE\" ],\n    \"peering\" : \"FOR_PEER\",\n    \"ipCidrRange\" : \"mbygwxvzsfvahvt2wnt2m72x3q0njvk4sztvc13ujfrzmd7i45oe2omzv0ny5zc9rkxh85oslgih7gqkwhbsw59ncdfw23kc0trjozi753csma3qzw284te2pmcxzn3fbrkx9m4nxwdz9plae50dq79bv758zvldv5\"\n  }, {\n    \"usage\" : \"USAGE_UNSPECIFIED\",\n    \"description\" : \"Sed optio eum. Eum magni alias in. Quo sapiente ad expedita quia placeat. Nobis error debitis sunt.\",\n    \"updateTime\" : \"2022-03-27T12:15:30.997674Z\",\n    \"users\" : [ \"a4fkfrgngde\" ],\n    \"labels\" : { },\n    \"network\" : \"ls7dxfzvnwvhlamiumnlxb2ffsjnb9tybqwmrk5hm2368x3sog7ukkgc30uxb5jii97qbus2jluonw4pi2d633y5zht551m2jii1rnddzsvjexna7b3fngznt2471vfc38rt88s67wpf025\",\n    \"targetCidrRange\" : [ \"d8gtyzcidpq2ldc85klx1ykz74aa2yw7nogzo7jkey3rc676b3sgf0xw8eb7weej6m3pqbypkh510rc4vl5azo06l1rf7ubku6i\", \"0x51j4xnpwqk9k6nsj5njzts3lds\", \"ygxzfmfuxaafy0h36bw7mivr\", \"pholb5x9akyrytsuzpxrh4oc4mf0mni042p\" ],\n    \"prefixLength\" : 99319833,\n    \"createTime\" : \"2022-11-15T12:23:30.997753Z\",\n    \"name\" : \"Miss Genna Fay\",\n    \"overlaps\" : [ \"OVERLAP_UNSPECIFIED\", \"OVERLAP_UNSPECIFIED\", \"OVERLAP_ROUTE_RANGE\", \"OVERLAP_ROUTE_RANGE\" ],\n    \"peering\" : \"NOT_SHARED\",\n    \"ipCidrRange\" : \"nmneli9ybfx6ug8fck24t22rddcn3orjn3uyguumsen7ejd6f2lor832uz7e2r9cua3ulyla7ocr5zkblq1nsvt0f57jhpcc7dehzevqvkwty0rsxilmgh\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b5a4a2d-e2ab-4c51-a251-f6d579cff068",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.998033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.internalRanges.list",
          "schema" : {
            "description" : "Response for InternalRange.ListInternalRanges",
            "properties" : {
              "internalRanges" : {
                "description" : "Internal ranges to be returned.",
                "items" : {
                  "$ref" : "#/components/schemas/InternalRange"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The next pagination token in the List response. It should be used as page_token for the following request. An empty value means no more result.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "a17e6f42-a64b-47ca-adf8-c37b6a00a5e4",
    "name" : "Creates a new Network Connectivity Center hub in the specified project.",
    "request" : {
      "urlPath" : "/v1/x6bid7ptd43x82scb6peliho/hubs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Evan Mitchell\",\n  \"error\" : {\n    \"code\" : 246831228,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Corporis sint et et et. Voluptates iure dolorem vero quia consequatur quaerat quam. Provident sint totam non consequuntur voluptatem.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a17e6f42-a64b-47ca-adf8-c37b6a00a5e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.995886Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.global.hubs.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "3d339d1f-f310-4bdc-926a-96e4b392eca5",
    "name" : "Lists the Network Connectivity Center hubs associated with a given project.",
    "request" : {
      "urlPath" : "/v1/rxuogn025u4nszjv091t3g41oa776n1y8bpid39/hubs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"gfx93jdd7bwxyevbcwxd8hb3ucglcmkqs6ttxglxaeb85fklvm6a589pjuyr1p98o5f26d6bihhmnufidbv8r128ngeu7hrmcwwc2\", \"9jujghkmdn49p8ti17ul71j5t3s3kbhks5sdexnmx4p0y9o44b9q7lbi5573teuiho5y2ep2b4v6enncsjxzw05vu0ws\", \"25ett737ga053lwwoo1ba52w8w9ui7sistgxos46mnwhb\" ],\n  \"nextPageToken\" : \"m32sn\",\n  \"hubs\" : [ {\n    \"createTime\" : \"2023-02-13T14:43:30.991294Z\",\n    \"routingVpcs\" : [ {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/201132\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/243039\"\n    } ],\n    \"name\" : \"Emanuel Rempel\",\n    \"description\" : \"Quaerat quae magnam sed expedita odio. Numquam ipsam et similique. Officiis cupiditate deserunt pariatur provident. Doloremque minima laborum neque veritatis. Sed dolores esse debitis repellat molesti\",\n    \"updateTime\" : \"2022-04-02T12:11:30.991555Z\",\n    \"state\" : \"ACTIVE\",\n    \"uniqueId\" : \"s675\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-08-16T11:47:30.991674Z\",\n    \"routingVpcs\" : [ {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/505264\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/805642\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/332125\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/765126\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/616499\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/665066\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/953434\"\n    } ],\n    \"name\" : \"Danny Shanahan\",\n    \"description\" : \"Exercitationem laboriosam et voluptate autem assumenda voluptatum modi. Ea quia eum dolor expedita id. Non rerum magni dolores adipisci.\",\n    \"updateTime\" : \"2022-10-11T15:13:30.992227Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"uniqueId\" : \"6401\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-02-05T14:03:30.992342Z\",\n    \"routingVpcs\" : [ {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/836868\"\n    } ],\n    \"name\" : \"Cathryn Flatley\",\n    \"description\" : \"Et occaecati error recusandae ipsam. Id ab nulla qui. Temporibus modi est delectus.\",\n    \"updateTime\" : \"2022-09-15T15:15:30.992504Z\",\n    \"state\" : \"UPDATING\",\n    \"uniqueId\" : \"0944\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2023-03-09T13:30:30.992622Z\",\n    \"routingVpcs\" : [ {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/609181\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/808375\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/616043\"\n    } ],\n    \"name\" : \"Antwan Littel\",\n    \"description\" : \"Officia voluptas nostrum est quia repellat. Cupiditate dolorum aut cupiditate quia earum dolorum voluptatem. Error praesentium sint voluptatem est temporibus vel fuga. Maiores a qui eos non ducimus.\",\n    \"updateTime\" : \"2022-11-13T14:57:30.99292Z\",\n    \"state\" : \"UPDATING\",\n    \"uniqueId\" : \"oir9\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-04-01T14:21:30.993034Z\",\n    \"routingVpcs\" : [ {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/624947\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/815446\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/927299\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/131421\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/308308\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/584103\"\n    } ],\n    \"name\" : \"Ms. Debi Hudson\",\n    \"description\" : \"Dignissimos quasi adipisci molestiae repudiandae. Debitis voluptates autem. Reprehenderit vel cum culpa. Nihil saepe nihil.\",\n    \"updateTime\" : \"2022-08-14T12:55:30.993521Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"uniqueId\" : \"uq79\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-06-01T12:18:30.993636Z\",\n    \"routingVpcs\" : [ {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/387552\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/151132\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/208581\"\n    } ],\n    \"name\" : \"Donella Padberg\",\n    \"description\" : \"Enim eum aut quisquam. Et consectetur voluptatem. Necessitatibus in non. Sed aut doloremque. Voluptas dolorem enim ut repellendus cum.\",\n    \"updateTime\" : \"2022-12-13T11:57:30.993966Z\",\n    \"state\" : \"ACTIVE\",\n    \"uniqueId\" : \"b927\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-10-14T14:38:30.994088Z\",\n    \"routingVpcs\" : [ {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/614654\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/084904\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/300787\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/610548\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/378090\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/170162\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/630833\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/566170\"\n    } ],\n    \"name\" : \"Willy Hauck\",\n    \"description\" : \"Quis sed mollitia autem. Neque quaerat rerum voluptates ut eum velit. Molestiae maiores tempora. Velit fugit porro repudiandae non tempore excepturi.\",\n    \"updateTime\" : \"2022-12-29T14:17:30.994745Z\",\n    \"state\" : \"UPDATING\",\n    \"uniqueId\" : \"1h9n\",\n    \"labels\" : { }\n  }, {\n    \"createTime\" : \"2022-05-27T12:57:30.994868Z\",\n    \"routingVpcs\" : [ {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/401319\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : true,\n      \"uri\" : \"https://web.example.mocklab.io/194111\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/400608\"\n    }, {\n      \"requiredForNewSiteToSiteDataTransferSpokes\" : false,\n      \"uri\" : \"https://web.example.mocklab.io/402589\"\n    } ],\n    \"name\" : \"Eusebio Bernhard\",\n    \"description\" : \"Consequatur officia saepe eaque. Minima impedit sequi repudiandae optio. Architecto nisi odio consectetur omnis.\",\n    \"updateTime\" : \"2022-07-21T14:23:30.99526Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"uniqueId\" : \"1196\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d339d1f-f310-4bdc-926a-96e4b392eca5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.995561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.global.hubs.list",
          "schema" : {
            "description" : "Response for HubService.ListHubs method.",
            "properties" : {
              "hubs" : {
                "description" : "The requested hubs.",
                "items" : {
                  "$ref" : "#/components/schemas/Hub"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The token for the next page of the response. To see more results, use this value as the page_token for your next request. If this value is empty, there are no more results.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "0439018d-94c9-42a7-bda2-9d486a9a773d",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Burl+Boyer+MD:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0439018d-94c9-42a7-bda2-9d486a9a773d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.991193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "efa069ce-4f73-4131-b4ea-3259e025aa21",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Shandi+Harber/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Lorina Herman\",\n    \"error\" : {\n      \"code\" : 921888839,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Placeat harum nesciunt. Repellat eveniet eos et sit et quaerat optio. Consequatur ducimus molestiae voluptas natus. Est doloremque rerum aut distinctio.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Taren Kuphal\",\n    \"error\" : {\n      \"code\" : 633390528,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Cum distinctio a est doloribus culpa aut. Unde illo voluptatem ab quos. Necessitatibus sed officiis occaecati praesentium similique. Velit explicabo id consectetur tempore facilis earum libero. Aliqui\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mrs. Celinda Vandervort\",\n    \"error\" : {\n      \"code\" : 251531437,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Cum a rerum esse quos et. A necessitatibus repudiandae qui consequatur delectus quis quo. Nemo ut nostrum saepe quos sequi.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Angelic Bode\",\n    \"error\" : {\n      \"code\" : 2107779760,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Maiores in ut ab est distinctio quis. Fugiat est expedita nihil quia vel. Sunt natus est totam iure nihil.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Emerald Rodriguez\",\n    \"error\" : {\n      \"code\" : 947960068,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Earum nihil tempore ut accusantium iste quae suscipit. Et atque vel eveniet porro deserunt. Iusto eos dolor.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"h9gjn16c36if5j2bw2evp1qn6lif0khlqu7ebii2lsg6ctku5lyud1py710vhr4q4gywmzg0nfzz7il62zwza1sn521kpfkmkr4k63dcadbtkhxemw0vdprcbbs2r4ej2vaitsco8yzeqkce652xypa3e46jd9cydxgf5n0ic1keopzh9dhfhgdmp9uodbgc9cm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efa069ce-4f73-4131-b4ea-3259e025aa21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.991093Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "13ff88e0-ffe9-4626-a751-3a8ea486f6ca",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Ernest+Lueilwitz/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"peiwid1olhyrczc2487jn824prkdddgctqrpyt0tace2166a385k5xq0ygpe9o\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Deirdre Hessel\",\n    \"locationId\" : \"evdk\",\n    \"name\" : \"Davis Denesik\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Parker Prohaska DDS\",\n    \"locationId\" : \"621i\",\n    \"name\" : \"Wilton Kris\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Tamar Greenfelder\",\n    \"locationId\" : \"5f98\",\n    \"name\" : \"Mitsue Quigley\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mrs. Ray Blanda\",\n    \"locationId\" : \"47pt\",\n    \"name\" : \"Rafael Rath\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Rosalee Pollich Sr.\",\n    \"locationId\" : \"15k7\",\n    \"name\" : \"Deedee Wunsch\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ena Schmitt\",\n    \"locationId\" : \"3u1n\",\n    \"name\" : \"Jay Flatley\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ambrose Lindgren DVM\",\n    \"locationId\" : \"w96u\",\n    \"name\" : \"Max Schmidt DVM\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13ff88e0-ffe9-4626-a751-3a8ea486f6ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.990364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "19a56cd4-e647-4ebb-908a-aa6f51064ed9",
    "name" : "Updates the parameters of a Network Connectivity Center spoke.",
    "request" : {
      "urlPath" : "/v1/Kevin+Metz",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Shirleen Corwin\",\n  \"error\" : {\n    \"code\" : 271331967,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Tempore molestiae corporis labore. Provident qui nemo facilis. Doloremque quod ipsum impedit minus nesciunt quis nisi. Nihil praesentium sit rerum deleniti neque odio similique. Accusantium ea ea quam\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19a56cd4-e647-4ebb-908a-aa6f51064ed9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.989071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.spokes.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "a5f8cac6-cce2-4477-b692-2efd4582c8a3",
    "name" : "Gets details about a Network Connectivity Center spoke.",
    "request" : {
      "urlPath" : "/v1/Miss+Mellissa+Bashirian",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"hub\" : \"4mzr9tkk\",\n  \"createTime\" : \"2022-10-07T14:50:30.98808Z\",\n  \"linkedVpnTunnels\" : {\n    \"uris\" : [ \"wce65rphei0rjibyhrnxtk9reso0t0\", \"0otpqu74ovyt51hh9e7p10llbo8p5kxyo6ngws\", \"f0j8pkejqbzakvibiyx3su0ayymhfzxn4a5n5xug0dtbgu2p1731j27hx0aylm23antl56ih4k8vcb2oby5sgkhpfpec9salwkdaz3yd6rqvt82i3alouprepwzvz20xjkaytngl57iwuz7l6sopl77pnyv\", \"x9zol0nip4dfcneuxt2mg70a6rz06mwm8bkrbgbsjc1bh0cq80a5c\", \"agdgnzdve2cn9q0tgobqt8ibp78xz4gc1bm2vyczkauwjm91irld28i64prhoku3k7g10x26cvn8kzhf7lyqfbb6yvnlunec3s9e2wr1y7nizl9tyfb3rjopc1420kr9kj08py6dhtargjghd3czz4i6y85jlchg1q9basrcadju\", \"vrecis\", \"ctv03arywe1d47963q847y91av4p42r4s1n3xtevy2la6zxamy2sdv46vybab777uqm1ogs9a9hjzkt59mqlzeoik2lgzj8mu2veysyg1sxjz0tdnmmu60ttec4zdu5540g0z1wgb99qr9zoem8zx1o7xeagbqgo0oc1ha1doil96n0k4zb9kgowomp675d2tqyl\" ],\n    \"siteToSiteDataTransfer\" : false,\n    \"vpcNetwork\" : \"o8x0xqkpfouyt3ni8px2feh2dtp0dh2mkzqwrfdbfmerdp6w8p0r60vrgx9y9lh06g1g3wyle8gvy1pu3q3q9pf23zief9mgfqk6ikmmincwudhw9lwt27ca1wusnr296blbt5huw2mwfjmbpt9tzjzfz3ak51wa1fin\"\n  },\n  \"name\" : \"Paul Herzog\",\n  \"description\" : \"Et corrupti amet. Iste omnis animi debitis deserunt consequatur provident ipsa. Alias fuga dolor qui non enim.\",\n  \"updateTime\" : \"2022-08-06T14:21:30.988283Z\",\n  \"state\" : \"CREATING\",\n  \"linkedInterconnectAttachments\" : {\n    \"uris\" : [ \"n1vw4z7p2bgyezrbjpy\" ],\n    \"siteToSiteDataTransfer\" : true,\n    \"vpcNetwork\" : \"rn33owkh3rqn6w74yoxpkfj4siq8sz9zmiiwjceot37z4i0gy9m49wy1qwn0ra6xc1tfjgyvshlv1tt883blaowjqdzt7afh2gzimh8l6jv3dis52jrfyvf7cqcxbpysbqk8hzb0dn9snwzzymbees11odsckzd66ppmr5t6rjghsbs6nup3acf8\"\n  },\n  \"uniqueId\" : \"8gjh\",\n  \"labels\" : { },\n  \"linkedRouterApplianceInstances\" : {\n    \"siteToSiteDataTransfer\" : true,\n    \"instances\" : [ {\n      \"virtualMachine\" : \"tl3q9j1l06eti9eob1tyllktc3uk5kdywrz8r4jotktx077i8zbic8qmawajiw8c4mkn8quc07jaxadnenghr9euuhec\",\n      \"ipAddress\" : \"b6vurzcp4x245hgmcixw1q2wfpaejcnwyg82jz4\"\n    }, {\n      \"virtualMachine\" : \"ge0dppw\",\n      \"ipAddress\" : \"d9agd8nif0m3ha6a7vg7c94dxpwbucrziv8c3gmvqustxp20azmbej\"\n    }, {\n      \"virtualMachine\" : \"z67190245m8fnn6vopa6h8vprhx6s9r5jyvva6bz577x8rocljto8j110ffj61afmw5mfgwtsb1xlgl6jj404i4qrbm7zur2x9hlv3zik3jz6431b3rg1ncxsgzoj69sm10iy\",\n      \"ipAddress\" : \"zu6npe2pqc8pkzcgbfo12iskk9cunuwcbg96x7r5qe7pc36t9hrwr1qwovavq9me36tvnh0b7pc07d11rphswjq1m4c51cjil567zccwra4ewh0xao\"\n    }, {\n      \"virtualMachine\" : \"f11vcrquscq1uxf77459z0c8hd4iadmpalfcl8i7hhfexzfhgpczcodl8mkrxp4uc1lp3ril3fuz10gu40qr6n6a9a22ah5slcflrr3ywlp5tkjr6018y6o33zkvquu40qpcnh9hhji3t\",\n      \"ipAddress\" : \"48fl0fa418wmg5ood4xlvsj04invebjat4tjpvu1st0dyaa55uc6hbkl0y79jq0kllu6oid0jal73qka79eu6fp3rcec5ovv59os2862jyr386sde8l9hc7x9gg7xcr8l8i7tdqa4mmrf35sfnylraxstdtr1e0yspw8z5ww\"\n    } ],\n    \"vpcNetwork\" : \"uo9yt49zruu9m2mnnys5o3rrclrqiw7q3fhbx7ruclyw\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5f8cac6-cce2-4477-b692-2efd4582c8a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.988804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.spokes.get",
          "schema" : {
            "description" : "A Network Connectivity Center spoke represents one or more network connectivity resources. When you create a spoke, you associate it with a hub. You must also identify a value for exactly one of the following fields: * linked_vpn_tunnels * linked_interconnect_attachments * linked_router_appliance_instances",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time the spoke was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "An optional description of the spoke.",
                "type" : "string"
              },
              "hub" : {
                "description" : "Immutable. The name of the hub that this spoke is attached to.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional labels in key:value format. For more information about labels, see [Requirements for labels](https://cloud.google.com/resource-manager/docs/creating-managing-labels#requirements).",
                "type" : "object"
              },
              "linkedInterconnectAttachments" : {
                "$ref" : "#/components/schemas/LinkedInterconnectAttachments"
              },
              "linkedRouterApplianceInstances" : {
                "$ref" : "#/components/schemas/LinkedRouterApplianceInstances"
              },
              "linkedVpnTunnels" : {
                "$ref" : "#/components/schemas/LinkedVpnTunnels"
              },
              "name" : {
                "description" : "Immutable. The name of the spoke. Spoke names must be unique. They use the following form: `projects/{project_number}/locations/{region}/spokes/{spoke_id}`",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. The current lifecycle state of this spoke.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "ACTIVE", "DELETING", "UPDATING" ],
                "readOnly" : true,
                "type" : "string"
              },
              "uniqueId" : {
                "description" : "Output only. The Google-generated UUID for the spoke. This value is unique across all spoke resources. If a spoke is deleted and another with the same name is created, the new spoke is assigned a different unique_id.",
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. The time the spoke was last updated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "e114314e-f556-4f9d-a58d-2fa6241df018",
    "name" : "Deletes a Network Connectivity Center spoke.",
    "request" : {
      "urlPath" : "/v1/Hisako+Greenholt",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Rigoberto Padberg\",\n  \"error\" : {\n    \"code\" : 1716316349,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Odio velit vero. Dolores sunt officia autem laborum praesentium. Et ullam corrupti. Veniam excepturi autem nulla a.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e114314e-f556-4f9d-a58d-2fa6241df018",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:30.987974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "networkconnectivity.projects.locations.spokes.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/GoogleRpcStatus"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  } ]
}