{
  "mappings" : [ {
    "id" : "7d33a3b9-e53a-32bc-84f1-55bf5fb91f67",
    "name" : "Update inventory (application/xml)",
    "request" : {
      "urlPath" : "/v3/inventory",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      },
      "queryParameters" : {
        "sku" : {
          "equalTo" : "f09qqg5g94x81mwv76ap1x45lj7x4fp0jmdqbe3pyx92yjhgnpa9ssv6v67ag4g68tbw5rkeqg33iwalpubmasa095ofkn83yuj04cnj0ls6cm6b3zkljf6czdn19gx347t8cgwwr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<inventory xmlns=\"http://walmart.com/\">\n    <sku>97964_KFTest</sku>\n    <quantity>\n        <unit>EACH</unit>\n        <amount>3</amount>\n    </quantity>\n</inventory>",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "7d33a3b9-e53a-32bc-84f1-55bf5fb91f67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateInventoryForAnItem",
          "schema" : {
            "properties" : {
              "quantity" : {
                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                "properties" : {
                  "amount" : {
                    "description" : "Inventory Count",
                    "type" : "number"
                  },
                  "unit" : {
                    "description" : "The unit of measurement. Example: 'EACH'",
                    "enum" : [ "EACH" ],
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "unit" ],
                "type" : "object"
              },
              "sku" : {
                "description" : "A seller-provided Product ID. Response will have decoded value.",
                "type" : "string"
              }
            },
            "required" : [ "quantity", "sku" ],
            "type" : "object",
            "xml" : {
              "name" : "inventory"
            }
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "45d860df-42cf-3645-a329-f64d292bee27",
    "name" : "Update inventory (application/json)",
    "request" : {
      "urlPath" : "/v3/inventory",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "sku" : {
          "equalTo" : "8pjorkkxsw5j5980as7f5i5n9el6oe88gzk20r1a8wohyw8w1ccgsqo5t30mg5r3uaaznij9v7hv6gmf4f9qwgbfdscsejyzi6d80osrewpie80av58zcs6ladsxxfn9l4idg7az3jq2e28j5br1dukspvcg1rwc9rslb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"quantity\" : {\n    \"amount\" : 10,\n    \"unit\" : \"EACH\"\n  },\n  \"sku\" : \"97964_KFTest\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45d860df-42cf-3645-a329-f64d292bee27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateInventoryForAnItem",
          "schema" : {
            "properties" : {
              "quantity" : {
                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                "properties" : {
                  "amount" : {
                    "description" : "Inventory Count",
                    "type" : "number"
                  },
                  "unit" : {
                    "description" : "The unit of measurement. Example: 'EACH'",
                    "enum" : [ "EACH" ],
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "unit" ],
                "type" : "object"
              },
              "sku" : {
                "description" : "A seller-provided Product ID. Response will have decoded value.",
                "type" : "string"
              }
            },
            "required" : [ "quantity", "sku" ],
            "type" : "object",
            "xml" : {
              "name" : "inventory"
            }
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "0d935e09-220d-3447-9b69-3828f57f8cec",
    "name" : "Inventory (application/xml)",
    "request" : {
      "urlPath" : "/v3/inventory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      },
      "queryParameters" : {
        "sku" : {
          "equalTo" : "87cd36r4buqq53"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<inventory xmlns=\"http://walmart.com/\">\n    <sku>97964_KFTest</sku>\n    <quantity>\n        <unit>EACH</unit>\n        <amount>10</amount>\n    </quantity>\n</inventory>",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "0d935e09-220d-3447-9b69-3828f57f8cec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getInventory",
          "schema" : {
            "properties" : {
              "quantity" : {
                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                "properties" : {
                  "amount" : {
                    "description" : "Inventory Count",
                    "type" : "number"
                  },
                  "unit" : {
                    "description" : "The unit of measurement. Example: 'EACH'",
                    "enum" : [ "EACH" ],
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "unit" ],
                "type" : "object"
              },
              "sku" : {
                "description" : "A seller-provided Product ID. Response will have decoded value.",
                "type" : "string"
              }
            },
            "required" : [ "quantity", "sku" ],
            "type" : "object",
            "xml" : {
              "name" : "inventory"
            }
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "bdae48ee-1dda-3e58-8f9b-95c6e9cbcecf",
    "name" : "Inventory (application/json)",
    "request" : {
      "urlPath" : "/v3/inventory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "sku" : {
          "equalTo" : "sbzxggkkftxy39srmik8gvsn3lrmnjq7y"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"quantity\" : {\n    \"amount\" : 10,\n    \"unit\" : \"EACH\"\n  },\n  \"sku\" : \"97964_KFTest\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdae48ee-1dda-3e58-8f9b-95c6e9cbcecf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getInventory",
          "schema" : {
            "properties" : {
              "quantity" : {
                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                "properties" : {
                  "amount" : {
                    "description" : "Inventory Count",
                    "type" : "number"
                  },
                  "unit" : {
                    "description" : "The unit of measurement. Example: 'EACH'",
                    "enum" : [ "EACH" ],
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "unit" ],
                "type" : "object"
              },
              "sku" : {
                "description" : "A seller-provided Product ID. Response will have decoded value.",
                "type" : "string"
              }
            },
            "required" : [ "quantity", "sku" ],
            "type" : "object",
            "xml" : {
              "name" : "inventory"
            }
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "e34981b4-00c6-320e-a2a9-378658280f8a",
    "name" : "Update Item Inventory per Ship Node",
    "request" : {
      "urlPath" : "/v3/inventories/islyo607t6cvsclk7czt6fpy9yx8ixtg1r1nptg8h12yfwzmcnn9dleyua0uu59te2c2jvfxj1h4kzvrd500aj7c7drl",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nodes\" : [ {\n    \"shipNode\" : \"1000005050\",\n    \"status\" : \"Success\"\n  }, {\n    \"shipNode\" : \"79897837271126017\",\n    \"status\" : \"Success\"\n  } ],\n  \"sku\" : \"00757642886669_test_01\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e34981b4-00c6-320e-a2a9-378658280f8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateMultiNodeInventory",
          "schema" : {
            "properties" : {
              "nodes" : {
                "items" : {
                  "properties" : {
                    "errors" : {
                      "description" : "Node Update Error description.",
                      "items" : {
                        "properties" : {
                          "category" : {
                            "enum" : [ "APPLICATION", "SYSTEM", "REQUEST", "DATA" ],
                            "type" : "string"
                          },
                          "causes" : {
                            "items" : {
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "description" : {
                                  "type" : "string"
                                },
                                "field" : {
                                  "type" : "string"
                                },
                                "type" : {
                                  "type" : "string"
                                }
                              },
                              "type" : "object",
                              "xml" : {
                                "name" : "Cause"
                              }
                            },
                            "type" : "array",
                            "xml" : {
                              "wrapped" : true
                            }
                          },
                          "code" : {
                            "type" : "string"
                          },
                          "description" : {
                            "type" : "string"
                          },
                          "errorIdentifiers" : {
                            "additionalProperties" : {
                              "type" : "object"
                            },
                            "type" : "object"
                          },
                          "field" : {
                            "type" : "string"
                          },
                          "info" : {
                            "type" : "string"
                          },
                          "severity" : {
                            "enum" : [ "INFO", "WARN", "ERROR" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "code" ],
                        "type" : "object",
                        "xml" : {
                          "name" : "Error"
                        }
                      },
                      "type" : "array"
                    },
                    "shipNode" : {
                      "description" : "ShipNode Id of the ship node for which the inventory is requested",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Node Update status. Example: 'Success'",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "sku" : {
                "description" : "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f38f7928-1d88-3cf6-9b5d-798445395906",
    "name" : "Single Item Inventory by Ship Node",
    "request" : {
      "urlPath" : "/v3/inventories/tn1gssmx5twmy9cnf5tcgj36xhmei2vhuec2k34e7hankyzx",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nodes\" : [ {\n    \"availToSellQty\" : {\n      \"amount\" : 3,\n      \"unit\" : \"EACH\"\n    },\n    \"inputQty\" : {\n      \"amount\" : 5,\n      \"unit\" : \"EACH\"\n    },\n    \"reservedQty\" : {\n      \"amount\" : 2,\n      \"unit\" : \"EACH\"\n    },\n    \"shipNode\" : \"100009\"\n  } ],\n  \"sku\" : \"AR-CTIX-0092\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f38f7928-1d88-3cf6-9b5d-798445395906",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getMultiNodeInventoryForSkuAndAllShipnodes",
          "schema" : {
            "properties" : {
              "nodes" : {
                "items" : {
                  "properties" : {
                    "availToSellQty" : {
                      "description" : "Quantity of an item that is available to be allocated to orders",
                      "properties" : {
                        "amount" : {
                          "description" : "Inventory Count",
                          "type" : "number"
                        },
                        "unit" : {
                          "description" : "The unit of measurement. Example: 'EACH'",
                          "enum" : [ "EACH" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "amount", "unit" ],
                      "type" : "object"
                    },
                    "errors" : {
                      "items" : {
                        "properties" : {
                          "category" : {
                            "enum" : [ "APPLICATION", "SYSTEM", "REQUEST", "DATA" ],
                            "type" : "string"
                          },
                          "causes" : {
                            "items" : {
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "description" : {
                                  "type" : "string"
                                },
                                "field" : {
                                  "type" : "string"
                                },
                                "type" : {
                                  "type" : "string"
                                }
                              },
                              "type" : "object",
                              "xml" : {
                                "name" : "Cause"
                              }
                            },
                            "type" : "array",
                            "xml" : {
                              "wrapped" : true
                            }
                          },
                          "code" : {
                            "type" : "string"
                          },
                          "description" : {
                            "type" : "string"
                          },
                          "errorIdentifiers" : {
                            "additionalProperties" : {
                              "type" : "object"
                            },
                            "type" : "object"
                          },
                          "field" : {
                            "type" : "string"
                          },
                          "info" : {
                            "type" : "string"
                          },
                          "severity" : {
                            "enum" : [ "INFO", "WARN", "ERROR" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "code" ],
                        "type" : "object",
                        "xml" : {
                          "name" : "Error"
                        }
                      },
                      "type" : "array"
                    },
                    "inputQty" : {
                      "description" : "Quantity of an item that is input by the seller",
                      "properties" : {
                        "amount" : {
                          "description" : "Inventory Count",
                          "type" : "number"
                        },
                        "unit" : {
                          "description" : "The unit of measurement. Example: 'EACH'",
                          "enum" : [ "EACH" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "amount", "unit" ],
                      "type" : "object"
                    },
                    "reservedQty" : {
                      "description" : "Quantity that has been ordered by the customers but not yet shipped",
                      "properties" : {
                        "amount" : {
                          "description" : "Inventory Count",
                          "type" : "number"
                        },
                        "unit" : {
                          "description" : "The unit of measurement. Example: 'EACH'",
                          "enum" : [ "EACH" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "amount", "unit" ],
                      "type" : "object"
                    },
                    "shipNode" : {
                      "description" : "ShipNode Id of the ship node for which the inventory is requested",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "sku" : {
                "description" : "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "da8a08ca-f072-37a1-9b80-42c92de03b68",
    "name" : "Multiple Item Inventory for All Ship Nodes",
    "request" : {
      "urlPath" : "/v3/inventories",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"elements\" : {\n    \"inventories\" : [ {\n      \"nodes\" : [ {\n        \"availToSellQty\" : {\n          \"amount\" : 93,\n          \"unit\" : \"EACH\"\n        },\n        \"inputQty\" : {\n          \"amount\" : 93,\n          \"unit\" : \"EACH\"\n        },\n        \"reservedQty\" : {\n          \"amount\" : 0,\n          \"unit\" : \"EACH\"\n        },\n        \"shipNode\" : \"361451354333223041\"\n      }, {\n        \"availToSellQty\" : {\n          \"amount\" : 433,\n          \"unit\" : \"EACH\"\n        },\n        \"inputQty\" : {\n          \"amount\" : 436,\n          \"unit\" : \"EACH\"\n        },\n        \"reservedQty\" : {\n          \"amount\" : 3,\n          \"unit\" : \"EACH\"\n        },\n        \"shipNode\" : \"100009\"\n      } ],\n      \"sku\" : \"AI-IGH4-5509\"\n    }, {\n      \"nodes\" : [ {\n        \"availToSellQty\" : {\n          \"amount\" : 0,\n          \"unit\" : \"EACH\"\n        },\n        \"inputQty\" : {\n          \"amount\" : 5,\n          \"unit\" : \"EACH\"\n        },\n        \"reservedQty\" : {\n          \"amount\" : 5,\n          \"unit\" : \"EACH\"\n        },\n        \"shipNode\" : \"100009\"\n      } ],\n      \"sku\" : \"06397309545443\"\n    } ]\n  },\n  \"meta\" : {\n    \"nextCursor\" : \"NTVmZjIxOWEtZjRkMy00MGIwLThkOGYtYzFkNzI1NGZlYmQxIDEw\",\n    \"totalCount\" : 123\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da8a08ca-f072-37a1-9b80-42c92de03b68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getMultiNodeInventoryForAllSkuAndAllShipNodes",
          "schema" : {
            "properties" : {
              "elements" : {
                "properties" : {
                  "inventories" : {
                    "items" : {
                      "properties" : {
                        "nodes" : {
                          "items" : {
                            "properties" : {
                              "availToSellQty" : {
                                "description" : "Quantity of an item that is available to be allocated to orders",
                                "properties" : {
                                  "amount" : {
                                    "description" : "Inventory Count",
                                    "type" : "number"
                                  },
                                  "unit" : {
                                    "description" : "The unit of measurement. Example: 'EACH'",
                                    "enum" : [ "EACH" ],
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "amount", "unit" ],
                                "type" : "object"
                              },
                              "inputQty" : {
                                "description" : "Quantity of an item that is input by the seller",
                                "properties" : {
                                  "amount" : {
                                    "description" : "Inventory Count",
                                    "type" : "number"
                                  },
                                  "unit" : {
                                    "description" : "The unit of measurement. Example: 'EACH'",
                                    "enum" : [ "EACH" ],
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "amount", "unit" ],
                                "type" : "object"
                              },
                              "reservedQty" : {
                                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                                "properties" : {
                                  "amount" : {
                                    "description" : "Inventory Count",
                                    "type" : "number"
                                  },
                                  "unit" : {
                                    "description" : "The unit of measurement. Example: 'EACH'",
                                    "enum" : [ "EACH" ],
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "amount", "unit" ],
                                "type" : "object"
                              },
                              "shipNode" : {
                                "description" : "ShipNode Id of the ship node for which the inventory is requested",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "sku" : {
                          "description" : "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "meta" : {
                "properties" : {
                  "nextCursor" : {
                    "description" : "Used for pagination to fetch the next set of items.",
                    "type" : "string"
                  },
                  "totalCount" : {
                    "description" : "Total number of Skus of the Seller. Example: '235'",
                    "type" : "number"
                  }
                },
                "type" : "object",
                "xml" : {
                  "name" : "meta"
                }
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "6a7bb1c2-d0a6-3943-b010-bd8b25ebe288",
    "name" : "WFS Inventory",
    "request" : {
      "urlPath" : "/v3/fulfillment/inventory",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"headers\" : {\n    \"offset\" : 449138412,\n    \"limit\" : 272308199,\n    \"totalCount\" : 2023707603\n  },\n  \"payload\" : {\n    \"inventory\" : [ {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2023-02-09T16:33:35.914987Z\",\n        \"onHandQty\" : 1383135065,\n        \"shipNodeType\" : \"o2e1jugkz3dk7n06qw2iy8fvvsx5e14\",\n        \"availToSellQty\" : 2010058147\n      }, {\n        \"modifiedDate\" : \"2022-08-18T13:07:35.91506Z\",\n        \"onHandQty\" : 2127408851,\n        \"shipNodeType\" : \"sjp8kwyj2bmby8q76acm38jdkcls2zqdok2e135sryywqbzazloyrton5iqvjo8cbyexnjdegvurhgbwtc111mdnjgpqgzqgdm5dzaj64zyjmddvj27afnhjea25inlplzjd3vifsatalt5l6f6n\",\n        \"availToSellQty\" : 309256672\n      }, {\n        \"modifiedDate\" : \"2022-06-19T14:46:35.915117Z\",\n        \"onHandQty\" : 585084843,\n        \"shipNodeType\" : \"lc6xwnrwu40kcz205qsy7loxev5szlkfti773o598ljgp3hf9ghbn91daewu1e6kn9x0ozpezn0vlq08mvdx0delfsgwt0exjz135tkg5392tdy6np2miqfe79egnozyvlb11utvefsk5r\",\n        \"availToSellQty\" : 1881106632\n      }, {\n        \"modifiedDate\" : \"2022-05-05T15:24:35.91517Z\",\n        \"onHandQty\" : 1610473413,\n        \"shipNodeType\" : \"o9zgj6ibn90sopnxouromlgbgc0yj7raxj9ixxxgyknlvwq\",\n        \"availToSellQty\" : 1771013773\n      } ],\n      \"sku\" : \"s43dsjt747d2b37fxrfnls52j11por3ry87yek8qydxxkcdlu14ji77kyqzhe6z13xsw82stq9rkp3k4aq8j2mk8ia20vmfn4vg5mm7w2q8cn499j5cesj0r6ub63meccxeqtqzjc9w8jzw\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-09-02T16:15:35.915246Z\",\n        \"onHandQty\" : 668441537,\n        \"shipNodeType\" : \"q3u4iddfibhx6c779ot0nkbojegla12jizn41o192b12ocjdr9yuwqwlb3ty8cd1ndwpdpn6sms3z3f8kc81jr8cok9cs8e157saokj2d29wagqi97ccws9buxf8oskf9n98s451dxuc3pshd59r2dubsr0pqerbq48yrmtcyioks89z4y8k7p34248wf8bh5zg6\",\n        \"availToSellQty\" : 425606554\n      }, {\n        \"modifiedDate\" : \"2022-06-20T15:03:35.915298Z\",\n        \"onHandQty\" : 1498050880,\n        \"shipNodeType\" : \"6zde222eln89vdkzxjydbz3kqoah23pbjw0s3xlbsppocezjjlvi8iht1sf79fhvb5g2pon5f67zynagyk7twt4rsoo13mf2pblgw2oug3svm8xa4jymzagk9qt4em842cbxcm1rmfu0t5klg2n85vtroh9mlkntl3phwdwhu\",\n        \"availToSellQty\" : 887578437\n      }, {\n        \"modifiedDate\" : \"2022-07-14T13:31:35.915349Z\",\n        \"onHandQty\" : 839485343,\n        \"shipNodeType\" : \"bgpbkdca5ri0tu7wah59yruypzz9m5fmr0tdchudf2fpsduu80njk92506c3t6ks18poxqme1n9pwttqepa1xt3sw0oo0z2v8kp1fn0bhk862vvtt0klkr1u6tnu5iyjmbh6ksa786cth2x2ntrwe8rbgl273hn71exgmpa0ucyu1e3\",\n        \"availToSellQty\" : 1627431119\n      }, {\n        \"modifiedDate\" : \"2022-12-03T14:12:35.915401Z\",\n        \"onHandQty\" : 137706484,\n        \"shipNodeType\" : \"k2fkcflcq4ayynu6na4sr1h1y7c117wyzex254hxg9s6bbclxyks4fbrkugdjnw857vp9p6eev3ck74xrdxrfbvby1ma30bm4tlk7wnafcuwx4wxtvr02ri8ibu69ouxqkp1wjo57xhm\",\n        \"availToSellQty\" : 1650239606\n      }, {\n        \"modifiedDate\" : \"2022-04-29T16:17:35.915454Z\",\n        \"onHandQty\" : 1802341902,\n        \"shipNodeType\" : \"1kqzecia5556towcvud91pnfldv4dwxcblzm40qfgvgbx1lmzby204jz0fhktotia8cr\",\n        \"availToSellQty\" : 1117211626\n      } ],\n      \"sku\" : \"h8fq0cs199xck742xj11yx1xv5vctedlrg3vxxnxoowk0lcd002p70uf\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-06-24T16:47:35.915521Z\",\n        \"onHandQty\" : 1425231547,\n        \"shipNodeType\" : \"lr8e3nnxhoos83j7cbtpeyg4zz15cwz8o8h1di4p78w8uzh93sar6fvnbw8zruuqb9g39uu426nqwwq3ca1932p\",\n        \"availToSellQty\" : 872196934\n      } ],\n      \"sku\" : \"r2cz2wp2vi7xjh4rwzbfp5xll8gagr30om9xsejbodp544dg7474sikxgfqjohuvy0xm2dd7yxsnbxbqlqoh6wic39asrs89gbkvxij16heh4elpw1jtrx50wdtuq30vecrfdl1m6ue82il9diu82bb3l3d5o4ffb5904mf3cj9v1clbdczs80m4wwc1apqz5\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-12-30T13:16:35.915589Z\",\n        \"onHandQty\" : 1295563936,\n        \"shipNodeType\" : \"24mpyeenm77ssarfdqju0n8eeddendl9px6uyxclc3wc8nh4fegz99gssf02m3a8vnetln8sf6zg1gpvuwch01j\",\n        \"availToSellQty\" : 125156784\n      }, {\n        \"modifiedDate\" : \"2022-08-11T15:23:35.915641Z\",\n        \"onHandQty\" : 608637806,\n        \"shipNodeType\" : \"jl7gjehx9g\",\n        \"availToSellQty\" : 1365539292\n      }, {\n        \"modifiedDate\" : \"2022-08-08T14:14:35.91569Z\",\n        \"onHandQty\" : 48935480,\n        \"shipNodeType\" : \"yvc5r5uybna81yrm1cdvu9x2elzh8pdfxghk55onub9mcsc\",\n        \"availToSellQty\" : 1023062897\n      }, {\n        \"modifiedDate\" : \"2022-11-22T13:09:35.915742Z\",\n        \"onHandQty\" : 184588366,\n        \"shipNodeType\" : \"4fn9p4cmwixpn4tb1nx61fimrsva8k7i5it8p6twok8d9vpp2byc3byucl9vfz2hew5t3odf6mtgkord80zm0lqx7kmmnrp4ndzahsebdj9npjl0hy3i4fefndpbimybpkm94sd0xgvas\",\n        \"availToSellQty\" : 1270759083\n      }, {\n        \"modifiedDate\" : \"2022-11-07T14:06:35.915793Z\",\n        \"onHandQty\" : 78527621,\n        \"shipNodeType\" : \"39rn5wxzxel56rw73383am2qavfl4cq4j0wlsfgddzzf0wxt9zeiuo4yjq4tuokkw997e92kb71ln8lwyf60zblgcl80z2awah8xvbtb04slft3hq7yrikj117etuz27cbjz8cqbuk6iffdzsxspauwc9iqm3iyy8dsl0sgja8t7v4g7u7rcbp8ymggm3\",\n        \"availToSellQty\" : 567713556\n      } ],\n      \"sku\" : \"jidqhr5grnftls9r1p83evar4dhjndi42k6yrzbs5hecp81cd0krizitu8y6s7joohyk3xe2ni31z1443zusvx68igy6isamn8ao5j5yiaco1ezk23d0wnbmda63heqoouipt\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a7bb1c2-d0a6-3943-b010-bd8b25ebe288",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getWFSInventory",
          "schema" : {
            "properties" : {
              "headers" : {
                "properties" : {
                  "limit" : {
                    "description" : "Information about the quantity in inventory",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "offset" : {
                    "description" : "Offset is the number of records you wish to skip before selecting results.",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "totalCount" : {
                    "description" : "Total number of results for query.",
                    "format" : "int32",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "payload" : {
                "properties" : {
                  "inventory" : {
                    "items" : {
                      "properties" : {
                        "shipNodes" : {
                          "items" : {
                            "properties" : {
                              "availToSellQty" : {
                                "description" : "The available quantity is the quantity of an item that is available to be allocated to orders.",
                                "format" : "int32",
                                "type" : "integer"
                              },
                              "modifiedDate" : {
                                "description" : "Last changes date for the item.",
                                "type" : "string"
                              },
                              "onHandQty" : {
                                "description" : "The on-hand balance is the quantity of active inventory stored at the warehouse.Active inventory is defined as the usable amount of an item that is in the warehouse.Inventory is active if it is not damaged, expired or being inspected.",
                                "format" : "int32",
                                "type" : "integer"
                              },
                              "shipNodeType" : {
                                "description" : "Identifies fulfillment aspect of invetory. Walmart, seller or 3PL fulfilled. Possible value is 'WFSFulfilled'. In later phase we will also add seller fulfilled inventory.",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "sku" : {
                          "description" : "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "7e827e9c-627c-332b-a6d0-c741a2d24e6e",
    "name" : "Bulk Item Inventory Update (application/xml)",
    "request" : {
      "urlPath" : "/v3/feeds",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      },
      "queryParameters" : {
        "feedType" : {
          "equalTo" : "MP_INVENTORY"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:FeedAcknowledgement xmlns:ns2=\"http://walmart.com/\">\n    <ns2:feedId>884C20C71B7E42FAA41FABFA52596A62@AUoBAQA</ns2:feedId>\n</ns2:FeedAcknowledgement>",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "7e827e9c-627c-332b-a6d0-c741a2d24e6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateBulkInventory",
          "schema" : {
            "properties" : {
              "additionalAttributes" : {
                "nullable" : true,
                "type" : "object"
              },
              "errors" : {
                "nullable" : true,
                "type" : "object"
              },
              "feedId" : {
                "description" : "A unique ID, returned from the Bulk Upload API, used for tracking the feed file",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d838ab57-17b6-30d2-97a0-142b180d2c99",
    "name" : "Bulk Item Inventory Update (application/json)",
    "request" : {
      "urlPath" : "/v3/feeds",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "feedType" : {
          "equalTo" : "inventory"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedId\" : \"FFE538D9B25A4000AD2A067ACEDCF4C4@AUoBAQA\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d838ab57-17b6-30d2-97a0-142b180d2c99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "updateBulkInventory",
          "schema" : {
            "properties" : {
              "additionalAttributes" : {
                "nullable" : true,
                "type" : "object"
              },
              "errors" : {
                "nullable" : true,
                "type" : "object"
              },
              "feedId" : {
                "description" : "A unique ID, returned from the Bulk Upload API, used for tracking the feed file",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  } ]
}