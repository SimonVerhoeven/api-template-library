{
  "mappings" : [ {
    "id" : "5ba7997c-1d7e-4861-9679-78c82549dfa7",
    "name" : "Update inventory (application/xml)",
    "request" : {
      "urlPath" : "/v3/inventory",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      },
      "queryParameters" : {
        "sku" : {
          "equalTo" : "6exfelgbhd8oyxcssrgvqwyl5nlqyiei4awksfqyxdj8naxzk3w0ltztbeestdjcv4qde9flfkbs6nbozk6ff8j"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<inventory xmlns=\"http://walmart.com/\">\n    <sku>97964_KFTest</sku>\n    <quantity>\n        <unit>EACH</unit>\n        <amount>3</amount>\n    </quantity>\n</inventory>",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "5ba7997c-1d7e-4861-9679-78c82549dfa7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:42.001847Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateInventoryForAnItem",
          "schema" : {
            "properties" : {
              "quantity" : {
                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                "properties" : {
                  "amount" : {
                    "description" : "Inventory Count",
                    "type" : "number"
                  },
                  "unit" : {
                    "description" : "The unit of measurement. Example: 'EACH'",
                    "enum" : [ "EACH" ],
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "unit" ],
                "type" : "object"
              },
              "sku" : {
                "description" : "A seller-provided Product ID. Response will have decoded value.",
                "type" : "string"
              }
            },
            "required" : [ "quantity", "sku" ],
            "type" : "object",
            "xml" : {
              "name" : "inventory"
            }
          }
        }
      }
    }
  }, {
    "id" : "3e232442-c447-4d8c-857c-ceb703b448d8",
    "name" : "Update inventory (application/json)",
    "request" : {
      "urlPath" : "/v3/inventory",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "sku" : {
          "equalTo" : "s0y"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"quantity\" : {\n    \"amount\" : 10,\n    \"unit\" : \"EACH\"\n  },\n  \"sku\" : \"97964_KFTest\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e232442-c447-4d8c-857c-ceb703b448d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:42.001748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateInventoryForAnItem",
          "schema" : {
            "properties" : {
              "quantity" : {
                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                "properties" : {
                  "amount" : {
                    "description" : "Inventory Count",
                    "type" : "number"
                  },
                  "unit" : {
                    "description" : "The unit of measurement. Example: 'EACH'",
                    "enum" : [ "EACH" ],
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "unit" ],
                "type" : "object"
              },
              "sku" : {
                "description" : "A seller-provided Product ID. Response will have decoded value.",
                "type" : "string"
              }
            },
            "required" : [ "quantity", "sku" ],
            "type" : "object",
            "xml" : {
              "name" : "inventory"
            }
          }
        }
      }
    }
  }, {
    "id" : "f88ce07c-5314-4bea-8530-f866eb9c5b86",
    "name" : "Inventory (application/xml)",
    "request" : {
      "urlPath" : "/v3/inventory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      },
      "queryParameters" : {
        "sku" : {
          "equalTo" : "6o89e9r7srfmf6t3t8t3hyyyyqky2wkqkgpwv2cvf69s2zpr3bdjwcxq3qe2jx5y4acldn1tnsjjmix8nyp99pk4ub0m37x0gfmq15kfiag4yqxk4m51b54un2optrdc7rabygqc9rcr3pkdy6xdf8l"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<inventory xmlns=\"http://walmart.com/\">\n    <sku>97964_KFTest</sku>\n    <quantity>\n        <unit>EACH</unit>\n        <amount>10</amount>\n    </quantity>\n</inventory>",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "f88ce07c-5314-4bea-8530-f866eb9c5b86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:42.001649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getInventory",
          "schema" : {
            "properties" : {
              "quantity" : {
                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                "properties" : {
                  "amount" : {
                    "description" : "Inventory Count",
                    "type" : "number"
                  },
                  "unit" : {
                    "description" : "The unit of measurement. Example: 'EACH'",
                    "enum" : [ "EACH" ],
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "unit" ],
                "type" : "object"
              },
              "sku" : {
                "description" : "A seller-provided Product ID. Response will have decoded value.",
                "type" : "string"
              }
            },
            "required" : [ "quantity", "sku" ],
            "type" : "object",
            "xml" : {
              "name" : "inventory"
            }
          }
        }
      }
    }
  }, {
    "id" : "0ccd63f5-b0b5-43b9-beee-8b5b6b26b0c8",
    "name" : "Inventory (application/json)",
    "request" : {
      "urlPath" : "/v3/inventory",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "sku" : {
          "equalTo" : "ufcxp028ejm071"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"quantity\" : {\n    \"amount\" : 10,\n    \"unit\" : \"EACH\"\n  },\n  \"sku\" : \"97964_KFTest\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ccd63f5-b0b5-43b9-beee-8b5b6b26b0c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:42.001554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getInventory",
          "schema" : {
            "properties" : {
              "quantity" : {
                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                "properties" : {
                  "amount" : {
                    "description" : "Inventory Count",
                    "type" : "number"
                  },
                  "unit" : {
                    "description" : "The unit of measurement. Example: 'EACH'",
                    "enum" : [ "EACH" ],
                    "type" : "string"
                  }
                },
                "required" : [ "amount", "unit" ],
                "type" : "object"
              },
              "sku" : {
                "description" : "A seller-provided Product ID. Response will have decoded value.",
                "type" : "string"
              }
            },
            "required" : [ "quantity", "sku" ],
            "type" : "object",
            "xml" : {
              "name" : "inventory"
            }
          }
        }
      }
    }
  }, {
    "id" : "12b54bb6-7c34-4b4a-b553-040a657f104f",
    "name" : "Update Item Inventory per Ship Node",
    "request" : {
      "urlPath" : "/v3/inventories/oqvg572bw2xx3j0qkdprdtbwh54vs6huzynxwtwgth9gzt6hjra1kte89953rubgmf78lgqgjfyn2w8ooyzntmmqck1uopj",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nodes\" : [ {\n    \"shipNode\" : \"1000005050\",\n    \"status\" : \"Success\"\n  }, {\n    \"shipNode\" : \"79897837271126017\",\n    \"status\" : \"Success\"\n  } ],\n  \"sku\" : \"00757642886669_test_01\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12b54bb6-7c34-4b4a-b553-040a657f104f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:42.001453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateMultiNodeInventory",
          "schema" : {
            "properties" : {
              "nodes" : {
                "items" : {
                  "properties" : {
                    "errors" : {
                      "description" : "Node Update Error description.",
                      "items" : {
                        "properties" : {
                          "category" : {
                            "enum" : [ "APPLICATION", "SYSTEM", "REQUEST", "DATA" ],
                            "type" : "string"
                          },
                          "causes" : {
                            "items" : {
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "description" : {
                                  "type" : "string"
                                },
                                "field" : {
                                  "type" : "string"
                                },
                                "type" : {
                                  "type" : "string"
                                }
                              },
                              "type" : "object",
                              "xml" : {
                                "name" : "Cause"
                              }
                            },
                            "type" : "array",
                            "xml" : {
                              "wrapped" : true
                            }
                          },
                          "code" : {
                            "type" : "string"
                          },
                          "description" : {
                            "type" : "string"
                          },
                          "errorIdentifiers" : {
                            "additionalProperties" : {
                              "type" : "object"
                            },
                            "type" : "object"
                          },
                          "field" : {
                            "type" : "string"
                          },
                          "info" : {
                            "type" : "string"
                          },
                          "severity" : {
                            "enum" : [ "INFO", "WARN", "ERROR" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "code" ],
                        "type" : "object",
                        "xml" : {
                          "name" : "Error"
                        }
                      },
                      "type" : "array"
                    },
                    "shipNode" : {
                      "description" : "ShipNode Id of the ship node for which the inventory is requested",
                      "type" : "string"
                    },
                    "status" : {
                      "description" : "Node Update status. Example: 'Success'",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "sku" : {
                "description" : "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "36ade094-edbf-4c87-a17b-596be589bf80",
    "name" : "Single Item Inventory by Ship Node",
    "request" : {
      "urlPath" : "/v3/inventories/ja0tlrlllrr0euddjs5thd5dtybh0mc71s1yeb23zqqtz7n1h6q1hv0q",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nodes\" : [ {\n    \"availToSellQty\" : {\n      \"amount\" : 3,\n      \"unit\" : \"EACH\"\n    },\n    \"inputQty\" : {\n      \"amount\" : 5,\n      \"unit\" : \"EACH\"\n    },\n    \"reservedQty\" : {\n      \"amount\" : 2,\n      \"unit\" : \"EACH\"\n    },\n    \"shipNode\" : \"100009\"\n  } ],\n  \"sku\" : \"AR-CTIX-0092\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36ade094-edbf-4c87-a17b-596be589bf80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:42.00122Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getMultiNodeInventoryForSkuAndAllShipnodes",
          "schema" : {
            "properties" : {
              "nodes" : {
                "items" : {
                  "properties" : {
                    "availToSellQty" : {
                      "description" : "Quantity of an item that is available to be allocated to orders",
                      "properties" : {
                        "amount" : {
                          "description" : "Inventory Count",
                          "type" : "number"
                        },
                        "unit" : {
                          "description" : "The unit of measurement. Example: 'EACH'",
                          "enum" : [ "EACH" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "amount", "unit" ],
                      "type" : "object"
                    },
                    "errors" : {
                      "items" : {
                        "properties" : {
                          "category" : {
                            "enum" : [ "APPLICATION", "SYSTEM", "REQUEST", "DATA" ],
                            "type" : "string"
                          },
                          "causes" : {
                            "items" : {
                              "properties" : {
                                "code" : {
                                  "type" : "string"
                                },
                                "description" : {
                                  "type" : "string"
                                },
                                "field" : {
                                  "type" : "string"
                                },
                                "type" : {
                                  "type" : "string"
                                }
                              },
                              "type" : "object",
                              "xml" : {
                                "name" : "Cause"
                              }
                            },
                            "type" : "array",
                            "xml" : {
                              "wrapped" : true
                            }
                          },
                          "code" : {
                            "type" : "string"
                          },
                          "description" : {
                            "type" : "string"
                          },
                          "errorIdentifiers" : {
                            "additionalProperties" : {
                              "type" : "object"
                            },
                            "type" : "object"
                          },
                          "field" : {
                            "type" : "string"
                          },
                          "info" : {
                            "type" : "string"
                          },
                          "severity" : {
                            "enum" : [ "INFO", "WARN", "ERROR" ],
                            "type" : "string"
                          }
                        },
                        "required" : [ "code" ],
                        "type" : "object",
                        "xml" : {
                          "name" : "Error"
                        }
                      },
                      "type" : "array"
                    },
                    "inputQty" : {
                      "description" : "Quantity of an item that is input by the seller",
                      "properties" : {
                        "amount" : {
                          "description" : "Inventory Count",
                          "type" : "number"
                        },
                        "unit" : {
                          "description" : "The unit of measurement. Example: 'EACH'",
                          "enum" : [ "EACH" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "amount", "unit" ],
                      "type" : "object"
                    },
                    "reservedQty" : {
                      "description" : "Quantity that has been ordered by the customers but not yet shipped",
                      "properties" : {
                        "amount" : {
                          "description" : "Inventory Count",
                          "type" : "number"
                        },
                        "unit" : {
                          "description" : "The unit of measurement. Example: 'EACH'",
                          "enum" : [ "EACH" ],
                          "type" : "string"
                        }
                      },
                      "required" : [ "amount", "unit" ],
                      "type" : "object"
                    },
                    "shipNode" : {
                      "description" : "ShipNode Id of the ship node for which the inventory is requested",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "sku" : {
                "description" : "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "00ffcaf8-9122-4cea-ae87-e84ec903087f",
    "name" : "Multiple Item Inventory for All Ship Nodes",
    "request" : {
      "urlPath" : "/v3/inventories",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"elements\" : {\n    \"inventories\" : [ {\n      \"nodes\" : [ {\n        \"availToSellQty\" : {\n          \"amount\" : 93,\n          \"unit\" : \"EACH\"\n        },\n        \"inputQty\" : {\n          \"amount\" : 93,\n          \"unit\" : \"EACH\"\n        },\n        \"reservedQty\" : {\n          \"amount\" : 0,\n          \"unit\" : \"EACH\"\n        },\n        \"shipNode\" : \"361451354333223041\"\n      }, {\n        \"availToSellQty\" : {\n          \"amount\" : 433,\n          \"unit\" : \"EACH\"\n        },\n        \"inputQty\" : {\n          \"amount\" : 436,\n          \"unit\" : \"EACH\"\n        },\n        \"reservedQty\" : {\n          \"amount\" : 3,\n          \"unit\" : \"EACH\"\n        },\n        \"shipNode\" : \"100009\"\n      } ],\n      \"sku\" : \"AI-IGH4-5509\"\n    }, {\n      \"nodes\" : [ {\n        \"availToSellQty\" : {\n          \"amount\" : 0,\n          \"unit\" : \"EACH\"\n        },\n        \"inputQty\" : {\n          \"amount\" : 5,\n          \"unit\" : \"EACH\"\n        },\n        \"reservedQty\" : {\n          \"amount\" : 5,\n          \"unit\" : \"EACH\"\n        },\n        \"shipNode\" : \"100009\"\n      } ],\n      \"sku\" : \"06397309545443\"\n    } ]\n  },\n  \"meta\" : {\n    \"nextCursor\" : \"NTVmZjIxOWEtZjRkMy00MGIwLThkOGYtYzFkNzI1NGZlYmQxIDEw\",\n    \"totalCount\" : 123\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00ffcaf8-9122-4cea-ae87-e84ec903087f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:42.000901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getMultiNodeInventoryForAllSkuAndAllShipNodes",
          "schema" : {
            "properties" : {
              "elements" : {
                "properties" : {
                  "inventories" : {
                    "items" : {
                      "properties" : {
                        "nodes" : {
                          "items" : {
                            "properties" : {
                              "availToSellQty" : {
                                "description" : "Quantity of an item that is available to be allocated to orders",
                                "properties" : {
                                  "amount" : {
                                    "description" : "Inventory Count",
                                    "type" : "number"
                                  },
                                  "unit" : {
                                    "description" : "The unit of measurement. Example: 'EACH'",
                                    "enum" : [ "EACH" ],
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "amount", "unit" ],
                                "type" : "object"
                              },
                              "inputQty" : {
                                "description" : "Quantity of an item that is input by the seller",
                                "properties" : {
                                  "amount" : {
                                    "description" : "Inventory Count",
                                    "type" : "number"
                                  },
                                  "unit" : {
                                    "description" : "The unit of measurement. Example: 'EACH'",
                                    "enum" : [ "EACH" ],
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "amount", "unit" ],
                                "type" : "object"
                              },
                              "reservedQty" : {
                                "description" : "Quantity that has been ordered by the customers but not yet shipped",
                                "properties" : {
                                  "amount" : {
                                    "description" : "Inventory Count",
                                    "type" : "number"
                                  },
                                  "unit" : {
                                    "description" : "The unit of measurement. Example: 'EACH'",
                                    "enum" : [ "EACH" ],
                                    "type" : "string"
                                  }
                                },
                                "required" : [ "amount", "unit" ],
                                "type" : "object"
                              },
                              "shipNode" : {
                                "description" : "ShipNode Id of the ship node for which the inventory is requested",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "sku" : {
                          "description" : "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "meta" : {
                "properties" : {
                  "nextCursor" : {
                    "description" : "Used for pagination to fetch the next set of items.",
                    "type" : "string"
                  },
                  "totalCount" : {
                    "description" : "Total number of Skus of the Seller. Example: '235'",
                    "type" : "number"
                  }
                },
                "type" : "object",
                "xml" : {
                  "name" : "meta"
                }
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "64f62420-2ede-468f-9cce-33d6b585b7b0",
    "name" : "WFS Inventory",
    "request" : {
      "urlPath" : "/v3/fulfillment/inventory",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"headers\" : {\n    \"offset\" : 1383923678,\n    \"limit\" : 600885140,\n    \"totalCount\" : 1946199867\n  },\n  \"payload\" : {\n    \"inventory\" : [ {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-08-26T16:56:41.999366Z\",\n        \"onHandQty\" : 862293398,\n        \"shipNodeType\" : \"vlnhs56992xr1xqeejbqvq8zg7uz6yo1y43t2sj89ma8leasjcfqihhvkozha8qgubzukwhlymmz5wc2ya3iaiu2f9rrjhldqyh9k59k4x1x5hoq87olzzhelhoub6rmvu2qn6x9gg91\",\n        \"availToSellQty\" : 624081289\n      }, {\n        \"modifiedDate\" : \"2023-03-04T18:24:41.999438Z\",\n        \"onHandQty\" : 1497908645,\n        \"shipNodeType\" : \"6tiiu2jme785k29wtp01ssnbtkvkqcx9pnp75enlf4edu445a3gga8auidt4owsouu3dw32ssoyrsrvzlegq67eh8e5d7fopbceoa5j19wmjnoakhh4a0k7mdhyxi7fgv1wrgoo6motsezdy5g4da9g\",\n        \"availToSellQty\" : 599394399\n      }, {\n        \"modifiedDate\" : \"2022-07-17T17:57:41.99949Z\",\n        \"onHandQty\" : 1217834618,\n        \"shipNodeType\" : \"4d6zh7pzbwav3awfuustsik0sx81c7dffzd6wvgnz394e187ktkut9mvf8ou7140hf6x9zt76m3e9q4sbooy07oc8ciqwi2outhyvoidxo0ddwrcz3jwlxv1v9wm4z1yiez7j7tj06pn9p7pc6\",\n        \"availToSellQty\" : 629722273\n      }, {\n        \"modifiedDate\" : \"2022-11-05T15:33:41.999548Z\",\n        \"onHandQty\" : 2037847147,\n        \"shipNodeType\" : \"ese11vos8hbhahyzn6zjqz5gpx1q3p4ijnvcenuhaofbaiysu92ct5n0q0w4v71s1qdvgbd1g2gv6qc\",\n        \"availToSellQty\" : 935193265\n      } ],\n      \"sku\" : \"1ymn967m0ouatuj7lgy9yij3o8pvw9naqz5qpbr829tk9evkayoxou31cul75lqhfxi3u7k554vy4yl1se29e\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-05-19T18:16:41.999623Z\",\n        \"onHandQty\" : 1064823021,\n        \"shipNodeType\" : \"lj313dze88dlsasjgat9ljlvrvxq61t6lgpb9veo11y9k2w6ac2lc4x9gmn6\",\n        \"availToSellQty\" : 1118904763\n      }, {\n        \"modifiedDate\" : \"2022-06-28T16:06:41.999674Z\",\n        \"onHandQty\" : 974224139,\n        \"shipNodeType\" : \"cwbw4f791d1k05p51kmezrwz59tywann9asbbl4ku7g4jxgcgkqr86n6gbfnhod9i49f7lhvka7zfb9sxlg00pzi6v80qkthsx1dzn6uf5ewi5u6cozwifppnqber1g4dig0ozimztmpt2g8t0vwb6hebo\",\n        \"availToSellQty\" : 1676174872\n      }, {\n        \"modifiedDate\" : \"2023-02-14T17:08:41.999723Z\",\n        \"onHandQty\" : 726262035,\n        \"shipNodeType\" : \"po4sfw35pp4v231530te1mhpfppkucwgke0tgxcfg3rt\",\n        \"availToSellQty\" : 1168106704\n      }, {\n        \"modifiedDate\" : \"2023-02-18T17:09:41.999771Z\",\n        \"onHandQty\" : 129098159,\n        \"shipNodeType\" : \"e35exfe9321hheo37fzywyvyz8sna4v0u1b1h90f8wuvxh0ea8ooh80j74onot\",\n        \"availToSellQty\" : 476807414\n      }, {\n        \"modifiedDate\" : \"2023-01-28T17:36:41.999818Z\",\n        \"onHandQty\" : 1756920267,\n        \"shipNodeType\" : \"8o6tf66mel74z8h791oisxh3r3m7xl7o4nnvj64mq86bgkrzegxvzrz\",\n        \"availToSellQty\" : 1310806620\n      } ],\n      \"sku\" : \"m1f4g43vcuyg5zn043g8hkxpj2vwiasony5vjvokou32xd1qdpsu4dpm2mpdxn8iq6467cvhgpvogq8hjn7uqz29ngfis6bfrf8k48q2jfj3ssbd16dkjioehs4gvbv3zkouybok9ki2712ajhlr3ijh5891a5\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2023-01-03T18:23:41.999882Z\",\n        \"onHandQty\" : 670625636,\n        \"shipNodeType\" : \"s3e4fs85t0g1nbx5z1c\",\n        \"availToSellQty\" : 363181086\n      }, {\n        \"modifiedDate\" : \"2022-04-23T18:18:41.999931Z\",\n        \"onHandQty\" : 1342252001,\n        \"shipNodeType\" : \"kejlplup9g9phot6xlxrw\",\n        \"availToSellQty\" : 656948137\n      } ],\n      \"sku\" : \"ru0a73zzgwsk2erbfnsoz15214fysa94owj7zrfkky6vk89gy2f1eefhtffmj55015ml1ula9j9su\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-04-13T17:45:41.999992Z\",\n        \"onHandQty\" : 1078951844,\n        \"shipNodeType\" : \"6gcmm328cdquz00bi5n7f6731fldf7shqwnuxy0efok8meaov2jmvvz1p0ib5e91pl59r8fs895b0fkljkgqrfdsofkvhmi1xot7rcumexy9mrd3cx8v4sjhde41277e55zwt6\",\n        \"availToSellQty\" : 1153920138\n      } ],\n      \"sku\" : \"cj7unempe1no3zbd4fzr0bim4hq7ui3cysw363vgc17h2uo51kcxbr9r4x8ykhd0s697i811imcfvf5toie9hypvys1smtl2g7p3jy23h0pt7i4fjn51z0o8\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-12-14T17:57:42.000055Z\",\n        \"onHandQty\" : 570574601,\n        \"shipNodeType\" : \"uf9n5xvqovjy6qz447na3d3aukez5wb9d9leij20j7kjahsjwmhfjtipyhvamqe6hp6xljp9ruoo8jzi5kb9yunpyn6q4amhsr9z6qe5r0v\",\n        \"availToSellQty\" : 129604338\n      } ],\n      \"sku\" : \"zjo3ceigq\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2023-01-15T15:03:42.000115Z\",\n        \"onHandQty\" : 1357833146,\n        \"shipNodeType\" : \"4fhlouafrny5ek859mfvdbd5t01xwn6xxz0uhw87nfu9pyvx4gpa60iujkkww3j1mcqs82py88p234hyp9olnbr9x5stw1nwsmmvwvwiz4fe3wec1yya3wxfuth9h67xvak4xwiygu4\",\n        \"availToSellQty\" : 943922899\n      }, {\n        \"modifiedDate\" : \"2023-02-05T14:56:42.000164Z\",\n        \"onHandQty\" : 1121228937,\n        \"shipNodeType\" : \"poaovyponmx69i95cbvjjqbmikbtggpmdazch3e7g0q\",\n        \"availToSellQty\" : 750005032\n      }, {\n        \"modifiedDate\" : \"2022-08-21T15:21:42.00021Z\",\n        \"onHandQty\" : 552182717,\n        \"shipNodeType\" : \"ra17mom2q5a6pvoynhnb064oe1cgi7xluvlys3tki30uyffa4r2da74mgx08q10n3ovc7mg0pufag4rb1ixzv4ze27y1su7ee7ssf488cp0hw2qmvm02jkpnaflv7turn1n6sxdauzdcuk26os4p9du87m5npbt7a75edvb7zey5a70t2e1oa32ipuewn4bzrjhp7j\",\n        \"availToSellQty\" : 913260644\n      } ],\n      \"sku\" : \"6zyiwz3si76vymwr6\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-10-06T17:39:42.00028Z\",\n        \"onHandQty\" : 1593242554,\n        \"shipNodeType\" : \"zlxsj4gr5mfl29hufgxyve9y1g5j48dpw6599wx4iyy50b4uyspmz\",\n        \"availToSellQty\" : 163624856\n      } ],\n      \"sku\" : \"fzm49ggusjelckolrmq19rz2u0xo20ugz4m98ht2yf2k64xyvx6ey3bi1lg8317fx2ekxuydvu1k4zckw24ahl\"\n    }, {\n      \"shipNodes\" : [ {\n        \"modifiedDate\" : \"2022-11-29T15:13:42.00034Z\",\n        \"onHandQty\" : 622375801,\n        \"shipNodeType\" : \"krh8xxkw3ejhhfmodqyutjf5zrwba58av9ho6b9ndsh04vnajr8j4dabqywtmns3ueqdkpn68x5vnwfi7w9n50kxemwkx1sejboxdf2u7o7g7rg3skgnwmmshews7hbm8zeaadzmjydor6\",\n        \"availToSellQty\" : 409025132\n      }, {\n        \"modifiedDate\" : \"2022-10-18T17:24:42.000388Z\",\n        \"onHandQty\" : 1643186222,\n        \"shipNodeType\" : \"61wktqbj01gv10v4zb1imxmbo4noa4zo3rdj4qfwqc33lobed4eef0ezlq99bwyy3h4dwx1pfn5ujlp98vobb\",\n        \"availToSellQty\" : 811177769\n      }, {\n        \"modifiedDate\" : \"2022-05-21T17:39:42.000436Z\",\n        \"onHandQty\" : 1557057275,\n        \"shipNodeType\" : \"2qe45awf9e3dioo6kr6xphm21exg4qpujp9zz7y1zu3nohnzw5frhjqf4su9n0e6fq5wiq768gtz1hvz95no0gpttjj2may3\",\n        \"availToSellQty\" : 412887684\n      } ],\n      \"sku\" : \"gz8mwnzmc894rfzm5933rly70xk2z9vb2u61rqhx9hbbvebrpokto7gltncgmano2bs3uj1nolmafv7hxjwb7wnsbdr1s8bve1y7pqbghf200v66s5dun6lkd31utnp0dgbpof84hvmuam4fvmjlx7c9guxl1bka490zb12vjezctb15hrn9ijfrnhwucnxfm\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64f62420-2ede-468f-9cce-33d6b585b7b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:42.000654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getWFSInventory",
          "schema" : {
            "properties" : {
              "headers" : {
                "properties" : {
                  "limit" : {
                    "description" : "Information about the quantity in inventory",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "offset" : {
                    "description" : "Offset is the number of records you wish to skip before selecting results.",
                    "format" : "int32",
                    "type" : "integer"
                  },
                  "totalCount" : {
                    "description" : "Total number of results for query.",
                    "format" : "int32",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "payload" : {
                "properties" : {
                  "inventory" : {
                    "items" : {
                      "properties" : {
                        "shipNodes" : {
                          "items" : {
                            "properties" : {
                              "availToSellQty" : {
                                "description" : "The available quantity is the quantity of an item that is available to be allocated to orders.",
                                "format" : "int32",
                                "type" : "integer"
                              },
                              "modifiedDate" : {
                                "description" : "Last changes date for the item.",
                                "type" : "string"
                              },
                              "onHandQty" : {
                                "description" : "The on-hand balance is the quantity of active inventory stored at the warehouse.Active inventory is defined as the usable amount of an item that is in the warehouse.Inventory is active if it is not damaged, expired or being inspected.",
                                "format" : "int32",
                                "type" : "integer"
                              },
                              "shipNodeType" : {
                                "description" : "Identifies fulfillment aspect of invetory. Walmart, seller or 3PL fulfilled. Possible value is 'WFSFulfilled'. In later phase we will also add seller fulfilled inventory.",
                                "type" : "string"
                              }
                            },
                            "type" : "object"
                          },
                          "type" : "array"
                        },
                        "sku" : {
                          "description" : "An arbitrary alphanumeric unique ID, specified by the seller, which identifies each item.",
                          "type" : "string"
                        }
                      },
                      "type" : "object"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b1e04d24-25d2-4fb2-b634-f1898ba5d341",
    "name" : "Bulk Item Inventory Update (application/xml)",
    "request" : {
      "urlPath" : "/v3/feeds",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/xml"
        }
      },
      "queryParameters" : {
        "feedType" : {
          "equalTo" : "MP_INVENTORY"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "<?xml version=\"1.0\" encoding=\"UTF-8\" standalone=\"yes\"?>\n<ns2:FeedAcknowledgement xmlns:ns2=\"http://walmart.com/\">\n    <ns2:feedId>884C20C71B7E42FAA41FABFA52596A62@AUoBAQA</ns2:feedId>\n</ns2:FeedAcknowledgement>",
      "headers" : {
        "Content-Type" : "application/xml"
      }
    },
    "uuid" : "b1e04d24-25d2-4fb2-b634-f1898ba5d341",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:41.999207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateBulkInventory",
          "schema" : {
            "properties" : {
              "additionalAttributes" : {
                "nullable" : true,
                "type" : "object"
              },
              "errors" : {
                "nullable" : true,
                "type" : "object"
              },
              "feedId" : {
                "description" : "A unique ID, returned from the Bulk Upload API, used for tracking the feed file",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "120d2486-6019-47f1-b1fd-6a0b54d40f34",
    "name" : "Bulk Item Inventory Update (application/json)",
    "request" : {
      "urlPath" : "/v3/feeds",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "feedType" : {
          "equalTo" : "MP_INVENTORY"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"feedId\" : \"FFE538D9B25A4000AD2A067ACEDCF4C4@AUoBAQA\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "120d2486-6019-47f1-b1fd-6a0b54d40f34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:41.999094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "updateBulkInventory",
          "schema" : {
            "properties" : {
              "additionalAttributes" : {
                "nullable" : true,
                "type" : "object"
              },
              "errors" : {
                "nullable" : true,
                "type" : "object"
              },
              "feedId" : {
                "description" : "A unique ID, returned from the Bulk Upload API, used for tracking the feed file",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}