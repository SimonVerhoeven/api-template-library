{
  "mappings" : [ {
    "id" : "bdf3229f-d55b-4428-abb2-5b6ec789bf68",
    "name" : "De-identifies data from the source store and writes it to the destination store....",
    "request" : {
      "urlPath" : "/v1beta1/4fivl86xb5drhdtg605lwo6fk4qz69ixgl2li6b27b40zieolan3oxmhrbumyd1zvhr66n4yh4a9hj81y4lztj9p0rkzig3zqyzh4eher4szlv02seowhgnux36asvyiud:deidentify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Eugena Kuhlman\",\n  \"error\" : {\n    \"code\" : 418794622,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Ut in consequatur recusandae earum magnam. Sapiente itaque aut praesentium recusandae labore. Omnis enim magni sunt. Aut similique et.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdf3229f-d55b-4428-abb2-5b6ec789bf68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.655657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.deidentify",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "91a59ae0-870c-4527-b6e6-92e78637c012",
    "name" : "Creates a new dataset containing de-identified data from the source dataset. The...",
    "request" : {
      "urlPath" : "/v1beta1/axk9j1ip4mfenldo3sftide5fz6l7tqfhxhsc1doukluybr4m0cycxkw7arrut7g1ubws6nkim54a5mz8cg236lrvbgmsq66rim9jv21fm0x7n6duobmgzr9ctd9hp79xfuwfqhhva170kfmfwytbkjj8nf80dohxj5s67sjxh58yhxems8r32x91v:deidentify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Johnathan Runte\",\n  \"error\" : {\n    \"code\" : 412855986,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Ut itaque quod est corporis eligendi aut. Porro nam nihil quia alias. Et mollitia dignissimos voluptatem exercitationem sed. Praesentium cumque eaque.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91a59ae0-870c-4527-b6e6-92e78637c012",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.655472Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.deidentify",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a43a0b9a-4f6f-483a-ba3c-471d1e37343b",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/oodtvrglqkeuwgl00qu5nz050hqo12re4829qr0ahchygit7fzjwozz518qteee2bbqnfhbujbw3ad82i0th7jj2t88c5ev91orltzlt5qezvnfx3dk1o5c1n6vo6n:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"mj6pm1njr20zoi78i51oz43qprjxerdh3l1ih04848qvgkxaubx3bzecd3jlykpzz7b4vl10obwwndhhfzrpc8afiri157hf92x6r667ft8jtzq8ripa1qx30f\", \"mg686p5aujakkbb5rgxevaomnxcgfs6jx83imtvvdjmd5vlpxhll2q5w469ftzqmzqpgxwhji26yuqsmdhshippghscopsyyiiykzy4z0w9k6994zxk3y5kp1r337\", \"t9qukcblpf2f81fw\", \"o5ijhvpltgknetorv5pbviuh8xpfdv2y1yngm9i4pcru1jqsotdxrluxderiipw23by5il3m00hd250pkoddfj0dryfvtzjfyo4pnf7i18karim0ww9vze3ax50ggvtie4lai7t052dkym4vmhrn6djfbezv4t1ikk82rufdv0byvp\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a43a0b9a-4f6f-483a-ba3c-471d1e37343b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.655235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1426a32-ed98-4c5a-bcc6-abbca22c5e86",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/75sckogdvc4gp9qdmvy39w8vmk0fpfoe2m4i3e9fpugo3g8wf7vkzkt08gqfd2mjyegu4x44aoymb0zdb4r09g6apddcu50z75x3wy8l6hu7rj5dnaefmuqy843pl1b66az9tcphk74l5xp7ulc1gpls71tm:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"gkmj2m5r8qti6y9wq1bbqbol88oj4juprlhvhj1e59ddetrbycnaroa920trfgh988ael49lxn5f9il0x0zah3xs9wtdj58sbejzd61t0bddb0crcstxa5dv022whq0zvlu\",\n      \"description\" : \"Rerum dolores beatae voluptate est. Corporis facilis alias et quas doloribus. Pariatur dolore similique rem fuga accusamus. Accusamus enim repudiandae alias.\",\n      \"location\" : \"4qoy4y1sj91y726f1r2m63ezy923k0yrlnzwpsnpcugo8lkeycqmut5ew7u3wtdz4fpwa012gbiasqanswvvfyy8rr486iv2xdae0g2xv69zv44yp598oaw8akoqkazufp67kseth5fn24rnylxuhkco7u2m0zm9w8h6nputpvizkdvmyypkvdq6cte3y634uw3k\",\n      \"title\" : \"Quas praesentium libero nihil in in.\"\n    },\n    \"role\" : \"w898kqbmr1tumljdbj8ku8esrzd0ugflzsjmsqwb8plxlpngakzr4dmdfrbpd41drrq9ocg\",\n    \"members\" : [ \"1wc67jil34x4o39pdi3vzquodvdfmccc8ddz0das3gsqcxub7tpcunw37x0prpmq6q4kbaaovgftjfp375areenpf9bu19eh4ew\", \"8hv0i80w8iz8ozre0w6wvdsta7vmg6g8gbkhj9w0f2bnx8dsweds355g5du5p5jo4e3ozp35efmhrr3s12do5fbbu2n31zld4ipqc1tz6e6ryxefcuiq86m6aki388a3faacc4qfqvpe2hhlo9ck66npgpvpyfge5wpd0er1zikhf8cd6unszs1fhvhqr8txjas510f\", \"qsipq95ul7vf1y10uu0g03odpjhc09ku4p0tmmfkf3fnozefbrh41bafta1i0uxshsobtkhrva7x95j9jxztqs1oa9nitfc6ad83yvubik4vept47r62k52wsq20bjig6wjitav48lsd7f3pf9uo544jmsw6f7yac217qi0igpgavmadj7v2w24hqswmrmtsrie\", \"sqw5b0on2q989crmuc5\", \"jaxii3bewynbl5q2em4xmtxutyi9omkvimw7rei3mxhsoryfgdtcdczhl4dxsstnwb9h9b1a0eu0aypcy2dbgfzdu5o5c2p999ae0t78ph5yasq02dhy6dxad2sjxkvld\", \"wzo6l39132czt05m2s4eitzarfxo6od0ae7893goetkxewprnxz6s43pa69nyxicz2gefy09ixqodnnsikqcdw5mosm1hoz2\", \"tshp1gdibc2b2pmtu7t6tspkrdxc240j1u\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"uk4fbcur3xf6fv35abei4drwvagq8ep028f7yzy6im7heek6\",\n      \"description\" : \"Tenetur ut similique tempora optio. Ratione nisi sit et. Sit earum qui blanditiis et ratione repudiandae. Repellat optio qui ipsam officia reiciendis.\",\n      \"location\" : \"ua9oxk67knydyskhqmc1d82uq2cy381ao7j7kaqp4qvo4mrzlzmit0kr2ij5e3omx9q4pa1r3hs9y0u6subjt5zfdq627oji4eveyklatab9wd0jo35kve764kuzzqwpqzif9tcp7311a5d21\",\n      \"title\" : \"Beatae cupiditate itaque enim sit et et aperiam.\"\n    },\n    \"role\" : \"0bpmzatlljecc15b0tqxtz756nw0glax6bx7s0kdzit4ng59gmb1erbv3e1m\",\n    \"members\" : [ \"j6zsj2x00314zsj6iwav20h0bcara66uqr23uzxfa6aw9ksm85xlikpxzvi\", \"4takk4vzjnudyjqvgxwswltg3i56hjycgrg8ntqbsqpw2z2ygk6czks3sspjihkqr5hlt1451mhywci0fktr9z69nutoz1zhewrrdo19fd5z2clybheawf1otrw1m37mlzsszqngunbzvd7bhup5u05blo\", \"0jyh5nporv1zbz2beh2gwdll4e9aa7noouksir\", \"er041vrkto1c4bhtd9wow8e6dik2zjqc105q72fy3j23yvalevq8tzr58xav30755n69svuy77pbge07l0nay2xqqlu882mh5748vafq8yllpf17acr7xhbur4uvekvypzu3t2gr6zaom3v9mbkh47f54326remq99ky6nvdap0w3i0cck46f9zijqddxezy\", \"eg4835abbsj7ta64a0vw7kj5y2rfuxu7zyurr84psbhcm3jioswcjax4\", \"9pzjex2r4idux8699ne59voygtuophdaiwxhs4tj52xm5v5j257km2yja3dgvn7r1a96ldnypn06suww80ol2mlgcomzb3w1qb8g7oszzxcsp47po1asvykingx8n0apvhpl79fm8be3tt6xsw8tr6xgmm59kmjna6hr5xeozagig5msnk7koive67yop6etuqw00\", \"la05qz687f9h3kcauq1bjfy9b7lq0kr36haevp0igzctbxku0ya2s0htlaje5j8jd6aur3s67jea73zduciyzbr2va2pklly6kzvt0y9xsqcqt0bsr981k1k2696pmo1m7avpat53otaphl1\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"altkphyq9fn230ucsvp05\",\n      \"description\" : \"Dolorum ad sequi. Id pariatur suscipit. Sequi est nesciunt deleniti. Reiciendis corporis itaque non animi dolor aut. Veritatis maiores autem sunt sit totam.\",\n      \"location\" : \"tcz98l2pj0gr3p1a3reozgcpdhddkvq2vucb5a0je0pir7or0ggyvr2ld7ku4upcc7gj2te175b\",\n      \"title\" : \"Qui quia voluptatum delectus sunt ea rem.\"\n    },\n    \"role\" : \"77y1uqczefr4pmvwb9sho8vj8xrry3tw2z93m\",\n    \"members\" : [ \"o0pfm495rww3wltf7fwucjcdx4d4zfds9ti0yzyxj4t476v3wqy4n88qf8rg66oopdfrrehbe9cqz8p4gc69v2ve1fg1wp2obdrmk12uwmk3s4u14blgyfghs402mr45ykp7akezm96lflz3oktz36pcs437zslbfwi4okltp4wu3owhcz8snjujlfawjlb977jv3c3t\", \"ovvz5f8hrcqzgjedpbehxiq64m1yazgi8d0nu5yrc90fri8fvxxe2ex5o51vjmk42w03h78ld8n0iiz5yi0jo6vp64gr9rfwjc84kv6pckz889jk92ha4cz3tvpvlapmq5jelzl5jmilm93vxk44j3hu9ls3u8qfbe2lo2vhyenldhlap6s1wrt3anqm\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"a86y3o6h5nr\",\n      \"description\" : \"Omnis dolore incidunt sint sint et. Tenetur itaque quibusdam ullam vitae aut eius qui. Distinctio hic nisi voluptatem voluptatem minima. Id sunt qui ab. Sed aut laborum deleniti placeat molestias repe\",\n      \"location\" : \"cuweg6nbvlqh35y7bykxepf7fluesbik1ohn3dmab6975pche7zu5sp5pggj1xz3v9w0nasfcxurzkk2r6q525j7yzumum8gcv7iuqivx96oymfr9bgextcmatomdo16ths4vdv68evy314oqnoiv3oy4yu8c8nnlztzrasovsji1vgxowklb9gfh30u7dih\",\n      \"title\" : \"Asperiores aspernatur quaerat placeat.\"\n    },\n    \"role\" : \"743jv79h1c8zvz3keajln7owu41f2u9fjupzqp2juy5xg60n1rgb4alxfspzsctjd7jx59g8ywm8gv914xcruk1yt\",\n    \"members\" : [ \"mtlbs7itcbhss14dbwzntwvcrnnj31zyrdlaqhxdjpycndszzqprenqe1prepgn0n13zri26ewubl5ivftjm8fa4x28q9hdedp2z3d6oocwh3s8kcy5vrz2z3itn2zv35w8oujbz6dmu2q8vi5vjn3aa6xvp6zz1lcjc\", \"xegd8hdsxgxqecw9gx6eb80xysa12oanj\", \"b4k62bd2i4qfia4m11c4ocz7j5zm6r371aou0jdnzjhxm57t54ty7blylqxilq7t4gjzm2elia0salkep8rqbobk\", \"yn6ca6z37ll3lezz3d1ak0215jm696qwebv7arfn9t8lpd32a4d1d1g0z043j31lohujq5or8zdyzupedubwclp9sllc48cl21c5x7v7b8oh5susa0nmdmetjfifsszxveg51t2wng8sff0ns165kqt8g52r785kntcz4vfl6ilyrcs3wmkn83fhj4yrwqo\", \"t2tr94l4hdebl0b89e45b6rc74c3hofs5bv4y3eou39mrauapd9ce9jfqc09rjchdo77p73e42nwzjl0x6ws9zxau8o8an4pb7j39gz\", \"nfui0hjj9vslbxo5hgf1mr526kwsk2jobugp13xie3i8t5w3x17n7jba74kwbac8baqq8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"23jr05pql979fs44h0h0pyku0cjfmhvno5dek4ob9ghiwyv8i7pvo0nx5s2nsi9he5lry93sgdxswo0d6ha7nd851w6o7w2usnzf\",\n      \"description\" : \"Culpa nobis aliquam. Voluptates et eum doloribus voluptates facilis nihil neque. Adipisci error qui labore et. Eius et voluptatem labore repellat dolores nihil. Voluptate libero reprehenderit omnis do\",\n      \"location\" : \"4zdsslunsh6lt9tksjvhmv7xtfmjahxw29sjyab1eomuf7wynnhni4l2gpndiui90f6lgorr4z7iyo86t8wss1d6zilji8ew2dosfozp\",\n      \"title\" : \"Corrupti sint quis distinctio omnis quibusdam.\"\n    },\n    \"role\" : \"hm6am\",\n    \"members\" : [ \"32g8jww1pssjonz9kpx0pl\", \"33nitamoofjwq00elu6run6wo6tneu1g620br2qse6vptg20t4ez6ko5h2mf66r4vg3wawzjjaiiud6rsgqd4vwwj4cyc5tsy79s06j7q40kg0vs4falk575lr7lmxjj3z45v117\", \"jywfihbti57kj6omqqwvc78rv2jcc7vyrpzmcbl5yxkphwimw05aes8rktt1cs9x0mwemzv4onws4ltcilag5ot\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"v4ym6l9mu1np2\",\n      \"description\" : \"Sapiente quos ad est repudiandae eveniet dolorum eius. Aut qui consequatur. Sunt voluptas similique deleniti perspiciatis id. Ut voluptates quas sint.\",\n      \"location\" : \"t5ai0wuvjox1bqh1w3577e2812g2kqtyx0fdlaq3x00smyoo7x2n6z0ixgv9twqy2alnvny45lc8fr8ewa9b0o9zih6iz0v2puznq6wa0zlvurvip5mk63scn6jphu43s99\",\n      \"title\" : \"Accusamus eligendi ut doloremque occaecati.\"\n    },\n    \"role\" : \"jdrhutd5p7qb8fghpozbgrj0w8zd4vcs6ksuryvl5lsyj6xn1y0p9omopblbwhbwdd3ux4bv6agoc8ifwb9vxwhci\",\n    \"members\" : [ \"6vs90bdxj2d9aqujs54z9o05w0xy41v2131z2b6tq69bwuffsd57rcaza5f74lbgyyrvxrrunjlk3mzmrw8f46dglazcfowz1s8wkcphc8bjftayj4y2aipq8d7xm2vrajyakp7\", \"h2jreavfomqm6s0tyc2ywhp3l26dze98d5c6rp0c4ai4ien19td6hwfrk51iu7lhzgr\", \"z8bzatnxy43lyubep7mojfvokcrhjo1fajzznad72olsqes6jf8re1j0dfodhs9c814qhzgmk81bo4lh7slbw63ckkhzn47af9bsc6azeb4i4s9y2pio9vbv7zr0tpaofxgp3lp96edo5an57j71onvpx7hubii22ydssurcw1tr\", \"m1frybyve32dy1xc5ettbc8bkcdvwg7iz4a6dcegytg9k2cq5yxr5x1l13lx18x9xc8kqyit5zv0dewbygaymccuz\", \"daa\", \"dca6oht8ejol0t7\", \"shfhnagbdj8dxxe\" ]\n  } ],\n  \"etag\" : \"recusandae\",\n  \"version\" : 2036621940,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"xt3ke0p0zmkambca60b5muywxp82l9aensiux5ujckplpqqit5k6gqqav00fw9bzkr4oo1ut4jj539sht48ucvs9mp8pk7rvfbpnpozq3o94qwz2pq968esyjbaay0zphzqwh2nzy3zdkjjfdybcp1mcow27x3pld4\", \"qldc0nhjdljgo7fv55282coekvqt0a73lpxz0jll0uftnwtuep725winvsm8lv5ctepbrklkb1oi7vgo9onlck944i19w9pcsg1gcnbw\", \"jtqn2urbkfnakedess4vlvotbxi7eww6wduvb5aq8kdodpyotwzatg043kkfv1mml9s2kbnecf4uc9fknelm8cxrxggck1vr5nwo11sdxwa0o2pnew1np476tfi4kjq5l1462qgdmz4ilzqsjgy27r2gom5qfnf304iyw2c2w81lfko46nnuk6rya966tijefo4a9ev\", \"cc1atazsdyqzed0crgmbo3fhvln1nnfv59hzubg4v5x9j75ia4gcfe7qmcrb4ip50ea1bkwz7depq9166vtggak3ehi255l4dvr4w5aezdcjp99hhnj3fx9vu6nk5vqkskwcqzzshrrnimx2olz58q3y3x13wkp4g8lyggffbhv19hdi7d6q\", \"jul4wlirzudlbe66azox7fz189sjzrievdhmwwaxzrvdfc1maxoozt2829ojavuhge695y5jh7m7rtkw7p3kc3qq8dcfr8obo70kisvtj0zdqfj3jh0v987uhhfqq29dw6u7lhs5bkh9155dmwjb4woq0dlwi8j3dy8nzzrdctlbc5kcyh17m9zkf5r90zz\", \"mbo9kk7v2mzt948lnyc981itt2ezay7f74cnubbwjglcs\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"mky8pe740mmn8pec3z38sa4jquw2g5v5fno9dibjphg5dbtvzvno174jr61pau9qciqlr5c8p2k5otsnui9xwoz6dcltw5jrmack2b2ru0au22m6lw13kbd8frgbv650uyn1ywcqx78ubchaecn56rp2doaaedjq\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"76stxxj0ft5y0lfyyt389o1twovmt7r6fz35ed40gr42cb36cg9ofjf21pjfz5qvgd463xb72e65natxd9njf6b71ssxo\", \"nnlapht0jnq0xp3456nwsjzf9m0xny90kjuinm7124g6hwkcqyu8qpgceth5ow0u0wjqabgti1lcby3c28zmysgtev6nzrgxw5m3l2pt3c3g17ggwcsjtog3hoj26cl3cx9sgbxn4ggyxd9gb7jpa14eucg78fyewi6erzd0ym6pmekgwrer56vma3pots3of8oor\", \"u3rst2rjwxq4t4gk69lf0m1og17p8u56nj99eud4yzh83lpmcohgawkms5erf73kiydbmfi84dzd2v\", \"bwsedo5y3v7gukkwojo6fxagryjpyip0u8nri2c8xj5loidorr8yco407u4hasmbx4d\", \"1flvjs9kuluypo5aiuf8nzo4skg0x3vwzota4hjwwkdjbphbxv4jokdcd049m8t9sfx05ao1\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"1wm2b2p5ozsaqs76brgmo3iobmq1k5nmuu0h2ux8z72adx6vxm0rmoczbaw7cnxzrqqh0oxpc1mvr9si\", \"timpekxomazgid09i6xmf8x2lrmac8sbt6zx2z52ozhlobbygehkpqva6u1blrtkpywskl1cfy9uthfdp0gmzq30q5e13112natm3u\", \"b2p3b1bsn04kxdc3cafee7m9gpzxv9lucr591bcsntc30ppgf22ayolmbdyuftbrpus587aizxhkq99ye5hhptwa1iuw79d0sfp90le9vsmfdrr7uky3r5a98n4pnioelta5l2ilal6nz4v2au4gk23rlpwi7hv46w6jr8h\", \"o2507h5417ovfetr5o2dt0cs8gssyjklp2147p1shbyp825rhyiee21bceeysbaaicq74p5ryjxx7gji1pg9ped6wcj8trspl86bfidwdxdq8um5y7jnz8y7rkeprm9dn99raj\", \"e0lnsnmgbcz8flj15so\", \"jetkr63h\", \"lhpzkfw2dj024zyz4k49mxay7nm75trwa5zteme36d7hyfar7xblxvz1lroc7x0edofono2sys5444cxx3zb6yveb8x3nnp9omjn45zyoaotr8plrxkgg7yiqsr66of78iiq8265zwvi62laztm2z0e88dvjjrx81uwd4avw1lq\", \"7es7a8yknhhb0zstxubz6utotcdzi8cy65l9uxtyxvyy98ek8h0luryw0tesnnhtnefgk3w8ip8y129wfmkqvge1cpstuv93qzewszeuywtl8br5\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"zk1tzlgyiqt2bxmcucd77vbnh5jfn9ol3i4sbbxk2lbj78n2cw6y2txpte2gkrh2g650ysexri3mrew2u5owfa9mp15q1fcwjd8yioefbvuwwk72ueoutp36eolggcraulf4smrstq3z\", \"yf733yy62v3jdo13260qoni3yfmuf9w2rp2qm9fercerbxmrwctw0aw8ncqqeix82sug91r242s\", \"re1b\", \"b77vnu6lhg5p6cyfza7km70e6im7xqkfoasqwpylwpea2\", \"ow6gj9lsqn3m0fajxsvpb4jlanen5m8w5zhj9656r1pfimpcjxbqah5vrkvzua4axcfsp9x5lm6of02qr6f5ljpzf5yyl8b1y67sczbjvxj1jux0tnww1hsc1zlmd26jqyxct6cgfwee3qtfxowh5n2bzj2w2yo0z4papwzpf996bbyym4ti9\", \"9gei1cb2i4g6pb0d2pg3llpfgc5jx2zerl6jo5yrcs3daneaxyahnacjew4lrj9igum95obsw1jqjmsnnyaiykwyssii7t4umpwq2pvu19ggz4mnexd5dlh45h7mx39y4p9ktn6ovz\", \"22ih0hl9j3zwqttwxojk6yd5tvb8jfzkl735asrwbvut6mu4645h8aw0wxmcrwi3pmm3wpksw\", \"8ltqj0\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"4n6lzfub3z52dkggf8qsz7iww5cjf3e91nv71inktw6rlzjymuhv6x111vrzyr35kotwvglhv08a67cm3on2flbgtqez7jl9z0vvkn0r17xgwjfypy3xm3wl36c8jay4x12feh013tu9zpo10jd\", \"kzfelr4nov5piabim1gnmgdbs21m7rgt6ibcfgrs24po9cwnwoj46niu6rkjlikn9j0h220y96ofioorsxouxxscsyopydhhj7zdy5fay2t647fh3am52ehuwyblnsz8mygwuhnrszktdzhq37f0\", \"6ga7wpgvvtbahl22zcdomxo1cw2mkdsukh41a5e6rsfj48f1vp5cy1ncf\", \"4ojea9es59nv1qou3t6u8956nw2w3cy7un8p3zq6nxcwnvf3pd20q\", \"pwhocd3xm31pp73at8nciu8qe125v4w8ioqfg4gjzajcdxxfyzpok1bz2le6l\", \"y2axwmsuf11zjf0470fhjcshptsuoxvvtfjmmpvlcgsvtz7c2volk8kqi6ainfx\", \"o35re8iflxe68zsmtqrrdw7xk3pry5m6la434zwy1iw02v1zxud6yuqwo2ni8rl2ybe6lh2ux9im9za4nkgid63nae34p32juczwuur1iutohk4azq8n1yp2et0wdp51u7jef7vsntv6yk5c8eses\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"069iptl27fvt6mbmstds1fkuxfg31vchwuor9zo1qyeh3910t4ou7ym2aydm9vl0r0qv91yxd6lte6f071\", \"im0xm1c02l311mio10xkculctg4jfopll5z449pheig1zw1kph31vdofr1lgagvkwtt9glcyv8lvgb34ddt296onxya953qfcf8350ycah8\", \"ii8m17gctte8f97h13b34ks5za9kesegy92c1cq22ytlo9mzwllwb5ip5s19v2bameqog62oi2k8lmlfofw4i9ebg3jcdvytlmhrdgfkttfgqw95flt5ybohnnzdcsgftoobp3r9e7qepx29loq7acj9vsm655w6rkl32fqefd880z7rwi55u7kdpzaert\" ]\n    } ],\n    \"service\" : \"hotg4atqpz03jrp1x6f2rotptcfg74eshseycx\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"k1q2g9746q7lmk0uu9p3dbxoahiqlniewpdwev9qlyb8atzc3jcuxc52wz8v1vukz6wmxrp1g8800gg358ks99xzdu8bhzmixlxtumap2hoykjg9olcpnmxvaxm0mhiltlq90qxecswxio6ij999hv8ay\", \"a3hqqskk8ix816idcbijv4zd1wdxyxjkzh2g9recxrdcledbt9ragbtqsyghhntt63zeposvlcx1n4gwbwsr5j0nmbxzcju7fpars3hcfxouoevd7ptqin8w5yvp8g9jkmj9b85zc87pczrpzj076rsq8svhdu5sjvj\", \"3k7c6uey\", \"izld0dbkhka0e8c26687kkkmgtbehphkgy0ggu9l1ac5z0pig6727izy4du91kwqjjp0pyafml5zfwjro8qg4anhgpml1ytzmhsd8iy8t4pkc9o9wqdyx7f5rmv8xfvsm7o4oms5280c4j88pn979u8cbft8mub3bzn\", \"veef0snjkm87sc85tbjo9zwkzf8l0frmkb97ik0gicdl1juu21bwf3lru9s7fn4mldsom2lpnsbdzdjunl8zc0ldeprdno1\", \"7wce5p078vjx4tnm9c2kcyf8ubvfyglbm3lrish2hp475wxj578xlnsi3nh193108nmdw561tz0ivgbi1fd35xay08rlk0e0c2wm3dyb9gttbzpxqipng85pregcemagr3mmmfe6s0k9xe3xjyjldfalg95\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"actqsx06otfnxeps0mext7mfoftr32ynfo9soguo07ggw2ie56popmzdd4ct5j8xs9tx2c\", \"5wwlaz5cratietdd5czq5jmt7ead4mbmvonzhe2390a068pbpz6qvs15kav5o9iymufs7y5dtp9228zvwtxx2ytp125vkva4o9osw55k11z14thz86axyzfdgy7zjx6vzp3xrgsxb\", \"halxybinh3pn2bjvm1z2eo9ore7o6gmwgfcdmefoazz06pgxiwl6trhw22okhzow95vmd9csf9hvxu7vaa1ttm02x7c42whadkhzni\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"dfmnn85no1cr6libmh6jpu9ra5vup9xyw73bza0mfiz4oviobsmlr91p8vwca3x1kq2k8g1cojfs03cx7swat8wtq85u3xa260xi0cjas49xgdcvcddjzu6ukql864qehthexh60b5h5q6a6fzpudz853a1uukvhqh6yhwnxn9bvsd7tiug9n4pm7d1pawxq4kgs\", \"0841691cm2o9kahiv8ovsts2xesv0xd3ruq7s147pfig537sjsf4pxlwugkvsohxoxco\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"2asu2i0okcpjnvmcltl4c41otgkjppwvj6slqgi9clrepobg7pz3muxfghnx27lezfhw331zrj8ts79dlb1zifz5nij2zkdrzo9z0rnx\", \"nbhcqgf5vwbq0mo3g5hhph7wakbn0te1z7rtx4t9jfylks0mffz6pvgmo1kbja4v3lqbb\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"4c22lgigwannj\", \"0yh3arau4fhdjni7mkcpaqhm5szu3dpgw5pvunmivbddwx\", \"aqh4usco39f37qj1lstb0pscp50im5ih7utx3snb8j45og5fudhb1jba85n8myqp53du6uhkfj3h5hbb1ibmjlqq3dyi8jr2uxeb4dudb9z2qk9562jquaap1p438ljywsj1ki2vwgwo2az9qhmmpnbzeutsuj4iyksqzwhdmibb2iwy73f\", \"w38gid72emosqvrjhxbysqkabb8kmsrsa2iy595wz1te4byqrykkkhlyqsbq2esxtygdvvajpmwt5ihin2woc771sm2gpe62c\", \"kudp4obkl9sdp3rvt2jhubi6mdgno0613vofs9bn41aalcbnqf8ohy5own530o0u\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"hrw96o106l9zlkgseuqiw3v12u52hczpjljetf0fk3ynyw28d75oelau4j94i3w1vyw192soqays40us79adu5spy7jvvx425dw2a8s\", \"bj3pd6b2kuvk592e7ao9jsg43ass48foydndjaexbubm06bxyszoklumhmn3i93dtxxlmab6u1brhtj83rm97u73b73grblq0rtnbkjsjlwsoyvkh7wyd\", \"iab5e3ykmpp4glbebz2qe3l886wv2nox3up6hzeq08zeds4bl015c0ajpjm50l5kbtjti7f4949wgtxg0jui5sac4bmpauq9214587nezdo7ubcbos012qigdydj9mpxckwjw9l7h7cljfaq\", \"f5uxz42kv3fmlglz8n5qjot4sst6\", \"jq9rgimqtcg5tbcy7e2q4wxs481d5pkms3dkppn8j0jo5emmzla04jn2852bi4q35kvexkcz1oh7r6u1d8fcvjcbi9t94lkwdcnhaf6igo5xt37dgp7mrecmizgfaud50rg8likj3l0wy0gso8qv6qdt17jkypp6n1zgexttnyd0hij1ijee6ksjji4djbgfdbos\", \"urr30u42cr5fdu7r4b0g06feacl1l8urnrbqepgn2g7i48feb6aiirit3kcrg4ht5m8mlk0dgl\" ]\n    } ],\n    \"service\" : \"nib9zc9aavsc9eaymdq954qovqzpmoy4mkz82186qdbbkf9i0cgyz4gpheblrz3ek9xnfl766zpleihy0njbkg5wh6cnxkjqf70s2emt8fz0ox7r2pt6qcpddjnsouw5tbio8m34eafbqfbk2co5t9vvfd7a8toa7pnsgl4btk72fxker6y2\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"baidsehexjwf2v15sf9j5lg2sc1vexmtig4mapjle5tarqihwak6w4kr6r5pq443t02o7srch3vbz9ufs5owpb82fhop8kj228i6w6sw2148o05fy1izvg87s09ttjacnyychrm41yurdj6s0e\", \"g98nv29ck2m7kjphwdpvx1mw14nyrkyj9qiyvf4\", \"z8caw8x117x0df47lt4xt68u6hiof85j9utai4i7k5cvb1nq1p6azcd4210dk46q4906ctotidya7kzbwkvxbx9ga97wfpfdx1haab6kmmnnzqcdz1hmsl32k4q29di3blgt82d2pxb01u7w2hydkk72dbbjnu1h31xs3ek1rd5db4kl1nkmqiy08as782ci9u0jurw\", \"0h9q524bmhrg5qujir1s641wn8edksqw3x3jy21xw4nzipszr0el47vf49g50jjdz9spiqcy7rb9bu0\", \"t10gku3vzz0bpu1xq61g81st1h3yan0eua50kc5xus1tzrqug1z8a8r03sn8wnclvgpgmpy3oyyb76xzs2fggxm9jam33qweahtydkdsvt0t2qbh1lkm9th497c1qoxu9uc8evxpexqgj0kk2eyp300hyj4tbmv0vvy6\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"vb8y1b23p3bb80ne7stjlhdb69xzjl7s9kkwwofim0xeyjbluczlcclukc90lzt03w42g1nt3i5zs5ijn3c2xjdetalyln1esped8ok219uy03ny2b4o5j8ml7lqxw0hd3hxp2uff2i55pagyy2qbc3vobam87lfa8xdhem6fnceo\", \"76v0otgjpnnhnnmnj6ykl7cnnzsc8pyi2wq1hullqd5ksgyp73fvrpavbsblog8q\", \"fnkitn9v8l28r5zu1rdknc0sgg40sdlde731718hbpwnn4jqap1aq4k0mf4olpvfar5kfhpxepmm6eny7kavgghxlx\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hjvaekx3g4pha85mwavnphdfk0bvs4nvcpilfmbs3dqhxb87dhui5fkkhrn4x2e0mbamqxljr2vb4e4m1\", \"irg9h7vdgot0kjgk37gsxiurzsph8x3ckf4byar429al73cifim9dfmq078me6c00\", \"u8lz1h6f87etcc2kykjuugrbpg8ja3w3k17wg52mpu4xrpedros7hd79c233bhbhb2c5ksv94pe6adlc4q1amrbmcrt6qp3qm1b6yyahlof82in04scew7yxftk8v0\", \"6zjw\", \"n6mkhfq\", \"7tujcvmq7a3sqgoit40xp3t8k051u3pnkpo3toz9qj4js28aho5k0gqemiad5j148dx36i93ww56au516pgtkphrpadkjotqvw7t2vzyuoj2dso6cni3hyrdj58ynhkplaps5sqj0i7uru9vmyxi4ikiithuqvfctwnd\", \"cqmi8cy6l5b95bu8q\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"r8yybt6yghl4wfw5ee47d2h783zx0mcj00klpqyl8ns3lyqmpwoibea5k0es2kuzvin5cu1vh05g2x5q1azsua2fcu60ng3sz6gfp0dag4gs475xfx6acrv1o954juutdoud71t\", \"9gtcrz72nnwix4ybypodsiwrg3bc6barweouw9jhrk15r2lvxmm3c2k5jktb\", \"5g35isc55bxbnkaqrb7ptf8b2oruwfc6mmxu5wzdftzadsv9bqwa4t71r1c1puz9mbid8z4honw17cnt8z9kb3jkypptxwe4p4tqupwutmcjlbvr6hyagdbfag02eyb6qdxiq1ir\", \"bavveb44cpo6prcs0w62iucg8h72yo8xgzgjkiyofmv66ymypm2hefj33yl3tkxwymkyj71mjvlpsjasgwd1lkbd10s6s3aooccdbhftdca4lnuvd\", \"3n9c9ujftss2uru2cw3ccq2zdpcpxzrl2ilt4um27ss2\", \"x1nrswlc53nc1wgqfqv1z6beru8se9ojwpi6blozd79i5\", \"hsjryyfqnke61ga9itp9dzkrxiq40i1or9us32cpo9svhvcpo4n1q9ogsl3kn0oyi65h27t9iv0l1amm1l8o1z5bao2s8nm4x9pio2w1hglc4uo9jq7dssz90zpcyfd9xptw5aiad2jgiaym02x\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"o08b43agvtci4it9siwe1u6cdu242mzcjqvcyvo714rzmd8aw0\", \"se9xeszzo3mmoc1e6xu42hwpo1l0rlbei6bvt04wjzaw4ejgthgoly9skjug8j5g73d3gj2m9d4xmaz3l4khtp917bi8rc4hot0o2ytwsewukuosjn2l3uw9zrm9xtmavd341ml7cuhxz04yy23prdhcen1f2ds2qfnpbum6b5cfbj6x\", \"bsnp3qmdsv4wcljp8g4jorn1vope1ysyflhcq7x1\", \"pum8jhwrfyuc0o85xf3apxu5juwmf4wf8fhqckx4h6wviq97fklxe3px8ew2362au8voez3hs76uyth7a3hizg08q1ypgnwnva5omrru355d120cjgi0z8vcfz72ek8gg77kk89y\", \"27ly7stt73sp33b7ef4v9fp8on97z3k837y7cigfu33\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"e14k1bpcw66d39sumqjxfpg5a7jlq6mkjy300ihxbdj7jph8eic0fn4b7iou1mmfsx6yqdr9qopfe919baejvjp6y\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"hwrgf73dnnj1utxv4ibh3m6lbdchnwanlz582jfqpbdn6whqb6v2fj46vbv1uayld5gkgbvesgiyuxuxhbm4wf3zb7xz0y19py0uqbz5xx0krfowdmbfb4sau20agq\", \"vnaki5s2mzc94x10si4t88u67aphlek0xprzlfxjyc4l9kykvwydppndrrbxeq9pmh09jhrys5dydsu0aacqdgst5cy7yikkh67jn78jq3tjt8gzdvxym2to01wkvhzklgr5ukmu38vgg6e5woqj8lysszvfdr018ol6wtqkrz4zbtius05pu5m0w9i9xjs7g2wj\" ]\n    } ],\n    \"service\" : \"4wre0p\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"de2d13ujvkh26mh7yiumm61wkbmgz200z6x20xdztpw5hjdhtbpf2u1x0k8ksqwzn812t97eyf6i7j9mcrv19erebh68zqfrebezkyiffspnrh7eklc345fgzps2x7s9w207cwwvsi37hdxy\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"vyp3sbrbi8c8olcvai4r77tcg3alxvxh1rb6w6j2qlw38f66m6shdshj2gdx41gu0wh3ibxhx5igba766vqmnp5v2g8x0wr25jsl69cr2xq4x9ubyhzi5p0pytmcdrrsst4vf40ml1wh2mr45gbdokvoeps07rv9gqc8f5xckkj12xuerkpzy30mv6a\", \"1u1pqwvljaa2j5ohpq78nrk92bw1dsrc5sgj4whpn2bok1sdvvdsd7nx09qf470\", \"rf3egmd98kxi4mzihr7vlx34cw2vpdhyxh04ar27c8mqh61wj8d1x1bevfbomlev0p18wordvbn1rz9alpwcf4f4f8tfbwu6lcvefl9p5nj78wncnz06kwxzwbhek0mrliwuz11gq37txa25pmj57tavala7kg6qfz0h3k1iniehtk068\" ]\n    } ],\n    \"service\" : \"k7trtkyzpbkvljn71t2hlp7piaoc8m\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"69o3icknv0zz2rcihrleca1kqdqcyiauuh54b\", \"moqlk5ibc1wos0ueeclj7c6xwwd9ealssh6a6izwhp0tt2tawhuo5zbzxjvpzdgb7yp441kkr7l9b6dycoh9pypf14ndfhtydbsgjm1x6g6ojiqkqj89k65ppf2zvd6c4b6abpmmi24d4o77awe5xpwq3cvwjm1xfyz9ftr3voyg7ytodncw1wzkocnjaxz1hhcifk\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ja0swcffpw9\", \"y60796ha6l2suxidstkdapw0mcc0xt7ejhesiq74lk7at5vh3943bhcka9lkbohopachdafrmz1ucybicd10megi1vcsgiomsvlmd58e9ifb36uxxn6rbswn50ynr6kbfm8vzjjaih8tfjs\", \"e5rgz6i1bsedd67ayvr8mcrlnusl6oy0voot6a400ln4nvd1n2eoa4udogik0dxtioa69frmstbzqalywr17h75kg1tml73yukirkhut7tig7zubhi03a1pcim0mhgsqkswww49xgn3hc20idluhwbc746px59x5z5sgf418gbwrvnof1lh\", \"0lqeapt5jemayzkhjvayi6qt059x33vkmd9094rsmel95vncnn74\", \"hich\", \"zd4jd82bdtl1p4pm26p63sqqm20i1wggiuo68eu7qjs9umpw3gfbbu174s7ghy0p6isly8g4q8v72c7f66qm8x3s25wywqlonxrkvdvhzkn2kzgo9i56elw7nbrzlon70ilvw60\", \"ogkvcsp\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"m1mvidi8ydthv647dj32ygvaxx82tjmfd087016cpc47dscuyjxbo27mgw3fcxi0l2mi8ua08vvc6v9rzf843fw9f8bl42hqvt7zi8d6x5\", \"mg7fxz9oxdm0p4hxr85j0reacy1dr2gdjg33u1kj5e0ifwqnvvsmh1uxza39pzixg0py08t799j8mkzrxanav0ro5pre2vfu\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"z3vh53dncn7y4j7dtwdixwtw3br0zd50am517fhfwlc7j07c07i7cgmqsoid8ka9jh0o0y3hrur82ayn8ptmjtuxel6cem8yjj5zr631m047c95dg6ozfwr\", \"x8sl6vmow9fa7hw7q90rbe8r2e4qah1s5ukuva81jr0q6qsvhfybxvwk2syudpmx849jk9gchynrbpry4jynadatnxu6s4tm82peqo486tvrlpyvmc4q220yh06iiqhtaweaccxeq6ksk2xnd7tjc5nmjuxewjj3iqjn7caasn60hdz2z87gkvaezfze1sf6\", \"isgy68gzof9xarynhnu2sq95lfk7r3f\", \"re1pl06wz0zat1k0oewlgqsvr6xkt5ha8y955oh0kuw1aj679b4ueh78e65qii53dbpis974ray4rvsbo45882iw5i7gg3afjl2cu8gtvv6h3mm9h4iducejr2554tajpwbdvx4b8v7oowwsl310ud718n3lt0zzbwdbufrp21ibf02iq56qtlthof0x1ueb\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"c4f11yfjdu012vyf4v5zqqnd4135gg9jaddbsvuereg205d7skycbiunr651xdvawyfpsumpvpxuuvgrn8dmedxbyj6am7rv1tgsfn1iq2aeunmn1necz1pzlxpm5a33uyxayavvb1dpmyifb1wrtwht973m3u58xri7pieamrnwbzufkb8jezp3th0g0uksum\", \"l4jdqvhrgdxuixsa2kuyp6fuq60y02xumftme01viqtx4rwoxovupxdbl5q\" ]\n    } ],\n    \"service\" : \"3xaln1fmm733hij7x868pkr8gzpwfnc7ncebv0otpicdzwkuiddv7uiouhzsks63d0hh8iymvz5qm0gg7dtew4wzmvs5b2907ez1a5ikhnec8wn4xxi38mixfx2eh4ghmlgphbzsf537c7v6wxsn8c0veg6ifkzm5i0qqu2okejxmcazvo3ae2tojk1uy1nb68\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"00k80c3q6d8yxgiipkv06f3lzr67f17zrhbpgcbz6u62age55yfo3vx0o9cwp5v0y15fb0hktrsyxshxop8te8ghpm3htnl8i72hmzde\", \"dx1s8t5fl7ry4vgqv7h40gtovk96w00eosowq45e6odhgcm62wpkd7c07fbe7eek8pfajp7w52c7mbfewtvlcyvdqq3ks1yxyjtn5ns92nf9ce7rilzbkg1g6mi79sbbtebiare5lar74vec4holn78fel8g88tj5ig4bhnh70wownkoxvj40h4jv1krull1\", \"fkpq21ap0sai6jii6hqzowp8mby8t81\", \"x9un5rfv34y0923hdkoaul4074c7yr4mdraxg2evfkiohs8penmodjmb7xsn5tl3c873kcvv2\", \"seto0hi7duuagvk7y2gijvie7hagjwks3qm36ewuig8om8mjq78tbwcr8de3pdhme2pgs8f4kgqd1bffxbc1fo1fwlf7piac1zv70arkkxkljkqemt\", \"8mgcmv1kpeflwp\", \"qh8vf1npaom3gfbgk\", \"pv6vqtbq48yq5uxp60fmdrrvtby7knlz0v4d4e9njkledp2nhgh3ufb3983b49bhna8353z1dw2wzk1y0r7bv15z7sdnuyv3ts1pbbdb0xyz8wgwiitlw58us7k7zm65mlskgbw3c2pontxf0ji2d7yv777aa5hbzuhsq3iobjmumjexsh71d2e4kq\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"6lhxhx4sdcgmko2tzbjymp0by495usxa9t3dh4zugylpxsmj60hszqqeojpq2io9mkmdwqj2av9uqlg4sijhpmfomaq8tll5fp27ubi7u2j97s2o5fg59\", \"fo4sdrzse2k7vdfn361jxf4qi4c4d5gd4mk9pqmyxj9es8eccjviw6lx10awkpjo9exl93rr3bwo22ftrjb495awghy1xtsokbtrsdam\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"o1a64fzmr91gc5q46xd6mjzfd3yrby0xzoknd16azd6u7jxww675\", \"ftl9baa9nulp4yfie12r92tue96xubrhpm1mbjw9lyr17y7dfw8ta98p23t3oky8rvqp3h40onzy7ya17vcrk2wea8znh83tyzr79m8idtta6r2pu10581hvd76spbrt2a2bv0co0\", \"xnqzwjprmhm7rwpchsped9xyo1azr31npx3suhlx1giz4gwygcmlc2x1b0nzmw1g039v4pi914s5q7lfdmabyz\", \"1ykos9hn8ta99q5faltj8x93rcx4ihiu8o4xqp7vl175w5eon13tmu8gl99qqtcmfzmky14iug3mbre8gp6tnjom60y0ulwos52n7iszyjnin36pnyg882dd48tejuq5hmh779qobhej3kqqe74pfwexlp5jgepzghiv280sszgack6nbdr68pwqfkm\", \"y8n3ytl44fqt5vbxhg3750kqw31u1j4smw3e6tutj13sm3qegrsxlgkmj8hty14w7rxksbotv5vo3m33wm5sx5i3tmyl7brvkgmtkgz8gpmz3p19upq4e2r96gpcbbh9dq4x6irben9aajh0arz57g6qq34lzsr\", \"3hnbc8ydtdq0w5mixtdg5noy9sna37dc5lc3q59qj8o6fxdfsaz9a7icul9us0x2h6xbsueuolfvzs3virznmb4zbjl2oe2aywpsqiexaoq4gesn085e\", \"mvx63sahornr8vyjv6d8c0s1yighq3ff3zp81ckdgfo9h35cr51vsp7pboqluncu0g24545tj5n5d5o6348p80eyszwma3687x15tbctjl9n2f21takmqsy5kqz7ahdpugaz3ydhkwjpaqgh27wzgaeu890ludi0xl5nm4h8sg7wst9hpn0ba6\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"gm56q8rdeekrrh16mpb0ec36sugrdikabisyqio05444mgttjzr1uo7wguauqzvxsnuab2hn3nauaov8hfrk90m9kq13qkwfvcdl8m\", \"fjqc97b2g98dhn4rjzf00vvkdn67jsk17wsz5tvcyjhhff42q\", \"v1gj8ph7qqcawskamxv79lsk98gfh7m77gxi37\", \"bwb63uco61qer14oteyyghibjzr72w3m8dyi0tr9m2wzaciukwmref6qb6hateizvl8ppnn2ggilt7vmasneyufz3fw8i6mjeshxcdxo7pd8daej37tbz3bqrmayhxizqmis4m8e5ib59d4uogpydlfczm2ebibmfehwiyxpgvh2dldb7e67dsawjd4lblol\", \"psyp4dn8fo7zv8jekhk8ug3yjr7bnu6zzlaucw1tfi30y5sayhzug79r727swjmaiml39haz1cgibql6nnqbqfnwcc1wfk8nevncok7p92nl85l933f54zq218wr27h57jj9hxi8o5ixbo2b\", \"7nw26l7mfy4g1vtij55b7u895kldaplewbkxe02h5qcubsc1vd7ayr7ipp65d2m7w06rp05kod6ssxd4txifegg10ffad4nq14i4\", \"ally0n\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"qrd8jbqzbbvhm0055xj0ulankekipyzw13ng7qs5bvizaxiazq457q3cfiqrv3lje5x66m17mz00278906aucelx7e6ppolbtxlfi6dnjev0l\", \"n35yjrxuqws7qi1f3azf847berqewrwgj4kf1wg5pp7unkqd36pg35xa2w333dazbg5rg95f0nzxy8j14oocgxq6h5yuzvi4atrah772bi3dsgmt2ot8yur81osvbwas160toyk06ek9c3wa16ear3on46tnk1fbq2cvhhyu\", \"3qq09yzoryqypg5v6411nz4nyn0xnt485u2swxdg6b7glxveybcjgzv0vs887kuyc9ycwbl3iwbiaqhve3u10v2\", \"amd8xhbb2m3tv7lkddexetnr90u554jdpfiqthj1xiswjhj8j9ihbvcgdh6l5iz6jerdzyu2ld1hw5ifjds\", \"olyaz1yw\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7c8bw4xyafusfqyt3c9i49y9xf3yo9qqdr2b5snkkjzl7d36hkugtdldu81t7gma1aglfswrcng3li83ka6y4ydcf8f8pbwrv5fnts48ggrrgwhtme0\", \"tqy7hmmaubqrh20bs3inxfdh6d36n4st77yhou89ndfrxnhaddqc7bc4c0un41h6tzgsqe6hwnmpcizosxa4o4ha69qjumh2\", \"vza7snx53qy67fwq81i0ex4x18ywjgonz0i4m2o3po03bbkhdgwbky0775rg65wuuiqvv\", \"ot6sntjupvs4ehipha5i3wpjgtxt2s1qk0fxv36txl1tvwn2d8jpaw2t6sdk9ea6o7zbjznz2lk4t2\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7d7sh1t7xrfwyoi0x8n23cktzs8eyvaysmv84y229507cd90ehlwydi699n5x1q0ogs\", \"ilherong4ru8j20heecry7688x636wo35j4bc073smyn0pgrkf8ezhh12o94g6c1vg6x550jte2g0udt12kct5qyvauysjkfvme8pvnlr4x7ds51wbheb9mag8gcivcv2ch9zhyejy4t1gnhxvj7z7m700gjm0\" ]\n    } ],\n    \"service\" : \"pnf90zusg1yyct7q90twzok993tzegojld0iormrhxqbavyfnvdz2tpwflm4anoezav447ml5s1c55csp7dm4wtpfohqux4eez9l1qv5dkb4ycfhkp26pxsrj1019m4ppmtd7ht1ov9813xqbnfmsjexxs99clg59gcypzcb6vz66vw2ticmiib8s98b76jz3al6jdb\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"xcexzj7mdwqsndr3myhu13k6hsjhei36let1mgxtjyapczs9nzuyvldtko683zaa0k86tgpwe9xsmlrkhu9tlgitj388vyiw3u5rpabelpxhq6wixwfx0npl1ebemeasawyh1322yv3\", \"swofk0gfv7515kkymz0d7y9jh9x7vpm66ifyz7cygjh002q\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"io0x4ues6g1tzjasxhnb2rlbyo\", \"vm6d9tmjmvnmwc4j1ek608zxa3v5g8wrgdsc2gzvq8qwffnqi1qbp2bwzzwo6f06512agz5aqxiuxc6ywfpounqp\", \"496iwxyji4kwacnjxsc3raf9rv31wczdlslyjxhozlvar33u5mibb2qw396cb9\", \"n8oebefyvujg2x1ggzzje3vtdzehvud4r0p49z8nzgg1jqdv0raq54tg1gaay4yz56fdqc4q1tomo37oxcoqs6bb2t6hy5wspuiyhhabusiw8t5xyvxx8qhv1n7mbtmlfmuu6ad6616q8gd4i2p0k\", \"ak9mn94ozd1tk3euo66tc2gjpdsm5zos464p3rzfryt438tyygcz0jpmw1wmwumur5mvzk6r6duru2us6tnaxav1up6tprypo5zc694hrimeafygj07iomm7q0m1eag4yqr0u1xp79qlwdjwhfkj\", \"bijm4vecj7hufart9pl2qvxj5lr2nhmbnu8wepobz5ddxgkfxznao58si1dpo9xtlj8sjnlgqvdra8yi\", \"y7oyj9693p4vrkn397xrr45k9ib3bsv4ipmpzs1ief7flgi4qwi8d9ihzzsh5obyp44s09qksb7dl4hv73t3m3nmrsj33hcw\", \"26okue02ft2ijc7z0k4j8b1eim7g4jusgs4k825q35wiq43fbi8odggrpa8kquux1ylfzrmh3ul47ckq7qbdqu0kjxdqk2l3tlwfvdvyb90ij1qwgp1qfqmm293hyi6vct76ph7qjl5f5tcrmizzbuut30okh6jwuigqk27wmso2tm7opj88i934eeel\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"lr1lkj3utg54wodwe\", \"d1z6wmjaiuijdd08cihb4nhrvutvucckfk5r93n30o8miv12lgn0nmfp72vumbbiyuoesbo4sig5ihw6sc7aa7sf09wq6kjtip3ks9yf2j80cakw6n2pt9vkw3xwfaxff5i0u3w3ihiy13r0z9z4zn\", \"zb1a2t7bj7lb05mn9so8d33\", \"sqm5sc2sozj79oejt7ioa9by5g\", \"802huq2qycaiovlkbiag36shpcb4h7eodgot4491qtumwyhjshka2elnmybzdxw4\", \"l86rdhy9pt8pyp4jfy5qd0b6tdjay7h3vadxgu0i8l3eeqi77l7ymhuq3ohg1ft90cc97pacte629tinoqnq1yztnn2zjrolqha2b9zlirmpksu9b4g2bwaqrvhqddy5k1vsowlnxw9uh5fk9om1blnxtnqm6r3ci93dphug4md2c58zgx2b5umnngevfybq\", \"ctuv6fgxqbdqm9\" ]\n    } ],\n    \"service\" : \"0z3xkytt0r5nvjei9houuhc6j36i4rmiblcq10p\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ulym0vin3k52j4bl0x0kjzsxbvqvdoifprqy264aac6z8grqfji5819ub4gqvz4zwy7tn4265uj0c7csf45jp3t1adsv6sek7j032jxolsz6gesrq63lbpw5k3hqbi8kyau0bpdbuo5nzc\", \"x4ub5la18j1h6p3n0u8symk0mzj3wo0qmplldeguhyehu8pn5l7ife2jxx6vwucgv39jct23nwc6zjvdbohu1lg0b74eadteonpe9a76efzkzz440tdsb485w1ah99cstzqptg697g\", \"xcs5d87r9tlr9o794xpvhf4urxlbocuplm5uu57wimuyw6wbxf0ob8rtbijeoyzongc42bwp9kn9lqqpuzkmrc3dfmvgjdcnj7htza6icga2bw6xuuj3dv7gxyf0lfoh13kt8j8c1hxzek3mevm\", \"h8lthy\", \"59azcogfqmte4iv8bl62pbj1cvy6jlcamqhhexdfi4ezi5649huixwychnt4tudniwctxeah0ifzsupjvwnji7yhjv1r47c801twz0636qrexw1fprhlqsrph9jc0nlc70hhove22ewdazdambljfhec5srmqrp9021pea5d1d9w656\", \"diyvzbjx35w90l81fm3cyn2tenbj\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"0veptc1sohz4xixp629mix6a3fg7dltgnih7bhnfdi8q6zp5j5bd5gvof3hx7yg3byrgo30fmqqrykervsuwtx1itxk7imudhdkzfhcw9ebop03rk0q8sdpb7fp3rarwpuksc0cprg9snt0xs3zwco62drccgx6yu1z4cw4gziivtc2xwn\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"495ib2yvo51swal2x\", \"c6stu894mgwyustkbkaliq2rj0ncmh38h3j2m4r9xquuwtirv1r2ampwq9dpjch2ldwfbv0bxb41iz250xycoz54r2oswl9dp4k30i9jpdydxlfl\", \"wadfye74uzrb7qdxyx9d13ol53155kx6bf2ldfls8ddyjvhg7agxg07uvdjfmf9du5swctzawpo72b1gux1bnx399nc7p5v7mcyztkv8cet01el67cdozcoztmxzt5mad05mh9afmabvwrpiemkjkgjchs1ez1gkhh0ifwor5km4aypggvx89z\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"0do8gifhq99q29rdvlfxg7ibnlrvygwuqjhe5uzwzeudu8bkbx9h9kuu9cb3b6e0xf8srqj77c18y1gnno6ykph70qjvogjiq\", \"ibbfwcl23bnfrwi8wlsvp685mro10dlczjymn1et4ugfl6kix60zpg1j5sp6qdbiczusiplzbizu89bt0t80rksmsk70mpvqyqmlziokrv41iligyxb9iqxfzqchcbq9pschgu3dtof4pqqvaj8olqudtfefoc7m06q\", \"0gya7f1lfk21ouavnz4sskvq7vhd48dvlpny7f4jsftp3qoj3e5vfh4cz3h338q29j1m9rc7hpaivbg3b4dol\", \"06r2p710uzp7aeqyfzk14chukt66d2mzozazm3jjf0oxv8tky\", \"h9fy9tssvee5evxcceqlyeoqjsvowhaw7ycqi9yys68mz63shcusss0wcwewp7akftpxb6nj3g9e90f5wtoggaf6e54xld0ynyeic22gs00ycwfm39gobzz5cyss0gjvy7qe03srbmrho3iaehl9fxvyijrxqsvx56ttlqjmeb3go\", \"4jfy5lids24uesnagek370lg\", \"tzo4g3a93zir5jieinj6r5rgohp6tt4aw9xcfthwlqczqfpf0g6lieyk4vqg9xys2mz73i2po8u1acz7si70l8evvivnqj1nk1on1m2cctevdggypwhbon6n9zi0xfastvthuds9xfefzlh90ump7gnjphkw89kajj2glr016zv1dx9rka47ypkngx1msub1fyzaehf\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"n6p78iuu2yp6632rhhv9s1m8eojmcve1k\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"9p7fniury21v4x0uz53wsqh368xl9r798fly2c79lx07f1saexkv3eq\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"nkraptxctcg5ojxavyys8xhp7j1o1b27u0ie7kzm2pdgb08li0bvx8gyc88kk2ni2199jfsqldavhngyhdxj61kl6bl63mqmwsvnegpfj83hncgh3zk73tyk9cvl4ls5o2\", \"2cle3i73k4yi9jch2b8kr48ezladjt9vd7sru3qbus3w4dvpiz1930umb983knd2zh15v3lgym22x3y9372bpp90tnpf5bktski58ea1rk7yfu9qwb9zu3m1lia2yk5eri0hys39ypthw7lkm0u5e9b7uz6kboo6cz7tps2atehyax58wojkd86n\", \"6xhrc8gcu1b9fj043r8r8yurj41e459xz0nz5jjurt0w1jcb0j1pyxwmb5swmxf9dm25yjzf2pw1k61lsajz6xd1bwhuyccisxqsaruhc3ux38rdf6jkslfs\", \"cvsahp66p5wpl1122wdc30w4\", \"xutewzhn23gusbx0snoidq6t6b3ydk6ymowlnonq262bduqvnervpeltyl6kskg4hlppxov4n1b2kd1itjhe7n6u8fh9uem41vax8a05w6lezzrhkmf0o07odcvt4u1bslwpv3il68docts4swn4nqku5galxrwz0nk23me3xr7nei\", \"oybf64rjmy720tjousruy7sis4fdhv4l7r7fp0oz1mx7pwxycjz17ymada0p76qgo00vt\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"t47pmhtleobss31dp4fd1dtb9dj58nym240zz72pgwt4qz724pgsu1le0fszg52rlkmcdd40ytax90ms35h414wfc8ekrrmb1p3pn1es6o7b9rjgesmvjpi7tpa7l95z7zumcd0ko8yhutyp0pnjq2ed6q65yb8ez927mbqp5i04wkmzy141wh0l8mnvu9e8gfxrt\", \"5ywic6wz1w6qrr40bksx394h9aey808r6mmmx71o7a5jafin6ixycga1ziy3l3e4b7jwaql\" ]\n    } ],\n    \"service\" : \"v36rgiz35gzzc9bw9i0h91b0tnvmd3v4sb8\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1426a32-ed98-4c5a-bcc6-abbca22c5e86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.655131Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c3ecb243-05dc-4024-9809-a81afacc40b5",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/25lzamemv7zw8k9ptam9vhfqjx12kdutkt8zmr8wd151smexhteudwjtzrj0ttglwcy16l3wz73ttl6zinkx5l:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"fhsw30ol8gerdzz61ipm9lnuksik9k1tv6lcs8ve8lowqagcr6a3e8o8opyj86hov73zmxmmlbwo1n5a2qfo3lybayeif4wy9uzrmclstzp0ynvfx4ux3ymp6z7ejiy4r97dv0fcit5m65\",\n      \"description\" : \"Maiores et vel inventore omnis a recusandae distinctio. Quia quaerat est iure debitis. Amet facilis tempora nesciunt similique laboriosam vel. Sed quos nostrum eum accusamus perferendis. Reprehenderit\",\n      \"location\" : \"74s3nivog6l3dqdfx2zfa9qzqu8mvdf7pymk0tp9u5im0rav52r8sf4lo3mqu2mc7pebgw88yxn3zt4i3ccerpdimcmtqnp2usscatlsjnnuy19wfh2rnx5vbksycgtd9z6ewi\",\n      \"title\" : \"Accusamus aut ad omnis.\"\n    },\n    \"role\" : \"1h62p3o8s23n7m4dxst3xl3nqrbftevq2egmwahctqwxt911375yf5sy4vu6z4kptwvpsln18u5uh\",\n    \"members\" : [ \"f6a3q70n92hfna0ccqvphdcf7uekdjkd20fn4kzhj70p6u0w4rlo35htm1m\", \"k0ghfo9xiusk0a36erxqpdtlknfejdiagoe7hjo6rfdeenkxnp8h3w3gdyg43fs2htws4sm6vhruhfgbmmi43vtnxl3c2qvlgzlfbzxqyz1nl\", \"8oqk34m4djwvj9vv6c27iuthtppwo8ym37wex08ti28i0b2gltz47xrx00h51r81tfe4af21qytvm912h96wpxymzn\", \"g2cqyfydz48ur5tqgnuq6fup5b0plyujpbx9tcezttrivobcwoepopu3dj0qjn7eqgk974be4m\", \"ponqiz97mon3kh6cu9tsa7pt0g5itim29jabdtcddc0q8mthrvvr6k233fz7lptc0515s97f4qc6i9y15cve6py7j1evhuhai32ldgpjuis0ioe7vlrr42l4lt806fidyvbwmkjpch8o8dgv2mcmibob0\", \"iad0ivhtzfcws1t6bj0830wn1i9mvi1ffckqqfbf1d93zoer6vlx2wl7yatimm84xuduejki0ylt13isnt3ll5ndylau2567km887nj02ugco25vwfg1v8dd\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dtyt9rhjt1q3ij0dhl2hy8z0f92bcghd1bqgaoecinvs39lmfzu9g3iye2bom29xrj67xplblglpotmldpf2ypnavhdu91coedxbqw5u4xipfn41fk9g4hul08i6ujyjv5jq2zb\",\n      \"description\" : \"Recusandae sint consequuntur repellat. Facilis est excepturi distinctio iste ab exercitationem. Maiores possimus perspiciatis non reiciendis saepe itaque voluptas. Rerum cumque quibusdam quo et dicta.\",\n      \"location\" : \"tja4ozjs64mh7ykn445rzm8hug8at24yb039l751vv58o83fc8lax37vk5ezqindbw02y2u6nxlb267ce00eeksozxmenr8uayuyw7f6vmjn2gm631ur2v6ekp3v0azyvu4i7sbb6ejjhuiu1emq5m82uafvc7kpjordzjt0smhoxf\",\n      \"title\" : \"Voluptas illum numquam dolor aspernatur.\"\n    },\n    \"role\" : \"eidsyub00hpl4si72975yju2y7uys5pxnwq73rebpfumt9vur9qo59sfb7h\",\n    \"members\" : [ \"ul0who72cccc0jsu7s3omlj0iezxn2lq2ysa5axcq49rtybw2ww9zm12uoor7kkoeyjewf9jpbn5h4a4j9flwx48ol4ed4sg9oy35vnh4yuekn40i6719ofexnfqf6h1g91jw3shcomh7yhb2jpd7kq5p6hyn2wbit4kx1cbcqfoh46a8yupsyasn7\", \"0o09751beiti40o4aaqu6u53skzlo2tied38ep5b20phn57llx2d4w9d4g3j8mncbep7niqn38vgldtmxp3cps1wb8644inib7z1iz2fwx0f5t2kb46d27p9zrzfxtziyo4m28b6yyir8wmjh03478982knczvn1thsj4ieqjltn9k5b0nsozs1wf11o5pprauc3kxz\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"b8w9z73swupss8fk8i7p5fzckboz03rooabtygz4w2sopumg498sqk9f2trmmas4sskv3p63o4tv5j246jtebwuyp0rad13dzf62x\",\n      \"description\" : \"Ratione praesentium sit est. Voluptatibus et laboriosam recusandae qui molestias consequatur. Consequatur harum veritatis eius inventore eaque. Repellat cum voluptas ut et eum assumenda consectetur.\",\n      \"location\" : \"syrhttkb9nysmftpd4i4exod3fiz0a7\",\n      \"title\" : \"Aliquam quasi praesentium est et porro.\"\n    },\n    \"role\" : \"cjd5ubasi7e4gv29igapk9bv1u4tx1uhmlj4mcaydie3vsxnl3bqr9w7zjqymmglbjpg2l1uy17842bww9jy2ttf9q0v7is76hvdjbz7m6qq6ehv7stt66ca49sd3ueknzm75lflyrhfu2b8m5dj1ha5g6kuz85v1k8yeb1tsxeqrkpgtcr8af23qennineqil\",\n    \"members\" : [ \"g3oyaqah0mg2odtbqwm4c2z49xcarj1owk0nlrjhirzd6geh7z695rrn82zv9cef2y59m4zh7h3l0wpqng458slo06tgsnesa040bv0koczvqzsgo9bsvvlm6m1l5c6g1co06ite7\", \"f45iua1aamzxzcystzilrn0i6noywb27ia19u1tf\", \"9kxpjqdj1qohl0lr\", \"ubp8ffdfjc9xocwf3dscxtjbcjqubntd32ofugohl322ul57xlbx5bxv0zku78d1bieig0z18cvuqbedd1cbrj5s7qx1q302reqgnw9qwbv3yp0yr71i7snzodvp0hl4jvd95oep4nwc7vaex5nm1qljckv4upljiifusvne9qwi5mc4epa3p6\", \"icvzhi1l831a96xnnsg58knylw6rtaw30t5in88pq9y9e0mjqjm2tiuleolo\", \"h9pq8cgvniyq9az9cc12rqgw1niftojyxw7fy0raa0mapdwhmk\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"svfpxsgp5exfuvu1b0syf4n5qv86goppfi3ctw6dv0dtctelj6l3hfx97ozg7h0s50t2tvu5450e5wosv12flryd9zz12uu5kpy26xqrcj\",\n      \"description\" : \"Cum praesentium voluptas culpa quibusdam error beatae. Adipisci est incidunt. Perspiciatis et ad corrupti eum doloremque itaque. Animi sit velit est consequatur ut accusantium. Non dolor nemo nostrum \",\n      \"location\" : \"sbniqvqatb03x82c9fru21f096k7c3fsetpxskop\",\n      \"title\" : \"Molestias sit animi iusto dicta iure.\"\n    },\n    \"role\" : \"bd99k8cria8l751z7u1z2p5eymcqblnp01r0hh794zfnxfftkszamebc0snapsd5walcp\",\n    \"members\" : [ \"ppccegendnwd4ww2o1ibfs92g4ybm2epkxt5e\", \"o85a9zw0wa3\", \"h2usvf1xwelrnaukf2239d7x55zqe23wst8zgckpbc94zqw9zsxdqfn8wn2z1jplfjg9rkb4zt5irdj0ai30su68\", \"20nm770hgs81prk8kgm83q44ossyhden1wei15ytwqwxcexs2o9e1pb9s56na4enmso7lick72trc505nvrfoppcg1enxw552amggqaga0uf7csemsu60e1dyhd82nma347vqppy8z4dqn57gc6h10ii1p7s5nndzm\", \"vlhsmpo738q4o04resxq0ajtwpefpofxofdefbbs1d8x741zp7xsh7rhtpmqsihaykzd1kgvpmjjo71aw8239pwh2tnwocps217vtbd58s1n1u516iz16iairan5isfcrujxf9da1nuj0wdz72d0uk1rp3jxbt6152obrgsc8u\", \"pyioqmo8h86axpi2c8dzw555wxj0aeqe4h4dmhsmzumuvb4nd76ot2cnboz0cyijdgnvxsvpn23oim22y3wpl9cdix291xjtkvuiushmyqpwrv7wz994fa1qy5g5qgigot\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"9t33pqj1a1qd0d6edq7u8f1rijjkxju7ydwlvbwyiua7qvky4popr93wkaspoblx306m3ijjc0o9ajmotlpdo9xsir586ci0dl6uricvup5ygdqpdpp20dab6t7i\",\n      \"description\" : \"Ea doloremque repudiandae alias molestiae illum. Maxime optio vero enim voluptatem nobis a consectetur. Rerum mollitia quam eum deserunt.\",\n      \"location\" : \"0gabfk708rzf9mvulvjou3sl87d6fxhoi69siaquhsx6wxrh589db8dqgdc8xxrtwfobfn56lql5two8o76n0i8hsoqtbf0d8a0hkfmzflychmoo252u00noc1nzmze2pko9shz\",\n      \"title\" : \"Culpa qui qui non illum.\"\n    },\n    \"role\" : \"5uk\",\n    \"members\" : [ \"42hu237tfjl12hnny6nfttakpi2eh2sxrrnvditiva5bof7v4olki4j5ujt8c9s1pn7sq10wit8uknsxvvfr7opau29qjezymu8ix8fvztqvvnmhs8k9wyapcnynnytq7p3ltur\", \"1bce3f444gem8p0il196ye2g5bnexvde9ndz33ne9lwzqrqef19f8sjk56ivq\", \"txdp39350b63lqi3nmmfljkbcwhgsvank6y5uwc147dr6qjrdgtd5wqwsu6xyzkz2lrxfv09hwg8238n0c1h9hbyiw9xe12d607j3ll8k\", \"yloi2kkakswrb3xr0jr27t94knki4u0i11d57af02rpn95k9h0u6banfobk4n17spezp0bpdyx1junecte92v1pvxvpiq4j8uxo2385z40slly5zsew6690ihfvpa80r4wz1zl38ke6xe26vqln5cvb3dzhr90ji6ozhcd\", \"20mznch7qrk5rowdunra8t35f8n9uirg5p1a3hexdewukkbs41v3nyj2pucqu4l824bqm2qjw4zo5u2e62vm4ds1d1uy9rhqvinq9d9nepx4eh8l2tw9uwml46tuuhryi2x04gzz162hovyfaww\", \"5pd1g1gog7r49o8w6242ozktf7f64qib0zvh\", \"mbxl14g3arcj6a3l8e1j6efh72i71ja6cyrj9uhh1kcmam6yskhoqjnl8fpne5kbq2236rgfyb7bs6lrjgy8yurnx89imlku6w0gx1\" ]\n  } ],\n  \"etag\" : \"odit\",\n  \"version\" : 1661470345,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"8z32wzhyz4rff64jhxuilk0et8zp3w1w3r7bocak7mhve1fzf0t0wkgacqcnftkwchhg80a\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"k2mijoebvv069a0objnu50q6bqqz5iqzstcmaeptxcr91zkzjt1hz6uraryfdp0m1a8t8ijpqft35txrfy0k1b8u6mh8y4hx1srug1qh6\", \"ww9kc71n55tr1a37w6n66sfs94kogceeqcyqb63fi1adfjnww695j7ucfdp80q90olnztjzjlgw4tem3yp2qezdyb6lg2rxejzs556yx05rdfrdh2fx696d3vchjhewgduyc8qc\", \"85sb32e4n7bs9j7i2okj5lt12407fijqn4sctzlfmti5z3ujmnm8rv6s0n2mx1dcv7wxv\", \"tf2r5apknicrt9uiik6fyizs3j65rc8j6bu8zt1uafy9mhde2cwx2obwsqssozl5a0ssnmxt3cvvdlxa4wvwnyqlxpwebj9uj78mxu3q5rv1g3mwgfe4ccrgsteant1hroz0eclcfoun3lldyel1leftfusf1w5ube0d54rkexh\", \"0uxhba6d4f15az1fme\", \"bse5rrloo0f1lmt1sifx5b3bm6zy8gwjq8zalgldzwv46rzhl42a7x3egaexk02wjced30ivxduibgz\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"anmdq50pneo2ladkshhdh3c1i9fgtnucl4wwvicbdjp8542m9e1ruvv9biu487dhwhsxdwgffre3srh2v7tva8gsno5zcew67hpthpjbp1hnivdo2a99vy8zltlu982ao88zfvrwoyy5z4m8bmgucjt8pgtg6k8ji2h8zsb3fkf16mxvm8cucppl8a6ex\", \"t5ndqq3bkomkwyc3vcdjc0ik9291nfu5wchw5lpy5g26d4cpmqdh9redduqrs6vd\", \"eu6l50z08ssdxoi1k\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ibhe1ymiq3veu5lxy0324ptvhxmd7z1ybhssud4xevo1gf87ayl0v9sjywx2dysaqqrp8w545q6hncznusmhdm16xtk5mjw6cymhbsy339el5i28e2yzqw66guyvgxzx8b79jcd6x\", \"q39te4zsnwosuy09mc8g7qvqqols7m3iamzhg4l4c36zzd5vy1km9la20uvduok5rbdnc012t6qkngm8732ggmt79ys07lq5q3r7ff7jekmpm3ydyid6r3swkr84pb1b655g74ohx5bo0iexjl7oiizubmk45k6u9ajf2xkegaty91h8dwq91\", \"11s4lcziabygoy5lm304e6g0645rowtyp1muy9yhbsso5amts6miq6uszopz2ssqh5pgeanuih7sqycowrrkfp1dk35s36x2aopgtn8su2xjfcm8ftfnqtpfhg1r6k1bg2eb7s1o04svpj80gpu75w7npolrrhjni184999g07laiu78puoce0\", \"j44m5jce0c3zl0376y9w4305ry6csr8ga89mlmufgm9siskf8sqgeo9cx27qgiq6eeaeomn5kypf73hotp5m30nihna3yy68p487mffzy8xwwcq0g2eyucyi1opbqitdtnmo2yyi9xslw4yhqxtg1rqpkgwvn3d39godxn0mp3vszrfgxsk556\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"g7wjgimhfi7h61rcyvoiwamm8wr9164tzvb61nd2uqp0z1mr6znxat787scqllw9dryesp3t57fvefvczxtw3koqjgufdwmy64vswdxz42i0o4ku0ix7nx4p\", \"suly3yasm0wxdmgi4bf9ofo9155gapmfrqkc456rac07zfq7rdtxejnzlt3n5e1q\", \"36owg36lav0ccayprqv1nj179lnicht03a8fpebkckvzsg2ffi13uosobd8qvrlun42m7xl5z8glm4i3lrkmss750z2btu990d2va21\", \"nj67snh6bad66rjhl6yb89ijzmrta0q6z2c9sifbhtbukkde0jdpbahdw2\", \"flpomsa5cc0lvlntgyb9uzz0r28izsm4oohcn56vwmokekbeqzobldutxp6943hu11crxud3pf9kqc625029qh342n2io1mht32i2uoc7lhrz8axvgk59fc4xt7d3cek41a8cm1zxs53tgqaiawmmtz3fsnaxr0xbp211ly\", \"8egur9rc9j74d1u3pldjh3jzdowzgbva1hfhu9rrdp98zgdj5pnjdkea9pd9rqx0o\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"odje7sbf6md2visekzfnokmsu27x2fsuuwkva64pgmxu0vcwz6e3v02tnw0htj5wihpkeixqhm3qigzna1oi5hj4e70jk145tooted8gieqzega76xo553el1n\", \"1jmb8on8pe8nuc2h2onpopgq9muj9tpnn5d8j169qm3x15jcr6th5d\" ]\n    } ],\n    \"service\" : \"f7sj17cwzx38ps7no5svj0tt9y18v5fdvxc7bci4nyn2tv09c1ktwydwu71tckj475wchwxv55sp8rbu\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"55qbg5s505wko2i11kblhzky9xmujdu2emm8oom4ip29e410q1n4x1c9rfc02s3kfguw8bhs0vo6\", \"uripi5miqcsy1\", \"kbbao63avb9r7zdmpgnctzn0rsrpsnk0ivthth6fbbxr7pb1f19pr7xp2lpoku4w56l1mydquybdwmyu4jf2g72y5fw3fi3o63avveja7g0m2vyf84xymvouobomsh52vqpm3\", \"bkvo2o5hy5nsejrr2txh271rwlajev4te7h6adfrjpm0a41yvpr2qrgkg1vpi9nha6h83kxorilkc8utnv6\", \"cbzd22oywxhga2k19sz5ay4yvrxjqpcwevtap9ljp\", \"bv5lkjr0hwaduv3sz9pc49s3imbyk8ahtu3o066kcus13gcpet1yuylidnokgdiahcqamqqy8jkd3yoki1xh8qif6qh7gaicc477obhxtgf9c7ip62g1klfs06atb\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"aoocg53fifxmy25e9mh5f6sst0ntrq9cq2j7jk7a20k9l5nylpyn3bfp2d1a8a617fk1ejhvw5a5abo0w9fyqb9zhzwlunwacnaxhoxiueicon55wlg9chcfc3jev8vfh6m56ardaadkhy08320y07izq8ac38rxbbfvrdzrnebz3a66skwnn1ly30m5caccs6i45dh\" ]\n    } ],\n    \"service\" : \"3nz62xvhlf1x60prdv1q3leh8mtwfjxn6n1ncare2wau135219kgkw0v7vpdem3twbzwx5rd72tn40y7ygewbbcko6z8kyh35q1khlwydw0dgs9vwc1tem79q0t5\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"iran4au7webakwc1df3wlrjrzidnh8ij2mgqgm9im2tqi\", \"4447aes6cg8qew6bnu2h63xxwy9kixb7mvgz0dafybf1p\", \"drvir89pfkb4zy2qc9k0rmt1fpe1uzd6x4v3n8uyakcuae96wphyf81ndakm0xrq10z2b57za4kr2908mu4fte3o7m1nbzx6qr93kdw9745ybkliix7gx8k3ggnd4q5geaz517cuow33a9eqz5cx46xlkggoqacqe4897ygkv2kcnlgbbem5qo1offjfrj2zb5svd\", \"zplwjda3gu0tf0xm5fzxr9wxp8pqcjreprdhquklr54rnzxnipymvwqfnihzxye6p0rrbgb092k8yvsm60pb32y765e96pgy3ig0bj4wqjgxcqdnirxxsr3vid51yo8hmb10drashcfxl5iaemz\", \"tej15agifb95hf8p6sgks69w0m10q3k\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"caeyj9dnebzeflg9nbm6ry8owgxgbxa2qr96pr93wnv6n9em0uzl013o17bv8qrbkmrdfcuf1fozqhngsma67l7ii4za7yhjfcokw0xwreh92e7\", \"fuylqk2o0ifpbeh7vxiaoz07\", \"uwldwl4deogwolfdcnriwn\", \"cwfvckrq30cpdnawgkhij3pgbbzvuehrigtd3uy5piyh9bwltiqvzsjhnkcbqx8n0pv7p6rgoq22g65d5rqbfkm828sebt132j9pdbcp88wov7fafb0pkjtmp5csp912lq8kgt0ueczj6ixgvugtiui7f9rxl1i1f6jzqeyntibg1t\", \"rk3uts282cwh88kv19zkc5d3t5qhccle98dh1cpd93y9unxq8am2vf117mrtni5nis5rscf1040db0ty0taxtjpt7rm7jfaez\", \"op2m6494mk8l\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ao3bo09zywtyu62lri0s49orgl5\", \"uk6dtg00yd21y8umx8m45k3ouz93mnzw4blewwhwde8k8sijsh9a3fuzo69smr0yt3fnc3fs89mh5w3avejv7m4u422dtswoh1gwm7vy2fvrc388wafrblugmjx24llev8sv12wxw39cxwq8pdwpmhj55w27k0ul4lmqcau9ain6k936f9az4octa6x4gog3\", \"a4wusaxpv9f1m3iqpamf3hshk5l9engdns1jh8sfmuwchdw72hvlbd4bfiz7fkfk9ggmkqxhzynm2rqu2bdumeo2225h8ocejyqj485jh89mcyrxx9nbs654ti8jynmrfgtcxek1\", \"pozb6yf1zv8hv2zelm6ez36aoaeyxv7cjbvltoyfsjm779ju0f20xl8t9nizvmoqilv2ezls7d9wf5zj7jhij1nt32lu7wcq5elzu1i4zbmaciwbg76djzkm8shntlbslrwpygcbah1bw1hgsir97fjlgo86hdg4a43rx6g2d\", \"cyythf67k7lv7ui3jw9g00qo0bwwwmqm9epwt2f9dgsxhn0lcdllasbujdd\", \"wbjwjp7xf3w0xueekc6l9112oa9wr296w8tz4uaz7fwnnony05lqt8reyv5\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"vmvjwfehu01j3ub54dreb6m6noowu3r0flmq5ash32w94mwtetnl060hebffisyqlet930b73fje3y8m1wh7giu7i6je6fz49cm6ibr5siuwdoaacmr3bq2oo26he63bgk67m9lmw45k\", \"xdi9i2wednlucsnm66j1v7qhwixhbwafc8jrzvnqlafqvuc36d6nlyv66lerfr9cayu27i5hirpwhay47nq7l5kchmgatpmyffntb6bvuglbwsnxxiqj1eyr7pss2fhny1nxqym4mxpts34is6j40vlfj4dhuy\", \"8kpsjsryti9rzv305yf0a7k153kq2e10wedmdebg9ffm9etmzpvsys1jrx\", \"q26x8pab7n1lqmnleahbf02fadc7fs6za554fd9dcnpize2k9ldf2d0u7tccbo54ptj82n8oztalbsgllcto0l6diryx7lcyrzrp8k9wviz6cp1gtn75hyvkrdaubs3b7nfi6anxmqfc4q8x6\", \"h741jo7lrq1ckzkdoo5nfpwi1m29me4awoaid15t2c3p32h3sj97qzaewuinl1cer5abhb1ai70537o9ncfztjce2pmxyt3mu3qmo\", \"g7omnqia16y9isumnnhx5tig85y2qjdedl19l1j8b\", \"l1r5ys2n726y4qm4648fm2wgb87ke5aezd2c7gxh4ssxmbenagk988e2ma1kfcfxm2tjk8ndlfjegl01hyeyhgxkiz6owux2zq432w4i1vvp4c7d1az7lmc\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mbwj1es1qri4k5gk6gzup4f7brrezgz2ljlqo3ikpk21ziuvgb6mzvqwqqb8gpxjpezunyg5u3jk6fl7oaggjc4y6rciwmihnyrcxgx\", \"9w9ak\", \"79w73mnfstqisgktglvphmgln03yao0o9bcdti\", \"3jhqx7gtzqximkvxmpiupgzt7pbng1v966chvs1iv5tty0paks043wluvmu3x32lpytyhxpob55sg0a2ce6vil4blz351ubarv6zns00cvharpwoqexjg0dfdz6qjxy3l8p3xvn21f0pvme616tgn8nbojr4p2oxmvj3zit5rgv57v1\", \"pzzl215dyb7czozavmb0e39cq74wbupa3m1iqkisskico6fchb9ytxi3tgvb3v96bj3g1uc35vtrplgjo3spcddiqd\" ]\n    } ],\n    \"service\" : \"5cw551ji9jcdt6o8j07jjx4wws789zjypfe8in230bvk72jm2s1mrfp1xd16kvygdxmtix2lsmkg7ffmb2rwfq5pcw3pol4j4nv6rf6sgi4mfk48ld9hroqo6utr1fp9a4qr6dn8o721uui7d1uc2vameu4ce7u\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"74sqdudna8geaw8nr90ahjam4l7uh8gnzowlsoqbn7tiw2zmum0jde2ep235v21fr69puhm9jepgyj8rpv0ffxkj53j7j76edzoac0uharf81r5mfs3m6lo72ew62spngx4hqhqiekkudzrh8opljphnzphlwsjxoadkw6i9crnjliuu8xq76epm42fhk08fhggy18eu\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"bpocx7yg\", \"khosjg93sfco3kfo5pv7cb4t5ebbstfp45n5mijc7uz0lvdmekqhds3tvqqipxo188jt9ah6wm806lh7y5nwlppr0qonrro4d0j8rivi335z9gifxx3o44xxu2qulv0sv\", \"hgurhcyztbnoryf3lcddnz3ywczhmpxvryuq7a81pcyzh6n0xpbfrfhuwahsjup27bwqc13lw508jx1qtflrk6ygz37s18y8hzfkeqnyei7v7qxotyhfdtucw1d71mfwwyaja8tiqn8kuyo7\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"lw6uasuhci5xggv922ghm7x2q5xwbjlmr4c330b8tnp9tizpov7teh6zzc8sd7gg83\", \"b675skeep43dc5spdl9pogb38n1rsgk91pw4j7c316ribqd0jpeh98170wlj6qm242aqb14bjqxqhhehgwu\", \"tq3cyeyegq1ogk6ismsqqze7w1eq14bobv7y5zkk709ysxyio1yowga43320brmiemc938q14qsid4z\", \"3a0p175ebhs6j5lvyy3is80555x0mqtn6vbh5o84usj2ps7574zsyrp66omjymb95o0plupcd4yubh9yd98jxnk6xf48hwjhcqhx5umyh3lurl4hp15cvxw6recgecl1ul4btyj92bj6\", \"t2rzru2jihutyas27ylo16z8hwu7ogrrpk7expzxofc2v4u0ydrkmx2ynmhmp3gp7org3u83ryf1f5jnqm3fcgxulcm5xz7ngs0wag0jrb8424ltlfx7fyqd9t7nu64xhutz5vertv2heyqcae2yvwv8t78s5jeyb4qu2938c4eoli\", \"s771bh738rofz1rk1641gpvv2tscz0fxin5glssbk9eaotxfkhjtt9pugwyz1imqcu9qvt3gia6dn3qdi9duloy1rtd76d1gnrjjyvbm6ggo3f\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"wlxpqynjj76stds2cf2p4c5blfs7ilkomxgsqzguoog6hdjrdb3zoe0j5e414khdqqzgsbeodur5otzga1xvdhl8bhnk62xcw3x2hbnm0ynz35sarf0ine035z0yni11pqf4p9xj3f3u6yv88rpkmfe811c8msn1ggkjjjj\", \"yf6dah3lrjwo5fnyl\", \"ubk0pabge0549b5pvf93csirzrkyf4u8x8h37qhfwvyk7340enn7qyfvpwrk1i5a8j9kujv6azwadetf6o6ifwum9nc3mwn8zycaebg963dz20izxujoeuv7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ny1z76sb2qt5ct\", \"xgicqog8tl59fpuvrftnp5vct5ruzdsd9ael8ldfr2r889vmd69nwm3nokze0e32iomahjycboyeawy1lot3gu76qqtaor34i2kycilas3c\", \"oka8jhtlrg37y8tzw0006ir437f8dcv1oalrg0lcs1veo\", \"u2vrxt0oc20iib6ja9l2o5h0chml2klqhetok8vywl2v7at36cxilrm8pxubrt1qr8jfsk6lmc88syl5a2t6q0sjaf0otuxbe00sf8l1kim0w1l5ylzy440h8qj14vfbg78wlsv9k7gog92f1wyaebq1sidswzjonryzc2pbzjqvqer7lbmzw4dpc7x8ufm8zukj6c2l\", \"74j37i6dzzdj4o1y9b8umpgmvpwz4u3dspxeeqwctmm2r66ftal2h9de78wikin2qw6mymlmsv6z4lyseh2ifu6ow45y8pottk1j06896i1zs0dzbrwmlpscssn78erkdtmyf9abpzbdqh42mkppil7e74mctmjhtzaqfg\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ghzdnicyuue0zgco3nx9rblz4ftr6cu8w52oqgrs3tkf3nudxf\", \"sqgx5cvjssmu4o3l32u6szs20pbnjoyscadygh0exuojsb2u50ltrzcij4tpfpp944jn5ys4juprlrq3h2gfq6do5mv339\", \"cytjv999dmd0k85nqnowh31u2ob0u6s9bam8iov8cpjwv4k6boenmtpfxoo6hrk2vmyd0jyslrtizxumqrh8g942tygsmx8ffgxj3g\", \"asr9x0phjoykp09ujq88usyz2s1dv3cx3313jzeaoxlh8g2deohpf2y5nx\" ]\n    } ],\n    \"service\" : \"le4npkob4t4u9tl4tcy6x930u77660m5u8p9h6cm2ylgm7eptwr5rezo8spcposxj6m0djuodg9cg1upvh343grpqhf3wticb89fmb91xceq4jki7phc2b7fasd05w1\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"q262rad6gq03xtylfbsihkj259jkg3rimhidxais8frvnbk9e4jvko7cmq4p9aqq\", \"ij60y513sruy1m09dt3y22lureb02e06tvg0bixde13wgqfscuzt3m475egfqa4te9bbp2hj3nirwq1c4rpeb3hvnymvb0iy9a2q4hz9sg3nausobkjwepelrk3f0nu7y5i9n\", \"iy5leiai19odu6uzte59n0gcvznqoibiqe4ofcxs629tiknapwxhl4rohg22y84hgzuuwygzbk2l435vzhuqyprne0r7b\", \"g3m42aw959nlrcoon4yjrxb5cp4w3eioxd1tpabqaqyrka4ngysrfptcwcr7yjesqr7xz3ztjaul105pt5ww49n\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"0ha2mf9e799cysknymmya450zytgyz5nuf1edyb37lg00k484z2pdq3jc5ef00xg8c2v57ppl67\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"hlhirzpl52jejilidmx2qgvtqhzhdmczprcf69hyqbn7wqni90ukpbk5wk8vfgp2mjvywn0io4ygay1ms992ax6l7pa7i5dk083dxtytbeidcwo6xuze5gmc5liyw\", \"fv0rvn1e4kgi38e44scigzi1ms7na36muak1r9e1k100uawed8286maau66em51r5c718aexttixk76nv9bms27vp23ywqehcha6gqogjtghi4jzbeisvv0dyrj6ahgdmolimplet0\", \"7cqehasfgaqvt7xkia5cgrkqyfnt54xc42p47fk9dssjbuk2c3pqa4asrso2yg898zrdsi1cvll8gc80wgpoymyojmmsgerxllqyfw6l94q9xqr6el5vl85xxgm0o02bp2opsj07pipe9vf\", \"k5ed1uk7nnos58w9u360yavqflfjfv51whio9azb7f8c063yjb3wyfzv6hml1ng8qafd6i1myw78inn3xtusuzkgztqr4ka\", \"pxtbipi5q2uwknlyghg4gwow6z2nzo0yrm7cij3xqm0jzy3e4dp0c7w6yrt9tkdctike7c3irjuskpj49mel006ns5xykb0feaa9eqfporlud4f4b5nqbquzdu\", \"lqx9zkx\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"eij201r6mp732wrta0kfgyjndnhb1j0bpimjz89o7xmzbqofp31dtq\", \"xhqsuuntm578eestrk28hbziot1jvo4zv4971n05cj8dy2wgpliblm3wd40fnua8ao273a46oia32gs8pu8\", \"hkxkp27kqdf52i1pzyvaatjtc2q5il1s\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ichh8enh3174cb59amv3vwulhzbf43v77zwuc08a66vzuadua51aaemmpjp856wk23yi5vsn4fsnfv4r625p6yy8n2poqlyb9z4uoypv7ppvulyx8xuh5xe8jdk5071lruasoew4uhejs8zc3zh3w36ut2lpjtdacm6yqapkhhwk0hukvqximj5e6i43r\", \"6kbmv69336u1gsh9u6idwn54pdhu308gxeh1lsygerb76t552rtrz208b1pr5yoc8bykapzl\", \"t8fgnpx8v19u0palr15n4ynehak7gludfqg2juujglqx8kh1psg0amrnqur02xoxtiq73ym7zixkf2s2x3aum530rkbqp5ousayfc6b536\", \"9oqpi0n9hbd9wu4z2g1zh1m5y5oyh6awg0lsgumsfacfpb55ijsfx3qurz6teyp2m7yaz47hh4nskspv2v578e5g6bx9k1dh2h2qu5l5lrosceqs3opcxj675p6mcbtxgylcie0wdx10m5t5rqbhwtjj2x1ddjkc07yhzr39o4q2i0lqg1g6nde3s7\", \"3uvsg3v4kttye2j389qgvb4g6p4kh2efh0aunmvlmrp6m5kaz18f3oenck\", \"8a8c52wj4zqfzzk03j1bz7eks1oc0iq1z014bogycft8bhaudeigjsgrd3jyofrsmd8max0mwswcavkikyo3m7w5lnmve4bifps4rftbd4t07mcg1np9y06yopqk1mvpx4bq\", \"rt5ff6yspdlau6clcwnh3rpnprz33mchc6jl4sfwzy1ai2sevsix4o3z16zfzte2eunbv7zejqfbbww6s8o69xevdyw5a74qbxdwe7chbv3z61zdsai3s9c2f3x\", \"uh8ylir1nsycqd7f9p\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"a7s3i9kbb7hkyatdoecowbw863baivzxlt0atbu4wnf9\", \"5kmyp1qi3w451abee1ascn5s3wi4mqk142bswban2xv72wp9snwl7kce6wwltor2wrqdzpe3u23swkqdktoyzftalrt\", \"rhi01jwusbtx8ejcc8xyp1a3mgdwqo7s7v\", \"afsviz0jczowpt6axxwra6v0\", \"s9b9dgu60964k04ah9garmsa96n9wsqs3bzuftys7zptp94yxldywjqmhc044sttonilv3jjl8l6d01486vykutxu0z8p3tmutkbx9\", \"kwkv244bym6glkvo4eay2mvntxusbgkcb5efvgxp39z8lox8rgo566l575hctgahes26v4azrwyq4d8v3ei7m0l1bsccjq3uszfvtsn3tnbhrawj4qj7ergt\", \"a5u2wt8pp2b7mzdi32ub7mkdii6sup527ec8r8zc35og84rfqdhwjqsn7tmkbfrb54sl4xiedo4ouonhnr0az97ms8zav21ymk728kawl57xfz8zp23p35hv34p2z3a0j6ztyh2ll9i94ev2ik2tgt199lcohlbog2q3ztg12ofq4c3tgyhrlx4tm6hc4csfpnrwh\", \"38g9x1bdrkg744b4v2uy20o07t400\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"yl08a42hchime2yfh1atlza8rlpv1bsgy9810ij5\", \"s8cxzkvj96uutxdguo1s802mxivyscbbwetc363f7a9abq4gg2yju18cuo655e4fm9nxxvc0w7p5o6dxprd81f89mx9qr29fwskahb9v29uhgvv9ip69vpg672ug94ecf8j1yhoaap5nm7bj936boh654ev4cff00cpml7zrhyp6vvhjseo1ttr01x7ejhvl\", \"yqfpg8iqjq5ihuw4qlsxcsco83swrg59hhsn53qruckmsll749tbru506eirjni5jfqusixk66am3hfp3riw6v90xncqtgudk9y2o55vegzck1iko6q399a2j7gxr9l9hu8638tfbqqgcf62py6x0lu47xgj6\", \"1x7pm5rs0eih0ojx606wol8rnjp5y4owru3axxxroxps5n6z9x52u1cudu8epqxgpui0tmwz5ohvsuuerhycdh182mh3sdo7kl4ruxunrngcgmy67dvin9pfqqcdvlryes6sfvs3ezloh28gp8m00lm1hri7hq8nwmzr461z689elh26x36hb0dxffynqvkvrwf4av7\" ]\n    } ],\n    \"service\" : \"jlm08eagkdln5saw3i0l389verm0bj9gneml48sy8g06x1vjin9ar9afun6uo4u3i35z9cqoq3i1cge7fdzn91yopdgpxqeae4z32ynygetx8uxhmt6rmdfkzmx456pnpbdl3l4obu0h1jxfk67fm1d146\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bsu2jsla0ofo9ljw5gtcm0kpedtkc2w0hkm2jeilo0pysfxtcaxqjkvmvi9lpgetaw062sl2sqfnoh7ox6jp2lkz3u6whotrcuudapxh0exhl4umvt11vbv8lud6gzoi44iv51bllnrb33s77sk2iua5uzuxbosegvlo\", \"jochosvq54mb5yg78xpir8k9i1qp2cy3qj2ep6a5qod8cg5ihvsidrlizgce83kqxki2tmz207r6q2kafgjnf51h7gzls0kv4uppnt8w3ckb4uspvx6legkqygfthqhez79js5ph69ww\", \"fl5d9xcmmivh42isxfh2ho3dfnkpjjxgqr33diilfyqj3cp37uuzg9tyqybnbeix3pz3vs1l8tys81k9hpmna5gkek652mx1b1olaf6pmlsook82\", \"b2mamh1qmo7j4othuw47k4jti1n5i37a4yyvs\", \"43geuc5rt3ckj1nz98asmfybue3ecc4jn3w9mniob7u71t7yblex1idwbhiddffsh5aal2ld8efn4bbmqyrllbii2dysqhgz6t6mv3nxe0ol3v7qmjf87ojt3i0q5jj97ckoicsd4yz\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"1ronofy536fmq\", \"veklcsyf6ccp8h481encxn43dno5rsp1a6cbuyg6fwhy9nxmn920o81p43nwf7f4ltrxid0lghqoo05qeq7la8udcegdf2ute4avbkzru34xa905b5tz8j6vvojksktd7oszj3v1jiin719ihm0fa0e35d1qp1i3rryrnr4jdycpe\", \"q9fbcp663mn8qvhm4lezrf869961ht5lbf0ev4j1zy9x879wajrw6blnlkszs92zjf1\", \"4t24b5akh2rgk0ely299t57omdv65rz481dzi29vfyxrrlm4h0gw5odoi\", \"fbvap04lsifbuoh8ca1lycrsz4hmbxwictdk0u9ethoag\", \"65ykn8c7eibrsmtvw4d9z1g6l9k2qxutije2gnfmp4yplzsijo7gto914shm5owaimj2c23yl49p3udtn88u1xtjpi90n7pe005s0qgm1afd6ec\", \"qu104jq1ifzxmzkhv9z7vh19rwg2nl8jofnd\", \"dv6f58voxvihuam3miqbi5mq82d7yknudq0keyge3wn8zmgprilk4g9dame943osjw86u665ytduj04v7fa8623z11bnb2h82d0lv7ludtw2t9a5qlmc445\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"shqsiyh7i80e80xqwmjvq\", \"b9rzkh4jox4kmjc08m5r0fqnyek0oo5mb2ybhcelt94ub31idbfmnuty6j9mtkeuotcjrcbqkvjkl9cyhj8ghoyzunf669b6g8jzuphpmnts5x460e6zc1qva3hit1kgpf8z8zjve4mc9\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"6tfdjvnqvwi4n3uhaasjwvn9gnqcs3wg9\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"tj1ze55c1gaxfttcd231sibem0ldya4yoi0xv1147opif6ma04x700cyf71agxkxggtrjho4zws7bgm22mgrxzc878vaov5r4oyhep4tls3eg25wmx84001o0jop\", \"ook7jm1l\", \"stlqk2gsca9q08kwybk\", \"vohz9lnpwvy60mhg9fhpdchnafwrzh2xfrw5wdzxl\", \"t2hy4fvbh3zejv299odf5pr7s7zfdqq4f2e5p556rx2wnaw27x22j6mzckm3ycb5zm02swsc1v6jmfxwtv2hdz5cooufcast44bb98cel5px57\", \"1xwod00hdrbcse8r1dabotip688kn7pdkpjt55hf1ftwwgxznqyrk6k500ahy2549wxqvgc2q9gin146db3qo0owo969ej8wl3ustp\", \"b3zj2tby7hcufszuqyrb7mooxq9\", \"4junfdfd1h3xhrgp20q3iyrcapwsk4u7ss01mj1smsegimp4xwlyp2qj3et3v6l9rdtwo0upnkqofdnugvylme2s47t2jfv2ra6kktr3zymu8tiec10jv3xv3rrol2w52ljl3gd4a1jqcseprtwotians7s7tvkm47v6d724\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"2ulh0nrwo5qax88hh88o2ykzd90c7ywnqke9h756h6a5do59mwgts4sysod5gth8wghhnhp6dxtp0n84fcoaivw02cgeo1n2lpk\" ]\n    } ],\n    \"service\" : \"pktzdjsx9wqok1emr7f66vun6oi2ru259264kngqtblaempk95lnojnkcj79rdkx6\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3ecb243-05dc-4024-9809-a81afacc40b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.652421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b76c8619-26cd-4190-b4a5-b6bfb81ff66d",
    "name" : "Creates a new User data mapping in the parent consent store.",
    "request" : {
      "urlPath" : "/v1beta1/mxvz0cgkk5jr18pt2h51z7ot864py33sk9oab5imitwi6mmpu4rp7lss7d0x4akp3k6duizckz8954n1fbzznkwxcont1br5ih58bdwdd9pdmhl3ky9b5xahy1766mct/userDataMappings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"archiveTime\" : \"2023-03-06T16:22:31.649607Z\",\n  \"archived\" : true,\n  \"dataId\" : \"38c2\",\n  \"name\" : \"Miss Gilberto Okuneva\",\n  \"resourceAttributes\" : [ {\n    \"attributeDefinitionId\" : \"x822\",\n    \"values\" : [ \"lp31\", \"bl7r2pki51wk8t0c06\" ]\n  }, {\n    \"attributeDefinitionId\" : \"v30i\",\n    \"values\" : [ \"hzfpuc4xctfqj3jxd5wibrotansq1iz2itt0dqx3dfumqzflrtlaslqz5ljza1xv0\", \"xjzbcscmh2jhk2z1hzye2f2517jvofaczkdbdp6dss5i3x836t6yl5ttwf6t3q5r2y5o2bmvgz\", \"871b1l8x130nuim9hrdr6dk0vql8w8rey90p14xzrr08aqti5htmf7rjan834zrtw1qu0yghvjwnuyvh7tybmufx4a1x6pf8otj4jn1wgf467izp9x826ehpa8hunpsvcvz1ijrv02cegf5v5\", \"edr8khzo32s8f3m3xg0bw43w8r829nenf9rpcyzc43ipyq7orgx46pu5r3sl2o3nl\" ]\n  }, {\n    \"attributeDefinitionId\" : \"7w1c\",\n    \"values\" : [ \"vkchuaigsp77gz0t6y16owrt5hbcg8oqb9exhgjjf07f7ypwzds99nclghncgecfam7cvqptiz475vosxp9afdxf8l1lk7c38es\", \"3v6nqx0j6iey087bihxx4efn\", \"02q28z9xn0vbr9zromoz6m9d4v6zx23o67kwsz5q8axi41ra0082f60b9lvdfi85t6yy\", \"5pify5920x36f48pe080r90f0kkgh085o3nlrnvt0p792c1ag44lwp3qimt2maq7dt7pwyl6kiasu9tz5\" ]\n  } ],\n  \"userId\" : \"nk0o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b76c8619-26cd-4190-b4a5-b6bfb81ff66d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.650313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.userDataMappings.create",
          "schema" : {
            "description" : "Maps a resource to the associated user and Attributes.",
            "properties" : {
              "archiveTime" : {
                "description" : "Output only. Indicates the time when this mapping was archived.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "archived" : {
                "description" : "Output only. Indicates whether this mapping is archived.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "dataId" : {
                "description" : "Required. A unique identifier for the mapped resource.",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name of the User data mapping, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/userDataMappings/{user_data_mapping_id}`.",
                "type" : "string"
              },
              "resourceAttributes" : {
                "description" : "Attributes of the resource. Only explicitly set attributes are displayed here. Attribute definitions with defaults set implicitly apply to these User data mappings. Attributes listed here must be single valued, that is, exactly one value is specified for the field \"values\" in each Attribute.",
                "items" : {
                  "$ref" : "#/components/schemas/Attribute"
                },
                "type" : "array"
              },
              "userId" : {
                "description" : "Required. User's UUID provided by the client.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bea72dd4-1c5a-400f-8a22-9df2a35e852a",
    "name" : "Lists the User data mappings in the specified consent store.",
    "request" : {
      "urlPath" : "/v1beta1/48zczcvfx4q6ne9vdkr200dpxa100e23fbl4fbw5ld9f0nn4iooj1h2b4hndm7k7092eurts4p7ljpmzs9m/userDataMappings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"wtjwmct3uvzv8hteigsd09bc4v91y8yjioxaf8h7kqcxex6ulretsj3i44itpc3bjocycp5nb4zvi5srltjtirxlabfp2vw67qsbkdv79g33hr86ivaaelz06a0qlwdtep0vomt\",\n  \"userDataMappings\" : [ {\n    \"archiveTime\" : \"2022-10-24T15:52:31.648203Z\",\n    \"archived\" : true,\n    \"dataId\" : \"64r1\",\n    \"name\" : \"Enrique Toy\",\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"ml42\",\n      \"values\" : [ \"68xh0ac90a6fg6ksp9vb3smfw4aq4fqerfdsqyy44srxkfji\", \"2x6dn1u1hvxmz24j7w7tyhgvb1pcakjmddf9medi0vd6ojic9hi6z3naxlo2as5rapugvu3kb40o1wuq74xf6xnsxg8q1atnili1ckiipyl628qddx\", \"5n6eta0oibinaiya2vp7wvffpykgu82ipb6vuqbt7wiuyxvg52lvo5jakr46blkrpq0qq72oaiaky5zs3nuy1h7e\", \"bjtwfi3kytgrfzcsui9x6gypka5eidnlklzj6mexnfzbu1g3kkzs1yuowkar7z7icorzj7\" ]\n    }, {\n      \"attributeDefinitionId\" : \"bx58\",\n      \"values\" : [ \"47fyft4clojfz3nnryg0vz9f312jqs\", \"a309crt1xrc9plmftmlgx0c9q0xyahiudl\", \"uzlb9lj4veb042m2fqoqhgqebkd49slyztreid1q8bj3aqf36v6w193pjal42sh2ipq0mx8rsrlmrzzn2znkakvdh0y4dqtv3zrih8u1015z48pmmb0hj9yknz3yhwb6fac06spuy5cn0z29mucldz6nzy8enop2o2351jaxokxhkiiyi0rt0sdjz526iws27f4n\", \"r4xbo4pj22j4i2e\", \"jffoq4r9ym4ifwjqnlp47movd3ihtg8swp0hqbcxlqm5nwp1ssx5whz8sixvlj5rva1ftrz0dt6i5jpw2swxhsq7wbj5zvq0w5z\", \"y7khaswzvjhj09woxe01ys3zsnn9ymooh12tisw16x9rgnsicr438bld36lslmn7s6hky4m32u2qe6nookq8bdzxgpfhyd6un4clq1typ6hxdf4ktgntk508v\" ]\n    }, {\n      \"attributeDefinitionId\" : \"f119\",\n      \"values\" : [ \"jqtnql8f8jjm2aql3su0ymozoja5296c3oonw2z6d0cok7ngkr6psh2ev0038z5yiluf1a736dlzq7u9avkv2x1df26bj6hoc1h5ue856mn1w\", \"ctl19mjn317hc3bver5firkdu1u3iksoaqsblhjo3d3nse8ekx0vf5l6\", \"8pngsehwsxhfygb5lz9pmuu6psoaq3poo2j5gbrcigteeyv0umcsg8vwentvdrnq35tr3spsw50e1p0uwn21l935ul631hhs2ot5fgr2npxkfg7h4h0h2jhkk10rmute0juv6lh8muxbc4erlh6jynkjxnzf8a4\" ]\n    }, {\n      \"attributeDefinitionId\" : \"kx66\",\n      \"values\" : [ \"k8tii01c\", \"nmqizagtd4qzdy3wp9vbv3lege1w7mhez3cuk5n1w18c75pidjxn8yyo3vng\", \"79pfnicstzv4fs2hd40by7hksztxcu0islbfz1wy54iksff3vvn2qj61n3fd4v2o1bsyxzwft0o9haye017jf7b8x873ekv1eees6bx82zyh1bfhuvi8sze8ud7wensgvwz24h\" ]\n    }, {\n      \"attributeDefinitionId\" : \"w676\",\n      \"values\" : [ \"pjuet1aui0qbibbw0yrprg1jpetj67fpo0w2jg9a61048n3bubg9ykz21ue8mymrmbkg8u7ulemhqozr4l9axe3lpoxf76ksco05n6d072g2z7fu974stjceeujulhk\", \"29n2osqap5fwse9o95smu3djutj0pek4pjlbsy35m831adli0aik2njv252y54ccax\", \"vj2ioz0uheuj9efio4y6pa3rpo29aej3881ngxrqa3d2x7n4ydp0lerw66spo2btgi1j9tq5f1yfi7s51snic2dlky2hu2p2g9m0vy8eceyoy0xp1v84nhl717w3ly2f64s7zomet43nkgfpa0d2l3m2jkm28nanvo0to78casnqtnq9004o70hxcw9\", \"l8v15xcs4edazppeb6kbqgrx42u1l\", \"66jcp7bintk9r7cu4yhz76ttw5zzgwiudq9h3qxckhyad1gwbljtoi7353pshhnjxxyhs42tvydoym5ptx9ttihfzbtkr39lnseyqrfk57ai5nie3gb3q6wm5eie1n1xxr8ijhqx89caniv28gmjar52v41wcrw\", \"ggwfb92myfpwmdn42osike5bmlpxdalvcb25r0uqk6sxvid2m5ra8bp7s4y0vfvopi85pj7njq46fo022gdz81cmtbi0h2ldker7w1ppkc17tyudoex8bvu\" ]\n    }, {\n      \"attributeDefinitionId\" : \"xdn1\",\n      \"values\" : [ \"ra2mawijr0fnkyffn9hmpa3ertdevhoanfz5qrixw74ytbmwlrqj3pyt4tlr3x72kiew66tf6ypiawqny5guacx3wbw32wy0htcsd05lqprffpe7dhor7pbnlz9iv5fnou6nchqg43od9nw58t0yoklm9p8o6scxg2ara6hkg\", \"dff1lmfvz9vrgu7n7ta48zra7p36cplzuzcvplfv1t2awoq0\", \"086afbqpon27gklb4q23v32v989ua28600pp6l8kd37hlbi9ipxretr9wovwptewur1rdvcyng0a5nak6e6sgdj1lnohm3hlfakk7mqhgme8j140yt0mi4wn49wdrh0l42eg2uyr\", \"iie3b0oggjtiy5bls3mhlqsawx83e15n61df0pfpxpzua442gwchvx86vp2dt6eb30xlofduz4atuc1zqmo66i9siw13bm15c63e4oflfogs65rgsdjwztwycxjsrym23c96aycswsbbncdpky9b4fl2etdvxgqx1d440o9ev99qrnkbmc\", \"xwxqd9kikifmwav2vbhezm1nby87d0ap8pvzgu5u8w3ptse2aehazeicuc0ssps66312u6shu6peod7h5az1b705b8vix0jhl5jfyy1xkwfh6vlszuqsca2mvo9liizt29htsoxor1iwwp1vaikz0xh\", \"ahta09q2uh21dwo38hk0obxyuuf218z6qft1egxfzgxhn4rhm2mr8w3i85j6jqg8k4qh0nfdndeu71lt1920636ei4mypoajc2fevzfglusa0jcr3appa912i5g620hm6f0vara9ng0su\", \"up7zvqgfbw3qh4hvr1\" ]\n    }, {\n      \"attributeDefinitionId\" : \"e7t1\",\n      \"values\" : [ \"hi7qhfj8vozejrhpzb6owlnv8rgu1xckj27ls0fhh8qk2kdffz1oqhc28cn3rvbrqaza1b7bpgvqsdzoydn0n5kwhdiu24t73vbv858jva0z1eqicafpwafq5dnf1enus0bqcudjgm7sojs32stzcgku691xpfl9iegwl2s5i6s45s3aqq5qoj46vg\", \"rxi00zme2zr0aw92f2o5zeykxl3vb4ec6elfwi8nm1bjcoa8jbbc21c\" ]\n    } ],\n    \"userId\" : \"keus\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bea72dd4-1c5a-400f-8a22-9df2a35e852a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.649561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.userDataMappings.list",
          "schema" : {
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "userDataMappings" : {
                "description" : "The returned User data mappings. The maximum number of User data mappings returned is determined by the value of page_size in the ListUserDataMappingsRequest.",
                "items" : {
                  "$ref" : "#/components/schemas/UserDataMapping"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fdbf1dea-439a-4f64-9bdc-7f55d1bee96d",
    "name" : "Parses and stores an HL7v2 message. This method triggers an asynchronous notific...",
    "request" : {
      "urlPath" : "/v1beta1/a8j41r11jil4xzvnv6aprlr9sfgqj7o4gs88bvb4ntbyhvnzaga4ujhdsbav48p8huj4ggnzqjdmwuzopg6ejlczb84izdsidz955umk1lxf1ve8un6rhtlasro6hit2j71zhu4pouqmilhpgbynosdhf8m9mvoo5ob/messages:ingest",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"hl7Ack\" : \"ximrobuc7qzqm4l501y7vmnhb2nauoaj9antzi687exkj5lef92khkwyb5p6g7gb48simgdi8wov2fq6sdsnmn66iv10chsgjuzr9lbup8itlaas6\",\n  \"message\" : {\n    \"patientIds\" : [ {\n      \"type\" : \"9d9zbtfe1ml835aiu3wwzn2hzh2y6zwl5o0bgzgp8uagrva56r3agt0axbh44d8n7kf4exoqjy9epelueusqz5azgooa639lvfq2b02osscdo34q6eaylva3tbpobjbgo9y9677f46lngk75u0fdloarmpyv8nbk80e\",\n      \"value\" : \"s6uhbmp40mef0zfj5encfhqkx702xpha7s24ta8d089j6mw4tr7igpgmxp1asssaip31a2dqtv77w6emtt642rm1d1njx65n2h5yqzmhgdanavkwyx44t\"\n    }, {\n      \"type\" : \"1bfncwsp4xoorx3ys9k4om8u6rdkzmzvq0yp9dygeuvi2zf6xd7bjpni9n6fr5bdusl7nl2e4v7ojws7dqgocg6catz9ayxqxb1stse4xal66ms1qvru5r7ccrsxeklul3pwl6lbeltxf39gs82\",\n      \"value\" : \"wjy81nvr4viomyeta6bmol201vzpuisr0n1gqmg8q215rm8r180e79wnayd5merueol9lv8e49ks8ax3scgbgxr147xtc3vgbw3hwrukxqd3hylpfmln9t1ttswzheo26cz4xpuj5\"\n    }, {\n      \"type\" : \"bbvtc46gh7qxtnq64ndyvzhqh5xuyrjskrj6kkyny9znzlgk\",\n      \"value\" : \"imwmj3xjelko2vpihltrhn25\"\n    }, {\n      \"type\" : \"k3xzd4y31rryohxnq1ixwerodttgupe7mmuhggi66d1voccdrikfdy0qmk2sb58fjbrsrpm5srl6406gq7d4fw8nt82trdaegapx12rcabjl1lx02s9iek4evtuba8btge7wrjuwhxejj7u2ntj887usbupp8\",\n      \"value\" : \"mf1dzow7tsw85s7xmol3t19e9nptmoxkbyss68811osemkl2inf70xjre3ikmcchr923icpagpt8duqkcvrhqip6pu6mucsgnw0tfhwjcimy41mera04032qmnl13w0bu3tmfat\"\n    }, {\n      \"type\" : \"htq98q9f0kjl11ts7i91k35c77b9egljk9bccwzh234qzuke9k8h8svbgzmfkrvop6mk59tams3er9jlptj5gvtc4z3lsl79dc6twe5ks86vi0hg3\",\n      \"value\" : \"h1ou2r96oc87mg2z37idcev834463akpwtp7qqde2s7r5akaigwgbos1wu658dp7op38mh7njl0xpqikpz7xd5t7532wsa9iqs12284xzby9jbct3swxprbzc3aa0b65evfin7olpytzu9xo6bcd38twoy6d7opdsutekziv\"\n    }, {\n      \"type\" : \"7ph87d4rylblt5iki6a51g6v0aro0zbrdej1urnxhhjci1f38hnusf5xv91ym9n21l4jhwng75rnrmfriyhtwz4x56c\",\n      \"value\" : \"cam8w9ksqqh37glshu0hyfes0qxmzc69k1uwedvnnvg8jjxxo65equmzn2vvtjabv4v65wu2wxtbbrm94ss12nh5ov9tv1516qvrnflr9450h0lzq\"\n    }, {\n      \"type\" : \"9yu63lovdh05n6jar4nrorrhjdt9dr97x8di61w7k4mhjdeacjip01q041dcjl4jka9es9b1s2oxcs19idy0a9ayk9q5kmm9j11529lt8hml23d2zijcm9ogipmt09hfdp83hov292cltbdesy8xgjzuftz3zrntj9lx7q89fqehpby0\",\n      \"value\" : \"yj3h2bmcaatcdm6w6oobd4li07nf6y873\"\n    } ],\n    \"sendFacility\" : \"ll6rt5v533lge78tqfcoat7sfrpjcg61epa8sn3gx4bpm5z2kixu6mrykz7lomcw2o5nbgwy6gkd8fxmiifgpsm5a5l18etqv6ec7ga2m991n6gxw3hynck8tgmqwl7lzje8oc42t1pgwah5ahrgrl1wlq3wrade9fw2lv844x9uqe089ge7mos1fqyzu6ul5ecynedx\",\n    \"data\" : \"p7slvvveo6njuua\",\n    \"messageType\" : \"hvx9vq0g0q5ye4c1zvm18jt5cxgfbmrr5e5ari2sft8nd813vpawr3gvgx8ydcfyubni1qcd2ri80mo476gs2dl8pxi29a581u8vxnxfzol1d1iuqw2\",\n    \"createTime\" : \"2022-05-29T17:36:31.647774Z\",\n    \"parsedData\" : {\n      \"segments\" : [ {\n        \"segmentId\" : \"71la\",\n        \"setId\" : \"57b1\",\n        \"fields\" : { }\n      } ]\n    },\n    \"schematizedData\" : {\n      \"data\" : \"untyn3v3uef95kyd4tisazmqmfrh5b43jf8t1yte1ot81q8l\",\n      \"error\" : \"rzxzudvq61x0y3vtez4abrye1g4efght\"\n    },\n    \"name\" : \"Lance Schiller\",\n    \"labels\" : { },\n    \"sendTime\" : \"2022-07-26T17:33:31.648065Z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fdbf1dea-439a-4f64-9bdc-7f55d1bee96d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.648136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.messages.ingest",
          "schema" : {
            "description" : "Acknowledges that a message has been ingested into the specified HL7v2 store.",
            "properties" : {
              "hl7Ack" : {
                "description" : "HL7v2 ACK message.",
                "format" : "byte",
                "type" : "string"
              },
              "message" : {
                "$ref" : "#/components/schemas/Message"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "90057615-ab9f-4c43-bf97-e3a9fbdbea1a",
    "name" : "Gets multiple messages in the given HL7v2 store.",
    "request" : {
      "urlPath" : "/v1beta1/1i1kgsjkunmbxh6ala51h84c9poudgutu2k9jhi90/messages:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"messages\" : [ {\n    \"patientIds\" : [ {\n      \"type\" : \"1dr3vunwamufaw2dx8w42me9m0f1uq1c1dqqe9jv9wl9a56vuqccqjunoagr9v8ox5v1h0zrew4vn3a4p68ehwzfg9ur63yf4vjqbua93yblaxysau1g9wpom36xrs2kn5yv6ro10u5\",\n      \"value\" : \"sm4wrx4434aeap6493hfkhz663wk62z3qgz9giijjqu3d4enz5ryh4m5swj8qo6r\"\n    }, {\n      \"type\" : \"krolu7laacz1q8wsricnto5kzaa9rsavne9trb4urzy8qdjqtu5pt8fngwu0r7w6t7rhwjmh4dfxa89g8yqpjyi7y3nrdrc0en0yg1njyy0vj5b\",\n      \"value\" : \"1f3ulpdakmi5kzp4wa3h2rfq2\"\n    }, {\n      \"type\" : \"wrtlrlzdotpz2q1up9h3bfi2vthc2r8kq6eypnyc7mufvfhs8tpqvxnikuhht7r0zcvw8z2w4nfedcuct7jhm76b4hvink0f5eaoc455x18vg7c8cyebbprvz6wct6rh67ttggkxf7\",\n      \"value\" : \"17u7yy17gbx0yv\"\n    }, {\n      \"type\" : \"rblmkdsp8wl7r90kfso3vw6222oztfcwr436c31n84apmdc55k3mked4uho4cgp847492625q328qc5mhfu2xoum259sl9dv08e3zc8e41mqwdd4zm1jymynwybyeck\",\n      \"value\" : \"203txsjimixvnbhqzox3ucbtghnrgs31xnqzowokxhbvhvtf5pqi0hhdvwk3tfs3zqnbero7k9tr\"\n    }, {\n      \"type\" : \"dsvog5xbvsoxyzshtolnsuggdcmzy4dpbfts2mf4mdv7p8jr64wi1ft584eikuk511exr8dd4pla76vt08brg77f4af3w94i1lczcjw5vdqjn6afgx22wmiea1xdnwrmsj5qkrfxq8im2cptk6el901n7xcmlizjjgdlgjtjdbln7w839cihwg2wp3pnp8ubgjn\",\n      \"value\" : \"nkcfsgz5g4xh5zyrwahzm18zx1m68rnvx6vvstzkthr4jvpi4jlc8\"\n    }, {\n      \"type\" : \"c3l1iatxycbhiq02xkrpgz3u7hvp6tw8wwm95c264bfx7od1nuab5uq270695dsd85ui18b8vj0qx8oqjefk80q56x0mc\",\n      \"value\" : \"j079d66uh6q4kplt0hi67pfeoq\"\n    }, {\n      \"type\" : \"wkyqp5w027r7jvrsbse47586yo6qqzavgkf7u7fbog8mumjfzgwipwq9q2ecsvgju5mgnom3frj0oxw8rcd490f0ig2y5lh7lh7fz7x6smxj4gik34e93kl\",\n      \"value\" : \"giclr73or6l5q55\"\n    } ],\n    \"sendFacility\" : \"lxeflk9fj6japbjfn7rbff9adolaaiy1bhwf3vkibugxmntn4sp94yf4toryj14v7c4r1javv9ver67721od38qeuw6xmww7v5r1ukbc3oatgy9ws3cojlp2i26one5dm5cb3y243u0xi4fgs93qt5mv\",\n    \"data\" : \"n7mu57d53ppyo1z9bluf1y9wq90bblfqf938yvii4qi1bhmlh08wcc3zjh9yyz1gzb0d9jhra5zg42720y0rbccs2b046lj5ydop1kmt8oxksdzs81\",\n    \"messageType\" : \"gboufe72crtihe8hq7ztz8znwu48njvzwmtdpa7kisycf1n8\",\n    \"createTime\" : \"2022-06-12T15:47:31.644765Z\",\n    \"parsedData\" : {\n      \"segments\" : [ {\n        \"segmentId\" : \"bzxx\",\n        \"setId\" : \"qqp2\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"y9j6\",\n        \"setId\" : \"185y\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"r84x\",\n        \"setId\" : \"rhp2\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"492h\",\n        \"setId\" : \"2kvr\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"hutu\",\n        \"setId\" : \"uoo8\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"b82h\",\n        \"setId\" : \"n7bu\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"mfj7\",\n        \"setId\" : \"nmpr\",\n        \"fields\" : { }\n      } ]\n    },\n    \"schematizedData\" : {\n      \"data\" : \"ocw4ri7x1w2p4m2aydy0u0s0c6ciaf2drgd20czgb1tovsr4vxp93r9y0s2zt0awy57cq8sjluqwvyfqdjwt6eal7avs773ytd7jjaisx1tqkj1weftnbxfxgaho4gslsan61sefx1zxn8i5gtxo2xrew6f7pvyi\",\n      \"error\" : \"tr6k42thm28iugoi6et1oepvm55jfmtg802b779e7k7n6b5bc29x9seltfexvvizxn7z\"\n    },\n    \"name\" : \"Mrs. Coletta Abshire\",\n    \"labels\" : { },\n    \"sendTime\" : \"2022-08-31T18:21:31.6463Z\"\n  }, {\n    \"patientIds\" : [ {\n      \"type\" : \"0kix1aaf8a1vww1shrlz2\",\n      \"value\" : \"yg3u3l82z151q1ge9agiv1stb3mt4rppcuogecql3wjv0ewquqf9ae8vs2ow7vl9o9istl5zdrecqbiuibqby1ex01jgtp919bt5s9zux1osc7x40rbssfi21u1kit4ajiywi8mzvqkh8jkxrzsx4qk0uwgkd6tsm4w8kg\"\n    }, {\n      \"type\" : \"m4n1qhpn8l6l849gdykq24vma7n1viuerrstz5ezetbelvc12pi0m8n2nuymgskcorzdzaqfbhc8j9mm34oofb0r2fm3rdf8zydmf05y174ldowedgbuq8mt4tfshzxvagdrmr7cr6fuoh2o9c1gzd0wzci82og3j8g91yn69reu88o5l9d\",\n      \"value\" : \"9pc12xjcgylh3p13zq82nobdtpn11nhiv5m0l4\"\n    }, {\n      \"type\" : \"jrcgbn1wrkvm0nclgub3eioghaq93abz4k44sn69h2dzu813it70522bivnv92aho4yvdj1o3ve321g54ika7vykxe13kpp0uerhgygfb8qjwb4zz45or2h5d2ojuf8da4y8j9\",\n      \"value\" : \"xo4fhw0iuyi0tj5jyfyuxfsn90ubh2druvjwhadbpoknlm9445u\"\n    }, {\n      \"type\" : \"0x2i4z9jpfjqxsitz396b2y9wzlj3czbpidq4cxh8esyavvxvh3ee475f2oejqpj5b67kkcc4ujlrqunoxc6m6w8b88myt8rr3d2e2h4ifhrwfi6xjmykpiqdlt7iiw2946c8\",\n      \"value\" : \"wzy1ogfinpmwtykfuj6vdh7ufrnxvc5p96ltkr50xcj8u35y7hka0p50f51lejpc6ksovdxqxvklz8gq2cvfdeng4d6kvchqlit4\"\n    }, {\n      \"type\" : \"erk1vdw85uy2jljcf9f8snatybmdwz2ii8jxdk8r5nnne77hq6tpuiokojtc6lnf26whpkav1gt4zi6nf1g4xvucw22hoq6zs\",\n      \"value\" : \"nx80ctcqcm6h0xyv\"\n    }, {\n      \"type\" : \"2sl3sofrtupn86o7hnkdq5h5uh0nnrgd4wwf5ildwpymkfown8hra9hfafr9g9i5wv7cq1kl9ojtuv10v2frwsr\",\n      \"value\" : \"vvvo7dg85i5u2cqf\"\n    }, {\n      \"type\" : \"13agfk2np4bmeh9waxi0szlq41ed7g600ynvtd1zbsoebf2yf4sa8sp2uy7nx63ivrf7lbzsraacsbr2xiwtm929vyzde6ykrcxg03cqfm13lmgbu4jrnt4ukrjm05y\",\n      \"value\" : \"0l6h6n8jsmrz2si19go2mk70ib\"\n    } ],\n    \"sendFacility\" : \"9xyvr9vgs30ns57qurjbak7oyl8k3vid5vlprq3nmn9qyhnkap9twuom1v36wbetml\",\n    \"data\" : \"hiykck5r5\",\n    \"messageType\" : \"m6f2ov00mfteiib063wmzyqv7zk5v5ra5y4qucn07pvvm4ltcnz3nis82q089r7h3bz5hk6cmht9a20zg7jlnuubpx\",\n    \"createTime\" : \"2022-07-08T15:54:31.646511Z\",\n    \"parsedData\" : {\n      \"segments\" : [ {\n        \"segmentId\" : \"wmu2\",\n        \"setId\" : \"x7as\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"e25k\",\n        \"setId\" : \"1e3e\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"ts25\",\n        \"setId\" : \"68n9\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"h7m1\",\n        \"setId\" : \"7r8w\",\n        \"fields\" : { }\n      } ]\n    },\n    \"schematizedData\" : {\n      \"data\" : \"bsbgd5qamej68i3vu0m38viyvsbamz8sk5cbi8q82cf6ez9ba9u1cen4j0zs3t4jt2wkjj23uszjsvwyo0b8f2e1sgplgxqv1sbpo50kqhfww5fwfmgwnvajlgwjw4vo0ngexjijz1jxk6zg4vy1ie7gns98i969fngdycnr92fuqsy7m7hr67lwpwsng\",\n      \"error\" : \"1yprzkb9005y3kly5lp9g8nbxebbd97yn2l5065svaebtesm27voujnlba01m0hrhiuqlgfy5cob38rrais4qd0go45tabq1vy\"\n    },\n    \"name\" : \"Chia Rogahn\",\n    \"labels\" : { },\n    \"sendTime\" : \"2022-07-21T17:51:31.647414Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90057615-ab9f-4c43-bf97-e3a9fbdbea1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.647521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.messages.batchGet",
          "schema" : {
            "description" : "Gets multiple messages in a specified HL7v2 store.",
            "properties" : {
              "messages" : {
                "description" : "The returned Messages. See `MessageView` for populated fields.",
                "items" : {
                  "$ref" : "#/components/schemas/Message"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ff3ef6d8-e7a9-41ee-8f8a-b37ecc703a6e",
    "name" : "Parses and stores an HL7v2 message. This method triggers an asynchronous notific...",
    "request" : {
      "urlPath" : "/v1beta1/zm3xkvkhrwxjbboc6bwts0loe94g2v4kmezcfh4dx7vr0tcieska4vgpf64mkhpzjk08lp8r1qyhjpob1lfip66tb3cxseyfhxj935kbb78lmexru9eq1e6x4y9j77/messages",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"patientIds\" : [ {\n    \"type\" : \"ltr0a8hrbl99y2xb8hcl4qx4zx1wfbvud3jeu84q2dcq1eu7eg0b04bm5t79fz0pr7jak5uh0lnjekwxo68y5t78k23nfzrbatddozs9h86jfbukq1alm1wc3wabteu9ginmr\",\n    \"value\" : \"bss4evbpx3nz26uwfh3akjemw0zhv8opki49fomnwt37wu1t8kq0wnlpgjkr7ztctez9b7m93yvk5e6j7u9ngajynzyzzjf2fwzx5piib6l0ycxm3k8fpu7pu\"\n  }, {\n    \"type\" : \"easkgxizjs017on37iazex3kyef31s8ehuzv2sh0m7fn06t\",\n    \"value\" : \"v2ri3s\"\n  }, {\n    \"type\" : \"8w6ik5bsd5leh3q3zb6z8a35ch1hzyz7spqdtvvoaldetfld3n6owdtcpit5frkv18esqxwopvm4m4hrqujrsbxw67vx3mho6tab9ftpddrulf7tjq6c2kgp3ydrax5bk71bsmyqntl2nf26zhjf0mxbyl1l\",\n    \"value\" : \"43x4xcmle6gipx3kx6r\"\n  }, {\n    \"type\" : \"pxfifcbsuda0068a7zhz5hcdapzwde5umz3dhsy7sd2vzivvdists6ogasu72t2dyl7evv0i8t2coa7pp2w\",\n    \"value\" : \"ooljbdo9janpci6capbp1y7bpw9ooz4jy5w8wfgul6rxpj9aizh4qhp6\"\n  }, {\n    \"type\" : \"x1obxpje6ffl7sg90\",\n    \"value\" : \"r9guch82sf4fxc3\"\n  }, {\n    \"type\" : \"n7m2otft6mfbmsn5d0tte8xhqlacgs3n1lwd50rogksdz5pe7ekmbwnh3q1ye1q0y4alceoutkm4vf0fgyt6ltza2uz0ix1i97mepn4slqk9n14lahnx0z8l9ariz6ngz77o23sh1pnxvrxqgjjrneoxiu2geegfmcbb9ydtoy\",\n    \"value\" : \"cnmu2x5f1xnzga830dpt83mkcl8p6fhfbd98j6ygk2gbwnaz4wqkoj0tlhz8159yll5dfte27myfdmq2cst4d\"\n  }, {\n    \"type\" : \"tlk8lmeoltf1l9x7lemq5d6jaktcspchhr7aoijd4s1k0s34szphyys26ndlf1uwg7nnci26figwtqcyk4jdxlf60ag1zzdm2u7s8g6bdk0okx658tzjwsvln7brafnb1ak0m1s8idnpgj544qmjxj5y0da35dqi4h2kwkh2fln6f5jx5gfcdsrda\",\n    \"value\" : \"i3w1d0anjx80c8jdbzpmjzduwq97nahh3rf8unnp0y3im5h203trt7hwgdy3w8lk01o4ipkgfq8y0osr7kswsfnmvg08xzsb7\"\n  } ],\n  \"sendFacility\" : \"ip5uj3is01x2te1dj\",\n  \"data\" : \"qeiuo1vpbve46sm6bxjwbqkt183yrzvcuqrxf4rfrnd9n43wlpw24vg628on9ynyfvsnj81gtt1ui7azyhe5r8pk\",\n  \"messageType\" : \"m4jkg723q2j19bqh08ur9lchz6nasmk74bu11yxmckhepujtiacj0m5bs7q9gwy8s8okqjeeqgfge8r41nryysuu7n40xz8mq\",\n  \"createTime\" : \"2022-11-11T18:52:31.643883Z\",\n  \"parsedData\" : {\n    \"segments\" : [ {\n      \"segmentId\" : \"6jvg\",\n      \"setId\" : \"q96g\",\n      \"fields\" : { }\n    }, {\n      \"segmentId\" : \"5sdt\",\n      \"setId\" : \"1mgr\",\n      \"fields\" : { }\n    } ]\n  },\n  \"schematizedData\" : {\n    \"data\" : \"3x4vc195064heaqq3vmp0pwmsndxhcw70cgrqxypm8yu0shjv0sw8aqqxw9ptgbsddfqvkdlu1gnrq7dbux1n820hz640m5k79xm73takfmpypk95imw6gvph06ud3hs3oy2jcz070woy0bqutsm3xjcdv0n4pxsn2i5ap6ipdu0u3dhauk5\",\n    \"error\" : \"itcb47t8y6duapn4pi8raop0w2igetq6h2u3tw7eg9nfrbfibrgb0qacyta3lf9snx4j\"\n  },\n  \"name\" : \"Oralee Heaney\",\n  \"labels\" : { },\n  \"sendTime\" : \"2022-05-02T17:25:31.644398Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff3ef6d8-e7a9-41ee-8f8a-b37ecc703a6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.644537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.messages.create",
          "schema" : {
            "description" : "A complete HL7v2 message. See [Introduction to HL7 Standards] (https://www.hl7.org/implement/standards/index.cfm?ref=common) for details on the standard.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The datetime when the message was created. Set by the server.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "data" : {
                "description" : "Raw message bytes.",
                "format" : "byte",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
                "type" : "object"
              },
              "messageType" : {
                "description" : "The message type for this message. MSH-9.1.",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name of the Message, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.",
                "type" : "string"
              },
              "parsedData" : {
                "$ref" : "#/components/schemas/ParsedData"
              },
              "patientIds" : {
                "description" : "All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.",
                "items" : {
                  "$ref" : "#/components/schemas/PatientId"
                },
                "type" : "array"
              },
              "schematizedData" : {
                "$ref" : "#/components/schemas/SchematizedData"
              },
              "sendFacility" : {
                "description" : "The hospital that this message came from. MSH-4.",
                "type" : "string"
              },
              "sendTime" : {
                "description" : "The datetime the sending application sent this message. MSH-7.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7b5b34b8-d0e2-40cd-8d5e-f0f44d21d6da",
    "name" : "Lists all the messages in the given HL7v2 store with support for filtering. Note...",
    "request" : {
      "urlPath" : "/v1beta1/fvv46mkw6c0w8alcyg4vxxwpw53iksd04vwnylfwzo1zeyni7y34b8wjqatviy1jjx5l3hylrz73pfa7llz3eytc9saxe3oawpld/messages",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"z7mz6s0mdhdg8qvaat0ztrsgbnmlb0qn3siuym3if1mtkeobcznvwv741u20ibxkwp7fixn6qjiqygmat47oay1104nhfpfdvielaejq1q8xsv2m377nacxdj581fvlyvkfyffcvan64stvgz1u0kt74za7wzamxuf20719gmdvv0xhm0d2685w44bbyew34xyjoksn\",\n  \"hl7V2Messages\" : [ {\n    \"patientIds\" : [ {\n      \"type\" : \"tp7ox8j4mgpcn9ka8nzfwn34i8yiio92ondjsajpge9an8u5jyds7vlov7qzgez8bam2a5g00y2nb\",\n      \"value\" : \"twaz2asookny639132q4c87swmgiwougovj4wbtiw6p72tx6l9knv7pj82o0i2k927omsn96khku2f6ofr7oqihvxh6p92dxx38t4qyff6rj1dsyhzldiers\"\n    }, {\n      \"type\" : \"d89fqkiy6ge43h0bouijahl560bi9rzu61fgk7zqoii7d0r5ftef1c5g9tzs3vo79mj3yn7htxkthtzrrq66ganni\",\n      \"value\" : \"bfwp9iwruggwgz34fbexscku9ekwfhy4cpdp1cde9s5wg1pxyq3e6szf3vg8c5p1aaezfeoikjwmy7x6vu9mhgr45xe62udbzuuavjelgi4kg966lql9z6basx4s4ymm3cf0dee2lc9kxzh6p\"\n    }, {\n      \"type\" : \"zqbg9yetxsuidlxmdxwose2xc8k5ad2h3b6fz7jp5q1rvzkrdgne82gdykhbtf1qz06qzrblld3l1q5te0565scndewg\",\n      \"value\" : \"zqpxttqq38rusrhfxb2hl8twq9vt1s5q3hcq3iy0l12e4ag6wp3pt8bgpabmqekwh3kwcazn92sd89co5vbd4w7gg7bwaqemgzp74sbsr2o7p7scqtmdg5t8nqoy9wexcc0wt0k7c1q261enq02wpydbua98u6q5ts95h7c8mrv8oeg5emsxpw3u\"\n    }, {\n      \"type\" : \"sprq0to0x80dpihmig2tj0xw2qu17i6fjdd84nm6ukutn492j6h61cvrngwoam5talvpmyezvxd5rffvh1elgeq8l00yy54282oiyt09o345f8xlk3olubga6grq2ddqempmf9w6lxvxp3d0cj8q73e7gfosmjegee09up2j2dfa971bekxwpxwt1dksr20uh28zue\",\n      \"value\" : \"hfuwdx31ppjr0yexhr8xlp1p95ez9kqoj9g1qi36zv2e9jnztpye9x3o6psetz1jjcnc1hw7f6dtl9a3keicwxkeigdi281pjjqt9cmuha63b2ipuxl3i7nyfjy03r4o4ehunxka9436gsh9zi2qs9m6f0a3g8q7q\"\n    } ],\n    \"sendFacility\" : \"4l8\",\n    \"data\" : \"b9q4e82ebu6sjm49qrimcf7th1thhbj8g66ylkej\",\n    \"messageType\" : \"4hewvqa2b5fcf9t6esxethq37lr34j9fmxd8ia3zfj5qln7j8nky10jz66caelq31b\",\n    \"createTime\" : \"2022-03-17T15:40:31.637631Z\",\n    \"parsedData\" : {\n      \"segments\" : [ {\n        \"segmentId\" : \"6x22\",\n        \"setId\" : \"9xo9\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"3e93\",\n        \"setId\" : \"7393\",\n        \"fields\" : { }\n      } ]\n    },\n    \"schematizedData\" : {\n      \"data\" : \"3p8ww00x0tcs21v4yr0o42pu3gukev0p9f9obp1v5mnz77wg7ei2yr6b7p24r8div7cghmatasm8d7ttxhjixyfyl0rf20vavydlndi9ngzaj925hptde9qpi0ihddnsnnd3s8kdr8ky69j1ht4ytuhuo5yop9pkp7zdx5\",\n      \"error\" : \"zdew1ilzyf6ktyxdzgmxgrhnhrhl88dp69rfggd85qf4lmj4a4e7lz7j8xd7rkisxcyp827ct8igr38srupqh2dqy5delssnlhum837wnitwaa04voru38gdcimbngffhlgmq4t71k5n7wj5l2t\"\n    },\n    \"name\" : \"Marry Feeney\",\n    \"labels\" : { },\n    \"sendTime\" : \"2022-12-25T18:30:31.638235Z\"\n  }, {\n    \"patientIds\" : [ {\n      \"type\" : \"fdblr3tddfu3jb1z0m984czjxbv3lccwl3o63cljlip65id3ctc0vfxu64rg5p69wcy6ry2zf9r3l28fkdo8hc6pcnw3xxng787ngjk3l4hciqgq5yb0m6f1qfnnhrgtb37zufrke4qs5jnme4fx56u2yu3osbh8tpkdgbz5qfyvpkrxrzoqgfjrfztqbyd\",\n      \"value\" : \"jzj8fb412zfsdkev2idulbncfoz3mtozram1la9lrcsn2y5656s3ipl8meeqk8a2qktghl2u0y4na2sb97is2darnf7l2d465h7b3f8sujix8ilyj5cqzvxhujczmx9hnheyj5xrw1y0aiqjylp8rrqqkcp0y7wx4lrq\"\n    }, {\n      \"type\" : \"npvmxxzbepk49m5jt45dv9tvo05aftn6ntd674tk0rsxc91f02tvqycwo1htpzyw2jjvcpijmtpsq89b9hall9n56cwu44fnd4t2z2acli32zr8vwx96khrjvsqnlupbks\",\n      \"value\" : \"e48oinzlguvp92trzb849ur5k39jxmajjfbelnxunybw9jy0tajzh\"\n    }, {\n      \"type\" : \"o51lb9mh988wzbtz91gif2vho4tiexikz80b50x76qjsejor11ymk5yhkj6p86lbtesev263yswielvlx7rxop6lmtnrga9attcmumegh7qlsga7hz3jm4r8gqzt0572ubjjl5gnjb5fg4wm958wnpw3vei4wvmz1t7xg51b8gpv8660p0kwqxyufhk2n1o0z\",\n      \"value\" : \"082voqmr3qz7s28oddx333tjy8toazlvw0hkb907ez94iriyizagfo4477qcq90hv2pidihytzdo9fwlnv7wkc36xm0vsf1t4bo427gkgalk4oucqeg6vjbtinbupd14561bnt6eb91zjwfbx2q7bp8po5j9gfhl4g87o8jq24fzr1w7mvc21mi3h9prm\"\n    }, {\n      \"type\" : \"2vbaune17e0bo1xb9pff1wx4e8id7zum5xp2lsee9igpmq24jger83o2qs2nbtxpy62f90qb7sbkpipr0i6xjpvkrx3tvkhepj6sfyouw5rajdv1ro7f8sppizevz0x6kic2hqwy68n13n75y257we75a5zsk963tnmptstvz6ahpwpby7ruo\",\n      \"value\" : \"293utklvmolc84poypm66pls6sbmnhknwfgjwbx3ur12vd556empcvkmdmp7rm5uyo1e2e8fim60a48q8595rwhpwrf72n0j51zoglv3p9yllrgw9x3aj6jdvq5rjiq6\"\n    } ],\n    \"sendFacility\" : \"9b6991gal\",\n    \"data\" : \"z2e5dxepnz5bxhhrnlg14gixiewofgnud86tnpmrguk590sqjo13js4wk27wnnnz49lqowfpno7ky8mrzobvkglu1kr4tkkk5dwyt3yjjjmoakmlt1mpy6u2msm2hwx1io5v51ibit19jdl92vvp5t3x3d3vc6v5wmeg8i8eazlo1tbee\",\n    \"messageType\" : \"oqxk9u9sk6sjg8thj0fkl7r4gcw45uqrj\",\n    \"createTime\" : \"2022-04-20T18:53:31.638394Z\",\n    \"parsedData\" : {\n      \"segments\" : [ {\n        \"segmentId\" : \"k7sz\",\n        \"setId\" : \"39o8\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"3gq7\",\n        \"setId\" : \"l2sp\",\n        \"fields\" : { }\n      } ]\n    },\n    \"schematizedData\" : {\n      \"data\" : \"uiakyp8flbmidaxdp9ll6acveknwc1p4wdz\",\n      \"error\" : \"m7rgkf88dd5necnyywx7u8leindvegcy5xfvngukgr45nli6p2p3r5h73u3fuj841gomtmjn2hik7i1evgorpfkkpzxj57bmuxnfk80f5xtupj9c46zq9t0l30kcyx19c96t\"\n    },\n    \"name\" : \"Liz Greenfelder\",\n    \"labels\" : { },\n    \"sendTime\" : \"2022-12-22T15:47:31.638922Z\"\n  }, {\n    \"patientIds\" : [ {\n      \"type\" : \"bny0p1u860h72muc8l7ts9dsquxghynzm1lv6gq07lx\",\n      \"value\" : \"zzwqo6bk6an9pqvw14w6s3a1lm2dkicx2nugk08uap43xehq6r82nbfilmh\"\n    }, {\n      \"type\" : \"x2jcbbnqnoe8n8u4jtovcygpotvdw12neee9l7qe2edc3z1u77d1grskpgeujm58s651j74\",\n      \"value\" : \"8xlv8102kheimfne6hgd4t1xalc2a2sm8c10r7lr6es0h1t0ynmg7qjwmxi7hru5zmtncksrtzog8k31jx273b1qsz3wojl57iu33oyekvowtudi9snam23tmzjnlp93qgyt0baqcr9ma0dhun7gmy2118vyz5nys9qh7pcllevzqzd\"\n    }, {\n      \"type\" : \"9r8d0si79100x8dguodeywprweyka6evopb7lvxipwz5jklfdfdudszeeacv8szv924nyob6ar0838lwnavadgrwcs\",\n      \"value\" : \"yrqtd9n2wgtenvaggyvii22w4a8is4wgphs55gk2o4k8idvk3cucx623eqbblsejwfpz4gq8dxr558ikojanx6ke85ntncv3wyh3akqgo7lw\"\n    }, {\n      \"type\" : \"lffnr07qrlhld5oyxe4esriy2nz4d4peyejl86bnawpfqkgrledk9ifmubfj5cz9u7bsm6lql1p3quyela3t9cnt4act41qt1qlwdgw6bcd1f33zb0ut4ub38vsvs3ykum9pt8x41ad4bvy6t3m7yxal14\",\n      \"value\" : \"w0qdweagkrwtg9jdcpwy6kma2nelo9sk2p0mbef5oal6uis3h4ot34ne8hbtvo3t3vbds3wdhsw2qaa8mdjt0byegft6265ratjam1p3drxiko1k42l5le6oe8flxdarws0t292op05kd1to85qkw70hhe1chcdt1ciabp67p23l97hwcyvgvo7rzn84\"\n    }, {\n      \"type\" : \"p1hpk3mqnvicchw6yigdyz4dd5\",\n      \"value\" : \"xx3g787yeca8m7ejsfjs4mtsagnh8zurq3uopkwlil9jm3vjr78zm5spl6t1xpfqg6u6ofjxctzwtjjgdut9gtscfsb5yp1pna5ddqt8gevo94wh2wy\"\n    }, {\n      \"type\" : \"b644hklc33bh9noeac7r0gxwdljo7ma9k2y3ddrcdkmmxbdxaafpn0rj94vw5rom1s907mub7fwm8uevbzra937be8fhy0ya4p6fi580p3sii2lgpzhs2ewbuzc\",\n      \"value\" : \"2b4ztkzwqllrfmzvfrvjsb41v7kocjqorkddaum5xiiz09gnlvum2aq46026gklbft8ve01jc3ms44att9mtsfvdzi00d7zqztdmgi8h81c3sst6x8hlmn6mu3rhf98puknm7b\"\n    }, {\n      \"type\" : \"8bma8n2dv5ifjcsq8a2onys8c0uurv7x2qha3cfq41hp19um9j5jqkatfgb5baj2o3keqw20fdghkqikutskezrhugm2mr11sv1q9rrzk009g8a3lsp00rgndbnb7efpku6e6pymifcf7dv4zszpfx1o54vq7\",\n      \"value\" : \"fjx5qdxe68y68pfuv0v7o7xszizyc4qz6fy\"\n    }, {\n      \"type\" : \"qv0ute78uf0tp7xzez\",\n      \"value\" : \"nek1gc0psci4i8cwtmp465h8t82hz3yj1ztnqti1z33sf3x23hq0o0lbskcko39ubxbapf5gz55d6su4rw9rxh6u6h73hyn366olt5rpkugzrf65d3drh1jawzm17xwp58d4qcadrezixmqqv1gdsv\"\n    } ],\n    \"sendFacility\" : \"mnmx0f0syobtxpuz8mw3immfglahd4j1q0htlv03pj9qlhthryr\",\n    \"data\" : \"jl39i5jlm\",\n    \"messageType\" : \"toxxsnthd9bjkdoeki0q33rd6va1sk8v89p7n2\",\n    \"createTime\" : \"2022-09-16T15:17:31.639151Z\",\n    \"parsedData\" : {\n      \"segments\" : [ {\n        \"segmentId\" : \"bprm\",\n        \"setId\" : \"parc\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"bg93\",\n        \"setId\" : \"x4d1\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"j27z\",\n        \"setId\" : \"hn69\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"7104\",\n        \"setId\" : \"92q6\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"kk71\",\n        \"setId\" : \"81d0\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"o5rt\",\n        \"setId\" : \"6102\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"o09f\",\n        \"setId\" : \"l2ty\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"k309\",\n        \"setId\" : \"xoe1\",\n        \"fields\" : { }\n      } ]\n    },\n    \"schematizedData\" : {\n      \"data\" : \"r4fwv7kgmnpqwj4wikk9qakkt4cqcdz6xnm660sowszvxmjk45zx76wi3\",\n      \"error\" : \"f1hoibrglfdzgg33b5m6opphz878dgr0pdoaw788pg3y4md8cz8n821ajd2502x5xf8jsfgj5r0jfprc9kq5dy9rsja1dvjykud8fbpvccr4ehn4m58qnz00p\"\n    },\n    \"name\" : \"Brigid Simonis\",\n    \"labels\" : { },\n    \"sendTime\" : \"2022-08-27T16:58:31.641131Z\"\n  }, {\n    \"patientIds\" : [ {\n      \"type\" : \"dzv7c2vqykufxuknznepfgcay83bbgq2bngctog0q5ypl8cmbt53tivx7uvni9zchz48auya8xixc2zb5jk8pkefjahfjt19hd8l2yq506qpwk4uny16qocwok51rnsata66dvk952brxrhire7e9ie\",\n      \"value\" : \"p9s6ys07x6pxvuc5fy0yp7ekqpc1cmsagaoec8oqgg8pkscng2yesdec7ceoowh765vva12snlefn5gspax8lmf9dsua6bkag3b073zttt0f5jvmfacdw6lfxiukemx3kfiao2vlwlxsdfiwnb41wp0ybxxhpsk779f0ohqc7wx2o51urw07pq4a\"\n    }, {\n      \"type\" : \"6dsxz93vpqp3o9twj\",\n      \"value\" : \"g3uzpycgn6wedp5bspze3g2b2loqdsnzjg6r6rp2a65d1oyulufjalsbwbs50rer7d32wf65vw2gg6l4916som925t4wspufcfgjbz09arpqx0\"\n    }, {\n      \"type\" : \"kbfr3ds70zng9fcu5hhq9v54arr5v3nvco4ebpi9uuvqa35fnm6oi95noflz47kqkqaq5qcqdrcqiaz4uaevummy863j1aoub594c8dhsh399f5omkl2pb8aax5vyieod85o03eiy290ejgo2m0176ty\",\n      \"value\" : \"vhz9jq9plqj40vtcrk8vccfacvt1p3ie9hen43vq23\"\n    }, {\n      \"type\" : \"g8t6gglbobs6yh98w5\",\n      \"value\" : \"6ydv4q3pyi9dii26yc4t8r7hwgp273wohomd4miv0y2pjxxmqrmjl4rmod2f3kno2hjhel4lr6lpjdwa4wf7yup5ccjexk4tre90sc9qxq18s68mxmrzxzo802kndv39cfsyp4zqkfsjpv4r49ew9i8qvnhmwx\"\n    }, {\n      \"type\" : \"u58osa82c65cvrdoipmh2qjro27dmjx8gagkfm9aw2bt4zj7vouprtlzhsgl02q36blsbtdfzfwn83qwqs2j8mt29b9ijwbqvzghasmhjzb33ry73ttvttbgyq4qjp36znk2ubj40oh8pdb404o\",\n      \"value\" : \"e01s72t1dzizviqg5r657yhhyfjyjsfmhax0fqfv74ecuj2l7lyibsn9z6p1j20ockcegwqydu7w623cr0wzi7vjs35220vciayau4w8gwn6t91km4wz75d8r0zvcj4w9e7j416jdzcrw284y28ib\"\n    }, {\n      \"type\" : \"m2wfpu3dyx0eeit32aza1kvge2c8iilixjicz9b42nd0ruicb84xng5o82m1xsbpumjbn7pyao\",\n      \"value\" : \"24ixz73qwqpa1ola0vofgc9slcwijzrppsa7754bpfwwkie1ipcx4gl0k790hkm65er1tpcqc59jui028vetlkm67mbp8dzv9d0ku5qdsycj7t1cv87zfnks55bupni8tsqz6k8115k5dzj4osf8l5q06d7hkdvwdd0i4gwiftp8pvc9caoa0o22u8b\"\n    }, {\n      \"type\" : \"hl1twj66z0qshuckpkuy48rfm6bsbpr3rjw0guctb6gqjm1pie278zc9lih62copzoy38xpfgnsm3ory0aemtgi9zxhk3en2rm9zfa9w0387uggja1fo7wpxvome2of420z0ajf5kr82jyl8mt3kjol68d17w76dkzw1sxtc8eqbztm2v1wjdut9o\",\n      \"value\" : \"cqz55tu5dhr5jgwah70es87bxoj3qmh4crc5v2a0cz4w24pa12qb8i1wm4ojswiwq0\"\n    }, {\n      \"type\" : \"tn6k65px2p92kqgwo6v\",\n      \"value\" : \"db34xxbtp3plx9ncapxk5jt6nr7t3d160y42bq1sp\"\n    } ],\n    \"sendFacility\" : \"rpelcg8k5r0c1l0d53cz3sz4y6m2uf73n3eti971gez7knhzc9to0e9nfkc42n5obekybuorshlhbqw1uuihubahvi0zpq7eb9d4rgirq2z6eaa9qxouw768fnxupipu4tos5z19pcw98ttx8uqnw\",\n    \"data\" : \"lm0pi3jryr6a0\",\n    \"messageType\" : \"0nh1lwxxyn3o2u2glsd7tu9khr8wi2u3z26u7c6s7tkmt6r83leax8dvmqrqrb9vaefsq2wxg88hep\",\n    \"createTime\" : \"2022-09-02T16:28:31.641395Z\",\n    \"parsedData\" : {\n      \"segments\" : [ {\n        \"segmentId\" : \"y346\",\n        \"setId\" : \"c4th\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"x57i\",\n        \"setId\" : \"g3gm\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"tx5g\",\n        \"setId\" : \"jd48\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"1q6p\",\n        \"setId\" : \"0346\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"2767\",\n        \"setId\" : \"9j7k\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"64a8\",\n        \"setId\" : \"kbu5\",\n        \"fields\" : { }\n      }, {\n        \"segmentId\" : \"v11b\",\n        \"setId\" : \"5bd3\",\n        \"fields\" : { }\n      } ]\n    },\n    \"schematizedData\" : {\n      \"data\" : \"ludb6igesra2wpr8slo8rted9cv06f7v2rw0zv\",\n      \"error\" : \"f98ulgiaxz9wjxef2s1x0loshi7t3tegglnvlvuwbu7ywkc4v5kw6vgzqbc2\"\n    },\n    \"name\" : \"Micheal Boehm\",\n    \"labels\" : { },\n    \"sendTime\" : \"2022-08-03T15:30:31.642952Z\"\n  }, {\n    \"patientIds\" : [ {\n      \"type\" : \"jhq61h2nx1m\",\n      \"value\" : \"72u92np\"\n    }, {\n      \"type\" : \"vgk5gle3g0142n2nlz092zpa1knuathnxj654hgd6f6b2odahepmrt8f59c0xbyzdek0d7uxre95kc1opzdo5dmamdxwgiykxue14xlth4tkdwf0nn7rupr1rg1yv4j0n7weo55v\",\n      \"value\" : \"sfbjjq3nwjg86qz7iw1egn7gjbbd5rw46kb0898znt4mrpxqnmkf6r7c5cvuzflu1g2br49ote5wvzvrvcolsa2nc29dnvyov5o\"\n    }, {\n      \"type\" : \"v0il430m5t\",\n      \"value\" : \"91va0aezwbtlutln18bfkyjf1j19ullkz37rlpcuhrk0kk5ewzsu0ow5ad00izmvb47f28pcmvon8m8\"\n    }, {\n      \"type\" : \"ualvo1eghu5drrig1ymhvubpgj8crftbdv6hsyg1hld2g9lj0mqt289r0wbwrwvxucn4imio69wr4nclbsvzpzf1koss43j80192yw6ue6r9rbzmd49vntb7tqyi2bm5nx2o4k6elflxt3afrtjd58n6ef2jp7in\",\n      \"value\" : \"rtnd4gknkvd3hqrk1zfrfhp0sm0tl1d125xa0rhs0zxb04pbnrunxxsfdamf6nm5p7gv52cba6uz00p1cgt49xki\"\n    }, {\n      \"type\" : \"2pi16zke7pj56y6o3288dghgn375tjwemwnzk4l0l9j83qmhou2vp5r8d8qmtr996qjxnwjb10ngh7wqlop0nuyjnjoq06ejvfjudnjzm8\",\n      \"value\" : \"au6h991apqjbq8yh0r2v0kktosb9pcdwrsavk8s2d2mcm3vl1\"\n    } ],\n    \"sendFacility\" : \"7i16l6pzfm90wfmatlfspnbd5z22tnhrih0hav34jsqaa0u8tb4j3qt3vtmi917x4mtp79rsj5ed182\",\n    \"data\" : \"9jmr69k8loq2hvjp48ly15otzkwssgf4c3j345d526fcs9cos9ydnw5sjgb59pka9iwl20zn6pe1k3h17kt7blv3cviye2ew5ea7wclnh1t8a3hlz02bpx992p7fyuxiudb3rdpdfyqo1k1gbrtjpr078dcct5ned3d0yh4r4r\",\n    \"messageType\" : \"8wziimi60ni6j1er0m1kyq58cypv01cnqj1ar08pvqn9hfq22q19lx7pqd4iyype7is9etk5dyik8pxejc5mah6s5vt1ql3kb56ywwax3nopbi4sq5g8j5pj6o2y9drr5bleiaji49mq1uejsncu9l8g9ok4pv8g5y9ba65858l6c27g03vghev\",\n    \"createTime\" : \"2022-06-06T18:53:31.643136Z\",\n    \"parsedData\" : {\n      \"segments\" : [ {\n        \"segmentId\" : \"2984\",\n        \"setId\" : \"j78s\",\n        \"fields\" : { }\n      } ]\n    },\n    \"schematizedData\" : {\n      \"data\" : \"f764kuivfpmxc9p7nknk00zqon7al2jkfmfxdrl6tcnrwb7pyjxaaoufjwti588evpysfmha5ro79btdnzsnpnbq0me\",\n      \"error\" : \"iile4wyzvc38kzmqetoj6w9p4if0q1n87vo53ukrw6hqcmpiyenc77bhwt016tc45mgl2e3k0nqa5l2cj4t5tuyk4d5axbkdx0a7o1pb94dxj77xiyr09dc8xznru6ozt3pymjj3xrqx5115snwbal43xlx8yjmqes9mgvxmrxegomcfappt\"\n    },\n    \"name\" : \"Alene Kunde\",\n    \"labels\" : { },\n    \"sendTime\" : \"2022-06-22T17:27:31.643436Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b5b34b8-d0e2-40cd-8d5e-f0f44d21d6da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.643621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.messages.list",
          "schema" : {
            "description" : "Lists the messages in the specified HL7v2 store.",
            "properties" : {
              "hl7V2Messages" : {
                "description" : "The returned Messages. Won't be more Messages than the value of page_size in the request. See view for populated fields.",
                "items" : {
                  "$ref" : "#/components/schemas/Message"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b3e06e2b-1a23-4c46-96e5-7d033964ac56",
    "name" : "Creates a new HL7v2 store within the parent dataset.",
    "request" : {
      "urlPath" : "/v1beta1/u7ss9atybmx282tlh7q0zp3r6eor2lt46lvyv9osrgtach0orh0ga2zpbke7ik8nf05i4tuiqsuak0r3subtzz70cvvk5v0z9ka9i3lnbegtm59v/hl7V2Stores",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"parserConfig\" : {\n    \"schema\" : {\n      \"unexpectedSegmentHandling\" : \"FAIL\",\n      \"types\" : [ {\n        \"type\" : [ { }, { }, { }, { }, { }, { } ],\n        \"version\" : [ { }, { }, { }, { }, { } ]\n      }, {\n        \"type\" : [ { }, { } ],\n        \"version\" : [ { }, { } ]\n      } ],\n      \"schemas\" : [ {\n        \"messageSchemaConfigs\" : { },\n        \"version\" : [ { }, { }, { }, { } ]\n      }, {\n        \"messageSchemaConfigs\" : { },\n        \"version\" : [ { }, { } ]\n      }, {\n        \"messageSchemaConfigs\" : { },\n        \"version\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n      }, {\n        \"messageSchemaConfigs\" : { },\n        \"version\" : [ { }, { } ]\n      }, {\n        \"messageSchemaConfigs\" : { },\n        \"version\" : [ { } ]\n      }, {\n        \"messageSchemaConfigs\" : { },\n        \"version\" : [ { }, { }, { }, { }, { }, { } ]\n      } ],\n      \"ignoreMinOccurs\" : false,\n      \"schematizedParsingType\" : \"SCHEMATIZED_PARSING_TYPE_UNSPECIFIED\"\n    },\n    \"segmentTerminator\" : \"fz2tahs4r9af2vquhug9skn6dutdw2f4axsijt3ctci8wgauc7icx7b0cu4qyvth6ies4ub21f6hbarp15klsfu46oqt0f6ky1j1jcm8\",\n    \"allowNullHeader\" : false,\n    \"version\" : \"V1\"\n  },\n  \"rejectDuplicateMessage\" : true,\n  \"name\" : \"Cristopher Doyle\",\n  \"notificationConfig\" : {\n    \"sendForBulkImport\" : false,\n    \"pubsubTopic\" : \"lfq5b4n0abgcn17bzn9a3pqkxqkaqj1kkfe1lbkwz74ebmjt86do10so4j54az2ocarh4v39of05cpn58dt\"\n  },\n  \"notificationConfigs\" : [ {\n    \"filter\" : \"1gpt0k5t3h1ry92unxbia1n32ppdsn85oyj8p26fq9rrvez8l5ueis6o51cx9w1c7jrv9dx82pldw29z9th2792jmqhihcfq0r2w41ity0qlj3e5thogiprq9s3ljsgywhrt4aj0pniyxbjbap8ke0gzigyxrn6gzlyuyk23\",\n    \"pubsubTopic\" : \"fwh2rgsahbuzwiwcq0qmnktz2yyyrbypke7y0ro2awmgsbi6ryjja69psnvhc3voumohjx5i8qlm3jz0btc\"\n  }, {\n    \"filter\" : \"y6ah1w01v5b2kmcofaklpp6sms1pwtsgestje3xo8v5sr5oi7p59lx8lq62ha782m6ykqh0gku2cm8emn6vkl6ydorcjbzexnw0309acxqmkdi8ogegjjq43b6meukx3sutkm0m58v5bo35vpjk76o7ks1mdee\",\n    \"pubsubTopic\" : \"2ynrx2oi9ws4ukji3n85vgwfu02vjzihks8xcxib99bolvb96os3no3m7a7ul3kzdpgw1d30t6h3mo3g2udowkn6eur9tifc69ygnpu18miy7fr7got3rrvbb0nnzyl6x3340fpwgeq004rv6vyxn4cqnj5ws14zw3x1c56vc9q7mnjamao\"\n  }, {\n    \"filter\" : \"j371mz9qdn15efo6pfh5o17nglnk69ap887ipvjakgzy6z7z66qfdzh8va910iyaiu9ng1ns0l2472l0l3hokrbtt53\",\n    \"pubsubTopic\" : \"7myvvtqid8e133nucn9aaodivthuk8omrr4hf5mombdnrm436160l00bo9ylxkyq7z6gizx18llgmx8kl0eqgqr4ge2kjfx061kd29x3aebzgkkwhvrznhrqatps3n2n9eichuh4tnhl5vzrcivdu4rkft39j2o40hg1uxislsgy\"\n  }, {\n    \"filter\" : \"pgvg5bl2p5lue0omrmeqj0stc9kr4381zku5zwt1c3mf4vqv3dfh1pj5drkduk6j2u7wyp8w\",\n    \"pubsubTopic\" : \"25q6cm21rluo0c9tjdp29mxra0wm6d5rokmlsl182yrxj21bsti8kxvdnsibl60bx2\"\n  }, {\n    \"filter\" : \"w5invl3xv0kfd57qfdia94e51p9ra5x94ohzz12axba2ebitfgen9v3fsn9bvsyjih0iag6ujvu2ws6fswlt9a3918dw6o6erhzgt4i74invi7ocqyp9zsg34vs84\",\n    \"pubsubTopic\" : \"suzmswishpxwkqmgobwsx1yac5gbv8me7674g6ai8c78o6hh4p0paocrv31ay19ymgw1ryv0wqtgwxiqeg1nszx6pa0g381x8s4ok58lhzd4yc5f3ydd5e0q6t87pksevda7bye222l89al6df6lwhmo5eldkdqmmg7tx95qd4s\"\n  }, {\n    \"filter\" : \"yvm0ivy6hlh0x6y8ms5eg4vvi0o1rwfqmxfkh41pix5x3v6ho7oh7adz0hdqfkzkkjnflv13n806vlb6f84t215bg8osn5vhgjow2q6oa0bv\",\n    \"pubsubTopic\" : \"vq27rvi3ifgx2800rvbfilqbe3gt040ddwr6hip3q0czoo35ybcu5cu3iqokm8v4s3o8tvep0aftdhpxgdpytmske0zc1bx3mhfmd0j1v9uwzflk91j\"\n  } ],\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3e06e2b-1a23-4c46-96e5-7d033964ac56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.63742Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.create",
          "schema" : {
            "description" : "Represents an HL7v2 store.",
            "properties" : {
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the HL7v2 store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7v2_store_id}`.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "notificationConfigs" : {
                "description" : "A list of notification configs. Each configuration uses a filter to determine whether to publish a message (both Ingest & Create) on the corresponding notification destination. Only the message name is sent as part of the notification. Supplied by the client.",
                "items" : {
                  "$ref" : "#/components/schemas/Hl7V2NotificationConfig"
                },
                "type" : "array"
              },
              "parserConfig" : {
                "$ref" : "#/components/schemas/ParserConfig"
              },
              "rejectDuplicateMessage" : {
                "description" : "Determines whether to reject duplicate messages. A duplicate message is a message with the same raw bytes as a message that has already been ingested/created in this HL7v2 store. The default value is false, meaning that the store accepts the duplicate messages and it also returns the same ACK message in the IngestMessageResponse as has been returned previously. Note that only one resource is created in the store. When this field is set to true, CreateMessage/IngestMessage requests with a duplicate message will be rejected by the store, and IngestMessageErrorDetail returns a NACK message upon rejection.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc0867ad-ed52-4dcf-832f-9786b13afa6d",
    "name" : "Lists the HL7v2 stores in the given dataset.",
    "request" : {
      "urlPath" : "/v1beta1/2wk97tsvgs0mofkrycufx3spykiunxcfw4uyx1qe2ss5cm5b5vh1r3m4epzdb2n6y67e4fq2m3uclrl5vi48kytqywkpvr2to71t0h0jb2fvh2lmzu243lgzxctvnxagzfgj894ypwzai7j2tag523y8gm00j68oed5851ya5mho/hl7V2Stores",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"nitio6ywz4v17nqgltkv3nbeowuys45frh3nzxxke0ult1yacjsjjljeqfptptru631rxrwxm7dtauwv0qibf8k2qzu9js3el4n0oo4azpm36wr7651qf8ajtxaeut5rn2ujq038dbjcdphfq5rujdzgucpwvsoe9ocb6g1tv9xo\",\n  \"hl7V2Stores\" : [ {\n    \"parserConfig\" : {\n      \"schema\" : {\n        \"unexpectedSegmentHandling\" : \"FAIL\",\n        \"types\" : [ { }, { }, { } ],\n        \"schemas\" : [ { }, { }, { } ],\n        \"ignoreMinOccurs\" : true,\n        \"schematizedParsingType\" : \"SOFT_FAIL\"\n      },\n      \"segmentTerminator\" : \"jkghlfazk0xbqhwi6m1iwjyoo2f273ak0hz27fciazek82bqldbvpo5sa6uzggm37784vhpsx4546zcjx2cgyd0aq47knmzvwkzhbycsjl38skqy9066tio3fpnnhutalhc1t5l04v83qke6uljg0kwryid3w39hziu2zq9hhrvxwve0ggky5\",\n      \"allowNullHeader\" : false,\n      \"version\" : \"V2\"\n    },\n    \"rejectDuplicateMessage\" : true,\n    \"name\" : \"Frederic Green\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : true,\n      \"pubsubTopic\" : \"el60g3jqs1g9s0187mj5i54yt0q8qk7dx1pprhbypyt8z30zbt2msspulayt09etrx9f64n4ux4mekky0j4vej00wfuevrknk5ejnsf9aleoenkxiotozat14km8u1wvo7wpmlehzo54lgpisrygkvz82x649z7k298edgonrobkyw7kc\"\n    },\n    \"notificationConfigs\" : [ {\n      \"filter\" : \"0i8gjq0hacff327qd0hkslws9av5mrggw43q6cl8m44e2qpzv6fbsv5e23ad10ncib9jnelzdu6opc3k3aejn7hv1vnckw34gdesixj24dwbq4bvfkvt69d9q\",\n      \"pubsubTopic\" : \"3m10jjbfo3faigguvt6sb1f9gies3ljayjl73p0cr1u758zn27itg2ogfseqgnv3yfm7veqknjvqdg18rvx8czdrdhd7w1o1tow3895zk7t6ajqp9ljyi1kjmponfipecxj09vahyt6cgi1i664arsgkd8szug3\"\n    }, {\n      \"filter\" : \"cx4dyw5do28m58tua4r1imn4zgis4qbjsqow3x78ar9lho5yu6uqtcg6saae80mwhpwcn0pvv6gj2kzl1c9idmv490ph3b4yn32pwiq15s5n47m7bq79vd4iukm38wkkqyez8nso2eh6miqz4bpg\",\n      \"pubsubTopic\" : \"5oava9lhis1sp9fvnmqfk2ejk5uinbreyldmwmwjljlh\"\n    }, {\n      \"filter\" : \"orf8asbcpnf8eyvgjmvcx12e7zwjszn721l31q576u7bymiv0214uwhvttzt70xd8owo8za7zw5gzih8abmhqkd7tsttrkutne0ata\",\n      \"pubsubTopic\" : \"f1krlvf7ffuax3sywwudanvc97xij0re6183mu8uygprs9k96lym2skudvr98splbp93ztddg43h0eh8kyixk3ff9e2ac9qj6ydiku3ps4onhoom142ixmcma2bujurgmomudctonrgq8dool6elwswkc0jhmo\"\n    } ],\n    \"labels\" : { }\n  }, {\n    \"parserConfig\" : {\n      \"schema\" : {\n        \"unexpectedSegmentHandling\" : \"SKIP\",\n        \"types\" : [ { }, { }, { }, { } ],\n        \"schemas\" : [ { }, { }, { }, { }, { } ],\n        \"ignoreMinOccurs\" : true,\n        \"schematizedParsingType\" : \"SOFT_FAIL\"\n      },\n      \"segmentTerminator\" : \"i29eua5sbqg768sd33op9lbmqml5q4224suyr9ejn4klegt2a8s2tvkhkoshmqn05rm\",\n      \"allowNullHeader\" : true,\n      \"version\" : \"PARSER_VERSION_UNSPECIFIED\"\n    },\n    \"rejectDuplicateMessage\" : false,\n    \"name\" : \"Tashina Kilback\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : false,\n      \"pubsubTopic\" : \"b1ksw859w7cu3nj74oicaj2nyntyrwmflpy0ssdbl8fbfmmycawrn1bs249x8k064cmwei18oqy9e1eobwkxn469mv3qmef4h4lki6r6a440kva529r0sbteqpfn1h8ebmbrg4gbm7uc18a643khk2hsiacf917ym5bz8hxbo6r01oty1rlgs\"\n    },\n    \"notificationConfigs\" : [ {\n      \"filter\" : \"n05lys48nu2qlp0xdke6134efn6hy8uux5mkidz4jtcrj3clv275pwdcvhxd15tllxjcvmfkwkkzpnu5ptu89w6z09jlm2bzm0d2v6\",\n      \"pubsubTopic\" : \"yoq301n6lcz15w01kcn4lnecijtvah3mfdn7vbjy6x48jx0vk7leoln85zyhv1uxo80cok2j05aqri41fn2n43hhi8qvorfig15wfhz0qdd2bm6xe3k17ajprfte7kp3kt6xkcveu0192f59wc0f3753mofazi96ooafzexb532jccfsztvcb4o032sfc2a6zpf8xo\"\n    }, {\n      \"filter\" : \"welhsd523hlgoceb1mtbhdgpl8yduw2054oyr96e42fewrz2543xhhrxvpu14fgeprrnkq56586wmb7s3on1sg2701gf0\",\n      \"pubsubTopic\" : \"xh9p6hng2i58sdf9hhdrvo1ew1a52fh3uucssc2y2xlb848ggxxw67egs75zt82hc2m1c55cm7sebumn4tun4r6vutaotduux3m2at2hzfn2d0x3f9mv0rg7jdbva0yaa24u3ivah2ldvherw8zo3j5x09u0x0hgfjo93qsqwo28ohh4azjyrocdnmurdxtdg6\"\n    }, {\n      \"filter\" : \"f08jh3uzhpzm2iacuro4c1mzdqivpbxnrhv026iv61wi2m9m7fmf3rx7pw9xq65t2sty4jc4eb68l0nqdadh5w373nebw\",\n      \"pubsubTopic\" : \"pay72y660blrvj50kmxucdi08py3iy5a11o1cmn6aygbmaenq95vwh2512n1z721e\"\n    }, {\n      \"filter\" : \"49h3qmi3hbew1akf6puyus59hcjpn0b7za06lrh\",\n      \"pubsubTopic\" : \"tt71eepi2npi75fily8b3o9wqpvxadndtp2ktsjnq2yqxaatctiit6wq3vr3w8re5m5rol87v47q40w9x0y2eoscp816txts43a1vdh0tj7x7t7lfaqjwsyxjaxf8s6mvqy6mqs23jc14virry\"\n    }, {\n      \"filter\" : \"rs5arhjgq1bf6dp79w6jdp6it62or3xsewg2b8jmlirjem7fm4704h8kfoyyo97s1hhm2qb0whgdi9e8u77cnx6g1xhgzjnkdztyfops5ajgxb8s7lxlfg2gevwxjdgopiaevpb0vdrgk7e56bul0b\",\n      \"pubsubTopic\" : \"o1rdtw7gp67aqqg0lzskga33dq8lol8stb7psgj08fr8q2qusr9zkcfo7ycrpvwo69uxolxw7egqt0yxwscg1ggro56au9ej28uwx2tjmypkqeyt5kthh780uvbkceg9mmghh8vul3iq67wyn62\"\n    }, {\n      \"filter\" : \"6e6pxghh8ogyu5afon6pk9cyrkbevib0p5iiu9eid1ddenahu6g84w99qq9jtndsfm3rak8bwhpoao3tuaijpkxpl08pspe7mt7ihxyf80di9omtwlssarnu3gxpg5zh8\",\n      \"pubsubTopic\" : \"nppayq6dxmgrqr2t72mb3n74anx4a88gnz31olehkrhr65bm894dkeuii0e6abxmeht84grbyp2knmxedz3jlm4yrwhkskxubnigzyzabpcwfk03fcsnmjscx1r28w8lyjn9c3zvjm69jekhxru29t2eplvkxhiqnvsbhb4\"\n    }, {\n      \"filter\" : \"3t5dpeds5b3bz3moroygypkowtpybmzsgolj2ktx\",\n      \"pubsubTopic\" : \"3v70d46ejdwl0vkdap3ja0mt9b6ax5ah1lbtx391dvlpcej159r8brdbnw6cy0aoteojpdd7ftpyvj3l3jkazjb12owfb6b1ji8dtb6bkrth7rh1260s\"\n    }, {\n      \"filter\" : \"iapbejr3vcczg8ig748psrulzz56ecog7yth5u7kqahca6o\",\n      \"pubsubTopic\" : \"u1cauv51xuz9xo7wycvp016qtxg7jlkthmshdehxbhd5szt85j92rrbmkruttg5lgpk1t4sy17cjerv2un8q1aw\"\n    } ],\n    \"labels\" : { }\n  }, {\n    \"parserConfig\" : {\n      \"schema\" : {\n        \"unexpectedSegmentHandling\" : \"PARSE\",\n        \"types\" : [ { }, { }, { } ],\n        \"schemas\" : [ { }, { } ],\n        \"ignoreMinOccurs\" : false,\n        \"schematizedParsingType\" : \"SOFT_FAIL\"\n      },\n      \"segmentTerminator\" : \"qv295m581hmt0jav35z68wkl6nt3a1ppmjspo0368dzc04y3ugq0dcwkwqp6vy78gnaq32aff7ig3uzfxnrtupuk88nl69k2whbswnlboekmjsub4o29c7y21l7vvblqvqcykrgvprgjmh9sbbi7jut5f3e25q0wol8uiuqaui75l0q576f1a251u\",\n      \"allowNullHeader\" : false,\n      \"version\" : \"PARSER_VERSION_UNSPECIFIED\"\n    },\n    \"rejectDuplicateMessage\" : false,\n    \"name\" : \"Stasia Abernathy\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : true,\n      \"pubsubTopic\" : \"920lk5w4mxslfi16hokpo3kcz51tkegtkl1amhuyit1omtxnhemikkfc3eqro4bx6hlulhqh6pezgrwp71hf85yqkzkzxeru82od6v9fzrraka2wl7iqb7pl0eea6bwnhyfw9wphf6hl\"\n    },\n    \"notificationConfigs\" : [ {\n      \"filter\" : \"n9f1vim9klgrgwq3ko486twhno4tnmyge3221asyy9epx11uh6sqj1zqdkv828hzazlrqscoqi3kvp9vc4zvg1aa349cj3m3drwolr3frl488boulk832lq18\",\n      \"pubsubTopic\" : \"5p2ntm8fu42zhqebiqzcsaz6szpzu0ioscktbyjenxopjql5rxggc2b8q89k0znlo0y5dtlp387qeg6e\"\n    }, {\n      \"filter\" : \"8gxeiki90m0igw38mtpy2qt2mul2j9xenux2ujj1nysfzm4romoe3iihksy9rav6hc91608jdym8yenl6hmqiptzv8eee0g3twlcg3xgnbdah13qe4ycecmql64e7ilwxshey3zqxg1cgjpxa5f0j3alomqk24hzbjhw\",\n      \"pubsubTopic\" : \"vwpvlth0r8yq3da3gx3qk6bsam9aey98nge5kddcw\"\n    }, {\n      \"filter\" : \"u8tk8rgbphixm5l87ith4w7bsnvtualo4zg34u9kvfek0woie0kke7m33s0ekq1o8e5z5wu83o95ddf0ji0nb5h1x26414\",\n      \"pubsubTopic\" : \"fem2ltf0inve5yqqz4zxszmertlbw8mfpu27zuxtqsdzn39x73nvwxb\"\n    }, {\n      \"filter\" : \"vty04wfjx9ie92vvfhwah6il3gttj4kljfs46zlv8amgkst5ga7sfkjhcfqwsfqqm1giy517nlxgzl4txidvveznitwceci23oiuqdr41w3oqixvjkfdjh4cizvd\",\n      \"pubsubTopic\" : \"z51brws0xsm5nfr8vpaobiim7ynbgvu8zefjn49qonpl9614758bbimrimt2318i6mlillm2su1ab30ofic3la5zutvmtf9ooxr5300wb1aslng2zwpp8yjwh9g29pu09zmahhewu8vmw1y\"\n    } ],\n    \"labels\" : { }\n  }, {\n    \"parserConfig\" : {\n      \"schema\" : {\n        \"unexpectedSegmentHandling\" : \"SKIP\",\n        \"types\" : [ { }, { }, { } ],\n        \"schemas\" : [ { }, { }, { }, { } ],\n        \"ignoreMinOccurs\" : false,\n        \"schematizedParsingType\" : \"HARD_FAIL\"\n      },\n      \"segmentTerminator\" : \"jjjgv3wintbw9vjijymal01wpk0uigfami6zm1bxkwdcrh78ocoisnrp\",\n      \"allowNullHeader\" : true,\n      \"version\" : \"V1\"\n    },\n    \"rejectDuplicateMessage\" : false,\n    \"name\" : \"Fermin Simonis Jr.\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : false,\n      \"pubsubTopic\" : \"jbo8iq4mx68ieguefowhj2apvqiilnz725lk3ow4l6f956vezfllo708cim36lv7baftd7p9oqoag46fi3\"\n    },\n    \"notificationConfigs\" : [ {\n      \"filter\" : \"w7k5ue43sn25spmq51m8x1ep09ur1ltvicbf1fsye7se91nyscnqo5c3dq80gt4a787hhja0facgb9henafyah8jw4frfehtvv4zatw3k062fx37bl5nbqdp4bthmpge03hgg2teti2hxc8y44qhj43xdo7m1i6r8yztaedxojbsiny1k0a1l7qg8ng1ftd2n3\",\n      \"pubsubTopic\" : \"ykid0nox4l9ht4p2eeynf5fpo8dkq3lc4btpwux3wim12wdxnlvxnhitncktdunalzoh1w6tb\"\n    }, {\n      \"filter\" : \"zia1g38i8ftqnacyliqfw4z4qadcl42c2lhv6bznr7feibljinfezzmiego0h6yypp6wrjjb09tkevl3hnl83ukg1uplq42t9161i18dijfl6wie38nu8bdb3fkj1hz5dd849ne5qzo8m3i0\",\n      \"pubsubTopic\" : \"8kl3vgnn2lb52gzxuej6p320rz78wwrd7sd76znbzelzu85wauoqj3sfi57wlno1dw50w9ce9j8a409\"\n    }, {\n      \"filter\" : \"3uhm9m9c6ipgbj6faxbv25sura3wouz1hh7arhfqvhqqs7mbl6lgfpsy7mb4lf0ky7e14revon4877hlmmc5t6c7ektgk\",\n      \"pubsubTopic\" : \"worwwp7c1r5w70upxij6gz5j07pnn7kynahp4k80zogjev40no2wd1t122d4r8jly7all2l8yam3n6wkcy2uf2norvjmqdgz9n7yrd1fhz9jpk49aqkftozhiao4lw4g0g6glluzu5s9xo\"\n    }, {\n      \"filter\" : \"v1q2tc3t3onk39mx6zbumka8lid7yih78e5wfzx2n8wzjccbjafvwg4u1t0wr5owtrwxt54tgcbvy3g3fn6khhhyd4vqxh6cc9rwiano02fawl9t67fqdrom\",\n      \"pubsubTopic\" : \"4iemk3sof5krg8yuc1a1zblgbg58w6xwd52qe2h5f6ryikrz22zgcz3mmnfbzswv54dhf8cx7k1ujie91d68p\"\n    }, {\n      \"filter\" : \"a5kpkoys9ky5atyo03u602je2v4p8ktxlipymdn2byx5jeehr5b4evxmcytzj6g1iy27sfbctkqzek6tappeya7hiwh2y2puwrz5vh1t1vbfas1f97y2hk78l5xo0iz75nt8qfyb4uhtr9gkwepp1oaup47bh10w7nyxhyeyijh6\",\n      \"pubsubTopic\" : \"6pzdf0z8zrgrxxpo0kxy34350kbs2qsrkazqmva18mnyyk4pu27bijmm974wdgwbnf4eyw7zvq713q9k7uv30okez15ewsgjn40hot8q0btz2soyk59hb5l2hv8ecxbjlyq2c0qb86vqralqfvqnw3182wzcolm4b4zax6wk17nfnkn49zpi9ikewlprda9gu\"\n    }, {\n      \"filter\" : \"rq1ko23rkmdlri74yfne0zarlp8rnmrbjuf5clk0npfhcda5o\",\n      \"pubsubTopic\" : \"i0ogdia5mryq1yajzvtaw6apw9qpik0ppz6rx3lxafs5p766cquta8tvkqnibyyotcc4r33fsrkzjnucyidllrrir9v30q5v7813va0buup8lc99y2q0rvepph1cbwhri278x9ayoc2oe4f2s8hvygig93b7fsjhwb\"\n    }, {\n      \"filter\" : \"q4jg16o0dvwhpzoj35vyr4for968g8qumkfprrj32moo0nyo8tozb5tc37op9blvrmna7kalu8mcsdiidtkd74qcu2ady4bmohrzfi5haigd7wnnbtdm5h5eemexr1gapuaol01gpiffrcarhtck3hub8r57c6tcjmthoe120k3zuahs\",\n      \"pubsubTopic\" : \"vuq7d6eqx3k0snv7lqe82i1zwf3hxl9krrkmagvnt1x0tt3dnppzx104xl0iz5nuknymva6xgo0icxbd5vj5uv4trh8qzl6x3jsr14kcdrfao2urm\"\n    } ],\n    \"labels\" : { }\n  }, {\n    \"parserConfig\" : {\n      \"schema\" : {\n        \"unexpectedSegmentHandling\" : \"UNEXPECTED_SEGMENT_HANDLING_MODE_UNSPECIFIED\",\n        \"types\" : [ { }, { }, { }, { }, { } ],\n        \"schemas\" : [ { }, { }, { }, { } ],\n        \"ignoreMinOccurs\" : true,\n        \"schematizedParsingType\" : \"SOFT_FAIL\"\n      },\n      \"segmentTerminator\" : \"4wktpuco3l6grijy6fu43z5pi2vexm4bu76t36vjmdcvfzxpxfs35i80mzyj0fufkn41xeyy\",\n      \"allowNullHeader\" : false,\n      \"version\" : \"V3\"\n    },\n    \"rejectDuplicateMessage\" : true,\n    \"name\" : \"Angelita Paucek V\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : false,\n      \"pubsubTopic\" : \"gqez7846iveh30rah8bwc0gib52zug77m55ub0inx9qmid5rvmufasfkd7vkd9dn69n2j9\"\n    },\n    \"notificationConfigs\" : [ {\n      \"filter\" : \"nnx3xkbuvmzo9g5gankvc3st7u9bfuyvhgtj8imrt4nhwj7qiri75bqzbg8o7rmi4s6z0s72jz7v6fmrqpe5pppcnxzh2r8hulq1dmcyz31zoooavkx37d04s1xq17cxi1nredjju\",\n      \"pubsubTopic\" : \"903ecstrln6relwgpttonyigrgcpjj66pkzu3dpwx2ox9thtla7i1672ce479d5ej6cuhb17dsb0zochq371shvnvq3khzgro8odjo9cc7bniiwrom11pr1dzw9jk9jw3d9wwl2r7px6hjmpea5bvt26q8e\"\n    }, {\n      \"filter\" : \"i0n\",\n      \"pubsubTopic\" : \"zr3q6a1oq6k98guaeoz7gvsjgaexvyzdahvoybg2cimqs0zxx20ljz36hjp2am5w3tq7qj7d2tnszogml5o99z2201vdxrjf6fv8f5pcz4sq706n\"\n    }, {\n      \"filter\" : \"8kp0lgjxmo0fzq8u9z5r6itql8cd0kvsmhjnd30zsjipr0dwsjx26i8aptwhgl7sz\",\n      \"pubsubTopic\" : \"hxt9n7i4xlqx6bhaqxwkrx9kfiotmd7ye0adz2te8er6\"\n    }, {\n      \"filter\" : \"i727fimt6v3l6lz8ctobz75ks76lw3mtxsng23l6npwnk3guik7kk4ishaaanie1w69a1s5z467k6pblietwi2a3s6xr95l0aijqc5qcpxfzpswmvcx5ujp05qv2zylnf02wibom3n96p93kiiou46\",\n      \"pubsubTopic\" : \"gbtvtrjzpwnaj3ipe63pg8wyxbhqdurd19r9fwoqwavcxqvk63uy5dw42n2svaqb5s9uo794gweu0v9zvltfe\"\n    }, {\n      \"filter\" : \"okerehnma7vozl34i1bnhx3ucaao71kkc4bpehm7dznu4abr95d8l7nli6hddpguwguc56eltsq7dhlpbnvs5j78665mh8phl1we3zvqjvxm61au3v2bdjjcy0800rihxepsfa1hmzkge0t26iha\",\n      \"pubsubTopic\" : \"ba295qg4errr34y4wb0fhzjetuul1s4ca1g\"\n    }, {\n      \"filter\" : \"3n5ravwvtncb814idrjwtq912z50xjinb7\",\n      \"pubsubTopic\" : \"pd1jbu4iae4j0ki0e69wbv4b0agfwt1zjcs5y6yw2vrl08li9cgiag3stpyuznpdlycbut8i3m98k4mxvynkmte3wday0icyb9rfiqzv5o7vfwopyva86rb7eyyhi6mlxlcnbpnbspr6h6gpj0utadyd7wkx2o1j74\"\n    }, {\n      \"filter\" : \"6r0yra4zicveeyr98800vxbwv4d9kbdo93ikuqmtsh97kem9v7pp92h5o0114xe499nqlhmj5m38qffnlin1p87t5ymtydwteak8f33dfihj13b6emjimvdsueinjrb8ce\",\n      \"pubsubTopic\" : \"fz4snkwy32mv6ztpllt2u2uepkxc6wfxy6by4yfwsb71w6ez3f1q8vatj561bijscc2pf8h1xkpa986h32k5ype\"\n    }, {\n      \"filter\" : \"amoireisgdxtaeqqa9nwsdtpqroggjlvea9xejd38nicw02a0lh13k6yenqmhl7of01p7fyvuh8x26uakv0cs5razotie9plkuw8om48ive2lhcts5wpqsgd3je54rgi2aegk8tl4ls8h3tlugp8en9dno\",\n      \"pubsubTopic\" : \"4ney\"\n    } ],\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc0867ad-ed52-4dcf-832f-9786b13afa6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.63692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.list",
          "schema" : {
            "description" : "Lists the HL7v2 stores in the given dataset.",
            "properties" : {
              "hl7V2Stores" : {
                "description" : "The returned HL7v2 stores. Won't be more HL7v2 stores than the value of page_size in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Hl7V2Store"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bbd1a6ea-2d78-4fcc-b43d-73835d8ef77d",
    "name" : "Creates a new FHIR store within the parent dataset.",
    "request" : {
      "urlPath" : "/v1beta1/1bqm0j8h14q3yk9h12srf6ct8dz2etxid0fwf6xlgi7v6w1a4dpk98qq4xja/fhirStores",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"disableReferentialIntegrity\" : true,\n  \"disableResourceVersioning\" : true,\n  \"enableUpdateCreate\" : false,\n  \"version\" : \"DSTU2\",\n  \"labels\" : { },\n  \"defaultSearchHandlingStrict\" : true,\n  \"streamConfigs\" : [ {\n    \"resourceTypes\" : [ \"105tt7u81bc9sofd0qqc30y4xmlcu2i9gb5tj3yhxga1zm2\", \"zkqdqi5dcfyw0q9fp0sr4nnvsru2ap6shu2pzuk6nkrhbf0nh6adpc49yxxvym7oy99ef6fiq2pf58k0nb068ar06cbr4pz20hozxcf1sacrc2hp8eg1j1ko3e3w892z51ue2x2kdzbdujbzm4e8ve36ao2le4w7p6ceq66\" ],\n    \"bigqueryDestination\" : {\n      \"datasetUri\" : \"https://web.example.mocklab.io/032837\",\n      \"schemaConfig\" : {\n        \"recursiveStructureDepth\" : \"091hqsdx7g3f45s82gq44ui5f0wqqnznubr48i1ifb0ax8v515chb2dz79apu6h7z0qh2y7xhm5nbl214c62cvgvddda3r12iazb2c0zs7crh23yo\",\n        \"schemaType\" : \"ANALYTICS_V2\",\n        \"lastUpdatedPartitionConfig\" : {\n          \"expirationMs\" : \"2023-03-05T15:26:31.632822Z\",\n          \"type\" : \"PARTITION_TYPE_UNSPECIFIED\"\n        }\n      },\n      \"writeDisposition\" : \"WRITE_APPEND\",\n      \"force\" : true\n    },\n    \"deidentifiedStoreDestination\" : {\n      \"store\" : \"5hs8ltxf1f7f5v1frl60kch0wqkjszb1yq9iwc0gfkfqmq12wh85zvgozwvnj2q6fzicbugnsc2rpncv61ghw7urgarufzy0y\",\n      \"config\" : {\n        \"annotation\" : {\n          \"annotationStoreName\" : \"Deadra Schmeler\",\n          \"storeQuote\" : false\n        },\n        \"operationMetadata\" : {\n          \"fhirOutput\" : { }\n        },\n        \"image\" : {\n          \"excludeInfoTypes\" : [ \"ez3db8tzt234yqcj7xw5luuo18ndew320x55to1wse2ezhj8a4v3bbsatgprr\" ],\n          \"additionalInfoTypes\" : [ \"4cqpi7cnsaqkvexvg8opqpwdtxkizcotuopkxu46oc3of0x6\", \"d98mub5wcfsqrfms1jx74qdetcauusop4lhqs60c2al5tiitiy6cwo502d78jounc2axjzgpbbvbhx7dqlhtkqxqzefwc7gt5aozsbdkm1uq0crz1xy84pj64by6u0hsyw2vb7uv79nras4nvcm3myoau2994mzydl46n5w4x2dpyqzxriwm17otb17en7kdxv\", \"ufosbqznjze3av61ip5t1o35bt2jwtepq19q463bdnks82jspjrl0wgp5ixb4du9n3uprz28gacjik7upfbon0v8qrsxpej94znpor8p8ae7rkjdjru4k0uliodvvvz41kgoonx015d\", \"w53ibimsecrxs18hi2v\", \"9uubbeac7zi2nog0pv74psm3e6d50bd5hloxz8b2mn0jni7s4x5yh4dakxqv58z0dk9k3pkxxlxc5pkv1bztjz8sd71w5em44dllzdg3tla9c9k9grx9i2a1ppt3wco1fmkhgpzahvjn4t92knxf0\" ],\n          \"textRedactionMode\" : \"REDACT_SENSITIVE_TEXT_CLEAN_DESCRIPTORS\"\n        },\n        \"fhir\" : {\n          \"fieldMetadataList\" : [ { }, { }, { }, { }, { }, { }, { } ],\n          \"defaultKeepExtensions\" : true\n        },\n        \"fhirFieldConfig\" : {\n          \"profileType\" : \"CLEAN_ALL\",\n          \"fieldMetadataList\" : [ { }, { }, { } ],\n          \"options\" : { }\n        },\n        \"text\" : {\n          \"profileType\" : \"BASIC\",\n          \"excludeInfoTypes\" : [ \"uzwa6p15vo8r7cwam710duqczy2fgcc63tatr4zo22hiv3umqqeva3zhzak2nhp0rjzwa8of653uak5vwhp8wwgwn6fgjwr5svur8ergzrqvgk0qpnbjr4z2\", \"s605f3uj6jms3n4r7h3n7xkakvnub1cez6eqrxwidex4x3iwwkr9g42n1\" ],\n          \"transformations\" : [ { }, { } ],\n          \"additionalTransformations\" : [ { }, { }, { }, { }, { }, { } ]\n        },\n        \"dicom\" : {\n          \"filterProfile\" : \"MINIMAL_KEEP_LIST_PROFILE\",\n          \"removeList\" : { },\n          \"keepList\" : { },\n          \"skipIdRedaction\" : true\n        },\n        \"dicomTagConfig\" : {\n          \"profileType\" : \"KEEP_ALL_PROFILE\",\n          \"options\" : { },\n          \"actions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n        }\n      }\n    }\n  }, {\n    \"resourceTypes\" : [ \"x7jsfu4tzr6f61ymvaklr2v8bamrjbdzadlium1funcgazg9oqum4at1zaextgt39xlfmuxzzebo5zj6tf9w1990z4old8sulnke5ja7o45kf8f9yc553\", \"1tkjok3c3yudyw7t6xo8\", \"vnbujczltafwgs9yn0asafkazt949ibgysu96e2comcbtis6c8u2dgpujdo98ssyv1vvifo5da3dvps446o12nlruuctyhgzkd90koqy7bs\", \"i9j7sfxhlyyzt5ukl7vqp3kteav9mlnbqylhhwj7z0yx7nx6byy7nlr6hrtzog7gad6yo9iris0v5syor15pl46w2dlnv4uw6phe6z9gzwiqq5tnw80kjbvb6vd0jy1z3z6d2310kqq0vdx2434spqv9qq7\" ],\n    \"bigqueryDestination\" : {\n      \"datasetUri\" : \"https://web.example.mocklab.io/253393\",\n      \"schemaConfig\" : {\n        \"recursiveStructureDepth\" : \"2qbt1sypnyjxem1tykcx2c6xk0ovgl91p7cc4a3fbfmlj8frrhcvgw4sx8nk8u4nkphaq0l9va7tcqgax5zdkm4q98qyrzn4uge6p3h7kkxbaq27shwjeewufl9ex7epwewcfmmi5phhtjvlh93tx0q1cbvm12514xzbd93pe1uhopxkv028q\",\n        \"schemaType\" : \"SCHEMA_TYPE_UNSPECIFIED\",\n        \"lastUpdatedPartitionConfig\" : {\n          \"expirationMs\" : \"2022-10-05T17:12:31.633417Z\",\n          \"type\" : \"PARTITION_TYPE_UNSPECIFIED\"\n        }\n      },\n      \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n      \"force\" : false\n    },\n    \"deidentifiedStoreDestination\" : {\n      \"store\" : \"dopf3ydn79vgj3mb39u32ze6drpsg3z7mqxm4t17nwmh10bzvaa3hev3e5reu98hlubg6ml36bypp5ogrvldruajot0bwln6b1semqsnlglzyqm6owz4wzuxo6w2abciky7325e4zxp19ikhpmroody55sszozf1bpq\",\n      \"config\" : {\n        \"annotation\" : {\n          \"annotationStoreName\" : \"Randolph O'Connell\",\n          \"storeQuote\" : false\n        },\n        \"operationMetadata\" : {\n          \"fhirOutput\" : { }\n        },\n        \"image\" : {\n          \"excludeInfoTypes\" : [ \"gezpgiiyctsi5r75zpse3fk8cd96mgwh1tfjkd4rtkc4ugsd7xpf4nzyqwgtwthr2rntir8a1cnyu5me3j5dosku06mnyfatdis558g1u9u4p6xudowsja0x2bva9rm0pqlviwxt6zzd1azc3nk0m52wowkidhei162wwzibcgdudv2swofo51seu8o9pp21\", \"qh4d7vr3um9r1bdc7c23nww4w8cz3rcnxrmhrnfiou42j1hgzijos94h6rgw0jjan5a0mzot8qyfhwz3wsav50qd3h1haqspphjlv6gy3yvd196wzwydedqnj175u0hgiaum91h4za7ck9d7gm9q3kcxojpxqdd0a933h8q38n91m3rkx8sxcwtq\" ],\n          \"additionalInfoTypes\" : [ \"tndv4o9fjxwlfczzyc33irms1aws4rwllzvbtm9786gymcd22axy\", \"ps6f1hztnsu2yvq7viffdyndqaq0cgaxe7b5o5asvjx6ucjipkmtjrpkb8kihwmlb\", \"dlilchkwu309xnzbvr0ed02zb0vsroriciipllgpg92dgz7221zej2dqt\", \"hncqdx2lk\", \"dl26wrbc15heuhxlehbgbakwtgo0ll4t\", \"3a1a3bcw2p7f70diqk72q6mppg6xfcsu19w8llgw6jgsd5yyj64qf76hsfuvsqecxuf3dt5zt0wgqdyy7tz1jvpao4utqwgceb\", \"cbkc51is6xuj64dce83l5iv21ak7eq1bj8z4o6n4hz3668i9ssb9clzso1b9une1p\", \"8c4f3sqc4ai0k9ncdxeqjomrksqaw3dy7emuvgwp6rd8tp85gcl1rsridf5svrgcfko0vltiqd1cfrdpmji6cc81iiaj19gt\" ],\n          \"textRedactionMode\" : \"REDACT_ALL_TEXT\"\n        },\n        \"fhir\" : {\n          \"fieldMetadataList\" : [ { }, { }, { }, { }, { }, { }, { } ],\n          \"defaultKeepExtensions\" : true\n        },\n        \"fhirFieldConfig\" : {\n          \"profileType\" : \"BASIC\",\n          \"fieldMetadataList\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n          \"options\" : { }\n        },\n        \"text\" : {\n          \"profileType\" : \"BASIC\",\n          \"excludeInfoTypes\" : [ \"h2cpmnfzinnrgmsdr5isf2\", \"ccze5bkyvi8kgzaoajnl68j1ikh11a3exn0i\", \"gw5zj\", \"golanx6cwt91c8eud9q976jwu23k4ceh4upisy75jwfmnrxgj72ljc4a8wb32x1bsp8uzhxx4z6jpz1ijtpq\", \"q0px96orxh84wsrl82\" ],\n          \"transformations\" : [ { } ],\n          \"additionalTransformations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n        },\n        \"dicom\" : {\n          \"filterProfile\" : \"MINIMAL_KEEP_LIST_PROFILE\",\n          \"removeList\" : { },\n          \"keepList\" : { },\n          \"skipIdRedaction\" : true\n        },\n        \"dicomTagConfig\" : {\n          \"profileType\" : \"PROFILE_TYPE_UNSPECIFIED\",\n          \"options\" : { },\n          \"actions\" : [ { }, { }, { }, { }, { }, { }, { } ]\n        }\n      }\n    }\n  }, {\n    \"resourceTypes\" : [ \"uvn1y12e44ppppx3ux8msj127rl01gx23qc4a7hoddnyolh3qis85tsa3hfm\", \"hpm9ven3362pntcvoi5w10to5gugr0ybsiievr\" ],\n    \"bigqueryDestination\" : {\n      \"datasetUri\" : \"https://web.example.mocklab.io/000925\",\n      \"schemaConfig\" : {\n        \"recursiveStructureDepth\" : \"kyt1mq1684uzv488vlw6qk7sirh56mfs0qaaswd1481i1fcvdnrn4lt62ix9ynvx5485tlhby3ng0odw7mt87jgsqetl4jm3kw8xu4gahpzsjyacn4f0n11tyzey6vk2\",\n        \"schemaType\" : \"ANALYTICS\",\n        \"lastUpdatedPartitionConfig\" : {\n          \"expirationMs\" : \"2022-06-11T17:38:31.633947Z\",\n          \"type\" : \"MONTH\"\n        }\n      },\n      \"writeDisposition\" : \"WRITE_APPEND\",\n      \"force\" : false\n    },\n    \"deidentifiedStoreDestination\" : {\n      \"store\" : \"kfafj0arj3zg9bsrnffsir841hjzn1mh1e0d0w44zuexq4pdjb9esy3pim45xq3cegb06r2jcdfbey3lkkbn7319e06p0y76hhx7ue8u4s6j1pu4veoyuic916cqotuxt97boxue6sthm5asc69gcaiza17qwu9kzsgkwwc83\",\n      \"config\" : {\n        \"annotation\" : {\n          \"annotationStoreName\" : \"Cortez Schmitt\",\n          \"storeQuote\" : false\n        },\n        \"operationMetadata\" : {\n          \"fhirOutput\" : { }\n        },\n        \"image\" : {\n          \"excludeInfoTypes\" : [ \"f68dtfjl0o4drfk0xl2995fab2qxx74au0afkyo3wwnmk92o9tzzfv9yju5r8wakx1itfg0viw0ea6eehafr36d3jux5hjsfqnb1phxtmug\", \"m6damhrrhtcpdjvixzx729uywvo4onld7zx15f8pxitvp6x3yuockhhbs9hak25whup58udiazsfmeg1dl17i0ykcphkwd8tbb4sxizh2yechws24grsed\", \"l3cw8l2qv0qyn1btnp8u163a47cgo\", \"w1h4tiv7doq13qutorxumq8upthjb9dx0symgzu283b4c605omqsyvt2lvew9sts1l8lqle0th6g8lgdzj6\" ],\n          \"additionalInfoTypes\" : [ \"y7h0jw590s0pk5qggt2h0cc60x0itkrjq1azpyh5jfo0djxzus3lq4s1k7jbwcwezn554udlh8v4vzu0bqkfvv2zlgjj2tp5a6hw8eyt562l3es1922fuy2nis5egadyulwizjvpw6bn\", \"o7e7rcxk1ivr5jwcftvz79tzjq7\", \"a3bjnipuk1g5peno3nnb824hhy2b\", \"q314p1kmtwskvqn175dfvswknxe6jwsg24ac0p3t24nu58ouprejp73b9fkl8g6lg91vmyv0fmo4tk90fk0qa4sbdp604h0l7aed5w7oad9k6\", \"tglv188fntq40s3k4d37ea826t99hm1p14a1wl29w86k5qyz2h3vudaoz56sybv7vczxyneubydjqivq8bh4svouhyal9oh7ee4kkr039imy5x8ti\", \"e2odr5tcvozsj31ky2smj677503q62hoabaqgo\", \"u7r3dgwukk14genaxmrw229iinjq525immnv58w72nigwxzl57nyzlpbwiw2nvagquczhjt69ihxi1nzryyyr4h69beyx20silest0s14jy4xc8qyboc1xcx4kfpa2b2ixlp6w46h91wljh\" ],\n          \"textRedactionMode\" : \"REDACT_ALL_TEXT\"\n        },\n        \"fhir\" : {\n          \"fieldMetadataList\" : [ { }, { }, { } ],\n          \"defaultKeepExtensions\" : false\n        },\n        \"fhirFieldConfig\" : {\n          \"profileType\" : \"CLEAN_ALL\",\n          \"fieldMetadataList\" : [ { } ],\n          \"options\" : { }\n        },\n        \"text\" : {\n          \"profileType\" : \"PROFILE_TYPE_UNSPECIFIED\",\n          \"excludeInfoTypes\" : [ \"t9cncshexkr3gdn181vb5fnco954b32gbn5rgkbghvhzm6rjf2dyy909gzigsdb2lbhq7gfpmxaovjod1qru3qfbvyoefgn2\", \"twjihwo163fdropxdopyk0y4ti1z0vx6noj6s8dl7d36v18aapf59pqr34whz8brsadhsk4vdfuyg7qtl1l1lu9tz7k19a2ieeg29ypjdgzncp3vf\", \"dx6mqpvefyaj79xpbn7sptr86tkmgidjmke8mhdqk8oht5w5ve6d49vwndtdan2uynt1pdz\", \"umry2ml4x4fezctq731eabqhdd34rkkdizwwksm\", \"g9hu1n69vzoxjfy0ey3zwnwqhgj1y7c4tk1v6wyvedqobeagmxn51c83z22hhwj29xe4by15p23yvm1pjxzqbksic5ltrl8aw4a9od7md4vdgtkuc58p27xyr57gkiv5yewgrdoi8om9lp7\" ],\n          \"transformations\" : [ { } ],\n          \"additionalTransformations\" : [ { }, { }, { }, { }, { }, { }, { } ]\n        },\n        \"dicom\" : {\n          \"filterProfile\" : \"MINIMAL_KEEP_LIST_PROFILE\",\n          \"removeList\" : { },\n          \"keepList\" : { },\n          \"skipIdRedaction\" : false\n        },\n        \"dicomTagConfig\" : {\n          \"profileType\" : \"PROFILE_TYPE_UNSPECIFIED\",\n          \"options\" : { },\n          \"actions\" : [ { }, { }, { }, { }, { } ]\n        }\n      }\n    }\n  } ],\n  \"complexDataTypeReferenceParsing\" : \"ENABLED\",\n  \"name\" : \"Bertie Stark\",\n  \"notificationConfig\" : {\n    \"sendForBulkImport\" : false,\n    \"pubsubTopic\" : \"m97noip29ctmvagsr53iyc7nu2jiemo2y42iegey5f0m2mk9gsiwcpzh7dnha7d82yqoc2ufsosuostvsc8m7x9443siondqqc38homik4murz1tvx99jz0h8wwhlh398i4rli59dxatyfuv0gc1c28m\"\n  },\n  \"notificationConfigs\" : [ {\n    \"sendFullResource\" : false,\n    \"pubsubTopic\" : \"p8fwf97wgyj0d61sced0bfovbju61v7okmzi1h07ldht9bwukjw7e2efkfe1wjzv30fv2q40y756crhnxkaq87lrquz5bnxw47pyvdozfqzyp8qc8zwaakbrjubynf268j3jqtodcjn5kc3prppxrwps5h4g7gh5v4rp6a725h1bemxcfm18jv61q41bkh\"\n  }, {\n    \"sendFullResource\" : false,\n    \"pubsubTopic\" : \"ec2vxdgzv7wis8ru1fea09jchdwsg44b2rofcv94v278q3s336ns40udrzjbwb2i3s\"\n  }, {\n    \"sendFullResource\" : true,\n    \"pubsubTopic\" : \"1fbx6p7juhgbzzxhtzgq6spt8c06vnbp1d8g870qk2dcrr2i9axz0a2vdbsh1fwhbjmw7dbbgcwvrnn6modbcu44yk612mvunpg1i8xagig0qe4sarumvgbxg9pkqo7zp2qnxi\"\n  }, {\n    \"sendFullResource\" : false,\n    \"pubsubTopic\" : \"cztrb5hfo727hg9h12iferxwmjoyyt9zagwhhp7spuywe5l98n\"\n  }, {\n    \"sendFullResource\" : true,\n    \"pubsubTopic\" : \"z9nsl7617t1v79su8tvqk\"\n  }, {\n    \"sendFullResource\" : true,\n    \"pubsubTopic\" : \"qvg5dc3p58uffwwkl1r8lz27qjhev1gwtss06evmnkvi6ftcs283ukdhgpn9nhsg557knjqjy0ssvpm9lfbatptx15w0zm478pyypddwul1dmetfk7ycbhkw\"\n  }, {\n    \"sendFullResource\" : true,\n    \"pubsubTopic\" : \"uheahagepg06dip4tsjopeseaowsd8qb542f12283egronpa3y0\"\n  }, {\n    \"sendFullResource\" : false,\n    \"pubsubTopic\" : \"qq4dl64rqs49ucoqsua8npiz41ebfxgefqaouvvxgp0lzzu2fsfqsl8u1bpw15x25jeegvdvv5j0myvjt57jsruk1ttufk7l0dsk4z9k\"\n  } ],\n  \"validationConfig\" : {\n    \"disableProfileValidation\" : true,\n    \"enabledImplementationGuides\" : [ \"8cu8pxzub23t9oohixsubucjtzazrrcjlckah7pxb5mcc1ljrhl214uz7z4xa9j2ji66xvy3sf7xwprj3qi203hqxgi3cll5q5nv9m868kzd11df2qeh5neaf6kxsy29mvc54vinuk1re4x9xq6n3rdpyt3cnph6sr7gnzj6mb1j\" ],\n    \"disableRequiredFieldValidation\" : false,\n    \"disableReferenceTypeValidation\" : true,\n    \"disableFhirpathValidation\" : false\n  },\n  \"searchConfig\" : {\n    \"searchParameters\" : [ {\n      \"canonicalUrl\" : \"https://web.example.mocklab.io/044347\",\n      \"parameter\" : \"qjr8mq8ucueo67xowogsfd0qsgewc7qw6srravkvkpk70m13poe8jf4x4ul1kw1tiscv7j1skn87cy77rx0jwb\"\n    }, {\n      \"canonicalUrl\" : \"https://web.example.mocklab.io/972920\",\n      \"parameter\" : \"b7kg5pn7r42\"\n    }, {\n      \"canonicalUrl\" : \"https://web.example.mocklab.io/525507\",\n      \"parameter\" : \"ukm7g3wdtfr0ll5ix5l7g7sbrnupj8mqzzmhqmjy07p1rjdy2qfkw0m3un2niv169mje2ed5xsm1ak49hfg9f8sqtkwnd61rvb651j5dns9yqedxvxmsl0jp7k1lx9mtqbz4yhan6beixnm9v\"\n    }, {\n      \"canonicalUrl\" : \"https://web.example.mocklab.io/283447\",\n      \"parameter\" : \"uvvj78vubd7dkiir24wlfitor66g5\"\n    }, {\n      \"canonicalUrl\" : \"https://web.example.mocklab.io/742401\",\n      \"parameter\" : \"5px76pss2wqvrwe6uaub1ngvvflzn6\"\n    }, {\n      \"canonicalUrl\" : \"https://web.example.mocklab.io/927346\",\n      \"parameter\" : \"tivq81ddctcemn13cz3g5ak4a59i1liy8f613ewrmxmn2vre79wydlbanmgncxp9kf2jb1ribgmlp7seysg2b26y6krmvy6zkej9w08p4u0r1e6c2e6ynvntio54pl2h1qcquph3dwoij202vur5v59l8hz5wyvph9ev\"\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbd1a6ea-2d78-4fcc-b43d-73835d8ef77d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.635301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.create",
          "schema" : {
            "description" : "Represents a FHIR store.",
            "properties" : {
              "complexDataTypeReferenceParsing" : {
                "description" : "Enable parsing of references within complex FHIR data types such as Extensions. If this value is set to ENABLED, then features like referential integrity and Bundle reference rewriting apply to all references. If this flag has not been specified the behavior of the FHIR store will not change, references in complex data types will not be parsed. New stores will have this value set to ENABLED after a notification period. Warning: turning on this flag causes processing existing resources to fail if they contain references to non-existent resources.",
                "enum" : [ "COMPLEX_DATA_TYPE_REFERENCE_PARSING_UNSPECIFIED", "DISABLED", "ENABLED" ],
                "type" : "string"
              },
              "defaultSearchHandlingStrict" : {
                "description" : "If true, overrides the default search behavior for this FHIR store to `handling=strict` which returns an error for unrecognized search parameters. If false, uses the FHIR specification default `handling=lenient` which ignores unrecognized search parameters. The handling can always be changed from the default on an individual API call by setting the HTTP header `Prefer: handling=strict` or `Prefer: handling=lenient`.",
                "type" : "boolean"
              },
              "disableReferentialIntegrity" : {
                "description" : "Immutable. Whether to disable referential integrity in this FHIR store. This field is immutable after FHIR store creation. The default value is false, meaning that the API enforces referential integrity and fails the requests that result in inconsistent state in the FHIR store. When this field is set to true, the API skips referential integrity checks. Consequently, operations that rely on references, such as GetPatientEverything, do not return all the results if broken references exist.",
                "type" : "boolean"
              },
              "disableResourceVersioning" : {
                "description" : "Immutable. Whether to disable resource versioning for this FHIR store. This field can not be changed after the creation of FHIR store. If set to false, which is the default behavior, all write operations cause historical versions to be recorded automatically. The historical versions can be fetched through the history APIs, but cannot be updated. If set to true, no historical versions are kept. The server sends errors for attempts to read the historical versions.",
                "type" : "boolean"
              },
              "enableUpdateCreate" : {
                "description" : "Whether this FHIR store has the [updateCreate capability](https://www.hl7.org/fhir/capabilitystatement-definitions.html#CapabilityStatement.rest.resource.updateCreate). This determines if the client can use an Update operation to create a new resource with a client-specified ID. If false, all IDs are server-assigned through the Create operation and attempts to update a non-existent resource return errors. It is strongly advised not to include or encode any sensitive data such as patient identifiers in client-specified resource IDs. Those IDs are part of the FHIR resource path recorded in Cloud audit logs and Pub/Sub notifications. Those IDs can also be contained in reference fields within other resources.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "User-supplied key-value pairs used to organize FHIR stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. Resource name of the FHIR store, of the form `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "notificationConfigs" : {
                "description" : "Specifies where and whether to send notifications upon changes to a Fhir store.",
                "items" : {
                  "$ref" : "#/components/schemas/FhirNotificationConfig"
                },
                "type" : "array"
              },
              "searchConfig" : {
                "$ref" : "#/components/schemas/SearchConfig"
              },
              "streamConfigs" : {
                "description" : "A list of streaming configs that configure the destinations of streaming export for every resource mutation in this FHIR store. Each store is allowed to have up to 10 streaming configs. After a new config is added, the next resource mutation is streamed to the new location in addition to the existing ones. When a location is removed from the list, the server stops streaming to that location. Before adding a new config, you must add the required [`bigquery.dataEditor`](https://cloud.google.com/bigquery/docs/access-control#bigquery.dataEditor) role to your project's **Cloud Healthcare Service Agent** [service account](https://cloud.google.com/iam/docs/service-accounts). Some lag (typically on the order of dozens of seconds) is expected before the results show up in the streaming destination.",
                "items" : {
                  "$ref" : "#/components/schemas/StreamConfig"
                },
                "type" : "array"
              },
              "validationConfig" : {
                "$ref" : "#/components/schemas/ValidationConfig"
              },
              "version" : {
                "description" : "Immutable. The FHIR specification version that this FHIR store supports natively. This field is immutable after store creation. Requests are rejected if they contain FHIR resources of a different version. Version is required for every FHIR store.",
                "enum" : [ "VERSION_UNSPECIFIED", "DSTU2", "STU3", "R4" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0308d99c-8166-4428-bf5e-c06f2acde22d",
    "name" : "Lists the FHIR stores in the given dataset.",
    "request" : {
      "urlPath" : "/v1beta1/gvnke5ybjpkza9we701ws4jkv6to87675swjeev7rgvv5mxr1eba0u0kwueicbwnzds83aqlixbomise5ofw4llst5vmsmmeqb5li11wun18ar53kfq3z5snxryk5uv2nmakbjxsozk01sca3pnz65m52lxfm08u014dh76l8kk7uchss2m4g3uy3y4s00dmf/fhirStores",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"fhirStores\" : [ {\n    \"disableReferentialIntegrity\" : false,\n    \"disableResourceVersioning\" : false,\n    \"enableUpdateCreate\" : true,\n    \"version\" : \"VERSION_UNSPECIFIED\",\n    \"labels\" : { },\n    \"defaultSearchHandlingStrict\" : true,\n    \"streamConfigs\" : [ {\n      \"resourceTypes\" : [ \"s1o0gothx8wfvjs442l5hvdkxov75pop2kn7foal2jreeqpe7zbwhtrlch98lknzbuxzl9ucobhfl6bhr66xj2mndjwi0nczr9xznfhql9fa4tg04osaeimyo3h3lemmiks8wqmfavjectxvejjofpmu1wirp1jv4w0ltav7\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/986742\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : true\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"4uz9ntknd2jshl9a4zhjsbgfk39z8uvsf6ausfz40axlwodi6n5m8fh7o3aq73dfnrs4xhwk3bf0ekc4ct295e9ssm9n5gyn7jkww9tmkeou47dyzl7fsrt0ztuz5hrofw0u6hcaz9t7insr1015vzsw23oleplu0dl5gaz7zmmu09lbxxwu32qk8w07yur9x\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"4hzdh3prurv0zg2dyzpibdbdh7jlpb4zf4hkituu5f9o063zkmz7q7yfs6q22n9nu958yh1b1z3mt559sqmuo0y5dfvm2j7croc41\", \"i4pvw3dyk9f5exo2lhr\", \"as6mgu2rlmwa0mr86zu97uxc0i8v0ik1b4jjdb7qgqnmmpptxxggg667r8m5gshimkqs3q4hhzc3p318kdplfchhj246vi52ixvi9hqtte0ppiirz0efpem8orb1t0cycvtaqykhbqrf\", \"834r45liynz6mi3lpf60vajlrew4vdwk6zkdjl6d5hn85hg95awuqq27wy70m2wxxfog3kcfls9zqvsx24pbn0tm41140\", \"2tm2124lk63sffomk1sjgch25v1wmel7esu4bqc1vtz6nv2s0hldzkzski69qs283b0nffh94shihow\", \"1nqu4taybo3nbqin4zszexge06ccx00ofpprko1lbpl6po85i1cpt1spl57axur9ugiyyz7lhnmjdnqxz68trkovd8s4534teod6xpn91bryzfveuzoednpulfteiy77j9v7ake8imm8v\", \"vdjc46ts5q0rr9lum7w8mgvmgyoq69esfz8w47okgz4d3jc14j0otprtkmdt8yticu4lcc3ue0bxw107izb82y9b0suo0l38n4kozb11ygk4imtzmbqehb69lz0fjh8k242kyssfcqk18r6n6vo85lk3yjaytz3gfty1l4nq042saj91dvi6n8s\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/270454\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : false\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"yifvjubdi8omzsw8jpzdcbgr3x36z1p067h7ffr3ycbeiq3mlyyj5ldeafwanbi6v9n393ac6gv84jz5npn7q8ovj0omk6eabvoxz2mx9z48xx4gxrin8s5xxp6j3v9h9elz345ykv55bf6bssthrts19lvbo3syihpqydlp51a9w1m7j3363rp2x\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"epdw7qbpmrs634gk7dqk2xagxvygogqvikz5dzxzawl9uyqzbs42u77zp16vql7quqga2v9rrpattw4myvifr5op53c1usvep88vocdlbj6y2oy0s9wl0f7c2zzym7szgmvsj8remi94qnch5svpoybon5sij\", \"8t3uoznz3isv1lgk5q7i7pnuce7jmwcb9epcja61xadvwmqdwl6rfo7od5mfje28zght4bpzjgd0yutucsxhbvy36gc5mtc70cbpw2htfpkcb27k3u8ojng01ci1zltl9e0g2f1u39mp4cp749btsnwv399f\", \"qh31bq\", \"yx78mbrcdt2jqnsekeshmzc4md3w4vuo0txy1bzj8ydskajof7sjyursw5oz5d656ksd0fuph1dqoi7hhsqgqo9d1pgtte44txyloke1gvueq45a69e7kpoeaanfyi204z0ghpb\", \"95dyjium1nwrf67owipei9qvhgbvl0hdfirovmlpaszu7rypno9ni9k51mqxbteq8s9d1ljg1\", \"vs922f97jxdg261jd8ukd2p1s61yfv2u1g5yrhc6fswp4rw00kykkp53lfta8oux56jf566gegqcwo231ke4a6qzm5x253v750yt1b32\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/860403\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : false\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"ygu72ad6356fbbyiosf1fywflcxaiiz5hbsfonwaoocs77df2bgd6fu1qubtuho10sqw499ige4edl95krp8tnqw1ixko01ttomyf0nheo9izu8gt8ci0fe1kj3jbfenwjahv16gvy45wy9fyyz\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"fxkg3503b4tjrmirblnrzq5a3rvymw81t8qaun7pczrsufod789tkjru9kzlojmawsrlq1lvdo123yzqdvadk7jabumb5az0jrgkrw8zwg5xetvbzehcf91bp5nom4c5jj9btrr61q5d7bloitt45myhapoww5oa8dxqouv7b8bbehc4g33ri5lf6\", \"66qjei5jdqi3r7226493v31rsl8y9iwpljxag4wn7kz6sxg3l3cgcs1lp5zj0gow5hwmajm5czxretltk888g9d7z4txe97746fv8ea0gvsmihyuzau32fi469zu42nf4e6pntwxrjg3jzqe17r5fskxu9vomil8mf1w74erdc9pmiiogdquefam35edmpt5\", \"aivsb66osu5uff4otdfnb8i5wv6kl0r2ia431odakz4hyzw4y460lr1hcchxne9ld2if0hs2gtpl0wkjo0cb7bmllz91unhgrca35mczsbg7xe6zwij1xy98al1dunlopuob57bo1dq2g5sett9mvym9g1q53x\", \"3hzd40ndfh6e6twcpkcnhzs1k7lecayv8vs86ydwcuj8paocf3jxj4tgsp24hm8znwb35qqckldqpacs5edpnsv42oj870flxzqto5ynv4ax8a4mn6ma66yv04se031rdcdjduxaub44t6h1ah6xptr4c9g7lstw0ju8yvk91078gqd1pdgay04f6\", \"lvbjqjfb6t2lbqkbppuso3m6e48q57m9ogd1vqa2p9djuxgcee45p1oahbublugwgssustx\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/222780\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : false\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"9m4o2fg4859dhpbls5p1t2kxqhtknrqqlzlh3kudhv6xzho3jwgkvcn0lm3x1ho0kwzan07g5yhht6ixcry36g3h58t5oejklfah30bjd1f9ox5olxa43exbkyqm62paivm7t1fx01icqgzeobq9oi8iv14k2dq2gyuwj9uz8u\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"p3rlaxwdy6kco1cmgjuw0huri3yb8tztkor3kuhhp48lts5gm7jtv54baomrc4f060r2d6drslx15g9xage5fv\", \"2c4pofxeq36usjkj4ivh6kcr3jbrmkqzslmds0c\", \"98skktamo7cx5cqj2j9ba8dppf20r1gw349twhwcilv5ndqti07ngkz7m7nbn4kana16a62g6pb3g0f4es3\", \"2byuvtcven4x04anyj7pty4jbe89xn9votnjyi8cpts9kj0b\", \"hwdv0nrl4jyf5v97fyvfayvn1311zqsbtei9b88q6n8pq6tpmb2ax2er0bozaxvc7m15a0y16u0loltavbmj5ybqmvnmc16uac\", \"3945e5dnbh5v7bva5rjz8ip7zst3ypcx2ez8wknpoy67tzub10suucvljqmq60kp0d3mktxbkuon9ngx9poe8q1lglfgvpmhkmsp5eqi0dc7zvf3iz6vhl5a3mj5f0ncm9lau1qcvoapfeyzbljmo5va0srws1tafvjfxf92\", \"f3hbu4hd0zyajao9lb0d9zw2wflgir947jh2vq0suracck7oxn65xoqbs0qc\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/905329\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_EMPTY\",\n        \"force\" : true\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"9p4cuz4c1pmybqwm3zi5c3ijg6ewp2jjlx97po442pmqf175jfx6wsyp64s4a7sbnfryamdyyzsnugtw0zngcch8tfrjwb1p3a29p0zelnop5hy6gyk8khkipqm9x9i4dyns8howfmjwsruilpdqd\",\n        \"config\" : { }\n      }\n    } ],\n    \"complexDataTypeReferenceParsing\" : \"ENABLED\",\n    \"name\" : \"Freeman Hammes\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : true,\n      \"pubsubTopic\" : \"608bn4rkxlwhlirq4thhvc3t5i4lbyi9n0lo9tc0budfjq7vn5utwoknsmovnask5\"\n    },\n    \"notificationConfigs\" : [ {\n      \"sendFullResource\" : false,\n      \"pubsubTopic\" : \"2hjd31\"\n    }, {\n      \"sendFullResource\" : false,\n      \"pubsubTopic\" : \"5jwupnm2a7p829wtl60ietlu3q6gocl9xaiyrdmnqzvaspn78ejemvnvgv777ocfdphuqji957kf99rfxvs0aeijrv9ezyj2ca2fjp2gdnk4pzhpne2h1fwux08z08s86z\"\n    }, {\n      \"sendFullResource\" : false,\n      \"pubsubTopic\" : \"be8z\"\n    }, {\n      \"sendFullResource\" : true,\n      \"pubsubTopic\" : \"i62tz144dc1bn736csixmkvhnah82xub2a7447uwq4krtc0rfoac6f6dyedpm7ys7q3s8otdt0bxvl36\"\n    }, {\n      \"sendFullResource\" : true,\n      \"pubsubTopic\" : \"2glo3txk37scb1t2j3o4xfjdf5u5u0jgvkc1ui8wjyp5p9mbqtu2la91a7zl0lgnqredkv2hi16llv079iwoto1wq6q749sryc6fjq0f32jtl3vo84wvxse2evyedtevtbqshp21gzgs4k6z7t9yxz17wptm74ja9sdja4rpbrxzn3egyz3e2wtuy4hgz0na7k7\"\n    } ],\n    \"validationConfig\" : {\n      \"disableProfileValidation\" : false,\n      \"enabledImplementationGuides\" : [ \"a1ojnoivi1xg3h1d4jxivie4h1l3et46rl0870h8hhbs63k8bxelvgsptw5cwp2p63i1bx\", \"hs3dtxph9acjeanz0inkvego6ro6djx1ql8bk40ghfqm7wbxip3oo89i63fg6kmcibbn1eh3tezju8pi97bzpu2cri0hglzfli6vy5n5xcd2bvulkdlls4b5tbfnl\", \"09105oiqoq\", \"ys4vr979vusb0wvtwcefbekdbg7sdew7h\", \"pe558l64flfpq3xor0bl9vbckwbesv6x7165fknaw2uasv030vzazcwfb2jx7qs7t56h4tl42mg8paew4rglhh4s5lsesq2vfgkfc4k\", \"ehlhs6mgf10bmt8fhpveul1jmtz76eg9b4m7at1uuofnnkqwjhmzl436fn71eaaxkmk1coojh3i4ibd1c9vfrpb6beya9mgjpmxrjgfqz062f8yloyexw8uuiikrpt1annqijsu4u8iajuwl2tj1parj6bpq9bhnafrg5x25u7cmg27oelxbca6kk1kxcts\", \"n01k81zazzvcvtaev93wuxgrgdik3gbosdb749bweedufa82tahiqb0i54pirheczkhgxtk610tmgkhzsz1bkufkj77yiqd7ms83x968g5uydsc68c31j410cexaf1xy4yfnt9xrsxqgsosqdgsilwmn8vi70ss9etvysqla432xf6nk88o78ay0t439b9nybzbb\" ],\n      \"disableRequiredFieldValidation\" : false,\n      \"disableReferenceTypeValidation\" : true,\n      \"disableFhirpathValidation\" : false\n    },\n    \"searchConfig\" : {\n      \"searchParameters\" : [ {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/069284\",\n        \"parameter\" : \"km0rp3ksfc3hvyre0e38fsc06b0txord9iy5en8mfoj5jqvo3lcvj\"\n      }, {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/431819\",\n        \"parameter\" : \"yam9pf5x31p3lbwfk6vc91veiusw7p8w3mu3ux9dcbb3tcf2p9angmfaukzwhy83vf2582779ifgbrslzd8p5k\"\n      }, {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/159616\",\n        \"parameter\" : \"7nle339ejg8vkm7h8lkhqoeozaheabls6ro1xos2trcdomdhkf1pi7wu21jndv4o78qbk1qs37vql5o7tk6ywz88woqaegkxlecwfiof21f47mrkrz8c8p0ut6qze4vbddno961ohlqqj7jsri7ze8b4491nynkui5ef0hdr9jh8fkj6dkabnge\"\n      }, {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/915897\",\n        \"parameter\" : \"rbiu4awg5gt5egu34mrbz6dvn66hn21a7ispb3gcuw8d1x3qt5w3x8bub3vhbsqoe36qpzqqnkgjfhjckdfmrjy47iyetspntbvpt6e6xv0sli62segmm7pj469kfeqknxklbd1hnxm32ewf6jvx\"\n      } ]\n    }\n  }, {\n    \"disableReferentialIntegrity\" : true,\n    \"disableResourceVersioning\" : true,\n    \"enableUpdateCreate\" : true,\n    \"version\" : \"STU3\",\n    \"labels\" : { },\n    \"defaultSearchHandlingStrict\" : false,\n    \"streamConfigs\" : [ {\n      \"resourceTypes\" : [ \"4yjr8h6fpv9hpo4zepg335x73yy18txrtr6adyn0ete49w7mtn6o8ddtv92xpary6d\", \"8num0wjz8dqnuobwhr9dyw4ckb5pc392332l1n2skk9lspql5rak7g54h0bpikyx5sy8b0ikwc3gqe3v35mw7w9xhkxheu46kdr7esjz5talyjexnaq34ht6cb6je6axmmu\", \"a8fo6l761d1n4c12aw1f46mjl60oay5dnlvtwqduqxbuyox9omzp2pqnwypvgjno2x09icr4r1zy4veomtvh944ggw00bh8wg9197tugf9r6i1dp96ia9mtoi0v8tstc57y5nyhe0u1\", \"wlhh6fi4r47cqk4hwjcqro6mo7pr4lzowyczxyvwr9ft3kfg4uwqejjqhhzipwui0koru7aeu0c2p0ogq33jxvfp6mxu3ui7iac2lj1sy0yb7w334nlhs4a8f25khp50po03ge809m2nzzk0p\", \"4dw4h567bke57mepjgdxqpc5na0rn8keweil16qksyamwf6g00srvl4puknpwl6srincly28s8mfitvqgp4lvr3yzrw5dlso3uqay2cfra57mj20hs3s2mp0uge2d3phu8juzq7ppf3iomja2vsr\", \"dtxkie7vngudefskwc3phi4i07eugwnmz4tnk5v8gc77q58c7ohpgzws3o5ba9nzc3dlmt7y2nsd67gvznjaqx1rgh53ft8hwvfmc\", \"jzqpetvsecddjctx94efcjzjzty2kbkldkijotalxjo1e08tostu1b5tyiv\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/671855\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_EMPTY\",\n        \"force\" : true\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"xja6mgz3tcyzx2el90mueltm9ptfr1s27ahl69gj9baievc68ddvz8netgjmos66kquytl5r9y5l8xfvaeheg6sysrrbb9wlmkxb9zv2jf2w49sp921my5f9m3wh7mdv34b\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"pj2zdq1yrceux9i0v3yq2qckpjdc31elcgwmx1b9z396k0\", \"5p7dj91l6pc4114cjn8m74vil3f2q33sr8119mptnsx0twbsq80yrizn3pqjmv49wr5licf82du7p1r7375172yowaucjeaiqf0suz1oj8nk14ecjwjv7591c3862a3ttvtst3sz8crgdcbpdsldxjuak74db11dofthvwlw35jm9j6x2mo\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/893151\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_APPEND\",\n        \"force\" : false\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"4e050jukkbfgcg4kugbkhgnox8kbdfrg0453bzeeandyyxkuu9h\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"3c79vmdlkp636slqwfd6uzydgmerq9cpzdhgn5jwlspbpz9lnpuh0i213jxjhwjge6jg5kpsagsp2ipxj4vejqwr8fozix5bghkkty3qv8\", \"kdqzyyzwbygthljaguwnu72do4i3m32kupjwjrd2h3xsxoeva5vf2i43ck8mcjk9a3exfg9hsk1h5ir644s27y7k0m0hzlqeaslm6ovkmkeulgsm8gxii3lnl2aqd5tef8vzlcyg6gm16ri4n\", \"g4aysoglm8nsdktb1lykvg7z5uj20kb34qaknsehysb5pzdkawg1uq8nsnzqv69grjfm31wpe4omglhi0nxkw9nxtua9mplv0hwbsi055zmb4f6kmasg1tawvm164brqzemk22k931npmpjswe62s5zyvrsmjengt91wc0vyx61wqmsxfqqx3mp5\", \"i6x70i7gpqesc04ynlvudonqn8cxz5ysil29dky2zeg2c5vjpkk45axj1u0c5nf4z7v8c0bypif28qu39laiwqfw5h3zon5avr4l53blcxr1b71zr1a7wylh01hvopowftwcku1d4g0r5nzqib48cjga2rujx99laylkynd1hm9w\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/027651\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_APPEND\",\n        \"force\" : true\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"h27v424jlvan5677y46260l3jyb9q72kecuiwk0ydaeigevhsbb7eq0me2kvfb4qn16fc6whst858y7obryakt1\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"k9q4osjwnkn9wg2kh7o1bboaar8q62k1k2ohkocbc1n4u9cws4y8xqdcf5278a8g21qr9efdbwwyqdg3ihtj10bz9v3za\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/134109\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_EMPTY\",\n        \"force\" : true\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"2hqs5tv9m4wo3nkj64pgbxzc80g5dh53zoskc9psqub2hwfd3655tsc84spdzv0ht\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"bf56699iq6jmnrzxamu4hj5a45fk8pe3jakpngvecfgnpb4\", \"gxdi8iclvzod0rs61iav03dbq5g9nz0s3xm5ax0vw7dusxloennh8nwhiupwys0dzx0wbkp7kdcco35lfsgtm2tbryflr8s3ezv6i3pc3t\", \"wmab4ggomyr9ypaq9rzzuil0m3cy2ws6jw9p6yb3220ejvznx49nyy2fd6bas16o5fzdxij8ygeiroj3y87i1vzmi1cyqv87qpkxe0sepes71g5lfnvkgr2ttdnd9y3xtf\", \"xshi30u6y5p194fslstu7y6yffy1cj47poqipaatfgt6sv68lwcmqwqp2qtqu3lgnq0pjbzz7abrg3g6a0ex639f5wjhojul7drcq5h7m735vjxc2j8574w2hj23lu70tpk79eytwdmcpd9t3lh\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/726107\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : true\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"rm15t4u8d832dopcfkw6v6sxkk12tuwioy1qq2l8u9pz8je52nl3dz3iv4pxazpyuz90f8p74xc287h5bvsa7vkkydcgrzy4keg9uqltsc45zpwizf13o54bkeqp0flw68j66t91delujklyiznmwhqi1dimdukt\",\n        \"config\" : { }\n      }\n    }, {\n      \"resourceTypes\" : [ \"ph82cj94n0zzzildaywq59q8f913qps36b5bc\", \"hrz21946wqw1q70f050b29pzo4hhs4qsdofuo4j7go8kkqsbcxwjk90wf9vvs0cxnznemi7hie5oe6dtc594c7n8d18xasrpqyua07dsyrmc5ei03ivs9d1qwm\", \"bfi1adgtpl4a143lg2ehldcd3bkzhwwnq2sxlorc1qde4vt5qtyg1e20nrijcydvfhbx4j1c\", \"wacveio5758u8ng7x9tzkjmrr52vvupy8zlga4\", \"n5o7q6yrhdgyf4y7drtdiwd7mhi0rnb58102jht0xp52mbdnh16xc37hsz71s7bnhbbf1ibkrvq9xdf85sd5bvl47myw8wp7wnev31rzvz8ki2pcc9dt0ussuwbcmefpsr010q156yybguidjqfmuxvd548ek57lq5eul467\", \"bfq4asj4a0wwghoypnh6el0zkoo\", \"d3nk96z6jgjunx5qfwgdpt9aty5t2dyts048pioodafz\", \"ybppfj2rceed7t42cxnxlqdf1ahc8uttkhrmx58z07z9yopihx5118jesdiaooyfhxiun4bt7tq5etn2zjy7h5g4t6fij1ryl19mote9uzhyx475eaw2gnzjwea84s8qcdr14warthqv9bd7arki7w8p4jwhrn361j6\" ],\n      \"bigqueryDestination\" : {\n        \"datasetUri\" : \"https://web.example.mocklab.io/407917\",\n        \"schemaConfig\" : { },\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : false\n      },\n      \"deidentifiedStoreDestination\" : {\n        \"store\" : \"5dl593wuloj6gen7s7rpnu6o5yuhcygqwnk8msq9b9dve4akigxefnv00sruyeq27py6djg74aa9fogl4kwsep1pbh12k4m7w7rte4w3j0nwbtfk9l3cebhlnhhpev8qiwaspw\",\n        \"config\" : { }\n      }\n    } ],\n    \"complexDataTypeReferenceParsing\" : \"COMPLEX_DATA_TYPE_REFERENCE_PARSING_UNSPECIFIED\",\n    \"name\" : \"Darci Cronin\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : false,\n      \"pubsubTopic\" : \"1n08l4wnzn4qyg3r7uv1n29s7yvzg44ijx1e4kc3rckpsp8i8jxj28oakdltfdt6lncmwdzf5iiegom746riby9yff2vwbd4u4r4s\"\n    },\n    \"notificationConfigs\" : [ {\n      \"sendFullResource\" : false,\n      \"pubsubTopic\" : \"a89e1bqzkjbhiexpdadahti6f7p3gqap9q4t3uz909bhwiyqfwbpr2ahioc6byryemyi3lnofb3du4oecau1fyrquv53c62mhn8hqxjopr6on8yb5c79eoyyjyg6uyo65jgf3yethj\"\n    }, {\n      \"sendFullResource\" : false,\n      \"pubsubTopic\" : \"q0fwq0gybwgeczte2rvkux7pnrlltmyy31crm4ak6oz4a3uw4sknfqfoduzr29b4zbyr3tk5o4wg66gkeccam7wrtm126on0pmtte7tsbf4ft72hyb71ucmvf9\"\n    }, {\n      \"sendFullResource\" : false,\n      \"pubsubTopic\" : \"i3hdigod6xk9q7v8otl29a5pt0nz1bgz9ckxpo4o5qwzukm7pnf1j5e7fyum2a90l1urud4rm4d030mj9v2zrtykzl0m8b00llvfy4cmbmu71i7165utxszj7z56dp3f1hgl05glm1f1ao8r14ofa0mjhzo3p7sic8k4uoj0xg8x3wyzzgjtqnv6v6kk5qwwoy\"\n    }, {\n      \"sendFullResource\" : true,\n      \"pubsubTopic\" : \"56xin9w4fztmy0rb5lcuux080k5q7nt932v6mycfguyw75vzxj0x26e5wb6qoio8y3m4aj6jfvblfviro4gaggd3bfrua8xemhzfsgn68u654q9k1sogacc8evy68x7o2c3nmg65ighzwykuxzgwv2c6sbtmz0v43wod70cwabnvimultxww7\"\n    }, {\n      \"sendFullResource\" : false,\n      \"pubsubTopic\" : \"rbt\"\n    }, {\n      \"sendFullResource\" : true,\n      \"pubsubTopic\" : \"0pbxoy360c36n6q1scja4yzcyepkloimsbw4177tdredthdido7np6fhlu047p5w0\"\n    }, {\n      \"sendFullResource\" : true,\n      \"pubsubTopic\" : \"tgoo2ul10kn2tcghn6\"\n    }, {\n      \"sendFullResource\" : true,\n      \"pubsubTopic\" : \"hc0hz16ucvq8l5wzbdvslvx1066gkl3oz6mg212069cdzh9hft\"\n    } ],\n    \"validationConfig\" : {\n      \"disableProfileValidation\" : false,\n      \"enabledImplementationGuides\" : [ \"o15u1g6dfz8heiuemxwkg3dcair99n9lq8r7z8vid91pn6sb3ol1g8lvs07wgtwufebqomho34ucr0qdhamne4vsj9ocihprqwxrkq634p5yjnbhid6p55wtn1e0qjc33d5\" ],\n      \"disableRequiredFieldValidation\" : false,\n      \"disableReferenceTypeValidation\" : true,\n      \"disableFhirpathValidation\" : false\n    },\n    \"searchConfig\" : {\n      \"searchParameters\" : [ {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/786393\",\n        \"parameter\" : \"j31i1k3tr7rj3klyjam7we50gqio1zy752a8xhy76iq7quihc433gjfh2qpijcffld2ov0sc4dag3ykn0fxhasz6dh4rex80nyj0d8zum47drxw82wdldxu\"\n      }, {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/597631\",\n        \"parameter\" : \"aaqf8v7zfy47s88fvmetvc374ut804lsvfvj1chru5c2ns4tk3toyi2gm4qb3pykhpyerzon0ln1i391sjplfzdj4mvdsiic8o0xwnjnwe9qbjk64tlrav9xf8mh1n13qv78u7iv3pez1epw0y8zvhgqbl6d5kbe9fc28h64px16k\"\n      }, {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/571071\",\n        \"parameter\" : \"m10ugovpc\"\n      }, {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/704059\",\n        \"parameter\" : \"2xoyy22ec4g0aq0fr8hycft15tpnw4d6wk4bjab56sm9ngj8eu0xp6hthy7xtw8oycmyy2n8q37db72rg2ecqjesq7pczugklpqqqd6zwgkk86x2xtxayu7pikwzab6fgs4vjgm677nxsuryggc416lbaewn8z1dhkwe1yyhtghgzyhzva6xz3fz5n6jvpmei\"\n      }, {\n        \"canonicalUrl\" : \"https://web.example.mocklab.io/904835\",\n        \"parameter\" : \"s2wkjh0a630jfqyz4x4xtwhpeb0yubu810dil0ji4t01qioivcyzb0hzq6kdzg3ecl4h15c3f91hbldnbi59dv\"\n      } ]\n    }\n  } ],\n  \"nextPageToken\" : \"yw03oyuaqjknfovsrnvw7lpxgxh53vlq0um69jpsaa9h7cvr1grojw3c2rusdkvn7eobxve1f4ezbzbznwzolil8kdhdp5i2cv1vdkhd84lotwy2wnichnn9jszv172zq5ytibzxie4grs0eolqu3xt8fz0jvf7eqkueage3fm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0308d99c-8166-4428-bf5e-c06f2acde22d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.632558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.list",
          "schema" : {
            "description" : "Lists the FHIR stores in the given dataset.",
            "properties" : {
              "fhirStores" : {
                "description" : "The returned FHIR stores. Won't be more FHIR stores than the value of page_size in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/FhirStore"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fff96b76-86be-40e7-b312-0499662b07b3",
    "name" : "Validates an input FHIR resource's conformance to its profiles and the profiles ...",
    "request" : {
      "urlPath" : "/v1beta1/ovt5z4dxc0i77jtri8ihhdcvv539nnp869cf1vm7byzecq8r181gvs4ohbiz29ndcg60aoz4r6c/fhir/xxlylahtwcynwv3bi09ljyfw9yvll8ncabi4zvirbdjnazwotub6rqk3yqmf160g0/$validate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { } ],\n  \"data\" : \"5ftnrsjv649lrjhjpxvwg15gmz0nvqgvfzykmc8zzhtnu0tct5x3exf0oxpjvn2xhkf2j9d02j8647wobcit44re0i1yh5z6g2ggsv0phc7be9zx3ek0ff7443ldkbqse9uu6vazar8t4xu8t7q2jt4o7osvla6thlo9c5fis0mwprlo1z2q\",\n  \"contentType\" : \"vw7k14geom9dzijyqjey6zlqyycqeah18o02zau7481vp4hmcm7lxpvbgi101i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fff96b76-86be-40e7-b312-0499662b07b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.62923Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.Resource-validate",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "20553be1-d0df-449c-a5cf-cac87c62a58e",
    "name" : "If a resource is found based on the search criteria specified in the query param...",
    "request" : {
      "urlPath" : "/v1beta1/dsysb9zqa7c39ogffw81fv2y6033evqftq2qofabam9953x5jqlbujeyik6w9u82yd8mbdozsqq2nm1j9nualkygi5ypsv7on51w228rbgp8wb46bj/fhir/4xpnaadsczvut84imcsfm6gf7pzisxsujzpbqp9wto2wirl29hryzw4rvtmzkwpo3",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { } ],\n  \"data\" : \"myzmrowoi3u5a6pq47b4t96labtlgxjfyc4co093ah4nmoyb3re530g1n4u2iziplk1hz6swi7i08i6sv0j6w7lpnvubquf1cbewckm4r0d0u4h8x2xnmkg1m3yizcqdasb4o0qdc\",\n  \"contentType\" : \"d8xmd29b66jzr2a06zbde7qcd15z687e4tj2cse069jh9z6vaf3a6fxpdbjow4zx6sf7jrxqajzmdszgbic7u7sl2iqln68xvlqogkw958b8zbor41u6guu09h0lpct4i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20553be1-d0df-449c-a5cf-cac87c62a58e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.629117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.conditionalUpdate",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65a05620-20ed-498e-b2c2-2ee7f844bed2",
    "name" : "Creates a FHIR resource. Implements the FHIR standard create interaction ([DSTU2...",
    "request" : {
      "urlPath" : "/v1beta1/73u0vmhqz4ucd0kalw7747c76cctqjiks37xidnroba2jmhw6feib4gfgwowpwpwmuizuwuzslve7lbnpqrj9vqod922v5ca8q6o4wp5xeo325fhjtnq3t6l3f77q6hyvo1iqpoy7qu5mqo7ojfz7h1rrlvn156n2g9sxtru7k9kk5asjyuz28mdkpy6klb56ycyi/fhir/v0hb7l2lvcaxfao6if6gyjsjsh2ato7tvail3j6ffav9urh8b9fp33pjp66io9tsm2cqo9k6vjcbtpswl3fex4cxtgm7dire0fn4hfjh4vcclxmdc1h314b68fyldtxctqm5paio169n65mcl6qsi6llg690w4z46jqvx83",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { } ],\n  \"data\" : \"6kltddfenn2mm7tck526s2rjmb37xlog9j4ag70o2ati85jjlgxs5jumj8iyetogxngjb4mafqd2t0zcxy6ntdcpl8cnwvwny3whhzhqe3\",\n  \"contentType\" : \"y0tia73t1d3czr8uzuaea9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65a05620-20ed-498e-b2c2-2ee7f844bed2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.629008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.create",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6e104882-092e-434b-8b8c-e28874e09a36",
    "name" : "If a resource is found based on the search criteria specified in the query param...",
    "request" : {
      "urlPath" : "/v1beta1/w7z3/fhir/6oxx72i5re51wifdrv7lzsn9pso3nxjwo7eabudtkm6kodlnwb2j3hh6ly6298655038p6x0t33hnsb6h9yll3glns8mcll2jgb6awtbguh",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { } ],\n  \"data\" : \"vsm4a1b2tlmqomu9kcx5j4ao8qpvnyp4vmlspcszrm69jwbzkx2fizwu15842vj54026xrnqt\",\n  \"contentType\" : \"3zxck1nk4ction33yrubksvml6ddesby6cp4x2y283wzika51jafz33riz8oz1b5q9e140wszcm7j5sj6vaipj4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e104882-092e-434b-8b8c-e28874e09a36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.6289Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.conditionalPatch",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09b37270-7d51-4995-a446-af87af54fd8d",
    "name" : "Deletes FHIR resources that match a search query. Implements the FHIR standard c...",
    "request" : {
      "urlPath" : "/v1beta1/24ewownd2ckypyrmbbn9krw1ioub92q2d1bvkab21b98jrrmoaoetvvhn48p0udg03mi0selg0pfx83mi82rk8ccqjk9mpnymlkwf2118wyu4lvgth1uhvqbvvmb8iblg1/fhir/tsqh1u4skz9n4g3wemta7d0ybxklxu3nn5sne6222dsi60pgaeg6yj2jo1t0nr9t3o6x0fd4qb8vwilxmbf810jbty6g2ogesjqddytqhc62pbbblkwu49rjbdicayeue5y68dyv3ai4hffdr3o4wdba5ijo64y4ep30kft8z7ozv0ukm6zkzdiy40zg4q1prp1sr",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09b37270-7d51-4995-a446-af87af54fd8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.628794Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.conditionalDelete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "095e7a92-571c-47c7-834f-d7ce86207366",
    "name" : "Searches for resources in the given FHIR store according to criteria specified a...",
    "request" : {
      "urlPath" : "/v1beta1/q93b5oyob3u36qunq51h4h/fhir/y4egikfmuz9nuta1ka38vob47x8j1q40n32bmo770jc6osbgn26ps8h5kda7dkrt0h0km1v8strkbuk8jnuvl40vogr8cnom97ajzhrds2zg8ruxiu74vwd46li93r8tisvrx2nqioazu7h7ujd0lco7shce28jnzw0hjlajh7i9muxbtgpt8cdfxzntwqldc0/_search",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { } ],\n  \"data\" : \"enndxxfgffce76yaid4of4ivj9xroicx7002j7ch24ypek5sher1h089726dxpdr7gm0ra45knbbl4cuwa6sdnb4el06wgwa3fsag\",\n  \"contentType\" : \"xfyoml6ihmnuff0i96ijkhr63p4c4j6oklkxhvvvdgks5hfku2pw15bh5gykgpzg7w1gsaf9b5s159p53l0nbvoranmbrijv9cw3e7aywnca5cndzvh6fdi6elrcytyo6l3o14gvq8z8m4a7w46b92moowu47ji1cn0x4oabpqz6hg2wewc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "095e7a92-571c-47c7-834f-d7ce86207366",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.628735Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.search-type",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "288d02ea-063e-4642-b7d8-3b0150560d4e",
    "name" : "Searches for resources in the given FHIR store according to criteria specified a...",
    "request" : {
      "urlPath" : "/v1beta1/octzps8l44a4s0upx8m7e95bolcm1qsl4j5lt6x5da997ddxbakjjmma089rnv3md42fiynoazu/fhir/_search",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { } ],\n  \"data\" : \"3pmeh8fc0kqrv9tb3reeqsrpjek3q2csb1v44poigdz4a3gdvzku9hg46oc79dcrwrz75cl2z5v361nuv05iyjn2lr42nezv\",\n  \"contentType\" : \"81xa27129h184h0ft2ooh9zauoj451kmjekpthisr72whsd7eed9u5wn07ypdc2b3mc9mch1ghkq6417uj5o8l1p5woe7f0fshpml1tesrwqtnzku0s3mzhtgr2jhfe2v33g6ba2a81pj1zxxbiu05wbjccctntn4ryfqucu2upit51r8nurxjvmubml1csnqrdo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "288d02ea-063e-4642-b7d8-3b0150560d4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.628622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.search",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f4c1166a-df36-489f-abba-3b5e2fedc9d9",
    "name" : "Retrieves the N most recent `Observation` resources for a subject matching searc...",
    "request" : {
      "urlPath" : "/v1beta1/v74tduelu1hkyzzwzrm2qft136ymtaw2xcrq5yynnbpq4g9ffr2inv4r03pba4uljzlf0w0as050qr5bsqu491/fhir/Observation/$lastn",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n  \"data\" : \"08ojzi6urff5o8g2sbkj6q4wboxnyu6rx45qe9tx0hyu\",\n  \"contentType\" : \"bqvyvbby00dn857sp77tnaechuhqph1t2239lmfe8b7t8rbhhvdig9btoxgua8wek7rpmm2g05fhvo7r37lu5slcfxeyd3uybmot108ee08xq37znt4vfikq1d3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4c1166a-df36-489f-abba-3b5e2fedc9d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.62852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.Observation-lastn",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "77e3db62-c15f-49e2-9bcd-0f7785ef0233",
    "name" : "Translates a code from one value set to another by searching for appropriate con...",
    "request" : {
      "urlPath" : "/v1beta1/ndzrlk21ugji8w620q5axcxiqq5g81h25qr419m1n4rwiktensebmx4jb2y4yo7mduxqj034rpyzefur4i9kaaxla4nsanxpeo7as7ym1961ugm5uqzzfqahpnf1ufnqdmiua1elmpgxcww0bus2cdejotc1owx/fhir/ConceptMap/$translate",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"data\" : \"9a5j6aqqalput17d9n28w03vqxo\",\n  \"contentType\" : \"3yf2w1obtp0gihauqo21yvchonx2zrqyffz8hkuimoh0dyioavpvwsk6j0gqdu8qw8zq2oqu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77e3db62-c15f-49e2-9bcd-0f7785ef0233",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.628406Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.ConceptMap-search-translate",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9cecd48f-c240-4f0d-ae1b-ed0fdf7d6aa5",
    "name" : "Executes all the requests in the given Bundle. Implements the FHIR standard batc...",
    "request" : {
      "urlPath" : "/v1beta1/f3zabcfpez4ewrlte7p5uawvq3ki73p9a1yktao3r4nbphzv2cw0skxdpprfls094rfgc6ryd4zt1u9zcfbwthvv0gzu66967j9gnq5rhkyumxhl1ppwwyx4yxyvofmjv5pe3ooxyv83hed6c535i6n8nsfiltp42ra0saatcec1yx71txlwbddc7soaii0ai2wo/fhir",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { } ],\n  \"data\" : \"hmk8pwtwzcogaagi1sy9kut68e0mbmqo2e7j543l162j457ypsebi5c302x66disj10mebqfn4qh5e44qmhpbqava42davs027a657k2mbp7ka1ndask\",\n  \"contentType\" : \"rpayzzv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cecd48f-c240-4f0d-ae1b-ed0fdf7d6aa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.628294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.executeBundle",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9e41c9d2-1543-44f5-9a21-3bc9813cc174",
    "name" : "StoreInstances stores DICOM instances associated with study instance unique iden...",
    "request" : {
      "urlPath" : "/v1beta1/udvvy9r6izp9lclbksb4pr5b1kncs6lp5p4japndlfqh490lv2ha87izlh5te9aqubtlcz31zp6hmn8oftwd2m5v22t8ikyktjgpccu9k3f8szdlufsslg1e4hb4yjghp96sv7k3bn3r5pesdm97xcjzuxf6ohdmcd3xfuep/dicomWeb/lhg7nw4lkb4payvlc3xlfla0zg37flm10b7jhq8nluboa4rx5dvbmoj55jlb12hf74e1fab9um",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { } ],\n  \"data\" : \"si901qfb3szg05b1j51b4pgv939s9uyz6fv76w\",\n  \"contentType\" : \"a2bl6blel3taokm76h57viaw7chcqkwffsc5m5hxj15k5x\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e41c9d2-1543-44f5-9a21-3bc9813cc174",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.628189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.dicomStores.studies.storeInstances",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bfd524c4-c26c-48d2-a14d-63917ea2aead",
    "name" : "RetrieveRenderedFrames returns instances associated with the given study, series...",
    "request" : {
      "urlPath" : "/v1beta1/7gbut1tdhi2ovv8tlh26p9ly9rc3mg0t4swhl0t1j/dicomWeb/qewy7pus0pe445jr71zfrpluoyzhy3bxd8b6top6yycpno5oy7emj24fixa04pmgmz3bknlsd1wwsjyu",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"data\" : \"nfxkmwkkw7zx59wn5h294wuipgkxqug6kcboropbinxblpafvi21a89bxfrzmvpkbdik4gnqy3j9201gs4ayfymqf3nnugyx7qv75idyl2fsggt746m1tcef09cik1v2x8ruu57q3dtosn3idahpax\",\n  \"contentType\" : \"pl1yt7umzihr7528n686mfeskbxqvl1fz7iwk2vokqmt8ucd3rk36v7s8wuv65z90hrhubp0lzt9irwl167lwq3hrcimoy9znp8mod8myf8csu973d3pv0tl7ee\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfd524c4-c26c-48d2-a14d-63917ea2aead",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.628077Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.dicomStores.studies.series.instances.frames.retrieveRendered",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "43af848f-e932-4e9e-99b9-930027ef289c",
    "name" : "DeleteInstance deletes an instance associated with the given study, series, and ...",
    "request" : {
      "urlPath" : "/v1beta1/a7n32vituho83461kr0pgtx1ybnvp6vm4i3mmhp98teq0y4xywknfmgsdbk7yepvc90pd2dpx3b2903otji9bsdhub07w03bvxb53jkgibxfmjcct21930oc4fxfhwr04aaykywnzwoy7199c29k54x4nnuvzm2pjs9471ghumn0043y0mvevis5oa9j3mpf/dicomWeb/dv92bysbbuwpfadgkm74ppcc1l80",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43af848f-e932-4e9e-99b9-930027ef289c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.627931Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.dicomStores.studies.series.instances.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3ccd0c1a-7fe8-4321-b919-c119c468615a",
    "name" : "Creates a new DICOM store within the parent dataset.",
    "request" : {
      "urlPath" : "/v1beta1/mbllw0dzuqdddxvb86gzq458j7fhc86cqy81vzk6hkik4cunr4yoqnwbbjd1qfo4ke3ncbsy68reuwsp8rhsyc76hq26qy22hewmlr6coogeoq4zj5hjks0pj9sio58wnjbngg05fes8bumvt9pam7x893s04bb8u3ulze0bvmgedwajlbm8lllrutletpqks8yh/dicomStores",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"streamConfigs\" : [ {\n    \"bigqueryDestination\" : {\n      \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n      \"force\" : true,\n      \"tableUri\" : \"https://web.example.mocklab.io/771878\"\n    }\n  }, {\n    \"bigqueryDestination\" : {\n      \"writeDisposition\" : \"WRITE_APPEND\",\n      \"force\" : false,\n      \"tableUri\" : \"https://web.example.mocklab.io/102046\"\n    }\n  }, {\n    \"bigqueryDestination\" : {\n      \"writeDisposition\" : \"WRITE_TRUNCATE\",\n      \"force\" : false,\n      \"tableUri\" : \"https://web.example.mocklab.io/927010\"\n    }\n  }, {\n    \"bigqueryDestination\" : {\n      \"writeDisposition\" : \"WRITE_EMPTY\",\n      \"force\" : false,\n      \"tableUri\" : \"https://web.example.mocklab.io/110513\"\n    }\n  }, {\n    \"bigqueryDestination\" : {\n      \"writeDisposition\" : \"WRITE_EMPTY\",\n      \"force\" : false,\n      \"tableUri\" : \"https://web.example.mocklab.io/406164\"\n    }\n  } ],\n  \"name\" : \"Will Konopelski PhD\",\n  \"notificationConfig\" : {\n    \"sendForBulkImport\" : true,\n    \"pubsubTopic\" : \"larpwnm26fvthcstvl4rdwxd0akf0iuxptoeiaa\"\n  },\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ccd0c1a-7fe8-4321-b919-c119c468615a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.627864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.dicomStores.create",
          "schema" : {
            "description" : "Represents a DICOM store.",
            "properties" : {
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "User-supplied key-value pairs used to organize DICOM stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the DICOM store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/dicomStores/{dicom_store_id}`.",
                "type" : "string"
              },
              "notificationConfig" : {
                "$ref" : "#/components/schemas/NotificationConfig"
              },
              "streamConfigs" : {
                "description" : "A list of streaming configs used to configure the destination of streaming exports for every DICOM instance insertion in this DICOM store. After a new config is added to `stream_configs`, DICOM instance insertions are streamed to the new destination. When a config is removed from `stream_configs`, the server stops streaming to that destination. Each config must contain a unique destination.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudHealthcareV1beta1DicomStreamConfig"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "25082313-00a1-481f-b7e0-21927f61bf08",
    "name" : "Lists the DICOM stores in the given dataset.",
    "request" : {
      "urlPath" : "/v1beta1/065sfymnv6xu4dmfukka4gnagoylhsdha2le1sxq4b9bprv8ptllieewypxqc0zbjrm4ljm713w526vwcxyeeylqh1siozmbta8ikag38u94y6dv3w3xussoufgoh5qjh7j36c1pvb1nqabl56y528bf3s818paknp8jarbs/dicomStores",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dicomStores\" : [ {\n    \"streamConfigs\" : [ {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_EMPTY\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/171714\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_EMPTY\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/707550\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_APPEND\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/348645\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/219289\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/341311\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/732087\"\n      }\n    } ],\n    \"name\" : \"Contessa Boehm\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : false,\n      \"pubsubTopic\" : \"t1a9a28gr5jkeh1a5ldg9lsa2zj17jc220uf1tcwsl3b7c3x5in\"\n    },\n    \"labels\" : { }\n  }, {\n    \"streamConfigs\" : [ {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/730831\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_EMPTY\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/159783\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_APPEND\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/488490\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_APPEND\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/795729\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/188913\"\n      }\n    } ],\n    \"name\" : \"Minnie Gulgowski\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : true,\n      \"pubsubTopic\" : \"om4eli9d84noodopmvkzrlab45sfz7m1q0n16aok5w3o1mge1xa73d962hzoc1iiorb0l094g1otxh45ffpij11omcntkvr36kfg3694f4yzl70ejf3fo8ehysp59y38llzbsfgqk1auog7sh2vutzoggo3hwx8drzkrvde4usfnvnf0h4ybbtvqmfs849nhyyq3xk\"\n    },\n    \"labels\" : { }\n  }, {\n    \"streamConfigs\" : [ {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/907497\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/717618\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_APPEND\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/075069\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/773468\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_EMPTY\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/684799\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/857103\"\n      }\n    } ],\n    \"name\" : \"Carey Renner\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : false,\n      \"pubsubTopic\" : \"cs48viv2frw3qyr1pv94bhdot5fyzq8nls2vg2upj0s47u2zkdq7vgqt9shj\"\n    },\n    \"labels\" : { }\n  }, {\n    \"streamConfigs\" : [ {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_APPEND\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/257468\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/898707\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/716500\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/202517\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_EMPTY\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/514763\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_APPEND\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/197575\"\n      }\n    } ],\n    \"name\" : \"Ulysses Willms\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : false,\n      \"pubsubTopic\" : \"jmvtgb0jgvkytiylq35rvc1i4vpqkwojion1zaakrw6pz9qt4m4oxczsvxbghy9kglg4t7y9nbkgxny23zi1t066ouyv56owpz41jfwfynp1at0iiuni1s16it9sq70\"\n    },\n    \"labels\" : { }\n  }, {\n    \"streamConfigs\" : [ {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/801716\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_DISPOSITION_UNSPECIFIED\",\n        \"force\" : true,\n        \"tableUri\" : \"https://web.example.mocklab.io/299017\"\n      }\n    }, {\n      \"bigqueryDestination\" : {\n        \"writeDisposition\" : \"WRITE_TRUNCATE\",\n        \"force\" : false,\n        \"tableUri\" : \"https://web.example.mocklab.io/133924\"\n      }\n    } ],\n    \"name\" : \"Marisha Schuppe\",\n    \"notificationConfig\" : {\n      \"sendForBulkImport\" : false,\n      \"pubsubTopic\" : \"qgcbduvnauxpdy7u4wihn6ukk74dpgkk1why4z6gmx6asrgf8vetngovcmicjbio30z91zoa3ddkilmu5wdcjk0q3j86ulw44zwht0nitd3zn0losxr6aqvz0j3sp2xjh9m9a8ia2qwov4d3gtueyq3z31atmy67t6muhspok2n7hlq01dwttzejti6i4olrxyffm4p\"\n    },\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"g5e4ii508t24n3zt2ai0yj737io9evc8gbr4uumxqr655m8k7so1nun2u28djixp5bgc540yytzcvhbos4od56qnpzyvebz2jvgo3vlggnfwpht2o4lmp70nrm2xsie2adykhwf74hc8r8d56q3uhirdynsehglatmdsuteuyq52upsyw4eos11ac\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25082313-00a1-481f-b7e0-21927f61bf08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.627208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.dicomStores.list",
          "schema" : {
            "description" : "Lists the DICOM stores in the given dataset.",
            "properties" : {
              "dicomStores" : {
                "description" : "The returned DICOM stores. Won't be more DICOM stores than the value of page_size in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/DicomStore"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7b1158c6-f567-443f-b770-9be298a17939",
    "name" : "Creates a new health dataset. Results are returned through the Operation interfa...",
    "request" : {
      "urlPath" : "/v1beta1/4imbesqmgwf2hk931y4ty1akkzp2f3ur5wb/datasets",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Luciana Fahey V\",\n  \"error\" : {\n    \"code\" : 1823789263,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Deleniti iusto mollitia. Aut consectetur quo. Eos ipsa occaecati qui. Itaque laudantium earum aut similique recusandae quo soluta.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b1158c6-f567-443f-b770-9be298a17939",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.624148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c0f5c388-9986-4a90-b145-4d44967e7bcf",
    "name" : "Lists the health datasets in the current project.",
    "request" : {
      "urlPath" : "/v1beta1/uvt5tbca85qi4dkaef5nkm01/datasets",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"4xagxhar9fn4ym6a47cdjknpeno4hchq6wh8cqvb4ccnlvtzvwuf9be05eje0s9c7wnps81nfn6sa3jiftpk1mcj9io3kg1y2ac7u9915pkjp1\",\n  \"datasets\" : [ {\n    \"name\" : \"Catrice Zboncak\",\n    \"timeZone\" : \"2023-02-09T16:37:31.623696Z\"\n  }, {\n    \"name\" : \"Adrien Hammes\",\n    \"timeZone\" : \"2022-06-22T18:45:31.623769Z\"\n  }, {\n    \"name\" : \"Gale Dicki\",\n    \"timeZone\" : \"2022-05-29T18:01:31.623834Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0f5c388-9986-4a90-b145-4d44967e7bcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.623906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.list",
          "schema" : {
            "description" : "Lists the available datasets.",
            "properties" : {
              "datasets" : {
                "description" : "The first page of datasets.",
                "items" : {
                  "$ref" : "#/components/schemas/Dataset"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5a744901-4698-47a6-8046-d33d95676a95",
    "name" : "Creates a new Consent in the parent consent store.",
    "request" : {
      "urlPath" : "/v1beta1/q6ycm8x3g0izx8a5ig4d8ao13hwvtldyn4k0jb0k4jh6rjgdv8ppbs759g29fpvjmmp1u5fncnkw16ucomss0kjiwff22sryf9qb4eqqnivfuha/consents",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"revisionId\" : \"4z99\",\n  \"metadata\" : { },\n  \"expireTime\" : \"2022-05-27T15:36:31.62057Z\",\n  \"name\" : \"Willia Leffler\",\n  \"policies\" : [ {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"gd29\",\n      \"values\" : [ \"hhofv8qpjqtkaphimuuxygwx15n4r3jx84ocd3veq4poiiqa6nijh48giwcrwsb6uxeo6mgwp808yvr9cvzaiea7suv9cz9bsmjrsjn8t9n83lkm07dbpdd9ukjcr8qle8\", \"vzj197iwgitduy8660cu629hou1fq1lfbihwscebfrpef8jnubtzc61p90y55nu53fmnh3brsno7gdnxj36\", \"imbuj8ggjug4j26d13tc6ig9h9k5hzpcb191biqiuvbrl6jogs2b634ps1shl7eyi6hhjnx6jjghgq9arieqb4idgaotocy1a1fnrmbo6qc07u77tnxo2665c4o1hn403adm2cyzjt2yvtzi29\", \"c6w43dgdasfnremg3foh2vbuax0ha4p2uhta18frm13nw4r6d81veprkymj9gtsjybg98j8w637lw650kjz1lthq2ssvea72ob17gp905k63px6h6bhcfzigo5ay7oqi1z5bwb3zbtchz0cydsjb3eqkbsmfchl9n\", \"b4coqa60bqht833yxigk6ie8sc17j41s2b9qej2osles5ijgdi28lq8orsnd3ckl0l6ghjke6h3bakd5m7q5qxt1gx9a2czqk\", \"iy22khndoqfr1rmr58mn4ptv2fvo4v51o62cvl76gorhgjszh817do58nexyjx2tvza46jlv35j6othb842kjy1p0ht41c4ev2l3pqdb8z1s9pqvrrt6nsq8q0lh64s292odcgrto87kftqvpp5cpe6g4gyja0135rjdq\" ]\n    }, {\n      \"attributeDefinitionId\" : \"x1l7\",\n      \"values\" : [ \"npuu1gnh\", \"bbjsg140vdcc5u7bn6ycbnf3v901uocl8x1c5bwxq1cizrl54aie715ak62kna08vtjqpel00cs0spk52vadz1odd4id6h6iob0i6pko66g11kb7jg4439tn7r3jmnn97owx6lk85bs2h6brcp\", \"d9xmfyme8fwjolgrr0df81dy7fel5wslvarccop1zjskxkuncobhqnocus3w0um2w91uboobjgy2u5tfq4qklhaau4u\", \"z6uq5gkauffgqyddu3278w0tyo3icz4or6ghc0z7rau22qa21cz1ompevcbg2kua2lg3h1ermtwkofdbhy70q1d5qjc34l377vvr2g35l0d1n8iotw1e7u0sy8mzesx1jjk1vb1b\", \"o5ouid3si4darr64z6tzw85vxq8atyvig09q9kmxjgwhhexcmtli1lv22h2q9xpqltss59fge3q3c7jy4eo146ktgl1\" ]\n    }, {\n      \"attributeDefinitionId\" : \"9xtq\",\n      \"values\" : [ \"77tbsg07q4d2s4opihj863pkgpljt7vrmo79a7dmn8ah3n\", \"ej4u9ow2t09qpjbwkl0ik0bxd1zy3pmg8405it1l50yxe6elpckftyx1aozye236h1h5fybdo\" ]\n    }, {\n      \"attributeDefinitionId\" : \"1a70\",\n      \"values\" : [ \"w0hommxlpxajo1s1z1fq2ly5quru3ts74gzhrghway6ydhar7i67cgwxc7sx4cw8uq7bv0z2q3oglj6pffnryizeu1s7jvhgdjny09bzw\", \"8ru6xf5ua84qb9o6yd2ju8nttg9tuv6vtyuk93m317c10epjy11yru7nersc4lc2970ookeauakggdviu0sd8b\", \"md4e4d5\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"llblxpj2ayfhmg92bh3wncjont6bimdtrkci96bvsnym84hck5lvp1jc69ynyujmw7ex25v3l2dixti1atn63\",\n      \"description\" : \"Ex magni dolor voluptas consectetur eos animi vitae. Quis voluptate cumque laudantium ducimus ea inventore fuga. Enim earum ad.\",\n      \"location\" : \"0qy89qbsokeo27x647uio8pzqsiim71djdwfbrb38qry19pad10\",\n      \"title\" : \"Ea sed dolore.\"\n    }\n  }, {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"98iw\",\n      \"values\" : [ \"4cbngbtlc8mxwy6v3gjif6dkdsq6a2rkdifpqjk0an1dh83r5c5o12zs6e1s5glqka75n4ai4hhaqooke887c\" ]\n    }, {\n      \"attributeDefinitionId\" : \"05o1\",\n      \"values\" : [ \"st0j926s56h3stqw6ubv10t2zesbte7zqjwrlgrtnlnvdyl2t7qafujgz50nibqcruyi1zcx3d0v35d3oc8fqj04obglqt8whlyat35263tome64qv22wcnbuyli52yw9d7ddx3zfb\", \"gmfxjowdtstg\", \"f7h1g5hq8mkn8vqu5jzb5i2o5bv6eq4\", \"dct6wlp9hdp23i9yn2g6obhlhe7uk2xfxvhkfs7sctifvps5f73638pf0z8cclr0d80v7z6q0vc2td17hxj8dzop38nld8oxmjv516136huu1rjpyue8eocclvehhhstkw1c3mh611qbrquj1fmbvn04yang2fnq2j0fyix32km93rn5rs0kixx1o2riukmlknyiuj\", \"vvpghbb80hvv5v5oh80pghwlycallfp1r2hu4yj1xil3tsk1lyof03b44sy1gf9rv3ytmcy7ma44hpbaja7zc13a5wqll43uzwc02rsy8vtz0n52bmkam24ne0wz4uj0wr9jxvxasvrf3x0bxhvvs6pm6ofuccaq8fkb3t8ipc6cid7r1a1u7zgdl\" ]\n    }, {\n      \"attributeDefinitionId\" : \"v9u7\",\n      \"values\" : [ \"gynehigio6xhaq6c7q341xk065e39yyzad9avdenosfdnz2xp8ku1056iij71v6ntw9aa96z6k4673al33t1trqob16ppgnda6rdcoat6wx7lf2d3dei0axnszibjiyb7rpwvlsh99p2ehe4nowgk6o2203nxiwgal8wwge4mul5izdia5udvd5pnr\", \"g8jipn0cenopwgle4ahquh0c6iq5ny5cdpwwzf6qwz2v2k5lwpn22cnzgvxo8beblz2bt176fs2fqbnka1nw7by6lubm0ib3p8t277dtvv01r2ovh\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"ohqlm6d2vfjcb5cifnfzh9tdrb7cuh5v7snez2fxtjuhqlx11hwx9gpq6u658qgrkbphv9y6c9q2k8v29zfbkg8juos33t3idvzvbsq4uo8vtv4atywhbi5rid6zfxyqcv9o99yfdhjf4imn3o8hegiuayr5z4t6wwbnt5orby3fu9und\",\n      \"description\" : \"Ut hic facere autem laudantium quis. Nesciunt quaerat aliquid dignissimos totam. Illum asperiores at consequuntur iste velit.\",\n      \"location\" : \"lbrhcnlv9aretpqd83ps2jmln5uwr1o8xv393jlfty5z8up5isxn2rsu9oo28d1rmbk7n9hcn20v87h7unrh1jjorykddm91ze36rdi057re26i6lvli701srbnh1g8y0su3rel1pcaolg3qd81wzsoy7e\",\n      \"title\" : \"Recusandae ipsa a.\"\n    }\n  }, {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"k945\",\n      \"values\" : [ \"3h5b770c3xmrq7ug3ahbn\", \"jrsrg4w0hnx0xyp4hqyqpjvjhb9m0d7b6ibnlqy9vpwyjqe7h6ljz24jnre576\", \"f4yxabg69b9wbliisj8vn4n0tivdq7b30ab8ymxr9t833brfte90jehnkasrweruz4s86h99hx5x8vmyjo0hav495u1h178m0muqjsww7dy\", \"v5pu3wupwb4uc1ma6cw02polwdhdj7ach7sbjnb3ndyxi2jftu1mv5uqc9pr62h6x300\" ]\n    }, {\n      \"attributeDefinitionId\" : \"12g4\",\n      \"values\" : [ \"dctpper7wseujq7tii1zvg285oynkdevpm027oj0g798rap5cmqwrfilphyqgenjltulpcrm5rb5v4h7r05hjcte8dsipizdxvu5dfpus0hkww3dq44qsjyvj8bqtegr2i1z04o1kjves1w1mewub27kpv4iyy5fndbme6kd9nca8oudd78lanopfp7ziqmfppjf\", \"pvp83nqlyibrztmascb93hy8gxgpc6ufec83cd90bigu8nk3772jmozfvp2t48bfcip1j76xen4i16t8uxxnip97cqcda49plyusdp08pvt6xqhv5rah74iuu3qn1kzzrvx6h65xjqd7wywyc84o8tm2x88oavj3k1mf0070o7b1sgxgf18t2kr2cqjs5kfcatnx\", \"hfla2a31umowv1brrigfov4mzgub3vezphnbnzx2uqukhx45381jtraz1142vvg5717gwv7j92ag9dlv0zgp0vkl982kvg890jus6tck30\", \"y22w5g2gmzppdy7q87yemi1l\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"pyjjmjycv4es\",\n      \"description\" : \"Sit in quisquam. Vitae quo quae esse. Soluta corrupti quaerat omnis perferendis. Maiores dolorum quas.\",\n      \"location\" : \"h0mg2l8dtnkkk5s6jf3uufrns58eavbj7b4pq38mxa6aupl71d7tgkpsw78mzmcljsgrnnhkd4gtdnj6c9o7d430p5dv5udrfi3l9\",\n      \"title\" : \"Qui ullam dolor atque rem deserunt assumenda sit.\"\n    }\n  }, {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"ui05\",\n      \"values\" : [ \"zwtlom1ade2u8g4l3w0ymgxwbn2hf7u4i6kh8gvfyqni0yjblk6ml1sn47exvhaf45q3uf81j4jy45p8jbgfpsk9dfu5g8rxjw1cktjsrfl5caieenxw1aodlurnkdm8uuqetxx3z6yfkznd90713\", \"7nypzx2dhpfmkpmx9gkf5nvrni82rqzc0ln5xuwg0ebjnwgnrenojg5\", \"hbp2dz26lk3vze1lcfr1hbf190fg8kff9r70doe5rf7hnltovpqkm9xdj481bdhkrx1ws24p6a86023oqwg7502a4ue3ke01t4kfwciulniaiwk1nxp\", \"dyis7mxpyx0iqmx5xjyj0umjor587p4ml7jaenosn1le2zi3eiwphh6ww9bjx0420sozy0e8xf79hhuah6dbtuqzfzeoav1d3dp0gv53yiatjl5uo9mv2yao00ocl9vb4esck9uyvxlu7q\", \"42hgwx17rmaaojisfo1x8bwf6ezy0vip4j9xz0aop0sedy2osswnjgapcwkck9qircykvkbcus9a48342fkl6cqwrbl284d9cdghl1zi8lbo5g0btsam4jkqwlid4ua6l8fl5zfidt0ipvayc1vcaqgm3mvu\", \"l21anqlac8tynf8s8slwlck9kxwzjb3shbjc96qfhlu7i6mkqn1zbfkuiwkagcsw6t468ojtd4xo93qggxwcr47ip\", \"50vvyn4y618n3jlklzz2ugxeravas5\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"rklfaczrxb71fb53hefr62jak0yvc8hvt700utpcylrd8of3hj1byykswu9b2eqnsfe7ypx4xaaok9ph4b72k4h7r5xxcj1vssy7wd08uoc4ajmr2661yrzd3lmii3lx92ktv1aphx\",\n      \"description\" : \"Suscipit atque quod praesentium mollitia velit suscipit fugit. Quisquam nulla consectetur quia voluptas eum. Perspiciatis cumque sit non.\",\n      \"location\" : \"0ft9sgsswik57yy2b93bwwm2y\",\n      \"title\" : \"Repudiandae qui molestiae quidem voluptatem est.\"\n    }\n  }, {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"l651\",\n      \"values\" : [ \"sj0t6ak540z1e40dzligz5bwiajbsscq2a8y03cipdscho7wx\", \"lvb9ydqh6gqqa2t1bts523s9czw09fo\", \"gk9f2\" ]\n    }, {\n      \"attributeDefinitionId\" : \"g0if\",\n      \"values\" : [ \"ydgfv77r041gqmncelxzjywvtk8kc5i9qxhfaqf2i93ys91r99xrjc\", \"bopou1hm9j4nydx7n2ce5c3n1vscjsq1n4uh0qvncg1xpkb7q0kqrxkjwi5oh656i672w4pu7xobhqnmykn8fx8vgraqowr4rosy0vzf6jgqyq4ceowz4lvezy\", \"5yofyc2r5uu3u67gku3aof1baw2ocg81f6f2bpgd7alpnlkwo27oi8h0gf39oom95dx5f0fi6caig3vk1ck0l2wadqawmhj3z11id5n7majw0pcqkjp0kn1i1yxh9b4g8b\", \"5t7she5u496pxna6e107ciux1d84ajafj9974r8iek440d5ywhk0xfreygrfhhudfac1ctshz05h4d2gar30pj6dojbqjs87k2taws8trtdq93cbvoj526ov79o3om74z\", \"h61iozso7chnxl2vw6tbweya1o29jh0k65uknhroz64yif2pu9ztmr4biuje2v58npd6yjlk4xtorbm8w2kg1zku6rx2bttaxkxn3kzqco054zarkwnbugpm5eajlpsj0eh2b\", \"ewej53pc2yw46p\", \"ubdoe26s58qhjn1b10mnjck8x5eegc1phnfol0z9kssugstzl17sbf66ws1cxdry7zhmnoqx0vm2pamfnppk0w6geufqzi5xu8dd08t65ic5ideh8go7uc12z7ahrmwx29zm0l1mnrddur8bbo86piowccihpum12e0k36v0wti9bqs4krk9t0ays0phtah\" ]\n    }, {\n      \"attributeDefinitionId\" : \"4i0m\",\n      \"values\" : [ \"99xt8it1oe9wv35u8tumlt86cdp53yumx0o4azipr31589cbflz7n8cu5jbzazrlpt0boufwb3kqh2lgpkt1x8zphalweu421sz17v8ismbba6ze0ce7bkxc0alevx\", \"s9ml1tkb98ml27gtzgwzuh81ife4crixqljfuusst4uvt90a2tcepi9139h270rr76ew6zakka9u7lvvlkra7hpploc7drh7ml2451auy6mmphlilr14ntplkegys1b3ah0d2yzeroleme95c5b8y05mnqog9nax16u\", \"g9bmnj54gtgpe\" ]\n    }, {\n      \"attributeDefinitionId\" : \"3l22\",\n      \"values\" : [ \"9uzeeomz5m37wbso9bq4xewkziowcf1ksj8hzn22pp5er6bf6soo39y82kwrpyz790ggzgxog2gj7u0u4b3jqyhijtij4jngoenomxhqesj\", \"git0q7jt7n0fld7c9ne203mn0duna12lg8nu136p02zsbkqc0wljmqrmncob1u1h\", \"9bajp03ptjn97mf2turbjeph2izi3s9\", \"t57eo7693vmyaem2y7ickga9c4amg5rznkw968bvu0v34108nf9zm\", \"j0bf65b1v5d1cb8iyr11oitbhcxsh68s4o6b05ihd68lfce1el1gbndnrxbtxbapllly07mncwdls9duqi8nxgnr9qwndqvfwuc3ddr\", \"8kljp1s5ykivryvmkcemw0jww3o5t2px7mv8kjqj54ryrop1sy41lacug200nvagwhp5wqiina4ip1r0zqidm4lh9fyui5ufyvkymsitvc0fihxe9rkwynssq7hbyknteobeuo5ixb31e1z7rejsm9wg7h6\", \"oy3asx5294k4mhdc3a1gv6q5klnwqb8adots1bjl0t95vpabffsrzqt\", \"5izlueat68waauucx9l5jk4noazc2k2xaggrd2mfk6kunbaa68dhj084urirwfu7wofhneb703m5b9gfzin2jp0hewhcz90kk2zufavms63uyo2v8f1sot06nadcw26xf54femc23j6ntgm7147t6637cswb2i9b\" ]\n    }, {\n      \"attributeDefinitionId\" : \"arcl\",\n      \"values\" : [ \"1crp1q0gctqssrafpfu4b4l948va20rocdbsk9ks2gw0ru0ns2khqq2dvu1ws3k8n47kwv3ps2vy126hpy\", \"rl3ww7j32vp1hmys0wocmlvgqsflyb708y744jbe83ltpeua0hgw71r1itq5149hzlusdwlq62h6c9w6oyqm6pni0ar5xfwmd5fegjrg8b49poo9ty0k4ciq78ec0abvhr4c39gjqn3\", \"fx4p2ehneon24q1t7r236cdvtg148v8gi88bkulj6ee253usw3fsxulmoa1r9iupf7ecdobq954o5cu359oz41ei7ebssx625tv6jok3i8mu3g31hsp7j0wii9mtrvkdsz2bryg79osec73yturapj7yqjj03h8qc0g4tnnlygpmctkf7sevg2sru3au\", \"3gwotxm6tipelq96rlknrxmcf3cbqj10usarbgj1415zg23njclfsdnsrr0sgdace07mvlfndk94uo4blqmdwg40v\", \"peh749plrkidoeg7rkn9z1r47idvxt5blcgwtu4emn7\" ]\n    }, {\n      \"attributeDefinitionId\" : \"4177\",\n      \"values\" : [ \"xdaa61iijlvx87jepmuvr\", \"krf45smvzceu1b7ki3xr9mj7rmw1ow1wm169bpbfd2f91dxdel4nsldml5fwz5bclgplc7vaq3lwe63hduwbto43ss4gealex53fasxkg9cjrm0y3resk3zk83x2flpu77qwzqmp6iv5ac8ap7dutyxew7c5okqk2q3\", \"ra51r9bmtuwjtytvh3dcr9jvi9rcw8v4ziyk9zkbrgdvph8xgm8zujyg0n6zuh1kygsdbyqcx4oraw5sxcyyrz0fbyh4zpigxvqbcw163ro9glk5n1q9u95sx509j8zrvg9k631oikdq7v5nqjtg3d9k1u9b\", \"c6tp7g69jpezfrg0596\", \"dg71aczmh6i6sah24j2buxarldcf3ok8j4engg0gzb8ump7mtijxv0rj30sqmwpkgoxqivurexmhefpmwbhmz\", \"a1zn4mcgtjx57g9rw9qsgviptvghdwg671rff9kc8itps0egvbhuwexwikxsehulndhpas0rrq3snzjksvn1co34o1qo4nfj9yo9wi00n4\", \"eycbxku88s6qr1nv5yz8pj35kiup8cfes0adfe20zec86yhm3un97in6swyg00p0banmig3y4t0h3y4b004apjiej1uxsqrxzhylblhpbat2f7aus84oi4btfepsc29f8w8z107twkjz9z9vg623q2o3fzw0ekupvf3k5meqjgn8mjerub\", \"g2fkgrr0wrwu3rlcioeg2aps2saiz001t4uwj5bv04rdafmmk265nv0y11klvo\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"5h5ltkf6wv1cli3urdrd51cna485ypojnbmouc9yfp8skxabursqu6ui697eskbogej5zsb0le5bz9zh69jo46yz\",\n      \"description\" : \"Vitae perspiciatis ratione aspernatur beatae molestias quidem quam. Ratione aperiam illo nemo ut quas et. Nulla possimus nihil provident. Delectus est vel expedita temporibus enim sed laudantium. Tene\",\n      \"location\" : \"bd8ubfwok99e2kktthjvkp87xsc8q04lvppvcj3i6kk54d5fij392zcqhwzuihumffl5wooysiqzqreppq4hpws5q9qg12helk0sfmc5y7z65fu4d2xbu0x1ibbd\",\n      \"title\" : \"Molestias expedita quas occaecati ut quaerat.\"\n    }\n  } ],\n  \"consentArtifact\" : \"nj8prdism3jzdl2nkt78q5dw0fan78uf3xlrb2asayv3r0nceo454di8pvwmlaqf8xzzrl9wh7rnu57d82vargbhfy87ic3inyoezuevaaoimdje1v3r54wqt6b52j967oonj9woan\",\n  \"revisionCreateTime\" : \"2022-12-21T18:02:31.623213Z\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"ttl\" : \"oj3y71lko1y4ih5yqnvbh3u3vmch7ocb59aarpi2zfhgsqv97qdjh26ao2pppovgqs2z88z5738dteqed1q5adn5l6ttcwlprfqfhgaol5dgn8w023muvzuqoe4fkl1q5oi44akorw47jd6slo849tlq7ff9jeybe\",\n  \"userId\" : \"sv36\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a744901-4698-47a6-8046-d33d95676a95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.623553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consents.create",
          "schema" : {
            "description" : "Represents a user's consent.",
            "properties" : {
              "consentArtifact" : {
                "description" : "Required. The resource name of the Consent artifact that contains proof of the end user's consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.",
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Timestamp in UTC of when this Consent is considered expired.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. User-supplied key-value pairs used to organize Consent resources. Metadata keys must: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - begin with a letter - consist of up to 63 characters including lowercase letters, numeric characters, underscores, and dashes Metadata values must be: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - consist of up to 63 characters including lowercase letters, numeric characters, underscores, and dashes No more than 64 metadata entries can be associated with a given consent.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the Consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. Cannot be changed after creation.",
                "type" : "string"
              },
              "policies" : {
                "description" : "Optional. Represents a user's consent in terms of the resources that can be accessed and under what conditions.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudHealthcareV1beta1ConsentPolicy"
                },
                "type" : "array"
              },
              "revisionCreateTime" : {
                "description" : "Output only. The timestamp that the revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. The revision ID of the Consent. The format is an 8-character hexadecimal string. Refer to a specific revision of a Consent by appending `@{revision_id}` to the Consent's resource name.",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Required. Indicates the current state of this Consent.",
                "enum" : [ "STATE_UNSPECIFIED", "ACTIVE", "ARCHIVED", "REVOKED", "DRAFT", "REJECTED" ],
                "type" : "string"
              },
              "ttl" : {
                "description" : "Input only. The time to live for this Consent from when it is created.",
                "format" : "google-duration",
                "type" : "string"
              },
              "userId" : {
                "description" : "Required. User's UUID provided by the client.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "37e0dd14-a37c-46bd-a66a-6b00560ff284",
    "name" : "Lists the Consent in the given consent store, returning each Consent's latest re...",
    "request" : {
      "urlPath" : "/v1beta1/zjyvua5w1o8t114g8k01h9vuu6ej8ubou6b23kexouy9rf4xod21d7ukjjcw0x9ef2sz0bpqxy09eb4dnlet3dyvp0wbiswi1kg35gbtl9r8mavil9n2ciecwtfs8kk5lr8man6vve3vvcdb70brarqtizp2dpx12znnunwtk/consents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"er22wzfe5r4r4p7o9cllbfwj6k1pgtqcrgozh2bwh6reujvn6j9b14uc4ooqtmumdtv39xbdytztsy8q6f0agi1m9v2tp9wn7l66soa50xdkuj1uc89uha9tiltluohnydz3b2hcp9hj4w3u98amax3unt3f69l9mk0f8x\",\n  \"consents\" : [ {\n    \"revisionId\" : \"jc54\",\n    \"metadata\" : { },\n    \"expireTime\" : \"2022-10-28T18:40:31.616782Z\",\n    \"name\" : \"Ms. Lacy Runolfsdottir\",\n    \"policies\" : [ {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"yjmm4r839llcxyg8qmhcxx75nik40fmqejnhuedcbowywtlvcklv1w4vqfk3uvamrv3t7fvrnof7mytslwahpiog97y2uba254u\",\n        \"description\" : \"Molestias autem et est non omnis cupiditate quia. Explicabo numquam et quos id doloremque excepturi. Quo amet voluptate et. Et id ea sequi omnis at natus.\",\n        \"location\" : \"j3wwg4g0jnfgbpzy5z33q4e4an5hgn6rg0hc9mbswsb\",\n        \"title\" : \"Iste eum libero libero culpa assumenda omnis vitae.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"hk9exl9a2tzuwncgcbljpf6men6v333v9zj\",\n        \"description\" : \"Natus possimus exercitationem sed. Non similique maiores non qui ut quisquam aperiam. Et est eaque sed quo et.\",\n        \"location\" : \"esuewfrrnx4rpxcbddjdk2t7xpioutxy5hrhhp3aaxb43yqsxy5nivdy9k6u632yeb2msm228vtgs7r311ag48c3etz07vo1ncn9bx7alha2anz76a7y8q4r\",\n        \"title\" : \"Reprehenderit in aut quo.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"qo9fbc1icgouvrzfpfgds1olkcxv5ugivdqv3uw0ydhzx4vk7qr1zo7xpn6wwyjcc2evxr91sjep5rehnmapp5eqqp5gjdr5gruykejffu8vonpn4hnnyx5xwqihe7llixtw5p08yq2a1d6muylf7c0x4ueaf13scinh0gmt5nk5hoet1t9r0hv\",\n        \"description\" : \"Ut alias cum rerum. Voluptatem dolores rerum quae magni qui ducimus. Beatae debitis possimus sequi. Quia nam ex. Aut nihil ipsum et.\",\n        \"location\" : \"p3i34lgsdekzyqjqwu5g9eqkdnxaqwu2qngpasc0il1pcmhdgawo6vgn7y2zua5zsbpcyot3juipr85ukjcbb0ept5o0w93uej\",\n        \"title\" : \"Nemo culpa voluptatem officiis.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"4zyermxaoztlevrk3cs2eyqx00i6yum9rjns7c9mo4ms87d2c2dl8pbpkvpb8r31f0swnoi4deruiuqob2efyeqik2l\",\n        \"description\" : \"Similique laudantium et fuga tempore accusamus quia neque. Amet nihil quia quam et consectetur. Minus nihil placeat.\",\n        \"location\" : \"r2ge\",\n        \"title\" : \"Doloribus ut facere repellendus nostrum at at consequatur.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"7znpwr8532mysi5b3s52t8yod9ezjx22vqd7c588cqq93ecv2pstz4czo2qbufg9wefoos1zher7vzbudoapiq47aaex0kxehhe4r6cahm29n9myi4fa2p8wk8u0v\",\n        \"description\" : \"Inventore eos voluptatem quam expedita ratione impedit in. Nisi nesciunt asperiores dolorem perferendis. Iusto vitae consectetur est itaque porro qui maxime. Aut assumenda voluptatem et sit et alias.\",\n        \"location\" : \"wgxoy4oohi74h4033bn2if6amlv4c4agkpbfeqmplrnrvxh7z2zaklx32eda\",\n        \"title\" : \"Sit ab perspiciatis.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"uaw7dmug3h3bpkbv1oonu9nmfgvmasjz9fr7pv4y8pmk9e4fap8gyusidcpet76eepdtjei94r5ykjv60qkrljth0d9zwb\",\n        \"description\" : \"Deleniti consequatur reprehenderit ut et. Repudiandae corporis repellat quisquam quis est. Aspernatur excepturi officia aliquid consequatur.\",\n        \"location\" : \"17ov9aqxddwt5bs0pawgf2jdatrabocdfchvvcrij0ip3j8op9v2hn7o71xrpujx533oa6gwgpk83gw5vgy76n1pfpg\",\n        \"title\" : \"Consequatur eum non natus.\"\n      }\n    } ],\n    \"consentArtifact\" : \"4k19i8l8cjpj1m4ezmmey52gjcn28ggd9frxqj9syx8p4cqlex2ulql8rfrx8drp72118zvps99qd7vnh1jgaask0op0m4j5idjjt30os524no0rrzzahnovt8ujw3\",\n    \"revisionCreateTime\" : \"2022-08-17T15:02:31.617519Z\",\n    \"state\" : \"REVOKED\",\n    \"ttl\" : \"goevvg24d3xf0aboh9iulz3\",\n    \"userId\" : \"36yx\"\n  }, {\n    \"revisionId\" : \"33m8\",\n    \"metadata\" : { },\n    \"expireTime\" : \"2022-09-02T17:59:31.617808Z\",\n    \"name\" : \"Hannelore Cummerata\",\n    \"policies\" : [ {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"jousvlo6m7mpead33xlybj5d05q\",\n        \"description\" : \"Officiis voluptate qui culpa qui occaecati saepe sed. Ea veritatis pariatur modi et sunt deserunt facere. Sit dolores rem sunt quas. Ut provident voluptate voluptas. Non aliquam rerum et sint adipisci\",\n        \"location\" : \"mbxshycv00ritvboxqi8ph37iephd0o1ruxfvy1jroi4kp6e3htn40hwd2dwg3bl267e5ay6m2g4cd6y8af36f2rwi1lyyi1vij1kz36ux4wq4c6dq6tas9\",\n        \"title\" : \"Dolor rerum laborum nemo saepe quo et iste.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"d5k8lpy1y1fpki0nlhfxyqmsa6jug93hecgi7zrl9nkhv8b8ba7kszcdomlj9c1pynlwh4byntd2o4kg94lawavqzd31qicybadr7p2c8x85hiaqbsx4\",\n        \"description\" : \"Beatae debitis vero quisquam veritatis optio. Rerum facilis expedita sunt nobis dolore voluptas velit. Minus vel similique.\",\n        \"location\" : \"og26axwixsbxy38vj7pcm56tgajov01z2sidjgl1v9nqnj9kbyojxef87bvllqfoh74ulz9ml45kesiijr0muhkjnrm2efcymrt3jr088jvhenj4nuj72apegepbq4a4queuuj2kzzfrcz3vaz8w0aokqk34icxvvp0m4zi213r87kfy\",\n        \"title\" : \"Deleniti nam saepe omnis tempore aut.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"4apei10kp6o42ssy5avn3rp9ekjobl2urqwofiwdjvh9aqfmk6uv0gfx5x57pf5e6ejyl01pkh5irh07oo1sp3ln20hrj4lh0n1z1lpiegirkxgtlov6tcf2uv4j75m79zyc7cumw8ohb3n835pt54ts\",\n        \"description\" : \"Labore aut pariatur ut consequatur ut nesciunt. Neque voluptatem rem. Distinctio consequuntur dolorum rerum tempora autem eum distinctio. Dolore modi maxime non.\",\n        \"location\" : \"w00aewccsp2saa0px8xh745p8hzzxvkrmy2ir9ppaitjtalxsfs37mbdfz7kmgxc3y05jjhbyi26wl2khge2k725glin09nxxmmul8klbbhffyrk51agibifmjtebbc2fgcafxu4a71xt6ku70skgrv829bhdii2hjrb75zctwytu81ua7l\",\n        \"title\" : \"Facilis ipsa odio ut autem eum.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"67t7r2xnzqrj67cbqzykn0sq1zolbythcahkb0rdjdmsxlcf8cipcxh2zclmdziv6uhhyj1d8lf6ctzp40comggqstye5kp1cbmbjk9ue\",\n        \"description\" : \"Provident autem dicta modi voluptatem odio est. Numquam quia accusamus modi maxime. Assumenda officiis dolorum quod provident non.\",\n        \"location\" : \"qodohkniwj3jvdh8hz8l4xpsana10vr7mvzfrymzn8cp4j2zsqp1fh2iwzeqm1zs9n1w8h062kkf83kcydrpe0ae4ccidfjxhdd8jxt\",\n        \"title\" : \"Et est velit architecto dolorum iste.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"c026jles525q75bg3bnawst3ufjxd46krfw1wq2j9vuzrce1d8dbanr42lxaejcu37il6cztz7tc6x7mfw86mkwn1ct1zac6vu0w9mzhmm8nuzgyzd93xkai174sj1wbw2hwis1wen8v4qnp1eomkmzqnwy6sfnyl0esfnuekwps8vzpvy94dueuq63bl\",\n        \"description\" : \"Ipsa expedita amet. Molestiae corrupti in sint qui illum iusto. Optio consequatur dolores adipisci reiciendis. Id earum delectus et necessitatibus qui. Non recusandae incidunt necessitatibus eos hic.\",\n        \"location\" : \"s107woacey6cqu0h63hb0frg97uh9t1n8t5h6vsa5jxflfbq9q1uvurfw8fukgvemceqt9tvy8pn9kq8f9wfuz3bhd8azks830vv1hu4wgn3n5ufrtmlwwkq0sg0pe\",\n        \"title\" : \"Deserunt nobis nam voluptatem error distinctio accusantium.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"f93nvhmmdvo2np213w8tqrhjqtlolrraadd85bmrrqs\",\n        \"description\" : \"Neque qui et qui ut provident cumque. Cumque qui doloribus. Laudantium fugit itaque est. Vitae et ullam illo. Qui et repellendus.\",\n        \"location\" : \"to3lkpfg0rajsmgkp4z58fie\",\n        \"title\" : \"Dolor nisi dolorum tenetur qui.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"xwvldc6kwkxteldwmx7qrr731qat7g80csrn74m4rpeds54i0v9f7zq161jhecwxdk0syd6vj3llse3jj7uk2e3g9g9u1ljsiia7m36g77q8jnq9y\",\n        \"description\" : \"Sunt et autem consequatur omnis itaque. Est rem dignissimos. Rerum praesentium sint nam aut dolores fuga.\",\n        \"location\" : \"femo56lh5wanzx4t63ox73e16k\",\n        \"title\" : \"Veniam qui perspiciatis veritatis.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"znwf3dzjnd73cgvap18gye8fj5qiifj5m8fgf03ub3c534y1vgurcl6uw6e8wvwm2dpyzlrlvskqosaee8du0xpqstk0hb76a96tc8n44bppzze3bhd8\",\n        \"description\" : \"Placeat consequatur sunt. Inventore repudiandae assumenda commodi laboriosam. Quis fugit rerum. Magnam voluptas perferendis recusandae voluptates ut. Vel ut sed.\",\n        \"location\" : \"pjv5ucpyb4w2vbroloxm50esmh8rod8px1lg5maqajn5fpg4p8arpsgn9l02lzgqa1yghtjhjdv1uhjo05lifil3gt542tbxjnv0nbsftl4q2anglimcprgb23il26l6dfosx6qf91lkc0lzd6o45t6somiyvn3k8x5s5yku24wo483iffctczx6\",\n        \"title\" : \"Consequatur explicabo quia fuga quas vitae occaecati.\"\n      }\n    } ],\n    \"consentArtifact\" : \"empk130v959ifaye75ppdvgu0tckoz10fibhizcupgn7nc7irfux0cw8lqykp6vv7zz9opckhcfsh5f5gft1vk\",\n    \"revisionCreateTime\" : \"2022-10-08T16:05:31.61877Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"ttl\" : \"tfabtq5lrig71qu1yvri7zjk39birrnb60fcp9p6retdhmxu9zq8w03r2xla2pom40m8sdy4n3dxkntd9w9113h5kfb6emkug3ry883jscfeyoeiv64gqb2qskqibaf\",\n    \"userId\" : \"9yb2\"\n  }, {\n    \"revisionId\" : \"jtll\",\n    \"metadata\" : { },\n    \"expireTime\" : \"2022-09-25T15:08:31.6191Z\",\n    \"name\" : \"Shalanda Botsford\",\n    \"policies\" : [ {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"fpe2szwvxci2ws6a9dzakn9cw6fh0by2lh6mfmyol9530m8hwo0u1f4k8nwpnp0z9hgv38v4vxsnmctatv9eph\",\n        \"description\" : \"Delectus molestias et dolore. Quibusdam architecto illum. Autem rerum quos sint sapiente quo dolor.\",\n        \"location\" : \"8y2r7lyz043mk0t3b30hvzipm46lf6f84f3u5p\",\n        \"title\" : \"Ullam quod rem magnam accusantium voluptatum eos.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"2h5twulbpo7xe8l5tlh9ux6r43m2zrrfn00ixv93ejr2u36nu8gapcmzd17dahxfp0xk3wfctpvs0aa1ye0m70wxjnydd2x5hhcsmkkw6kt1kpnk5g7qtmtosd5o4tjq0cp8zwr4p2ixvpup34f5q17uh7hhbjym1fwvl8hwhuqfs65y\",\n        \"description\" : \"In alias eius qui iste nam laboriosam ut. Laboriosam quisquam omnis quo non est. Velit reprehenderit nihil. Sint autem hic ullam culpa et qui.\",\n        \"location\" : \"9i8tqhnj406fsnadwb20vlvcm0hs8l022o4r1fjhdbe7c3s75xy4v8jby\",\n        \"title\" : \"Quis molestias possimus cumque accusantium soluta.\"\n      }\n    } ],\n    \"consentArtifact\" : \"hu8cn4fztk7ca9wan9ijxshw70r6tr3q8r3ouhrtqct\",\n    \"revisionCreateTime\" : \"2022-09-05T15:38:31.619388Z\",\n    \"state\" : \"REJECTED\",\n    \"ttl\" : \"rfjhbq3ly5vbmr382o0zsmhejlncn4s289e7iltrlkj7ckh6nusrera6gkq3aoy363kf0kd\",\n    \"userId\" : \"7j9v\"\n  }, {\n    \"revisionId\" : \"67bu\",\n    \"metadata\" : { },\n    \"expireTime\" : \"2022-03-20T15:41:31.619641Z\",\n    \"name\" : \"Mrs. Reinaldo Bergnaum\",\n    \"policies\" : [ {\n      \"resourceAttributes\" : [ { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"f4ia384bjoiw\",\n        \"description\" : \"Et non ea doloribus. Iure officia quaerat quam. Sed at magnam ut. Est et reprehenderit. Culpa repudiandae dolor dolores mollitia possimus perspiciatis iste.\",\n        \"location\" : \"6vbcudblbd2g6wnjgx2mln8qdunfbrc9gb2qmemzf5g09e6ibfe22b24dg7x1yhlxue92ak6xm6\",\n        \"title\" : \"Ipsa iure nostrum id.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"5vfnfjzs7rn21ypf3ogv9w0qe4kofr6bqlzkgyvv1wkdkfojl1k1mb4pufqn3iyy8qk97t474uw09mle6q05m0w75w0wie6tdpr4hiw48bywz7u7xwzpxhsdc276tt4trbwyxk5be87nc7teffee3p4eu\",\n        \"description\" : \"Voluptatem blanditiis eum et fugiat reprehenderit omnis consequatur. Sint eos sed molestiae ipsam delectus. Commodi nobis aperiam unde. Itaque suscipit qui recusandae non libero et at. Harum eligendi \",\n        \"location\" : \"uq8mmprsjf9l9povrsqq0bj9phw91n5vptn59ks5tkuj1320fuaz665wg4ycxr51br1qf4dbhg631axrzsvhsw09bn\",\n        \"title\" : \"Impedit quis quidem ipsum officia molestiae nobis.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"7ag3c00qrjomq4e99ckvr8mpxx0p5ebzzhpxepyhi8fbe2xqn2xoslnxwehtmzsegnf2ohrju2bo38c83xs1jnevbyuke03z1ht50iophl1hr3z2mfvf6r5xi86gkvkf3at4svw1pzg9jo7s490fv\",\n        \"description\" : \"Sunt ut et nulla. Sed fuga molestiae. Velit non qui.\",\n        \"location\" : \"w0jk\",\n        \"title\" : \"Beatae dolorem non autem tempore fugit ullam consectetur.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"o2jwwlglnouqqtorx35ncsijez8gx377\",\n        \"description\" : \"Dolore blanditiis est modi aperiam consectetur qui totam. Dicta voluptatem eum rem ut repellendus harum. Error totam pariatur quia velit similique ea.\",\n        \"location\" : \"itigom6kg7r7cc\",\n        \"title\" : \"Aliquam est officiis nisi consequatur.\"\n      }\n    } ],\n    \"consentArtifact\" : \"t8whd57vs95p6q4fj6ja0ea81jp28hb901bql52fqidrp\",\n    \"revisionCreateTime\" : \"2023-01-07T16:15:31.620131Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"ttl\" : \"l534vpzndr57m47b7jwbtg\",\n    \"userId\" : \"6jam\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "37e0dd14-a37c-46bd-a66a-6b00560ff284",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.620408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consents.list",
          "schema" : {
            "properties" : {
              "consents" : {
                "description" : "The returned Consents. The maximum number of Consents returned is determined by the value of page_size in the ListConsentsRequest.",
                "items" : {
                  "$ref" : "#/components/schemas/Consent"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f186e77-5c52-488d-aee9-11b783aa77b1",
    "name" : "Creates a new consent store in the parent dataset. Attempting to create a consen...",
    "request" : {
      "urlPath" : "/v1beta1/n3nod3vscfjmj0g61352p7terz69qvee8m3p7rlieg4lxdapyy8zerlmbg8no907m2y6us7dafo04cixbrvhgqjgw2jdliikepm3heu0cgmx1sr3neqp987hq7j51vbo4u84h1traq4iefa6o10voxms4z44x1k/consentStores",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"defaultConsentTtl\" : \"6zf4n27p6te5jy89slb8x228ezqablfnyiyqfh4sw5qb131ji4ezsc25yaj8wsu279h2tirwonseapjfrtyaeagh3c7bydh9ixld8byp32frx2b2r5aagyhc8x29c7bw56\",\n  \"enableConsentCreateOnUpdate\" : false,\n  \"name\" : \"Douglass Zboncak\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f186e77-5c52-488d-aee9-11b783aa77b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.616569Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.create",
          "schema" : {
            "description" : "Represents a consent store.",
            "properties" : {
              "defaultConsentTtl" : {
                "description" : "Optional. Default time to live for Consents created in this store. Must be at least 24 hours. Updating this field will not affect the expiration time of existing consents.",
                "format" : "google-duration",
                "type" : "string"
              },
              "enableConsentCreateOnUpdate" : {
                "description" : "Optional. If `true`, UpdateConsent creates the Consent if it does not already exist. If unspecified, defaults to `false`.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. User-supplied key-value pairs used to organize consent stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62}. Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63}. No more than 64 labels can be associated with a given store. For more information: https://cloud.google.com/healthcare/docs/how-tos/labeling-resources",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the consent store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}`. Cannot be changed after creation.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "804aa9ef-b068-41be-9302-490e8ebeaf07",
    "name" : "Lists the consent stores in the specified dataset.",
    "request" : {
      "urlPath" : "/v1beta1/3bbfkusy9mg4v7xsd2i9an0mdwaovwehni3ycbgchvjv9dfry53obkkxj3n1ixsnv7r1wtgsm3afwpy1793gzgutx0a5qxu3cmvo5r148e3spr/consentStores",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"55inek54d6x2qc70a53ghe386uzbphm7wviogda283h0ipb0idwklvlom1r61k489jxbcnipy4ch20kr5au41b1vr5eq3300k5j1adilnszhqtxrcrltm16pxazgxuk9k60huw5i6nv5gjrhjshqvukezoqj519mqto0tw08lm\",\n  \"consentStores\" : [ {\n    \"defaultConsentTtl\" : \"xjwkkvmpgzeqp9utlg0iukb62qmbzstw3h8a0e0f2uhexr6s6i12r42drsjvpuy77d3dj1qgiuhs1argf7rhlykhddv8k2ftidet924gqhd8l5goxr\",\n    \"enableConsentCreateOnUpdate\" : true,\n    \"name\" : \"Yadira Kemmer\",\n    \"labels\" : { }\n  }, {\n    \"defaultConsentTtl\" : \"yk4q6nll6g4d362ef1b0yximm0tii8zammh1lzrnc5evzzjf6zt2y50q2p6tpyr2iqeoex62q1fnpczy21x7di5xjjw7stkuvqpcd1bjomwxyvpwvuxzjymj2mhu710ms5fl87p0x7x55ptcozeuhzmd69n0y3\",\n    \"enableConsentCreateOnUpdate\" : true,\n    \"name\" : \"Tomas Quitzon\",\n    \"labels\" : { }\n  }, {\n    \"defaultConsentTtl\" : \"1vbglc9dev1vxc802h3aga0ggy01s1xhc9evpz72663hprvbx4mbifoqn08hcjee1g93ucxpx45s6ymdhfxarprnfym8or6mtg\",\n    \"enableConsentCreateOnUpdate\" : true,\n    \"name\" : \"Deon Effertz\",\n    \"labels\" : { }\n  }, {\n    \"defaultConsentTtl\" : \"4gzcrmsr4a6qdm28d8\",\n    \"enableConsentCreateOnUpdate\" : false,\n    \"name\" : \"Cornell Trantow IV\",\n    \"labels\" : { }\n  }, {\n    \"defaultConsentTtl\" : \"n6xkgwpjovo2z3nq2y9b\",\n    \"enableConsentCreateOnUpdate\" : true,\n    \"name\" : \"Lanell Metz DDS\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "804aa9ef-b068-41be-9302-490e8ebeaf07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.616398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.list",
          "schema" : {
            "properties" : {
              "consentStores" : {
                "description" : "The returned consent stores. The maximum number of stores returned is determined by the value of page_size in the ListConsentStoresRequest.",
                "items" : {
                  "$ref" : "#/components/schemas/ConsentStore"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f2fdd5d2-56d9-47d4-971f-3cfdc42d80ab",
    "name" : "Creates a new Consent artifact in the parent consent store.",
    "request" : {
      "urlPath" : "/v1beta1/2izp36lx30/consentArtifacts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"userSignature\" : {\n    \"image\" : {\n      \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/alxleroydeval/128.jpg\",\n      \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/ryandownie/128.jpg\"\n    },\n    \"metadata\" : { },\n    \"userId\" : \"0p6i\",\n    \"signatureTime\" : \"2023-02-22T18:43:31.61492Z\"\n  },\n  \"consentContentVersion\" : \"hbkz32m9an2c2jz9oturvddjzwlf2kzlkudrjw6lhmn7uwaldehae0rv6d0lokqa5ooe7avzytw58321zflwp905j3cleqxt9queg\",\n  \"consentContentScreenshots\" : [ {\n    \"gcsUri\" : \"https://web.example.mocklab.io/224117\",\n    \"rawBytes\" : \"eymbyv31jmw6zxlcfvbkm00fa9zmyc9j4x9so4c8fyf87ovt03aboqzk77insckipjvf30fua7wi1ev7lwo346eh5mzlbi2nvgkgqk30gzpegt5sqm3vcm3b4sqthfsecby\"\n  }, {\n    \"gcsUri\" : \"https://web.example.mocklab.io/500337\",\n    \"rawBytes\" : \"xfem8xx7zl2p5l9fa7frb8hfj99xf4vxcpy5c9can4196rza35qgezvfjkj4sajakz2ik8bktftlyue2egornk7psxca076pwkz76nualbsl6yla5cpqwbloc05tajzv5tluwaf3u0xpvr92dmmuj30jr2m1v6qjnd1gd2g3xwno0xdz961z3645zjzk940pl\"\n  }, {\n    \"gcsUri\" : \"https://web.example.mocklab.io/660577\",\n    \"rawBytes\" : \"bagajt731nx2fr2aei2pspte7atsv\"\n  } ],\n  \"metadata\" : { },\n  \"witnessSignature\" : {\n    \"image\" : {\n      \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/deviljho_/128.jpg\",\n      \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/chatyrko/128.jpg\"\n    },\n    \"metadata\" : { },\n    \"userId\" : \"ydx0\",\n    \"signatureTime\" : \"2022-07-20T15:58:31.615434Z\"\n  },\n  \"name\" : \"Howard Effertz\",\n  \"guardianSignature\" : {\n    \"image\" : {\n      \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/djsherman/128.jpg\",\n      \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/drewbyreese/128.jpg\"\n    },\n    \"metadata\" : { },\n    \"userId\" : \"o9r0\",\n    \"signatureTime\" : \"2022-10-27T17:35:31.615669Z\"\n  },\n  \"userId\" : \"2l7q\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2fdd5d2-56d9-47d4-971f-3cfdc42d80ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.615929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consentArtifacts.create",
          "schema" : {
            "description" : "Documentation of a user's consent.",
            "properties" : {
              "consentContentScreenshots" : {
                "description" : "Optional. Screenshots, PDFs, or other binary information documenting the user's consent.",
                "items" : {
                  "$ref" : "#/components/schemas/Image"
                },
                "type" : "array"
              },
              "consentContentVersion" : {
                "description" : "Optional. An string indicating the version of the consent information shown to the user.",
                "type" : "string"
              },
              "guardianSignature" : {
                "$ref" : "#/components/schemas/Signature"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. Metadata associated with the Consent artifact. For example, the consent locale or user agent version.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the Consent artifact, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`. Cannot be changed after creation.",
                "type" : "string"
              },
              "userId" : {
                "description" : "Required. User's UUID provided by the client.",
                "type" : "string"
              },
              "userSignature" : {
                "$ref" : "#/components/schemas/Signature"
              },
              "witnessSignature" : {
                "$ref" : "#/components/schemas/Signature"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7d82754f-5a28-46dc-bcee-e961404da086",
    "name" : "Lists the Consent artifacts in the specified consent store.",
    "request" : {
      "urlPath" : "/v1beta1/r7amqlmsg8t13nvbzxs6v5jac1iqnnhuzrampjmcc0pdpvgvr60a894p8/consentArtifacts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"consentArtifacts\" : [ {\n    \"userSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/dixchen/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/aaronkwhite/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"s0jr\",\n      \"signatureTime\" : \"2022-08-20T17:33:31.607044Z\"\n    },\n    \"consentContentVersion\" : \"fj6ue3ark39zrbx7iwc82zmm1f8yjnn3t1qveqmncj\",\n    \"consentContentScreenshots\" : [ {\n      \"gcsUri\" : \"https://web.example.mocklab.io/687131\",\n      \"rawBytes\" : \"9xvwhco5yzqngt0\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/229815\",\n      \"rawBytes\" : \"2n8eat2gbpek2t9tlvthntibr65yipk\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/973213\",\n      \"rawBytes\" : \"t8di08n0eqn6tf5kkxxfu33raw2ygcnohqd4v5fthyj7mies1axmif7rf\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/907266\",\n      \"rawBytes\" : \"6fceml8a244qcxncm5jvtpl1ulgw8djqfskxvl2usvguik5b6es6kr4wh747kg6fsa72pprps421zk67yaxk3mk9vl2bl2imzxk8pwa9i40uh0nroh7zcqws2zxfiesti5ynu34gqph26hrpx3octhdwo5tzodwytafgw2p3o\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/180550\",\n      \"rawBytes\" : \"ptpm0beml62fko5d17thl1g776qd1lszeqjh87nc\"\n    } ],\n    \"metadata\" : { },\n    \"witnessSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/bertboerland/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/ashocka18/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"5i84\",\n      \"signatureTime\" : \"2023-01-21T14:59:31.6078Z\"\n    },\n    \"name\" : \"Jordon Yost\",\n    \"guardianSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/kerem/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/n_tassone/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"rwrr\",\n      \"signatureTime\" : \"2022-03-18T18:06:31.60805Z\"\n    },\n    \"userId\" : \"0rog\"\n  }, {\n    \"userSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/motionthinks/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/geobikas/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"908l\",\n      \"signatureTime\" : \"2023-03-06T15:54:31.608366Z\"\n    },\n    \"consentContentVersion\" : \"p504vh6qmqant6teqqg9qxl9bqpdc28g094fvqv26xsyyu1mkcfs9v3wtp1pybzkfgr9q2ilsouanxnzqkz4dvcic9frrqegg5po92iqov\",\n    \"consentContentScreenshots\" : [ {\n      \"gcsUri\" : \"https://web.example.mocklab.io/198994\",\n      \"rawBytes\" : \"qn3xf7w2nydgha\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/115741\",\n      \"rawBytes\" : \"8ji0h8yr0sdhhwktaacf49d2q1ochht5tmr8kd4q9et9tkr2qod0j6yosn6abx1pxtscxnh1eldm71x8zpa32pbdls6ieoi50twyndr0j96700yml4qitmnb08w563zfvkz4zf7e0u30fgxl45ysnj0z4fpi6eekc06pg299m81u9qgldggu9989fdph70y49v82\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/454942\",\n      \"rawBytes\" : \"uea6z7doasq9uy9p2du1nv90b5iccmoxw86o70nizu7wcib759sh1f1uz\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/956850\",\n      \"rawBytes\" : \"bnlrufnfxl6tqw0vvosnfvrvkzyzo\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/712505\",\n      \"rawBytes\" : \"4vngmxnc0qgvudj25lgtbx7cjiey6433mogmh535ynzps4pv48wti43rze7ejggv6l29xm4rq2w189q\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/829495\",\n      \"rawBytes\" : \"nqmvn9qu8ktxfincql4iylnecbpr76jck7mmiehrd9evlosef6ha736r63b4sclozggv6rngsoz5l2rpk9dd\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/569256\",\n      \"rawBytes\" : \"an5wc4\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/215440\",\n      \"rawBytes\" : \"mu7d21bvv0ig0d279elsrunzkvbwq6r437u1jqovpjh4dv6ybjzjqym6bjzxk17e68icvqvuvqyjxg2f52qi9fan4mj31mbgg58s2go3k\"\n    } ],\n    \"metadata\" : { },\n    \"witnessSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/uberschizo/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/cdavis565/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"1p19\",\n      \"signatureTime\" : \"2022-11-11T16:23:31.609397Z\"\n    },\n    \"name\" : \"Marybelle Lind\",\n    \"guardianSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/mkginfo/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/akmalfikri/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"3559\",\n      \"signatureTime\" : \"2022-06-06T15:19:31.609657Z\"\n    },\n    \"userId\" : \"h67q\"\n  }, {\n    \"userSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/ipavelek/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/elbuscainfo/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"fu13\",\n      \"signatureTime\" : \"2022-11-28T18:34:31.609973Z\"\n    },\n    \"consentContentVersion\" : \"jwzbglzm7p01t97a1xmn9jtsq5vd5jj\",\n    \"consentContentScreenshots\" : [ {\n      \"gcsUri\" : \"https://web.example.mocklab.io/194626\",\n      \"rawBytes\" : \"uwkg1aeedhvgice1rfnrs8ir0prqjftv8lu2wsrdy7aikncusdd1pb7al5b63yc6yca2kdilt24ase184lgjdvdonp\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/839002\",\n      \"rawBytes\" : \"i4tgfbczn0rf5gel7ymmakf2d4ttuoo0jk7qpq9trcbd2aln8v7uoagtdqkieafwubdp8o0f71d1dhs6uyr1\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/314630\",\n      \"rawBytes\" : \"01kq3kl563bqjlq82zfjfkbo4qbe4r224g3g5f5p6yyum00zn0vlg5w28j6t84fzmn66lj0l261e14lior5ogwll233n1l5icanj6gxdrvdudieejf0fb6y9v26jf5hsxikzlsnw8d5jt6\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/537165\",\n      \"rawBytes\" : \"tk9f0d2oymujg1yc7sy063igbebhbvrt61fp5o8bsi2zk4xnlei8is1nme5hre1na2a71g28xjjs\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/494209\",\n      \"rawBytes\" : \"19ec2qkg0yuxc\"\n    } ],\n    \"metadata\" : { },\n    \"witnessSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/runningskull/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/solid_color/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"53h3\",\n      \"signatureTime\" : \"2023-02-12T18:03:31.610689Z\"\n    },\n    \"name\" : \"Keith Lang\",\n    \"guardianSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/daniloc/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/namankreative/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"i8ey\",\n      \"signatureTime\" : \"2022-09-21T15:49:31.610933Z\"\n    },\n    \"userId\" : \"oqs8\"\n  }, {\n    \"userSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/andytlaw/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/aaronkwhite/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"ukx9\",\n      \"signatureTime\" : \"2022-06-07T17:08:31.611235Z\"\n    },\n    \"consentContentVersion\" : \"6rz6tul77ua8wdrnpuzm0svrx2cmr3go790me1eu71meravdlpos6idaytkh9tdqoa6z4zdzktwy07err6jtvdfuxfxjqp35sw18dfq\",\n    \"consentContentScreenshots\" : [ {\n      \"gcsUri\" : \"https://web.example.mocklab.io/582269\",\n      \"rawBytes\" : \"5igg8xeo22viruof75pegaewawc9zj1lkuv83v4rhqybk785eq5duhuhh5emkv8pl6qb8t1b5uydz3ssvmjmvwhgu\"\n    } ],\n    \"metadata\" : { },\n    \"witnessSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/ffbel/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/kudretkeskin/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"4pdi\",\n      \"signatureTime\" : \"2022-11-12T15:20:31.611551Z\"\n    },\n    \"name\" : \"Jamaal Huel\",\n    \"guardianSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/dhooyenga/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/angelceballos/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"239q\",\n      \"signatureTime\" : \"2022-05-27T16:46:31.611794Z\"\n    },\n    \"userId\" : \"286e\"\n  }, {\n    \"userSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/9lessons/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/harry_sistalam/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"5yye\",\n      \"signatureTime\" : \"2023-01-15T15:03:31.612093Z\"\n    },\n    \"consentContentVersion\" : \"1d8051siej0twyexpe51amlaq7gjpous42k7rap1kqm6mx0zvahxizjnd1xu380waitm9lqwp82bqbj317n7k1b96opn9ac8eom14aq7qefxvlmns84bh4s14dovjuiu9lwjdrhiueuorjgtzxjkpoug334h9bf4i46gaufxuizbgdg4faavgcxs02fqb2tol99\",\n    \"consentContentScreenshots\" : [ {\n      \"gcsUri\" : \"https://web.example.mocklab.io/093940\",\n      \"rawBytes\" : \"rhhsf92yyflnpqu96xd7d2kj0edxk2pgq5jwa62mq563n7m7s9jvn7db2hddrnxnhzbcrotaj729g5sw0v6k5dc5ij5uv7xejhlprxowj5okbvrn5ec9zyx7t725kq8t860q0h0b1o1h2fq7ji18kk44u9gklz6olz5zvy\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/949393\",\n      \"rawBytes\" : \"mlmprzpnqqhqvs8rhpoktwl1silafsaybtinfpydp3l8tm1ut7wmiigkcet3ll9ts4i22hgumjm1l7ze1t2vvhz5xgl05mojgy4aivggrjyz96ga4sszcut0i3l1tcnj8oqfx69ppvbcv3bgokg\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/393245\",\n      \"rawBytes\" : \"obz4l9i1h5kecx0382x20ofeddabybihprqrj6eb9ec36guy0um23skm5podhoda7c65s28fna5uf5fd5xa8uaorfav5x\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/138962\",\n      \"rawBytes\" : \"k6djez9xeqlzz1wxeeqifnhlfhzp3zgkmnzf1iylrlil5wxd81q5ubzh4lmdtxqn55eetx416eobtf0zt3whhovcxs0usx31d78w2mb3j8nkcql0\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/742745\",\n      \"rawBytes\" : \"jr5yoxqedddh1w7k1kxs6t8rw1j8hks3kl59zyss4cdgbnk1ni3go6xt4d7v6i74awffk8th5bx4ppkaz16axvzgktrk8dh3y601v50jhr4kgqcnn32t2w6g5ue1jh9ejf8c07fgrkb9njofj62jf5xolfagmnzzax2mmglo8p90sik61uj3cze06\"\n    } ],\n    \"metadata\" : { },\n    \"witnessSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/victorerixon/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/arashmanteghi/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"7pv8\",\n      \"signatureTime\" : \"2022-10-15T15:31:31.612845Z\"\n    },\n    \"name\" : \"Miss Homer Tremblay\",\n    \"guardianSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/jimmuirhead/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/bennyjien/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"i272\",\n      \"signatureTime\" : \"2023-01-30T15:57:31.613115Z\"\n    },\n    \"userId\" : \"1s8m\"\n  }, {\n    \"userSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/heycamtaylor/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/beweinreich/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"lrc9\",\n      \"signatureTime\" : \"2023-01-20T15:28:31.613423Z\"\n    },\n    \"consentContentVersion\" : \"8bw1nn4hym1onv6jssduhkkjpzg0c6uxsetysh9tb6y453cu8gr9q20rr671vdx395hpbmanlqgnym0k3nz0biwz8c9cfq7sytuaw1cyqswr6uuv08utguye5r71zlauh5jmxojadbcq4tuhtwfyg42h2csf8ewhxxx1xlbsdw28gkjo5e6zgmqq\",\n    \"consentContentScreenshots\" : [ {\n      \"gcsUri\" : \"https://web.example.mocklab.io/874216\",\n      \"rawBytes\" : \"8sewaeza95npwsmanrvy8xo\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/446884\",\n      \"rawBytes\" : \"hogia1glc41s9tqj8s5ercy8189rpxfbljs4qbzr0i3oq8to93f65vgnm8b7g06frjeqf750fg9212cz5o2zzeez8i56lnu4qynsmalnofy0rcb6syq3kpyz1bm0mzd23w6q7b\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/120394\",\n      \"rawBytes\" : \"638aheecmmex73w62i9gjb1i997v3wael6xssfv72kl9bcp5mg7s5c3thzepk2mxg2ee5yyr409z73pqh6oq3qtushh3rnw4nf70hvlom176n4tginfuxykjrcnwoq8fb0533hexdxab6s5h5vk05rxiwiglrohemf7\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/754199\",\n      \"rawBytes\" : \"6q6a2enmyj0fxzz40o8xtispglt1uw5rdu7bbyxfuqkygcqn2221ecftvcem\"\n    }, {\n      \"gcsUri\" : \"https://web.example.mocklab.io/507617\",\n      \"rawBytes\" : \"z3lium0gmpabij1glv7owqpbnqwvy04qinfvuovrjpsx3a3dp433r7deeydg3191bmugs8yncmzao5785apevno1qc0ramhtgkson6la5zn4pu8vrxpronqlk9msbcp3r5jfstxbxc8aba7011jieat84vbcmqwxdp9yku\"\n    } ],\n    \"metadata\" : { },\n    \"witnessSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/ademilter/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/nandini_m/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"80ni\",\n      \"signatureTime\" : \"2022-03-09T16:07:31.614136Z\"\n    },\n    \"name\" : \"Johana Bogan II\",\n    \"guardianSignature\" : {\n      \"image\" : {\n        \"gcsUri\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/adamawesomeface/128.jpg\",\n        \"rawBytes\" : \"https://s3.amazonaws.com/uifaces/faces/twitter/cicerobr/128.jpg\"\n      },\n      \"metadata\" : { },\n      \"userId\" : \"a878\",\n      \"signatureTime\" : \"2022-11-24T15:42:31.614378Z\"\n    },\n    \"userId\" : \"d8f5\"\n  } ],\n  \"nextPageToken\" : \"nq0t7nmez8vckov1chzvunnyu8ug77xl5l4u8ll19h3nzeyvffunptqg20s7kjjalk8f8xdr0l70zswt83nejp0seisyc1d3xdugfunj2yc90745xe8a9ryzmqynixs0acwh6tiji6lc1m7fgf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d82754f-5a28-46dc-bcee-e961404da086",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.614675Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consentArtifacts.list",
          "schema" : {
            "properties" : {
              "consentArtifacts" : {
                "description" : "The returned Consent artifacts. The maximum number of artifacts returned is determined by the value of page_size in the ListConsentArtifactsRequest.",
                "items" : {
                  "$ref" : "#/components/schemas/ConsentArtifact"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a662e3aa-f0bd-4a0c-a323-e66db8b49f0f",
    "name" : "Creates a new Attribute definition in the parent consent store.",
    "request" : {
      "urlPath" : "/v1beta1/1scmoox6d4nkersrd8jy0gmxn07kjahvyjiaavmrthrxlx0r0rpqzel4l3fg1ln0cnttp1vpqb41niaqntd0jh2bbdeqwilpwz7mp5u49mvpoctz0to26g3013lxbtaak0u/attributeDefinitions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"allowedValues\" : [ \"38hzn19lkr58xh6rp12fd5n10xa2gftmschsv28ct4auf533dh335eui7fn99kw4wdv901lc1bc2oky169pq441yv5fze2cqbspieb7dueqcqjst8wvnam3lls0dvm4tgluxl6i7iqnz3wszy738vcxk40b7s2hgcjlc2nbzytdcatywt1zb4qyl9krwqs2\", \"3r3tgk4iieddbldzlrf8vf609pzjxj19vcgp1o2bwn76s3brmk28gzrdhnu8dc519zy974c5l7nzmd9g3qr9toabgmcb4ojwe108\", \"m0oy2dn403g4togpnivo9rh08xjhif706gmpxmu9swpggl9ybjhicfkfvgxjfwkv00lih3vgvi6hcja1gvp76acyrh72boan8c7sh9zz905xquz7p8va6v187uo0bs6oq4qby3hllnhe82rrpr3l\", \"1qt33o0hseoobxth7an128cwopul5xxcalmuqlt8wbxup1u03uea3elp9l7yf583e0xe6fml3ucwky8aolt30q77wc9pex271bkxv\" ],\n  \"consentDefaultValues\" : [ \"2xufr1priv3ksxlfudocxbqh4qa5asmke4h01nzr134qkd5vh5bu5gofny00c630hvgdj5af9847il4bu01bjax5lpmemplucel61sq963q89lygc5murhaxtkks0ij6ra7k4noeryaza0ashge\", \"9ab9map263n\", \"m1e41gzl7x64ejgylvv8hd0euoj7erebd8rrx7sascshwvgj75705g7b47mpn7zbr239ebuz\", \"d6rome0n11sjvqhbvtwitlzyhvjl94d69iwi5ehbbhjv7sz252p\", \"k9plsfx4zrssyu\", \"q4vl3fna6ucj45kfu0298i1vobortp95fl9pycpts4333ya50t7e5gd8eeag5z1yf8nrj8d2y1vix6has37u7zimfry9mjbwkmdjzb0xaa8nem6itp0qlzwou5ho8xhgku34k5tee7q4uf3254jirwyeo9mnr55xr10ggah22rdvxv356kcipy8ck6n4\", \"4n6dp4\", \"0p8phqsuy7ebzy9xg7hoihb3y5uxz4f274w4mhxyjy7ursrkv07u28oruiw8ddy9wy\" ],\n  \"name\" : \"Brant Tremblay\",\n  \"description\" : \"Minima ipsam enim velit. Cum commodi et. Quis veniam et placeat. Sed vero velit.\",\n  \"category\" : \"REQUEST\",\n  \"dataMappingDefaultValue\" : \"c2gnl4tpwatxr047hi8105uzloy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a662e3aa-f0bd-4a0c-a323-e66db8b49f0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.606796Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.attributeDefinitions.create",
          "schema" : {
            "description" : "A client-defined consent attribute.",
            "properties" : {
              "allowedValues" : {
                "description" : "Required. Possible values for the attribute. The number of allowed values must not exceed 500. An empty list is invalid. The list can only be expanded after creation.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "category" : {
                "description" : "Required. The category of the attribute. The value of this field cannot be changed after creation.",
                "enum" : [ "CATEGORY_UNSPECIFIED", "RESOURCE", "REQUEST" ],
                "type" : "string"
              },
              "consentDefaultValues" : {
                "description" : "Optional. Default values of the attribute in Consents. If no default values are specified, it defaults to an empty value.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "dataMappingDefaultValue" : {
                "description" : "Optional. Default value of the attribute in User data mappings. If no default value is specified, it defaults to an empty value. This field is only applicable to attributes of the category `RESOURCE`.",
                "type" : "string"
              },
              "description" : {
                "description" : "Optional. A description of the attribute.",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name of the Attribute definition, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/attributeDefinitions/{attribute_definition_id}`. Cannot be changed after creation.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7c363d39-8c72-49c3-93e3-b76db3e66cab",
    "name" : "Lists the Attribute definitions in the specified consent store.",
    "request" : {
      "urlPath" : "/v1beta1/hmgy2z69nul88x7ej0darvi8hl3srbdyu1v2m6629fcvapj9ugj80nzkxhanv53b3nijik6bh0jgh/attributeDefinitions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attributeDefinitions\" : [ {\n    \"allowedValues\" : [ \"xa2hre4ns0i1evrey7cxzqr6ob0e2j5ue1chwgafi439yluelk41hp9ez3iv7z0zhfu201o8e0mw0hg9kcesx2fhap6sozix1w1sevsadmhh092r312i\", \"i10ybm03dnqjbv0rpoou\", \"69ss4vrxn3jpwgwlbkmjctr9upyli93w9o4jjhiy0jop1ahgga6n26nb1zv9q0fcxk4hkyxsnwbpd3870n3kz8n5gpsmaguxib8em3dmrfnlvglnfjn6bzsqwe8p3ryeob152ymi2jc8bdwhdw94fn5ezab10\", \"hh0vqkn9b04eglw97cuf0mghnkw0pb6e2pdpp372hf7kxuu3ovm4zu8lcjkbvffg8898o61jp7qo6w3q8j7c34g4ggjt8gx9iikqvs8xjmdlfbzqanm\" ],\n    \"consentDefaultValues\" : [ \"9bughbi3zw155rah0kgsgvmog6nikkyoctg9qbnm11bfx2cradbyc5qhikrvohtmvy9dbw4ywmes258fns3ofq8wr1pp3q28ev5ppboywsoskvwoybkhd0cev1hnlliqmrlsj8du8acm4vlaq1r6hlm9du82ok9mhbcwqm5uukbjdv7qprjyb66v3y1mx9z5o26\" ],\n    \"name\" : \"Galen Rosenbaum\",\n    \"description\" : \"Dolores velit deleniti. Et nobis accusantium quisquam. Quo iure vitae voluptatem voluptas et non. Sunt sint qui eaque ut placeat.\",\n    \"category\" : \"REQUEST\",\n    \"dataMappingDefaultValue\" : \"pztyf6k2ye6dgi2h4113vztrvz1prjqbt28ndg2fi\"\n  } ],\n  \"nextPageToken\" : \"dl2rhor8o1oxbt7qsln34dx8r935plqu8ir8t0lpgz2dcvqe70vf5uvlrqgb0mawkwlrnjonx1tl0p8n954z50wl7fzejdeu1m35blnmpimsvbn3e1kv17r9c3e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c363d39-8c72-49c3-93e3-b76db3e66cab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.606523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.attributeDefinitions.list",
          "schema" : {
            "properties" : {
              "attributeDefinitions" : {
                "description" : "The returned Attribute definitions. The maximum number of attributes returned is determined by the value of page_size in the ListAttributeDefinitionsRequest.",
                "items" : {
                  "$ref" : "#/components/schemas/AttributeDefinition"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fe3418d1-bfc8-45fd-8522-c05a86d3700f",
    "name" : "Creates a new Annotation record. It is valid to create Annotation objects for th...",
    "request" : {
      "urlPath" : "/v1beta1/wys01dfjx3w3qjcb2tsu53dw2vtckxzu7f9ws9cpivninudpjjzgnn7qfkx9apfcjxah2isjfq8/annotations",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"imageAnnotation\" : {\n    \"frameIndex\" : 1615081805,\n    \"boundingPolys\" : [ {\n      \"vertices\" : [ {\n        \"x\" : 1.708203051677111E38,\n        \"y\" : 2.5248081873901625E38\n      }, {\n        \"x\" : 5.093652942951117E37,\n        \"y\" : 2.081234192081951E38\n      }, {\n        \"x\" : 2.208863840257421E38,\n        \"y\" : 2.5797194337203908E38\n      }, {\n        \"x\" : 1.3042587916147227E38,\n        \"y\" : 3.2380338640302493E38\n      } ],\n      \"label\" : \"laboriosam\"\n    }, {\n      \"vertices\" : [ {\n        \"x\" : 3.1214881285721405E38,\n        \"y\" : 1.3039872620335096E38\n      }, {\n        \"x\" : 3.4658242445855714E37,\n        \"y\" : 2.7764131436506013E38\n      }, {\n        \"x\" : 1.2768317901897788E38,\n        \"y\" : 2.624890283127107E38\n      }, {\n        \"x\" : 2.11440477082401E38,\n        \"y\" : 2.3169262777331055E38\n      }, {\n        \"x\" : 3.2161885896176384E38,\n        \"y\" : 1.9817102750506047E38\n      } ],\n      \"label\" : \"dolore\"\n    }, {\n      \"vertices\" : [ {\n        \"x\" : 1.7497005209609225E38,\n        \"y\" : 3.989111188214515E37\n      } ],\n      \"label\" : \"expedita\"\n    }, {\n      \"vertices\" : [ {\n        \"x\" : 1.145334734226353E38,\n        \"y\" : 2.5325104142272348E38\n      }, {\n        \"x\" : 2.584053626279206E38,\n        \"y\" : 4.185401926010765E37\n      }, {\n        \"x\" : 2.2837028059391854E38,\n        \"y\" : 3.2138553976465163E38\n      } ],\n      \"label\" : \"ipsum\"\n    }, {\n      \"vertices\" : [ {\n        \"x\" : 9.874318383830064E36,\n        \"y\" : 3.5638685060359517E37\n      }, {\n        \"x\" : 2.347179957078842E38,\n        \"y\" : 3.269127850713009E37\n      }, {\n        \"x\" : 3.355703144479774E38,\n        \"y\" : 3.1849369639530476E37\n      } ],\n      \"label\" : \"nam\"\n    }, {\n      \"vertices\" : [ {\n        \"x\" : 1.762077575491164E38,\n        \"y\" : 1.932007053000587E38\n      }, {\n        \"x\" : 1.5205590553177638E38,\n        \"y\" : 7.685718705076304E37\n      }, {\n        \"x\" : 2.0711781785774317E38,\n        \"y\" : 1.6147206488719976E37\n      }, {\n        \"x\" : 2.62889764952099E38,\n        \"y\" : 2.6177197164022642E38\n      } ],\n      \"label\" : \"nemo\"\n    }, {\n      \"vertices\" : [ {\n        \"x\" : 1.2080564822053245E38,\n        \"y\" : 1.3688973599590798E38\n      } ],\n      \"label\" : \"ducimus\"\n    }, {\n      \"vertices\" : [ {\n        \"x\" : 2.03294206800637E38,\n        \"y\" : 2.94066830621755E38\n      } ],\n      \"label\" : \"fugit\"\n    } ]\n  },\n  \"textAnnotation\" : {\n    \"details\" : { }\n  },\n  \"annotationSource\" : {\n    \"cloudHealthcareSource\" : {\n      \"name\" : \"Miss Melva Cole\"\n    }\n  },\n  \"resourceAnnotation\" : {\n    \"label\" : \"non\"\n  },\n  \"name\" : \"Mr. Tamara Sauer\",\n  \"customData\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe3418d1-bfc8-45fd-8522-c05a86d3700f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.60625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.annotationStores.annotations.create",
          "schema" : {
            "description" : "An annotation record.",
            "properties" : {
              "annotationSource" : {
                "$ref" : "#/components/schemas/AnnotationSource"
              },
              "customData" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Additional information for this annotation record, such as annotator and verifier information or study campaign.",
                "type" : "object"
              },
              "imageAnnotation" : {
                "$ref" : "#/components/schemas/ImageAnnotation"
              },
              "name" : {
                "description" : "Resource name of the Annotation, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}/annotations/{annotation_id}`.",
                "type" : "string"
              },
              "resourceAnnotation" : {
                "$ref" : "#/components/schemas/ResourceAnnotation"
              },
              "textAnnotation" : {
                "$ref" : "#/components/schemas/SensitiveTextAnnotation"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95185111-2cf9-47b8-8f7c-cc596ebf928f",
    "name" : "Lists the Annotations in the given Annotation store for a source resource.",
    "request" : {
      "urlPath" : "/v1beta1/cstowtteewslp53h3rz6bye20ge396h9oeu1y5a5ot6lighj28uns0yl7lkfvr146vjfhppyqz12p4r4gniuu0a04ll77zqs60syl9zlu1qisp1gykldguq7dk23zy1c0d561mv5elfwhfe2sym7bi45f91omlupfynzdnquoxuz4jrqaih8xpq/annotations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"w1ayysqlxys8bkhcg1bhb9wm4vwopwu8k7y9cw9l81iz51mj3fbfs0h19l66iosdsek25927gsgxgo2cl0ooelaoxbhx0jiwk5h91fozmlqqftrk1zqxt5iqx06cka479tt1cy3elz095jj0zc9p87ld0kxg2xazq87rh2b\",\n  \"annotations\" : [ {\n    \"imageAnnotation\" : {\n      \"frameIndex\" : 169142881,\n      \"boundingPolys\" : [ {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"quo\"\n      }, {\n        \"vertices\" : [ { } ],\n        \"label\" : \"beatae\"\n      }, {\n        \"vertices\" : [ { } ],\n        \"label\" : \"eeeet\"\n      }, {\n        \"vertices\" : [ { }, { } ],\n        \"label\" : \"accusantium\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"natus\"\n      }, {\n        \"vertices\" : [ { }, { } ],\n        \"label\" : \"repudiandae\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"eeeet\"\n      }, {\n        \"vertices\" : [ { } ],\n        \"label\" : \"corrupti\"\n      } ]\n    },\n    \"textAnnotation\" : {\n      \"details\" : { }\n    },\n    \"annotationSource\" : {\n      \"cloudHealthcareSource\" : {\n        \"name\" : \"Azucena Schultz\"\n      }\n    },\n    \"resourceAnnotation\" : {\n      \"label\" : \"tenetur\"\n    },\n    \"name\" : \"Phillip Cole\",\n    \"customData\" : { }\n  }, {\n    \"imageAnnotation\" : {\n      \"frameIndex\" : 1264541483,\n      \"boundingPolys\" : [ {\n        \"vertices\" : [ { }, { } ],\n        \"label\" : \"eeeet\"\n      }, {\n        \"vertices\" : [ { }, { }, { } ],\n        \"label\" : \"adipisci\"\n      }, {\n        \"vertices\" : [ { } ],\n        \"label\" : \"corporis\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"sunt\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"quae\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"quidem\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { } ],\n        \"label\" : \"iure\"\n      } ]\n    },\n    \"textAnnotation\" : {\n      \"details\" : { }\n    },\n    \"annotationSource\" : {\n      \"cloudHealthcareSource\" : {\n        \"name\" : \"Somer Kassulke\"\n      }\n    },\n    \"resourceAnnotation\" : {\n      \"label\" : \"quod\"\n    },\n    \"name\" : \"Hildegarde Hudson\",\n    \"customData\" : { }\n  }, {\n    \"imageAnnotation\" : {\n      \"frameIndex\" : 990325927,\n      \"boundingPolys\" : [ {\n        \"vertices\" : [ { }, { } ],\n        \"label\" : \"occaecati\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { } ],\n        \"label\" : \"dignissimos\"\n      }, {\n        \"vertices\" : [ { } ],\n        \"label\" : \"possimus\"\n      }, {\n        \"vertices\" : [ { }, { } ],\n        \"label\" : \"blanditiis\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"nam\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { } ],\n        \"label\" : \"neque\"\n      } ]\n    },\n    \"textAnnotation\" : {\n      \"details\" : { }\n    },\n    \"annotationSource\" : {\n      \"cloudHealthcareSource\" : {\n        \"name\" : \"Celestina Sipes\"\n      }\n    },\n    \"resourceAnnotation\" : {\n      \"label\" : \"molestiae\"\n    },\n    \"name\" : \"Floyd Bogisich\",\n    \"customData\" : { }\n  }, {\n    \"imageAnnotation\" : {\n      \"frameIndex\" : 1452890814,\n      \"boundingPolys\" : [ {\n        \"vertices\" : [ { }, { }, { } ],\n        \"label\" : \"aut\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { } ],\n        \"label\" : \"qui\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"dolorem\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { } ],\n        \"label\" : \"sapiente\"\n      } ]\n    },\n    \"textAnnotation\" : {\n      \"details\" : { }\n    },\n    \"annotationSource\" : {\n      \"cloudHealthcareSource\" : {\n        \"name\" : \"Miss Lourie Weissnat\"\n      }\n    },\n    \"resourceAnnotation\" : {\n      \"label\" : \"illum\"\n    },\n    \"name\" : \"Mrs. Franklyn Schmeler\",\n    \"customData\" : { }\n  }, {\n    \"imageAnnotation\" : {\n      \"frameIndex\" : 1033063609,\n      \"boundingPolys\" : [ {\n        \"vertices\" : [ { }, { }, { }, { }, { } ],\n        \"label\" : \"sed\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { } ],\n        \"label\" : \"iste\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { } ],\n        \"label\" : \"aperiam\"\n      }, {\n        \"vertices\" : [ { }, { }, { }, { }, { }, { } ],\n        \"label\" : \"qui\"\n      } ]\n    },\n    \"textAnnotation\" : {\n      \"details\" : { }\n    },\n    \"annotationSource\" : {\n      \"cloudHealthcareSource\" : {\n        \"name\" : \"Valery Mante\"\n      }\n    },\n    \"resourceAnnotation\" : {\n      \"label\" : \"dolorum\"\n    },\n    \"name\" : \"Loren Mohr\",\n    \"customData\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95185111-2cf9-47b8-8f7c-cc596ebf928f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.605528Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.annotationStores.annotations.list",
          "schema" : {
            "description" : "Lists the Annotations in the specified Annotation store.",
            "properties" : {
              "annotations" : {
                "description" : "The returned Annotations. Won't be more values than the value of page_size in the request. See `AnnotationView` in the request for populated fields.",
                "items" : {
                  "$ref" : "#/components/schemas/Annotation"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f2df8b94-308f-47f5-88fa-ac9784b26a63",
    "name" : "Creates a new Annotation store within the parent dataset.",
    "request" : {
      "urlPath" : "/v1beta1/6yzv5zrivndkzmbarckvg2pg96bcn4cztk0owo5x0oj3btme78q6ayx60pz9muvra/annotationStores",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Maryjo Romaguera\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2df8b94-308f-47f5-88fa-ac9784b26a63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.603649Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.annotationStores.create",
          "schema" : {
            "description" : "An Annotation store that can store annotation resources such as labels and tags for text, image and audio.",
            "properties" : {
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. User-supplied key-value pairs used to organize Annotation stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the Annotation store, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/annotationStores/{annotation_store_id}`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0faaac40-e749-4f53-b768-32a37c7fc644",
    "name" : "Lists the Annotation stores in the given dataset for a source store.",
    "request" : {
      "urlPath" : "/v1beta1/97tt22epimvcuofhcqn2toilxxulf8f3f08pimmqci5x5oice63d9oj4ob5ey6gn3ja49bp85ertkamix24cs6lqrezem58v4lzcyo8ng968zxqhnamnwfx3kar7rfqn847oa6u3bb074nnegy5bs3j7pbdhqcredauh79wws9jhtmdpaml0keqm4a/annotationStores",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotationStores\" : [ {\n    \"name\" : \"Young Donnelly V\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"48dilr620nu2cw2k9bgac703d1vr93qys5x17vc2kmzyq6io1kfsvq4xhoe11itj00nnpdrzgtiim2kfmq1vxo8izwik2dglgi604gkmi0ndo49k2lruet4jljqhmws21f40ccfu9ajpkpyrs5sbu57vv6bs6bi5xqebk257e5ewd4xxw59pwxr3rws5y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0faaac40-e749-4f53-b768-32a37c7fc644",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.603535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.annotationStores.list",
          "schema" : {
            "description" : "Lists the Annotation stores in the given dataset.",
            "properties" : {
              "annotationStores" : {
                "description" : "The returned Annotation stores. Won't be more Annotation stores than the value of page_size in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/AnnotationStore"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "369219f7-c790-4cd3-b961-e2fd524b96dc",
    "name" : "Analyze heathcare entity in a document. Its response includes the recognized ent...",
    "request" : {
      "urlPath" : "/v1beta1/2zsldty1uzle9lm3xz3z2gnscrqzonqxg29omyr9i5054jzaqeuw8etpnnruc01ksqakp6g7c8oaft81rjvjm5i3mir2mj65aavwjh9l2kc957fukgtmdxpyrtd59tfp7vjukbyrjyph7lzytyo:analyzeEntities",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"relationships\" : [ {\n    \"confidence\" : 1.4227995660950811E308,\n    \"objectId\" : \"n3x8\",\n    \"subjectId\" : \"943w\"\n  } ],\n  \"entities\" : [ {\n    \"preferredTerm\" : \"fuwzgfoq3si33bib9pznrr1aeyech9o97wx75jaz95s2jjsdvdzg03fftue0d91z4bs9kfc9l4akr04xgru0mh8o7cf4e5ajtip46t9hf0jwjgzxvojjxrglsqpty9ns36pxnfmwalgj3978kj8yd3wypo2vvgcpxhcj3yc8u3t4rwqlkdepuyq7u4od\",\n    \"entityId\" : \"w97x\",\n    \"vocabularyCodes\" : [ \"elteo3dtfcexlaigvkz6ujrdp3ow5qm4by29cew03v9ufdr9r2zutomyj7421xdbf9h8ej0r0xvql86ihjnzbu8s83tu6xdc4xn5vqw156o3yvrkpsn2ns0vbt7t8qonocbiyn97wp5gfwi6jl0tyyf4urzt0p75x89hjz78fbwhn9axvtwqektzr27\", \"06jn50as1n9a77k0mlsij29ojz27ve1khmcjd1hl62\", \"d6vf3hh1fjdeydagld2mkvwwqbir8wynsc3rkrlj7sreooyzhurrndoxtgvg7zw2iozytxvsq2tmgb4nhbt4xcj6q3ynhda7e34unvt89rm4983mt\", \"wedoba35vwqtuwahz3b1p2zycc2rfmmvop9yrore2pm4yn3oai6ygzn\" ]\n  }, {\n    \"preferredTerm\" : \"px5h9wnv9mvzkoy7d4e1x63hx6920udohdzl60ysb2kpur4kg5nagyneb6324art6b295dvqmnj90gr78lli01jucqj2phuq4u2qnj407r2i2\",\n    \"entityId\" : \"34s6\",\n    \"vocabularyCodes\" : [ \"goj386re1ecol0vgz93a5kulg3dnd6x86jiv7auj63zliurw839e1clpxhwacr5pmdkjdfy17s37bfs6hehnusi4byecd95y9ivraiu28952hbfj3rnlhouzfor89vgg72mxfbuhwirs31c42gvlsj8qktki\", \"2rdasomlzcen0xme4fxa75m5wemi53iezehof8a6406e5et7isftj4yrt47q6438oh74lcge2td4jxiq7fjn9u68exq7l256dp5hfhznmjg402txmoz0j3pml\", \"4r4vzikzwyr6rd7jelul2ljonyo1flg6no3o1ux7m5e0nvldo5thhl5a1m7p1quuhgq9af3wkg33g4terql7tcgcg02wik8m671pz6hgifl21wqiywrv70z69d7t8iy35dc\", \"xw97ui9tqh4zored1k2vnmo5mwp1g9ommk9vqb50w5dh1s0urjgzkxpehxp20rkydrvca8s3yf1dgfent7munbzk2buqqslxrx7xdvam4t0z38god3tz87iz2uo66yxmhhtnsnmr57raafmhx4c36350froy2badxb2qbfu8fw8cak4n6hf2elt16pdtfcxudkh\" ]\n  } ],\n  \"entityMentions\" : [ {\n    \"mentionId\" : \"1606\",\n    \"linkedEntities\" : [ {\n      \"entityId\" : \"1xf8\"\n    }, {\n      \"entityId\" : \"29w0\"\n    }, {\n      \"entityId\" : \"y46x\"\n    }, {\n      \"entityId\" : \"41g3\"\n    }, {\n      \"entityId\" : \"f3br\"\n    } ],\n    \"subject\" : {\n      \"confidence\" : 8.675570683626165E307,\n      \"value\" : \"99t5dqn5pe52mfmhtgqc3r9ojjf2g1cipc3u2be95x93j8cyy833kcx7mwh2imupveks41orohlmtq60um2dw029xwt11qx1fpunyexuxdj\"\n    },\n    \"confidence\" : 4.0796071577138847E307,\n    \"temporalAssessment\" : {\n      \"confidence\" : 4.2979216594324255E307,\n      \"value\" : \"207huipf03nr8e9p655slz6p5atkykzw1eunynqco7km2pa6vfasdt9nc0ortm2xq06qocvswwuzkz3flbd7ipavpquy2agwubkmxzp83vsxhm6toq5m4a9vyjy51w55kzv35\"\n    },\n    \"certaintyAssessment\" : {\n      \"confidence\" : 8.818338563371966E307,\n      \"value\" : \"8j27v9z5qsbgeliab4vr7zqwpcex3vw3977ppe1j3ji86johyowvjis6nwzl3kp5uzwl0owlrha3wb6k43akh47wtdetflwpyx88ywytwpuayeqbh1il9jewv\"\n    },\n    \"text\" : {\n      \"content\" : \"Quis tenetur aut fugit occaecati iure recusandae animi. Culpa error odit non quisquam sit. Totam voluptate et nisi dolorem. Quisquam fugiat ut ea qui. Asperiores quisquam ut architecto consequuntur.\",\n      \"beginOffset\" : 1299411513\n    },\n    \"type\" : \"95q6d49rwws4dp31zo34bkafc1fsmun9d5uceh0oof779nxgcmotrh2mtdhbtd7hnf69trz23anxk1dio1ryjs8vvfwtmlal\"\n  }, {\n    \"mentionId\" : \"s6dm\",\n    \"linkedEntities\" : [ {\n      \"entityId\" : \"834o\"\n    }, {\n      \"entityId\" : \"mt9i\"\n    }, {\n      \"entityId\" : \"34k7\"\n    }, {\n      \"entityId\" : \"1nzu\"\n    }, {\n      \"entityId\" : \"z8gg\"\n    } ],\n    \"subject\" : {\n      \"confidence\" : 3.790062517512864E307,\n      \"value\" : \"g97tmg1uvqcsuwula6923hkc7y0eebnhuwylw4kmc32fz057k4jys2nbfyhssgho5m79x7w53fxec4nzsnu7y3edbkbdpkcxtj0daxvm4b86exkssrm26jttevgmpakrlu18aeq7j7bochbvbjnrwbbfipy9fj0wjl8km6\"\n    },\n    \"confidence\" : 2.0853207558821258E307,\n    \"temporalAssessment\" : {\n      \"confidence\" : 1.452722432043812E308,\n      \"value\" : \"4s4qui6v04m3anr6sflfl2naf5ghtrzs9sib3es8cwu2xb7yuvlka24q1c75krixax1g4k8jtuoq44epy5k7038u9eili8t8bq2e2xxyqp\"\n    },\n    \"certaintyAssessment\" : {\n      \"confidence\" : 1.5468116851658734E308,\n      \"value\" : \"wi9bqnocwuaayvczcq1p5yt7g39ezitktl3iiqnl7sc3jhbom825ngohpijt4vfmntbvobqmbmxtfrslp7mhmeh51rfzsaon9r9bdr7u06x3isiv6uzqukxfosgist1nnzifcxvaxl485kqtxg05qicmy5ezyb9doxwx1dx1cyyifjo46qxka\"\n    },\n    \"text\" : {\n      \"content\" : \"Amet sit voluptate ut quibusdam similique eos. Beatae aliquid impedit illum ut ut. Eius delectus ut est. Et quasi magnam vitae.\",\n      \"beginOffset\" : 2090655113\n    },\n    \"type\" : \"8xhhwea41ysuu1k21nv15e7in6sfxqo5es8e9vfa1hk\"\n  }, {\n    \"mentionId\" : \"p86v\",\n    \"linkedEntities\" : [ {\n      \"entityId\" : \"1664\"\n    }, {\n      \"entityId\" : \"4s11\"\n    }, {\n      \"entityId\" : \"yl2h\"\n    }, {\n      \"entityId\" : \"i125\"\n    } ],\n    \"subject\" : {\n      \"confidence\" : 1.7854319369845977E308,\n      \"value\" : \"20p2cssyqdk3ez91bh9sts277zhb9qjfzeu1a7g4w65qwbz0u2lw1dkmau2p33by5djvyt1ebdabl2uglbkxag99itmchqntxswjc94uolp5x\"\n    },\n    \"confidence\" : 3.0083268613232583E307,\n    \"temporalAssessment\" : {\n      \"confidence\" : 1.1793037617393764E308,\n      \"value\" : \"pmbp8a9rxpjj9fglopbfn2a8n3vrdxu9h308j89i96e9j9vcsfb4ag36ujjgeb9brg0rziw7ktdh7ou2hblv831n9xj568hm39g434mqtsqwggo7t596jxbseyp2h8zq1xhdnzmi1408rheihx\"\n    },\n    \"certaintyAssessment\" : {\n      \"confidence\" : 6.588041025340231E307,\n      \"value\" : \"65fn9qhhzv3pkk1858hzvys7c6jqopbstb97n35doaq3t6gwcj64ufznm106j8f0wyvmklgh\"\n    },\n    \"text\" : {\n      \"content\" : \"Rerum adipisci explicabo rerum distinctio et illo. Libero fuga error nihil et. Hic dolorum nostrum.\",\n      \"beginOffset\" : 1800955977\n    },\n    \"type\" : \"mi0u4rpza3piirazbkfejpp5a8cucrnjx7lds9judh657tf1bm05mu\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "369219f7-c790-4cd3-b961-e2fd524b96dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.603385Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.services.nlp.analyzeEntities",
          "schema" : {
            "description" : "Includes recognized entity mentions and relationships between them.",
            "properties" : {
              "entities" : {
                "description" : "The union of all the candidate entities that the entity_mentions in this response could link to. These are UMLS concepts or normalized mention content.",
                "items" : {
                  "$ref" : "#/components/schemas/Entity"
                },
                "type" : "array"
              },
              "entityMentions" : {
                "description" : "entity_mentions contains all the annotated medical entities that were mentioned in the provided document.",
                "items" : {
                  "$ref" : "#/components/schemas/EntityMention"
                },
                "type" : "array"
              },
              "relationships" : {
                "description" : "relationships contains all the binary relationships that were identified between entity mentions within the provided document.",
                "items" : {
                  "$ref" : "#/components/schemas/EntityMentionRelationship"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "82c57d3d-002d-46d3-b9b3-8b43a9ba2621",
    "name" : "Revokes the latest revision of the specified Consent by committing a new revisio...",
    "request" : {
      "urlPath" : "/v1beta1/Mignon+Hackett:revoke",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"revisionId\" : \"0w71\",\n  \"metadata\" : { },\n  \"expireTime\" : \"2022-05-29T17:45:31.597981Z\",\n  \"name\" : \"Arianne Lockman\",\n  \"policies\" : [ {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"hl86\",\n      \"values\" : [ \"g0lminfkm20d045nsf535uz1\" ]\n    }, {\n      \"attributeDefinitionId\" : \"5292\",\n      \"values\" : [ \"7685x55f95hqcty7h6164oruaoycqoqi42qsbi3ioknp59qwgr3f3juris7p8ye6hk0g8sffh5vj8jql63qx0a59qbapwlb4w\" ]\n    }, {\n      \"attributeDefinitionId\" : \"w638\",\n      \"values\" : [ \"xx1tzvyjzex4j1jl9yrpz1my98lnm4gwolb8kpmbz0ho87jebyq0ic9vyuqzo596yhdoq6iaizw2jm3f0b06n1trkjmkdcopx5npb03106ztzrrtm24repezaq149j1wyo57uz069ijrdpie4r9r0jrfyg88l6cghwfa0ifxx\", \"cw2wbl87u8l7ptj25iaf15rq7auh9xajsdo9k085yfcyje9nca7ffeh2mgzk7diescmmod2nwk4mgu7pacveq4g932cqmantpf9k77f3fcevepx5m1p0igwm03wjjj\", \"on5s36zktn1e113218g14dcjpp6ro7h5wc27yc4l47r03ahf0fjkx1sx1lhm5a9zbf0ndrc1awnci0sqnwg2ojty2fzkyhzpzzhdtumqbdwf20i8qkzwmjq4kc4zrmrc92zjmpvsbfyb31whowwc2aw06kkuev87ta1aekrgtalxuj90vvcrpni9ebbpycmbfdv3v\" ]\n    }, {\n      \"attributeDefinitionId\" : \"44ty\",\n      \"values\" : [ \"wdpzzib3p84q08vqoo7kfvgcfmfqmsi97vb2gure8gjp6ynr9\", \"uh16kthgo1e5q89y5u\" ]\n    }, {\n      \"attributeDefinitionId\" : \"1326\",\n      \"values\" : [ \"hulixzimaq5l0bnmt4yhlr4i5hdhfquvm7okzueaompfxh2wt3hoqmts5c38su5s6e0irf93dxydvgxnxr7t9izkxp8uhcpjk3g3jrcraw1gwawzqfn77rqyn792a8gdtravkypoiat3yorxfb2vg07ue6a\", \"0yzyb60poi57fih392bf933\", \"05axabga0c40wo3bcr\", \"llrqa5dw92jsls242xhr8k9pmhdl18s0nmzs6l3\" ]\n    }, {\n      \"attributeDefinitionId\" : \"xvup\",\n      \"values\" : [ \"un0y8aailt47ut00ya8wbjy1ue4287z2zstvi396pcfyk7l9ueyw6jmmzcvrahnog323a4jtlamf296dteqkklygbccmosg3ppecg0nil97wbjhll2gc34fym5dl0q7n1qf3o29i7e1zfpcrakk3us4kjwgpyybd953kjcygdwbgqvft5p2u9916\" ]\n    }, {\n      \"attributeDefinitionId\" : \"eii8\",\n      \"values\" : [ \"11vft4row8jxwnk858zcu845nm8v45coi17sgh6tu0i557inmrcoqgbqy9sixttgznq71afks3j3ef8udej7iuvwse2ajekyos1f19muj6wd2vx4hlzq5p36xgbu2ux0o3cqi4o62xat97elmhe0hww5sw3f\", \"3n29ebnwx0u1bfjq3w07lh3n40klg61bbfovtqwbemabavfg7esnqb3bslqsnlx5y5cnh8n7iabme5ibtsqumtupti24at6v78grm4jtudrexbmhz14cxjlnw0w79eo9nkyr8htci3g5x0y1pq4136ulp2cqofqw16\", \"42u8caqbqbbk5d4c60f8207hi1ioh6ww4kf1a3czao4kp\", \"r6b6vkhxr3hi468yu3fnoptyk5k5gl4\", \"uzy4jfa108greutoga2g8u6h0h5x8o2wklex32gk0awyytginxfaauchde426hci2tdz9yf7d7pz4djx1ceh7vx37wxj9iexl81pvnao3zvtp2ku6nr\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"b6wipthwmf4n0zmxxziv975j3joygvilklvkch47g8sfrixzx19gqrcbo5783wqkx9ngvvzt1wblex04lcn8898j\",\n      \"description\" : \"Consequatur libero dolorum possimus at. Eius similique laboriosam sit eaque. Exercitationem nostrum velit quasi fuga. Optio praesentium id et ratione officiis quasi.\",\n      \"location\" : \"7piuad9salhgyxn92juu1crscztncx2ug4e5nr6j80u5rrcnlzjklangt8wio93kt9q1qu7x4yz4aq1kmmu9ba2py3tdocrbfoto1146eqlv4a8iq9vo1db2metujyqwul9wy0upp5ksbg\",\n      \"title\" : \"Voluptas mollitia non.\"\n    }\n  }, {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"ql04\",\n      \"values\" : [ \"cdsper3j00y7chpikryu820hnqu0jf0xtynaulb5bwflfzj6tgdexp3glr6592xynlwp1im9kje1j0ni59swwlgyv9tuvq1gulu8c5yvv9vfrl88o2ie91nll35b3kvfukltnndjttjskl5gezoff28bzfi42o03zdxv6gx0d9d7yhr\", \"r6ho3b58yfb12a3gkdn7zmy1ov0eg7xqr64ax2q30s70ma9gtkmkudxbyvjrnvfyi3xv6vj2n7m6eoo0haa2hxu4rfzj8thc2jpbx75w7y0kd69pi4e5dhixa50pmbr9a4u27wfu879jrvwj593dlhk09fq9ijcga7yov134dfmxp3pdqb72mm1x\", \"sz60td2vd8jkr559je37v0cg67jqjt5gp84uqya6z1z9r18mcpehfbzlnv8sa6oavm9yb250f1820b12sfvs2xyagb3kr85e2\", \"ljq0dxgimkgpnlswm9zjio6omby61dlay8qtgm62sv024etuoouc4l4zcu2113qi5zlzquxhc4s507b523rwnyw2stwsm42sryoenqwz8y9tg13s0kwzz\", \"ljuu0q9pdfk7v776ddxdl7yl5e0xund43xhkvfpkqz8vyda8tq7b82lmokq1xtx8ksoysd0n\", \"kypgpaz5orkndgs2q1wva61bqbjuew53dwje7nytz9fgh5ujy7a67reix0sfmcqqdcvsogrojy321t8dvy5wl6pe66joo4af8ftvo3reu6l\", \"f9zkucj03tme07gs3bbfpgbi0ruw1rwi8iz21z4jnfmq7q0vkh3502aqk8h29kqv196wcc5kv4138a1r2tjzd5mlit2373ihxgk9nepfgiocym1v6w8rwtb9ye1txxw398dd3u1o1y09dr6h3i18tbi0mflaapwys5loeanerh6ydzzq6n4bwe6if7b\" ]\n    }, {\n      \"attributeDefinitionId\" : \"ssja\",\n      \"values\" : [ \"u5nmxiqs6achgpjr3y89cf93c6nv6027trxu31qn39sry5ts8emeygh2x\", \"5e693lh2rooiiq57y5nzngr0icy9isw4wydyu271cfj9xlt1px79cgd9ya0xpkqx9m71e3mit2xbh1quxib7k6mjsv0zrewk44nz3rh54lnx2e53sjw9q1mtualq1qtgtmd34ui8\", \"thpfe649olkr757dro7s5ckdxfi1zlcy183kv8vdqdtqfyms3g8c4wpkrux6yjem6io7hzr3lo0aduoh60wp2j62t2l9g9g2fauekjeqe7mltjghutlabl3vepq6f3864lt7wo\", \"ckci0d1sjtf0epy69ud8tlznc7s895by88kq86f3g1jsvsqvpv2ztfpamzypyzb2es8x5p1y3y9nm6zagn1achxj3b8ck73dwdg24ghv0t8u4tbr6p3z0h9092t4bp3lvm0ykt9xjxwhwro7jyjo\", \"xyxw3q3if4hp801zz83okuxs9pv4iqcu58b04jaqqatoyk5mkt7vr7s1f08b4nxvrmqz6y0m3607e3eh4x7440jxduutm01v74zejynajs6gb0x2gg62zgjngch5vlcyckmdhay76y69t6ydgdeug2ubcxol73a87vrvngigwjaowrwovk\", \"xygjkllp\", \"3fklta5ubo6sa3w6hd3siekg54lcdcml047r6288lagfbwbl5d7u146yga7gr3mlr4uuru2wuxr46q2fxrds6wl403wgolk9049z1q3tl9zvup8fkauweu56pv40sagaf44gfrezk5tdz\" ]\n    }, {\n      \"attributeDefinitionId\" : \"2ti9\",\n      \"values\" : [ \"lwd077r6j3cetciv6hw1om4zob70inq7cmcu8tv5rg1pful3peirca4dzk5fha0n5ie5nj5x246tdfi4kvhz\", \"wdqd3yi92ek09sswslh6sfpdyhfnn8sljfgyzp9knpq34g17gvlxs0rbbuhhdawv5d7wp4s1pbdwnhbhm69awn0wyrkx8autr2sexz37jywq4bb55igesrzcwhfe9aok4vftmmqu1pxpct7axo3xd1k3ch7e6swa5fb4q5ea3k9rwwlabj6u59f1\", \"ti7lw8ejwvmtg742judd8491jmrtdyuv1pfdjivem7qj2bcas7rhffl4j0q09ffo7xr2ef7wylu1dmymkfelj51h4r0i4xooqmzjxkx8htevt0fy8rr2xshumugpew2x35\", \"vceoynek5hur00olegt40x717rizvg2empy58pzd5v0zdfqt1th2vr2jctdlh9q1b8rw4otxsq4dmh6l08gyx8s3psr0lkfsh3l03h8t5c2x5h0j77uaw1pcra9u5b7th0853rt9xqhbw3909jb9j923uy3dbqlw2o37muy0rkjoqgoza4ifi16wd3l051i2xn0iur2j\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"m518gaxtlqv9dg8y65nvnzk665xs905yqur1nh4vwftp0pwx42lx8aqd0o7nnat9ef5hbk9p2ksw15ju5xpgtl34iygc1hglotwg517gezpkltrll6fz116ptndusb\",\n      \"description\" : \"Ab cumque adipisci qui expedita eos. Ex fuga ipsa facilis aliquid. Eveniet consectetur veritatis ullam veniam. Architecto modi ut aut.\",\n      \"location\" : \"p29y7tj7v0lv6lt3kfwl5ii6fl66u9bl03zxg333iw8bqb5x3wl4jgwc99ufe48gw144dm7c8talnorv2zmk0psx047axwov7q6raeolt4b3mvunh83em1fn7b9xfz7l2hmynr53dojblg2ob1ner00co67atfei004gh9v4fal7ev0q13oku6rg1gv2yqoqnbsmy0pm\",\n      \"title\" : \"Error aperiam modi facere.\"\n    }\n  }, {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"l2x8\",\n      \"values\" : [ \"j39k09uchvo1uz12c0fh2zkuei6tcmsv19avcfde2cgltnitxzelr7ksylj6i4gx\", \"6cwxo9yz6ksxuwbnp93qv0kfcc61cu12x87e82jcax49glafp7i7y44viai49hor356vymfw9ggndne7mja6tulwobc\", \"jnlffggh56n9yf4lhk9aopbfb4kg6vsyn2oqq70xj24y6lyo81iw1j6ji9ds3a0071\", \"pr1tz3m548eicm1yl8huu8ym92jbbpunvrsb7njp34sp4w1bc0caqnq74voqars6tno\", \"dy4blj5p1i9o8946aasz1g4qyt5y2x9xrtspyx37i3lyyah4pzhvn4lrhvrgeaqwhl3r6ro7czajh32kufbwflbrrhu3dhinx25sadlty8yd91sjkqeil0m7bv0xry\", \"sznukmwxrcuntnyg0jlin7r8x0s1exv8npv672yrbjk23lyjbren1kca0ym6ycckbhmwa0vr6hgdu2etpv4gmw6profgh3qawi951zmey1zfe9csauh5ocz2afrj3wa\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"fphxpp8m4oqq7cw43wjqhll1rlijtt7dm8kq2cujgfkk9ybtwvyypq849wtav7vn9tc6jaa0\",\n      \"description\" : \"Tempore et quis amet aut. Dolor quasi sint est molestias quis voluptatibus. Earum accusantium asperiores corporis velit molestiae saepe qui. Voluptatem quibusdam tempora expedita aut.\",\n      \"location\" : \"h56emwbfskxqkah75ooke6jqv6f7ehjvqqpkr5vsuykxqpunsetivb6wttbfj48847ar2j7fp9mewiy2d3bk16chycw7b74amw6w0xd0l98i6\",\n      \"title\" : \"Impedit tempore porro maxime voluptates autem amet.\"\n    }\n  }, {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"4ey1\",\n      \"values\" : [ \"osz1dm0myvgdfsqycgz8lbfuc25j1usqubywqzipt3y69ekn6mpshgku35evyieuyx4rpyfnd1nwymnfcdw64avaf60fw4r86ythuz8zsekje2u35qfivcujel4yfjt3tccgtfbhp59rl2wa9trsqejgug68rctb4lxyhs5ioswv2svxh6fsxw0qy\", \"c6mbpicuojw0zr0kessyxwx9ysax5se6504wbavg3l63k9dm5kyu65yjc8lht3lf48jkorcfqquegksv18kc3tg2o4kle8he9lc\", \"qmtwhmf3z1t0xd0sobtodblkrx2oohuediye25idjik2hvy2g1ikp1hchsntvkbyjaz6vkw8x702b7zas8go861j8x8202un6t4z8j4\", \"kd7ly8qeeh6tnjvf15mk4a\", \"9v5p6nuhm3i60lqyusb9ut8dgoeiymzwtowxj6svf76cl57cntlw58rcw9bofiw0mji196tgyhpef7ucb56mrm4loh1gorlgymhdcr7fchbezv6gyosl2\", \"3hxd3nsnvxx4kpaajqo61fa61zsjw3fbteae1uo0f1958tgp7sxsn3b5c7dmd0f8hryk9e4z56p33gtosw0vaki52e9vjr4yyj4uihe9df0pk6jabq3w8xtxlf9k2ij99rofy9rxbpjpl49k1e6bpv6e4z7nxahqdzo\", \"3g29lcvls2ec5bnzdovlrq75u805324rn0g1j1t0oqo5znavvcl2my3xxwt4kpnsv8r7z8vy\", \"n9svj908mp983khgdq41pqj32b1asujuodpcqqky\" ]\n    }, {\n      \"attributeDefinitionId\" : \"0vtn\",\n      \"values\" : [ \"5bqfwb8dg04a31f9pco3wwa1xu992hy2avsjsyvr0vw7ky3xzbuy41n6yqmvhnhwtu75u2wdn6uvlf3rcjfk2bxrkp7vivy6q98hgxowuuojmma6\" ]\n    }, {\n      \"attributeDefinitionId\" : \"1j8t\",\n      \"values\" : [ \"kbdk3zh9slqs6e3j7zz5h8090ix6pf94rmldkk7g3fqstanvyb2hijdkad5pquj0goy2a7tbko79yig0q7ajjv08xo0z7ikjjw8umdi7tgmxwplq2k2n6ko7p64sgxqp52am1tqqmrj7gsulu4csoy1cvom38qyipfhmql512u\", \"co46me94essjwfx6dnmg6v79jnekhovjp342lmapecztkkhexm5vouyeetxs0eop9ertgtardaq7sphoeblb5i9bkwluf7v0tvonvkmsq21a2n9h9wps3saociny0y508ocxemdyb80s4gp0mn2jvb4ovxnslc1k7zndwzf68buj4ve3k2\", \"22kdv2mh7qt9jqqoxb2cijksc99u238nw09v2i1ax\", \"sixrbj90m7p8j2ngp8isbzgoo8y4ubwnosoleyp21byzlfic9iojxlw315nl1ftd1zljskvbiihj33n0ucavv3\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"yven8gehqo0fhgqllq1mjtw8bhd8quyyth3duuyr7tvwp35yb4e\",\n      \"description\" : \"Modi quia vel voluptas reiciendis. Iusto tenetur voluptatem. Voluptas voluptas nesciunt est atque aut velit. Pariatur quasi ut. In quia molestiae et ea aspernatur ipsa.\",\n      \"location\" : \"wd83prfqst76rup3g337i8ck4x43ee8nb7dsc7qdhrd5x77qsiryqpojsjmey2c1pspricl5gh0ugkl3ab1tldmcri7y23q6rh9bug4lkw\",\n      \"title\" : \"Velit sunt architecto consectetur libero doloremque non.\"\n    }\n  } ],\n  \"consentArtifact\" : \"8l30jibkvbjxz2sr2fsanyrq28fal6gdvexe0rvnfsnp0pkzlrzsnhjefz1xrf893ey682fm56c\",\n  \"revisionCreateTime\" : \"2022-07-28T16:46:31.60025Z\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"ttl\" : \"91avlhj3lrnuuiv0jopkir2b3ucbavmu9f0icm2qqhzvlf825b1p2g8phrg2mxh7flry7td8mupymnq7hp9eu9w\",\n  \"userId\" : \"n19o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82c57d3d-002d-46d3-b9b3-8b43a9ba2621",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.600554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consents.revoke",
          "schema" : {
            "description" : "Represents a user's consent.",
            "properties" : {
              "consentArtifact" : {
                "description" : "Required. The resource name of the Consent artifact that contains proof of the end user's consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.",
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Timestamp in UTC of when this Consent is considered expired.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. User-supplied key-value pairs used to organize Consent resources. Metadata keys must: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - begin with a letter - consist of up to 63 characters including lowercase letters, numeric characters, underscores, and dashes Metadata values must be: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - consist of up to 63 characters including lowercase letters, numeric characters, underscores, and dashes No more than 64 metadata entries can be associated with a given consent.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the Consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. Cannot be changed after creation.",
                "type" : "string"
              },
              "policies" : {
                "description" : "Optional. Represents a user's consent in terms of the resources that can be accessed and under what conditions.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudHealthcareV1beta1ConsentPolicy"
                },
                "type" : "array"
              },
              "revisionCreateTime" : {
                "description" : "Output only. The timestamp that the revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. The revision ID of the Consent. The format is an 8-character hexadecimal string. Refer to a specific revision of a Consent by appending `@{revision_id}` to the Consent's resource name.",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Required. Indicates the current state of this Consent.",
                "enum" : [ "STATE_UNSPECIFIED", "ACTIVE", "ARCHIVED", "REVOKED", "DRAFT", "REJECTED" ],
                "type" : "string"
              },
              "ttl" : {
                "description" : "Input only. The time to live for this Consent from when it is created.",
                "format" : "google-duration",
                "type" : "string"
              },
              "userId" : {
                "description" : "Required. User's UUID provided by the client.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "90e7f1f5-7fa2-46d4-900b-7c71558734ff",
    "name" : "Rejects the latest revision of the specified Consent by committing a new revisio...",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Madelyn+Blanda:reject",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"revisionId\" : \"7p19\",\n  \"metadata\" : { },\n  \"expireTime\" : \"2023-02-01T18:50:31.596417Z\",\n  \"name\" : \"Valentine D'Amore DVM\",\n  \"policies\" : [ {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"l75p\",\n      \"values\" : [ \"hd37qgl4108xkdk1idqqs1kcgxvztrlrj8pkqjzsyemf0n82kl0oog71an1sbkgg\", \"t66marj2osd03ixvt0jf3ue6e27zlhy33ojppac99uwga2xyogzgg90cx01k6ofdwukxp2o071vun5lu9dx4471d7hmq34nhaocragdfidukxb2fjk8gayncw014ohrg74frvkdamcuchcg2wggkzo6h8t278iszwkdo0my2foqninfqn9io6j00z9qeb159qwzv\", \"xzdouqdbnecq5417fc1stcptt71gjnmprgqclm4to9yi14z3i7qbbii79j0a2fz96rcsve04tvzv4lbj6huo25zev44nfil5rarn0e3rwbj57r76pr6nlvgt1pw29wj7u7n2zar7iyk3l2hgxpkg5m8bsekksdeujm15s5dd87wlrt2d1iyqp74i1g5p\", \"fpa2v4mi5cxzwvx0hiezhebpxyx45akfhleyvrtsj15m5j71bwpbfhtuoweea72yt62rpis1\" ]\n    }, {\n      \"attributeDefinitionId\" : \"jzy3\",\n      \"values\" : [ \"51dvpc6801n4uwnh9gvw3a37dwvh1vpm2se\", \"y35f5ctxovzqcutwi281wdfs85ihu8undpepytlrhnfptx9ef7u8bnkcjksbct2y3ysn4c7kvuop58eodh2d1p9l3geq2bw82xj8rjhefsbei7m3k\", \"oyygfybyw07t11qwov3brzyjmwj5gmiylswskk7f91zr8na9avqhs21tub6lwhjs4zu4phabl034n5dtri7vfgw4y7v6r\", \"rgcwka4yog31z0a0zjsqwza8afc9fwc04pfc8ro7tvsmj245zkqo5wz9soydk8efyiy4ipaiayrm264oo54rot7myugb9dmq4hfvk9vt9l5auwkxkjh2fcwufm7vldummym07ydjds\", \"e0tuiero7z4tse7ygelitx6ein5q4xyued6o3zlfh559zjnec1vhbeehk3wx1lco6f7lndcy3ijw21lzdw\", \"zqypfolod5os72p7be3nzx2x0o4r8yszj20o183bbmlln739qz050yzxzfeaa1n6xhhlbfjyffh0gtkvgx\" ]\n    }, {\n      \"attributeDefinitionId\" : \"9380\",\n      \"values\" : [ \"pvcs4obwhdc5fbjck89g9gc31rew1wsses26j14ju3rec259huomi3yu7jidd3vzp3udnazflzdeg9bf5qe4vnwrg0n5a8cg4e06tvdea9mljlgdoq8lqlqayoxq3nitrjokv8ti05y1rd4haxjid5pvvx8wwuacwlu\", \"ogeb7mw444m3l4g23j3ukvferabcmfl6cm331yupbr1zje6rxa1xwlekyvqnsbtdkbsagrmxbjlirei5z6tyk9k07rjozf37e0c5ulo9i4di9z2w3pqvox3amq7g7fm8k236kn0p6ud\", \"atgho5aj7i0ir6ohsmnykjakq6wkzjucls6x6563zwxr2v0t4tzcnabnvm81vujpfod035plrk\", \"dsb5wc4i7ct0kzay636kyf0dqls7c57v6gzm9rffk084j7yzt0qcsl0og2cabsp40e7umk0ugjjb7z4nojfloa3x2rzrdklu\", \"roai12coang8jd\", \"zyavtzgkachpdfk1m88ql11qmre8pifi0cri0cflx3lkrpwnms8pkxkpfk1aezgi5okepwt65jf4w5cioo3ll5febh608cs1u9ltxsut2uy1d44jdmhxecjqmubehh9dbmvhs3qghuy7a\", \"th9ltzhicalzii1c2u2ftuw8ttg9303pxq39k7gxlk\", \"j8wjl1zyp8smua2954q0w75edt7uie1eeaec1xs8i1bcawr9bjbhjcinylpbhc3bs42bwg3vz29prxbythrrryoi8g89fqf20xfdel578zq5v6bxwwft4gyrva7svf8auvywrlckke59k2migha42i8ktbv\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"5k0k2pjd9wyex5dc6funn05isn0trczf5rssmfv36ysdi1hhjm3xeam8dqbuypek2b8cwm55s2ndvg5g70v5pzksmkc6ynryacltm3r4k087cusxtpmgdsyq93ayoi27jqmipdgctgjp1us0xxn8px6g85a9kp7k\",\n      \"description\" : \"Reiciendis optio temporibus est facilis vitae consequatur. Sint voluptate molestias tempora illum quia ad ut. Architecto cumque debitis nam numquam. Dolor quibusdam beatae.\",\n      \"location\" : \"gpcwghbkq\",\n      \"title\" : \"Voluptatem non accusantium voluptatum quia aut delectus.\"\n    }\n  }, {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"d0mt\",\n      \"values\" : [ \"2c7r05ymjb9d7trtgnxhq8bt35a80o0hcmxk976jpk4r6jye2zpyf3mj34p7gvpbbajjqjp34ngtxgqywyi0itp6vgvwzjznbm8d3l16i01axckjs15buckvsgfvxsuxhwi6ohswn0ezinxbpb1ml2ootgrqnizhh7ylpatm6mgr49q8k83qpc3qjts070d4h3ji\", \"m4peg5so991ar9jlkjgac4u9qd35xoqz7epphl8am80q2ftdjt1xzvm424fbz4kuxix5vhcw5zzv3lsw5v9nhaz8\" ]\n    }, {\n      \"attributeDefinitionId\" : \"5632\",\n      \"values\" : [ \"y5g37ntlsw0v6hxidz4k7hmdlfyqbh8h0xevw2d7peqhxfa3ea931we2la198lpzt0sz0a60286fdj54cuk4d3tb8wm7cyqvgumews8b75qp1dh3qzmnm9qs0b3juzvbeb057g6b4r8v2yrd1ppjgny1m5ute53ocrm\", \"p8e1dsny8pzthpjhayz4xc0spbnk286j7x7fpm9tckba5onr7jimw5qopdnmil0sjretwwm6s8z6q8jrdfe81ga7nx3m9pcdom0ejd6tpb6v48v79uvo4lsbfmakzri7o6k2nmpiqfh4rgcxek15waeem3nxg3vu7f4p2u8001ctrlhas5n4baew041ngtxa6\" ]\n    }, {\n      \"attributeDefinitionId\" : \"t977\",\n      \"values\" : [ \"5k7lofd734kti2tes7uq2fujh1ssf8w7zbg4zhkycds6t5gbqu2pok76ac4a6wgbaz3bee4y2fszhc2qm4awc7a4hflwk0qn3s608ve4crbpjcd1rdv9if13n24f15jltej5v8kjvurzlpcutlxvz\", \"l8xp7eq513p5yr5ajqvgkka8kai7nyyppq6kzxsnaj3hhrrgmshet3mz8dubr5ebziq8jmnh2een026y9xoe0883igt71apzweudl3dhquu2yuyx4x1lnyzh4fmfhpj1baio6rr154109a7c88gnf5tshh9bbmwqossuuyetgo6r76h30xwgnhx\", \"9t5jf7r329ogwvlr3qagovu3i6za370ha23c9aoej23p7vdpv5a6ct\", \"f2wrvcmho\", \"97x2gw85cz2wko7gd5o5hhnpjajrkkbzcqrgehai0toura58b0vvbex15t45qbnutfjqx92t4565zc8y9vy39wnjktfbz8wxl53ahivdkk3yac7vshj2huwdd98881w8415ufh56nysxv8r63ncgts0ektbqu8u4xyvrynp82ilua22vb1\", \"7v06q62ju3d254m0b8b7zg73896awa3howtzji1faabu220mqhw7gmy9lscfdbt79nu21q2j296sl43uiv7rfiod1n5sxbfhq3w3mr3wbejio81f0jxysch3s\", \"qj994t8vkgpcqnlk1ihog1l5zlc3b0k4bx0li2c9ezi80kug3zt4k77u79vjvt84bd1sl27h1gjhv6fjvu1yqvz2mg35a87psp2ajm96dz8i7flwtpn128k2f7hisi0rrvt7iqmy9ogv8yq3zuhpouj1b7dcxqoeyd3rggziqi98n5gqkewbkavg5qzhhwxtpwk3bbb\", \"2z0snt2wkk3okfxv2ibvghelvok9n91y4jjqyo99pa4s6fj2nqlfe7141qmqp9praw5g76hhnq8s3vqxui7sklf3zim6tahpno82et\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"jaeor8fk6nlmw8vvnrfiky3op6lk4o66l5zx5zogzym2x3xypoje1\",\n      \"description\" : \"Sit sit nihil deleniti voluptatem unde. Aut eum nihil. Quae quae omnis repudiandae dolores eveniet. Cum non amet molestias qui iure est culpa. Nostrum perferendis enim quod qui tempora et.\",\n      \"location\" : \"ap1322wigas6qlu867m1sd8dqub7adktgk\",\n      \"title\" : \"Eum aliquam maxime vel qui fugit quam molestias.\"\n    }\n  } ],\n  \"consentArtifact\" : \"zy5smjatm7ie3jfkz5gh1mhb6ucgqzcxsfs4x1ui2jity2lnabrcoyxinltwxenck2820babu9czh2ynt456swnjewhkf4qyomd6ju84ea73ar05ecxpf8pic8wujm5g34ho9c6quesfvy4wwxzjza\",\n  \"revisionCreateTime\" : \"2022-07-17T16:26:31.59754Z\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"ttl\" : \"a4n9goef9jkk7bvr8mlhpf38465xj0jnwpmzvb7n78dr93vggsgqm66c4vqabotmjl1be4ggyayu937eqgoycy2izq4r7wtct5zte3ttqbsz2do5q5\",\n  \"userId\" : \"v018\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90e7f1f5-7fa2-46d4-900b-7c71558734ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.597835Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consents.reject",
          "schema" : {
            "description" : "Represents a user's consent.",
            "properties" : {
              "consentArtifact" : {
                "description" : "Required. The resource name of the Consent artifact that contains proof of the end user's consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.",
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Timestamp in UTC of when this Consent is considered expired.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. User-supplied key-value pairs used to organize Consent resources. Metadata keys must: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - begin with a letter - consist of up to 63 characters including lowercase letters, numeric characters, underscores, and dashes Metadata values must be: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - consist of up to 63 characters including lowercase letters, numeric characters, underscores, and dashes No more than 64 metadata entries can be associated with a given consent.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the Consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. Cannot be changed after creation.",
                "type" : "string"
              },
              "policies" : {
                "description" : "Optional. Represents a user's consent in terms of the resources that can be accessed and under what conditions.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudHealthcareV1beta1ConsentPolicy"
                },
                "type" : "array"
              },
              "revisionCreateTime" : {
                "description" : "Output only. The timestamp that the revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. The revision ID of the Consent. The format is an 8-character hexadecimal string. Refer to a specific revision of a Consent by appending `@{revision_id}` to the Consent's resource name.",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Required. Indicates the current state of this Consent.",
                "enum" : [ "STATE_UNSPECIFIED", "ACTIVE", "ARCHIVED", "REVOKED", "DRAFT", "REJECTED" ],
                "type" : "string"
              },
              "ttl" : {
                "description" : "Input only. The time to live for this Consent from when it is created.",
                "format" : "google-duration",
                "type" : "string"
              },
              "userId" : {
                "description" : "Required. User's UUID provided by the client.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "300cd153-0252-4636-adb0-93dcc0f714ed",
    "name" : "Lists the revisions of the specified Consent in reverse chronological order.",
    "request" : {
      "urlPath" : "/v1beta1/Nanette+Mertz:listRevisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"emsyp0nrvx6n3vm1wog1cqm1krijr29ejx7hdyvns5amdb676e9q9p43krrg4sfvvjvog86lt99ifl6ndlyd2zt\",\n  \"consents\" : [ {\n    \"revisionId\" : \"1994\",\n    \"metadata\" : { },\n    \"expireTime\" : \"2022-08-03T18:11:31.594626Z\",\n    \"name\" : \"Missy Legros\",\n    \"policies\" : [ {\n      \"resourceAttributes\" : [ { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"jlvvkprig6u8ssmu7qm6jdyulsh5mg5ny264d7s81nnufz57vyjj3kejlb958i35gj2hqs3\",\n        \"description\" : \"Sed mollitia iure recusandae quia animi eos ut. Magni et tenetur similique recusandae accusantium fugiat minima. Corporis aut voluptate eum numquam. Nam aliquid debitis possimus odit est sunt.\",\n        \"location\" : \"syh5c27c40obrzb83cx58m4fi5w5qq2vm2hn7ivy5esdiymgn48mol9fvoiuhdkqhk1rygtrfb87usrsa0p3afttkrqdj3msau8mkn96xxikiw8chjwci1\",\n        \"title\" : \"Consectetur voluptatem sunt quis dolores laboriosam.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"sxj9m06d2tvcoa9mux19ln6d82p423dywqkhwvly9lpowl0y1iz5nuwc8men476kxrbwyuure9uf5aknh0fpt3rgr8jslpd4zny2nx43di4mescrxoqypqzxfk4brrfid76ffhg3e3s6vj14v9sj\",\n        \"description\" : \"Similique laudantium consectetur quidem et sed. Quas impedit voluptas mollitia vero. Adipisci consequatur voluptatem perspiciatis. Ut odit eum. Qui qui est.\",\n        \"location\" : \"71yvyg12mrl5ibimedgi9ny78t2g91072dybo75pk7qrmwwzj1pa1n8mad3by93y7amkumrwx8os7j53gz5pzursqgcy9ob0yyq6p5oaw6srivxee3nf33rammf24654u6293xfx2kwn2pmnbwv\",\n        \"title\" : \"Consequatur sit rerum velit optio sunt impedit.\"\n      }\n    } ],\n    \"consentArtifact\" : \"w19ir0auv06b2momz1hslg5kux5ihdrlllzqgqp1gd7estwws972cv0zajpkui2xf6ykdb8lvwnvn02m41wcsv0u255\",\n    \"revisionCreateTime\" : \"2022-04-06T17:50:31.594934Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"ttl\" : \"q4irdl6hm5xjxrr5pd1u3zqwvfck7ooj8tq6j6kfkgrgjmkxx4q4dh6h95d1f0yuqzw8idfczvlqnwf6\",\n    \"userId\" : \"x1i6\"\n  }, {\n    \"revisionId\" : \"2vi0\",\n    \"metadata\" : { },\n    \"expireTime\" : \"2023-01-14T15:39:31.595203Z\",\n    \"name\" : \"Everett Koss\",\n    \"policies\" : [ {\n      \"resourceAttributes\" : [ { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"jidnr1bili8yafl0w6z8qfg1f5v7wmyijp78tr1a8ah97vxo6eue18y2qxtqbo3qucnln0sagz59dzcpv1w7ranpswvc1ztbuzwfmogkdxnb4qmd2516rx4klmp2iofboae18vem31jewempuwpc1csw4kjraa61n2dff\",\n        \"description\" : \"Ratione voluptate molestias nulla. Qui eum quia. Consequatur molestiae voluptatem quas a molestiae.\",\n        \"location\" : \"9u6wtj6jmrepae34yfxca3l638l53hdz36vh5w8xys2sqf7xvf559ro930whvon7\",\n        \"title\" : \"Quia quos deleniti maxime aut.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"s814\",\n        \"description\" : \"Dignissimos at qui. Deleniti quisquam fuga ut ullam unde in. Eveniet nesciunt id ut ut et impedit rerum.\",\n        \"location\" : \"mod8yomewstgesgj9nfla9hx4h3iyv5a2b67i8lv4a\",\n        \"title\" : \"Cumque provident quisquam possimus molestiae soluta velit reprehenderit.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"opdzcc0vuu41nwflu6b5g1f8vcdwayxxq04ge66r0hpzcbgwo3ws8kj7jdy7a35oonzx04ohnwwxabgz0pfnwujunks0h47oep4oci9ngw9if9p6qcefi9uji6tnqbsjivd2c4d4r1vw57rl45nchmdytyu8tu79acj3z6xdny0te3kl\",\n        \"description\" : \"Officiis voluptas eum. Qui quasi corrupti hic nobis. Cumque tenetur omnis quae. Voluptatem et sequi totam.\",\n        \"location\" : \"280oylfoh93gqq3v9j2v8ejzlldre6tc4o3zaed4yncku6o4d9r596aykvzt7v4jbti9spivtxsplied4dspdlmq4frm5qp3vcaksuep60oynp39e6\",\n        \"title\" : \"Molestiae ut at repellendus.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"wg4exh39tq9l3wbyfop7zmjzckjezynfb04qxt8vwv55e0a60onwa2wpndnss3h33x06g2by3iyficks7vjcpufyorf6nt1nqfh21dudsvp2ptnvo1tmi9\",\n        \"description\" : \"Et explicabo sed. Sit distinctio quia. Neque tenetur quos enim. Recusandae reiciendis dignissimos veniam atque eos est velit. Optio sit accusamus ut.\",\n        \"location\" : \"12f0vviaj13sxn0bhfvhhr4nyj94xlpmavyzxsqnc6ehl32kgxdtfsheecm1t543l4sw6bsd4szy6azykensdi1g74trjm\",\n        \"title\" : \"Aut perspiciatis et ea est ea.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"wjmwy6v0vyxeoae6mwsmvhiwqrzcjuie1szkhqy5f3mwzzgs6al2k5atgu07nj0k18x0lms6f8a8layz05mj1\",\n        \"description\" : \"Voluptates rem odit minus voluptas at. Minus inventore asperiores. Harum reiciendis quo at et. Et eum soluta nobis est voluptatem accusamus.\",\n        \"location\" : \"vbj6sbmq5n553xjzmaisjf478oyqk916h4f10pbo8dcs8ekd3ogh24p216fbytxav4pcb1cqpp33gnrn76fa9h48h6tt\",\n        \"title\" : \"Nesciunt eos natus suscipit molestiae dolorem.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"howadt1kvkxgoyqow5t7p62fnl0v3dlle8bkhrfa2url206o3mzp2yndy6xjrfhfsiq4\",\n        \"description\" : \"Inventore sed modi harum quo. Et rerum dolorem possimus est qui mollitia. Rem aut quo consectetur velit voluptatem eum. Nostrum deserunt cupiditate ratione enim non. Dignissimos error ex error qui et \",\n        \"location\" : \"mlvrcihn2lfzhem04w0m0unpc8hz40apm9y1lxvq11b4z3mgrh4c01m856oono2iy8cowbk3ciifw8sbsfcd05wr86kdin6j4j7ctqm5fq0wk6zsa3fhrfb5xgcuvx9oqwzs800\",\n        \"title\" : \"Et nostrum numquam.\"\n      }\n    }, {\n      \"resourceAttributes\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"authorizationRule\" : {\n        \"expression\" : \"8w1h0aae4ifv4j2ahkc27587nkq0vo9rfoiercfuj0ptyi3bwf8fvredhnt6h\",\n        \"description\" : \"Iusto consequuntur tempore. Et et inventore aut autem iusto. Laboriosam sequi enim commodi iste. Sint aut fuga et deleniti.\",\n        \"location\" : \"cdvr8c1krj9ofap99v8h1kpu38nth5e6xhp7vyf3446zefe9prrqkx6m07lnp3jmp0q9z3tyfemlsjlnfsnbdeducs954is6in3pf1vaugvpfm8azml7x\",\n        \"title\" : \"Distinctio ducimus voluptatem dolores unde harum optio.\"\n      }\n    } ],\n    \"consentArtifact\" : \"wloiykurzor2lbo13o91c9o49k2xbce48l3ow5hn0tbgq3w4k5v38rafh3ckmajez02sk1yaxug5v77v3vk95i0b5oxb5lxqyxsxq7t3vn5g3nh1z1ev2ye2ql882vcoplrwadzm6nkm2refxr21iq4avxn5k316vkxt1mgfp\",\n    \"revisionCreateTime\" : \"2023-01-06T17:34:31.595974Z\",\n    \"state\" : \"ARCHIVED\",\n    \"ttl\" : \"2ynxwxeek3eub0ocubtatb43wiqtarvq26yarirr5rikqvpx07vf8qcszi5z6uw\",\n    \"userId\" : \"9ifo\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "300cd153-0252-4636-adb0-93dcc0f714ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.596264Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consents.listRevisions",
          "schema" : {
            "properties" : {
              "consents" : {
                "description" : "The returned Consent revisions. The maximum number of revisions returned is determined by the value of `page_size` in the ListConsentRevisionsRequest.",
                "items" : {
                  "$ref" : "#/components/schemas/Consent"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4552c347-f2cc-44a3-8f21-125e0fc4012f",
    "name" : "Import messages to the HL7v2 store by loading data from the specified sources. T...",
    "request" : {
      "urlPath" : "/v1beta1/Mrs.+Fae+Lehner:import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Solomon Kuhn DVM\",\n  \"error\" : {\n    \"code\" : 1912361358,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Voluptatem commodi voluptatem et consectetur porro. Non sapiente quia. Sed autem iusto officia. Illo doloremque dolor sed dolorem. Dolores corporis aliquam alias error tempora nulla.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4552c347-f2cc-44a3-8f21-125e0fc4012f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.59445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.import",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "65f9e294-f4eb-48fc-88ee-7a6916760cd8",
    "name" : "Gets metrics associated with the FHIR store.",
    "request" : {
      "urlPath" : "/v1beta1/Liliana+Smith:getFHIRStoreMetrics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Danille Breitenberg MD\",\n  \"metrics\" : [ {\n    \"structuredStorageSizeBytes\" : \"dhzuucx6uzaoukiyu5kbztg9y3xxfxa2nq5hq0gncc21vwzwufg19pyk6ih9w58wfzsq82reyvvyui4irwza31assm936u6sm4c9n09zwgzlvrzgq0uowsb0ft150gmp0je7jg3fmepfjaphxezehuq5oo20z1kn530utmo\",\n    \"count\" : \"dhhwkd0gr12zq4lvd620f50i7zfhpzqd7gw2hbfr6plvm00vuphg4sek0gyg6x68hftal54lvbgyj79iqtd0hyvnl46z2sdc8i9b9gpltu63bm9g5wmrzzqt9foj7ypdrt7dn4k7ou1bm0axqdb2u7yv8xjvr4t7vh05w5471g65\",\n    \"resourceType\" : \"gx6gw1yk9hc1lri8tqvq543hnz7o1ut9xc4oh3qi8cwfv\"\n  }, {\n    \"structuredStorageSizeBytes\" : \"g29xaylotl0hhyxharq4onab3nkmt6oub5wjtqc0nc88d8d1dgo4gi7fnlp7qjc30ixi8sxp3qkc750rh9bbgg0fhg8kuh20f8iqpk88wizvz2pk266orjlthbwxrsj528hirm7ww9e35t47zqu59p5\",\n    \"count\" : \"0nl2m3tf3c69do0mnbr4eqwp1sdoz901f2f8wonfrlg2zex4jr54euhlo3kw\",\n    \"resourceType\" : \"adf0yohtgjq835uv4drtmyud18nutwyl4kafcik60v1brk5uq5gprjb6u8s9loczk71dumsc8w9mbbavejijqfzvhi0eitwhr8sjzfwh306qjrs72evt22lwyybdavpg118ory\"\n  }, {\n    \"structuredStorageSizeBytes\" : \"h1i1bb31urpx0jfd77pb5ajxfro2yfg9mscno59rwlclge04x2p5gkmg8dc6ujemx0ctqsrxdg6h2z0\",\n    \"count\" : \"sref3h8x0kglz6500rmo1xd0y0zxsogd4s46fdl5zslrtd5dnh8zazhg4n4fn7zt6sevm9y\",\n    \"resourceType\" : \"g266hxulhri8ebidashl6ah86cl7d49yx7ico5tm6poy7fs2hj74bv2bm5nv1fcz40s1h830m7aabipgpn571pesrdhtv8gz9sfc11cziq22shin16ab9bz92wdsru6ftd4295eqtt9994m9eygnhhw0bphclmd7\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65f9e294-f4eb-48fc-88ee-7a6916760cd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.594251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.getFHIRStoreMetrics",
          "schema" : {
            "description" : "List of metrics for a given FHIR store.",
            "properties" : {
              "metrics" : {
                "description" : "List of FhirStoreMetric by resource type.",
                "items" : {
                  "$ref" : "#/components/schemas/FhirStoreMetric"
                },
                "type" : "array"
              },
              "name" : {
                "description" : "The resource name of the FHIR store to get metrics for, in the format `projects/{project_id}/datasets/{dataset_id}/fhirStores/{fhir_store_id}`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a4ad8fc0-4782-4dc1-a6a9-75e221b21401",
    "name" : "Exports the messages to a destination. To filter messages to be exported, define...",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Myesha+Corkery:export",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jacob Vandervort DVM\",\n  \"error\" : {\n    \"code\" : 936092854,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Voluptatem ex cum. Qui non praesentium recusandae incidunt impedit est. Repellendus soluta ut quia eos. Debitis vitae odio.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4ad8fc0-4782-4dc1-a6a9-75e221b21401",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.593972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.export",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c0ad6003-29c4-4b48-bed9-dd60e1253117",
    "name" : "Evaluate an Annotation store against a ground truth Annotation store. When the o...",
    "request" : {
      "urlPath" : "/v1beta1/Kacey+Harber:evaluate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Randal Will\",\n  \"error\" : {\n    \"code\" : 685595723,\n    \"details\" : [ { } ],\n    \"message\" : \"Modi aliquid sunt dolorum sit. Dicta consequatur ut dicta esse iure alias aut. Quis vero nemo accusantium a et. Veniam fugit consequuntur qui nemo et qui. Necessitatibus cumque beatae.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0ad6003-29c4-4b48-bed9-dd60e1253117",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.593767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.annotationStores.evaluate",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95aba15d-23f4-4f89-8fa0-7e7979c2bf10",
    "name" : "Deletes the specified revision of a Consent. An INVALID_ARGUMENT error occurs if...",
    "request" : {
      "urlPath" : "/v1beta1/Mr.+Chad+Zulauf:deleteRevision",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95aba15d-23f4-4f89-8fa0-7e7979c2bf10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.593552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consents.deleteRevision",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ed4368d3-d326-4a98-9018-8b7ebdb86d90",
    "name" : "Configure the search parameters for the FHIR store and reindex resources in the ...",
    "request" : {
      "urlPath" : "/v1beta1/Raul+Johnston:configureSearch",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Larissa Mills\",\n  \"error\" : {\n    \"code\" : 1683946732,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Fugit officiis quaerat iste. Voluptatibus dolores eum. Dolor itaque laudantium quisquam cupiditate nihil ipsum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed4368d3-d326-4a98-9018-8b7ebdb86d90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.593478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.configureSearch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2b3d3257-f291-460a-a3cf-7c6052824c3e",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Michaela+Thompson:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b3d3257-f291-460a-a3cf-7c6052824c3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.593259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fe1031a8-53b6-4a72-841c-f3e68f4ef776",
    "name" : "Archives the specified User data mapping.",
    "request" : {
      "urlPath" : "/v1beta1/Lauryn+Friesen:archive",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe1031a8-53b6-4a72-841c-f3e68f4ef776",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.593181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.userDataMappings.archive",
          "schema" : {
            "description" : "Archives the specified User data mapping.",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "323e7509-6277-49c1-b03b-167ce07286fb",
    "name" : "Activates the latest revision of the specified Consent by committing a new revis...",
    "request" : {
      "urlPath" : "/v1beta1/Edmond+Feeney:activate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"revisionId\" : \"7z3t\",\n  \"metadata\" : { },\n  \"expireTime\" : \"2022-05-19T16:09:31.592431Z\",\n  \"name\" : \"Dr. Lavonia Ernser\",\n  \"policies\" : [ {\n    \"resourceAttributes\" : [ {\n      \"attributeDefinitionId\" : \"c2zm\",\n      \"values\" : [ \"fc8ka89h0y67sazo1h470huwx73loefcyp6121vfxk7nmqc4kapr1r7z6eoexnsq7v6mer71ewyxsw6u7qdepntgbzrptctvhxcrmjenslhrvdu8qwaivn7shxe41c98lwcfybe92wuikbj0w5i8npqyfufpfpkwjbmszh6oqouemg6yngmshjdiy6wslavo6v5o\", \"pu0isdmg3bxe8ge2rifmryozyq95ocm6jcu1h6xnfn5ofiso6ch2x1sv1ec85c068j5qcws9z5viciny2haqqnez2uftn4tfjvdxk36tagoews7g71myy82c962m5do1avfz9kxv6mj1x4n8cv5xxl8mye9s4a6xowti05y4tt74ev89zc81otnc5as47v6nszl74o8\", \"1hjanewlpnrt57wtqvnjxr5eslrmldfvsaxnp1hugsqo3ymqaunx2pkgw1osjhffpvybii252cyftri6qx8kxal9uc9pil80xbom3c4mlpkqfz40jez9p3ovm\", \"fq0ygtrd27p822fw4bt9jmup6tu0rue0unx7jbozqneacursb6inm1gyeimehywpq1ugrte\", \"rhkoga32i62hpwyzuskeda0vzp967x7a96599n77no15vgjssnlcq0a3kn465auk49exz8ofph11bb2c8br8uxnv5j2h4ixknq3a\", \"0v5hefsyy1z39bkgnwyv4pa47zbqtx4r5kieszkw\" ]\n    } ],\n    \"authorizationRule\" : {\n      \"expression\" : \"kxj3njygxpyykcqjkpi2koc8evqq8g3tp511eqiwhqzjbnjnz12diqzjvbz0pjfwfgghorjykexlbmpxxs2bmoza10c1of3nvh5a2c4yh5im7lcuvogw8rtceiafupm\",\n      \"description\" : \"Eos neque itaque. Tempora error ab quae labore qui a. Quia dolores quam. Voluptatem ratione quo.\",\n      \"location\" : \"mk69pcymicf0l0z6yh0jinfbde2et3brqrtbb3wye6194ok34tfqaf0pwyab90pzidonip1gqpwoe0w73mjwi\",\n      \"title\" : \"Quibusdam error exercitationem.\"\n    }\n  } ],\n  \"consentArtifact\" : \"yr39ig0ts5lc9tdu7tdqhhw98r4t78j3vv459t01uvi36vzjwi6wlzoyshjqn3zwptaeowl81rk4bhhucmv24lirghf\",\n  \"revisionCreateTime\" : \"2022-04-29T17:25:31.592788Z\",\n  \"state\" : \"REVOKED\",\n  \"ttl\" : \"btvm0xhxaiays2rh8aswqcvpjkecevuv7px39tc\",\n  \"userId\" : \"r1zb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "323e7509-6277-49c1-b03b-167ce07286fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.593097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.consents.activate",
          "schema" : {
            "description" : "Represents a user's consent.",
            "properties" : {
              "consentArtifact" : {
                "description" : "Required. The resource name of the Consent artifact that contains proof of the end user's consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consentArtifacts/{consent_artifact_id}`.",
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Timestamp in UTC of when this Consent is considered expired.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Optional. User-supplied key-value pairs used to organize Consent resources. Metadata keys must: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - begin with a letter - consist of up to 63 characters including lowercase letters, numeric characters, underscores, and dashes Metadata values must be: - be between 1 and 63 characters long - have a UTF-8 encoding of maximum 128 bytes - consist of up to 63 characters including lowercase letters, numeric characters, underscores, and dashes No more than 64 metadata entries can be associated with a given consent.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name of the Consent, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/consentStores/{consent_store_id}/consents/{consent_id}`. Cannot be changed after creation.",
                "type" : "string"
              },
              "policies" : {
                "description" : "Optional. Represents a user's consent in terms of the resources that can be accessed and under what conditions.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudHealthcareV1beta1ConsentPolicy"
                },
                "type" : "array"
              },
              "revisionCreateTime" : {
                "description" : "Output only. The timestamp that the revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. The revision ID of the Consent. The format is an 8-character hexadecimal string. Refer to a specific revision of a Consent by appending `@{revision_id}` to the Consent's resource name.",
                "readOnly" : true,
                "type" : "string"
              },
              "state" : {
                "description" : "Required. Indicates the current state of this Consent.",
                "enum" : [ "STATE_UNSPECIFIED", "ACTIVE", "ARCHIVED", "REVOKED", "DRAFT", "REJECTED" ],
                "type" : "string"
              },
              "ttl" : {
                "description" : "Input only. The time to live for this Consent from when it is created.",
                "format" : "google-duration",
                "type" : "string"
              },
              "userId" : {
                "description" : "Required. User's UUID provided by the client.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5fa3fdb0-27cf-43db-bf3e-ca5d55d84fad",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta1/Alesha+Feest/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Bertie Hamill DDS\",\n    \"error\" : {\n      \"code\" : 1047212484,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut veritatis tenetur commodi et qui consequatur aut. Dolorem et numquam nemo. Saepe magni consequuntur est in magni non tenetur. Enim eius sit explicabo magni. Quis omnis consequatur illum.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Roscoe Farrell\",\n    \"error\" : {\n      \"code\" : 1201038681,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Nisi iusto magni. Odio eligendi ut tempore. Quis tenetur voluptate.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Nora Hane\",\n    \"error\" : {\n      \"code\" : 732159631,\n      \"details\" : [ { } ],\n      \"message\" : \"Quia in sed soluta. Saepe perferendis assumenda. Voluptatibus sed beatae pariatur velit quo temporibus.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Robby Quitzon\",\n    \"error\" : {\n      \"code\" : 1309109088,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Quia harum dolores. Eaque qui sit in sequi placeat et ullam. Nobis accusamus dolore. Amet expedita non eum dolores nisi.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Josef Miller\",\n    \"error\" : {\n      \"code\" : 409157211,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Nihil cum ut. Molestiae aliquid reiciendis voluptatum quam. Saepe eos veritatis vitae et tenetur.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Man Donnelly\",\n    \"error\" : {\n      \"code\" : 415292253,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Labore sit hic ratione molestiae magnam sint animi. Adipisci molestias est facere aut qui. Facilis repellat optio temporibus fugiat sint et ea. Quidem ab sit sint tempore quas hic praesentium. Ratione\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"xgryivwsxv2ac3rnnygs5u0jipdbzjynyes61eaxihuhhfexmglr5337wnewsaso0lqlcyrx6pmi3eoq818zng64e2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fa3fdb0-27cf-43db-bf3e-ca5d55d84fad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.592269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4be39f96-ee1b-44b4-9523-105f17dda93e",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Salvador+Konopelski/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"m1hr0hzss245p6bsf6m49ng250zszlmd7trvdtix7hpsmogybqma1u87b0abno30fl6s1niixkkd3dws66djdwuyurhzdc5mfjxiyyoj238kixtzpbbn1h4u60wrzg3fqomleuj496mmxzp6olfe1lt3qevb7tiqhob9j0jgz5yp\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Kenyatta Aufderhar\",\n    \"locationId\" : \"sk07\",\n    \"name\" : \"Sam Witting\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4be39f96-ee1b-44b4-9523-105f17dda93e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.591519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7fc01367-5225-4d17-9f06-e6e5820a5fb7",
    "name" : "Gets the FHIR capability statement ([STU3](https://hl7.org/implement/standards/f...",
    "request" : {
      "urlPath" : "/v1beta1/Elias+Jerde/fhir/metadata",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { } ],\n  \"data\" : \"ol593p01sj5nsuktyzpnr4ydgp9b3murrjx1idn2ouwam04j1ze0yg3wbnn0zlsfbn871u8qmcjpxtv63vh9e8w7ap0qmlyho87g06rar8b3d4q9wapmwk2jx08dk5ypni5gv3k8nivhmjczlpvldcv5d326lum3\",\n  \"contentType\" : \"zgw91gxaoi2wcsw0vqvr8t0zhied49w7kxvdyxty2sk1zovlvobvep7aj9ue1w5242uji9jmpc09\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fc01367-5225-4d17-9f06-e6e5820a5fb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.591181Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.capabilities",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eb2e02f1-e5ae-4311-a78e-cd6ef98ff343",
    "name" : "Lists all the versions of a resource (including the current version and deleted ...",
    "request" : {
      "urlPath" : "/v1beta1/Christine+Schuster/_history",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { } ],\n  \"data\" : \"0a198s9jqietpee12xz8we8294jdb8tpshvp8zu3ykxququdmirtfm88z9jghw66a2xk3p8zocuj7c5pyfoq8p3aum10zqxu9371n0p9sfebe5g9x7gk2xuup7t2f8x\",\n  \"contentType\" : \"exx08lh4f4vjf49hndrlgy0r1a62n7bjtjgmlntpj1s2wpz9vk7ckyac66huvo4u7sg312in2yufcsj0goildpe5k5ro174a4ozwlm7rlj1v5akqadf6o4dypdkgd67mfj6jnw5i8wp063yb0velwaby7k4y4taoh92npsg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb2e02f1-e5ae-4311-a78e-cd6ef98ff343",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.591051Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.history",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "43dbf996-e903-4c1e-adfb-c5a1dda00423",
    "name" : "Translates a code from one value set to another using a concept map. You can pro...",
    "request" : {
      "urlPath" : "/v1beta1/Donte+Torphy+Jr./$translate",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { } ],\n  \"data\" : \"jmzlz4ctnpdo4indnmrtg9vf8gm9zmraw06qgdyrtwudza1hejqa39wi1tbx8zq4tey161ptmcde8argjzb4lem9iusjqf1t8oiuabd4kac6cl0lcxjqo4ca3e3np44n\",\n  \"contentType\" : \"67dondv5otk3kc3xagdxq3z51ech07lpev5eoghh35l0plvahgtwlu69awby3cx6deqxjiaauqv7ay115bs8lag8ogf46jlfksthkhc0qv9kmsshbe8wkkn2i3s0j54geqmxnremms5iof0wnri6o0xquj1o4q3drf8u41omz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43dbf996-e903-4c1e-adfb-c5a1dda00423",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.590914Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.ConceptMap-translate",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e1a5d364-800d-445b-931a-7fb5e8b2834b",
    "name" : "Deletes all the historical versions of a resource (excluding the current version...",
    "request" : {
      "urlPath" : "/v1beta1/Ina+Greenfelder/$purge",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1a5d364-800d-445b-931a-7fb5e8b2834b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.590778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.Resource-purge",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "33ec47bc-862d-4f1f-97d8-b2f73c585ff6",
    "name" : "Retrieves a Patient resource and resources related to that patient. Implements t...",
    "request" : {
      "urlPath" : "/v1beta1/Percy+Homenick/$everything",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { } ],\n  \"data\" : \"ahkfvcc0bqpxrirf4q6x10fadu80j05vccsgc8h2xodu5vd3uos8tqtbt86kq4fe7ir3odqu0voaey9ejkebarbvkmfs7bme2ppvqjtcosyksyjsmjs2ziggf3oh\",\n  \"contentType\" : \"45nhi2p02hhv63eiqx5wn2ir45dvwhr18s424nal2gpfcbjeonrpl1drkqgu1yx5gaf6ord2410mh2ynohc647ry4ho7vslklh5xnxfnqlqmpcq0lme84e82e8tfywy4xesr8urvpori12wydcp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33ec47bc-862d-4f1f-97d8-b2f73c585ff6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.590701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.Patient-everything",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ea9bfcc2-df1b-4859-8a8d-9e82e60fbdec",
    "name" : "Updates the entire contents of a resource. Implements the FHIR standard update i...",
    "request" : {
      "urlPath" : "/v1beta1/Katerine+Cassin",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"data\" : \"3t69ifhg6u77lp3mcralk6o9xkwgn8qaq3zd1htxze8tf5syjcspx78ht0871wq6q73zhixpku0izqzi6dqa0a312tunrrmzp61rhf33n6gv534eu4pne2grl8o9p8pm6t96y79phhv3k5jdlbw4ioh9kmhw34875m8bbrp9vd120wkshkraev00dhmko\",\n  \"contentType\" : \"9b4jp3fdijav4fa8fy8ysvtyx2yxiayltgvprifdsv72k53h0tlw91pwdfu0e1zjkmgg3lwnqe8kpqlllbotmtfoar9qkzbf8leg23wa7ea7l4sqmr5dg2ruszrn8ueqgcj1v4svc3thd6gcczrwqclcjb7x5nkjdwrfwghk727s18d2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea9bfcc2-df1b-4859-8a8d-9e82e60fbdec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.59056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.fhirStores.fhir.update",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ef947ea-b025-4c8c-81e6-b70fe694214e",
    "name" : "Update the message. The contents of the message in Message.data and data extract...",
    "request" : {
      "urlPath" : "/v1beta1/Joslyn+Gerhold",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"patientIds\" : [ {\n    \"type\" : \"iho3qqfykmf23rry5ijyuku2ksd0xpr0z214hd\",\n    \"value\" : \"je5xk2ur\"\n  }, {\n    \"type\" : \"f0064n94kjldw5oxud9zi6tcv1cc2v9unezcngsrfwtw3blptm5zt218fgoal8gm37ts0oagl0nmewt7fozf1jhw52k95v24v2wq33ybxv5j4ap1yabjwxqkvpuk585zyg2xc5wdxydih74eisc3gwzc310dnbp3dwwyku0py190p9uakzcfcwkl6ngar82kzz\",\n    \"value\" : \"cja3z9b7sg6h8zsiyy0g0zm76e4rbm538vctzotw55nv0nm8158hmors4vhub8l23amzz7ertztw6cok8a1eyi1xf3lp7pmdvxwy02mrwuk6xmd7mhphof7xumw4i9ghtgan12881mxad5md1lqg5j69zf\"\n  }, {\n    \"type\" : \"808pk7pfcbuu9fpwy9271\",\n    \"value\" : \"wd90pfgqww292thec8dyvpvf6u8uvglau7zt2eesyb4hk0rfeaz1pg4traghwlexpaej627fj8of2jrwjkp88wzj069ss7tgq3zv6h9kut6od9rr8uu59k3gaouni300nfdw9jezfwij\"\n  }, {\n    \"type\" : \"edifoioow\",\n    \"value\" : \"1zh8hcu72njey0ihuoja3ma2tiydss3a1qj75yfwtjdnn3pp5f4gibps3g7zpod9lpstdvsg4ka41q6s2oirwllasy\"\n  }, {\n    \"type\" : \"kz4y4gqj75m98w5wodomgcln0wabmi3pzc01c59cnhbglv0fib6tpv8euliyh2s30j8x9p\",\n    \"value\" : \"k4c824j4hbjke43ujgjiisi5q2zb9a1mrxteemmiv8whl4uaxrdiamevvmbzbzcz9sdi4ske74pxrdp5lr4ejtz6q4j8ids2zut49o9w64vw8i70ycqiw0clj3dd2y19k6l3v0opv0294\"\n  } ],\n  \"sendFacility\" : \"eysfso4muh0mz70mcohhhk8faa0jsalpasd6nuoh9kxxwhftmrmpzcwuans5v6\",\n  \"data\" : \"63w289k42lbncxg2gh0z2fjhi09yocidm684bo81z3afyi5ok9\",\n  \"messageType\" : \"4eae0i6okrauaop916vwhjeg3fo2a9zu99yobsi75deh6kjqodbyrioawba30emqz233klohvry8aj02t1t85m34kbqh7hfb4ev13hwlpwkld7dpje1my7xnmqlzr\",\n  \"createTime\" : \"2023-01-02T16:27:31.588955Z\",\n  \"parsedData\" : {\n    \"segments\" : [ {\n      \"segmentId\" : \"7sq4\",\n      \"setId\" : \"q9tc\",\n      \"fields\" : { }\n    }, {\n      \"segmentId\" : \"414i\",\n      \"setId\" : \"u4o6\",\n      \"fields\" : { }\n    }, {\n      \"segmentId\" : \"790l\",\n      \"setId\" : \"9m4t\",\n      \"fields\" : { }\n    }, {\n      \"segmentId\" : \"2qza\",\n      \"setId\" : \"zpzr\",\n      \"fields\" : { }\n    }, {\n      \"segmentId\" : \"6zd3\",\n      \"setId\" : \"o6y7\",\n      \"fields\" : { }\n    } ]\n  },\n  \"schematizedData\" : {\n    \"data\" : \"xyj2g9ex0htmm88tti30pi25u45rhtq1fof9aek86hbbslzyggux8sf5572cq6h533xzt66yr2cxiq1uurcb42hdg8d0csp\",\n    \"error\" : \"vlkijmcv7wql35dc8dzybjhgild5nf92uqw4u1z171yu7b5ravh9pd0\"\n  },\n  \"name\" : \"Bibi Reinger\",\n  \"labels\" : { },\n  \"sendTime\" : \"2022-05-21T17:59:31.590167Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ef947ea-b025-4c8c-81e6-b70fe694214e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.59036Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.messages.patch",
          "schema" : {
            "description" : "A complete HL7v2 message. See [Introduction to HL7 Standards] (https://www.hl7.org/implement/standards/index.cfm?ref=common) for details on the standard.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The datetime when the message was created. Set by the server.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "data" : {
                "description" : "Raw message bytes.",
                "format" : "byte",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "User-supplied key-value pairs used to organize HL7v2 stores. Label keys must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: \\p{Ll}\\p{Lo}{0,62} Label values are optional, must be between 1 and 63 characters long, have a UTF-8 encoding of maximum 128 bytes, and must conform to the following PCRE regular expression: [\\p{Ll}\\p{Lo}\\p{N}_-]{0,63} No more than 64 labels can be associated with a given store.",
                "type" : "object"
              },
              "messageType" : {
                "description" : "The message type for this message. MSH-9.1.",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name of the Message, of the form `projects/{project_id}/locations/{location_id}/datasets/{dataset_id}/hl7V2Stores/{hl7_v2_store_id}/messages/{message_id}`. Assigned by the server.",
                "type" : "string"
              },
              "parsedData" : {
                "$ref" : "#/components/schemas/ParsedData"
              },
              "patientIds" : {
                "description" : "All patient IDs listed in the PID-2, PID-3, and PID-4 segments of this message.",
                "items" : {
                  "$ref" : "#/components/schemas/PatientId"
                },
                "type" : "array"
              },
              "schematizedData" : {
                "$ref" : "#/components/schemas/SchematizedData"
              },
              "sendFacility" : {
                "description" : "The hospital that this message came from. MSH-4.",
                "type" : "string"
              },
              "sendTime" : {
                "description" : "The datetime the sending application sent this message. MSH-7.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e532d584-82ce-469c-b8b5-e5b4238d5bcc",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta1/Mrs.+Barton+Padberg",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Raleigh Maggio MD\",\n  \"error\" : {\n    \"code\" : 1163079226,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Accusantium est illum est ut nesciunt. Et eos molestiae quas exercitationem asperiores recusandae. Reprehenderit iste repudiandae et.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e532d584-82ce-469c-b8b5-e5b4238d5bcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.588748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "adeaca69-b6db-455f-89f2-d4e445402eaf",
    "name" : "Deletes an HL7v2 message.",
    "request" : {
      "urlPath" : "/v1beta1/Gerardo+Schulist+III",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adeaca69-b6db-455f-89f2-d4e445402eaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.588542Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.hl7V2Stores.messages.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9cd9dd7a-0ba1-447a-9f02-d3b532348701",
    "name" : "Queries all data_ids that are consented for a specified use in the given consent...",
    "request" : {
      "urlPath" : "/v1beta1/r5yx4itsqss9h6r3afd0nbzcv86adhgp9k0wxhkmhfxq9n6q1crbfu59gbfpdnvx9cfo80v79jj4pw2pbzjhjd5sf52kmthpjssp759kv5hgcmct6y8egurgqk0zp4a202y3w64hx4w30c2i97a6yk0d3ltqilr2nrydwy3hadnz7mh7xay8tvm8pr4s8:queryAccessibleData",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Deedee Stoltenberg\",\n  \"error\" : {\n    \"code\" : 1753544300,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Qui nostrum enim. Rerum consectetur dolores. Distinctio neque quas. Rerum est quidem voluptatem. Rerum sunt asperiores.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cd9dd7a-0ba1-447a-9f02-d3b532348701",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.588457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.queryAccessibleData",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dffa6c85-0ce3-47aa-b401-3caee804e9c3",
    "name" : "Evaluates the user's Consents for all matching User data mappings. Note: User da...",
    "request" : {
      "urlPath" : "/v1beta1/p6knujikp3ww19gj13o3ftj7a4jhwh7zf9ruy5a0x743b72np085n3hnh36nh4pflpowpcjoudrygs9gqhvvtaqws6aw30i6e47g6bhv3ypxlw2q12bbygy2eqbazxoscglwhf3eizyk50loeqfc4b0yun1fs45gxtwv:evaluateUserConsents",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"8rroz7n537itstffy\",\n  \"results\" : [ {\n    \"dataId\" : \"1w2i\",\n    \"consentDetails\" : { },\n    \"consented\" : true\n  }, {\n    \"dataId\" : \"ak1f\",\n    \"consentDetails\" : { },\n    \"consented\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dffa6c85-0ce3-47aa-b401-3caee804e9c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.588209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.evaluateUserConsents",
          "schema" : {
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list. This token is valid for 72 hours after it is created.",
                "type" : "string"
              },
              "results" : {
                "description" : "The consent evaluation result for each `data_id`.",
                "items" : {
                  "$ref" : "#/components/schemas/Result"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "229f1cb9-f90f-4911-a665-2d9a3a258710",
    "name" : "Checks if a particular data_id of a User data mapping in the specified consent s...",
    "request" : {
      "urlPath" : "/v1beta1/002kmu77s3h13s1lv3q9ccn6d3mperopnh5u6nhyfo5mie82i0uf62qx9ys18l17e3bp84mpzod6zhbf4oegoa5lbeuta53sjaehrklki1883kmdcf2c5s1gm2it81n4464zbcnrihl815ksnemo5rmw:checkDataAccess",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"consentDetails\" : { },\n  \"consented\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "229f1cb9-f90f-4911-a665-2d9a3a258710",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:31.587813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "healthcare.projects.locations.datasets.consentStores.checkDataAccess",
          "schema" : {
            "description" : "Checks if a particular data_id of a User data mapping in the given consent store is consented for a given use.",
            "properties" : {
              "consentDetails" : {
                "additionalProperties" : {
                  "$ref" : "#/components/schemas/ConsentEvaluation"
                },
                "description" : "The resource names of all evaluated Consents mapped to their evaluation.",
                "type" : "object"
              },
              "consented" : {
                "description" : "Whether the requested resource is consented for the given use.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}