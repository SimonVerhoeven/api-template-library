{
  "mappings" : [ {
    "id" : "32b161bb-0db4-4608-b00f-1c3d500c3465",
    "name" : "Atomically updates the specified Service configurations.",
    "request" : {
      "urlPath" : "/v1/2i6nosgdlavjc37jsho6zsbenmkksvto93o1jimhgdwnes02z06iwmy72hltxt70lp2fzcm00k7xycgm/services:batchUpdate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"services\" : [ {\n    \"name\" : \"Shayne Sawayn\",\n    \"enforcementMode\" : \"ENFORCED\"\n  }, {\n    \"name\" : \"Shonna Collier\",\n    \"enforcementMode\" : \"UNENFORCED\"\n  }, {\n    \"name\" : \"Marlon Funk\",\n    \"enforcementMode\" : \"OFF\"\n  }, {\n    \"name\" : \"Abe Wintheiser Jr.\",\n    \"enforcementMode\" : \"OFF\"\n  }, {\n    \"name\" : \"Miss Garret Aufderhar\",\n    \"enforcementMode\" : \"UNENFORCED\"\n  }, {\n    \"name\" : \"Ilse Towne DDS\",\n    \"enforcementMode\" : \"OFF\"\n  }, {\n    \"name\" : \"Ms. Sonia Fahey\",\n    \"enforcementMode\" : \"ENFORCED\"\n  }, {\n    \"name\" : \"Dr. Cheryll Heathcote\",\n    \"enforcementMode\" : \"ENFORCED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32b161bb-0db4-4608-b00f-1c3d500c3465",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.855042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.services.batchUpdate",
          "schema" : {
            "description" : "Response message for the BatchUpdateServices method.",
            "properties" : {
              "services" : {
                "description" : "Service objects after the updates have been applied.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1Service"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "861064a5-e597-4aab-b51e-82a7893040d9",
    "name" : "Lists all Service configurations for the specified project. Only Services which ...",
    "request" : {
      "urlPath" : "/v1/t6y0i9gft8b7m3pz9ml0k0cql98q6kvrxrkxd7mmnt6y2bga515cd41eu107ov3oad0si7ab4oo25edg6wzrl451dh9ch661rx70vwvm26ulmkl1bulgd0gjhup5mvfuej68qg6ev3gpldjfho4ksdjlonatk5ff82fdtqay3iezm9zkct/services",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"f23hi37v30pb1xdovhtkv79dshy9wno7w8dtms7rmt9ah4ri6ooe2f1t8kluugzpnihtlnr7z8ct9pxdt2q5zt8bg781z2yyrczdhmosr4pqb0l9kiouj2\",\n  \"services\" : [ {\n    \"name\" : \"Marcos Kshlerin\",\n    \"enforcementMode\" : \"OFF\"\n  }, {\n    \"name\" : \"Melynda Deckow\",\n    \"enforcementMode\" : \"OFF\"\n  }, {\n    \"name\" : \"Jason Lesch\",\n    \"enforcementMode\" : \"UNENFORCED\"\n  }, {\n    \"name\" : \"Gwendolyn Hettinger IV\",\n    \"enforcementMode\" : \"ENFORCED\"\n  }, {\n    \"name\" : \"Fredrick Sawayn\",\n    \"enforcementMode\" : \"UNENFORCED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "861064a5-e597-4aab-b51e-82a7893040d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.854544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.services.list",
          "schema" : {
            "description" : "Response message for the ListServices method.",
            "properties" : {
              "nextPageToken" : {
                "description" : "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListServices to find the next group of Services. Page tokens are short-lived and should not be persisted.",
                "type" : "string"
              },
              "services" : {
                "description" : "The Services retrieved.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1Service"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9f7fab09-d7d1-4409-ba6d-60c37e3301d2",
    "name" : "Creates a new DebugToken for the specified app. For security reasons, after the ...",
    "request" : {
      "urlPath" : "/v1/dbony5f46cwl8sdkmet465zkgq3srj5wkivkk54e02goor2tpjqvw177h3w8xgbjg6it66g7t2dewtufrn8i4kj3ara6t5is6k548dhgso28luhw1v022wv9wwo2kqqzhiv1e2xb5tpu8asaiel6trf7uyozmxg1tu/debugTokens",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Gayle Bruen\",\n  \"name\" : \"Jeff VonRueden\",\n  \"token\" : \"rowk02auzszcciyx6eemb4n5oq4zcbkmages83fen4qhppmjqpsya9p6efc89t67a61ugo3tkrsuouq01sqjw8323e1nby8xpojkxvkwaugkhh0zqgvatjhuf2ujs08mdsh46nrlq9rh0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f7fab09-d7d1-4409-ba6d-60c37e3301d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.854172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.debugTokens.create",
          "schema" : {
            "description" : "A *debug token* is a secret used during the development or integration testing of an app. It essentially allows the development or integration testing to bypass app attestation while still allowing App Check to enforce protection on supported production Firebase services.",
            "properties" : {
              "displayName" : {
                "description" : "Required. A human readable display name used to identify this debug token.",
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The relative resource name of the debug token, in the format: ``` projects/{project_number}/apps/{app_id}/debugTokens/{debug_token_id} ```",
                "type" : "string"
              },
              "token" : {
                "description" : "Required. Input only. Immutable. The secret token itself. Must be provided during creation, and must be a UUID4, case insensitive. This field is immutable once set, and cannot be provided during an UpdateDebugToken request. You can, however, delete this debug token using DeleteDebugToken to revoke it. For security reasons, this field will never be populated in any response.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9f97008b-4e32-488f-9bf7-5c4eec73ecf6",
    "name" : "Lists all DebugTokens for the specified app. For security reasons, the `token` f...",
    "request" : {
      "urlPath" : "/v1/9led0hfw089j9c9ixhnol0e13t7d5zqemzrgad31hxqo4/debugTokens",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"gmqm8npf2nt300qg6u9161wopvwtkclav7r5z6k7i3ex2xftymooheoadiygos6t\",\n  \"debugTokens\" : [ {\n    \"displayName\" : \"Jimmie Hamill I\",\n    \"name\" : \"Delora Wiza MD\",\n    \"token\" : \"5dz9tirzhn2q0lohqjrtcc8z6ud1eooejvzv8m4sv4vl37a1aa1poocud4mxlyn0ysveemip84wsalvjl1vfxlmrgk9tmizf2nx9g2ibycyg6cf3rezn885mfduz58wgzqz7pw8dz3byuz1gw3glorrg9kx4nh9ql3salagg9b9oa6\"\n  }, {\n    \"displayName\" : \"Kandice Crona\",\n    \"name\" : \"Roberto Kiehn I\",\n    \"token\" : \"0joeycphortvdw5yql2xrlip2i61caxa8kk9vtyrevgsjimf3qoqll3tst0yj5z4iau42ykjammlt49kciakbqoi09qxs4\"\n  }, {\n    \"displayName\" : \"Tonette Stroman\",\n    \"name\" : \"Robert Blanda\",\n    \"token\" : \"6kt9mhph6nxdgg4ysyyeqj4envh3ren8qmcynig6fdcv2k4d5ema5i7g4kkcuhaxd1maqvxu8kfuz\"\n  }, {\n    \"displayName\" : \"Loretta Douglas II\",\n    \"name\" : \"Crystal Barrows\",\n    \"token\" : \"pduneq5y2nwbc7q93oniph28axqq4509libvq35yreuz3ik962m8iddejagoj8vcflo0son3etxwr6w7flugb737p0o9sde61wc0moz1n\"\n  }, {\n    \"displayName\" : \"Jazmine Jerde\",\n    \"name\" : \"Adan Luettgen\",\n    \"token\" : \"cq4utef21rtp3k05khxkms9fr9hbn00e4zpvmp7w6j0ytehvqac3y5p0bnzhj779ociehmk1achq9yxxnj1m9akasf5r5idsr7dqu4mmsodn08n80dtt93ym1tytb5k8bpwo5cx61kybepgbspwmoi\"\n  }, {\n    \"displayName\" : \"Dr. Warren Runte\",\n    \"name\" : \"Dr. Felton Waelchi\",\n    \"token\" : \"6vyit3mxpv8v39goywyoqgcfkegxsrqb2r4k9tc7yfu6tbjojh2xhcvq\"\n  }, {\n    \"displayName\" : \"Faviola Langosh\",\n    \"name\" : \"Emanuel Treutel\",\n    \"token\" : \"5dbi9xvuhwrieul48bgiq4gq21yd5rmpe5egl\"\n  }, {\n    \"displayName\" : \"Jeniffer Veum Sr.\",\n    \"name\" : \"Ethelene Cormier\",\n    \"token\" : \"f6va461qe8weqju9j08t88udmta093syqlh99dku4pqj8z2q6ws7ftrbxqy1gkwf5vcjqpczcr2jz9ex7gf3klot7t7potppwv9kwyfi5chugawy21m70k1ewx1ecz2n8qrw3tzucoiy7ta2njto33aqlvj9vcd1ssbzrwmcf12y8yzgnab5d8zy8j5f6plkco\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f97008b-4e32-488f-9bf7-5c4eec73ecf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.854011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.debugTokens.list",
          "schema" : {
            "description" : "Response message for the ListDebugTokens method.",
            "properties" : {
              "debugTokens" : {
                "description" : "The DebugTokens retrieved.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1DebugToken"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If the result list is too large to fit in a single response, then a token is returned. If the string is empty or omitted, then this response is the last page of results. This token can be used in a subsequent call to ListDebugTokens to find the next group of DebugTokens. Page tokens are short-lived and should not be persisted.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "562eae5e-cef8-414d-8c4c-a015a87db1a8",
    "name" : "Atomically gets the SafetyNetConfigs for the specified list of apps.",
    "request" : {
      "urlPath" : "/v1/p0zezldcrti7wa09f0xm9bvpb1oxdkt60b3m5zxtq6gxzh8nr7pral223warr2lv9q6u9cvj7gb8teo8yncaakhnjq2/apps/-/safetyNetConfig:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"configs\" : [ {\n    \"tokenTtl\" : \"o2ej01rsvq58xdiddeko5a994bxse1bhfan58otl5t8kgkpld3mjho0u4upct8ps09b6o5z0k0zd41mgt1bohuejim4yyh20gwwnuwisqr3domsqmghan3uodtn6ayetblxb4\",\n    \"name\" : \"Joel Langosh\"\n  }, {\n    \"tokenTtl\" : \"ti24pv5fxzqduaci6fuvrpd3opnbn4pwp9fut35wghzfbzy84nabys3y2ywfmipmut0r0aftqtx4a85p8g5r0jxcs68m7\",\n    \"name\" : \"Max Schaefer\"\n  }, {\n    \"tokenTtl\" : \"tsxo8qq6s9cchurp3707t77uoeqcksidgyvj01g734kzzmlr3gv2zexqzgdg6wmrij0k94jfu2v1nfop3a3ytiuq7nuagequ1r7cbvrdp4avwf6jblfu0bq01lcthbmzzyw6yh3ai3hcbh18vh3jn39mf9f5r6\",\n    \"name\" : \"Vickey Larson III\"\n  }, {\n    \"tokenTtl\" : \"ut6pym06pblqpr0pdpdjmxjahcffdkwsrfi4ktnb63lefnr33roat16aqkyznuwq19f429pltbebz9iva28jvh43dmdnxzux5v4p4lykgxsbj3stwzq0kugi5bv3icuo38x28x5teurdmz6qz27ce6cll7p4esbsm1u\",\n    \"name\" : \"Rosendo Lehner\"\n  }, {\n    \"tokenTtl\" : \"ruhutqcudjb8ez12hvrkr2xh16s0\",\n    \"name\" : \"Oswaldo Greenfelder\"\n  }, {\n    \"tokenTtl\" : \"v89isgr82das0xj5vu0kvmq96wk9h7vufeag7a592nnimx9c2c2xzccy0eliaksmeryddfe83etvnqaieeiiji44oip88i609vbrws9qkz3e4jvk58kr7p7anbbek2ia8t\",\n    \"name\" : \"Ernestina Flatley\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "562eae5e-cef8-414d-8c4c-a015a87db1a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.853126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.safetyNetConfig.batchGet",
          "schema" : {
            "description" : "Response message for the BatchGetSafetyNetConfigs method.",
            "properties" : {
              "configs" : {
                "description" : "SafetyNetConfigs retrieved.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1SafetyNetConfig"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fda93fcc-28cd-42e8-b132-20bc0c3f0e9e",
    "name" : "Atomically gets the RecaptchaV3Configs for the specified list of apps. For secur...",
    "request" : {
      "urlPath" : "/v1/eiv63f1hjoc5sbqg78ivfczn393wyvj4dfcd45um9cwpmf/apps/-/recaptchaV3Config:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"configs\" : [ {\n    \"tokenTtl\" : \"kw2fk0zqz54dq9qcz0jbw0gv6wp\",\n    \"name\" : \"Crystle Schumm\",\n    \"siteSecret\" : \"yg2391utqlp3x73pd9dqv7icbbg0b0k34tievm4rskjsjywppwmg59mthd5hz82uyzwwutnw37p6bwvamzqv4qg0ut00p5btgkgdli3x709w71c3dejsvgacq14hgwgqqeyudtnd4o9df2e9rostay\",\n    \"siteSecretSet\" : false\n  }, {\n    \"tokenTtl\" : \"h8t2px9m6x7y0jccc3hnxzmu2f67jbbjhrjqd6efdiw6ursrami8qeq3wsaeus2cqckhroq9fnttrprzcidqecvrudcj2pwpu75mzymwjm1g4hvydy88roma98cdo5gh3kwqy9lgyhy37y0q3\",\n    \"name\" : \"Raguel Flatley\",\n    \"siteSecret\" : \"qzlulj0grrve3ndiufoui9k5v8fl016izpm39pmh8hm0zxtuqbzhozt\",\n    \"siteSecretSet\" : false\n  }, {\n    \"tokenTtl\" : \"9rlb5y7pkdoakl6zel6m3spzx0umymq6hu2ogegwirphz9a4m5mqbdty6zrb0rckuvnvbhpw74u9ykvzygaktbrd338wttxjg9e6dfuyqks857xew3eyl27wh0hx525ufizsgjaqibx9uenj9jcvjtlaqqfb777yw11mq\",\n    \"name\" : \"Maire Swaniawski\",\n    \"siteSecret\" : \"j1qxqv79hsfoywnyzfhgxrp6u486v1u7w5d74wcpmlybm135vapw16xyyey9qzfvr4we8i1dq5f8uppcead32gt372b5mi4usa42rmk1dmu7w7uo9u6dbasuow8d4gp02it77ngl2njdes943gfin3eriwdlavj0mau99tiki79t2qjxd3vz8405x2mtyn\",\n    \"siteSecretSet\" : true\n  }, {\n    \"tokenTtl\" : \"eekmp3jkpynw30um2lhvr6j5jjrfp3lfaqaz5do0dekar26w\",\n    \"name\" : \"Ms. Camila Tremblay\",\n    \"siteSecret\" : \"325\",\n    \"siteSecretSet\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fda93fcc-28cd-42e8-b132-20bc0c3f0e9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.85269Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.recaptchaV3Config.batchGet",
          "schema" : {
            "description" : "Response message for the BatchGetRecaptchaV3Configs method.",
            "properties" : {
              "configs" : {
                "description" : "RecaptchaV3Configs retrieved.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaV3Config"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4571b506-45c1-486c-bae2-2ea73cac0607",
    "name" : "Atomically gets the RecaptchaEnterpriseConfigs for the specified list of apps.",
    "request" : {
      "urlPath" : "/v1/xcjqu8nptye48wjcme7cwfhgdhy2hjo6q91eiwkfl3bs4u11otwr157zyv1wyeajm0s6tood1vfdzuumn4413lmfqy361sbywt3mc225tryosbrwzstlrwlpcod7v2dfy0noawcxui4xc331kw68xz6j429k0g9/apps/-/recaptchaEnterpriseConfig:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"configs\" : [ {\n    \"siteKey\" : \"eoq5xgx45vwz2i2tpe3v8dpcuou0a8ronrcbtpd3ofy8s2yqxabztja2368unib4g9q5tx5aho9h9na3ho5rwzg2wjeb62xzir59kpvv3lblv\",\n    \"tokenTtl\" : \"ucrfgp3zgkz61djd8715sz559ktvht67g909mtolrrc1iq3nj3cr0vvsvcryqqmj0yqvs1pawkhydp979a4iayfpd77xf3jvlsnpbnuckjs30idrrwfvijy9sifeb821pel6divyfn6l1cytlo2yogkespg\",\n    \"name\" : \"Dino Schimmel IV\"\n  }, {\n    \"siteKey\" : \"m68hivgr2mq5opn28d9nrszavc93x88tyyc41d8mffsphfuuzgzcj347wo8zcayslqwwnpvqcrymq97iv6tofaf5ucund2qmubrd8p3gkg56zgo6ina7pbkhtzr6\",\n    \"tokenTtl\" : \"lfmaudgusi9pvvs0scxza8n0rtj90i30dj4t7j8c9hwjll9j3tkn840fl4bco90z0e4klbesjod84\",\n    \"name\" : \"Rob Krajcik\"\n  }, {\n    \"siteKey\" : \"ozj5echzlc90tghl8l2ktqx7qz8lz3gcnaclzoh167yk77ogzt7fuar21ipwule77wimitjqmyhy0h6z5mzif5trkymja3xsh1hrj3u091i7sdao7498grjmb47tjtk04t93hrvo6rw9ffp9gzbpi1bufpwphk7vsw17u\",\n    \"tokenTtl\" : \"f3de9kfl33kvtmhlh1vv5rmu1rbxfc\",\n    \"name\" : \"Mrs. Jere Emard\"\n  }, {\n    \"siteKey\" : \"pdn69ltt4oj9km33tcovj4orft2zvs89py9f9ia9obapevxtzw9qmo8468rrjpk5ly8qcuaslbzpgdvjfl2jm2e2h518956vytrsbjiufbb0no6ymn2g0exdcwfetcqzocchtrdfzrsv50x\",\n    \"tokenTtl\" : \"102k4ux2u0n4b8le8fvcujn2dbkc8t4pe5vtfl0sd5ruxyp4uuzxba2f68os9pwi6ns60c81sgcxi0m3gwqoeujl0x7s0i3ssq5\",\n    \"name\" : \"Freeman Ebert\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4571b506-45c1-486c-bae2-2ea73cac0607",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.852301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.recaptchaEnterpriseConfig.batchGet",
          "schema" : {
            "description" : "Response message for the BatchGetRecaptchaEnterpriseConfigs method.",
            "properties" : {
              "configs" : {
                "description" : "RecaptchaEnterpriseConfigs retrieved.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1RecaptchaEnterpriseConfig"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1f4b05c0-363b-471a-97e5-afe203bb516e",
    "name" : "Atomically gets the PlayIntegrityConfigs for the specified list of apps.",
    "request" : {
      "urlPath" : "/v1/y6fv2xb3u5pbh9wccap7c243t7ysje5yeqsob5e7zrazai00lnb7yeyop26s9kjjrx7nrrolaode9nxnc54q9ri4gyhj9osha2b4rc3l38ucvfiljew9zpg88bafrlzspl0137lae7avjq1lp0nmhbkof5qzl8i7qqjw6drez94pf9sxhti3m2ic7oj8dcvvk9/apps/-/playIntegrityConfig:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"configs\" : [ {\n    \"tokenTtl\" : \"uwbq41nez2cmgj6v0qy6ryzv458pb3i0mzsy5l54t630on2hjl\",\n    \"name\" : \"Carroll Weimann\"\n  }, {\n    \"tokenTtl\" : \"j1n8x7lo1natzvhnbczlf3zva8xy8es\",\n    \"name\" : \"Gerard Jast\"\n  }, {\n    \"tokenTtl\" : \"v5s2fag8agdd25s3h2nhq3f67667ywz164qa3peyv3tmjh6gtueyn1hy5c9ndyakodw9igq6vscjcynxtxlphmrbkihn6bdbj74g3ub8hbh1prmhlb3dfsdgk0cc32ekx6ivftacbps4hag8d8xvxojwsqg57hfa1zshqr3n8u931qhalapv9i0dat4go\",\n    \"name\" : \"Anton Wintheiser\"\n  }, {\n    \"tokenTtl\" : \"543b1c0eg17yvcq944sh6rutawvwrmhuze003i13uw4bvdaa07ujbzvegpjbxuffrwk0w82sfg40c53st8k36qpl8ig0yft4gmdomcn2y\",\n    \"name\" : \"Bertram Zieme Jr.\"\n  }, {\n    \"tokenTtl\" : \"7ybguu2q9ko2ahxqrst0yhqbdfbsyu6yxjnqtvsph4rbxwmqir76z8rjdkydqbqr6x746cnrqku9u4uu256k4t55r46d6zjfirjgci8u7llsmdtv7knw1of5okha7r\",\n    \"name\" : \"Mr. Barney Mohr\"\n  }, {\n    \"tokenTtl\" : \"mqbr3y0curgs73tau6829jdc4wneaoywqus7x0jisa1i6di5nd7ug7snu3n7sydq98eo3bxbln2ba1r8t\",\n    \"name\" : \"Golden Krajcik\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f4b05c0-363b-471a-97e5-afe203bb516e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.851929Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.playIntegrityConfig.batchGet",
          "schema" : {
            "description" : "Response message for the BatchGetPlayIntegrityConfigs method.",
            "properties" : {
              "configs" : {
                "description" : "PlayIntegrityConfigs retrieved.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1PlayIntegrityConfig"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cc0ee0e8-4e63-4f6c-930a-37501f6c37f0",
    "name" : "Atomically gets the DeviceCheckConfigs for the specified list of apps. For secur...",
    "request" : {
      "urlPath" : "/v1/30qk1h8pm8law4gg1b0id2kmkuv8vuzo00b5haujqjw6rb940jpqk1mu1oh1i40o1qxxsws6qo8c2ufmvgpdduywpq7fwe9w4m4ajl84itdaz38dscv9bha9v95do7ujobblaz98bvszs9/apps/-/deviceCheckConfig:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"configs\" : [ {\n    \"privateKey\" : \"qtw7lfok2khz9omfsxrqmdj3v21gs6swrqcqlffakbxumi8235xd9xgzylu7gk62l6tvwi7ugac4kpb0phmg1gz418woiwvtsvctr0fsvjp0nezx\",\n    \"privateKeySet\" : true,\n    \"tokenTtl\" : \"d3b9q2xymo9iu1mo060pgvzjzw6qajnms6zuyl898kn4uokstfd29g7huoc6gvrb3d2jpatzvl8bmh6vkd60merbj69dewgqggnolmivdbcjwj4ejss5vox1j8\",\n    \"name\" : \"Tod Streich MD\",\n    \"keyId\" : \"88h5\"\n  }, {\n    \"privateKey\" : \"rdnjtg0bc2uia8g4gogzpi6xjyc3c8rxuw3zx0ebnxbxrvb8neyrjeqll2c5utg7p5c8l12x6bz3szztubybylu42qchg59lvsh01u7ehbnkml6cv8t77pl99vj94g22ssutc0wgliuktfa9i9yz6g69alp\",\n    \"privateKeySet\" : true,\n    \"tokenTtl\" : \"olvgifnrh9o48wrn3czdhyu0c37p584nkg89lde0x3k8g6r95js27uffz\",\n    \"name\" : \"Roxann Trantow\",\n    \"keyId\" : \"3k86\"\n  }, {\n    \"privateKey\" : \"am09k62sq2v2705ps7n55voq1gn9wmn8nkyxxmz7stsjfxyyoa0kuszml9a56t4m2xvzf9wg2g5nrz160umqmedyeg1q3nuykxzrlv3cwk1zyhebwycis6xb0gft4jfsrbgagymvgzhiywsbssip9zxloftt0xw85psr4zbt7u44gvxfsvlpsabv4\",\n    \"privateKeySet\" : false,\n    \"tokenTtl\" : \"grmwum\",\n    \"name\" : \"Noriko Barrows\",\n    \"keyId\" : \"vv58\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc0ee0e8-4e63-4f6c-930a-37501f6c37f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.851484Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.deviceCheckConfig.batchGet",
          "schema" : {
            "description" : "Response message for the BatchGetDeviceCheckConfigs method.",
            "properties" : {
              "configs" : {
                "description" : "DeviceCheckConfigs retrieved.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1DeviceCheckConfig"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f728b015-7a96-493b-a787-e9ba17087aab",
    "name" : "Atomically gets the AppAttestConfigs for the specified list of apps.",
    "request" : {
      "urlPath" : "/v1/ljysxfpkssge0wic5iq5kt9g3qfbcpy2g9dydqcpz52sw34dqqpielyvdzlrjoj2hgasytte18hrmjehoqk61s0x397ab61nchsy604wu9rb1oezxp23n0l07fq8xbc948nnlfhs6lrjnio9izwhrrubgpcownz8j38oa6bzlzi8shy7o5s/apps/-/appAttestConfig:batchGet",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"configs\" : [ {\n    \"tokenTtl\" : \"8b8gb25m05dj3puxfrexsjbbp1xzcaegdpc8sqn7bt1pskw7keoe1gr3u69up7c66j5n8d9v8x376g35370s0jn33u28hrc20kis6he6bezxw12wd28a0g6akw6byqz8zh8hh4m83r5aujxu2dyhur9h\",\n    \"name\" : \"Meredith Veum\"\n  }, {\n    \"tokenTtl\" : \"uq1y0jtjc10h4i922l7squpj0f4o2fq6amn7uufwul6ef3sanjqc0y7h2owa6vtpsygzuwhbxyhj5fthj7n1ze728rnmmt50zj2dfk4z3xy3a48t5pyeow2e2eqo8xwjvoomeockfewrhkx8z6085y0d8honpzju813i7ihrs\",\n    \"name\" : \"Isabell Hahn\"\n  }, {\n    \"tokenTtl\" : \"e4lr2uzndtkqiuebonp2vgxwt1nel94yjc1mg2iprn6dprkjmv4eie5y3fgp0se0fsmobf9ta2ffber0gdnavkbpbghuq4qftt84odvfkfx43f6nsmhqswnw1iegtgxgj379apxcbu6wu\",\n    \"name\" : \"Yanira Bartell IV\"\n  }, {\n    \"tokenTtl\" : \"wnst982dt0fhjp7w6bcnvxon6qnv24gtevbgfw1z0mvtavswkdvi2fe2miekg5vghgawz\",\n    \"name\" : \"Collin Swift\"\n  }, {\n    \"tokenTtl\" : \"kezqd1\",\n    \"name\" : \"Jeanette Waelchi\"\n  }, {\n    \"tokenTtl\" : \"o9bb91ue96hullaachfoitymo2m3wk623iqw2v5wzdos06uqia19f4xaejdnd46wdj0p6oo3yt8rn1b1tggnaiymayr6fltaq3qdx\",\n    \"name\" : \"Stewart Russel\"\n  }, {\n    \"tokenTtl\" : \"vej83hr5eracv7u93bveq1ai6ohxjsgp5792rfdumlovawz3n8t7s3zthpakogr9wc1eppfgrvkq92t2\",\n    \"name\" : \"Shila Pouros\"\n  }, {\n    \"tokenTtl\" : \"lkr9x9q1m6yynibwurg0dx5hxv7aabojxn1aacyuw2wk3q6t3t31i3stsluxobm6shtmux9r9298j1h8k9x1dlf90hyxclyxtwu48p9tqkwo3b78yvj6l3rui5ayxt0s562hifpkm3vvf9ou9rw3xijfdofgtyqabd\",\n    \"name\" : \"Ulysses Heidenreich IV\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f728b015-7a96-493b-a787-e9ba17087aab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.85092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.appAttestConfig.batchGet",
          "schema" : {
            "description" : "Response message for the BatchGetAppAttestConfigs method.",
            "properties" : {
              "configs" : {
                "description" : "AppAttestConfigs retrieved.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1AppAttestConfig"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "10ad06f3-8a0f-4680-8df6-1596f5526c91",
    "name" : "Updates the specified Service configuration.",
    "request" : {
      "urlPath" : "/v1/Danny+Halvorson",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Leland Willms\",\n  \"enforcementMode\" : \"ENFORCED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10ad06f3-8a0f-4680-8df6-1596f5526c91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.850369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.services.patch",
          "schema" : {
            "description" : "The enforcement configuration for a Firebase service supported by App Check.",
            "properties" : {
              "enforcementMode" : {
                "description" : "Required. The App Check enforcement mode for this service.",
                "enum" : [ "OFF", "UNENFORCED", "ENFORCED" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "abc73cfc-7180-4158-bd1a-a6d4d36f4f5d",
    "name" : "Gets the Service configuration for the specified service name.",
    "request" : {
      "urlPath" : "/v1/Jeanie+Collins",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Houston Fritsch\",\n  \"enforcementMode\" : \"OFF\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abc73cfc-7180-4158-bd1a-a6d4d36f4f5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.850236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.services.get",
          "schema" : {
            "description" : "The enforcement configuration for a Firebase service supported by App Check.",
            "properties" : {
              "enforcementMode" : {
                "description" : "Required. The App Check enforcement mode for this service.",
                "enum" : [ "OFF", "UNENFORCED", "ENFORCED" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Required. The relative resource name of the service configuration object, in the format: ``` projects/{project_number}/services/{service_id} ``` Note that the `service_id` element must be a supported service ID. Currently, the following service IDs are supported: * `firebasestorage.googleapis.com` (Cloud Storage for Firebase) * `firebasedatabase.googleapis.com` (Firebase Realtime Database) * `firestore.googleapis.com` (Cloud Firestore)",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c7f541c8-e90c-4754-978e-9569ed357dc1",
    "name" : "Deletes the specified DebugToken. A deleted debug token cannot be used to exchan...",
    "request" : {
      "urlPath" : "/v1/Ms.+Magali+Becker",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c7f541c8-e90c-4754-978e-9569ed357dc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.850086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.debugTokens.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3b4e83ef-726a-4f1a-ba9f-4f995448bad9",
    "name" : "Generates a challenge that protects the integrity of an immediately following in...",
    "request" : {
      "urlPath" : "/v1/6ldbhx0vdhstk8pp0zkn7dzuw0cf9rwf11km7fw8irl6p1lqv6c94tyxuyk7o21nw16zku2n3:generatePlayIntegrityChallenge",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"challenge\" : \"owcvprho0yu3d7pwwxxiw\",\n  \"ttl\" : \"mjb4w93k26758xaj3fu5k7iduxwfneu6nch\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b4e83ef-726a-4f1a-ba9f-4f995448bad9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.84999Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.generatePlayIntegrityChallenge",
          "schema" : {
            "description" : "Response message for the GeneratePlayIntegrityChallenge method.",
            "properties" : {
              "challenge" : {
                "description" : "A one-time use [challenge](https://developer.android.com/google/play/integrity/verdict#protect-against-replay-attacks) for the client to pass to the Play Integrity API.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "231afb17-1502-41cf-b346-3f1895a7dbb7",
    "name" : "Generates a challenge that protects the integrity of an immediately following ca...",
    "request" : {
      "urlPath" : "/v1/gyj7f2qatmeuttpkrr97jg9vyd20hvkutmd2trkohmsdnjcjms7zn0xjqzo6t7h523n0g2fm07zbc948ryrk75ntp0dlv42p10ax5lemk2b8rijbsjd6u28rgty:generateAppAttestChallenge",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"challenge\" : \"m12ktojvohsw7ox9iq3edu3x2rgixktyp\",\n  \"ttl\" : \"h69uozkysskfwxxxgb8g9g1sbqdgja2x2htw8rmy6ca0q0onhz6cz2m6epqutizk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "231afb17-1502-41cf-b346-3f1895a7dbb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849894Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.generateAppAttestChallenge",
          "schema" : {
            "description" : "Response message for the GenerateAppAttestChallenge method.",
            "properties" : {
              "challenge" : {
                "description" : "A one-time use challenge for the client to pass to the App Attest API.",
                "format" : "byte",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this challenge is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0e2ba1b7-989e-4303-ba76-ba054abca8eb",
    "name" : "Validates a [SafetyNet token](https://developer.android.com/training/safetynet/a...",
    "request" : {
      "urlPath" : "/v1/voogioyc:exchangeSafetyNetToken",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ttl\" : \"e7wzcramvkz5a6qpudfbgig1cch2jp17qynyuvv5krmofpofmv074kn0qpnumk3czlclmqatc74si0v41ny2sdnvt9zg7j3v50rgvj4xz0qpxtih3pg6bvtzzz308k27125muzmmzhbjqu8i1tz0vpnorcykieely4qpvc2aev0yembq\",\n  \"token\" : \"8rz1ck46ic9umho3a8uaejzuv6f59e6nm2y5dgifcoxqekph04wwbryqvb2cotmjy4o3j83j4wvkgh2lnm8ya06p5o77mck88byh907bsp9lbrbgtuq24svkf382bawps1d179dlmb9vcazlvoqekq4n2w8tgg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e2ba1b7-989e-4303-ba76-ba054abca8eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangeSafetyNetToken",
          "schema" : {
            "description" : "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
            "properties" : {
              "token" : {
                "description" : "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d2a9aab8-90f2-483f-b7d7-aca493fb9e53",
    "name" : "Validates a [reCAPTCHA v3 response token](https://developers.google.com/recaptch...",
    "request" : {
      "urlPath" : "/v1/cky85k03mjkmyy6g14j24lkw0ci2fbuvk47dq9bpcwyyw1jh3o:exchangeRecaptchaV3Token",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ttl\" : \"79qxur8bk74wa5dxxc0m2cpu\",\n  \"token\" : \"l2nsphqmh8e39mxmihu2aql2ves4wxpe54z1fwpyrzqsl64pr8k4kbmvvde0ruak45kd9d85xnftm9o65lwvfgl8oebrhsemxyd1a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2a9aab8-90f2-483f-b7d7-aca493fb9e53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangeRecaptchaV3Token",
          "schema" : {
            "description" : "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
            "properties" : {
              "token" : {
                "description" : "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "430218e7-f359-41f6-854f-dd8624895548",
    "name" : "Validates a [reCAPTCHA Enterprise response token](https://cloud.google.com/recap...",
    "request" : {
      "urlPath" : "/v1/oplphdjx7zn4c9alnwlc7rf1waqfzpaj8j39lfkpaqyb8zsdv1mmybto72d27fmkxbkp95p4bs6ju3z0dil1p528qjr8451j7ey9ecz29dvwqs3wi62i295c0df1lyvkwezth3xyxh4ad2sjansqngii:exchangeRecaptchaEnterpriseToken",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ttl\" : \"6q78esdjx6aykopafo6bhgsjbmp6yfd6eko66xdz9\",\n  \"token\" : \"5z33qohyodugd7ug87\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "430218e7-f359-41f6-854f-dd8624895548",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangeRecaptchaEnterpriseToken",
          "schema" : {
            "description" : "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
            "properties" : {
              "token" : {
                "description" : "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5e4bfe5f-e2c4-48ee-872d-f496127b4073",
    "name" : "Validates an [integrity verdict response token from Play Integrity](https://deve...",
    "request" : {
      "urlPath" : "/v1/0g947jmgoa2zb5qpodl3jszoos7m033qta34n23d9bti9grzkjn5y3lm6sy7f8p2xcgin5ik3ydeljoflr95nv4fxbbiw2ug90kor0ih9astt69utrkyvpwgrueblfyy0k3xrys8g5rpn2zo91vkk8epc1i20jfdj51tb3ykk2m1p69x0yc3sodq3cgwvt:exchangePlayIntegrityToken",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ttl\" : \"zfc3p4nd5imk7znvd2ptagodrd7ho9g\",\n  \"token\" : \"xap2jpkg8l6xb34qituj8libb6sa85kah3oepp1r8oasuf4kug4jx5r9ddz57uo1bw2cqg7tcnl6e8593536jl2kbfw38uvz8msaee9ubp1ltcvjdxgoxmfo7doxekiend1dts261w2jwg7yywn9xx2a96fqq4fdwl29yt4i3p3ya\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e4bfe5f-e2c4-48ee-872d-f496127b4073",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849539Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangePlayIntegrityToken",
          "schema" : {
            "description" : "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
            "properties" : {
              "token" : {
                "description" : "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "21f9ca75-b766-45fa-aac3-cc744bd29290",
    "name" : "Accepts a [`device_token`](https://developer.apple.com/documentation/devicecheck...",
    "request" : {
      "urlPath" : "/v1/odiekvhu9tb89upc0totq0yqsv6qjnxva66zfc571mfmlnqxfop6tegmkny722es8kgczflvqm7jpoo7ta2788w7f8rm7m7nxvg7q1ab8d6170h5ogqt8zqis29c5nw5v1ni01fenzozeristigdwd8j9k0fgq4yw0vv0clte:exchangeDeviceCheckToken",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ttl\" : \"f0lq39iowflebgmay694ucndxe3cfd6mw8ltzu19badnzo0qpzm2kw5jepk81z4u6mwlognlvtihlu31rrkr1zpx70herpp30hrkeaqjp2n94x84jbxmwhr5r04kp7ml3nm7dw5o1i11q5l39rfff5bhbajw4v2ti24z57486to3mbc6irvihfa1ac7cu31r\",\n  \"token\" : \"fbvm3bw448bt3bujelhfxe1ugn5c7vqf60c9gbj\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21f9ca75-b766-45fa-aac3-cc744bd29290",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849453Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangeDeviceCheckToken",
          "schema" : {
            "description" : "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
            "properties" : {
              "token" : {
                "description" : "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d6ea8bb0-904f-42e3-bc20-4a13bd63b77b",
    "name" : "Validates a debug token secret that you have previously created using CreateDebu...",
    "request" : {
      "urlPath" : "/v1/n4bylfb5l6bf3rhqvof4bq9ifdhf43fxfpyiyil2tnvur00devkvhn96dxk5bgdd:exchangeDebugToken",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ttl\" : \"gpd4l6gf5maqmkrl4yry8tayk3ybk9h1ywue6apyohr0ydstjcsr2gip\",\n  \"token\" : \"mwy4hri0wktlzjz8dv271o8o7is\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6ea8bb0-904f-42e3-bc20-4a13bd63b77b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangeDebugToken",
          "schema" : {
            "description" : "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
            "properties" : {
              "token" : {
                "description" : "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ae012ff7-000e-47ef-bd4f-9b2fc4c38de2",
    "name" : "Validates a custom token signed using your project's Admin SDK service account c...",
    "request" : {
      "urlPath" : "/v1/d8unlookqi46ev115let0jvkttq6zlt3cnb8q7q8a0t6kd47zxdas991b98fmvpzwvmg5ctz7q16hzsr4f9h:exchangeCustomToken",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ttl\" : \"r7yfwwbr3ivefj70quql2y6qg7nxbs6d082dhrmchy6olg049t26zvaylfvlqd42aa4bzcwsl4gajbwrkdbejcbm26dbrg8t6791jfs6oee1ra4mig1w8qtfrc4k0oi1vf4zd80ehc39yw1gvk6n88kg1s\",\n  \"token\" : \"utjic3mgoljv5es6iltsjgot3yf6kjjuiias4uswaujdcael0my1b6hp0ozoqzypt1t5pk19r2tr1i0phopjmwr7vsbwsd77mvlp7kdhgm4m92mebq7jwgi3z1u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae012ff7-000e-47ef-bd4f-9b2fc4c38de2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849285Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangeCustomToken",
          "schema" : {
            "description" : "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
            "properties" : {
              "token" : {
                "description" : "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f93c5711-8d6a-44c6-a8f0-85585853b663",
    "name" : "Accepts an App Attest CBOR attestation and verifies it with Apple using your pre...",
    "request" : {
      "urlPath" : "/v1/yzt061d5w9cqpavg6zhy7kfxo8yqs51zfr20s8fe0kqj5d8cv2zj42hftwt202tjtzznlluam38f6o9wqbj3s417kcf:exchangeAppAttestAttestation",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"artifact\" : \"pj7efgulb25eyvfpbcbdhg6rhx12raubfvyazvf44klhv6fpd193upsdbslfjvmo2bnum2r7qq808ecqmgd1xs3d66u9ibtqqql8ouehy4geh3iolw14wxv6g6bp326biow12phu\",\n  \"appCheckToken\" : {\n    \"ttl\" : \"1lkhktsfn9ph876k41uws9ftl3gi971o8wlp54l47x8idjdbym9jd3ybn5mfbxfz4dwn8p3chgatgkz657p5hexfdea9hdekxrdf7b5loq3vlyw\",\n    \"token\" : \"5lhrfpneq1vb9jcbn4dudpf1k258hcts9h4cunhbbxvawuaolk30xo8aoa8f17zyifrwzxx065fkyagqbdz24m6l4uayf2n5i75uuv97h0we7sfa\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f93c5711-8d6a-44c6-a8f0-85585853b663",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangeAppAttestAttestation",
          "schema" : {
            "description" : "Response message for the ExchangeAppAttestAttestation method.",
            "properties" : {
              "appCheckToken" : {
                "$ref" : "#/components/schemas/GoogleFirebaseAppcheckV1AppCheckToken"
              },
              "artifact" : {
                "description" : "An artifact that can be used in future calls to ExchangeAppAttestAssertion.",
                "format" : "byte",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3d6f53c4-6745-456b-8273-534883db43d1",
    "name" : "Accepts an App Attest assertion and an artifact previously obtained from Exchang...",
    "request" : {
      "urlPath" : "/v1/jnoftkw7egrqtgjo8quam081byditgzy5wx0lmvxy4igp1try57r4fs3mmis427xtrim7bo7kkynixhkn9xqw4mjcvl9sukwp9q4ebmikjmv46n9obwjyl1u6uzprphuei61s6yexvucxjttj0t6lwrrsy3pppobw:exchangeAppAttestAssertion",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ttl\" : \"5kkx47dwwts\",\n  \"token\" : \"qg8sm6r6ues6vr1xxb0uduy8cg8l1r2140xgj9xdo4oa1ab1927m0zesv1caq5xi3niksx1apuhdvss897v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d6f53c4-6745-456b-8273-534883db43d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:49.849061Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "firebaseappcheck.projects.apps.exchangeAppAttestAssertion",
          "schema" : {
            "description" : "Encapsulates an *App Check token*, which are used to access Firebase services protected by App Check.",
            "properties" : {
              "token" : {
                "description" : "The App Check token. App Check tokens are signed [JWTs](https://tools.ietf.org/html/rfc7519) containing claims that identify the attested app and Firebase project. This token is used to access Firebase services protected by App Check. These tokens can also be [verified by your own custom backends](https://firebase.google.com/docs/app-check/custom-resource-backend) using the Firebase Admin SDK.",
                "type" : "string"
              },
              "ttl" : {
                "description" : "The duration from the time this token is minted until its expiration. This field is intended to ease client-side token management, since the client may have clock skew, but is still able to accurately measure a duration.",
                "format" : "google-duration",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}