{
  "mappings" : [ {
    "id" : "7e91be56-b2f9-46f9-aa15-c438888c3fc2",
    "name" : "Queries the contact center quota, an aggregation over all the projects, that bel...",
    "request" : {
      "urlPath" : "/v1alpha1/ndzegf77fqj3g321mf:queryContactCenterQuota",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"contactCenterCountLimit\" : 961244920,\n  \"contactCenterCountSum\" : 490756851\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e91be56-b2f9-46f9-aa15-c438888c3fc2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.563351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.queryContactCenterQuota",
          "schema" : {
            "description" : "Represents a quota for contact centers.",
            "properties" : {
              "contactCenterCountLimit" : {
                "description" : "Reflects the count limit of contact centers on a billing account.",
                "format" : "int32",
                "type" : "integer"
              },
              "contactCenterCountSum" : {
                "description" : "Reflects the count sum of contact centers on a billing account.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "30344ed4-0976-4ec4-b5e9-2cc8fce61820",
    "name" : "Creates a new ContactCenter in a given project and location.",
    "request" : {
      "urlPath" : "/v1alpha1/n6c258pz0q4aoexionu8w3thuxj0uamktymrvwlrxh5cyf795n50cpz7ssnkmxtlme3mzs69fax45peyo04byxheq71xoz30o2b3nx5624qfvlgyeslyg0dd4hx6ky2rjrl5db/contactCenters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"George Hane\",\n  \"error\" : {\n    \"code\" : 2001908439,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Quaerat sunt nemo magnam rerum quia. Natus saepe aut quisquam ipsum. Modi deserunt ut voluptate voluptates ducimus autem omnis.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30344ed4-0976-4ec4-b5e9-2cc8fce61820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.563257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.contactCenters.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "196c6e32-a59b-46af-b553-6fcd188fb6b6",
    "name" : "Lists ContactCenters in a given project and location.",
    "request" : {
      "urlPath" : "/v1alpha1/l4m81gdup2ufgjnoovtz5dg2t7sj5zhpp16yj2samn3bu89vlpqslvqgcmedhaj35ghcypaplfk/contactCenters",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"contactCenters\" : [ {\n    \"ccaipManagedUsers\" : true,\n    \"displayName\" : \"Neil Murphy\",\n    \"updateTime\" : \"2022-11-30T15:20:56.562155Z\",\n    \"instanceConfig\" : {\n      \"instanceSize\" : \"STANDARD_LARGE\"\n    },\n    \"labels\" : { },\n    \"samlParams\" : {\n      \"certificate\" : \"3ho9efzqwmwbpe24hrf2cnbxrfaz1uceeqemh1qfql06vm4yw03wpcvzg67f8h8zyhmmuervi77cn0shxdgve11j7rhtrt96tt8axl4b6r17rr5pkpdnwm6ohowtp6070zgo3q2bbbe16481h668fwavjm0kzd8fnbr9rl5y29ic\",\n      \"ssoUri\" : \"https://web.example.mocklab.io/988797\",\n      \"entityId\" : \"3ub0\",\n      \"userEmail\" : \"phjrmae2npcu8z6ktwqk34zj1rbcyytzcyzwqc2bf4l68odqopw02k17ryfar2cnb0nv1rvnt8yszvi7hgmj6m2jl8m5ahcl3u800jdcgqfxmnhep5h6wouja2elqk03z896t7gfolsg5af5atgheolff7n1ha4b8qw658gxul0i8266b3kj9jbr3r\"\n    },\n    \"uris\" : {\n      \"chatBotUri\" : \"https://web.example.mocklab.io/697906\",\n      \"mediaUri\" : \"https://web.example.mocklab.io/207729\",\n      \"rootUri\" : \"https://web.example.mocklab.io/004841\",\n      \"virtualAgentStreamingServiceUri\" : \"https://web.example.mocklab.io/708983\"\n    },\n    \"adminUser\" : {\n      \"familyName\" : \"Mueller\",\n      \"givenName\" : \"Farrah\"\n    },\n    \"createTime\" : \"2022-06-19T16:21:56.562768Z\",\n    \"name\" : \"Charmaine Schiller\",\n    \"userEmail\" : \"blpbpt2ttcq9h87azdvvb9hc9dvwyec18kdl6wv87s03qm7bnu9qs85hymo302fze0czd4bnrfp7ltuql2gd0txzm7elu403p60j4rlax8plbcldh53bs4fcykmwcheq1o6o92qxs7kybcjd54tls4\",\n    \"state\" : \"STATE_TERMINATED\",\n    \"customerDomainPrefix\" : \"ndu80ikla06humt4irgijb15hx7wlwj56q8ybnkrd2yxs6ugw0gwzgx91kn1l0fnb5ip0xpvb3nncg2u7t8hhxs6zg8h6e8q45uxaxo1pej3q2oq65ud\"\n  } ],\n  \"unreachable\" : [ \"hsojek4fpon7tr4vquhh852ufrlochp1dp7byg3s8to\", \"i97ocxf1ueun4jt2ny62ezs065ebf6c54pf9gej7zl0qln26h67bi7qqwbtr9nwncad5iulls595heykl83csckmk355iid68u5g489kpv9bedq7dffonkr56apccuo7puugw4s0dpvc7j4gdxjpu6qntlrsd04\", \"tjrx19d0yzy4f87qds9hxb4njjzqj16la3wp41715mghy7konitxv1mochkvom6v9d026x2225fvu3rwnpu32kcgdy6rkpdlkrjyzdrk90ynreg0e5gz3kmdrbbmi32i475v\", \"nw4pwn3goyt1wtym385c7h0wfci9sovrft0644ndd8gg3t6tmm7o9by7oujyyour7t2mahx305gc8e1uwp11fgpi5xgp31mffbx087teka34jmn24kmzb9bfhxqupxnc0h2mvrb3if9fk48dzgzp1kmt1n1puq5p9wov\", \"69a4u2d3sf9fvmqqzq9xd0zueq2o4qmstqdql0ukrlp7g18twm2af\", \"8if8cho7uqaz63c5qrj3hqvp9sdcgw76vdcz4eu86dyaf2zbayot7o8o054t1k4ck1ycolo4tk1adngft90ym2ohr7rah5cs2b5y3cm55mq9zlx\" ],\n  \"nextPageToken\" : \"xz3fatj1nc6is0wx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "196c6e32-a59b-46af-b553-6fcd188fb6b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.563027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.contactCenters.list",
          "schema" : {
            "description" : "Message for response to listing ContactCenters",
            "properties" : {
              "contactCenters" : {
                "description" : "The list of ContactCenter",
                "items" : {
                  "$ref" : "#/components/schemas/ContactCenter"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token identifying a page of results the server should return.",
                "type" : "string"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6af7c6fe-01e3-4281-9ad0-5a06e4264901",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1alpha1/Marietta+Senger:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6af7c6fe-01e3-4281-9ad0-5a06e4264901",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.562043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5738a90b-c4f7-4489-87e4-28392ae228c9",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1alpha1/Dana+Kertzmann+III/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Benjamin Spencer\",\n    \"error\" : {\n      \"code\" : 562005342,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Et dignissimos quisquam delectus. Vero consequatur fuga placeat quos minus eum quaerat. Omnis qui possimus eligendi vitae quis omnis beatae.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Leighann Braun\",\n    \"error\" : {\n      \"code\" : 57431186,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut consequatur doloremque exercitationem. Dolorem quod sunt ullam deleniti. Labore autem et magnam earum ducimus aut corporis. Qui numquam ullam.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Thanh Maggio V\",\n    \"error\" : {\n      \"code\" : 2024860480,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Consequatur omnis non ea omnis et voluptatem. Est quia voluptates doloribus omnis nulla aut voluptatem. Dolores eos placeat ut minus ipsam. Quae esse ut eos consectetur repudiandae. Eaque commodi quia\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Nickole Hane\",\n    \"error\" : {\n      \"code\" : 134300444,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Placeat facere dolorem tenetur dolor porro molestiae. Laborum laboriosam hic mollitia. Consequatur fuga sed deserunt minima maxime unde error. Qui enim ullam ea in quidem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Guillermo Conn\",\n    \"error\" : {\n      \"code\" : 131460856,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Est ab autem molestiae quaerat. Quibusdam nulla sequi quia. Consequatur ea velit est exercitationem consequatur quisquam. Dicta repudiandae quas corporis recusandae.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"gahj7s7gn582yhrcqm9bsl46h2y9arbci30sw588frxbdeoavszbr9r41euv49f\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5738a90b-c4f7-4489-87e4-28392ae228c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.561958Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "765f61e1-887e-4008-bb94-82c86e074f8b",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1alpha1/Mrs.+Byron+Sipes/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"bcsr256n58yeqa3vk1wc3eijax3ljv14jhfx8k1a1pequha6ufqpynygngp43ywzgottmgqvolnxvkp2rkh6vopnsu6pld8fu4qo3uagpbhlgxz\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Carson Wintheiser\",\n    \"locationId\" : \"h242\",\n    \"name\" : \"Marion Ratke\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Garfield Hodkiewicz\",\n    \"locationId\" : \"4x1m\",\n    \"name\" : \"Beau Ward\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Lilli Flatley I\",\n    \"locationId\" : \"x58d\",\n    \"name\" : \"Everett Kovacek\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Kristal Brekke\",\n    \"locationId\" : \"0344\",\n    \"name\" : \"Miss Donny Moen\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Lynelle McCullough\",\n    \"locationId\" : \"7msz\",\n    \"name\" : \"Dr. Luis Rolfson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Landon Raynor\",\n    \"locationId\" : \"4lp9\",\n    \"name\" : \"Gwen Kovacek\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Birdie Hudson IV\",\n    \"locationId\" : \"6p4r\",\n    \"name\" : \"Ms. Seymour Quigley\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Kristina Stokes\",\n    \"locationId\" : \"2gn7\",\n    \"name\" : \"Blake Conroy\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "765f61e1-887e-4008-bb94-82c86e074f8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.561188Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0b43d22a-e413-429c-ac85-b9bae1757928",
    "name" : "Updates the parameters of a single ContactCenter.",
    "request" : {
      "urlPath" : "/v1alpha1/Fletcher+Parker",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Ms. Sharyn Watsica\",\n  \"error\" : {\n    \"code\" : 588773046,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Sit ea voluptates vero ut. Suscipit porro tenetur voluptates temporibus repudiandae. Quos blanditiis voluptates esse vero. Voluptas rerum et eius nesciunt expedita. Molestiae dolor qui excepturi digni\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b43d22a-e413-429c-ac85-b9bae1757928",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.559639Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.contactCenters.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "75847bd0-b8e9-4a09-8bad-079e172072c8",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1alpha1/Michell+Sanford+DDS",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Cassy Fay\",\n  \"error\" : {\n    \"code\" : 1116573262,\n    \"details\" : [ { } ],\n    \"message\" : \"Et ut veniam. Deleniti porro sunt illum rerum assumenda. Ipsa voluptatem expedita voluptatum aut natus maiores. Sequi architecto occaecati enim ut excepturi ad. Labore consequatur tempore.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75847bd0-b8e9-4a09-8bad-079e172072c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.559398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f329c085-a08d-46cc-ba8a-184cf2fa7cfb",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1alpha1/Theresia+Dietrich+IV",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f329c085-a08d-46cc-ba8a-184cf2fa7cfb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:56.559086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "contactcenteraiplatform.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}