{
  "mappings" : [ {
    "id" : "673d2e96-99ad-360b-9ec1-dd0b7a83aa67",
    "name" : "Creates a `WorkerPool` to run the builds, and returns the new worker pool.",
    "request" : {
      "urlPath" : "/v1alpha2/2qqe0y6rcqjzu6hwxi5taxhejvgkt91e95tu1eelw9t9fhdu82edl8d29wbg7zz5gj24ske7573g0wz085sexnz321oq8nhnv6yxilbcql87hi6bmp6lhicdxbyalcf0xnv66n1118g607jimogwq5w1ky5h0epvw1uh5x0e53v4/workerPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2023-02-03T14:13:46.414468Z\",\n  \"deleteTime\" : \"2022-04-19T13:26:46.414493Z\",\n  \"name\" : \"Jamaal Medhurst\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"j45f0sry65bze1gev8f5scucbx4f0u810aqbzfc64bf6oxw0qcm6qbiqpb261ls4rvyr1kcg792a980h67wu9dymhh4odk99tigr3s2iquozzccbo3zsimz3kmverj0sbg1koqzb4a6vuy7lur6dk5h1wj4kn\"\n  },\n  \"updateTime\" : \"2022-10-01T16:17:46.414573Z\",\n  \"state\" : \"RUNNING\",\n  \"region\" : \"s3g71u39mqtaeokmaxv9x01hyppdodcviua4hvk8jle5itd86nbur8ke4k2p1adohjm6g3h9eklmu3z55d77sddbe7w95d1i1fj6quifol612cu4rjaf2frs7kq1w91w2ghmlnrrz26j08v38plhuhwp\",\n  \"workerConfig\" : {\n    \"machineType\" : \"zk4atlvf3a4hpohdx38wap5xtspf6hsot2ap3xurbbbfvbtqce0zpdcddj6an9iy0cqvgpvohxixxkz6ioartnrt9102q8ptqnthbaksb8pgybv9rtf2mbxec78j3rnld6fem0fmsh03grljtn2gbv5yun68ma6illbn\",\n    \"diskSizeGb\" : \"l0t0xib35ffqje29ko8fiuu0nm5h3nlin1nm46q2s09ofb2a6e4kxa0vqgykcc6duq9v5lhiwjmmm1l2jfraso19yoqt1nvpio0rsuxfvz3j3axjvvzkz71mp8acwob5u2z\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "673d2e96-99ad-360b-9ec1-dd0b7a83aa67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.create",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "86668188-36fc-332e-9ccd-26142c6b7b5c",
    "name" : "Lists `WorkerPool`s by project.",
    "request" : {
      "urlPath" : "/v1alpha2/dgr2z92ab47yo76ydaz/workerPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"createTime\" : \"2022-11-04T15:08:46.413026Z\",\n    \"deleteTime\" : \"2022-11-08T15:57:46.413052Z\",\n    \"name\" : \"Shaun Rippin\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"vgpd0ebdujzbbipew905hyf4fzrnoasxty6zfhl8s7w2hcrvhigy1iooo80fjmqzpf3ot2ectrbxrkr\"\n    },\n    \"updateTime\" : \"2022-06-20T15:11:46.413139Z\",\n    \"state\" : \"DELETING\",\n    \"region\" : \"oyl65124ndfa22n9oxdm7wfvk9u3cpdgr8t0gjww19jen445klrr9gxf7popank3wfuhrgu92rn6buowus7p30\",\n    \"workerConfig\" : {\n      \"machineType\" : \"vpe4vsg8a0adv7wo6zcf2rpb\",\n      \"diskSizeGb\" : \"ogf4mk76ycnk3ubm1qfoa48eiivagdb6s1rg0y146le5rshwufs2c0txgabb1y\"\n    }\n  }, {\n    \"createTime\" : \"2023-01-06T16:27:46.413217Z\",\n    \"deleteTime\" : \"2022-03-30T15:46:46.413244Z\",\n    \"name\" : \"Alexander Rowe\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"42j4w5ir4j3r4eo1ibexzjatb4nuvc49oy4f05szv9f9s3s5xll96w45ooupbyskusivv98fwr9mgji601nhtlhy2esnzt19ylcovrc7whwwq2e0ul34gaildda25k6gvi4e6\"\n    },\n    \"updateTime\" : \"2022-08-04T16:38:46.41333Z\",\n    \"state\" : \"DELETING\",\n    \"region\" : \"y6ptuninlpxqeybpj2ha5\",\n    \"workerConfig\" : {\n      \"machineType\" : \"irts0rnccguoxs9dme017tar1zgrxklhbeeqchq38kzameht9s9unc6ls70k6s08d8deyeg1gnsknoa1tanzkfst3r2bd5wqq2mmjdgvqpge4thhsjhu2bp2ogwlgzj6n790\",\n      \"diskSizeGb\" : \"xdebqxc02cqhqyttz1c1mnu12p8c4soisu5krwlel3to7y3y757tz04nvj18q60v9evkcvwcqlkg8ibgtmeb1xdbwygqy2h8u99po01csjjpxuuo67eb0giqx41b1oj8wetyw6f3ltnc2b4tiuoptl2ribcna8isfmhybinzjz2zsko0l1f5biifa81bei17zm\"\n    }\n  }, {\n    \"createTime\" : \"2022-08-08T15:04:46.413408Z\",\n    \"deleteTime\" : \"2023-02-09T16:24:46.413436Z\",\n    \"name\" : \"Gerald Wiza V\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"s9e86g8\"\n    },\n    \"updateTime\" : \"2022-03-13T14:45:46.413518Z\",\n    \"state\" : \"CREATING\",\n    \"region\" : \"5r1rsmisl9l27vfxqs3n7z0xszoeab724a2uu9u2eolfn9k3ntgewvmovnd9qsi8xbo9qo411bs53bjcpi8q5i8i08ravsres\",\n    \"workerConfig\" : {\n      \"machineType\" : \"7afm4cqd4ng1mmn143x7ha9pttdtqnzv1vacysfwecl8hhifj85go1kpkkwm3vc\",\n      \"diskSizeGb\" : \"2ejs5gr0k4zhqinamd5ka\"\n    }\n  }, {\n    \"createTime\" : \"2022-11-10T14:46:46.413596Z\",\n    \"deleteTime\" : \"2022-08-15T13:22:46.413623Z\",\n    \"name\" : \"Rod Schumm\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"7pd1vahhff\"\n    },\n    \"updateTime\" : \"2023-02-24T15:08:46.413705Z\",\n    \"state\" : \"CREATING\",\n    \"region\" : \"hetm908a0ut2r\",\n    \"workerConfig\" : {\n      \"machineType\" : \"rd0nows567t\",\n      \"diskSizeGb\" : \"f0pg656iaqav4i915a235q\"\n    }\n  }, {\n    \"createTime\" : \"2023-01-07T14:09:46.413779Z\",\n    \"deleteTime\" : \"2022-03-17T15:36:46.413806Z\",\n    \"name\" : \"Hazel Heller Jr.\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"k01ap61rvq3jsijopnlxs9vvqd7w34rk3mbjbeq9amigqvyv2yqwd9ik49i8aa6cnqyk\"\n    },\n    \"updateTime\" : \"2022-09-17T15:26:46.413889Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"region\" : \"2iwszednvfc4cije59t2h5k68dleqy5h1zke2es2fcbh4hrskqspjvziqb2h78negybfjvkow4a27zr3koj9xahw3q4axs44zrvrvocuurcs90yerd6m7d1jrur\",\n    \"workerConfig\" : {\n      \"machineType\" : \"d8589b7r4roifibconm0c9amerosiii17z4ruwq9hv485sh8x7xfnxm9o1em48slwmkbic4pa3qz6nk53hcsnvkml9dgcplsxs2r31nlofecazcs7ky8nipyd305phdc55ak61zv68yfw3t995c3qs3qj3tauz4kh271bkqdxt0v61odoems\",\n      \"diskSizeGb\" : \"64nvu3pio7yl9wu2wa9kcqc08k8ktps3j9ki0adly9s7s7sq\"\n    }\n  }, {\n    \"createTime\" : \"2022-06-17T15:33:46.413965Z\",\n    \"deleteTime\" : \"2022-11-19T14:53:46.413992Z\",\n    \"name\" : \"Mr. Luther Stiedemann\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"a52uvuhzexy2qbg97mcwg14r6onuyhpel18l6crdhhk1k81db94duqrvilfqshk2hsy9wuojb0ikazzfigxb827xmvogzt2joofl\"\n    },\n    \"updateTime\" : \"2022-10-24T13:48:46.414078Z\",\n    \"state\" : \"DELETING\",\n    \"region\" : \"1duwckb7xreu51fv75cjsvtcgbpoajcpwk0j9s66nrilhn618y856dsw0ollnxsri4zic\",\n    \"workerConfig\" : {\n      \"machineType\" : \"gd4e02dl8e80sxhgk30tz1kfoszusz1izjld9g6ox3\",\n      \"diskSizeGb\" : \"pyhd914wdvmj8sed836prw12lthwl0nmpl0nwi9503n84klw4qresmn03hr9lxrvvlsxosad1cfj2z2k1rzpbm5oxxui9i2s3d7n3n0aezqmxv8ahvwac\"\n    }\n  }, {\n    \"createTime\" : \"2022-05-10T15:16:46.414157Z\",\n    \"deleteTime\" : \"2022-12-18T15:18:46.414188Z\",\n    \"name\" : \"Gary Leannon\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"ysqb9pngsd5r3fpf7mf1wcn7276nk5nqu3srpy6jp1oauz9yo24l6a6lv0fn87hsdwqwma4tygsk0oxo\"\n    },\n    \"updateTime\" : \"2022-04-26T13:28:46.414272Z\",\n    \"state\" : \"CREATING\",\n    \"region\" : \"9ea6d1dnqyqank5vruuqe\",\n    \"workerConfig\" : {\n      \"machineType\" : \"w63sp0injqrjabhbghkn9i68gpu3dkg61kh7sranh76ohvyo9fhlqpkh9ne37hpxsaudbwvndxkwsp4uj3mg93w12vzhphx3c20japoj8l96gmbxfujm\",\n      \"diskSizeGb\" : \"g2vx1ud6g7yc9funicawbmfw6qurirv890h7nu4mngqxh5cdmvs0vmljpfvoavlrhwlps4hp75pb612enxj625nvqh9hkf8t0abwx2ujepjn7mjopte2ecqot1chhk1c\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86668188-36fc-332e-9ccd-26142c6b7b5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.list",
          "schema" : {
            "description" : "Response containing existing `WorkerPools`.",
            "properties" : {
              "workerPools" : {
                "description" : "`WorkerPools` for the specified project.",
                "items" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "725974fa-c706-3a77-ad88-e0239bba081c",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1alpha2/Mrs.+Isabell+Jones:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "725974fa-c706-3a77-ad88-e0239bba081c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudbuild.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "85f6f1e1-e856-3c31-9b6b-fc13ecce8420",
    "name" : "Updates a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Mr.+Russ+Miller",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2023-01-11T16:38:46.412594Z\",\n  \"deleteTime\" : \"2022-03-14T14:14:46.412622Z\",\n  \"name\" : \"Tammie Wolf DDS\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"t32gp1xrshz1of9at12slxcnb3t200d2bxp9n8owsq4tadatyhp6gij9ns\"\n  },\n  \"updateTime\" : \"2022-06-25T15:14:46.412716Z\",\n  \"state\" : \"CREATING\",\n  \"region\" : \"b8ziepptegrycxtcdz5sk2jbwqyyov4fbuj5pcuj6uv6vxe6mlcvf23djnhl0ftnj9lih3qvd7mq4b8ljwfry6gez5uuxw0rmvexgsujn4ylpnmb0ujna4zmv114zvy7bvav\",\n  \"workerConfig\" : {\n    \"machineType\" : \"7d70ada0loy1kpjt290wzx0n6s2q8mviz97grkgd264v5uvpqt08dcc6wh5jqx1i1wgxalc2y8os4tsimzv3338eikzw094g02avcn5zsl2qf30z52wtt5gbdldhg5z6ka8bbqg3w3lfs2ntgl1q372\",\n    \"diskSizeGb\" : \"p6nhbwnllyc36p98je3vyycl68rx4j0sluyitruagf7gsvb3mthr23zcy2siigk28idtvc3d666kfkrilw93f8ztqgg8r1yzzkj3pia46gzkf0rdm2nrql6njymrbwghgf9saz3egwckrax4k7q8byu2w9jc2n8ifn3201qvxi539ofbsjzai3alu3qajclh7o489t3i\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85f6f1e1-e856-3c31-9b6b-fc13ecce8420",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.patch",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "514b281e-eded-3a13-9ed9-9818da0bc33c",
    "name" : "Returns details of a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Jeannie+Graham",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-03-14T14:49:46.412195Z\",\n  \"deleteTime\" : \"2022-03-28T13:47:46.412228Z\",\n  \"name\" : \"Sherrie O'Reilly\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"gtvxglm3qey1xruie6tovj1evnlpwjkkhcuuze9846hh7z81ng2jy80fye88djloinms8zm7aa1ccrqoezs6ud4942y4f04djz1xbehx5h\"\n  },\n  \"updateTime\" : \"2022-08-02T15:53:46.412326Z\",\n  \"state\" : \"CREATING\",\n  \"region\" : \"qbmxptforubrp5gt7vbehje5f\",\n  \"workerConfig\" : {\n    \"machineType\" : \"uflh8\",\n    \"diskSizeGb\" : \"dgxdvjwggkc6ps393yc1ey0fgb412xfvtysbk0mlbwcq91fvogvxicqpsqcad3saoxkqscwiibauiguzf1h9z4i9auw4ksdpfu1w8dc7pd5so8axm7phu7msvecj50iytda3fa8shx21ut9jcswd7z4ui8vzhv7nadjhvce\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "514b281e-eded-3a13-9ed9-9818da0bc33c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.get",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "65065bb1-8f0b-3a3a-977b-ee4dd717fb7f",
    "name" : "Deletes a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Kelsi+Lakin",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65065bb1-8f0b-3a3a-977b-ee4dd717fb7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}