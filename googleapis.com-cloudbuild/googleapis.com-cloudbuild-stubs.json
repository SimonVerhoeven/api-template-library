{
  "mappings" : [ {
    "id" : "bbb964b1-7a4d-40dc-b13f-f40ccd17856c",
    "name" : "Creates a `WorkerPool` to run the builds, and returns the new worker pool.",
    "request" : {
      "urlPath" : "/v1alpha2/2ygtqbw1aoywcrv70umc80p61thmix3c0bn25f90flfs/workerPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2023-01-17T11:48:21.360353Z\",\n  \"deleteTime\" : \"2022-09-04T09:08:21.360382Z\",\n  \"name\" : \"Gavin Witting\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"7oao505jekpyez9fm3p06q94lq8ki1enbcl4aqgjd9l7ihr7k08n2rpe6gyav0y0w0qrwjece70cpy6uq4cn3ozs8blb5kof67ua4dvk5enibic5uox23lpraahg0ecbmu95yu0vn5q60mzr2raazigy8jf7swe8zty4xxjwn9kuk8yt1nspv8wufiel0ke7ynhb\"\n  },\n  \"updateTime\" : \"2022-08-27T10:13:21.360473Z\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"region\" : \"1gf0srq81m0zux2urfyserjddiymqghqxx2p6mxsu0v2isr7qyzyd584nuj0598tord18ddo4tz0b5h5rtqwiasemtwa29vsv35618dka1ptxqycp7w9\",\n  \"workerConfig\" : {\n    \"machineType\" : \"yu407n5mmhuhiyqescofwo1vt0vg6ee412unqow07yyijtd34obqn1anudwblr19u9qyvuwie48p06w5ju00ym64v8o71w708ue8d2lrn5wfo58gap\",\n    \"diskSizeGb\" : \"4r6nscjtgeryghqrytm1cual32d11ps9qwyrv4xgmqzhe0lqukhnrgrdjf8gs6a8mf88kmibt1jiasbvifvdjkc4j8goq2leqec3r5amm2tpw5tc482ehuvgz65sx\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbb964b1-7a4d-40dc-b13f-f40ccd17856c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:21.360605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.create",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "2dbf49cf-04a4-436c-850b-1d9929b17536",
    "name" : "Lists `WorkerPool`s by project.",
    "request" : {
      "urlPath" : "/v1alpha2/xxlv4sgzn3yu6px06e88sngvbp8eupltxpflaczrfke409x3jr2/workerPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"createTime\" : \"2022-04-13T09:28:21.359018Z\",\n    \"deleteTime\" : \"2022-05-09T09:55:21.359047Z\",\n    \"name\" : \"Carmen Sauer\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"hl36vw1ggi7wlotdih2z34abdlp6cxbo3pielddo9h3oc9u8w3qj1a9ren00938tr3czqncmxzn4s95j2lz3g3tdz1qfddvfoui80spkov04p3gmvq75xrto8\"\n    },\n    \"updateTime\" : \"2022-10-29T11:16:21.359143Z\",\n    \"state\" : \"RUNNING\",\n    \"region\" : \"n2mizpn7vb814c98vnds6czlae2znbo05bhvxbeg1mki2n24ruk1y4oyvqvfdlcfhuwoiha7ms7ks6\",\n    \"workerConfig\" : {\n      \"machineType\" : \"36utudw4fs8v1djv6vf9d8z9fh8bsoeh6eexrv913frhe7zgzpv4fpo82u6vvpmrj0e0bav033mofow5ql8gabvvv9cuweu7by6ruv5p\",\n      \"diskSizeGb\" : \"haodjkffinz0ff3za7gjtg9pw12l14q7urf0oekr7e19hwkt\"\n    }\n  }, {\n    \"createTime\" : \"2022-09-01T11:48:21.359224Z\",\n    \"deleteTime\" : \"2022-12-20T10:11:21.359254Z\",\n    \"name\" : \"Millard Kub\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"y8l8d37glkh1kpwatvwmwr6x5xryde4ux48mwzs5k\"\n    },\n    \"updateTime\" : \"2022-03-27T09:27:21.359353Z\",\n    \"state\" : \"DELETED\",\n    \"region\" : \"lwpqix38zga4rtaau0f5gqlh89qat2ddjioqkybubt4w1pk03kgs459f0n63bnfp7usoxxc9nd0bzz\",\n    \"workerConfig\" : {\n      \"machineType\" : \"xe5jndfw0ol2kbscnnrv6pj43pgengnuygg613fc54ipcmy0297tyv3s6w7nayh5ro2sxa42rekg7qhozbhhi391lzh70mzj\",\n      \"diskSizeGb\" : \"okrhk3\"\n    }\n  }, {\n    \"createTime\" : \"2022-11-01T10:50:21.359429Z\",\n    \"deleteTime\" : \"2023-03-12T08:24:21.359457Z\",\n    \"name\" : \"Andreas Ritchie\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"s2oht2ii0do73nj3ejq7plxi\"\n    },\n    \"updateTime\" : \"2023-01-17T09:07:21.35955Z\",\n    \"state\" : \"DELETED\",\n    \"region\" : \"5tfjhr6gbxw61md30kvcr9y7sy0izckpsfasci48bcvctp4gc0mcmtu3wo7fbw0merrgpf3g922dujdd\",\n    \"workerConfig\" : {\n      \"machineType\" : \"oe7f35ecv80r9thiqkl57rz608lzjrm9irw2xwnqd2chc1f4\",\n      \"diskSizeGb\" : \"ejqge1gva5sb0jcz7m5hht01o0u5b66j0ncha790hm2gxrzjag22p7hb7b5zgr843wmesefggwswy1h39gdaid555hreifm3i8y2lmuxun2qndpp1i3ek4tn6zihezwf9ts6wrf1kojrcbvf5nvhbvrdf\"\n    }\n  }, {\n    \"createTime\" : \"2022-05-29T08:28:21.359628Z\",\n    \"deleteTime\" : \"2022-09-15T09:02:21.359656Z\",\n    \"name\" : \"Alesia Anderson\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"xziqohf07iwd0t9xcbjt5hbt17fup9h7sggda38ihzya3dd86lswxvm\"\n    },\n    \"updateTime\" : \"2022-06-30T10:05:21.359752Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"region\" : \"cqxawdjymf6blqybpz91tc968wck3qucknn4tinisz0pzxpuksw0vhhoj5ibjmt13q4ksd5klmhhjm8b4pk9knxy4u9tkqojcuk84b8ey77vxqwf8pp5slda20ew1znqoj3l9axe7u1ryqr0xtugjura6e9e26rgzmp\",\n    \"workerConfig\" : {\n      \"machineType\" : \"syxpr0kmryz5g9kioiban5ey7q792qzq90st3862eefr2k6g8pgaxmeml3vl3rlzfu1vzfcefehlwwozkixckxbnqn42m7df5b2tqjthx3xnx1nleh4ec2x\",\n      \"diskSizeGb\" : \"pgsa9wtz522eca4ubsms5nan9lqfc9xzpff7ee1p55tvbwml4zp19zwhc4sebhfvkfi1r6uk8tagdf93akiup3woxnhymlv15sv6uj6b4sho29sltx7jte9j4anu9labiddcr5h4kkeu1q36wkrdvlkq19hk42vw2bkxt19z3ma8m8suhqea9ilrsrzf\"\n    }\n  }, {\n    \"createTime\" : \"2023-02-14T10:25:21.359835Z\",\n    \"deleteTime\" : \"2022-05-01T10:18:21.359862Z\",\n    \"name\" : \"Gary Howe MD\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"t216q9h2gizx1qq8du7fe5jjg2u2zkaexklflgql633eyxgcqdeiv1aqzaeo6yi9wy1m4ebscg3ho36a5eu16pym99fewdsbs\"\n    },\n    \"updateTime\" : \"2022-09-08T10:34:21.359958Z\",\n    \"state\" : \"DELETED\",\n    \"region\" : \"wn6tk0w624ay90n4rz1i5vxgk008sm4lnsnyzqycyz247wnsqi904akhwgtynqenrzc744fpw90\",\n    \"workerConfig\" : {\n      \"machineType\" : \"aj85ue3s23ypy51hnsf1ort5458\",\n      \"diskSizeGb\" : \"ywg3um8giye34mfjf82pmcoffbap02y76qnpa6j41oyeiddh4rppbkffd917uar2faf5dw6xm418e39en57h5dbbq4ohf8u2udwq4x510zycty166814enib75o0bkcyh1bsi8c2iq5my3qow7mbn5en92knh19rubzkcuzltvvz35ndcuy8nokyvwwqebhpobd5mv\"\n    }\n  }, {\n    \"createTime\" : \"2022-05-29T10:22:21.360038Z\",\n    \"deleteTime\" : \"2022-08-30T11:09:21.360065Z\",\n    \"name\" : \"Shanelle Ruecker\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"26hp1az440bawgzsffx1xr2fpy92dhj3rarsi5ymto99vqm8jqgnip9xr\"\n    },\n    \"updateTime\" : \"2023-01-06T09:32:21.36017Z\",\n    \"state\" : \"CREATING\",\n    \"region\" : \"n0wt3k6u7njirhwteuao2wcxhu184h735tbqhq9prqlb98cnsppm867tn5j4urosupv6smum0o5vt9n0l639d7a80zeylgiisf1ccidk2ik0v0hc131o1s6m0qye3ex49kwi1w63u7tkipim20jxoglzo3yo9nt7kvt7b7pkzgx5w\",\n    \"workerConfig\" : {\n      \"machineType\" : \"w52zl2rgrp8t9gbbgd3f1bn9gtuyais4lbija45tihr7mlroum48dpy5jhdqrr6ccoc2ca0t1tu1k3s4jok1q0jq33kf02cypjw6a7o0jikic00dljteb4j00rq5gfqx9qvqewh68\",\n      \"diskSizeGb\" : \"8hh7wkvbqpsob0dcs97jvr0w4ojo7tfie474qirhgwyl658l\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2dbf49cf-04a4-436c-850b-1d9929b17536",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:21.360312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.list",
          "schema" : {
            "description" : "Response containing existing `WorkerPools`.",
            "properties" : {
              "workerPools" : {
                "description" : "`WorkerPools` for the specified project.",
                "items" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "c9daed3d-1722-4b75-8ac5-a84c279f1ea6",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1alpha2/Ms.+Sunny+Jenkins:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9daed3d-1722-4b75-8ac5-a84c279f1ea6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:21.358973Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "68e07220-298f-4718-88b4-14fb15a9f6a0",
    "name" : "Updates a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Melania+McGlynn+DDS",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-04-14T11:28:21.358558Z\",\n  \"deleteTime\" : \"2022-06-30T09:02:21.358586Z\",\n  \"name\" : \"Virgil Senger\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"82ul1g2u52n2kpzwq0g0bhv8sq3uxcxi4f1zyifuu3z6vino4dsjrn9pdbggum13s24h7lb0ctazrpsvzmfkcl84t0glw8n8cl0rqulact6a9c0fl5wsu6rjll420nv856s13pfpkwfu8891t0828frcwacam38tlzgkwhfle0ar\"\n  },\n  \"updateTime\" : \"2022-04-03T11:52:21.358678Z\",\n  \"state\" : \"DELETED\",\n  \"region\" : \"a00s51unkn8ys3njp0sl6dd\",\n  \"workerConfig\" : {\n    \"machineType\" : \"oh9szxdazf78hxjbbmc0xkrhrau49da9al\",\n    \"diskSizeGb\" : \"erft0jwt21egbhomn7a6rc6969biciyrs2qhbsj6o7gz2oqir\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68e07220-298f-4718-88b4-14fb15a9f6a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:21.358853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.patch",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "a8f9ae06-9e81-45cd-a979-b8191c4fa7fc",
    "name" : "Returns details of a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Velda+Grady",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-04-04T09:14:21.358181Z\",\n  \"deleteTime\" : \"2022-08-09T11:21:21.358215Z\",\n  \"name\" : \"Mrs. Buford Effertz\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"vjnwegstxjr3mid5eizwpl5uis44u8u002lt74o98i6pioh74pqca1d2co7t1q0fnjvi94sduwi742qbe0wiu55cg1up7\"\n  },\n  \"updateTime\" : \"2022-11-12T09:26:21.358321Z\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"region\" : \"qwbp2q17ahhmd52kq4o5m5rckm65m6g\",\n  \"workerConfig\" : {\n    \"machineType\" : \"7nkjp13ap5im00i8bz38xdq42ng33sj6xgzxmkn1vv6eczp9cw9ox6eotmex56c4f6kvhc9r1lqf3xixgwadxvxegbsxz6ptxu74zq31wlcnmn8fd5kbikb9tsw6vrdon04o4nxmcce30gsxl1lxjdcp5h92kd215cj7auxjxdf8ell7i9vt033ccc7wvc9qvltpk84c\",\n    \"diskSizeGb\" : \"shjyxdc1a3ofsg8h0p2xajvmtpxq08l9a\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8f9ae06-9e81-45cd-a979-b8191c4fa7fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:21.358518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.get",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "c741cd54-8fa3-4aed-8ddf-b68264b3231a",
    "name" : "Deletes a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Carmelita+Homenick",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c741cd54-8fa3-4aed-8ddf-b68264b3231a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:54:21.358099Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}