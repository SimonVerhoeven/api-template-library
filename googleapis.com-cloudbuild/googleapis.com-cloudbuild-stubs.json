{
  "mappings" : [ {
    "id" : "7c2c7d20-19f0-43ba-95d0-22d66ac84083",
    "name" : "Creates a `WorkerPool` to run the builds, and returns the new worker pool.",
    "request" : {
      "urlPath" : "/v1alpha2/zwjagxn9yk159a51ub5p6kh8qczuw9fa0dptiejug72vvoiq4d06ducpiprq68pk7p8dzlbl01mbzuwuw35eqsdvba0nj5bzij96weq2yulliba5sqb64mg07g5gjfsqzbkdsv2hmaqeb76b78jgo1lxkre1hjrv1pjtd69lc2h1oj2fhfzzllo5dfk/workerPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-07-12T15:14:10.502343Z\",\n  \"deleteTime\" : \"2022-06-03T14:54:10.502368Z\",\n  \"name\" : \"Cristin Kilback I\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"pd65ps1z25iei1y1vqfszuu68sf9sdnqe86742jcysx2jzroei087cehhduat7xkla1228yxgf4jx5npg37h97q6hf670nkosir4cqf43end78m3uki188py945byt\"\n  },\n  \"updateTime\" : \"2022-12-20T12:49:10.502448Z\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"region\" : \"tj1wv2q1yy5eh53o7e8ujy49cypae7swgqnc5j5zleq7txj27hmttwihpg5sufwa2q1y739tl7s3xykicsmno0s7c7pywiworssmg8lohgfh60wnve4mp71r6m5ad0cdg4vcu5j3p3cv0ri5vgpg8fluim4q1dkxspzo7q6ellujb0xlsm\",\n  \"workerConfig\" : {\n    \"machineType\" : \"rrynvqenta9nvft3gaok2gob6o0b1a1hjw7ybm\",\n    \"diskSizeGb\" : \"hvzis2pyk8lcsc3vikge8ptavyctfz6x3s2941b0alae33n5lqfz3kbbcm3i3aaa70xxbhfw7npvrjjub5s7whez5bu\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c2c7d20-19f0-43ba-95d0-22d66ac84083",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:10.502586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.create",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "fcd4a94e-8c8a-450f-abac-d320cdd4b842",
    "name" : "Lists `WorkerPool`s by project.",
    "request" : {
      "urlPath" : "/v1alpha2/vbc6he1fki3jlcoe63xyu0tt2668e5foxi5pfrr89byzy8914a20xte9ap8inyqwleja0htywgzd8vnmmevkif1qmdpdngf8ql7jijmmys6quyxe793shp62y2b8tk4l4ika33v8p70d5ghpssuj1g1aez686an2skfenlt/workerPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"createTime\" : \"2023-02-07T12:34:10.501326Z\",\n    \"deleteTime\" : \"2023-01-16T13:18:10.501356Z\",\n    \"name\" : \"Dr. Flo Ferry\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"6pd408pknjx2jv4fqw60tocucm0zq8evywvse9lk5388wkzfcf4tclrmfptbymmr0mwjq7foq7vjro9z4n7jn46f88l1zznpupp2wtwcg4nmu5ec5x3z9i0q712ugt52jguwvwazq3c57fiabps07v7bll2c6l0qjqdxh36ywqccifd5usnm8q6qgdd\"\n    },\n    \"updateTime\" : \"2022-08-03T14:46:10.501437Z\",\n    \"state\" : \"CREATING\",\n    \"region\" : \"u4ead9z3qrcuzzr9vlo2shc4kt05w3o3a3hyrv7vbhrzejhsrz626t\",\n    \"workerConfig\" : {\n      \"machineType\" : \"lwd37qi5f28idaedenezj06dqyn8p7ifdok4zqgo9o59nr\",\n      \"diskSizeGb\" : \"j44990gnqppif2mj4ifbr8z1b7i2iu0g8v58y98bn1q0sm4c6tarlk4zk5mn84j2w3jq2euwn7ymo3l1ovg0cf0tf8r3b5vuxomo4zmg9k1tjp1wak1z\"\n    }\n  }, {\n    \"createTime\" : \"2022-05-22T13:59:10.501515Z\",\n    \"deleteTime\" : \"2022-08-31T11:44:10.501541Z\",\n    \"name\" : \"Kieth Altenwerth\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"oorwcpbk9n5w3se51iz28fxfs7hn\"\n    },\n    \"updateTime\" : \"2022-12-22T14:35:10.501618Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"region\" : \"34s2jf46xgiqvoeu0mo42lj8xy3wh5ju0xwoecxtjyzazdh8s1ulcevqknpfir\",\n    \"workerConfig\" : {\n      \"machineType\" : \"96ecrkeg3760kidrty4kj9mpy3ffnbfrqo2l2vyh2m9uvjokcjck5ndvi1x4bgs9tpnk82a97xfouuruju8cx4mqpmvb6h4e829mdlx89w659tb4vaqhhe0vnxp43k9awvw76cjf9ojzhukifwynb7wge\",\n      \"diskSizeGb\" : \"25qha5tf338wawdofav7eybmp8i330fiza8inpxeyl765vsi5qtxllmymd1k4s9hx3auaomh6hc8yi1qb54wc93mngw3fvu\"\n    }\n  }, {\n    \"createTime\" : \"2022-07-11T13:51:10.501702Z\",\n    \"deleteTime\" : \"2022-10-02T11:46:10.501728Z\",\n    \"name\" : \"Ms. Tanika Heathcote\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"v2arb1ob7fwkxebeomnfri2ud2ma9ttsvbljno5ve9\"\n    },\n    \"updateTime\" : \"2022-06-08T13:22:10.501804Z\",\n    \"state\" : \"CREATING\",\n    \"region\" : \"s2ck7auz7leoeagbhdsfe5cjuzeil58gv56lpqz8xs1eovr6iclxj6qw0vd9w3zrn0tmuowqd2h1pbanxx7is6mwyfcdt50by99bpf7l6drtypai62wam92fnz1rjs26aetdnspl8aafvylrdxcb1sn8nfzlfrflqphbcyb\",\n    \"workerConfig\" : {\n      \"machineType\" : \"5bdclg4s0k84f3r8t0um46r9ni5p5gjd216frukyqmai36uqlpui2c2jr8o8ob3qdq5mewj4h9f05asoe4v8481x1xqqku0ygn883j3hkt97z75a0hxf938ya1xq44m9mhzepvyar2g2zf5urg9o20fxcs495d1e3i9qqvq3awn9a7oqr5qmzrtpdmw6vu130v\",\n      \"diskSizeGb\" : \"ss7rvolqvgspe\"\n    }\n  }, {\n    \"createTime\" : \"2022-05-28T12:53:10.501881Z\",\n    \"deleteTime\" : \"2023-01-25T12:52:10.501907Z\",\n    \"name\" : \"Antoine Schuppe\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"r8b9tq5d71oj7kynndbldehdwn37btl4293kogohugzc284gd6x\"\n    },\n    \"updateTime\" : \"2022-06-12T12:53:10.501983Z\",\n    \"state\" : \"DELETING\",\n    \"region\" : \"1sudhlkrobbqwzq0bvnyjdgf7itxlqe1o86il9i21nao11qu3i2272cpy0yly610enznt4ubvnizs9he0mfp1gtn\",\n    \"workerConfig\" : {\n      \"machineType\" : \"zmc220xksuljv008skm533o3ls06183dqsls30yv88c8d88s15y29n9p1cz1cjwqzlxdjxpc4qkpj8i7wnzl5r9v29de9vg80d5i3wgwwo53l9ylki3l2v4tutqapcsbr4mj2lr14ybxfar94i1igm\",\n      \"diskSizeGb\" : \"fd60s9adqzmoyyanprn1ng1xw7v863bz8hh3ounubpob7xh6kihpwl5rgdogz4p6dn7v6rj3bp89q9o1tsr2wrpb08yotcp30230qw57g441nai69xxp7jetb3sliercfy8bikxczcjnv7owkh\"\n    }\n  }, {\n    \"createTime\" : \"2022-05-25T14:40:10.50206Z\",\n    \"deleteTime\" : \"2022-11-17T15:23:10.502086Z\",\n    \"name\" : \"Rusty Daugherty\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"280xkhsx065c47bmuw8tas3n4rddlrexce2kaj0nr61jcm6z2ecutvse6yv9n142cx8s7ow05od0gpzp6btx1nfy98nkqe8qmludj4ws6su780off2rshh53m39kwl7jm5uyxnj3j60kwzmi40nqa78ib0ejft2kpa7h26jufxufk6yh9ktalvpaueqnksj6e7r0a8b\"\n    },\n    \"updateTime\" : \"2022-09-01T14:09:10.502162Z\",\n    \"state\" : \"CREATING\",\n    \"region\" : \"0cettd841tm7aw4gl2b47zoi8phn3jz3ceasn389np1nfd9hoabnck9jvznjp8k7sbk\",\n    \"workerConfig\" : {\n      \"machineType\" : \"vggs7m2a8nabztxs85phguuawqly7hp948spyqutoaunhaeg3llzc5c67zl9s0892g585x3l3jf62nc7dnf1g1dmqo4l5wzu1olqmbpy0kxtdghbmn4s8y0q2f34r\",\n      \"diskSizeGb\" : \"ih1q44zldewf7rfmh8cxigmvsie3agcqm51ok5y1j9d9hmimwer9sy4lgfj8k8lelurb8zs0aerdacx6jj56lu01et0egg4f68bh7zm1od410b190be69id8i2pcrd2tufjpe0o4uhacmteoh5fqli8dofesn5ypafwqbvh298fi9mjij3qacsdt7gk\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcd4a94e-8c8a-450f-abac-d320cdd4b842",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:10.502305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.list",
          "schema" : {
            "description" : "Response containing existing `WorkerPools`.",
            "properties" : {
              "workerPools" : {
                "description" : "`WorkerPools` for the specified project.",
                "items" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b7c03aae-61ac-473a-9111-5c3e651c29f3",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1alpha2/Kelvin+Hintz:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7c03aae-61ac-473a-9111-5c3e651c29f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:10.501283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "8c4e922a-2a7e-40b5-8b0a-dff347ca80fa",
    "name" : "Updates a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Isidro+Weber",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-07-24T12:09:10.50095Z\",\n  \"deleteTime\" : \"2022-04-10T14:38:10.500977Z\",\n  \"name\" : \"Lauren Effertz\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"c79hnigiihlnftnh6amzuctq29iirg3s2t1w4p80sx7gcpudju2tg9w9m82z0obzgt23zx3rjzmae4dg7x02f1kca3tbjz9amdjzyy1y88u9v6vgso1uaxsigaky8sx9029bqh9zhu0e8yd7o10wus6qlxe12t37vp73aupgc\"\n  },\n  \"updateTime\" : \"2022-04-16T13:31:10.501053Z\",\n  \"state\" : \"STATE_UNSPECIFIED\",\n  \"region\" : \"92eefmx9js9ce9r7in54rjdz6y63vxadav8fecz4ehoepz4d1hxo4tunbycsw1sifv3n2r5hyhhamezeanjr9hqjnrgk2llwx46k4avxjourl3mvt033opgof17bk8d8nz45em98yq3xjl83fqg\",\n  \"workerConfig\" : {\n    \"machineType\" : \"zqrbfbk5o0fa73ji1dtva1yissj\",\n    \"diskSizeGb\" : \"tbo5c84m05ez34xe0cmveq29olptycce1bknxt5pkq1y7b385fgxodlh943uo0bow6q6d8hfji76gt06bufa8wsy4jzyhcgbbv3t1n4xza94ix94j225tlkptkna88uhkytppfilrh2rwi7q\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c4e922a-2a7e-40b5-8b0a-dff347ca80fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:10.501207Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.patch",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f4c40381-7d73-466d-b95e-d44897ea09fa",
    "name" : "Returns details of a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Eve+Goodwin",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2023-03-08T11:55:10.500582Z\",\n  \"deleteTime\" : \"2022-10-25T13:31:10.500614Z\",\n  \"name\" : \"Dorthea Wisozk\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"d187vwguakcvlz6y287wuw9nrbgikgq1645gmpmo3svy6lc9pn706bkttj159k4b7xyk876tzh7anxmgn2u1cder3v9u8h6bb7izzz0ukx7taoja0kpbjk13hcb4f7q6rea8h5g9c48\"\n  },\n  \"updateTime\" : \"2022-11-08T13:18:10.500704Z\",\n  \"state\" : \"DELETING\",\n  \"region\" : \"0p93mot08qwxhvir2zx1godmpwuzqgn1nuzjr8ft\",\n  \"workerConfig\" : {\n    \"machineType\" : \"ov4wc0174t4obyq990eow\",\n    \"diskSizeGb\" : \"1ldjxh9qdldgxvbjlen58xvth1qc7248vazhsujgs6thy7e96bci6pb73kdjxg05owseqi90a08v8btetz\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4c40381-7d73-466d-b95e-d44897ea09fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:10.500909Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.get",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "3789ed73-2798-4d6a-9e09-15ee416c2c51",
    "name" : "Deletes a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Aja+Carroll",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3789ed73-2798-4d6a-9e09-15ee416c2c51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:10.500514Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  } ]
}