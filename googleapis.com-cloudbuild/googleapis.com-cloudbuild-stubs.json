{
  "mappings" : [ {
    "id" : "66ea4cf9-c6f9-4e53-8e6c-713d8267e4a2",
    "name" : "Creates a `WorkerPool` to run the builds, and returns the new worker pool.",
    "request" : {
      "urlPath" : "/v1alpha2/mnbcxb8vibm22s/workerPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-11-30T15:14:05.424712Z\",\n  \"deleteTime\" : \"2022-07-02T16:59:05.424753Z\",\n  \"name\" : \"Miss Hai Metz\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"sevh72drxuaqg29d1kv064yrcg3drb05luiip1ix2hv1te1xc8p1jjy3l8y8xp9svo0ga7ie3j628y8jct1ulge40eo8jcgf7pm\"\n  },\n  \"updateTime\" : \"2023-01-21T14:27:05.424922Z\",\n  \"state\" : \"DELETED\",\n  \"region\" : \"rt18tveryrg3nkvr1zddpprpv905iupkj0oi5b9m2ozu5s1ig4p98f5kzgyxyotb54igpoox5qpawutyao9ipkyatfd9lqxpdkletufly76boi1k46p694p5vt5ob58nu1m0htn1q8689cjjavh3vnfnx3h5xbagpbma1pfqk\",\n  \"workerConfig\" : {\n    \"machineType\" : \"i414qbdqgv9q8iluv2geqg7lkmjt7xuicear4ovah10ahma0d99olhgik5cn4icx0z8w6zgx4yh8ah7xj8qwe6fn8t1mfoe116sd7wy09u41546d08284d8vkl35lsi2fqts8sfm5kq0s69k5r5j1ffn8j\",\n    \"diskSizeGb\" : \"7c6ljy4fgimn7a4g6xarfbf0oa2g2oq4shh30cwezfacm3umxmidij2vccux2fuaajkmunv6y5urv54msd4isx6ytw9q1tzxa4aqsp1\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66ea4cf9-c6f9-4e53-8e6c-713d8267e4a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:05.425092Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.create",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7b96720b-8739-4bb9-ac3e-439ecf85f64b",
    "name" : "Lists `WorkerPool`s by project.",
    "request" : {
      "urlPath" : "/v1alpha2/k1qwksa3dnk193wzp1i0yntf0guq1gqi3qxm5d4s62qk/workerPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"createTime\" : \"2022-08-20T17:08:05.423859Z\",\n    \"deleteTime\" : \"2023-02-11T14:26:05.423892Z\",\n    \"name\" : \"Stephen Douglas\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"adh6qnmh0vg81ffoirbkqgml1lf9yzmw1ukpp3btkvr5dn7n1gjgw1kpqz7oxrnhxw1yywe1fpsd0njc30fvhhe3byvgwdahhk8d0vst404mdc2908iehyxi48458hrc70p9ovhlurzj4tt3bvysgpo\"\n    },\n    \"updateTime\" : \"2022-11-06T17:06:05.423986Z\",\n    \"state\" : \"RUNNING\",\n    \"region\" : \"516hdsm0v4yimtbter93slg2ec6rctx\",\n    \"workerConfig\" : {\n      \"machineType\" : \"kohhi0656lquh6affmqcrn2u3ogsp3ncp8qviqlpc3hdlpkt7o3amrwrvqjc45duxgtukx\",\n      \"diskSizeGb\" : \"ao51lkrssahqh78cimocmrsde6uomw1zsapsoa6bdwugowxfv9vq95ldti01s7f7o7rqc62cuxmhd98dfpqc2t1tcvjgxoo1jk4xc7b0m7d2bv90c79e6vvq5i80yv6drjjb52dbdhwmvxtip59sxal87jm52psj6t172qn5fbep9sioagp7yeam33l7eqhqyzkx0d\"\n    }\n  }, {\n    \"createTime\" : \"2022-07-21T16:08:05.424078Z\",\n    \"deleteTime\" : \"2022-11-18T14:45:05.42411Z\",\n    \"name\" : \"Liane Zemlak I\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"g8zf6ftbi0vl353fbzzczt4cskpsw83khlxjddf1c5jdyswapzx4jfe0clchwvjy4detw35l0jy4gjfdmw\"\n    },\n    \"updateTime\" : \"2022-07-29T17:46:05.424205Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"region\" : \"rjj12s1az6sffwqix3by3nhj5y\",\n    \"workerConfig\" : {\n      \"machineType\" : \"9h3pkit8\",\n      \"diskSizeGb\" : \"7i8ati9jyijurgp3\"\n    }\n  }, {\n    \"createTime\" : \"2022-07-15T16:27:05.424295Z\",\n    \"deleteTime\" : \"2022-03-10T14:39:05.424323Z\",\n    \"name\" : \"Lucila Jast\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"3zfhavj2rx6w6avcek4t641s7mtw22uwc3f6y1h8qvkytcz7p5v778d6ibjkmnqa6l9ypo63ptiawrnd41621rcbtqe2r5skfha1ygnfyubyl0t8nmul74of52zlq6laxf7ta470idpmmyut134ct0heanq22v5\"\n    },\n    \"updateTime\" : \"2022-09-16T14:19:05.424425Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"region\" : \"oso8zrua7lmdwt7bsvev2wah4v5cjagqw1crp2daqdlupq6ghxevfawd8bk0sgj1zukkd0bqsad0afeyaufh0hkixfhvm11b8oct416edlddzs4pkamyyq2ksft6mjebcyvzmdxkymp0n1qre0\",\n    \"workerConfig\" : {\n      \"machineType\" : \"5ksf3pqvumu1vowe16bsl2ckzmv9albquly646ah2fvc5axu5fiddhm09\",\n      \"diskSizeGb\" : \"bnrftr227v44a7r28f3wx7o58crwnlzz8kjgt52s4x65yt9cq6audh913b6zlrsgbdydeb0b4zs8b8nojir4vpakoe9q3w4pwyqcfu1svjgoychftoix\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b96720b-8739-4bb9-ac3e-439ecf85f64b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:05.42464Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.list",
          "schema" : {
            "description" : "Response containing existing `WorkerPools`.",
            "properties" : {
              "workerPools" : {
                "description" : "`WorkerPools` for the specified project.",
                "items" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "48b013c0-d998-4688-a6da-07a0683109ea",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1alpha2/Sonny+Gottlieb:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48b013c0-d998-4688-a6da-07a0683109ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:05.423809Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "45129c61-3b69-4a8b-b1f3-e7f810e0a5bc",
    "name" : "Updates a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Woodrow+Willms",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2023-01-25T17:00:05.423367Z\",\n  \"deleteTime\" : \"2023-01-10T16:23:05.423397Z\",\n  \"name\" : \"Sirena Lindgren\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"lazsp04j33juyvyq617k8cusspvfuemt1nvfjddrrm7y8tdvmq5enrae0wbczxwq5apdtf84j1a54hb5nh8cptxvi1ir88zjl0l20d1mhwclqwduvnuom2x88bfxof0xl5aasmlu0vgtp0letrvli21oe\"\n  },\n  \"updateTime\" : \"2022-05-19T14:45:05.423492Z\",\n  \"state\" : \"DELETING\",\n  \"region\" : \"mwyvxhxv\",\n  \"workerConfig\" : {\n    \"machineType\" : \"5oncvpz9yktpwzog65g11y7sl2dfe7yex5mn5lc97u89n18gwgio8q8lemtkh9cbu3385a64dpudy4l31ioo7k96e5muh2vpfh3rcby\",\n    \"diskSizeGb\" : \"j5hbhgnlmi1sks1fxay9ocvb6wh1\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45129c61-3b69-4a8b-b1f3-e7f810e0a5bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:05.423681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.patch",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "748b6cb0-bd36-4647-a6b7-37e8c04b8a29",
    "name" : "Returns details of a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Danuta+D%27Amore+IV",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-11-10T16:29:05.422996Z\",\n  \"deleteTime\" : \"2022-12-17T14:33:05.423028Z\",\n  \"name\" : \"Bernardo Turner\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"9oy05rx7f97125dmgnv8w8oafshl6tr8wiail8bqdgi3wwdac4oteehavmatiurbzxugqet0tidyogtlba3l3tlufsxlzqa\"\n  },\n  \"updateTime\" : \"2022-08-12T14:33:05.42312Z\",\n  \"state\" : \"DELETING\",\n  \"region\" : \"m6n1pn0ksgvjvlyt0fxlj8ss4rg9dlxdhkk6zm4v9l16wv5j1p\",\n  \"workerConfig\" : {\n    \"machineType\" : \"jfh7qk8haf2tjh6a3o8qz3gbigtalpp7z2w3lwfadykhdc9jzcn89itnc9h1m0mrgws4w32tna7np87zve9lijyav5grlrqjbeoen7fp0nfm99lp3lsll3csz76x4czkx0gxjz\",\n    \"diskSizeGb\" : \"afq3spj15hxxxso9o8l15khx8gmcee19prltjz1awlvwglxtfrkmn1wwk5x1\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "748b6cb0-bd36-4647-a6b7-37e8c04b8a29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:05.423327Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.get",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "509307fb-0bfc-44eb-b917-68f1c00addc4",
    "name" : "Deletes a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Jimmy+Gulgowski",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "509307fb-0bfc-44eb-b917-68f1c00addc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:05.422933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}