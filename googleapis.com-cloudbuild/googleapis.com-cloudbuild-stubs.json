{
  "mappings" : [ {
    "id" : "80a68a6c-f639-4e44-99c5-b8615af2eaaf",
    "name" : "Creates a `WorkerPool` to run the builds, and returns the new worker pool.",
    "request" : {
      "urlPath" : "/v1alpha2/2p6rvhp9qq7zzxk48uughwybkeymi3n1/workerPools",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-03-27T16:13:51.155786Z\",\n  \"deleteTime\" : \"2022-07-30T17:13:51.155817Z\",\n  \"name\" : \"Elodia Stanton\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"aku2vrlzozfhiixdn8njrqwo7979xz8wsg4dfevxr54euzkkqlhyr5auc0o4oqrpkvytbxiizaismlhzol54rtjxf27\"\n  },\n  \"updateTime\" : \"2022-12-25T13:48:51.155907Z\",\n  \"state\" : \"DELETED\",\n  \"region\" : \"qgx2p0la5szmf00w191rrb024zkims7v1mg6cffd3dgsx4zsaxu31l\",\n  \"workerConfig\" : {\n    \"machineType\" : \"ui5j017cugqezdu03eb90gkid6xj0mqxm26v3wqoei7qdo8qtkk6lcwce0kk2r89wob2i2cdihieckmxwbzpl5m8pkjkoeoos851zb2hh\",\n    \"diskSizeGb\" : \"yl4duldo6cohdtm08wjvzk6ff61zj6mliitlsstmidi75067nfvlkadrgnx6rn5cr4t6uev9vjbrav9mg5rapq4514jlba2hl7rom4c3xsneiftzrv7apf0t3p2w34ti\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80a68a6c-f639-4e44-99c5-b8615af2eaaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:51.156075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.create",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0c00d4d4-1abc-4e1d-b451-f3ce5e306077",
    "name" : "Lists `WorkerPool`s by project.",
    "request" : {
      "urlPath" : "/v1alpha2/45kmh4p76v1s8z2v2iyjlan7mnn4dfcbp3vy3nublrsfgd1oaasumsalturcrsn37bbmo5rl9au0le50cb4h5zmggrog3jx4yd9gu6k1o0r06n6fpf1fl6hugw94fe767ll3655ehu2mojcxuk0s7mtsvazhggn4ho1b3yimw/workerPools",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"workerPools\" : [ {\n    \"createTime\" : \"2022-06-01T15:59:51.15416Z\",\n    \"deleteTime\" : \"2022-11-20T15:35:51.154193Z\",\n    \"name\" : \"Letty Roob\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"a5iiubjwx6qsawuj3e482ha8dt4b1gkkcmps08jjgmio9d\"\n    },\n    \"updateTime\" : \"2022-09-17T14:22:51.154294Z\",\n    \"state\" : \"DELETING\",\n    \"region\" : \"l7ocf70a7l4191wfzw7ndzblhlvhbcn0xik5d8x674ia2bjra9lxwxx9v6y4gwqcly0tykdqsoen\",\n    \"workerConfig\" : {\n      \"machineType\" : \"0xlyrypx2ed5kjltutg9czkl2b2sqwhodiqja15csxfphqjp8583cs8xdsgm4wkndpmtdtbvm8hmlg11jdwq9kebzanrpshhkusgzhks1vm13nixvxtlpf49nx7d0fo926kr8btovkml9882gyd29k3h56oqmv9v35mzlqvk66pc3\",\n      \"diskSizeGb\" : \"kgb4x9cg0n474g0p7vbm3fbn9cki8xjyd1nquw7lavjdethleuzz8wvrqkcy7edzrz1s8tpduplnkgp4x\"\n    }\n  }, {\n    \"createTime\" : \"2022-12-21T16:27:51.15439Z\",\n    \"deleteTime\" : \"2022-09-18T17:17:51.15442Z\",\n    \"name\" : \"Mr. Warren Powlowski\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"8djr2doc4nbvwljn86cs0dth40ejg8pkfwwvr2z97i8n179jzb7f0ftoss4dccsnslllfx9v58pfli4cmp7ponbi845o9wnnm45qlkjd5oj6kor3tmsl5yq3tujpf04yuu8558ctx4w9efmkv09c6\"\n    },\n    \"updateTime\" : \"2022-04-17T17:23:51.154509Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"region\" : \"x2s1t0uwzniu0gyx28xomcxtq2k790bnq44i195z8u6fktz30wopdgbkltkutnsjhib07yv2xbfi8ryyqu1eb17goxi13zsmjtanrhek01sa0kxd5f3l305px3nkia0rv5gkv8sec191olxpv\",\n    \"workerConfig\" : {\n      \"machineType\" : \"fek65p57g2ofsprvb8huq7w2jqvmr17z5f0cms0j8unhl41eymt7xw0d\",\n      \"diskSizeGb\" : \"5c1epr5odcttan9crcxqsxji78nwk31krc97bc67usynxefeeut91gu93za0k1fbs5h0nbdvzmsmn4jbdc1io4l31ui4wcm3857nvbtsnbp0jxinihezvbgpwm97hgdru1ge9en7fzy7xxrsv2gi8ypueme3lc9jvj96ojerrln4t8ywoy34xt\"\n    }\n  }, {\n    \"createTime\" : \"2022-04-26T17:13:51.154594Z\",\n    \"deleteTime\" : \"2022-08-10T17:09:51.154624Z\",\n    \"name\" : \"Seymour Wiegand\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"kry4nc5wdqwbvtse2s41a28nmc7yb9m3q7drqnhtqgxvldplfo5pck3l1r1o2xyjo0jh39l1op2ketl03coyhul5z2xgam56m3ymus5xvo9smken\"\n    },\n    \"updateTime\" : \"2022-10-09T13:30:51.154712Z\",\n    \"state\" : \"DELETED\",\n    \"region\" : \"lv866fgb7snpjr0z08iim9g68vvdym\",\n    \"workerConfig\" : {\n      \"machineType\" : \"y5irnwn5lckdcreynycwa5larssuawci853gkdy55a6i5el7c4wx62x8yaeq6ecz81b6c8u91lsi2f66974ai8wcfj0nh5tkjdgnuhiecxcpno0u6hjjwic79fj2pl7hk1vq0dn4iybfghcg00j5b0oglurl4jvxw9rj1rve1c4dd5s\",\n      \"diskSizeGb\" : \"ama1vhtcl8fz9vgncmdf2t1stgmqvqd1looymwqukttlq2lpl68u1qa2ha36y4kjqz5\"\n    }\n  }, {\n    \"createTime\" : \"2022-12-25T13:30:51.154793Z\",\n    \"deleteTime\" : \"2022-03-10T16:38:51.154821Z\",\n    \"name\" : \"Jacquline Abernathy\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"87t4yz28510\"\n    },\n    \"updateTime\" : \"2022-04-12T13:47:51.154906Z\",\n    \"state\" : \"DELETED\",\n    \"region\" : \"asuwmxqqw9763f9hv9w9qjcwaz6gvnybxjdh7kucna4c2rbhoxsyl20k3y200a0i80nbp8ny7yarzhzofom2fcjksr431gez5nipc44i58lzl4vfhvujc381kcc6bhvxx04b08qtpm1lih2yq3o3wqvfkv4bsu3t372aolza2ye3dntgx2bhayodj2e7p\",\n    \"workerConfig\" : {\n      \"machineType\" : \"38xlq1ycfncnkgfcordevljd6l6dhqnktog212x5gvknic93lahde9iydshcya9oqanpuf\",\n      \"diskSizeGb\" : \"ovkzjjz56kxamgvvqltrxksfnhhmzqz44wud2a5ow8b25giykcpy9txs5xr4hzgxs3t8jpm738zwb0ne7txtgccb\"\n    }\n  }, {\n    \"createTime\" : \"2022-03-20T17:01:51.15499Z\",\n    \"deleteTime\" : \"2022-11-16T13:32:51.15502Z\",\n    \"name\" : \"Harlan Schaefer\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"5la7fkh6rr1bp2uiw62k3667t3u9bplqsp0x0lerhq9q024d5tgw5y64pkblfmno2l4gg4y1sqk0ypeuei6\"\n    },\n    \"updateTime\" : \"2022-03-20T13:29:51.155109Z\",\n    \"state\" : \"STATE_UNSPECIFIED\",\n    \"region\" : \"t0v7j88qsgrax6brbiz4mtnovecg6tuuajixjn1disspf3wu1h5i0qbh0tpx7kptnqhdtswc6i6z8l6emi2ly45hsfllw9cw5ex1x539ghd1\",\n    \"workerConfig\" : {\n      \"machineType\" : \"04tty6vdbafyb32rb4s7z1csv7o59pqw4l6dz4f3uy1sa6mqduslkbrgh0sbkdt2mzud2jpmf82xw\",\n      \"diskSizeGb\" : \"j5qzobd37dtfk8i3qbvkbkthc0im4edarm42m8xrdh3yuuymdlu\"\n    }\n  }, {\n    \"createTime\" : \"2022-09-25T14:02:51.15519Z\",\n    \"deleteTime\" : \"2022-07-25T16:10:51.155217Z\",\n    \"name\" : \"Miss Latesha Green\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"fluwn2\"\n    },\n    \"updateTime\" : \"2022-06-05T14:41:51.155307Z\",\n    \"state\" : \"DELETED\",\n    \"region\" : \"486xmwe98a1ro2fnecvfrcm3w5ro50o2k42adi6at1an98i09sy0xxlqm\",\n    \"workerConfig\" : {\n      \"machineType\" : \"mh1dw4xk8fj1pemwi7yn4cyalotbdg34cq5esyr7htvkmrc5au491\",\n      \"diskSizeGb\" : \"bqy85dmhv9pt9skqya16px6pi09wnajgu5wgebapk28cgw0ly70bj09vq1hrjpe87wi731uab4nzzonfnu\"\n    }\n  }, {\n    \"createTime\" : \"2022-10-12T16:37:51.15539Z\",\n    \"deleteTime\" : \"2023-02-09T15:25:51.155419Z\",\n    \"name\" : \"Heriberto Von\",\n    \"networkConfig\" : {\n      \"peeredNetwork\" : \"jxk68x0v960xn3o7scxnqgvezvmnek503dlw4fz13exqy4z9du0w6591n3dk5nwtf6w4hk9ebvkpmj1j\"\n    },\n    \"updateTime\" : \"2022-08-26T14:34:51.155502Z\",\n    \"state\" : \"DELETED\",\n    \"region\" : \"53sfqvzzap3q8z57e6mp74xr598jzktzayyclld31226e1ngtifbvuuvp99kda1gspvzifnc2pitxdfca1o84u7ro\",\n    \"workerConfig\" : {\n      \"machineType\" : \"b6gytfuiw34j0gj76ac6u4b1atfra10roglm41jcofrqdtqwlsz6esnfd0aela7hjrcht3n4rq92x8y6su482m1xxsqbkjo8rpa\",\n      \"diskSizeGb\" : \"zqgvrr1r016jp1w4iudl79re6ktykesevisv78tgvdhkbyb2h6r6pd51qykimbg7hco7fx2egcw3uf1qictaw7ja9d9oy1d47hmzm8xjfowadkeozypjsasqgekedezs7tgbso6q0b7rgelj6h1aty94z5h26epnvsx6\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c00d4d4-1abc-4e1d-b451-f3ce5e306077",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:51.155722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.list",
          "schema" : {
            "description" : "Response containing existing `WorkerPools`.",
            "properties" : {
              "workerPools" : {
                "description" : "`WorkerPools` for the specified project.",
                "items" : {
                  "$ref" : "#/components/schemas/WorkerPool"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "eb4e64b4-6fb4-4373-9c90-fa9d812fe185",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1alpha2/Mr.+Treena+Little:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb4e64b4-6fb4-4373-9c90-fa9d812fe185",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:51.15202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "907ac741-f0cb-4baa-823f-eaba6033d546",
    "name" : "Updates a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Chong+Robel",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-04-01T13:34:51.150812Z\",\n  \"deleteTime\" : \"2022-05-04T13:45:51.150901Z\",\n  \"name\" : \"Dion Fadel\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"f8t2gmcgiv96n40n1jqx5sd67iuucpticn8gbcrivfkhh2z4p9rpv804qsouhk85vpobdn78mb6jy345bwfga0\"\n  },\n  \"updateTime\" : \"2022-04-28T17:28:51.151199Z\",\n  \"state\" : \"CREATING\",\n  \"region\" : \"3eidd4l\",\n  \"workerConfig\" : {\n    \"machineType\" : \"3skb3l\",\n    \"diskSizeGb\" : \"3tsqp12l9vibxanon4xa4ia6ma6dl2tleiet6y5hzxbv6q60maggif5msltquu8\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "907ac741-f0cb-4baa-823f-eaba6033d546",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:51.151762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.patch",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "afd01539-c09f-43a0-8302-cdf371219c9f",
    "name" : "Returns details of a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Tristan+Conroy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-04-26T13:41:51.148352Z\",\n  \"deleteTime\" : \"2022-08-23T17:23:51.148441Z\",\n  \"name\" : \"Dr. Jess Ferry\",\n  \"networkConfig\" : {\n    \"peeredNetwork\" : \"l27koz5nyox6zlf0f5847p6a33n6i1nwmdzm184llbpv9q7i447i3xhpjrck5gd3r9d2wb0v800ni1g4frq9vdj6yn\"\n  },\n  \"updateTime\" : \"2023-03-06T14:06:51.149369Z\",\n  \"state\" : \"CREATING\",\n  \"region\" : \"tys8auoe662czuoaq53j63yr1sqeryytatsvxyhyvp04l4hwlu1umhsgrh4kj91jnbh3075tppjxwtzfd50k36vawf81282fzz6zd5sbaj0bozsemr7ojintfbky7awqatkcn4hkc5tvkbopgiy33l3toc6qu9gagxtq8kdwpio54ixkbx5o\",\n  \"workerConfig\" : {\n    \"machineType\" : \"ykqa1o5g1rwu88hixqsy75wmp116gftoncwhrdpkgdi55bvb00gdx5uo9y9eaxzk6mbxadhmmmfqeeuf36g0o5p2xggifukceuwy7nxxh6meoh25ylv5xa\",\n    \"diskSizeGb\" : \"gtn5ob8h08j9k1x2z6px7gccw6t3pfr4ovrs7cie3rkh6k9t574rjt33ibpowhvgjcr59u1genh0sqdr1hiu9uznf\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afd01539-c09f-43a0-8302-cdf371219c9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:51.150606Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.get",
          "schema" : {
            "description" : "Configuration for a WorkerPool to run the builds. Workers are machines that Cloud Build uses to run your builds. By default, all workers run in a project owned by Cloud Build. To have full control over the workers that execute your builds -- such as enabling them to access private resources on your private network -- you can request Cloud Build to run the workers in your own project by creating a custom workers pool.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. Time at which the request to create the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "deleteTime" : {
                "description" : "Output only. Time at which the request to delete the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name of the `WorkerPool`. Format of the name is `projects/{project_id}/workerPools/{worker_pool_id}`, where the value of {worker_pool_id} is provided in the CreateWorkerPool request.",
                "readOnly" : true,
                "type" : "string"
              },
              "networkConfig" : {
                "$ref" : "#/components/schemas/NetworkConfig"
              },
              "region" : {
                "description" : "Required. Immutable. The region where the `WorkerPool` runs. Only \"us-central1\" is currently supported. Note that `region` cannot be changed once the `WorkerPool` is created.",
                "type" : "string"
              },
              "state" : {
                "description" : "Output only. WorkerPool state.",
                "enum" : [ "STATE_UNSPECIFIED", "CREATING", "RUNNING", "DELETING", "DELETED" ],
                "readOnly" : true,
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Time at which the request to update the `WorkerPool` was received.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "workerConfig" : {
                "$ref" : "#/components/schemas/WorkerConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c094aad4-eec5-455e-ae21-e2d72ad0f045",
    "name" : "Deletes a `WorkerPool`.",
    "request" : {
      "urlPath" : "/v1alpha2/Dr.+Edmundo+Bartell",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c094aad4-eec5-455e-ae21-e2d72ad0f045",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:51.148172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudbuild.projects.workerPools.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}