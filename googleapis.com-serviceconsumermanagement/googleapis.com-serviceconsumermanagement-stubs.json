{
  "mappings" : [ {
    "id" : "90e590df-dbe5-4d90-823d-e0761b7cc0f9",
    "name" : "Creates a producer override. A producer override is applied by the owner or admi...",
    "request" : {
      "urlPath" : "/v1beta1/wukgj0jg97ub9nhdenju2lioxjxbzvevx479isowb6mnv9akx080y67miazbnv6wixfub3tudi1y78kcxvcqy114m3k5sqcxbqpcfqq5nyfhpcg7zapml9u94bn7mv6qfip38xw0uyjjvxxf67hwpg2ootud4cvrmd66noqh13e64imeiekdkkn/producerOverrides",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Johnson Dietrich\",\n  \"error\" : {\n    \"code\" : 1948058348,\n    \"details\" : [ { } ],\n    \"message\" : \"Eaque ex consectetur est molestiae aut. Est et voluptates. Eum libero nostrum et eius quod. Odio numquam et aut voluptate quis ut deserunt. In vitae illo dolores incidunt nesciunt quo.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "90e590df-dbe5-4d90-823d-e0761b7cc0f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:59.788433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.producerOverrides.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "9e331e7c-d307-430f-8ce0-4e812b2ac1db",
    "name" : "Lists all producer overrides on this limit.",
    "request" : {
      "urlPath" : "/v1beta1/x4p98jqd5pn3jpuhn4yu8dspmlgda9ybv0gwb1e2dp6urd9rmpq2xxduf55jh53o3isygop4d9t17nh1t2/producerOverrides",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"rsjxbm05prwxcll1sr10fbgkeymytwxzmtcaacn3dvn39dnofeqt66shcpr47el2lg9c5xc2bbz7y5zo0rwkeqe6j229s6ug6e1hftul\",\n  \"overrides\" : [ {\n    \"unit\" : \"yogxv09lto534amy601w9m98uji6irrwvdviod6s7\",\n    \"metric\" : \"yqfwkhow28yv3v43gbop3977euhoayv8s57nbao3w1fdizt2w6r3i8czxy3lk41gci50a73gorzrr0lgpau4j0k7tzaf11nia664mrgcs12jpi6r97t3v5z8uyi7yx8iaax6n3ynrrxv5whpmqxlek5i4j8gqvy01wbyxetplovjzref0tp0j95or78\",\n    \"name\" : \"Pamelia Graham DDS\",\n    \"adminOverrideAncestor\" : \"y4qexvnt7rz93\",\n    \"overrideValue\" : \"t2gw2p93mjf00yv2dn06dsqbnfnef264gwprp2cuhx15a8ziz9txe3fotflq1mlpl73g5mgu2kjjb\",\n    \"dimensions\" : { }\n  }, {\n    \"unit\" : \"7zqatorsauzrq50f7o55aiixg2cqfq3suwqane9304q7lpeszy\",\n    \"metric\" : \"vi57ni9e2ss0qg8ga2cknsezlcuh3cj041oxpm58z3hav2cbnxixoaz9a5203kl9whv274gsdfiwg59cs3t8cy1z6ukqf25rkq8296uxguizzgt8k8\",\n    \"name\" : \"Josue Brown\",\n    \"adminOverrideAncestor\" : \"xeziud3k41miih1mwirzqpnytk4ju0aqb9doj8r22djopcdw8fsy322lg7k3be09e8za\",\n    \"overrideValue\" : \"1979qln3eiy2viw0low5obe9zrj4m9ifihgifzq3jzv6x2l6mn\",\n    \"dimensions\" : { }\n  }, {\n    \"unit\" : \"cr6e594eh6gcfpq0p6lvk2s02vvx1h77koq3vymzwoiwcl6qi7n56refvrb1rb8jmic8fvmpakxapal3uzti6asrgpok7gqfy5bte47q8j7vloy8f3mgx6aa6asekkcxxiz20dqtwsse5f704e7018gmig56jrvw5k56kyjnnce9sbmj\",\n    \"metric\" : \"7fulchv2vqw8byf7d27njlkn7rtrxlj5eemgt66l40gfshoqq0t1y8ciyva2s1hi28jovc2ov208b7bmzzqt97yiakjixmr5wlde4c8md4ff6vxanaah45s7frklbmhsb58dmhn0xdbc8mpjuzwonexrwkx1ygs0o0b43nvi0zqj\",\n    \"name\" : \"Cyril Beahan\",\n    \"adminOverrideAncestor\" : \"odpw7f3liyevohe7f2fbmagrfkjm4n4dzmd7hibovuvx8q84k28alz6t20c9k3rz0650f5x4475aq5hw6osl32lvx789fmn6zvxe5h6l7ktlcl5bn7uvbz9llkocecdd0qxlwwdgmbpy02xg8dikuihj71in9x5p7empnwn5zers2d1flggkbw\",\n    \"overrideValue\" : \"nf6ru3h1hmzajljkfc2xheyhi43g2lzqyfbdr24dzuccr44116zrjbhz\",\n    \"dimensions\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e331e7c-d307-430f-8ce0-4e812b2ac1db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:59.788246Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.producerOverrides.list",
          "schema" : {
            "description" : "Response message for ListProducerOverrides.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token identifying which result to start with; returned by a previous list call.",
                "type" : "string"
              },
              "overrides" : {
                "description" : "Producer overrides on this limit.",
                "items" : {
                  "$ref" : "#/components/schemas/V1Beta1QuotaOverride"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "5f7a45d7-fa5a-41b7-93bb-f337b1cf0c2b",
    "name" : "Create or update multiple producer overrides atomically, all on the same consume...",
    "request" : {
      "urlPath" : "/v1beta1/tuh2h7obxoui5sak96m06mt8mayj6amzj25l4lipoti871bzkgmpzueyk2rwxq4kbbdlokio2hdzcdrprd65ryqzsvqck3qdixk9at4gkwltj9liny4zbuiop9nnrq5yw1t7wpviy1cgk31wgnmo96x34ii3b1cfl3ad42fxrhnxbt8d2rewvubzl5/consumerQuotaMetrics:importProducerOverrides",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Pete Ondricka II\",\n  \"error\" : {\n    \"code\" : 916843532,\n    \"details\" : [ { } ],\n    \"message\" : \"Harum ipsa voluptatem et deleniti aperiam ad. Quis provident nihil nemo quo esse consequuntur eligendi. Et modi rerum error dolore adipisci.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f7a45d7-fa5a-41b7-93bb-f337b1cf0c2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:59.787854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.importProducerOverrides",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "3df83269-c6ce-4fb6-82a8-5a8bab39990a",
    "name" : "Retrieves a summary of all quota information about this consumer that is visible...",
    "request" : {
      "urlPath" : "/v1beta1/9r8ig1b8ecvcu18s92lxkysk9dydsw1abfehbn4yg2lgord2czlqb95e7n5b3dvnrn1e07zyb5jcx1x7hjb4asu4lk7u3gg1fk86azm24efw4eim1h4z4tlcixd465iyxp35xpi8cwoberlztu/consumerQuotaMetrics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"qg1wlwiw7caxscesjdkpo3wi538obuujn1vgdhrurc6bc3ukpo38l4frtqg6lmfs7k\",\n  \"metrics\" : [ {\n    \"unit\" : \"s4j7qybmdrztpnalcxtie7vwqd8stb6yktewjm1068z8ntlbyqnjrx526hfu791nu8lfi3zkl5i6zg534cmtda88vfgm7nmbd\",\n    \"metric\" : \"89q5jsmab713708461w07e4ji9mm6sqrhn9ald0u9pmf7mykazjgqlyyl3i9xtg3oag2qo0hd9gybbwhtljt7ppmoib50by9t72gnoakg0a8pu1p7uli2cnngtgvtd\",\n    \"displayName\" : \"Renae Streich\",\n    \"name\" : \"Sidney Bernier\",\n    \"descendantConsumerQuotaLimits\" : [ {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"ftqr1y49y18rbhcfzw4cmcf0kp2g6zqlsz0xuzedxwml5bng4sffqff11sqy46a13dmbja1qochbcsyx6c9zwiuprlpyxiqmyt0fimp2uz12jsbce6lprd7hbsf8cjpkr97nl8sf\",\n      \"metric\" : \"zimwcbgfci9a2ftmgbcppw4o1yvyfaw45wsm2qq5gj43dai9joc7dlb32o5g1l2aypw5w27e8ce1yja4nicg6tjj5w0r9h6zn1ic56fy3gnp3qqr54pvdckhbaddn0zay7asmktxj486sfyer\",\n      \"name\" : \"Theodora Ward MD\",\n      \"supportedLocations\" : [ \"g347mi3pt9hlti2dacchltxmpbdxuk0z385uvtyiffr17q31rdr0h5i68nm\", \"oejzm2eobhpje4pinfefrlcrbvhing5h2c4civhnxppwjxkkcnj0f32i4c1pv1ydmfjppcb8ekvezbl057hmu8o2btab0xxvooc1uhujupf17qlc1\", \"hvgbx229gqz6hjzotcv00nzgbxkrp52yszvj3hyx5m4\", \"iejcdkdqyu86ecdcrvvxeuhjapkzltnwm01uhczocvxxu5zx2190ynvbpf5i8njjdjtquuy4eanx9lasyvo9pzhibl85z3bvj4l2s228ng4blc09agddzcl9t4cf2z07fu3vc5cikkdyov1xc8qkophv2rr96w97m6co4lotljqk9srjxwkt1h5s0e3rxibo\", \"fhqgdclx4l36mep4y4mt5vngo0813ek7k7tv5ky7kdb45jrsg9hg75d9z71g7co0b5kf\", \"qqgo0i1hetupikofl4ln8n1is12siwwkqypfbgef5lp0r53owojq5r4hwt9r8jdepeq4zfi7blkserpvrlt9khdipvzqpu6g1awhr6kw8i1yqrbl284q6magmcvp\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { } ],\n      \"unit\" : \"hrltp3voo0lipo6ve05lhiibha2596mq4dbh1uuipqt98rostpny6w7h4srx3l4j6jaojgb07hlgtsp3w969ukpg82fcp880skj3q8eq02qrty4ecyb8mrypb6xwoy834qoxzozvdrnmcu7q\",\n      \"metric\" : \"rt5chqbm50y02ezs0fzz1irufbcow0uddb8glcxs9neqm0wvzfvv9aqfueibsjkh3928molhonmscllhigc15ntshf5iafpvbyych7hwpjmnxhuegb1wxkmmco2jkdn6ov1cjf05\",\n      \"name\" : \"Jannie Heller\",\n      \"supportedLocations\" : [ \"8s9i4fqjt6e2p1lehxp6ezk6ib435ys5ob4g1p21dzty0rn5vpi3g8vsad7byb3j\", \"6qswh\", \"rxwqzokwvcxcbxsaxnk18lnfadecd0ohww0ob0rukmdcmh974b4bce7iinlbbrmuv2zrfm8shusjtctpkljtsf\", \"3hsjd71nbifxow51p451hk9mgoxelkl5emoa1fm2d36z13ti5x4b3t02dep4b0w937aw553ld6wds95h48m275913zu0r87jycfi2cd4k2x17x31jl141jtqlo70zgp5q690b43zmk4hgqja2xsvh1v1rcuaqkv74dlecsybfvzyeec1wb2wg2znbfe7w0gw8k7jxa\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"oxnj6zrk5mmaft50xo4hbc3on7zwza8jhenlqzpqe7ok0mj4i3xk0otev09kciwzzteyqnkra8am6zek34e45ou4seb\",\n      \"metric\" : \"u7lu6i9f4a6caf\",\n      \"name\" : \"Stacee Gibson\",\n      \"supportedLocations\" : [ \"3023jqqq4jk3nsse21forycfansks2sd0a6te0k3zjk7t6ywr6vpx20bmzvb7laqiwzdbgvf33suaxpt3eg5o2sg36cr59xkp28ukwwt9xvbo6bytkdozoiwf43fg0rz35n1\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { } ],\n      \"unit\" : \"58dwslakdzuuarmca9rg4ygw84xl5v8u3y3jw33\",\n      \"metric\" : \"1kg710pfw4hb5qrm95cxm7ccxed1rfe3xkdhld5h5a7grx0p6kfm5bhg6z3bbuvlpesf094x4r7c54mjbrynus013dqh5un\",\n      \"name\" : \"Luetta Kautzer\",\n      \"supportedLocations\" : [ \"y0fayxneop5tczbiszcuvflpac0rv21qwucd49a2t9b6vxsphmcha9n7ptgp2agrxohtua37cufc6px2w9kq6ntccb8da3llf0nd2or10eoo58ucp2dyj0cnu939ocr1tgd14t38x7mxvxzlljhrkow677is060mrqwhxq5rnumn55obe2rnyk9n4lo65hyfhl\", \"avsl07pbmotr3s3wfopp5o6s0jk09tshssce7b7zvj25qvng826n207vxhq28krn0jycld8etwt5ipac1rvpqn5nkgloxe0ajhzuevwxqqoai8x4f14t7xvxxclitrq8x86twmjq02y6r6sduk68larw8mu7s\", \"g9je1za4pyyiqx5ur84vt99ypv00ckz4menaivfzozzcgo2mnk0o59ray9ypj1xb0isd\", \"wcfl4xoeo4jnyxla2dyzggu5by4jn2ho\" ]\n    } ],\n    \"consumerQuotaLimits\" : [ {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { } ],\n      \"unit\" : \"2ij4lj71di1n7hubr9e6kozqqh3363boo3funa60f4kz84b1s8htx3a7gqtfah4r55iqcnz7dif78dzklx34nnd6s718o0wc962dd26vz6oudna\",\n      \"metric\" : \"fkjl7ek2xqbr0yetv3svn5w48emwpiixszycau2v3qjqzphi2v6269twm3wctiyg5dkokgjfye73qs89ebmcc378nz8g7o0xi9rmw6yw29h0rji4w48zap14j7w19937jg5quyc434j3w6jqw5w595bpl1qbdzcqndvgq2o6o7ecc1\",\n      \"name\" : \"Lulu Powlowski\",\n      \"supportedLocations\" : [ \"dqp7l8ufkoca4y2vwv7au7y5apnk76dvm15d2qtmffizvjlff2c2mxqcpk0kfc070mcc95znj3cq2zc8sl7ovr7frzpexuwul3838mwgnld9ohzjbidxgg8o8atcs9auv9guhpnax9qeyxxosuh8ulbcgsx9ykmdxdpish\", \"9es9rs95v0eyrm4qynj319zhuv7nxligset5nam1iywi3j36b3fxhkh1xnyq8ppx148rkwvr79doxmz6hcfwndubi92p2zo81lpkldc40g96l8t5vr3vw8ddg6k20re1q6pr3ez8wv57icxphecf8k8rbsv49e5cu9\", \"m06nffzj8bfoetrimlzlyy39hlwpvb6xfgsd49kbnt6tj4mh4ww9mmj7aefa3f64r9vcxcx0zdeow17c4ch51ci\", \"oy3ilmqbew31fjhza4qgfi95p2s8z5m7xi4qso9n8mx0ljmmesb8b9ywkv4sk156s64wl0zmigjeic76yqgyuq8tevmmlo4067wzgc6ak7qh1nnfcmzy1qm0aquyvvxlcbzkkkrd33dn2vldu0vu3czhs0dp5qv1x\", \"rmsvg19t94lbv5y9g6gmwf4gk41vqfpttbwy9c5t7paruciuo9ynjcsvhe0883u8hip64k6gjaw57a0ho93bjhzfmafpz33iuonjxa0z7mx2oa9476y2utap45ey7owztghtctw5o7nlttgbm\", \"4hf0ksjxmobsa83d2f2yl82d682spy2ghnogmiy0i9lcfm1uzeek1zkpgf\", \"r25ncnh888vvpu4xec3yjeo1zqg2t1od9m1v4ki0423ck4l8nm2czkf6cdtmm0dhhmoxpv8vjwt0cu8u8k6i9js8a2r7ryjbo8i5anz4yt\", \"o1r9l4l5b2f5a2p8jihi4pc47odl63xvlk9lrpx\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"4m7r1yb2s95tjawr6olvqwsqsi5n91n2z27juqftlprjcgkf568vrjv1mmnb2hkr0r2crefwdu2etny85jpas80s5hgnwzbsbk56e0qawt1oxd49omjga2nemo37sndqx2bxouyrzl5zygz2t8u8d9okk3g2u2rz95ldxfa\",\n      \"metric\" : \"etaw0s1qu7oyctgx008qqbctfld3iuyxorq9oc173mlqocdii1lmpfxocqhw\",\n      \"name\" : \"Floretta Hyatt\",\n      \"supportedLocations\" : [ \"kgm255afy7thkapie1ipyt83mzjaupzcluzz4uyko7oyzpb19115dlz1jsc42514alxis3wtbgi6kphm6hwkjjm6jkbbltw69mqqmfxz9cmhjhq7fj8a8zuhu8zmh3gbsr974r1g8yqmpuj961nct8q52p02m4ajgm2e4n3hpbxtlzbwweql57ns5aae2jmm1u1\", \"3l1t6l9jlfkboiqvg829d1drowt7vak1ksbvrnq8jba0g1ucarddj6wofmghhripzzjrjgo9s0v1g8dibbfmegb7vzv58p20wlodxw9b4hupsyzf55g6m6n5pekuuwbi08v9rutet08cwgo1cpu36tb5kp5k6lyhm60fc22to4yawd9knjb40sr11fjfznafz5340dq\", \"pep25lydsh859qmgfg0aq1znhgw6y1pva5xt2myezzxtx6hn4sb4kr2wg7cdpuyaomeiulaxd9wk5m5dhvj5bxsp240snxrjs9s82nqdx1m1qxatof11gkvaot08\", \"hz4yd6turrzg4do8ts1s2njrt4h7z37fqtlpwsph8bi5nuylqoh0rze6irxivsao9s03pbnll513k7gsckdjs745oas1bhi2v5ajv0eqy5so\", \"a0vm49g040h3ibig7lj9sjz5yiunijsknrfn9iqz6sogscsiqh7sodo5ycllobj\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"fdybukn48my9zvyh43dfol07vu3e14x54vm1obpdd48jwuzsx7p3dkze9tvqlhttz7c9wi3yakbl8ypdf0mgxhwokoxfiyqs0t5jeqc1sg1ib8ggs8s1\",\n      \"metric\" : \"6539iofsaremwvtgm7z63gwjcocpc6s7gokorxwpaia7g\",\n      \"name\" : \"Velia Boyer\",\n      \"supportedLocations\" : [ \"vohmu26fma1mhyxqwt35rr3yv8\", \"39xdl1gnw19g2qzcdcwu78ohfa3xc7k9rflkdket899063sisr6ot61hn5267c88\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"18zw4wvhcv35chdpgihj2tw5i76klokld5xfabunkz1asjf5lqzn40rcxtdl99zkwsopg37str2vln8w8yk8w3iiy9lfptrvoi0b81td4r2s8t\",\n      \"metric\" : \"7e4t2fjfzdc2u60bharvla0oxpr10ly0htz7jpgwzm2yp50w3yghm248iirn1znok4u5d3pp6ttvwjqvk5376rjc0ne7ef3bogud5oj831du4qiow70664lzlv84vpfn14ewa7y7y2jacok7r7gdqv68r36b91f2\",\n      \"name\" : \"Tracie Berge DVM\",\n      \"supportedLocations\" : [ \"i3fwma9oin11p19payyz5say1b97gc29mgap0gf8ic0jdxni74i1suij5jkgcw6mk020pij0s5xbo5rgf7jagz2eq2k8yg\", \"1tlypll8ipk5qxgou4pqa3a1njatasfdec27337cn9eji67a9fmu368r188bwqxma99w53y64owf0fhiaqx1c9uyx1jebewm8zna92vu0xb4w2p8n1sngbfjej9geaynx7\", \"br4hgivifzdgxubyifom9ksxkmkzijokav5jcgaccclufsy2a83zvq87rawu24tqhdswhoozlid3awerh14wv56v42didt2sz7b6amnpk8hyn0wa9he4hb659blag7ldutle7y5sjmep5yxivtpgbhodok0wez20dl\", \"rgjfu82hg174m8ywqxi8bak839pml3kq66odym3789ndllcub7x5rdww9nfwo7gyh9lym\", \"p09skwop9a08lixne6kn66cwek97c2wvk7lxnflr6e8dttjbsa86fuuuqsx8bkb28dx86ddetjg\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"rejg5rmivmp4wvoipwpwbny8c3teisdr30p01a9fpddiwma4yrogbeu3hyma7s86vhqxuwfm28o17dk4nkcibw3ruzctk6uup26u2gns943o8v2dz\",\n      \"metric\" : \"gmxf\",\n      \"name\" : \"Burl Weber\",\n      \"supportedLocations\" : [ \"b3qhbq4l1ysxvdbe2he7859pn0jh3rcvyvuu5d3r1c8wvtbiss7vge465j28vowtvre0l60gmpyomjw355zdpvz5ko0r384xihn37cpav6uvtrcsmmmimzt9r2evg6g8ye44871munrw6ye2yg7n23u7nm8aer9ezuzeywdr3kyvyfeg2zobneajnpiu69iie1686\", \"mcrvf4le72m5k8c7ksozi102t0iez9te33vlc80jzke8wyas0hf4p1ymbwu7sseagbdyrmyyb4wpqvls95kdgsdhbsfu9jl4bbo0zc8g3dhumhxw3n91efqao44p2ii3tlox98tcr1fdlyus3xyys15jwo1ar568\", \"oo8pls\", \"1dm3uzywk7kc9fg9iceypyo07\", \"n058qwpimngtatlpmsej810j1xcjlatgtiajucu5mn619vhvm5u733fzgqa7eugj5we24uw1hrytm1f4axsk2rlbj7bcw8211brfkbimh5yp2bu6gk4ewblyqg4bzb04v6wq5caw8h0g4xvi6h3xdg5ks7w06ptrxee8w3u7\", \"w4lxznmmkwrvubbzoowtfoyvjrpuk8ynladumyevnqmtp9uozi81hvpxm9vn5iflo0ylst2rg10zorym1wn5svaw9ytmcay6zhs0p0p6idncrrm029dalql509qr8qoialbw6zv5qdtaykqmijukyeg6ur4lntsf71z452t\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { } ],\n      \"unit\" : \"w2093qnlvd3c738o9t6nqn30lywece1agiqw3lj3f5ym93g2rlax3o4huzl3ihhkl3b62plwxnyj3istktl3qhsfzvd5ft9ozefeeoho68zfvrbr93k6f296p5z9qprqr2zhhgvvd7wb7wta1\",\n      \"metric\" : \"td877fs9kbscnuuw29nu9jl6czk6nmsfuvpr4bmm9bqlk6ski05spz9u1ymzwwahvs9b4ryur2eo2nv1gv\",\n      \"name\" : \"Alethea Batz\",\n      \"supportedLocations\" : [ \"e6hl7gof32gmhh8ap242rtmpsjsqi7p3y6uefh1jd2i3je3z6c2iwn9kiv1b2tg3lkumx0bjjewco6jo5q03l8\", \"0bi42u1fmif17gw3fijy4809gtk54orgh6p1oxr1cox3xqv74190qfs3jfj01miwymve3drv17rheh8fuqs00k13sc1a74zq290ukpkhnbqjeehtkltsp0d0\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"mtjt6dyf5m9yvlnhys2bbshds22t7wfwtjrructzkgoijtoa32ut5q33deesaueqwqb73imn0f52l96xmiswzp30axlut1d0d5wiybfhfb0qqsindp8481vrbg7tlqrp7h\",\n      \"metric\" : \"zdcthiooseak8z2wl4tlqoocmfudcc0oq5u5dvwrwp2byoig1g1jy65jij2f41zcx\",\n      \"name\" : \"Vennie Osinski\",\n      \"supportedLocations\" : [ \"s7zl9jsytmc5hnc0\", \"zf2of5pakge8cp7ayuzedcskcyh3q634cjf8mfnyn7g3xm5i\", \"n58y0wmg03602kz76n0nwp8fsyhzx8ygbzo1gyh1wo99y4gvrbh4gvkrwy7bjd834f3yui8u6wfqsr83rbtrti31j7ip3wuds977vk72s2gjvi13d3ifi9k8d4mmdb7l8k5e9poxfokg88nscnf7wp9hyez4gto0khqh7oh0bkfldtw29m8pm0r7i1q90fxlrwlj3\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { } ],\n      \"unit\" : \"2hfn5qhtsxfkz4acigmbu3ldit4v0nsua8v6ynyrbztg1ar95p8fm907s6lpcdehm0gjnr5f87nvw6fms287cukm63isi4sxtukzwoqeciazklimbdeot00zwgdowgs7wlkqtyuxizuudnsfk85h75ggf22ytlqrhl3r9jf2q63s74xc6bmb7mcv2zyqpjsi462ia\",\n      \"metric\" : \"49qbk90wb4ayigskvkrs2br11e3ejhabq9m3l3cdt1enoatg04w1es2xbz8fptzx30g2udjscmyd6cqxfa519xuy3tvz949ljw9rvddrmv5pqhjlar2b4gnol1rgwj6kyog0nh1917bmdwcey13k230vpa43\",\n      \"name\" : \"Paulita Shanahan\",\n      \"supportedLocations\" : [ \"bzura93lcdjd2mee6gue48acwx0v20vzm9w27tz3zhbo0ter66evtp28mkdt311r8vfai50z2199lo06jguvn\" ]\n    } ]\n  }, {\n    \"unit\" : \"19v9eraqw3unbtwo1u1wiijuz6xmqwoquhb74yi3arp0c3vq5e8vraccn5zhf8ee2gzp\",\n    \"metric\" : \"5od9z6z9o2rghablpuacwxurmpbvw1hvi43x06bpcvvsu0j5su5cnjz4q0ab6l85fvsx7nu8l1fgy0iecp9eynvf4qwxo986nao1g8a3i4gxc1g09avgtjw3pfg\",\n    \"displayName\" : \"Bert Bechtelar\",\n    \"name\" : \"Janay Kub\",\n    \"descendantConsumerQuotaLimits\" : [ {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"556rd3f0mqqy8bshzsn1arw8d01m2w1ssu7j8kwfhz9v7gmf5n605mre48h0vcbdc0d3rfykqrbqfx50lqkz1m83sgp6qysjmtd9llkzt1bkf9575xyd6b48fm2kgenxwneg79m\",\n      \"metric\" : \"hg7zrv1x8ovqiitf8cn3l5bkcnpw1h650k2j4uesbmvms89l62zstasisjjaiusklwcf59nvxd1859utw2fok973oyq0e7emktv3y2lyty22yb16lx3lgsc2h9i8qkf7cr56foza08exs4tdh6ngf2cjbsnzotv46tg\",\n      \"name\" : \"Ammie Doyle\",\n      \"supportedLocations\" : [ \"kst35hguw9vkeea56nbj3zed1jdfz7tpvhmqhl8la0snds7pwymxyzarwpql6u4wlnog7qdvjqu5e0pkfog382s6hfv17055\", \"v4w5mnblsx146r25obe8cak7an5bvsmxd7493gt6c20spjzrwuoxeky\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { } ],\n      \"unit\" : \"f1pihuob0ww6yap\",\n      \"metric\" : \"5p427bwfovu63pmz1q1adej84osz73riberdrkjre3tussk8nsawrp1f6jupuycf9uf8sq155uzq201frj3zb3rx8g05tlid0pxdhy5wuq7uzndo96norl2eo63uw117\",\n      \"name\" : \"Erich Schmitt\",\n      \"supportedLocations\" : [ \"fxex9nbdv3gvoz9vhart90fg3zi4il89jypd9gyt62mlmzulhy23j4ss3wgza2baxy63d43akjaucrx9mkimdhm2lhrf3dka5jx70jyfu8lij2wjf0llt2kggkb1nphqwb262r8hr33tlhe65mksuj6jw3wrl\", \"tiv2kykallon9j2smfx5lh1i1kictsrru8mlzy7s2bezculf0twtcftl1evl7l7raf9ivjdgq37e976pqat8vcanbt53ontxk3ulpdrj7pqw0i\", \"xmk0dcv24inptb1jkht25etmt3xebh918n016zamogp9jt09kdnxzz84sqkk0ly16ca6h69vzw5zt0z1q7u1kt8lpfnyz3eiwwhbm\", \"757m9hmsq9gt0j9ejuzyrycryklnbeud2xrqiz679nv6bup98v74o3c9m4f2wb43rdoaf3oe7e5jfmexq8frybv2r3ezdsuti6kmwv1mffmp451qj6zwftchkm2zo5\", \"pndq0upb4poiqb3fxpa3jmn76crw3pb4k2kbvx3fumpuoyqh6j9rm0lswtm4yp0ogkcba0lqukbmhqi4u6vftc367xtxnr7e52t1juetoiburoirgz0gyuv2hjkwf\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"s80ixx3oyzljfms1hbaaxu4qs4qccok2xlucp7el5fn66eryxby7ncbqhinhw15vcbllnzatp56jzp8jh9d4mqcekhhkwehkbe9k2jdf0xckre1jn1cx3navpzsk8wwo8evojxzv3mngdpaf1p52cj\",\n      \"metric\" : \"g131lx4jarhtz9xbkks4t0jlr0muqw03tj3vp4l935bbe90s1klflwh2qkk99u3fndn8wa9l2vi1lffdo5marbwgim6b18321nkjad1pbysvo532vctmbzx3hf82sk7jswut4g41tevgv97444nv7y3zzaiuhc0y08tu0vi3tawtvubmzig1tuj\",\n      \"name\" : \"Dr. Cecil Effertz\",\n      \"supportedLocations\" : [ \"1b8ya2jmxr1554h16hz0h786u41p3uragnxlnzhh88mpjiw3fp28fed58slle9x7o8sej93o7n314q77vmnkq47m0sryebirmgvmtv8tgiwxcky18m00w08\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"u8up19kc527xr7t568t63cdhr3ntm50xq9d4rw058m0xyuctezqddkbnmyfeypkr0fppcdelmohtdkr6m60dk76yw0yde2ybyf8paw2c74jw6x4edvhqp6synnkp4khxnbe3zk0m575u8hpbr8mv7pf47z1366h1l1k8se8nfc00yjln5kmscoueny42ut6bow\",\n      \"metric\" : \"iprk7kz8j3v8fq6t52ums3qpcy9yftjkyke57ntln6p6hg9ipppqknlg58rpp726ocecgelybcofwvf97kvuap219v9xugy6yiml01tg8stm8ritim7puuic7zy9y0evsqfgo8eu4ksdtxvyzsednwmmojr7kvems\",\n      \"name\" : \"Cecil Cummings\",\n      \"supportedLocations\" : [ \"7e5phi82jpbwh00ymmx0ngc4l7bluykinueh45qgscwub2pg6zqaa2sct5cxqudn0rlbeq44mfpf56glgd0gxm28vr6j737h4d3uwzs2yk2yb8h5oqrltxc91sawvfg8563q4llu0eivdw87nty22z9tfocngz2s70ixy3n7myy4356\", \"3hkqrlbcue0alzvl0i4dcye\", \"6xbep9t57nna37x0khkn8thn4wiuf8ijwf2rhb45mav7v9p70ff47ojtjdggjrat6r5av49fmcwby6khpizu9khvx2xfpol4rhcvsk1j6quuk7ryrd5bw14e5hdzka4pc3bt63nyzs97hdxjzleff3btcmk7h76yo6t6bhs6hpdn1ay7xqwsfiutdk68m6sxlkg\", \"ip8ygvl0kz7v7rrbt63g09ovq0cfc6lor5wew1tltpsmn9dtna5pxrpub80ih24sq\", \"r1oej81k88iargxmgh3qs2jmpipfpzj0s5vfi\", \"rflw8ejhjytv1ya28q91ho34awef0ovl33815u26p5y5qpbh12llwcx9njarpse055hwvswoaviifj2acywfg15e5o248uwofswjb5ug1s8\", \"fy20i2zac8ds87iajgu5b7ekbk12t0t0nfzmkvoaik8uj8qk1lanxabkhvsni558kejirdugwjw3j7i4\", \"5f5ljc7ignemryqo6jmogeomwf0w61ds18wk6mi\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"eb19pl3evwpksd7\",\n      \"metric\" : \"4vx1nh5gt8hma9d95vx36jkd1k80p1fnkc9u085i7zuj8qqr1n6syihhc8vpzc3up7kac8t88x8uedwqhz8c2v0rrtws27goloec2sc4n6dpva3c9vrdb4opsfrk6idauonl6lmwhmjzfkusgvn6ne2xhq4uk9c8xxgo8a852l4lf0e28f9gc868qq39\",\n      \"name\" : \"Mr. Erick Ruecker\",\n      \"supportedLocations\" : [ \"hssfwf2hmdv9nognxqna4taa9\", \"vx56sg8xz5svzbi2i0akb7lnoi8ddw4ci40a8yulc8uqdetq8z0o5f4e5anjimyf8l49cqejye4ccwrqpepfggb5am5bz9x0ub6nnookrine4xwaysrwdkel46mcz5dnaqxfzchxv82fw14hqpf18\" ]\n    } ],\n    \"consumerQuotaLimits\" : [ {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { } ],\n      \"unit\" : \"ps9umllsn8d2oblmvbwvurnrntvjosikywd7bt8cx268txf9z17r7lmgjdvpxdmdks9omyqkb98wmql5yu9tprpcdyl7zentammxopv9jbchbh7z82qqw1hrra7sjsn67lnusaj7c7lrrndybdxefti5sqxhti\",\n      \"metric\" : \"zhbnpzodpg47lqosws2e2vgemnl9s14zkgw0jxiympiig1xwpdmel606yjh33nvaxkod8japostu7v9fwpphod2w4uk521rgn56z4n6401pntzantcyyln59p27nws5fovvsidlckczp7iycj2tx5pxtmdd\",\n      \"name\" : \"Christopher Russel\",\n      \"supportedLocations\" : [ \"8k06mtlr2empb4tkr3tp8ez78oc0pn6qtbkxob1e0x6vz82lccynvpeqngvw9as2f7o684uiwyzld8as8but5hlw1nwlqgm22rw16gngasefi836zxjr3lyxbth84bseejgg1zpemc6kpfyutprq9\", \"zff6yf3mx4r9k0bcuvaptgk8d78xm0izi61z5pzbfzxexuia6jlux63y0\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"lz5axrmqg8cr0dvgvp23msz0zeg8esh6w0gm5dfvtbbfl12awkvzt5ivsww85w8r4zgn8u3xf11po9er8\",\n      \"metric\" : \"bu7d9jtj56wa\",\n      \"name\" : \"Molly Gottlieb PhD\",\n      \"supportedLocations\" : [ \"p254yir4t53e3o1b1bo4id5ouxc4rpqcmai0y72007v22ke37mtxi548vp5vzowuzqxa2w0xwt5hsnxosb6rop8vkuyga7eds\", \"wqtjl9tr9qclkn7x36t5u2ot6mdp98n79nhozvh19wesq6i354lcef974v3dm\", \"xsn4jxeemlg4abaalg0m8awyv3e7loalrt0tci95m9mbw6yqbgqy83gzgva\", \"svhaau9b5y2ee5n5fwx9\", \"c28mf7me7mzvojdt9fw53zilhfx1jtns\", \"qazvilx5kdy2g7alkewflp9g88gc03v5szh8lybmheucspijrs5m3i41k9zsucdd2j6fex0osb5qpfvthsvtvgxsiww\", \"d5wy87lvpggr8nui76idasbtxf1y16l4ndyb6mprso868rzu7y3pyxcw8r34d5qnjmgugy4y1ex5atjrz5qxkai04gjsx93tw8pwac9092m7gbb7rcnyjfzp0dvmftepqwa94tw879ctrner1dxzhrpbxyopk\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { } ],\n      \"unit\" : \"4hmyl1ley24j54fjtjvd88ltew1ognp7ty4yn6yi6licnwvaocopx3vhevloaxwlkc6he9yqdmts7zvlstvxnq5l4jn5kt9a53v7l530y6s8sg102gr1e5njdn0sk9qcrs4fnfnadvkrpcyf87i6ggu1jzol0etg2i0a9fx6bb46gvz22p1r\",\n      \"metric\" : \"xfk3l9e8hjim5nc58198sre177uvfbdatwgk7424nzqg05k373u117nn5ubgto6rhbn66uhfmpd1hfjrqnfp0wl8no5d3swqyjgmb0je\",\n      \"name\" : \"Ms. Garth Hilpert\",\n      \"supportedLocations\" : [ \"l3rv64yg63htobqzcw5cdqv4kwfn2rduo\", \"ijypzz9qscx4p9qqefwp42bv3fyrfec9fe0mc63f0g1wml47jgufg3z7b\", \"5rf67oa96mc7ooy1lqi53007mdbqurpro2zy6ksi6rl7lvn710x5djojupsm5likrbtkkn2tr3s1b94kstm1x3t2neunq8le3eg6qs02b7p2h2ubu348jjxljtk5q97153\", \"xcolv91qwou0b8y2xy6qeo\", \"8b14npcmk0838wn92s\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"rqumplkcqlergliqqtfmf4ygpfoqyzpsrxhrtdwyhgshv47juf5nsivbxgxifuvtpbilkyv3vshkrwcg3de3jwpj4bwtb5rb6v6r8ppz2jq9c3ktd8ktbcklojgtec0w2\",\n      \"metric\" : \"2qa7w88xtz8ix6xe7bvwcdc49ktsy3nft0pfnbn3ydl58gtx0ve5jqqdqkl8j7uq63libwiklwkvp7bhtxdvsb4kowdbkz4l0ikdbd6irhq73kmqap8c8jr2jfykgfdqwxlsj0u4w334q03daxbe55xy39g9fr27m977zf\",\n      \"name\" : \"Leigha Price\",\n      \"supportedLocations\" : [ \"k2gnlznm5lntotruoxv0mabv8dosgcvxvgk0d6v9c7r5gdrrpzj6h8g5ltog31uqavkluc8asuwtioa2gzc5yz12a8r1uk0sfygb14lsze2xn8u3rmdl3j8uvvqkuxb2tilt1073s064vjw25vvhsrahopzxqktkgie5fymbqjj7tnkgy38eohzz6q0z\", \"kv07vj8h5lpgt2ly1tz23csagq3ph6lokdfh3sl4cp7ikjrg3teeflyx1vq25us5otjjnugkkzjcq70p3md6lh7o5xtikewq975fg9pmpeii45o8erbjqs5lh54o3y54utwmyh45ggooxszxmypaqnbz864ni\", \"7brzs5kvm2ue2znlk0he2uf7iqmj24hkrxxqld1mux6i82xiyot7buj04adz80kqv8kukikxpeoowxs52cp3grv2ve93ffvyktukk6io1uqwat2gh6lzhrfvm6dkhdd1qul7u57qro7zma0733pvoo4t8uvucanflcn85lpleci8tvhwgkx6bfixufu0g\", \"n8iet41qeq8ep3i81l01vmerzbroj9l17psdq87316ikotmmreah3nmb9sbui0zz3wnjpb6f9ug89auoxsxhulnrn3lerxxqme1iqhxt914ci01lm3noeon4nv7e1geq9afg1bxlq7k23h\" ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3df83269-c6ce-4fb6-82a8-5a8bab39990a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:59.787627Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.list",
          "schema" : {
            "description" : "Response message for ListConsumerQuotaMetrics.",
            "properties" : {
              "metrics" : {
                "description" : "Quota settings for the consumer, organized by quota metric.",
                "items" : {
                  "$ref" : "#/components/schemas/V1Beta1ConsumerQuotaMetric"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token identifying which result to start with; returned by a previous list call.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "d09dd94a-ae2a-48f2-96b5-3d83f32e5c50",
    "name" : "Updates a producer override.",
    "request" : {
      "urlPath" : "/v1beta1/Deshawn+Kunze+DDS",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Annalee Flatley\",\n  \"error\" : {\n    \"code\" : 1611562839,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Molestiae cumque reiciendis. Saepe aliquid quis molestias non provident repellat. Maxime tempore blanditiis eius possimus sed et labore. Ex quis voluptas illum velit dolor repudiandae. Impedit sunt co\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d09dd94a-ae2a-48f2-96b5-3d83f32e5c50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:59.785054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.producerOverrides.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "c99969a6-8450-4ba0-b3c9-f98cc8872f58",
    "name" : "Retrieves a summary of quota information for a specific quota limit.",
    "request" : {
      "urlPath" : "/v1beta1/Dr.+Clara+Smith",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"isPrecise\" : true,\n  \"quotaBuckets\" : [ {\n    \"effectiveLimit\" : \"uatx0qdy1dxuphv05tux8g1kbguni5jq5btt6q78gjcmhgcghcdbvuyd2eplpia5ji0q36ozz21s4kvuilw0ye4kma1gthxwo6s4t6lnyckc2s22t0artzyyiw95awyat8qa9dj\",\n    \"defaultLimit\" : \"9wo9r50syw1lr03bb62sksck6if60hxvitfh0n25k849k1exs9pxmg7xt28e4wtdjangkbugwmeuzz4kyhi1z21vei8du9e0kg0tlmoqg0qlekxaexv35s3mm8gssv7e0i2dnkbrpkoo\",\n    \"adminOverride\" : {\n      \"unit\" : \"755jmoonmtwrupmt144nzqsdoslm3gvwdna29d30wy5hnju00fuqyabk1h3jl4p08c69e0wi53xdrdizwgk3qto0y46a0hkich45ph17t9oxuyesaijd9dd4gq30or1laqh4u0ofq4nibamm8ae64dckuvheg2phg2\",\n      \"metric\" : \"f7iefs82al1umumcz0w1d1ip8ne5cw1p33ea107w9p52nhdzia0507fx45cx06iazkjvzw97gj2j8nlv8jarggakkwtxygpb0y8oivpbhn4udjcepfr8089dza58m3motadtp2hgfx82hyky7m6rid2i5d9i8n15a6\",\n      \"name\" : \"Lesha Zulauf DVM\",\n      \"adminOverrideAncestor\" : \"io64tq52k6z815epe77a6i09far3f1fd4ee73xm7a9qcuz2lfi0ipltm5picyw0cyrkexjpio5jeonkd6czpw72553qh54hisx2lg4ocbyy6c85drz9ygnmg4ldtqmeit09t3v2ent7rd0t5yhixbrdsyxx83hdn2qhxfx9u04nlvg3d2t\",\n      \"overrideValue\" : \"719xa252j6esuyu2vfv7z9uitol1ewinj\",\n      \"dimensions\" : { }\n    },\n    \"consumerOverride\" : {\n      \"unit\" : \"5wraa2u4incy28ufptbr1vw1s112f46ls3nirh9itaj8cw4qix78fft2mdu52ap7bdmkpa6hzzy1hf5s8m0ou3rqneatatdqmdukimlor5b9l3lp7mv0dhpj6owtvq6es3t50evw7lx\",\n      \"metric\" : \"7gf5hujg29uz5ol7rrq0s2xq4d3bakl9dsmravmb6ykewxowf0asimmbxj112ccg8yhevgnrc6n3su9e2qwxqsv7e6da3j0zj46szgprodapx8de7gzls0g0uz7p\",\n      \"name\" : \"Fidelia Stanton\",\n      \"adminOverrideAncestor\" : \"vyyqdk9gea3necbvdpvbzui1alg6v7dyqkff8jmbi8onkpavodyhuudddrx3kms3ij5vv8dcddlnsdvry03nnt110s8ab8p77nylbmexiw3eg4g7wjh2xkov4uqzhorgu9zea32wd6mltqsj1tl6yfghcgmtrt23rvf9dx7zbmpg06nbmafqc6slxzatvqadx\",\n      \"overrideValue\" : \"rvq35vymhnn4jqyi54kuqqstqb4n9q4a2xddgehwo8sam61eq4rr47ef\",\n      \"dimensions\" : { }\n    },\n    \"producerOverride\" : {\n      \"unit\" : \"r572lwa9wnb3zyjw87vgcyvcb5kz46f8gyg0jjasrqamdes9k5zaxq0958d156ppjyw8ztt8xmbb37c7wxr1neytpm8sl34y1vteflf9svvcay0z87agdz8jyv74mudm23wnebuyhg6kgd61i7qr5s6h5mn1yeymlgklgcgoib4k2w00jkl62hk0yc3740xmio7a\",\n      \"metric\" : \"a4kkj47det41ltszdomlj1wwsvt2b1vveld63tcwgurrfpzkwk8z16jcxxdc0h3rj6303ae3dh099msz4jnnlyofee645l2x1bj6clkus1dtlauzroy8f87gc7solpk4e11449yayv1xubikd0sznuhbbr7ivpuhs8xetl0pu6jf83\",\n      \"name\" : \"Troy Gorczany I\",\n      \"adminOverrideAncestor\" : \"fpq52yqirtudub6oev1z4sxj8p5ugc0z66u5ho1xoqapjwmzve9eku21l2o25rk7d07jrcxrevppc1wvl1h9td\",\n      \"overrideValue\" : \"to8idn4\",\n      \"dimensions\" : { }\n    },\n    \"dimensions\" : { }\n  }, {\n    \"effectiveLimit\" : \"l0r0za20o2oo6xkdpap0mzx7say7v7g9x6ugiti5ttimaa4hwwq2m8lops5okwwjgi38kxdzae5kpk5jqatwq3tfim1g2o3m80k9spohtfk233quwh4275ziwyvwh4go9on66ejg3nzegpgcfshxfufzi3gehgku16ekr\",\n    \"defaultLimit\" : \"2z5lqj0nerevdqgs8hncbrlrcqzpgswnqsd9brtcgg97vggdtidx1zajiat9f8u6cufkm43c0jmgh60t5jfv3hqzadv0ka8lhupv4cneokmqi6yd2zrbapj3qdxhj8rqvzddx1xm64813q3bfqstmujwcqsej07\",\n    \"adminOverride\" : {\n      \"unit\" : \"bfd35fqiowqjr70u8fdf0v7qyquvzr8m5r7att6wwcxli4vkyfvfiqrhmpwup3impzd0blasi97gg8axw4hckprrrpwbcg2sh3s66vky2zldtrdlxzv42whn4hxn3ilojmf04gazpujm8t8g1oqpw7keen0e\",\n      \"metric\" : \"4cl5yd4mxhmhdnamduyhh5iphckh5fwub2b0jf\",\n      \"name\" : \"Miss Chastity Schmeler\",\n      \"adminOverrideAncestor\" : \"84i5p85tjqi4dzttn7fujjcnx94fo46fsybdoy2mgzgc51rkyqwcgca8u1bf5whxrghlzz0qudkea3sa7bc86eqzy5dz2do5am\",\n      \"overrideValue\" : \"bt82effjjearpgvgfywvb8sgk17wmtjldhg8widuvedwa4jykr1upe973nz9bz3w2rjme5txocry7tc7ifi8ck2vtr41u11puzgsj9kr0j8y51k1dco11gn49xeuonhdliv0oaxo4gwfnaon1me0z7aqnfmu0t6anz00hka8xdw\",\n      \"dimensions\" : { }\n    },\n    \"consumerOverride\" : {\n      \"unit\" : \"hcqf9eqi74w5p\",\n      \"metric\" : \"tanhuvfzln7x900xjsm0c0tp8ohakp469fezo2g8n1anm20qzlwnkvlyj73\",\n      \"name\" : \"Sirena Schumm\",\n      \"adminOverrideAncestor\" : \"tj8j6t49etvdft535\",\n      \"overrideValue\" : \"5bmjmoxadn8hzp9yy9v44q3n9gkh68ts7vp8hanyc1gnd9njoh73n9w6m2ofayss5f4e7zj95c0\",\n      \"dimensions\" : { }\n    },\n    \"producerOverride\" : {\n      \"unit\" : \"vpafqwwpuw5a51mbyptrrj8josm0zfwoz6m0uffb91n5yzx70z6aol1\",\n      \"metric\" : \"7cb5v0ltdqextcvwng0k9cj5dpnp7vgfe2kq5t7bwo0n525fexif58xywehouhkuvn7u4e7bj3u8ygpqa6g5n2y3jigkm99q2fh936vzwlk5gr61ppi8l6myw84ehvt4fah1ra8d1z0gp2a7p9h8kf6\",\n      \"name\" : \"Jayson Hagenes\",\n      \"adminOverrideAncestor\" : \"0ljbjw8hyqk7i4y42kge0qrscpo53e2fmfr6zva0xacisd0x4oh6nkzr14lwonajm9rsy05wwtsptw3kn19c7lpqkxih3plzse3qdqobol2tnis2vyebo1udwk9tpcgoiqbjimrcq10d5qqrfqyb\",\n      \"overrideValue\" : \"75c9uripi5w44k4qke1kz8l65bp8f27abprd7g07jrt4ey0r9ibk8b0ou1wg8mjgh6a7lx93ke0amqpwi5hxc0pwozb59aak27izw8eqtw9f1gng429yc2bjhpzkibgtuegtx9ifur4jisygna927ajn73ajgs8khh3p76ubuw\",\n      \"dimensions\" : { }\n    },\n    \"dimensions\" : { }\n  } ],\n  \"unit\" : \"w7kjdpd\",\n  \"metric\" : \"d7pmfxnqqsxi34tcww7qfpqumzoh258db2yetzy4ul9rzn994xjll0wtbmut0al7fh6gcwy58ygncyb91q4j1k459q8im11fhmwobwkh67njweuxy5l6c1whcco983986fwmz4e7jodll7odzsytd1y7cl6x17lk0efzv85g7x3bjo71slbh6x\",\n  \"name\" : \"Gordon Wisoky\",\n  \"supportedLocations\" : [ \"vdawdkwfyiiz6m2do3uo3wge7oroin75zupxa7q58opmjaoa33ksc5e8w2vkk4jibmv1r2cgpb42ju0w9oz6aajx1uqes4sy4tc6nkh7zdsrcq7oqm4a1tcziobrfuq3u75y69vr\", \"4wma4md753iofyf7gnh0wpgbb11cl9ra9hn8rndx0z4j16q6phas067dxqytu2fqjnpc5q4cyalwr\", \"ezzv6w115x18rz4617y5oelx\", \"69z04i8u9s3trkl189n9gjmjeo5ii66he23x32ggf97od0qm6e147tsbccuv3g9p6jgewx7q6idszypqtf71j8ldkn2bihg1tvc4mdq2hn9a3sxrt2soi10rzg\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c99969a6-8450-4ba0-b3c9-f98cc8872f58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:59.784815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.get",
          "schema" : {
            "description" : "Consumer quota settings for a quota limit.",
            "properties" : {
              "isPrecise" : {
                "description" : "Whether this limit is precise or imprecise.",
                "type" : "boolean"
              },
              "metric" : {
                "description" : "The name of the parent metric of this limit. An example name would be: `compute.googleapis.com/cpus`",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the quota limit. An example name would be: `services/compute.googleapis.com/projects/123/consumerQuotaMetrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion` The resource name is intended to be opaque and should not be parsed for its component strings, since its representation could change in the future.",
                "type" : "string"
              },
              "quotaBuckets" : {
                "description" : "Summary of the enforced quota buckets, organized by quota dimension, ordered from least specific to most specific (for example, the global default bucket, with no quota dimensions, will always appear first).",
                "items" : {
                  "$ref" : "#/components/schemas/V1Beta1QuotaBucket"
                },
                "type" : "array"
              },
              "supportedLocations" : {
                "description" : "List of all supported locations. This field is present only if the limit has a {region} or {zone} dimension.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "unit" : {
                "description" : "The limit unit. An example unit would be: `1/{project}/{region}` Note that `{project}` and `{region}` are not placeholders in this example; the literal characters `{` and `}` occur in the string.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "51668afc-0871-49f5-96cc-ff5e5100cbac",
    "name" : "Deletes a producer override.",
    "request" : {
      "urlPath" : "/v1beta1/Joesph+Wolff",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Trinidad O'Conner\",\n  \"error\" : {\n    \"code\" : 1829406253,\n    \"details\" : [ { } ],\n    \"message\" : \"Enim ipsam esse dolor atque ut voluptatem dolor. Nisi recusandae cupiditate laboriosam occaecati eaque. Beatae sit sunt neque ex et quo aut. Consequatur ea maxime ipsum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51668afc-0871-49f5-96cc-ff5e5100cbac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:41:59.783841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.producerOverrides.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  } ]
}