{
  "mappings" : [ {
    "id" : "6a712323-8b69-41ae-b309-59969ba11076",
    "name" : "Creates a producer override. A producer override is applied by the owner or admi...",
    "request" : {
      "urlPath" : "/v1beta1/blnt54rzbs7q9zaazm1vljkqg8g1wjmwg6uz8k40q78lg1o7u7862w5ooeoarvz3arqs8n8tlm3/producerOverrides",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Tamala Cartwright\",\n  \"error\" : {\n    \"code\" : 836076607,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Et unde ut minima veniam reiciendis officia. Necessitatibus et quia laborum sed. Fuga id molestias.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a712323-8b69-41ae-b309-59969ba11076",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:57.455986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.producerOverrides.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "89aefbdd-a051-40e7-ac66-a9403515bcfa",
    "name" : "Lists all producer overrides on this limit.",
    "request" : {
      "urlPath" : "/v1beta1/zomdjiuweagydl8tvckjo901dr4ftz7x2vyb0j64f6gesnlaxye9yue5lwj9buj9wrzq4hf5cpxwdpxcxbugi1jjge8sjlk7yi40lu95df49ypfo2fhe4fvn0pe4mnkmr2y7h8o2q719gq36objfk62m0475nkobcfdhxewoc734yolg733hh3s/producerOverrides",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"87a78u8bocrj9hfd5vp8awnsmsagq0231mqsmpeozoxa8z1jax3cgu9211qp6zkdv8x9dq4tikkzt3vax9p1hz0za9gntusu968t0122icfvbnbnr2l4ohyu3sl6rr83v35u4\",\n  \"overrides\" : [ {\n    \"unit\" : \"jfvgtifogfocr7xckdcbpwlig7qcyzkh4vg697t5t7hzygjej5xq9oswtbm18ee95c6bbqqhzthacbesm85ek307s0aj663e4li6ximc8wzggw22yh5xblma5byehlqtb0a71be9dqfxr7i802rgumy6g7ja81kq8n8x3q6\",\n    \"metric\" : \"dwuphl6pwenhikimez6g66fpidgf\",\n    \"name\" : \"Magan Stehr\",\n    \"adminOverrideAncestor\" : \"oe38a5b7g11s2ukvvybynl0zz93gmgsklsr873h305wb7oz\",\n    \"overrideValue\" : \"wv4g7kmyqjblt0hcgkh2ee6x6jqvmi4bgx1nxnciaby15ec2ct21xug718k9ku3z4anqykjbun5idys8onxl1copzg96cbqraak5\",\n    \"dimensions\" : { }\n  }, {\n    \"unit\" : \"k2yft6iastx38ev2r667hx7ye5aq59uw4owilzd2qt2tomtrlya8zc7ib\",\n    \"metric\" : \"mf6dn16wqzcl791m4fqbzx9swhd1jfov5420icoyu9zdw24yde9td65j65ltudjsu0gihn7jlk9pjr8ae1gn68kj8r2m9im4toxy9lv2wz2czo22c5niavefknxkf6phea5khnw9ydffdvja1vnpocbowl1gtk\",\n    \"name\" : \"Miss Annamae Adams\",\n    \"adminOverrideAncestor\" : \"dyxwy7zvfdv3f8qn4d3obse250sm0ycegky8kudkxwyyxrnzk2ult9pdw142t3mo44jm2eqy95bz5pe5wjk5cvegvfcdov2z5a21gu33gxbulepf3jpc9d9a6u4xtg1f72f2mg8kgw5jdjhnm0ergjp\",\n    \"overrideValue\" : \"lvo1vkrmind6ndfmtuxhb3tz1sgws54ot5heaqby88o8two3u9lyd82u05fhhyq7fi94g70ypy4t3cus636urtc3k9wa1d60z1trwytp228r07aybj1xr0w\",\n    \"dimensions\" : { }\n  }, {\n    \"unit\" : \"0jnj3l1hgdhzyyzi1yffpeqkg5qg56xktvpin44111vf1ql9yx6xztfea1twbch3gp6vl0uut08u3b0dszu3hzgfhz6ry1be9am7p04006llk93rhefewzr3la8mbeh9b4p1khyr13vrpx78tlh1z6o6l3540mofgh\",\n    \"metric\" : \"suag35q74inz1s6x2c9ezco76cxdsngxj80gkiwcu3667decqp2tr\",\n    \"name\" : \"Mr. Tequila Lemke\",\n    \"adminOverrideAncestor\" : \"vei9aj3h8e21qmtlfm0z3mcgu3qyxeo1gxrd7pnsjg6e3mtslo5jbt0ffkb04g2t6f4m2m9gr2ts5buu1yf2f99owcy01kgwxb4f5rxc9nh3f87\",\n    \"overrideValue\" : \"xiaejha\",\n    \"dimensions\" : { }\n  }, {\n    \"unit\" : \"0t1l977jataaep4x2a4zs1aurutsonw6gzimk9bpm839xzyxgyqn8gybpszm321myj39ft026p3fmkadkl7j0d41kx9tbxwrvudjkak\",\n    \"metric\" : \"0ern2ux0vva78vjc2qyerrfbq764qlhfazldq4bjt89cnkj4jew52l63yr741\",\n    \"name\" : \"Mrs. Bobbi Goldner\",\n    \"adminOverrideAncestor\" : \"20fl2rnx35kdpfqdcad7olat59jr8libh2cv1b4n23ygu08tt28wfith9goctyo85jtptiyqp9rkl9m1khpwk34ecvpsuoiw0s0g1widt51ytlpshq2a8uqcqlawmzpd76gq5\",\n    \"overrideValue\" : \"frlyocfws3kipapmfvbzopmpz53efu2qwifsebda36ts8alswlhx7h0tdy75zwn2x496j03aa5vmqwox1t807woeyxr3l77y8qzgczaz5568xpvibpyolzri8ayn2b3vnahobr6bjwivstcdjb6mgag2glwdxwu5s6c02tx0xoymsvrbye454\",\n    \"dimensions\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89aefbdd-a051-40e7-ac66-a9403515bcfa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:57.455783Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.producerOverrides.list",
          "schema" : {
            "description" : "Response message for ListProducerOverrides.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token identifying which result to start with; returned by a previous list call.",
                "type" : "string"
              },
              "overrides" : {
                "description" : "Producer overrides on this limit.",
                "items" : {
                  "$ref" : "#/components/schemas/V1Beta1QuotaOverride"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "885011e0-e6af-4124-8f1d-8d39b62fede6",
    "name" : "Create or update multiple producer overrides atomically, all on the same consume...",
    "request" : {
      "urlPath" : "/v1beta1/96lmnz1vha4pgmeiy5dl0navscplvs69iz88tsrd9add4adnn1s6bor11afzwpccdgsx2tb45uk8ni011srn71cxw61pzgcbnciz6jyc4cjjvux9fces4im1s2tso555vl64aknke7ssa4nqqaw6ecffmd5lajzbuxsrw0nhcvcllbr1yuabuad8xe5vn/consumerQuotaMetrics:importProducerOverrides",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Laurie Hettinger\",\n  \"error\" : {\n    \"code\" : 2051537363,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Porro voluptatem cum. Perspiciatis saepe voluptatem impedit est eum saepe eos. Temporibus in quis cumque laboriosam. Quia nobis voluptas rerum hic rerum aut esse. Repudiandae porro aspernatur nesciunt\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "885011e0-e6af-4124-8f1d-8d39b62fede6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:57.455247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.importProducerOverrides",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fbde176d-1bfd-4233-959a-70f854eef5c8",
    "name" : "Retrieves a summary of all quota information about this consumer that is visible...",
    "request" : {
      "urlPath" : "/v1beta1/u8cyst4sqplegvx2lk4y8y5e2m8bw3k5it9fn6y718d0qozd9j35ywn851m2ek7abe6vzut/consumerQuotaMetrics",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"41le4r7825r8y4thcyho6688t3cz95h63eamsvcys3lt42k8zvwx85sv9rfywuicq0khe6lk3lu2ea4wfofvjcjwo7oz9cfvo0db3zad3pmc0ma5tdvar3o2uod2c3rqrygki2kdggax8mxid5qmer9qnq0jw\",\n  \"metrics\" : [ {\n    \"unit\" : \"1gprzzgdncycx0llmcship5r5thb6be8wbfl9fxhqu63ukuq1jxzf\",\n    \"metric\" : \"3p82hec5efs03mwddwvclvw8woiskajeer5uoudalrku5kcar91ut2fe6ou2wqsehaf6gp1i0s29wyw4fv19dewpnr3snbfd3pia\",\n    \"displayName\" : \"Yuriko Morar II\",\n    \"name\" : \"Sun Hilpert\",\n    \"descendantConsumerQuotaLimits\" : [ {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"3n5jk2ahphi4stcy5kk7wlfyzhtc9qrbx6haxkc0mr2m5w779vwj0tnwfm9h1y4skiecsgbk6fzo9ivx7oisef1sf2pglvhhwe6\",\n      \"metric\" : \"xdvxslb9guv2f9ijxhplsyz0pofpxhun5gqwgvwzmozki4urus0z3qcw1c3go8eb0lphvxu5loctbk05os5t8c8mzirc2n7b271wbb10rbvgc68ojexir\",\n      \"name\" : \"Dr. Lamar Nikolaus\",\n      \"supportedLocations\" : [ \"gks8vz0ihabbhofmtcajgxcosfkz6584rybhc8naa7fvcfrtq5r1ujigmosguq\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { } ],\n      \"unit\" : \"cvy1026m1zobvrp2j1g67omrp93twjme27jaz6p9v2\",\n      \"metric\" : \"7hf4iu9i903mt9hhzjyal4o03hqydpzfpy6xj2jz0z2685acsm9g94eijj44h27gu8ypl0s0m2fum9f7tprvruz3g72ktiqrtdeo064h0cyztl84v0bwg48d38bj5nyeeonvk64ahh6lb05qpk2yo3am7rrklypkixxyldm3tqozmo28f0bqnnqslvg8l\",\n      \"name\" : \"Lazaro McGlynn MD\",\n      \"supportedLocations\" : [ \"nlug66frjezrwjtsymyh4rlnm4q2t1ctwerh07es1561w5owhn04adp8zibc669pqsww339ramxtb7vpwb8rxc8f\", \"9ljfbq0w396h5jjyyerictp4arl6j0h5nrnvda0q5wbuh2rvgi0pv54l4cfpp6dbp3g268rfz89wikhnvw2i3qyi3nzidkp2dzdhi8s1lfpy7osyyjy4x\", \"2lkmab8tgmi51nobpp6p48h4v68twcxaupm6muji3mscgxkqw16j5wdnpt3gx1jl0av3001jesmgc2ye7rbs6pknlf9fl4hj\", \"hiva3uig0qfyr5r1c2wmfutgwu739rzx5ec9tw1tiume\", \"3olb3cg4fwmn9xro1th0q829c9csysz4221jcq0cg8o3hgbzr8jivbwiimfjs9rg8j3ge0s2sb5f9w19kwicucwf950ot1v9n73o8la83naa4t56ml12cr45tquuy7o0wmyqji08dajl8e6ocjsx9mag2d6m6oct8przqmjbimya27qpmbwgswjwo67aioksyi6\", \"7a49dkx7v9pufg39yyzoznbjb\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { } ],\n      \"unit\" : \"ed2camoltbd0y3uw160igokq18b6nqmefubkgzfa3pt3tjlmeymfqz7guk8ke3pcwib6qu7ftr180q1uscujajvx3qk2ksbu22bmdcq1d\",\n      \"metric\" : \"wpugkkra9kui7wpus2nxc2ypk0qkzpegkppwdxrq6gb53796f2t8pe65h6qprar3ozruvh9bcirw04xplijvwvcl0539aefigxzcg4va2ibcew5ivkbk1uzoyj3i8os2r9b5iv4y8jnodth6oqf6w\",\n      \"name\" : \"Haydee Haley\",\n      \"supportedLocations\" : [ \"ibgesbkv11szz7xy214cqv0z7w92x5sagz47w7fm7ud1k5zcb3kh7yzdf4s0m60ihss84ghm2q4dldx0m0mnl3e56sfq8btrj6lxxbm0xw45qwz6zs6w7xy8r11z491r5leyq8u1modwu69uizlnrivh89isavm37dfw1udowasveanrklid3ypi9lfzda\", \"vjny9i50kmyd82u78fxbknpdg7qr9jipm0ci35qq63un245jtvrmvn0cly8eokvk69k8sjr379esgahfyifbasplnchlucnvqaoarpw0n5kru4y84gsjr3vvz644di6fvx79q9mkbr18438uysijoacvjclfmm\", \"akcl3gluns8i62ctgn85c8fyv3sj13kdtvkteh8cbu25hq51w72rmosfw54d3g4w36xx9jkf6ddj35gh1xmpevct3x3ivuz10fd8yct49jtqyrk3zoo\", \"l0kxv\", \"20s0ic2tzwibt39rycb6w1prsguw6xq81vqunmz966j1rx51shmcogw3mqccbjkpe7ag7s1jhleswwgzlx4z56nry1pnmc84ht8p65lzm4f894h0bd6wmldkikbcy\", \"wbv343ud7miryhf1zsyo0oxovu48iyz8s40izslo5sr2joeiwt0o\", \"bhktismrx9dbbwqh85mgvmja7fwtkda0d5oa0ahsxmmojliyz4zk2o4yzb0igcbhbkan1l1w92eu6ax8ge0qeesca89tsgzkpfnugvy0rphkpi9yvg9otlfvoar3i1ki\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { } ],\n      \"unit\" : \"d6begmw7j9e6f7kvzvn666p0pyo31poytfz4x1dlnnkq3ifjqsk8rrapb0lbflhfc52qn7c8fnhn8ckcy5iczvz4ifwrpyz5240qqzgpf9b70hwk3\",\n      \"metric\" : \"jlwyrai41dqmcucy05jdh4n0dmvy6mgc1j80oafjpygx4lcg9zvhg0v0crvoqe66o79rskvk3eorprccq9yx8ppofu8ihguhcwokts0vo12eqhmbm4mc1a5vay14aie51k1\",\n      \"name\" : \"Shandra Rolfson\",\n      \"supportedLocations\" : [ \"adwpl4214k0elggoj2wd2bju0k8lycadp3cr495qwaot8es9ekijesgh3mtwsnq1yy5dn0xnakfujjs\", \"c3axqatywgbzh1n0bsnpjrbnz3i92slsep8854cz\", \"r1hndr8djl1u0cpen0uuhmrnxujizu0ym7kbvam4qufiocd4c7myjg61fzes3gxq\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { } ],\n      \"unit\" : \"yr8dp5kelrg20pjbbzswraraibujwll3p9fwgz4or039qbhte5xbi2nyk90dm4v9hais0e9z21gvlv0kjrni75ld2agc4oo6xfkuk7lqbzscej8w37agntl9aaik\",\n      \"metric\" : \"vp7n0mudtab4prgo159\",\n      \"name\" : \"Mrs. Lance Herzog\",\n      \"supportedLocations\" : [ \"k019mko59kslow8utijmdec8yjjcspkpxtcf6ioluan8ta62zz2zdyx2p7tsdv2t5zt069u5k9rewhpkrzskewlmao3cp38x4jxq5shypw8eb1j2bgxk51vw21hucsi8jlixdv1rctfujauvts8c6jlpnbucyzo\", \"8vd2258x3ymfaj3pjqa7oiacdssw5e1788s23jciktvh3oijs19m29nnp2diuvkyhed9fcs5to0ngcmrcbdyd47ohdzygab7s20b6q\" ]\n    } ],\n    \"consumerQuotaLimits\" : [ {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { } ],\n      \"unit\" : \"9bg0jdech8puv546ba2jhojsdvmbyg257mpfpw2s4jnfvr3rqo3zzsgsi0tjeo2pxoswkttdoxg3hbq3sfw7\",\n      \"metric\" : \"fh1t4f6n5zp63xdydwvpprhggxbiorrvubqgzsxmsdzcledbum8gab71dl0ae2d4iug9vbail0tlq8jljangu4b5rxx\",\n      \"name\" : \"Sherman Terry\",\n      \"supportedLocations\" : [ \"qfwz7vkga3u8e2rrhboh8pqaco9uaiv2au8pwxs8wf\", \"74wq3kdzjiys2dog75cx7wgdjdibitd85ij0gpm1hb7uftkxh15hdp6fknlw16gb257dsm7bffq391i43klcd4zvc5wqf7nyvy00hfxqpdyrgye4nbobjogihgnl06l0j8ps55ohn2wnfd4d4atqjrj6toh1v\", \"dfxyyrs3bw0muhi6vfxoewlv8wmart2qkizqe0yl1so0cb77lrievzr1mw6475b37dxup3dxoti339mxaxax27xok7zumipmao4mh4y5czyncvkermazbkydsm7qddgj83079hdfliwpi0lz3h84n1rma\", \"fky6ld178cjz0o26jdkhqy4nqaz4coynx2lnsbgeut6rzeeuiu3enz9vmsibxp0rrboqogni9vyqg13819k0o8wzmn0nsv1sfq78i7ovrezw8oitbnnbg\", \"zicewgkymae504qrrmtnglcsbxpdevvb6q8xnhj648sod5zst6o3so2chej3px0mjwzfhglvp2a6m04ruqsfcnlvrhnndabqqv575nat1ydw6gyx821s90q4y89s6jhy31a5bnfoc2\", \"th3kxcjs5nan4goptzbhdbyj3dcu1nvxqesf2uq06zko92v92mlht98wtbmg993mc89ey5wf05jt3q9s6tp2nqqy1mzs7ws1sk5bymn5x6ylnxf4mybkekcxdpyx44ja9\", \"fsloiflr6kgptu6ky1gfatj3ywuf5iyib9v742k50nvxtgcis26n6r\", \"sjvdg1ikye2xoaqwtaloegvy4jqfjts54c0dv294grig91hsikjtkk4pkco\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { } ],\n      \"unit\" : \"f11q93c6he885nlgmmme0hi228xx0tbdfgjmgn8x5b9b1u7jzqqabgtctemwj3e0l5tv4tj4w3kv7d5octowgr54p2j9xk8v28wucjtanzgfvksxm19ztwqb3ykerikslaoamvrd11a0l2eo4y10odxfu484ima5vel9kyc4qwia9tx7yijeb\",\n      \"metric\" : \"pt08uvzox5miuu5a4qjz30q36gsrh80qocxdkkkvjumjil7z0m2fnharbw26rkjybtqtk95izpuwswj7ntm1y89lzgbcq\",\n      \"name\" : \"Gayle McClure DVM\",\n      \"supportedLocations\" : [ \"2ybj6w6dgcsd5st0pjre15y77mzyt82cncyjjnvcqyq46snoas8o3m2clrjzd1blrqjhu2vkd4ssm8b16fhp0c05yn3vaxrb2rauowoa5us1490w2qy5e7dsxtwbosixlj6p3at0ssq06r2xwkzfshzmmltumq8m36njokuvhbg1f5a\", \"sd9fscb5wg16wdq5ds9oi4wxd0piir15q7qraqt7njnm6um007o6wt5w6b2zc98d0tt0h8183ctgqvx9v63kdx25zjpwzm5ggh1fp2oq5fi5o487oof4ay8wvzhaedktwmsv7nxrdcy5pnzxkpygpsaho3dshbcal\", \"fg5qimlfkfqaiy03wz8hqr19nk20uf\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { } ],\n      \"unit\" : \"udwyd4rblzej1ncyveysmmpnlmddk8cwcj7rpxqezt4vzcddzh7i1b8wa36gek7rowoqb4c6pzdq5c9lcq5449cstbcg5tmu7pyk5xbz6m0o3f9jqclpdfgmpeutb33g46n39dp46u3ld1wr4xygv6tsn823uzlewv519spumngxjj6427\",\n      \"metric\" : \"kdo14zams9u1habgvctq90zj8eqxvy242slpgkvo3v5vesez\",\n      \"name\" : \"Jordan Ledner\",\n      \"supportedLocations\" : [ \"84wgttprtm4j1b8baanfjsps96ibqvv916s5zsdmi4d05vc18\", \"d7g3gotyjae6mr1vogtp2u0grvmrdgvue4xrlo9jjznbauhlewe23whxjsi6ciz2mlfijxorotjw1r7vk46nspkwxcup4w6j88eezwzxc59vzr8x4aug8uk7s9rucqs\", \"lq32hy7kymdrrzslfd4sdwooyy2lkqg8n4rtmpjysmn3lb3egxcfrx3wedimlygb9c4luty53we62uh5wcqg15ybpk\", \"2gupbbxhqwh5m6gv6ul9c2e4q7wwbvmae39vy8pp3tufy128svmpnm4yl8gn3v3gnsdqn8c9h0u3oob7sozgqfftkis6gqylwiwim7swx94q0ztn7k8zl2be2o2u5jfgyxhkpbkcfhi06c9vanm9bz\", \"xrovzn4nbqo2wko2kluabtqhxf2b0jjfbzdp5f1xy9madw9cammbvp44yetbm007fls\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { } ],\n      \"unit\" : \"0q04idzk7d9917y3vh6sq4eg3mbjx7f8bsgeqcl6w009aly2sfe4a55mc4ow79xc3crhwnzjporzmfv\",\n      \"metric\" : \"n9kvtfdrn7ggg4a0l6uuwy0w6n8capug\",\n      \"name\" : \"Melany Mertz\",\n      \"supportedLocations\" : [ \"ha0fvgf72jxo7jkvywuhaj00141ceyhqwwv8g9dg6zn3xaeypv8o3wqsc2\", \"x451kjso4xxqnskywe0l1ga6wzca3fydvami60b2iaxlyogqfn2oz33grek57cegggx860c9bgvqhz7\", \"3xllwe23dl90vwx2k3mhc74ifyjt6wrt55w16ib05zrmoqjjqpx6zixaycst4us41s\", \"l9ipga44kj4kp8m746z113g0m9u5z64sme\", \"sh8yafw6zktqfkoebg2y9qprh66zunkijhq4o35dkmjzop8n0vfnmjjkomhoiddfh5wgh7f8u6n2xgi9tiv7sb3v2oa7yta4j42650rnst8pgnft4pd40dnoul82gw2\", \"odt7f0k2pvpyx9lcyaqf4qmnqxoastvjdj5ebnkrc74v174xjf7udub45w4i23v57ivy3tjtt6mu8ae6rcb0iw8nondharpjmdj8tgni3ijjdhctp0sy6vhg3if95a9fhaxrcqnzfwji05a0\", \"uckx\", \"m8gmrjg056mbam5yhq1qezovbequ7tz2rhhticsjf3qn2uftknevgpco63ezzlh2snjug9pf1b057n62k0plk9cvo3u5mwet0flaeakuvyjn99f4dwb71s6k4hpfongrf1cbkffeazoco\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"zoztjxvwze8vwkpyl2q10bb73ft8n7gixrsmgm2df65ev6b6axivqchjtz4092rq\",\n      \"metric\" : \"hw3zvwlg4czxu9hs1qu87ss7gpjmttj2brdo1i10fzoq98phcfxizt4zmv3ww7dzosm6vjzrl6f6mzm37adz903fpowzfgzia55cvc9qi\",\n      \"name\" : \"Ashli Lueilwitz\",\n      \"supportedLocations\" : [ \"304x0ic50mc558xlx0hmfouj6pe1ev5qdk18rl5seck31u0tohvp9imtak7mcppupqyy6jgbj9t1rc3ia1o4jtru8tiev0jknvr0ug3ujec3aipny\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"fou7rrutvje6tjil63u4dv7s82s49l136xdgrxsbqvrrdro28abiqx3623swvv5ngklj6brqojy2yx8lfxzvd1uyelf80hmm20esy6r9ncapczy687t0lbl1xn92nqmk7abrp0c92l86ebmby16i8ky6xjrgiibyrls\",\n      \"metric\" : \"soaeyucm0nhdjarz96fbl5mcw7a8w9i0t16qckc1g7jpwje708rko52mb2o7imtf4takl21d3fyop2i9ryzlsbocfvd7l3it4ygxhd9isdt\",\n      \"name\" : \"Rich Feeney\",\n      \"supportedLocations\" : [ \"bm29h1fzseyae1c7d211yv12\", \"76vj724tnyndf0h0rttpr88xthsvzb2iqvgdun7\", \"wsmb75fsyd6h4vnmb4hr960g06j10r4v7bj135w3kttdgicdimqu7369c9wiof95pko300gbq9ed24ay0kdbjkwo\", \"cc5ci8v5e2gxatm2mxsel80pdrf3v21a8b65rnt8kagg4euwh0rvirz521q0donavm5axmitv88kgbigtlshtvjjfkrrylj3tf7qmoqzev0\", \"wzrfkgu4eubtm7cqugojau0d02xykv0sb2uzjcql7kkxdf5c2xl0uu1e1afam4r7u5ge19zcqvcj8p895k8dydcoueizu86futsd1jm5xjgk6d1hz9ipk7nh64ghs8as65e3d6q4rhofhfgwfcq0qkd7aer3g012zhgmnt29io7lre1uhee727qcp7z9ho19shs\", \"pxijv3rm58xwhofadd639fil94ez592wrgda6u41hjq26impx\", \"j4r7wlzkjtrxzid5eee77bae7a8y4719\", \"zthdewfnurqd68w7rvhpup5xanhh3w65m91sfkwkygazj2waae7wyhugxfs816jqmyullhcddveh0y66lnzgdo2c8rux6p09o5igic256sv5qdkpe8o0hgnpcbnzmefu3pxvr1e41c\" ]\n    } ]\n  }, {\n    \"unit\" : \"f3gp6se8g7mclazrur3c7jqjjr4uiv53k241o7jd22jgje8ervx3aw2sofqya23anidcb40ezsyhupxv9ihcjbriv8rx6j41keuzr4zv19ynwditj242nq5n7q0aaejfkjba47xwldd5b4or5eiem\",\n    \"metric\" : \"d90no92ct0p2u2dc4039rqg8l3jd3ew55lkifu97w3ieuq3usyd9aydo3o436rzly2kn68hdiwod\",\n    \"displayName\" : \"Kasie Lindgren I\",\n    \"name\" : \"Jarrod Runolfsdottir DVM\",\n    \"descendantConsumerQuotaLimits\" : [ {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"dggcxowcsd34z5o6u55lt3ksvegt5kxbv4j1q2aeis0igmc8p6er1bzm2p3feabvrf69j1spwbp6xedwc\",\n      \"metric\" : \"r7c7ey6f9n0q0hex1br3ad8xt1mkomnzdnc3rypurtl15jgbmpb4zbfb1puqper3mgpsu8j79pvoukqbd2x65xqzz58cb4o8k6tag39s5bzdvzk9uih7c2u65y6dvdgw99ang7xmmrhvzke99sw2nvroeicdxgl071wdf2boswjvr5023\",\n      \"name\" : \"Quinn Daugherty\",\n      \"supportedLocations\" : [ \"hurdc047qj318k9bnru2zx84bs9grngdo5cfllupr8m1ugkhndgeemug1aeqcltwp393onysrgl131fdivv7qqu701s12a8nzmcpdt3gxfkkjsrflts8p08sr98xmrx10snqs0ewr1ifncrzs89qth310enjq4ezukspmkq2fbhxpe4dqe8g6hs0xl\", \"ffaawbkvuke1dnf2969hxheirzdgrtk6zagdoa63znefjl9auahivv8y0f9zyjlinzmw22uk5rj6v5mfmg2oiqk0gq1amuwyv1srjn2mwu6akvvn06rlunwywd8xwt8mv0breq4xt7mnc0t4nj9pqt\", \"wxgnwazfxz13ir2us5sjntnt4pn6cfueigth2frx2gd7v0e3x5r3eus60etnq3jeozrd265boqbyj0hz68lk4xziteztwpom0bd07xza8iydd\", \"bn334jcx79m5yg64l9v9y5k6eodvjcz4\", \"q1fyri86lwf2651gdokzhmj0sjofufc6t7iye3rchppnzz0m8ttwmfztxbkf0o095idhokf9k0plzz6nse93\", \"0ofx8w7ubkvyyub9zr0xuqp2rdagt8ew3munyy4agea3c78hmquf23to1guvs9xi22wbtztjxb4c5guujoozed4znr7gx3b6q0s7omme06l6q12jqmy8vvycbkya\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"0ed35g2f0oyculuy8jqx3mo5ufe2q4kx2bwqvloi4p0bcvtf1lyijt14zeya55xyrl5ucqm6fnfia4t6y7qpq29tk1npsedzhrl19dxypraqqyraui\",\n      \"metric\" : \"klr6c80ngl1mjgayln1a254o9ut0lp7f8zdzfcbrqkl0rww0je02unof21mgqi6aksuf9eginj4je6a1kzspa2d3bu8r3w8yq1q01qd4uwjr7kk\",\n      \"name\" : \"September Oberbrunner\",\n      \"supportedLocations\" : [ \"p8hhpoep0xte58lzx9y0n1oh6xpzukp1e7if53qu8bov0tpnx4jzadb6eap8o7c6ns5lskcb8l7qv4ozrct5zzvs7l3\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { } ],\n      \"unit\" : \"7byf6v5ski5u098q6rkdgcjj8ywlqgl8q4wqa4d8ncu5iemn703sudfo\",\n      \"metric\" : \"mepxzo4jjuwilxke56gmv5idgv8eev1zemiuvh1ftemf3y3bqgaa87dkmz93at0rps6iton3zao84qrghu0f9g2lu04h9wymorglpplaqgkmwm8qqb\",\n      \"name\" : \"Todd Witting\",\n      \"supportedLocations\" : [ \"igak095iksfqh9l4g41aw0dftxxqmiptrwdx258xd4s7828f9kekucww8ot421h9xald9gdyqic2ysa9uwunlx3eo69o0rx9qtqpwwvtqvm54aehgjtxkg6zhiqznk2z0uwxtnfrpiepxq6h9a\", \"qmcbzcts5v1ark2h1dk66547qi4hiw8wak9xi0pngiap9gw5f3mmjxdp5xpm2hdl\", \"hzpufgo3idd7j7e4ocpnze1dax6ois0ihsso2l9efiar1cpppulz04x7pq0bq5mj0i16\", \"737n5yt029hfjfr0ce3upsml6zl4arzldmz8fqpdxvlyivt9r0pywyy6zqh18fjmu4ox0mv0109r2lvbjn82dakhave6f3s1is0b945rc9c6r9150\" ]\n    } ],\n    \"consumerQuotaLimits\" : [ {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { } ],\n      \"unit\" : \"859l44bd3yqd4fuqu2l93c2aovak2ordculadmybx8gdkw22fmufcnfdc4ch024a6pcxibag9wnphbqhb0kheu4d55lghg2sdtibfphckjnc7288a6wny1a6734c9vqd9esnb5mzdsnm9jd4dw6683vcc0yef\",\n      \"metric\" : \"rezy1922wse3z49hzuthcf9nriycx2sq4q5apov196u7x800m20wr9mr2z0al87x9wummmxf7vawx1sgvb0qg6dv4wtbmhya3oz2xm3bi2smoj97yz76xlew6340rqrhlqkbk1di3tiqwn0y0cfwsy\",\n      \"name\" : \"Vertie Sawayn\",\n      \"supportedLocations\" : [ \"gdtsbdjxthia46j8lwh98vyd0zuerobflev97mkf8628wotff38ztp51s1w7d1gzlgs5fnz675i25ajtb1fm56qw3fzfm1orhvrl8jyruj\", \"silvjcvfm76lsa76rsu5daxmly3mnneh9gildseeoc8yo90ua6e0it6sk6qxl4vszpspebpvsggvcyqdo345wx4tn34s9cb82wc9fczhr3mt58tep5ayktg56x7v4wi0mdh3fvetn12mbhdm92vlutfepse2\", \"eze9az7n24s6d4g4mv7c698rq71xkfhe7cqg9f4lexrf5rlch5kpmk3jqpvt1620tndozvbljax6ij0m3feh\", \"hh3lm03cb7jhexkvzvtewvdm30ycn1lpbrmgfppbljdmpvz42pr67xae63zt8ujanagv6835pwuwegdk3citbqoqt8dxiwvrozlqrivt4qjr2o00w9d5y0orcbp4d3lqax4g15f3h98uwf3zx017ta4s\", \"eqhobslv10f3d5238jcgwlmdiz8q7a645c128xdlhh86xt4ih4f3lmcpim1t8ywllhnamy1s00qj2tz79p0x0735jjr4sy177b2v39l5cb4ujkbnw2ta1k10dpdkjx16ts6i02l43173w2k2nr2qv2combn4p40e9235sypxghuvrkqwwwe2ql\", \"04gspqe4hqv3n3flwx80tkvgdpr1oj59b0pn9fkmhib0qgciwdoxhfhnht1cuvsg5wwmmgjwu6f2gvlp9tf8xf55jevyl12w6ysqxwyvri51xqwu7n2tpo8rda209m38zki6i4x8te9q4t11feg1s0kz\", \"dh1quiqcmethpq6w6zf3d711okvvz910gqvjg7drpglv1gbs8wu48gclap2bd6qflg8duckg712i2s2b49ek336dsfum7h6byhxz66wc1yjmt91mb21p0wx1\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"4dzd2kc73lwo6svwjxlk5vh0hefyz6h2u4ptsgdsw9slhitdgrix1bwzvhlleif535vgziixcxa7pow718r7klnbei3n5v3n6lqzzzuq08ldoiaa3b1cnj8yrk\",\n      \"metric\" : \"434u4rh50ap9v0liga72m2sxmypi2b1br33olj09zb1uycdtktpoupa4boxm3xqkstm3lmy9d3tug8vdgu1dqxmp\",\n      \"name\" : \"Mrs. Mora Bogan\",\n      \"supportedLocations\" : [ \"wnf3xftfj8s6r5bajo4peptz4800btrd0fsk6m2k283bgkef19t8y9kt05krreff22tz0lov10p6a30cszmoqvqfeg1suhv7mdn5izr173mtr7fc3zvwwvuydq3apy3pc2wkt1vu47n39zs9qf95g8i25x3\", \"8ftr9bnftm0l5zwqrex4wu03jj92r6m5g430tl1wrpeiqeiubyspsh2ibnav2aijkiomfitlino99lyvb2zg484n5ntk6wreylshiou8skpd63ork68b3vhcghellb0kny30ap9gdbr7polxexekpa6\", \"ut5ne8x1oyb6myjlkc1osjsq9gohkjhbizgxd6di5fbe395w1xqetngwwenrvms59ktjddnfe\", \"da5y3dailwozt14j2c96lz2e82h3q5ucenygwt\", \"gjrat9ucuvwaq1vwgeeom9\", \"bgexsjavdv2\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { } ],\n      \"unit\" : \"o3y9waqo9b9ux1jyn7ll554457iplltx23v8hbdc9g5nlazldw53gpib9zh88untliq9eh\",\n      \"metric\" : \"5oaoiuvjtkyzzhuasppef02b5fw6g4ub4o7plouk8smy8yvfl68r1uei3bnhlllo1cu8arfpndlwhrwl0pvpndiwry78be4chkidn5zstqimrmbgirum70qw8wn5cllknwxs7itvadrzki369m5g83bzr11n2u4w43hd6x5r3hqrlgxttfo\",\n      \"name\" : \"Miss Monserrate Von\",\n      \"supportedLocations\" : [ \"xzx57x05z38ylcdixzqerr7cd7vmo7ojzikyap53xica7afvqxvw8czy35vyuzr9ctqs6ose5hlgqtdawt9kgrnoeyu77uc3zvtbzseftlb4rizo17mresrxfuc4otb6b51vz\", \"52h8ju0qr4ax4x0libhbqnq4gf62ikltsjzlqbuavgdgof93inqvq2d6lgcjo6f\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"unit\" : \"ai3g2tra7vyn1nyllfqf6hmd8lyb93f99ta5v0itnwab7h0bxohgar4rd635fzskzluqchh7i6r46fuppvqbs18e7ihnblx6z915jqk\",\n      \"metric\" : \"kzgjucrv2vtvxznaerfgox65sa55nvjw4ooq4srzncwywpd9n9nvqeh5xv7eu4h9ud39rivtzi5m2u4uyaqjkng170c1z66b826ydvkk4ew5qrwe95wr61cgx38t8r3l8k6q\",\n      \"name\" : \"Lauryn Armstrong\",\n      \"supportedLocations\" : [ \"jyf77ydqqxz7kh2iwf7phxwpuo04hsyo3n6eeg8sj82t70gbufv44oz1l727zkr8ls4umwtsx6g2h3pa63jlf7etp4y655hgavwygjuttyn8xk1odq5twtowzd4dfgzk2oovun6zekp0fl6s6xbsxs1a7qw3mzd84yutyq22i6n2z0uin7nyp\", \"ttrsys9n3xph6e1zod8tga9k7ltknjret77i2gwqul0y92ebm\" ]\n    }, {\n      \"isPrecise\" : false,\n      \"quotaBuckets\" : [ { }, { } ],\n      \"unit\" : \"fg9l0ioov2a51fi9eff7wo683o6hyf7abwvl5fosfa4cmye8bdciruml8i7vga1pfenxiw28vy4qbbhvyo9sv8k\",\n      \"metric\" : \"vs1pglbtgfabuk1a6ue52ifx7y0sj9j8doeiay1k35cvoouzbo1xqjs649nuey18japuxv3db0d5cjuz2hw99z8825aqhvh6jshnp2g0y103ncwjppxlfegzzcmqold137p2yjevtkh38j6zagqhxg3live0wvad5a3ops6bo457ft\",\n      \"name\" : \"Margarett Hessel\",\n      \"supportedLocations\" : [ \"wqin3g6dyq4gm80167g8l7wyziepqe32muutm7us340zgp84b9itqez3tv2m18kk3jw9v311vh9w4s1idqzmkhgxxoat8pwwvd2ge8cowzxtnlu8fdr3seqjnpa4c\", \"lj2qx8biia1w56ryxtufj7jvc\", \"qh276v5dw585xtll0ymij7w8y2l0a1haq8uqy5pyis5bhbfgsn30dqz\", \"o7bff2qv26u9vgg8q8c1bbyue\", \"xovocepie40ovthwyfum04nbbwfham9jgybgtmmg80s2v9z6xory784x3h28q1qpxgeevicmkxjf5k0k96hfxe80p3zofv7sg4r65e7iwaar1taeca7kpl3fsjduzfkx9nn18dbhj3d7nxezoup1c9l7wdkofpc802lto08fhf3\", \"9gpktduv9wj8du0dbi7ozcgbd8rk1b38ifqwarxyjimu5xtci9fra0cpvbklxwvn5nvicabo7bp85yo0xz9iq4k8ar8137bndcnfpozd67atinbb8h4mlvd8lvalg616rrbzevdpjonek2sedy2qyzlkxr779iwnmzj9b85kyws2nkphy21f\" ]\n    }, {\n      \"isPrecise\" : true,\n      \"quotaBuckets\" : [ { }, { }, { } ],\n      \"unit\" : \"akslzmmrkeot76e2gbm1i3cqv43bbdhokvtigolgi4h\",\n      \"metric\" : \"tk4embkj86jtwjcorcns9fn4glyc\",\n      \"name\" : \"Danilo Frami\",\n      \"supportedLocations\" : [ \"ai9mys6z7q41jyqop1wimi2ixaat8vyrxbbtpv8rdhhpizhjjl2ae9x78jwnwx196jay9b1j5v7arfskxinrm5pr4vfrbt9p1p1ohzd3qcrm27ft37ult2y4xrxp7qkonapcryhm5t48rjes98sxazk38xziy5xnwkipx336o4jmum6b4x5j\", \"ndzoo9t81lc6wwa1naotfdwbqdjqo4fi1hp8qeislu70e97ygrs6y3\", \"wol02rl2fyfhpaqhchk5x6an9fkibckzjph6k8olld6vdjk75\", \"j368mhom3c7tqelqptyrw6cyjll6wwygfxcrwfp1lt0ip9r0psroh76now8phbfd5nm7vtsixjf9yegzu6ysmnws9q39mu5px5k05zakh5z2841mixcv\", \"zwr764i24uhyhdlktb12w2dtdcz34hosljogtc7v02flarrpsgvl6u3bi5e0kufedb3fnh6hb9h0qfhp6ldh8did\" ]\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbde176d-1bfd-4233-959a-70f854eef5c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:57.454988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.list",
          "schema" : {
            "description" : "Response message for ListConsumerQuotaMetrics.",
            "properties" : {
              "metrics" : {
                "description" : "Quota settings for the consumer, organized by quota metric.",
                "items" : {
                  "$ref" : "#/components/schemas/V1Beta1ConsumerQuotaMetric"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Token identifying which result to start with; returned by a previous list call.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "644fec87-b382-4716-81dd-71a3d8aec3cc",
    "name" : "Updates a producer override.",
    "request" : {
      "urlPath" : "/v1beta1/Willie+Casper",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Loren Schulist II\",\n  \"error\" : {\n    \"code\" : 1181063571,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Eveniet vitae esse. Consequatur dolore vel ullam illum perferendis. Et necessitatibus et autem ipsa quam non vel. Dolorum illo placeat nobis illum.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "644fec87-b382-4716-81dd-71a3d8aec3cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:57.452168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.producerOverrides.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "943f1dd9-164b-47d0-a93e-362a8b201aee",
    "name" : "Retrieves a summary of quota information for a specific quota limit.",
    "request" : {
      "urlPath" : "/v1beta1/Vannessa+Marvin",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"isPrecise\" : false,\n  \"quotaBuckets\" : [ {\n    \"effectiveLimit\" : \"todewhkgu2nnwakqhv2w1rjo7m6iznjpe6g\",\n    \"defaultLimit\" : \"09axqh6qn1quag1dps48b77iidjjll5o1gwql3jiyq2ukef94w0h79hyqc4o7jy6vz41qeqjb1hx3hjt5rqug19ydv7urdmkparljyif51k6ajd4888juxx2ztr4xrvw31dnfimxtufqouqaqnbzdj82\",\n    \"adminOverride\" : {\n      \"unit\" : \"jpra4ngp6x8dxgn6qvz4tkbm6z85wlhgft8v5y7bh0b8fhpmfsr9xwi0xc1powtrfgh690909r0mmiv929h\",\n      \"metric\" : \"rwjqlge6wfgw7gm6jkp1oo4l9l7287qawm68374wtn0nbewa8dbtu9px1ghvunq5v7zk0i68t203xobgn3xwlgp9sxcvy2qk7s28ap4\",\n      \"name\" : \"Dr. Carson Gerhold\",\n      \"adminOverrideAncestor\" : \"gpmq6s3vr2m39nzd9n3o6n4gd9yfdu73tpbykxuh5xa77c5q0\",\n      \"overrideValue\" : \"qxp8oev9j8d\",\n      \"dimensions\" : { }\n    },\n    \"consumerOverride\" : {\n      \"unit\" : \"6i5egoe0e4akrzc1d3qsnao9ln78zr7b397soxqxgn8kbwammuvs80w4b9qu2q3eikkrrhzbnyty6i5p9\",\n      \"metric\" : \"e9ewpsjust7xhdvg0we9xzt3gfzlmxi98g1k1zl22wb2l6vg4cf7rvw3krefwx0nj3uhmlz3tcnm7yh5ib2okvxovwgaq6dolpb4o4gj5dbl2x37eyiij\",\n      \"name\" : \"Elinor Renner\",\n      \"adminOverrideAncestor\" : \"wyplg53p2n7vln99acawejy1cteunx\",\n      \"overrideValue\" : \"60q6k8pm5r0v0ou5e\",\n      \"dimensions\" : { }\n    },\n    \"producerOverride\" : {\n      \"unit\" : \"jxydlxiinakipjc9n2urebrt9qgb2207ycu163dd5l5qbooo78h8t0s8mgfmdhl3sdl54rumirmg0natsdd0vsdv9zjkh96\",\n      \"metric\" : \"jsm8bovmxc1mc1826dj5y4qu46hfsomf3tj6l8ono4vofnhet0i0l8urug7wsduu2gpq31fdr405fj1o5z43zucbj6rmspyg0sj0p9fffpyljkeo62kte\",\n      \"name\" : \"Mrs. Chad Windler\",\n      \"adminOverrideAncestor\" : \"aeq3davggo68y6whraiiq5zgxt5z5tvedneuolwoz9a5x82ktq76qhtebkq0ifnwv416ewkwpgu41n9aguuinf9lmf6ihjf5kmomv99zncy9cpl67vylhyzpztc729pbq4jojmlhref8j8uhik02oqzv1f1x\",\n      \"overrideValue\" : \"ls012\",\n      \"dimensions\" : { }\n    },\n    \"dimensions\" : { }\n  }, {\n    \"effectiveLimit\" : \"v8is1vbjpfj143z3myxi9pzbd0zx3p67it92pkn94q3u17d2oz540hrb53b9zlelf8q5li45fmfwipgs6g1tfy\",\n    \"defaultLimit\" : \"bh1ms90ectnc944kj3fm8v9x06mrx9mjf6h5755s2gtihxzizgeazh7gceuac5ibhdlxvi1tb6p7sh038h59azqs79vyvp4zu8n0h51hgd3vpalw2c6o7gosshb6b1xhbkilg5tzl2juceasx6bnoczlmk8gfe8py5iss\",\n    \"adminOverride\" : {\n      \"unit\" : \"syf8hnuyzl6v2oomdmr5z31n4c6mggqrz381o3p3c3z1ijij0y16t4tc2pk7ojt1384j5aron0661mkw6qv6qja7rnq8n0abwjpjohziwwltn69rrt0iicrr4l2irwdn6jl4f4lv656yi7eiiry9eekiln68fmlmgsqicirsbwny8hz2d8koxtuaytc7\",\n      \"metric\" : \"mgqx2ngblsvkwuisfvbo29bitp6lqlgrtdaqy5rfg9yyi0xmajk4r30k478wwu9bto6pfjmwi16vs0wrxn70ege6h2fpva0qruo7vbx2e0akpm0tkr3lg3e2en9rjy6dzdu4lrn5tuq8hpxaujj6flrpcscug6e3prvatk4hfvqrhuqgpf5bqtiu3zy\",\n      \"name\" : \"Brinda Powlowski\",\n      \"adminOverrideAncestor\" : \"x5t9t2udtdeyqzi10mwzx6nzmcm3jh9cnen0iirfsu6uoairxexxgbk1zkzjux3fl2wbuatxhe23qt0zqvvuqq9xwtj6gc2xtt4225yc0me9chhk1xmpwi6fi9h4olqb\",\n      \"overrideValue\" : \"5fwqgv0fyq6nkr6dkjvrfkjzy24sqr5qw7hjpoeawb5nyuv9njxc\",\n      \"dimensions\" : { }\n    },\n    \"consumerOverride\" : {\n      \"unit\" : \"i2qlv0n2pzlik348rv89d2bjx7bn7qbag6jtkbo9j9dap7xxv7excn4awpbop0prny8ty2ty0n2pcoajz8rblehtw1md6xq9dltfkans4yhhcnz\",\n      \"metric\" : \"w8iqxkjuh6bfrlestqtr4nz0f10ju3dd6jxvskwhcqhyexlx4nb1hmerdp8c16923jfkh7\",\n      \"name\" : \"Rosa Kozey IV\",\n      \"adminOverrideAncestor\" : \"m5krfxsita5czv1kh29mo3w2mk6sxt3hnfa3wz9a70zgw1dbnm09mfcx10dxvsq3e4qi\",\n      \"overrideValue\" : \"2c64frbizzccp6rhqb10kkzuz3p8w5nzveefx8g7sh0zf8t0hcvt9q5no21q4spnpc2yemc5iq60dhohrh7kbewf4hpnxnhmbvzu6mjc1whuucz76cdlh7o9f80n4vnlhsw1kws3l09mnhpw8ju4wekvlajvwfz441y19ztw6nbygmfy40le4iuvbp9\",\n      \"dimensions\" : { }\n    },\n    \"producerOverride\" : {\n      \"unit\" : \"sl0yyge04o2isrwvndgtxbru3y98n9k2kxizd340zvlyvkaur77jdqbiq6ujgo1fz2wmryj93teir267rox0na743nzc0jxweluq21fpz1o8s5c9xltpjh50roc9rwasslid04kqc0gtemwsoe8a4mu3l2o3llb3dbhhyczc8659wzapove389jk1\",\n      \"metric\" : \"m47hxadbii4b6db8a7qxmo5memqb6eyf3s0jtj7vm9fyxegxjjz9jfm6wmbhiox2dx3vtnp4vzkvd26ebnwte2ueybp3v4bywpzw56foz4oraet9qspkfpzus9vl89zikboq8\",\n      \"name\" : \"Dolly Ankunding\",\n      \"adminOverrideAncestor\" : \"y17n9y6ftov6xhdb87tuo4byjy5y6z6trnd8r7xwc7pt5r99o8fe9i8wlt8ni55yvn4o0ja42k9shywqkolcv56a09bbgux4os9czzp6nbkkxzxf37q853798xqxuuqs7uf4xr1isdd5c4qezdipw2sjaq\",\n      \"overrideValue\" : \"bgot4qgls2dp773wc2n04d7507s\",\n      \"dimensions\" : { }\n    },\n    \"dimensions\" : { }\n  }, {\n    \"effectiveLimit\" : \"foav0d5nb10klosv4o7b4c5ayb3ohlclzo0zobu2zoyhuhjnoinqed9nyakr0uqmw0ce9btnc432cz1w6wben5gkxvinnz42peh4rcecyu2j5oilzvubuwf70lk5qkpbijglx3tn69vc7aufef9xty3b612p5lqcjic5dq2\",\n    \"defaultLimit\" : \"tgwi94bf4of99ujggpkhekhbga3sh9pekfzovjr3f5dq8xq5nlk7fapbiolpasdnpba2tqzs5dh\",\n    \"adminOverride\" : {\n      \"unit\" : \"zgoz6jer45sai75mbxs6a7i2cwio0qj9ne09zynv8s5at339eixy2d7assxkzitd63cwfm6oznrvcde4kw2hy50k03bw2ynphn\",\n      \"metric\" : \"gvedds8jbyl8j8c3smi9pfrdilq5vltxhtdwr4\",\n      \"name\" : \"Adriene Hills\",\n      \"adminOverrideAncestor\" : \"olxrn8xt1mlt5vg7cjbve1bsuanvatu2rysvxdfb5mqefwwse7qjezm3hmhij6eap5hwytec8ddngtzgk6tg0jpuljnvi1lj5lrcleau1x35y8lozlzwx915ml6fnga56n2raut3u1rg6be656g9ko4oc7clphgxaiebi2taiiqnf3dwz89ruy\",\n      \"overrideValue\" : \"6lg4l4q86sytfo5l2qq14q31i6arwsth8srsz4ui7yq3k64rluoboqt7mc6tghu5i\",\n      \"dimensions\" : { }\n    },\n    \"consumerOverride\" : {\n      \"unit\" : \"4bfas10x1i60ap5gb7zum7wye0068s3jvot0lm5n0jgkz1k3g3na09zhzjfne80m49fqwumr51aq8drz2ics2w3gy2pbv2vzo7k2mej3udhxs9wzhczmdpd26oaj529zqltmno0by3874m9vz4bitrus7qtsgcfxq0pnrq49u6\",\n      \"metric\" : \"i0t248c09v06de0u4qj4jq3s8gnxtiinybsenjt4or5m4dau9s55ikwg9a1h4go2m8486a7yjcxpdy2k9mffwa10wus63ps8uh5i3bgl003pf16lf51h47qf4bb96rp83n4ng5zmv34cvulsnhetc3neieb64df3wlk324b426jottbhphzeie8wsffhj7lbt5ux\",\n      \"name\" : \"David Hickle\",\n      \"adminOverrideAncestor\" : \"qpgx9opi9ga1bjv9syrtobqv4lca87jk48w\",\n      \"overrideValue\" : \"k4u2r7d7zzagw5ar927ltok85zjdf1hiatu29z7d116j7e1i7487c1hnlyqnqzqqco0riyhq5bc43q1noawt9eh6ubx5kne6w5fyvvfo7bpkrzqr48zyroukbgsv31pflp7tc2gnwa0mcqsyrpyecupucn0py8j97mdzw0qd6x1m96fspro55xm\",\n      \"dimensions\" : { }\n    },\n    \"producerOverride\" : {\n      \"unit\" : \"enlznbfritietlharhknqbjcy7vnt0wfq7prw5rstttzrh19yiekrg93uwtz7twcg9g3r9llyh4apizhrzcba630tjux0fcg3jr3mhgvpw7hcgvikdsh6h9fw8xv2w2g6zl7pw0tu3fq0dz2zgwgkx69sznbrbc46lhm3f3gg7j\",\n      \"metric\" : \"pmevgm37fxtfy0lf07dgzpgu2z7rv66bpwnk3m833kck8t38u9vx99k4c252ju50m0j24bda1yhfr3ftbjzguzbyylpdc87yvt8zyzqwgoebpvsl6d51ankkb1kb0zoippg5dscltgj89teq0vt1ti7cg2xkgskr764f5qegrzqynz62otiqnf0kl42wddg3a\",\n      \"name\" : \"Gilberto Romaguera\",\n      \"adminOverrideAncestor\" : \"imfwtgde3ed08dzrms371bpyed9wxcw24zx70ibqu6423me1q712fvzqicgfhnq4fhk1iauz1lj03ov8e0s40fjdf2jcxmr6pq271a5gtccew49d24a0aptphkz9khvm89u5484pll\",\n      \"overrideValue\" : \"ud4yrbbugexjamiv2mqgtbvf5m3hbbnvh7y1cpf2yludt59js\",\n      \"dimensions\" : { }\n    },\n    \"dimensions\" : { }\n  }, {\n    \"effectiveLimit\" : \"66vzaoho7lsyx1qkwwnc7q95xf8egegnzermd0hk0c0fdyh5tkp7kossuln4jna1hstxlko6vqzw2\",\n    \"defaultLimit\" : \"6lrcwx1z9i3vuaz4umce21wtad65x97uwq85g3gk1kadjltf1420etsv73wi21vgxv4igiav56snmvx0ko6l6pbk2mxiam7noq\",\n    \"adminOverride\" : {\n      \"unit\" : \"j1zxs5kns07hiwd5u3rhpes94zpteflmsg5h3hpgdxne9cd8tie56s76fgdy1ee1fuu6iu73am1xlf40l600w4zg2bxzgoll0d0kmrho2s0p7uk448zmejkg3dw46me\",\n      \"metric\" : \"tv453inj42poctezdmeas703emwyv7aqj96knks\",\n      \"name\" : \"Mrs. Shanae Bergnaum\",\n      \"adminOverrideAncestor\" : \"hsso4i5cz1obh2sdb1noba058kcvr4vl\",\n      \"overrideValue\" : \"zxr4izut9z94zn8sifw0brry9xjh7uxd7zfasik0wpf276wd3luxhj0zi5fan10gzx4cunn6zgzbcimvio7x8koihxciiaopawu6kwpzr5hwadoxn6bbqhn6zfci0tw0uip9f3rag61jpk7qu6yvf723\",\n      \"dimensions\" : { }\n    },\n    \"consumerOverride\" : {\n      \"unit\" : \"5mlylfnhs3oxzn6b5\",\n      \"metric\" : \"eu31hl9dsc13tdm55yj9h03ti7m5v9xgim6c2dk9k67x3wvtingwia50yatefb8owdm33jfc34nvzikqfgf4t5o9i0bfc783hymyewocetgytdispex6kd14ouxtkxrt9138ewxzkaw1l7vj78y1\",\n      \"name\" : \"Rico Gleichner\",\n      \"adminOverrideAncestor\" : \"jsb2gqayyj5hcxnosgj03c7zdsemj6x3xwneoklphe1w4yyz3r5sjb0115pjo7nkak83dhmv8xzd6nsnwtqmy7x0sdj9jdqv0p2cyps7j6fswo8eatf3qnizuf6te95wh2pp38g38\",\n      \"overrideValue\" : \"5x9e337ij4lc14l11ycw6fly4yjpo1t1yf74oeur\",\n      \"dimensions\" : { }\n    },\n    \"producerOverride\" : {\n      \"unit\" : \"zt7hh5oqsa5aw5xsulvz7dy21h3anzw5uuapriqe2qil0wzyknm0wfa9209pndxgl5jx9dn9re2t9swswgecbzkx2xlfiqr6abj5mgzv11u3yfdqkbyf3a7ev8am3zohnz17u4pwrctb0npoypjohwq\",\n      \"metric\" : \"roccnr1zs97tuieo0uepfprfwju2uybl9fy1v3jxgiu65pjp91woppti228umzayjb93cta52f4i\",\n      \"name\" : \"Dorothea Ankunding\",\n      \"adminOverrideAncestor\" : \"s2tfe16dk9iaupz75wrj7piu7xsr61icwv2c163hzsqnw142igq4n807g1fmy5k20o5x3oig32uqca50dtiblyqp028plpg7aaevmv85rntmfppzoimpdut494xcb1apj3ii7v1ursfxcixygwfma6d0wg5zjspmczwapj4nyc00hpd1eab\",\n      \"overrideValue\" : \"dluvga47q29uwc732e96of0sjlyxmu0fm9kcsuq8mad8zkrjhupr5ksksk4i0xfw3afqak27aonwns2210w6ox0w9aj2anvf0ns4nxwdcvzhw0n1zdystn0mcb5lg2js4oh6xl67mstgmc3gzj84wtvce30sobku1h3pfbrbxptomj5\",\n      \"dimensions\" : { }\n    },\n    \"dimensions\" : { }\n  }, {\n    \"effectiveLimit\" : \"scie200hbovwim3py07runfzphafarjotr5jyaeonlo6g2yioqve7bvyzk1zd9gwcxnrhth3a8ls5i4dyy72x\",\n    \"defaultLimit\" : \"ood4dqmntyc4g174q7istt0skf0gmrnkpzrixyghki1if7\",\n    \"adminOverride\" : {\n      \"unit\" : \"j4fu61h64jzpx0z4h607cvy433tcz7dykib4mjjz\",\n      \"metric\" : \"w8gmtvaigur15eb10cmdjrq5vw3ywd33nsb5i3qk4exn2lbvucktulq91w3inve\",\n      \"name\" : \"Donte Price\",\n      \"adminOverrideAncestor\" : \"lmyuwfcc489wwdinionifjq7\",\n      \"overrideValue\" : \"1y4dzhys\",\n      \"dimensions\" : { }\n    },\n    \"consumerOverride\" : {\n      \"unit\" : \"2p8tmmv4wn5sl94t0hs3b1510vu88pqc0pnlxjca93lcgwxhdchc75s61fd3umx7dzmfnl6nf1nvohgjopfct8exs0vqlzth9mdnhuuldxagp3pzbnhpoq7rd20nsf8rp7txz06ozxjhfikzg8clupvjdchwligvk1yota3bxn\",\n      \"metric\" : \"ozlovx65z9x56hbgtzlnk9arjxpijs5bmqqrj9japp7lnoawiyv8cpyi0wjkwq8uuqqbsmremdgg1hsdb55seg3z09r83krippskjnmh83sof8myxpvjhuhupvdtp1lpsnwy\",\n      \"name\" : \"Georgiana Thompson\",\n      \"adminOverrideAncestor\" : \"p5rf60ct78y6ipsqoxhpcfygda1a2sxs27afjx0wr48y1tjgq486aideynq0ovmfv1anxeorpt\",\n      \"overrideValue\" : \"pn2ymcemfd13w140erx5w89wtwm09me4lbou686u6vgxnr5zxy943hfodzxv5it83umyc7c4n3lionqczeiroszcxczafmpsrg4cxvljw7you33sdsugjyacbdt9p1fpxfnqjsxj7kx091o3048lkynjpk5fn3jf9p55h43e66pvxlo4ualctg89\",\n      \"dimensions\" : { }\n    },\n    \"producerOverride\" : {\n      \"unit\" : \"q5vzwo5fy63j25hcmiwiijx6441rs1f3832f5l6902a6vm5k9qyxx4u7k7ko9b3yti0r41cq\",\n      \"metric\" : \"dixait5uoafhtyusxa7n6lzf4amuvw2i5wt3xsyp63nae1gsexqan5amz2ic6uex0q1esq70o4r5kj6ihi6datya5576clwbks3zsdbevpvfvkdpq184nkksv2rk6cpkg1x1cmrdszgk0wwxe5bvn0j936lkflwc8tbp9xf5t1ozbrh\",\n      \"name\" : \"Ms. Natashia Hand\",\n      \"adminOverrideAncestor\" : \"or8twgfbd8o0i4xl9ihvs7974cmh8dyeiindb92ka9d1en40raf0zxhexgi9zj9hwptzysrqq3ldnx28pw9oqfgo7saa9nb7ojgvw2ixyibcfjg\",\n      \"overrideValue\" : \"zhikdmjssilvwl78z2ksc\",\n      \"dimensions\" : { }\n    },\n    \"dimensions\" : { }\n  }, {\n    \"effectiveLimit\" : \"vzxhedp7cgd1jafu3ljed7ryaupq65woaltpj6pg9uob80lbnj5kryyhyspax10b0zue2b8ex8na4fklsqrgce7b142huf7q5omrr8c9f37b7yj2u6xje5u8ui05wgotu1zdyps40qzuwa4lms2k3t03lnirycmsechbz94969ha9bv5z33w9qzuj9xei7m8\",\n    \"defaultLimit\" : \"a9ivz3ozji4o3c3in52jb79spxjxqu809nf6\",\n    \"adminOverride\" : {\n      \"unit\" : \"e31i5e5sy5dodb9j1d8cdh66jo3ac7b5xpiqee8midh5quc2znr9jpd4grzbpl4ca3rovt3toxfp0jws420kkoxalijxe2zlc85yokgz9qay82rspmob7m9gjmyf9qfqp9jme8s1yjeph9yrellskttp360t56l3465a4k36dm73\",\n      \"metric\" : \"0cm9dkqq2n1tpkv6y6hqspew3yx2l1k71awrj0hj9r3z687ionvy6sdl4wj\",\n      \"name\" : \"Maryanna Herman\",\n      \"adminOverrideAncestor\" : \"r7mzlelohzce54et7xtb2uzp7uyzbbkiiqxre2umedcku88ls8ya2pc02jb3f0i6ej0v96lq\",\n      \"overrideValue\" : \"26zle4l5pz0\",\n      \"dimensions\" : { }\n    },\n    \"consumerOverride\" : {\n      \"unit\" : \"u9exlrncdeue2xn3zmkxu6pck630xn70xoutqyy42t4txmad5dl7aerfl423wyd8v1g93bkff7ihip8jw9yvwo2brknmaes58xdqjoxlh1jk2uy1rqv2fqaw48thf92xwf4onf4z\",\n      \"metric\" : \"nykr96hv0gjzhju0zzb2aqangt7n0xd6h4mk01cxy9a49fv28z76vmnvq20mridkyym0cphw4ejqbtc7sr4vgupy6panpzvg5q871yw0g36kftjuisngehjladom4c5c3kbhvs\",\n      \"name\" : \"Johna Boyle\",\n      \"adminOverrideAncestor\" : \"xb2db6nvikbjjul5p88av7qdsvwb95n7y6ndtzvjsf9m5ja3h9ztrk9w4tnhofq4\",\n      \"overrideValue\" : \"9qkktlvp1ieu4z2yto6to7c4oishrlncfn\",\n      \"dimensions\" : { }\n    },\n    \"producerOverride\" : {\n      \"unit\" : \"zmu4c05vvzq433cp44ibyqvlw58pcl573x9t3opjiz4aazchuyb3olg4vwvgd12qv7ea6jp93m07ivh3ug4nh80argtz5utpxn0p14p1mkmqe6bk2fo2egd\",\n      \"metric\" : \"6qgkti5u7fbtw5x4rjba5ozx1r341o4s7ws6zky7czmg7mgpeyjaza7a5ecwsrznutylxrf0de2amtn3zy4xiq5kcej4t3jcx4yxqeeomlwpximdx9t36iv7lgqvgetgzp4dbjwnfbip2xk7kpmjw8ajf4niaic1c1xi309plxn0uau9rqnejyig0g1dfp\",\n      \"name\" : \"Loura Lakin\",\n      \"adminOverrideAncestor\" : \"gpgv8mg2jbfg8dt943xe7hk1i6vy68bbjw55yw5mxy8hs0bphc9j9zkeaprce1cvuo0htb1\",\n      \"overrideValue\" : \"f7reawqgbqdp0zythdg3neda21u80kx\",\n      \"dimensions\" : { }\n    },\n    \"dimensions\" : { }\n  } ],\n  \"unit\" : \"sx4rwhl98y66gisprsy6p1uugpto2cbtutxqwhkya97umqtk65wc0uewuiagp6v2blyo6taide5v2zhsy400qbmgnvyq8og6\",\n  \"metric\" : \"mbh8449a3ads42c9vjcntgb\",\n  \"name\" : \"George Hoppe\",\n  \"supportedLocations\" : [ \"zm277d0fzwtd\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "943f1dd9-164b-47d0-a93e-362a8b201aee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:57.451906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.get",
          "schema" : {
            "description" : "Consumer quota settings for a quota limit.",
            "properties" : {
              "isPrecise" : {
                "description" : "Whether this limit is precise or imprecise.",
                "type" : "boolean"
              },
              "metric" : {
                "description" : "The name of the parent metric of this limit. An example name would be: `compute.googleapis.com/cpus`",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the quota limit. An example name would be: `services/compute.googleapis.com/projects/123/quotas/metrics/compute.googleapis.com%2Fcpus/limits/%2Fproject%2Fregion` The resource name is intended to be opaque and should not be parsed for its component strings, since its representation could change in the future.",
                "type" : "string"
              },
              "quotaBuckets" : {
                "description" : "Summary of the enforced quota buckets, organized by quota dimension, ordered from least specific to most specific (for example, the global default bucket, with no quota dimensions, will always appear first).",
                "items" : {
                  "$ref" : "#/components/schemas/V1Beta1QuotaBucket"
                },
                "type" : "array"
              },
              "supportedLocations" : {
                "description" : "List of all supported locations. This field is present only if the limit has a {region} or {zone} dimension.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              },
              "unit" : {
                "description" : "The limit unit. An example unit would be: `1/{project}/{region}` Note that `{project}` and `{region}` are not placeholders in this example; the literal characters `{` and `}` occur in the string.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "da498b23-3683-4b83-86b8-1284eb3dc9df",
    "name" : "Deletes a producer override.",
    "request" : {
      "urlPath" : "/v1beta1/Graig+Turcotte+I",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Christina Hintz MD\",\n  \"error\" : {\n    \"code\" : 538490976,\n    \"details\" : [ { } ],\n    \"message\" : \"Non itaque necessitatibus consequatur quidem. Perferendis dolorem eius et occaecati enim. Fugiat natus maiores dolores deleniti eos. Iure vel in dolor mollitia harum modi. Et veniam doloribus reiciend\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da498b23-3683-4b83-86b8-1284eb3dc9df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:27:57.44922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "serviceconsumermanagement.services.consumerQuotaMetrics.limits.producerOverrides.delete",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}