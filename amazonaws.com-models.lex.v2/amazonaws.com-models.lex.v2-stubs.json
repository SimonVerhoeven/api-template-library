{
  "mappings" : [ {
    "id" : "c4ba7c61-3cc0-38b3-8cc5-8e6f7b73328c",
    "name" : "Removes tags from a bot, bot alias, or bot channel.",
    "request" : {
      "urlPath" : "/tags/nz2u26b0gani1rx7xdlwzo0niapczhmxkn7xtytnaykl57j5uxt55n6vrvrwxbn95xbcfxctyxs5cif41l2nv6rteg2v3j7ojcgyb6svea48bgxrlhamimigk734f1k94yo3q54073e7u617k1iil2t856gb9o0sp1an3b1xpi8ebj2cdp3zdudie2r3gbbuq13mubzld8dasftgzog55n9e9nbmgp3j7w9s89t1489p9aimbbhkt7vn7lo7izlijpl1w6kttgk0ppwwmqq8ak8mznbu1n8kwbw9v84kb62scv4uycr5sqr67mmn5seo5z9c4tgm2z4z3gd1ojwnxv54quf6bi8fdxs67hd4ezovlslpktumbp277jgbnemkigljtu3qu28irgll63cyik98wsjarnvouqw7pypvbnfm03sphlazluzynnj7ul0ue1uqc4ojurhxkp8yjawdg9k26aguhxc7261hdhzn1qjt03mwzzyp4sv33qb76tcyekf60vfb5krx74t2kh4lojhmf6qeozwga1f6es0aa9fohczlg93alj2vesjjcnolizt6i029g4pwrclkhyxdmf1poqx7hbrkuztwxdkz32zoluq8gyc4rjnkpd4gkxl5m1shexr1v70o6kk#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "20b0swoh0g0eqinex6r1s4gmlbvscmn1tmv5bffj0suqv6xzw5ei0hs11n78cogsadk3dfi456a4vwb0hq1j39e0n482l3swm5djf80zlqsitke4i9rwe0lc6c442q32aiwmfrxpljgmpmqokk81pbulwkdcjdxhkocy92v5puji0re8ftg221purji"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4ba7c61-3cc0-38b3-8cc5-8e6f7b73328c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "23eecf75-06e4-30cd-8855-f28ed51a7ad9",
    "name" : "Removes tags from a bot, bot alias, or bot channel.",
    "request" : {
      "urlPath" : "/tags/mog6n0dnl91i9g4juu55brkj9qvwrga54yum2zdw5vc9qdtaeb45nrekjs6rwbpyw40v1hve1hs60ji1jeuxa555ts0jl51fhuyigcgej05p4nfevvyzfqdh07ays73hhj0lgnzr0sg6tj7pfi3s2ollhle2oky3f8yloyhmwx3dvpzjbyfw45ew6x62a07e29hi4ievbqk3vxub7sh40cfzo5w5kj6ljpr516d99ky2wxdy2ki6fmldebe5ueupie2s36rsevlvrv8cyqgb8ikbmo79m8h90q1ltestabdanmq0ya0kz8k43vg9bugivugavz3sk8accnhzh33fh0890ef0qaav8isgtoxwu5xb74qoky022rppj76ote5d6pfkchaxaboov7wr8v3f4wmpufz8w9mrbhvsc75paudgt0dyb2cox3wxj6o0xc4m2si6gdjl0yvx4ldmuz8bp1zssrcwv10yejetcvrotu69goyp5lh2vgmeasjgn6eaplq4clvb5wui28ej8ltgz7mgxb1kja5ud4jp980xkqwy9emwbn2o67n6xtfob2ajfm3yfrtfq8ybqod6i6u83m8jed4oad5t0cn1ty0k706rc4o808p3umjjvlr4gn5fiyktna2eisfkwq38bjxk0el06zucu0fea856pu39lm5g8gl6psnldj5rqgg8zd7d8h67xmuynvo2nk3vcro93zl6q0yd7hshfmneoekhvyc1uxsnebf4115tjjyt7kvthfk287whue6fj7ahkujqg9vfuwuhm7vq1o2j8#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "czp9aqfjbqfwxxpll7ajqmafnr86bp5wzsbkhldog17jcwcehvsbdlx9mfq8fbx0982eut53m7zyeh214na44vri4ww06sjo0anbj58ja5p9d4vb04v6t0yyawnuyu9wwnynx3cx"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23eecf75-06e4-30cd-8855-f28ed51a7ad9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "9a2fc818-1ab5-3284-a42a-425f11b42cc3",
    "name" : "Removes tags from a bot, bot alias, or bot channel.",
    "request" : {
      "urlPath" : "/tags/j3cawtu9z2j49an79e73ui4vy3pqi6b0iya1l8eck47u89vxytvc6i1lz5hauq6u2ixodh97u714v23pd7l7uica73hdw5o1qfs4g0v75d4d59jjq0a08oa2q2pg4iffm9f45s83t5163r7qagdvdnqsswgd978tewbgs6oxebvhxouvczz1gdnxmiu28cbyaknc3hbf5rnhuziif5fdf6xxydkesilc61w9oigusxce79ib5mh3znks2b1undwd3v9a00hel5e1jd5exiy0c4fyo2x9rokas6bfy8c6nfatzo0qk557donqmklvk33jtbd4z97fyrvabh0k0nn0f3hq0zlkj74ru0rm3s0t2t9lb5bsr5bv9rns0ect04q7byiod4wcn91wmse6odttdpqsj8i4e1nvc553umvwqf7pp9llfgqdsbeom3n8r7t3qas5qudcioigzo4ycmljxtv6460uspq77ns4wbyui6qjhmup7c38u6hro45goooyll5zdlm08ijs77d2g07zkbgv1n8dd7gy75t7xxtqfg#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "4hl3mn04xb2l0ayml6sju8cmjaz728spnurr4ayr20kmnix5jjdg1ce62j0wa3f7cgfl5898hc6f8fl6o86946ucn8bmv780rlnu4gjdv08cmql8me5akzj13nli9"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a2fc818-1ab5-3284-a42a-425f11b42cc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "6a2e6ced-9c1e-3ce6-a1ba-728c39e41629",
    "name" : "Removes tags from a bot, bot alias, or bot channel.",
    "request" : {
      "urlPath" : "/tags/e0vjdgwxokriyk2tw97jpz80wxjdvt2v2fic3plfqx6727cjjfo467mce27r5f4loxau8ot6uuvqq6gho104oby89#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "gxf3cmr8x43w5vg6qbfnpkd5e3irhsv"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a2e6ced-9c1e-3ce6-a1ba-728c39e41629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "640736c7-2aaa-37d5-ad9a-5f66f44402b8",
    "name" : "Removes tags from a bot, bot alias, or bot channel.",
    "request" : {
      "urlPath" : "/tags/z3hfgsp2j6txv8qr9cnmnekd4mgqyoohsi8kbx7jp2hdxgdrmmz5q6neviwx34295ofjg28j7d98yorpxdy0y4zo9a6s15tze5a77dckm4a2uscrp93zy6bemxnxw51ubg59l46k57g6hg8ga1lque0dlszmsqf63ikpo1qup9bdj894m9dc63lozuuwhmb3aen3yeday3f7dc8#tagKeys",
      "method" : "DELETE",
      "queryParameters" : {
        "tagKeys" : {
          "equalTo" : "wicfzflw5bd20gwtnxt3y7hylf6v90xgbvelaegohnotiyo2aml9gwaf5983q4acvoibp4f7i1m70ks27xyz480z48kdr5iw6f1gvd5ys4l286h0doobz4bz5e2p6l5x8ejfauncu2v40dq9wd3oruw35kx7xg97ei"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "640736c7-2aaa-37d5-ad9a-5f66f44402b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UntagResource",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "612e3561-1f47-3740-b752-9aa28a75fd30",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/67Gz07uTYl/botversions/DRAFT/botlocales/9610/botrecommendations/QQYGR6WweW/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 487,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "612e3561-1f47-3740-b752-9aa28a75fd30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "e0b9644f-c3af-3c69-aaaa-7485623adc7e",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/kp6LnAd7Ol/botversions/DRAFT/botlocales/2fs8/botrecommendations/pd1NSQkCFG/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e0b9644f-c3af-3c69-aaaa-7485623adc7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "a7c23b8d-1e99-37ce-8ddf-be48c4a9b804",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/201oxAcpos/botversions/DRAFT/botlocales/dw5c/botrecommendations/XhIDk1KBmu/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7c23b8d-1e99-37ce-8ddf-be48c4a9b804",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "d3c49646-944a-3871-b4d8-20878d71bc27",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/02XpAFvFRv/botversions/DRAFT/botlocales/44a3/botrecommendations/XbHcRM3Vk4/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3c49646-944a-3871-b4d8-20878d71bc27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "938b6657-0591-3bea-a613-8116a5d25ac9",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/fjqirPoP1s/botversions/DRAFT/botlocales/063o/botrecommendations/uUvtyKPsOE/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "938b6657-0591-3bea-a613-8116a5d25ac9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "62bd37f3-2506-393d-ac39-eb80633c2dba",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/JlKeRXjRvF/botversions/DRAFT/botlocales/iwx8/botrecommendations/2sPaMLTdVE/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62bd37f3-2506-393d-ac39-eb80633c2dba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "6dd254a8-807d-3955-93e3-6a89cfc80bb1",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/lI0T2thni6/botversions/DRAFT/botlocales/53ua/botrecommendations/4orwfxboTM/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dd254a8-807d-3955-93e3-6a89cfc80bb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "68a6d98f-6566-3018-96be-3727fddeadd5",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/mVbr4n469g/botversions/DRAFT/botlocales/vk80/botrecommendations/KmVVHJEWJa/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68a6d98f-6566-3018-96be-3727fddeadd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "f3359c2f-252a-32b7-a83e-76e346b0c0ad",
    "name" : "Stop an already running Bot Recommendation request.",
    "request" : {
      "urlPath" : "/bots/RJ4OPUFDlq/botversions/DRAFT/botlocales/cin5/botrecommendations/VUguzT7rEH/stopbotrecommendation",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botRecommendationStatus\" : { },\n  \"botId\" : { },\n  \"botRecommendationId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3359c2f-252a-32b7-a83e-76e346b0c0ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StopBotRecommendation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot containing the bot recommendation that is being stopped."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot containing the recommendation that is being stopped."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale of the bot response to stop. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\">Supported languages</a> "
                } ]
              },
              "botRecommendationStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotRecommendationStatus"
                }, {
                  "description" : "The status of the bot recommendation. If the status is Failed, then the reasons for the failure are listed in the failureReasons field."
                } ]
              },
              "botRecommendationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot recommendation that is being stopped."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "5feaded6-4767-3d67-b2eb-1b59ccc29257",
    "name" : "Search for associated transcripts that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/o3j6GvH5Cs/botversions/DRAFT/botlocales/8g73/botrecommendations/tYzGRgDtXa/associatedtranscripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5feaded6-4767-3d67-b2eb-1b59ccc29257",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SearchAssociatedTranscripts"
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "a066c891-5b96-3ba9-ad6c-516c057a4b09",
    "name" : "Search for associated transcripts that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/4nzyZaxPLk/botversions/DRAFT/botlocales/6d1v/botrecommendations/cxo6BzzUFR/associatedtranscripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a066c891-5b96-3ba9-ad6c-516c057a4b09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SearchAssociatedTranscripts"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "21493459-5327-34d8-a668-96d07d87a5c6",
    "name" : "Search for associated transcripts that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/LMcYL9ImS3/botversions/80664/botlocales/fa7z/botrecommendations/99ahbByBj6/associatedtranscripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21493459-5327-34d8-a668-96d07d87a5c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SearchAssociatedTranscripts"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "fb102861-0348-3e89-8ff5-ec2f172f5fc5",
    "name" : "Search for associated transcripts that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/F44gRghZF3/botversions/DRAFT/botlocales/j4t8/botrecommendations/6skxVmbypI/associatedtranscripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb102861-0348-3e89-8ff5-ec2f172f5fc5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SearchAssociatedTranscripts"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "9e352625-010f-3a52-9959-f2be62e582a1",
    "name" : "Search for associated transcripts that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/pXb95xj9iZ/botversions/34979/botlocales/v5n7/botrecommendations/dCZM4pxbkR/associatedtranscripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e352625-010f-3a52-9959-f2be62e582a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SearchAssociatedTranscripts"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "a5765713-5f2c-305f-97e0-5b861c07d2c0",
    "name" : "Search for associated transcripts that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/l6qg7YNK4q/botversions/41950/botlocales/8v52/botrecommendations/6QWOhIWkdU/associatedtranscripts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalResults\" : { },\n  \"associatedTranscripts\" : { },\n  \"botId\" : { },\n  \"nextIndex\" : { },\n  \"botRecommendationId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5765713-5f2c-305f-97e0-5b861c07d2c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "SearchAssociatedTranscripts",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot associated with the transcripts that you are searching."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot containing the transcripts that you are searching."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale of the transcripts to search. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\">Supported languages</a> "
                } ]
              },
              "botRecommendationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : " The unique identifier of the bot recommendation associated with the transcripts to search."
                } ]
              },
              "nextIndex" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextIndex"
                }, {
                  "description" : "A index that indicates whether there are more results to return in a response to the SearchAssociatedTranscripts operation. If the nextIndex field is present, you send the contents as the nextIndex parameter of a SearchAssociatedTranscriptsRequest operation to get the next page of results."
                } ]
              },
              "associatedTranscripts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AssociatedTranscriptList"
                }, {
                  "description" : "The object that contains the associated transcript that meet the criteria you specified."
                } ]
              },
              "totalResults" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MaxResults"
                }, {
                  "description" : "The total number of transcripts returned by the search."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "4afc8e08-1ff7-348e-98fc-445bba4319de",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/6vqeuwqjx26zce3wzopt8nf4di3atrm8jj59atx55c58f72ab837jdbmvfsfauduovk8uxugmpkzvp5828awkkmfx6q49jgbu9hvxc8cebsj36ph4ty6ydcevrjn7b8v165qv3ggbcb77gpfd3w362nc5eyuj0wbkhxx5gig69ft83jmtyvp3txp62bod4xjd04setp2z2qclhcns9vm6xigk8epmmjm3pqnjiyzu6u3zs45pxg5lj81d8c4p3xtlxnq321x3bqk9z29m62tfqx9virnnek3x8f2rsx8aj2m3nrbx01sxq1vsittbvopxmq9evz7vfvhaauin6p52ztkdn5muywy6mxg00vflr31xysu52jjvehguqve3w5fxpnnip40magi1ux0de6kuq1ennz56r7bof7rvhvcg94ohbsocyizyfo3wq6fca1vo48aj8byh8dfugvdeo7g4676heecc2g7hf35bjysrbavf53wb2d7fhq8185kfpf9uqplyxyy3uk00yz8mi5sgu0sy8mfsqswd3v89yvl1g1q6g5a5eh3tt23mmh93ldexzb4r7m996bp026t7m30dkbkzqay1f2v5xvzpy3hfcgpaohiz823m9wkrn5u16ohj3qfq6qp7yqml33oum64gsx6r6zdg9r5tvkeioyaw0kswhcgp9v73naz8zq8d1f9k2xqyhck8pu840jpq954kwqao2clgg39gweeli7mh6d40",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4afc8e08-1ff7-348e-98fc-445bba4319de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "049db24d-5ddb-316c-8da7-90e205138b04",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/3vwusl3fv6k1ejmgt2cn14drs6xgub5f3g7pfnr5v6gt4ojbmigjkw2qofw5fupry1cuqiv5uxak4vxioav7hzox5cybkmx58821c3qompr63pnk7s4yzy1occ",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "049db24d-5ddb-316c-8da7-90e205138b04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "a6c02f20-90d9-3755-ba58-045e32238cb1",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/e02t3k7cs34kojza9nx05jqhlo6vdr67zmvnr2b5gqw3xt2oeqxv2xgk6q3krf3ta34n1q0hrkqlpdy7ciw9ug5g0xvaa4oh3rasxwypppes4o6epfl2ehudfj3si6a5hqky72d9p7v9q9vextqm7qtgdizubkk6tggdn22l0tfxztff5wpqnmspdrvd5i3fixsu4kw41qc37btswcfobe2gx6efwh9694tn4vwfdserur9aj8oichg8lr5pcg40db2emjsxbxj5giwliaw3cw5226k05vr4fs9iqlm0czhd5r0s00mv1qx903778nrfm1wz1spxn49opnkkawze6z8zm59yz0vxnc815l6v59fwl1h4bgvsecf59ucdf0bxhm1gfbjom2bb711lrdyhjw1248epctv09v3dfqeh8zpskkn787cmffek8h0wjv8qvr57d739iks7sh3ybqo6wmyg0bt4mpdeuit1ptkaq1do4tpljiz5d5mllfroi7y9m0dl7df9gdkgmfeppj9r6bhkqdsco2rz89h38e3x56slr3lt8su0m8j1sd18mhh7w03di89whyzloafeyvtgjg57avaoi1f6hj94i08jjjz7zjyg77z44oy8hz2c69ho8skddxgpcbhrefkjcjgq5gix0x3tc5cgk103hcxfbz89jd9u84sgqjx90xnuquj3ykhic0j9h3exsqnlciz1zdgmtirfavyktquakhrutbp4gtw2wuwpwvekqu",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6c02f20-90d9-3755-ba58-045e32238cb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "cbb8e95f-982b-3e7a-a5da-7b3121bf6849",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/zj0976f283pvvw1nvykhsv1clorhrrc5qjc6sv9bs2jg5f7c4ampcfgth7ikjrxbq49ojsytei71o9gi3pqyonb9xe85hz8kdxt3pomr0howuay3suhq9fc871pz001klwbdu19bsdm1nk457fqcz625dlebhy81pocoure7lg2ixylhhzlddlc1uwi3cgl9h5y7crnw7lrlyqab8er0wjg0brt6cbshdudbdditbjqtesk6avfxclc1ae44yypp1x8u0o0cnoqyjpt0ms1k42xq1l692izxud3uek6zdvjpjpib84aa9fg1258q7a0lq6z7buuz0k6x6bzg4jmijnfrzs9qaf60nozbzmpc8676944aqxks9vf7nbaqzpbzkzfodzzyxvg54vlzbqo0k24jyre4dvpih7khquk4f2043w5la6ivo59p5u9m1l10mgpypibrqvo21t2xuhjsgsw6a687msvjgink7oqfby643vu3xvvbtykav128e3nhhl56k7w8p71s0df6ao5pmb0pvhbwajdfvtg8fsktkiu4i47s69x51oaqy4kjlwtth37752z8sb03vj77bsn3sxc204911xiqj1el22y71m427cccjm83n9jl1jwv3vi3tgecpzjzzr9z7jw61bo2nxzzhb3zulb5scqcnmbzbbrtzxsvh7azc4s8tj2cfgrhuyyr83yx3crw6hv1z3eem32v0yw3aro2d8nvjhojtvgta0z9nddoodxdqixyjvva4vt3x0hio473km7bt7e7nnx6rimoxrk3eo6selcygrzuv2e2mbhiukuur6ydlo3zyl1px0jetloqxpa0oe366dbwil66ylc2pbzerk5gwkzovadvl9vh3lqtp1heljfu0v6z0qpis1bbghdoc6qdc59t7hjp2d0xk3etfhwhkd1bhsonmr31e15wjhxv0ofksh1ix9fk",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbb8e95f-982b-3e7a-a5da-7b3121bf6849",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f724ce4d-8138-3413-9a72-1e1a3ee3f5d1",
    "name" : "Adds the specified tags to the specified resource. If a tag key already exists, ...",
    "request" : {
      "urlPath" : "/tags/mf3yq5u85jr1octnks75u3g5krxztqvibfnf5o0xznfwa22q97zc2c0lunxik0qql2v598i8v5r4qs890mwxc3nls0nwmxcwzyn6mktj0944ckkv2pb0xlf7di00px2ra02o94tk2hqipugcj7klq9mgedkgotj09gxm4dsfm0d9vpvuaqf1937fzx3wy8ff1is0lecm8q5e7tyjjkr67g2uyd4etbbw52jiussbzadr5bfc0vdih0gmyrcgs9umiselxqsq4yuam2h8i154l9wq5d3gr6shc8ov0ktsi4s6cf48b3vxh9q3zodsqjdfqtma9nulhhrm919sb1ifssbx552jlr6y4t8puib9fdm1nl6vlz8fhdao3a1xg76fv2m89m0ntkvo0tiaylry6wrzk477r29dnmfzcuqw668wiw21t7sj1y2ysr0rm5c5zj03d60w0btarz83r5em06o3s7o796yjrylajjqafbg09ob9ky7fqsw00ry9os3mwniy6shz4ibsebj7q49uzli97hg3j0jbqufqxi7q6bs1tvsogxpfmpykusgkeg36cnj2m0f4qsob9w3hwnjzde13kre5esa6fmbacya1gnuj47zee86djby6ebo81r40qrzun5mlfm1nt3xm75fhwhdf3x4rwpmruhvv3purvfcpbwvuvairky7ggj0wjnipmayf4kmwxvwkwf7a9bbnfyzx4m2df4r8zc6wqsu3t2l0bzph6gu9hbd8ky2dy0ysd5xdxx3x6w2lk5bwl162ubp733ycp01qjb8ixygqhxhfz8jmnulw268aihgrx4auxvava76hh9oyc5oljmtddfhy9zpk8qo4spd1kxrwn70br766pf243q03j7x9cgk785zmvb54mdh9w6q83vyx88ud87olny4ccn5kztf4v5qnfjn1r3nhkdy7dhp8nnz6wviqcom",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f724ce4d-8138-3413-9a72-1e1a3ee3f5d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "TagResource",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "8a0defcd-c87b-3751-9ff9-a10cff94a01c",
    "name" : "Gets a list of tags associated with a resource. Only bots, bot aliases, and bot ...",
    "request" : {
      "urlPath" : "/tags/1pv0orl401qotylpopkm04llsp263ld27av2ehnr3f6euuw0zkuo1hs2nuv8tsxw1l8d850j05ge3d5nans9xelzj9w7i5w0t9rxq82172xwg43sc7kayg4zrlay9wxcyozzf5350eh9br9cta4xoed83xc9vc2to5sys997o52nehxrehoo9wgk3va4815rof2mxgyq66eg5ndst0rv30hsr6t8okk5g0rzx9z4y7lsm8q9zr1gekfzcugg2lpkyzki548jcbml7510tvntoskroz0gffd8ccz2tapc8m110i8e224pilae1x8pei09kajv03yaucrzm5k329ogz2jtych6wviny7t5ra7rr5bgdttm5xs3p4t8vcunhyv5wicdh4nl9l2fl0iw08blp25701rg4euwr3x6r8olekvo1uxqtguynhj1e71uek14wib11ftjdeyjychpmr8zi1fbvmvcv77t5n60fcxqu3ogky1s2r2u7tx1t6pevkjz02f5k0dwq0wci3rlkq3t12lbjf4olurtc31bx6qv73j6trt2bqjsxz6o1q7v1ix0iyonp368r1k30kol4xj5roeyjlfutkioon5k9bi3wu7yp7sasduuzuj7h1flj72dfek6l0ez8upnhmh3",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a0defcd-c87b-3751-9ff9-a10cff94a01c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTagsForResource"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "7e842510-beb4-3c3f-b3b3-a7286236deec",
    "name" : "Gets a list of tags associated with a resource. Only bots, bot aliases, and bot ...",
    "request" : {
      "urlPath" : "/tags/emi02heyox59ripw7r7r2p9m69c7m4w4atk843uy9wl7tivsdfeozi5poea2u3op3wl76ib5x072t4uv6fou7prquae5han12czq0bc1fml598u2g87np4s1yi73z96tq8zlmcmdwxyiy7cnsgllwtf7dy07trkw0ts7xzg9k1l3p7zp13vpme1jasf29yh2wq867222inj1d5gwh4pqr9ltv3m09lizdku8ir56fr13iem1o4cy9coet1i8ck6og7x6hccg7wpfg4lagu631hdp3y7o2ra0lubzoz8l9b0r39uuvjre0ioy6nx20q1zkl217r4n2n2cnrgaiy1vpmalyk4fglrqo17i7f4l15zi5sgo0czmg4mfeg02k41cxyvnqpx3n16gfutv24padusfrgd1iv219nkkuweigydsb38b8buks7dhdzqe02r9pdjc68go4cbok6nw9hwsmvxl71duymvtk7kh246gm8bh2m1ned9uxli86wktm13k8ui96awnft3z6pjnyz22zb6dmxl7tgm6qd7xexbfmwl9qy4pzkvjzsp8eva7wno8ax64ftyv89y00lxbb4dqlcimn84e53e8f92w",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e842510-beb4-3c3f-b3b3-a7286236deec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTagsForResource"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "e719f77e-7494-36cf-9f59-ecc025c798e8",
    "name" : "Gets a list of tags associated with a resource. Only bots, bot aliases, and bot ...",
    "request" : {
      "urlPath" : "/tags/wp0jcxs6cqajjh37v8aq70e7czczmzb30gzrhxy517ecqhdnwfix9qn6fyk4zg09bs5isey1ysgjusx0pslsv48grfurbn53sjwffzd2qfh1uvtznnx43ndl1o82gvggo6tas9qveuhriyck6ccsnnbwszzbwd9tu68vhadm6ak4ikrmxen7hb5u5qm1p0uirlcegib4djq8a1omwr2nnb3jnf7wgkly6sqgzoao3aenap9ccl9v775m3r88amd6obewkoxod9lli56bpqnrk0kw8a215a7ag2o55v95jpbn211seoiwxur8j05wvyhlbo8l5w0e81wnuwwrzowkog6kf014fstw4zdn7s4opnrb2u2r5m21smm15g9p0crjktt0xa0vd6aamw3lgm3u4h2i0jazgtp1q8uuailucpn8a1k1bsgvekuhtgs6an9vneob6x5y42ae6po27wqg9fmf8hradfe1vktdtqjrub5mvx3lvevxpjj7k0qsnokal3jymhv859i13omighrfa7svdaym3u47h1jpjzuqrtj4bro49fk8wk5gpb4mx2x45jlnzcfhw926btx0n6cerxr19v1r0rjsa5peu2605qfrkj16ecs87ips7yc9iqjs2mu7cob45w8vww5tdbkmc43uzcvguqvr18571f7st6jfd4c6csb4mjducpktw02fymm5p5pm16tdhoq4ovrjtxspj9hykr5t63dtkm1g4bavyrvkksippgbjrr29a3t4w5ajvs4228agyloqqn9s2kyzhddp65va5ac3cup98bgfr3kqvos3gohushgykof8kvs6ghclqihrnpnr1nayz898p8gwg4ndeg66zfxufe9dw1iagn9pkhxw4mxnq25nb1a5p4tzcn4ygawq3mrt9mhwfsjciew7uibarnr58dez5l5wji10vkm9tshy9ykon3jpv4znvkaji4qcv8qc22beoaoox",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e719f77e-7494-36cf-9f59-ecc025c798e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTagsForResource"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "dfc5905b-b4cb-3e7f-a8ba-66f718edc64a",
    "name" : "Gets a list of tags associated with a resource. Only bots, bot aliases, and bot ...",
    "request" : {
      "urlPath" : "/tags/eok0mheylbyhuawga3cjl93mxan2ic7aj70cgg3jtkp8su1l84hqqh9o4xtdduilfu3r9iuf9in0psobnrsingyv639e8kaq2lmdjhnny82sp7n9jrkgb1vhygs9tlsfl5drep96e8t0fbkox2mqbsw0gbhvxue27carvum6ntx4fp8csr1q6yhxcmsvzehkbrzfu2op3jt479f10mx7yri3voy5dqp5v7833wdk0qdxtm9bdvrq1iz8b1y5kqmojqohtiv7h226i9q9b5emjgo6itt0kh4vhd7vlgz6fr80hxe4jyu3pksab8258bysu96lvjtkchdljbwc3dk17fl4235c1xqzv8k1y7piacn7symtpqwdtklv7kfa3z2mv8t5znjobp69zvuv8p0ay015e032pow8yba8x3retad4htidwuywrm20bvaoo8i0gbreh45fb4gbydg8du6brbudjt307o931nfc3a85pfoumvh4bfn47uq8tu2bfkewu2adfsyy0b85kd5tnalqrcuotjsg8339tm8lovxnip110e82orlpfp6ivi4v6mhk8q24r22ft7alwcigtui2i81uv8jd44",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfc5905b-b4cb-3e7f-a8ba-66f718edc64a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTagsForResource"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "fd12f781-9b7a-3752-a63c-a6503536dd07",
    "name" : "Gets a list of tags associated with a resource. Only bots, bot aliases, and bot ...",
    "request" : {
      "urlPath" : "/tags/8f3vlge0fhsrvtlk2gphe1vp6ktf0xqk4l3my15rxlomepoh0cgq9yv4ycgra8box6nroon60d3crck3sgksng",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd12f781-9b7a-3752-a63c-a6503536dd07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListTagsForResource",
          "schema" : {
            "type" : "object",
            "properties" : {
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagMap"
                }, {
                  "description" : "The tags associated with a resource."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "f1d9b943-c0ff-377c-adc8-f72fc90afb7a",
    "name" : "Gets a list of recommended intents provided by the bot recommendation that you c...",
    "request" : {
      "urlPath" : "/bots/LXgZZrzHCi/botversions/DRAFT/botlocales/6pyk/botrecommendations/PIXesgoUIW/intents",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1d9b943-c0ff-377c-adc8-f72fc90afb7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListRecommendedIntents"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "95e179c8-b7cc-3b79-8e6d-418d44f2b6f1",
    "name" : "Gets a list of recommended intents provided by the bot recommendation that you c...",
    "request" : {
      "urlPath" : "/bots/qqqqqqqqqqq7/botversions/DRAFT/botlocales/56ex/botrecommendations/gwcaKfmPbB/intents",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95e179c8-b7cc-3b79-8e6d-418d44f2b6f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListRecommendedIntents"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "7230e421-8128-386b-9ce0-e30648d42ff9",
    "name" : "Gets a list of recommended intents provided by the bot recommendation that you c...",
    "request" : {
      "urlPath" : "/bots/xEP0ngy0RA/botversions/DRAFT/botlocales/zvlt/botrecommendations/m1GFV3Qbsc/intents",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7230e421-8128-386b-9ce0-e30648d42ff9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListRecommendedIntents"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "ba454321-49aa-35e3-8f92-0adf2f81c9fa",
    "name" : "Gets a list of recommended intents provided by the bot recommendation that you c...",
    "request" : {
      "urlPath" : "/bots/RVPqflGw5X/botversions/DRAFT/botlocales/8087/botrecommendations/SMkrBDBau6/intents",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba454321-49aa-35e3-8f92-0adf2f81c9fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListRecommendedIntents"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "7de48b3f-3316-387e-8abf-016039e44adb",
    "name" : "Gets a list of recommended intents provided by the bot recommendation that you c...",
    "request" : {
      "urlPath" : "/bots/99999999999SpBp0/botversions/DRAFT/botlocales/m4lr/botrecommendations/bfqXtZycaV/intents",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7de48b3f-3316-387e-8abf-016039e44adb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListRecommendedIntents"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "7d5a3c90-95b4-33a2-8fc7-39133b06cd02",
    "name" : "Gets a list of recommended intents provided by the bot recommendation that you c...",
    "request" : {
      "urlPath" : "/bots/z9BWfZI1aC/botversions/DRAFT/botlocales/9whf/botrecommendations/3F5zvSs8SR/intents",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"summaryList\" : { },\n  \"nextToken\" : { },\n  \"botId\" : { },\n  \"botRecommendationId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7d5a3c90-95b4-33a2-8fc7-39133b06cd02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListRecommendedIntents",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot associated with the recommended intent."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that contains the intent."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale of the intents to list. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\">Supported languages</a>."
                } ]
              },
              "botRecommendationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot recommendation that contains the recommended intent."
                } ]
              },
              "summaryList" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RecommendedIntentSummaryList"
                }, {
                  "description" : "Summary information for the intents that meet the filter criteria specified in the request. The length of the list is specified in the maxResults parameter of the request. If there are more intents available, the nextToken field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the ListRecommendedIntents operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListRecommendedIntents operation request to get the next page of results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "b8bdb43b-389b-3806-8d62-6736a728442c",
    "name" : "Starts importing a bot, bot locale, or custom vocabulary from a zip archive that...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8bdb43b-389b-3806-8d62-6736a728442c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "f0830f8f-e091-34d2-8ed9-ccf273c45645",
    "name" : "Starts importing a bot, bot locale, or custom vocabulary from a zip archive that...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0830f8f-e091-34d2-8ed9-ccf273c45645",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "fa5725a7-a3b8-341f-b77e-636cd2373a12",
    "name" : "Starts importing a bot, bot locale, or custom vocabulary from a zip archive that...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa5725a7-a3b8-341f-b77e-636cd2373a12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "aab84d36-83e8-3b5c-b8f9-4ad910c9ff74",
    "name" : "Starts importing a bot, bot locale, or custom vocabulary from a zip archive that...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aab84d36-83e8-3b5c-b8f9-4ad910c9ff74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "92c6dbb8-eadb-3108-b983-627bc972a609",
    "name" : "Starts importing a bot, bot locale, or custom vocabulary from a zip archive that...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92c6dbb8-eadb-3108-b983-627bc972a609",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "d83eba5a-4dd1-35b4-81f2-ccbe0c2772ba",
    "name" : "Starts importing a bot, bot locale, or custom vocabulary from a zip archive that...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d83eba5a-4dd1-35b4-81f2-ccbe0c2772ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartImport"
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "ed745f0f-ab88-3031-baeb-b937c53f0c0f",
    "name" : "Starts importing a bot, bot locale, or custom vocabulary from a zip archive that...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"importStatus\" : { },\n  \"importId\" : { },\n  \"mergeStrategy\" : { },\n  \"resourceSpecification\" : {\n    \"customVocabularyImportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    },\n    \"botLocaleImportSpecification\" : {\n      \"nluIntentConfidenceThreshold\" : { },\n      \"voiceSettings\" : {\n        \"voiceId\" : { },\n        \"engine\" : { }\n      },\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    },\n    \"botImportSpecification\" : {\n      \"testBotAliasTags\" : { },\n      \"botName\" : { },\n      \"roleArn\" : { },\n      \"botTags\" : { },\n      \"dataPrivacy\" : {\n        \"childDirected\" : { }\n      },\n      \"idleSessionTTLInSeconds\" : { }\n    }\n  },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed745f0f-ab88-3031-baeb-b937c53f0c0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartImport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "importId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "A unique identifier for the import."
                } ]
              },
              "resourceSpecification" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportResourceSpecification"
                }, {
                  "description" : "The parameters used when importing the resource."
                } ]
              },
              "mergeStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MergeStrategy"
                }, {
                  "description" : "The strategy used when there was a name conflict between the imported resource and an existing resource. When the merge strategy is <code>FailOnConflict</code> existing resources are not overwritten and the import fails."
                } ]
              },
              "importStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportStatus"
                }, {
                  "description" : "The current status of the import. When the status is <code>Complete</code> the bot, bot alias, or custom vocabulary is ready to use."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the import request was created."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "349e8513-0922-38a3-a71d-a81c8e76c605",
    "name" : "Lists the imports for a bot, bot locale, or custom vocabulary. Imports are kept ...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "349e8513-0922-38a3-a71d-a81c8e76c605",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListImports"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "a8ac1528-ec1f-3da0-8b55-bd8ff5392025",
    "name" : "Lists the imports for a bot, bot locale, or custom vocabulary. Imports are kept ...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8ac1528-ec1f-3da0-8b55-bd8ff5392025",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListImports"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "82c0f453-c13d-3dd8-be65-bcb48b30e727",
    "name" : "Lists the imports for a bot, bot locale, or custom vocabulary. Imports are kept ...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82c0f453-c13d-3dd8-be65-bcb48b30e727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListImports"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "a68336f3-c5fd-32fb-bde5-bc85bcc5a6cc",
    "name" : "Lists the imports for a bot, bot locale, or custom vocabulary. Imports are kept ...",
    "request" : {
      "urlPath" : "/imports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"botId\" : { },\n  \"importSummaries\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a68336f3-c5fd-32fb-bde5-bc85bcc5a6cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListImports",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier assigned by Amazon Lex to the bot."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that was imported. It will always be <code>DRAFT</code>."
                } ]
              },
              "importSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportSummaryList"
                }, {
                  "description" : "Summary information for the imports that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter. If there are more imports available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListImports</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListImports</code> operation request to get the next page of results."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The locale specified in the request."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "d0d6f0ad-1ed5-3bb1-b717-6c321fd4329e",
    "name" : "Paginated list of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/odjyz5ZeKT/botversions/66353/botlocales/64h3/customvocabulary/DEFAULT/list",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0d6f0ad-1ed5-3bb1-b717-6c321fd4329e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListCustomVocabularyItems"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "ef01bcee-1cfb-304f-b702-dd55bed70e30",
    "name" : "Paginated list of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/Rjc0mmjPG3/botversions/DRAFT/botlocales/4ua9/customvocabulary/DEFAULT/list",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef01bcee-1cfb-304f-b702-dd55bed70e30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListCustomVocabularyItems"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "452c5e0a-c814-389c-b24d-d836b5480f29",
    "name" : "Paginated list of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/vxL4IxYSMj/botversions/DRAFT/botlocales/09vu/customvocabulary/DEFAULT/list",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "452c5e0a-c814-389c-b24d-d836b5480f29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListCustomVocabularyItems"
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "52721162-0628-32f0-9d78-4511366880be",
    "name" : "Paginated list of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/EIIm1mqfa9/botversions/13048/botlocales/6vn5/customvocabulary/DEFAULT/list",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52721162-0628-32f0-9d78-4511366880be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListCustomVocabularyItems"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "bef092e2-04f2-3eb8-b077-cdf373facef5",
    "name" : "Paginated list of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/6slnxno4GE/botversions/DRAFT/botlocales/4wf8/customvocabulary/DEFAULT/list",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bef092e2-04f2-3eb8-b077-cdf373facef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListCustomVocabularyItems"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "a43e8567-c524-34a7-9ed4-7c15ba827315",
    "name" : "Paginated list of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/wXRi96Etw6/botversions/57155/botlocales/h3li/customvocabulary/DEFAULT/list",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"customVocabularyItems\" : { },\n  \"nextToken\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a43e8567-c524-34a7-9ed4-7c15ba827315",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListCustomVocabularyItems",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with this custom vocabulary."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The identifier of the version of the bot associated with this custom vocabulary."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale where this custom vocabulary is used. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"> Supported Languages </a>."
                } ]
              },
              "customVocabularyItems" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomVocabularyItems"
                }, {
                  "description" : "The custom vocabulary items from the list custom vocabulary response."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "The nextToken identifier to the list custom vocabulary response."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "8e406a1c-dc94-39e9-b0d0-618df2dfd1ab",
    "name" : "Gets a list of built-in slot types that meet the specified criteria.",
    "request" : {
      "urlPath" : "/builtins/locales/k0l8/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e406a1c-dc94-39e9-b0d0-618df2dfd1ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInSlotTypes"
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "eb2cab95-12c2-3324-942d-959885c11a73",
    "name" : "Gets a list of built-in slot types that meet the specified criteria.",
    "request" : {
      "urlPath" : "/builtins/locales/j6du/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb2cab95-12c2-3324-942d-959885c11a73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInSlotTypes"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "e74bdde9-5f59-3faa-9a76-4ecf217174d3",
    "name" : "Gets a list of built-in slot types that meet the specified criteria.",
    "request" : {
      "urlPath" : "/builtins/locales/7959/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e74bdde9-5f59-3faa-9a76-4ecf217174d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInSlotTypes"
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "e5ad67f5-7efd-3f8a-a74c-f43fc1dd312f",
    "name" : "Gets a list of built-in slot types that meet the specified criteria.",
    "request" : {
      "urlPath" : "/builtins/locales/96ew/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5ad67f5-7efd-3f8a-a74c-f43fc1dd312f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInSlotTypes"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "c66f7873-84f4-3a0a-b96d-83f0f9e39187",
    "name" : "Gets a list of built-in slot types that meet the specified criteria.",
    "request" : {
      "urlPath" : "/builtins/locales/7340/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"builtInSlotTypeSummaries\" : { },\n  \"nextToken\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c66f7873-84f4-3a0a-b96d-83f0f9e39187",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInSlotTypes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "builtInSlotTypeSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltInSlotTypeSummaryList"
                }, {
                  "description" : "Summary information for the built-in slot types that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more slot types available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListBuiltInSlotTypes</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>LIstBuiltInSlotTypes</code> operation request to get the next page of results."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale of the slot types in the list."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "4af14521-05d4-3568-98ba-2f5ea5cf402e",
    "name" : "<p>Gets a list of built-in intents provided by Amazon Lex that you can use in yo...",
    "request" : {
      "urlPath" : "/builtins/locales/7cms/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4af14521-05d4-3568-98ba-2f5ea5cf402e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInIntents"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "3e731056-1752-3ab2-9b72-062ddacf9b92",
    "name" : "<p>Gets a list of built-in intents provided by Amazon Lex that you can use in yo...",
    "request" : {
      "urlPath" : "/builtins/locales/wwvg/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e731056-1752-3ab2-9b72-062ddacf9b92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInIntents"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "d7f5bb1e-f176-3aa4-932e-28e01b5fdf37",
    "name" : "<p>Gets a list of built-in intents provided by Amazon Lex that you can use in yo...",
    "request" : {
      "urlPath" : "/builtins/locales/j7ur/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7f5bb1e-f176-3aa4-932e-28e01b5fdf37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInIntents"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "c53f726d-f64d-35ee-bbce-17551f8b63ae",
    "name" : "<p>Gets a list of built-in intents provided by Amazon Lex that you can use in yo...",
    "request" : {
      "urlPath" : "/builtins/locales/88cc/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c53f726d-f64d-35ee-bbce-17551f8b63ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInIntents"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "0d48c8ea-df03-38cb-ac93-617b718b0269",
    "name" : "<p>Gets a list of built-in intents provided by Amazon Lex that you can use in yo...",
    "request" : {
      "urlPath" : "/builtins/locales/t903/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"builtInIntentSummaries\" : { },\n  \"nextToken\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d48c8ea-df03-38cb-ac93-617b718b0269",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBuiltInIntents",
          "schema" : {
            "type" : "object",
            "properties" : {
              "builtInIntentSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltInIntentSummaryList"
                }, {
                  "description" : "Summary information for the built-in intents that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more intents available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListBuiltInIntents</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListBotAliases</code> operation request to get the next page of results."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale of the intents in the list."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "d423b67d-be1d-31b7-ba17-d3d3dc0a7642",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/CCCCCCCCCCCX/botversions/DRAFT/botlocales/a4kd/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 487,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d423b67d-be1d-31b7-ba17-d3d3dc0a7642",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "e90463d7-5fbc-30a9-87b3-91172d3108ec",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/fkuQjNCWXb/botversions/DRAFT/botlocales/05q2/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e90463d7-5fbc-30a9-87b3-91172d3108ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation"
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "2f55e1b4-bbe0-329d-997a-2c93c22ce453",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/XnrpOQrTbC/botversions/DRAFT/botlocales/0it4/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f55e1b4-bbe0-329d-997a-2c93c22ce453",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "00d26f0b-ac85-3c5c-aacc-1f646ab6a372",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/VVVVVVVVVVVXOP/botversions/DRAFT/botlocales/7ky1/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00d26f0b-ac85-3c5c-aacc-1f646ab6a372",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "6bdcf5f9-c508-338c-9cd3-5ddfe4134ad8",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/SSSSSSSSSSS7vW/botversions/DRAFT/botlocales/x0cy/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6bdcf5f9-c508-338c-9cd3-5ddfe4134ad8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation"
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "a173353f-4aea-36e1-b161-1df56e1c1e64",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/7bfGuY6dgn/botversions/DRAFT/botlocales/2h90/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a173353f-4aea-36e1-b161-1df56e1c1e64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation"
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "9190af05-cdd0-351f-91d0-c2d20c1eb933",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/ZamZsYJsKU/botversions/DRAFT/botlocales/48l9/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9190af05-cdd0-351f-91d0-c2d20c1eb933",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "2466c617-6ab9-37e3-9c0a-297719a6e78b",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/mrUJMsXVWC/botversions/DRAFT/botlocales/6z40/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2466c617-6ab9-37e3-9c0a-297719a6e78b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "53352cf9-91b3-35fc-8bb5-3a94b2221313",
    "name" : "Use this to provide your transcript data, and to start the bot recommendation pr...",
    "request" : {
      "urlPath" : "/bots/fM4ALAuymv/botversions/DRAFT/botlocales/1p47/botrecommendations/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"encryptionSetting\" : {\n    \"associatedTranscriptsPassword\" : { },\n    \"botLocaleExportPassword\" : { },\n    \"kmsKeyArn\" : { }\n  },\n  \"botRecommendationStatus\" : { },\n  \"botId\" : { },\n  \"botRecommendationId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"transcriptSourceSetting\" : {\n    \"s3BucketTranscriptSource\" : {\n      \"transcriptFilter\" : {\n        \"lexTranscriptFilter\" : {\n          \"dateRangeFilter\" : {\n            \"startDateTime\" : { },\n            \"endDateTime\" : { }\n          }\n        }\n      },\n      \"kmsKeyArn\" : { },\n      \"s3BucketName\" : { },\n      \"pathFormat\" : {\n        \"objectPrefixes\" : { }\n      },\n      \"transcriptFormat\" : { }\n    }\n  },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53352cf9-91b3-35fc-8bb5-3a94b2221313",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "StartBotRecommendation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot containing the bot recommendation."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot containing the bot recommendation."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale of the bot recommendation to start. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\">Supported languages</a> "
                } ]
              },
              "botRecommendationStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotRecommendationStatus"
                }, {
                  "description" : "<p>The status of the bot recommendation.</p> <p>If the status is Failed, then the reasons for the failure are listed in the failureReasons field. </p>"
                } ]
              },
              "botRecommendationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot recommendation that you have created."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot recommendation was created."
                } ]
              },
              "transcriptSourceSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TranscriptSourceSetting"
                }, {
                  "description" : "The object representing the Amazon S3 bucket containing the transcript, as well as the associated metadata."
                } ]
              },
              "encryptionSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionSetting"
                }, {
                  "description" : "The object representing the passwords that were used to encrypt the data related to the bot recommendation results, as well as the KMS key ARN used to encrypt the associated metadata."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "1181e779-1611-3486-86b5-835834d93c51",
    "name" : "Get a list of bot recommendations that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/kk3eoEU2Nf/botversions/DRAFT/botlocales/zixv/botrecommendations/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1181e779-1611-3486-86b5-835834d93c51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotRecommendations"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "47b20418-44af-387e-a22c-6f0893b9eb0d",
    "name" : "Get a list of bot recommendations that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/Hbf5qE0KdO/botversions/DRAFT/botlocales/0t0i/botrecommendations/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47b20418-44af-387e-a22c-6f0893b9eb0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotRecommendations"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "fbd68151-147c-33b3-9ca4-c52fce8aee09",
    "name" : "Get a list of bot recommendations that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/mc3EXXxmNi/botversions/DRAFT/botlocales/60f9/botrecommendations/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbd68151-147c-33b3-9ca4-c52fce8aee09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotRecommendations"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "e71feda9-770c-35fd-9acc-4199f0df2a31",
    "name" : "Get a list of bot recommendations that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/3wE5QRz922/botversions/DRAFT/botlocales/yi0x/botrecommendations/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e71feda9-770c-35fd-9acc-4199f0df2a31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotRecommendations"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "80afecbb-6352-3bd5-98d9-b62a12e51b95",
    "name" : "Get a list of bot recommendations that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/ivtFLRmhjl/botversions/DRAFT/botlocales/23r3/botrecommendations/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"botRecommendationSummaries\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80afecbb-6352-3bd5-98d9-b62a12e51b95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotRecommendations",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot that contains the bot recommendation list."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that contains the bot recommendation list."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale of the bot recommendation list."
                } ]
              },
              "botRecommendationSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotRecommendationSummaryList"
                }, {
                  "description" : "Summary information for the bot recommendations that meet the filter specified in this request. The length of the list is specified in the maxResults parameter of the request. If there are more bot recommendations available, the nextToken field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the ListBotRecommendations operation. If the nextToken field is present, you send the contents as the nextToken parameter of a ListBotRecommendations operation request to get the next page of results. "
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "1845e9d1-9d3e-3008-be78-1be2489f3138",
    "name" : "<p>Provides a list of utterances that users have sent to the bot.</p> <p>Utteran...",
    "request" : {
      "urlPath" : "/bots/KKIKI0xOVW/aggregatedutterances/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1845e9d1-9d3e-3008-be78-1be2489f3138",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListAggregatedUtterances"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "bc0b10a1-efea-3e16-a37b-b1a2bd94f504",
    "name" : "<p>Provides a list of utterances that users have sent to the bot.</p> <p>Utteran...",
    "request" : {
      "urlPath" : "/bots/iFbFditYGV/aggregatedutterances/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc0b10a1-efea-3e16-a37b-b1a2bd94f504",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListAggregatedUtterances"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "8f962525-ba4a-3e28-80d8-0ed57aab9046",
    "name" : "<p>Provides a list of utterances that users have sent to the bot.</p> <p>Utteran...",
    "request" : {
      "urlPath" : "/bots/AtAvnr8uKb/aggregatedutterances/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f962525-ba4a-3e28-80d8-0ed57aab9046",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListAggregatedUtterances"
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "a4a63b7e-ec64-3262-baa3-8ea154209b8b",
    "name" : "<p>Provides a list of utterances that users have sent to the bot.</p> <p>Utteran...",
    "request" : {
      "urlPath" : "/bots/hhhhhhhhhhhfqM13qap/aggregatedutterances/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4a63b7e-ec64-3262-baa3-8ea154209b8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListAggregatedUtterances"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "5e5a7472-c1d2-36d9-9ab9-e5f1f09396bb",
    "name" : "<p>Provides a list of utterances that users have sent to the bot.</p> <p>Utteran...",
    "request" : {
      "urlPath" : "/bots/jr65DM4jZD/aggregatedutterances/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"aggregatedUtterancesSummaries\" : { },\n  \"botAliasId\" : { },\n  \"aggregationWindowStartTime\" : { },\n  \"nextToken\" : { },\n  \"aggregationWindowEndTime\" : { },\n  \"botId\" : { },\n  \"aggregationLastRefreshedDateTime\" : { },\n  \"aggregationDuration\" : {\n    \"relativeAggregationDuration\" : {\n      \"timeDimension\" : { },\n      \"timeValue\" : { }\n    }\n  },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e5a7472-c1d2-36d9-9ab9-e5f1f09396bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListAggregatedUtterances",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the utterances."
                } ]
              },
              "botAliasId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasId"
                }, {
                  "description" : "The identifier of the bot alias that contains the utterances. If you specified the bot version, the bot alias ID isn't returned."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The identifier of the bot version that contains the utterances. If you specified the bot alias, the bot version isn't returned."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale that the utterances are in."
                } ]
              },
              "aggregationDuration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/UtteranceAggregationDuration"
                }, {
                  "description" : "The time period used to aggregate the utterance data."
                } ]
              },
              "aggregationWindowStartTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the aggregation window begins. Only data collected after this time is returned in the results."
                } ]
              },
              "aggregationWindowEndTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the aggregation window ends. Only data collected between the start time and the end time are returned in the results. "
                } ]
              },
              "aggregationLastRefreshedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "<p>The last date and time that the aggregated data was collected. The time period depends on the length of the aggregation window.</p> <ul> <li> <p> <b>Hours</b> - for 1 hour time window, every half hour; otherwise every hour.</p> </li> <li> <p> <b>Days</b> - every 6 hours</p> </li> <li> <p> <b>Weeks</b> - for a one week time window, every 12 hours; otherwise, every day</p> </li> </ul>"
                } ]
              },
              "aggregatedUtterancesSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AggregatedUtterancesSummaryList"
                }, {
                  "description" : "Summaries of the aggregated utterance data. Each response contains information about the number of times that the utterance was seen during the time period, whether it was detected or missed, and when it was seen during the time period."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListAggregatedUtterances</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListAggregatedUtterances</code> operation request to get the next page of results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "f497fb18-3552-37ef-a78a-08f98394efb9",
    "name" : "Provides metadata information about a custom vocabulary.",
    "request" : {
      "urlPath" : "/bots/PIjB9eEfZI/botversions/47786/botlocales/34zt/customvocabulary/DEFAULT/metadata",
      "method" : "GET"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f497fb18-3552-37ef-a78a-08f98394efb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeCustomVocabularyMetadata"
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "2955a4b1-6bce-34c5-a08a-12e98e87b505",
    "name" : "Provides metadata information about a custom vocabulary.",
    "request" : {
      "urlPath" : "/bots/hr0utuDasB/botversions/DRAFT/botlocales/8fn9/customvocabulary/DEFAULT/metadata",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2955a4b1-6bce-34c5-a08a-12e98e87b505",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeCustomVocabularyMetadata"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "1f038641-c675-3378-8f74-ff7d5924bb18",
    "name" : "Provides metadata information about a custom vocabulary.",
    "request" : {
      "urlPath" : "/bots/tqgD2ha79r/botversions/41169/botlocales/q323/customvocabulary/DEFAULT/metadata",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f038641-c675-3378-8f74-ff7d5924bb18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeCustomVocabularyMetadata"
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "ae8fc556-9703-3891-b3fe-1f58d059de8f",
    "name" : "Provides metadata information about a custom vocabulary.",
    "request" : {
      "urlPath" : "/bots/USBRnKqnyu/botversions/DRAFT/botlocales/o9y5/customvocabulary/DEFAULT/metadata",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae8fc556-9703-3891-b3fe-1f58d059de8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeCustomVocabularyMetadata"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "04738212-515f-34e9-b563-2172b6144f29",
    "name" : "Provides metadata information about a custom vocabulary.",
    "request" : {
      "urlPath" : "/bots/QzGJitQoZG/botversions/21036/botlocales/75x6/customvocabulary/DEFAULT/metadata",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04738212-515f-34e9-b563-2172b6144f29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeCustomVocabularyMetadata"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "6393fe56-54eb-3aab-a01a-034fd13ce454",
    "name" : "Provides metadata information about a custom vocabulary.",
    "request" : {
      "urlPath" : "/bots/n675y3LCrH/botversions/DRAFT/botlocales/ik73/customvocabulary/DEFAULT/metadata",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"customVocabularyStatus\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6393fe56-54eb-3aab-a01a-034fd13ce454",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeCustomVocabularyMetadata",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the custom vocabulary."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot that contains the custom vocabulary to describe."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The locale that contains the custom vocabulary to describe."
                } ]
              },
              "customVocabularyStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomVocabularyStatus"
                }, {
                  "description" : "The status of the custom vocabulary. If the status is <code>Ready</code> the custom vocabulary is ready to use."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the custom vocabulary was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the custom vocabulary was last updated."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "8caaab80-ad35-3bfe-9855-8cd89d523949",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/fffffffffffX77pdR5N/botversions/DRAFT/botlocales/6761/botrecommendations/7oU6VS3csr/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 487,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8caaab80-ad35-3bfe-9855-8cd89d523949",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "4adddda4-2dcd-3ac3-baa7-e8ecc6ffc8c0",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/SEcH5pVJ3Z/botversions/DRAFT/botlocales/284t/botrecommendations/b0EAnqu5mn/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4adddda4-2dcd-3ac3-baa7-e8ecc6ffc8c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation"
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "ee53991a-12e2-313a-a347-8282329e87f7",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/flR6WGUN4e/botversions/DRAFT/botlocales/92fo/botrecommendations/IinztXk1gD/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee53991a-12e2-313a-a347-8282329e87f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "f627e959-6609-32ee-b9e8-ed735b7a488f",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/VVVVVVVVVVV9AMaPK5M/botversions/DRAFT/botlocales/03e1/botrecommendations/DluVbgEeT5/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f627e959-6609-32ee-b9e8-ed735b7a488f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "8c10efea-e098-3103-9c38-3b10a30dc3a9",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/FISKOmD00T/botversions/DRAFT/botlocales/08z1/botrecommendations/TlGo2pyg08/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c10efea-e098-3103-9c38-3b10a30dc3a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation"
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "a8bc031d-334f-39f6-9ddf-99a6acfa1ecd",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/m5z95tVwQD/botversions/DRAFT/botlocales/1bb4/botrecommendations/K92kb62Xv7/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8bc031d-334f-39f6-9ddf-99a6acfa1ecd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "b96cad73-9e4f-3667-ade8-445f6ff33597",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/AmneZWo2q5/botversions/DRAFT/botlocales/qhe7/botrecommendations/Bgr7HtyIrF/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b96cad73-9e4f-3667-ade8-445f6ff33597",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "1a8422b7-075b-32f2-8acd-931dd84bc359",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/FUyUToH7bJ/botversions/DRAFT/botlocales/0669/botrecommendations/KIFU5oZJdj/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a8422b7-075b-32f2-8acd-931dd84bc359",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation"
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "efc06f0e-bf05-3ad6-82ab-fab01bb36bb1",
    "name" : "Updates an existing bot recommendation request.",
    "request" : {
      "urlPath" : "/bots/n2Qzbwou3q/botversions/DRAFT/botlocales/4uri/botrecommendations/8ZsZOLO2bw/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"encryptionSetting\" : {\n    \"associatedTranscriptsPassword\" : { },\n    \"botLocaleExportPassword\" : { },\n    \"kmsKeyArn\" : { }\n  },\n  \"botRecommendationStatus\" : { },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"botRecommendationId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"transcriptSourceSetting\" : {\n    \"s3BucketTranscriptSource\" : {\n      \"transcriptFilter\" : {\n        \"lexTranscriptFilter\" : {\n          \"dateRangeFilter\" : {\n            \"startDateTime\" : { },\n            \"endDateTime\" : { }\n          }\n        }\n      },\n      \"kmsKeyArn\" : { },\n      \"s3BucketName\" : { },\n      \"pathFormat\" : {\n        \"objectPrefixes\" : { }\n      },\n      \"transcriptFormat\" : { }\n    }\n  },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efc06f0e-bf05-3ad6-82ab-fab01bb36bb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotRecommendation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot containing the bot recommendation that has been updated."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot containing the bot recommendation that has been updated."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale of the bot recommendation to update. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\">Supported languages</a> "
                } ]
              },
              "botRecommendationStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotRecommendationStatus"
                }, {
                  "description" : "<p>The status of the bot recommendation.</p> <p>If the status is Failed, then the reasons for the failure are listed in the failureReasons field. </p>"
                } ]
              },
              "botRecommendationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot recommendation to be updated."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot recommendation was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot recommendation was last updated."
                } ]
              },
              "transcriptSourceSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TranscriptSourceSetting"
                }, {
                  "description" : "The object representing the Amazon S3 bucket containing the transcript, as well as the associated metadata."
                } ]
              },
              "encryptionSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionSetting"
                }, {
                  "description" : "The object representing the passwords that were used to encrypt the data related to the bot recommendation results, as well as the KMS key ARN used to encrypt the associated metadata."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "d9a0e475-4cd8-3349-a8fa-3124ac7532a7",
    "name" : "Provides metadata information about a bot recommendation. This information will ...",
    "request" : {
      "urlPath" : "/bots/LJSRZ1PcGw/botversions/DRAFT/botlocales/39za/botrecommendations/fcShLuEVR3/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9a0e475-4cd8-3349-a8fa-3124ac7532a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotRecommendation"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "5b4475cd-51c1-3fc7-b0fa-603a2c13be62",
    "name" : "Provides metadata information about a bot recommendation. This information will ...",
    "request" : {
      "urlPath" : "/bots/pMnNIXWqg8/botversions/DRAFT/botlocales/m14s/botrecommendations/xxxxxxxxxxxpA9lP/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b4475cd-51c1-3fc7-b0fa-603a2c13be62",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotRecommendation"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "0bac69bb-64c5-3043-833d-7b92556602ce",
    "name" : "Provides metadata information about a bot recommendation. This information will ...",
    "request" : {
      "urlPath" : "/bots/8iDsU1KgIT/botversions/DRAFT/botlocales/ch13/botrecommendations/bAoO8S5OVX/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bac69bb-64c5-3043-833d-7b92556602ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotRecommendation"
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "f46be51b-b44d-33d1-9f0d-089f5a705daf",
    "name" : "Provides metadata information about a bot recommendation. This information will ...",
    "request" : {
      "urlPath" : "/bots/MRaV09YNRr/botversions/DRAFT/botlocales/ujj8/botrecommendations/Mus7FqbfHA/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f46be51b-b44d-33d1-9f0d-089f5a705daf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotRecommendation"
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "f0c59652-41e0-3f0a-b11b-8c575232aba8",
    "name" : "Provides metadata information about a bot recommendation. This information will ...",
    "request" : {
      "urlPath" : "/bots/HCBCdBfozE/botversions/DRAFT/botlocales/3nr6/botrecommendations/UiFl6Nk6Im/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"encryptionSetting\" : {\n    \"associatedTranscriptsPassword\" : { },\n    \"botLocaleExportPassword\" : { },\n    \"kmsKeyArn\" : { }\n  },\n  \"botRecommendationStatus\" : { },\n  \"failureReasons\" : { },\n  \"botRecommendationResults\" : {\n    \"associatedTranscriptsUrl\" : { },\n    \"botLocaleExportUrl\" : { },\n    \"statistics\" : {\n      \"slotTypes\" : {\n        \"discoveredSlotTypeCount\" : { }\n      },\n      \"intents\" : {\n        \"discoveredIntentCount\" : { }\n      }\n    }\n  },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"botRecommendationId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"transcriptSourceSetting\" : {\n    \"s3BucketTranscriptSource\" : {\n      \"transcriptFilter\" : {\n        \"lexTranscriptFilter\" : {\n          \"dateRangeFilter\" : {\n            \"startDateTime\" : { },\n            \"endDateTime\" : { }\n          }\n        }\n      },\n      \"kmsKeyArn\" : { },\n      \"s3BucketName\" : { },\n      \"pathFormat\" : {\n        \"objectPrefixes\" : { }\n      },\n      \"transcriptFormat\" : { }\n    }\n  },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0c59652-41e0-3f0a-b11b-8c575232aba8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotRecommendation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with the bot recommendation."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot associated with the bot recommendation."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale of the bot recommendation to describe."
                } ]
              },
              "botRecommendationStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotRecommendationStatus"
                }, {
                  "description" : "The status of the bot recommendation. If the status is Failed, then the reasons for the failure are listed in the failureReasons field. "
                } ]
              },
              "botRecommendationId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot recommendation being described."
                } ]
              },
              "failureReasons" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailureReasons"
                }, {
                  "description" : "If botRecommendationStatus is Failed, Amazon Lex explains why."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the bot recommendation was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the bot recommendation was last updated."
                } ]
              },
              "transcriptSourceSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TranscriptSourceSetting"
                }, {
                  "description" : "The object representing the Amazon S3 bucket containing the transcript, as well as the associated metadata."
                } ]
              },
              "encryptionSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/EncryptionSetting"
                }, {
                  "description" : "The object representing the passwords that were used to encrypt the data related to the bot recommendation results, as well as the KMS key ARN used to encrypt the associated metadata."
                } ]
              },
              "botRecommendationResults" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotRecommendationResults"
                }, {
                  "description" : "The object representing the URL of the bot definition, the URL of the associated transcript and a statistical summary of the bot recommendation results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "377ab316-83ba-384a-a74e-09606c6b8b17",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users...",
    "request" : {
      "urlPath" : "/bots/NWTEB3qURV/utterances/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "377ab316-83ba-384a-a74e-09606c6b8b17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUtterances"
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "7fa00228-a642-324f-a6c0-ee3be2865f6c",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users...",
    "request" : {
      "urlPath" : "/bots/0VMZp3DOu1/utterances/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7fa00228-a642-324f-a6c0-ee3be2865f6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUtterances"
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "1d8dbd00-2255-3eb4-aa2f-ed703836c66b",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users...",
    "request" : {
      "urlPath" : "/bots/66666666666P/utterances/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d8dbd00-2255-3eb4-aa2f-ed703836c66b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUtterances"
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "d0992fcf-8d48-3178-b1f3-7bb1a457647b",
    "name" : "<p>Deletes stored utterances.</p> <p>Amazon Lex stores the utterances that users...",
    "request" : {
      "urlPath" : "/bots/QMQiZCyyqe/utterances/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0992fcf-8d48-3178-b1f3-7bb1a457647b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteUtterances",
          "schema" : {
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "6e80947f-0d74-3cbe-bc92-d989234b5379",
    "name" : "Updates the configuration of an existing slot type.",
    "request" : {
      "urlPath" : "/bots/c3v3nE2Zln/botversions/DRAFT/botlocales/1ihi/slottypes/LmWGnwlptP/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e80947f-0d74-3cbe-bc92-d989234b5379",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlotType"
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "2aa4e0fb-437d-38c3-9212-3bc3fdd89a3e",
    "name" : "Updates the configuration of an existing slot type.",
    "request" : {
      "urlPath" : "/bots/8q8aaME8TM/botversions/DRAFT/botlocales/xq83/slottypes/0azFozm8BZ/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2aa4e0fb-437d-38c3-9212-3bc3fdd89a3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlotType"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "d8139b96-6722-3c39-9204-3272bf016225",
    "name" : "Updates the configuration of an existing slot type.",
    "request" : {
      "urlPath" : "/bots/pWkumZeIYp/botversions/DRAFT/botlocales/662c/slottypes/WbJYZO8mVS/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8139b96-6722-3c39-9204-3272bf016225",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlotType"
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "ce17697d-8709-3e63-b595-9e81e4936c9d",
    "name" : "Updates the configuration of an existing slot type.",
    "request" : {
      "urlPath" : "/bots/VhgtGBhVCS/botversions/DRAFT/botlocales/w689/slottypes/LM7JpTwHEr/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce17697d-8709-3e63-b595-9e81e4936c9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlotType"
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "0a4cffb4-c801-376e-ad2a-26d6ec3062d8",
    "name" : "Updates the configuration of an existing slot type.",
    "request" : {
      "urlPath" : "/bots/eVdFkdUu2C/botversions/DRAFT/botlocales/xzz3/slottypes/l4Qzeq5gQH/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0a4cffb4-c801-376e-ad2a-26d6ec3062d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlotType"
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "937e73f1-5067-3109-ac46-224b937970a4",
    "name" : "Updates the configuration of an existing slot type.",
    "request" : {
      "urlPath" : "/bots/AAsA7vrSl6/botversions/DRAFT/botlocales/0bi9/slottypes/ubD7e64hCx/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "937e73f1-5067-3109-ac46-224b937970a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlotType"
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "9be17eeb-4e27-3930-a913-cd3ef2b88002",
    "name" : "Updates the configuration of an existing slot type.",
    "request" : {
      "urlPath" : "/bots/xUmSVli8IY/botversions/DRAFT/botlocales/s0tt/slottypes/gSV0cjIQMz/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"parentSlotTypeSignature\" : { },\n  \"slotTypeName\" : { },\n  \"description\" : { },\n  \"valueSelectionSetting\" : {\n    \"resolutionStrategy\" : { },\n    \"regexFilter\" : {\n      \"pattern\" : { }\n    },\n    \"advancedRecognitionSetting\" : {\n      \"audioRecognitionStrategy\" : { }\n    }\n  },\n  \"botVersion\" : { },\n  \"slotTypeId\" : { },\n  \"externalSourceSetting\" : {\n    \"grammarSlotTypeSetting\" : {\n      \"source\" : {\n        \"s3ObjectKey\" : { },\n        \"kmsKeyArn\" : { },\n        \"s3BucketName\" : { }\n      }\n    }\n  },\n  \"compositeSlotTypeSetting\" : {\n    \"subSlots\" : { }\n  },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"localeId\" : { },\n  \"slotTypeValues\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9be17eeb-4e27-3930-a913-cd3ef2b88002",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlotType",
          "schema" : {
            "type" : "object",
            "properties" : {
              "slotTypeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the updated slot type."
                } ]
              },
              "slotTypeName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The updated name of the slot type."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The updated description of the slot type."
                } ]
              },
              "slotTypeValues" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeValues"
                }, {
                  "description" : "The updated values that the slot type provides."
                } ]
              },
              "valueSelectionSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueSelectionSetting"
                }, {
                  "description" : "The updated strategy that Amazon Lex uses to determine which value to select from the slot type."
                } ]
              },
              "parentSlotTypeSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeSignature"
                }, {
                  "description" : "The updated signature of the built-in slot type that is the parent of this slot type."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the slot type."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that contains the slot type. This is always <code>DRAFT</code>."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale of the updated slot type."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The timestamp of the date and time that the slot type was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the slot type was last updated."
                } ]
              },
              "externalSourceSetting" : {
                "$ref" : "#/components/schemas/ExternalSourceSetting"
              },
              "compositeSlotTypeSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CompositeSlotTypeSetting"
                }, {
                  "description" : "Specifications for a composite slot type."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "7858a16e-272c-39bc-9366-af29f99361ba",
    "name" : "Gets metadata information about a slot type.",
    "request" : {
      "urlPath" : "/bots/RIVlBhQRlE/botversions/DRAFT/botlocales/4t3b/slottypes/K8To9MbgCB/",
      "method" : "GET"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7858a16e-272c-39bc-9366-af29f99361ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlotType"
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "87c397e0-bd19-39a4-8784-944f35844738",
    "name" : "Gets metadata information about a slot type.",
    "request" : {
      "urlPath" : "/bots/QWYv4GQWWT/botversions/DRAFT/botlocales/e5z5/slottypes/FFFFFFFFFFFA8jL3mSC/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87c397e0-bd19-39a4-8784-944f35844738",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlotType"
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "6ab29e47-7ef8-381b-a98d-d10e15f4da61",
    "name" : "Gets metadata information about a slot type.",
    "request" : {
      "urlPath" : "/bots/SGgXTXTM7C/botversions/DRAFT/botlocales/1tk4/slottypes/wQtTaocx43/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ab29e47-7ef8-381b-a98d-d10e15f4da61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlotType"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "394802be-047e-3692-b6fd-02939b1ac967",
    "name" : "Gets metadata information about a slot type.",
    "request" : {
      "urlPath" : "/bots/Fhx3irAp4D/botversions/29383/botlocales/zxvb/slottypes/U7XZZvjqjA/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "394802be-047e-3692-b6fd-02939b1ac967",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlotType"
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "1fc40a32-d653-344f-b732-a58905283759",
    "name" : "Gets metadata information about a slot type.",
    "request" : {
      "urlPath" : "/bots/2Knwih69cM/botversions/50722/botlocales/9m5b/slottypes/g6f53zhah0/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fc40a32-d653-344f-b732-a58905283759",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlotType"
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "03ef2075-af8c-3e70-bdd1-3aef2a4a4505",
    "name" : "Gets metadata information about a slot type.",
    "request" : {
      "urlPath" : "/bots/pppppppppppYmb/botversions/DRAFT/botlocales/deb5/slottypes/PvkyM6TYzP/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"parentSlotTypeSignature\" : { },\n  \"slotTypeName\" : { },\n  \"description\" : { },\n  \"valueSelectionSetting\" : {\n    \"resolutionStrategy\" : { },\n    \"regexFilter\" : {\n      \"pattern\" : { }\n    },\n    \"advancedRecognitionSetting\" : {\n      \"audioRecognitionStrategy\" : { }\n    }\n  },\n  \"botVersion\" : { },\n  \"slotTypeId\" : { },\n  \"externalSourceSetting\" : {\n    \"grammarSlotTypeSetting\" : {\n      \"source\" : {\n        \"s3ObjectKey\" : { },\n        \"kmsKeyArn\" : { },\n        \"s3BucketName\" : { }\n      }\n    }\n  },\n  \"compositeSlotTypeSetting\" : {\n    \"subSlots\" : { }\n  },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"localeId\" : { },\n  \"slotTypeValues\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03ef2075-af8c-3e70-bdd1-3aef2a4a4505",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlotType",
          "schema" : {
            "type" : "object",
            "properties" : {
              "slotTypeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier for the slot type."
                } ]
              },
              "slotTypeName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name specified for the slot type."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description specified for the slot type."
                } ]
              },
              "slotTypeValues" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeValues"
                }, {
                  "description" : "The values that the slot type can take. Includes any synonyms for the slot type values."
                } ]
              },
              "valueSelectionSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueSelectionSetting"
                }, {
                  "description" : "The strategy that Amazon Lex uses to choose a value from a list of possible values."
                } ]
              },
              "parentSlotTypeSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeSignature"
                }, {
                  "description" : "The built in slot type used as a parent to this slot type."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with the slot type."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot associated with the slot type."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale specified for the slot type."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the slot type was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the slot type was last updated."
                } ]
              },
              "externalSourceSetting" : {
                "$ref" : "#/components/schemas/ExternalSourceSetting"
              },
              "compositeSlotTypeSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CompositeSlotTypeSetting"
                }, {
                  "description" : "Specifications for a composite slot type."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "8a2a56a5-19b2-36f7-beab-4d432bd0455f",
    "name" : "<p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the slot typ... (application/json)",
    "request" : {
      "urlPath" : "/bots/mmmmmmmmmmmak7wDv7y/botversions/DRAFT/botlocales/a9y6/slottypes/8Du0acr398/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a2a56a5-19b2-36f7-beab-4d432bd0455f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "2c89dfa8-df6d-3563-941a-1484844a0c91",
    "name" : "<p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the slot typ... (application/json)",
    "request" : {
      "urlPath" : "/bots/hXf8HqenJA/botversions/DRAFT/botlocales/5rl1/slottypes/TTafqVeJJC/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c89dfa8-df6d-3563-941a-1484844a0c91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "ef2d6df4-cb1b-3666-a9de-64c540baa36f",
    "name" : "<p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the slot typ... (application/json)",
    "request" : {
      "urlPath" : "/bots/p14ffBiXlR/botversions/DRAFT/botlocales/ug1r/slottypes/hRYPKQNFlG/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef2d6df4-cb1b-3666-a9de-64c540baa36f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "6c9afe00-ab63-31a2-b096-220c610a6505",
    "name" : "<p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the slot typ... (application/json)",
    "request" : {
      "urlPath" : "/bots/CWWDu8hPtn/botversions/DRAFT/botlocales/lc3h/slottypes/5m3jEalNqE/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c9afe00-ab63-31a2-b096-220c610a6505",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "0de7d003-e20a-3e6c-b76d-ce61a8de22ab",
    "name" : "<p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the slot typ... (application/json)",
    "request" : {
      "urlPath" : "/bots/KpWQjW2hOS/botversions/DRAFT/botlocales/f1tu/slottypes/AEEd9G1qGR/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0de7d003-e20a-3e6c-b76d-ce61a8de22ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "c5e1193e-6e72-3823-9fa9-5614d9b62d58",
    "name" : "<p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the slot typ... (application/json)",
    "request" : {
      "urlPath" : "/bots/c7lY3n57aM/botversions/DRAFT/botlocales/y010/slottypes/fNQCh9G059/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5e1193e-6e72-3823-9fa9-5614d9b62d58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "33a967bd-1c2a-333c-b50d-42ca4039514a",
    "name" : "<p>Deletes a slot type from a bot locale.</p> <p>If a slot is using the slot typ... - 204",
    "request" : {
      "urlPath" : "/bots/NhCEtVpMJf/botversions/DRAFT/botlocales/7ng1/slottypes/18Cg7tYCOa/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "33a967bd-1c2a-333c-b50d-42ca4039514a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlotType"
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "d6e93185-da0d-3277-9dce-c47487d8f342",
    "name" : "Updates the settings for a slot.",
    "request" : {
      "urlPath" : "/bots/dZkqqLFEpP/botversions/DRAFT/botlocales/k099/intents/inPyxUcBez/slots/ld7p9ES5r0/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6e93185-da0d-3277-9dce-c47487d8f342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlot"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "44e34ffd-824a-3006-994e-4d65996df6a5",
    "name" : "Updates the settings for a slot.",
    "request" : {
      "urlPath" : "/bots/xxxxxxxxxxxuvdDkKNg/botversions/DRAFT/botlocales/u7y0/intents/B00tGq4dX6/slots/10SkMSgkTN/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44e34ffd-824a-3006-994e-4d65996df6a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlot"
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "05826b8f-2638-3a68-833b-6d6e41517c8d",
    "name" : "Updates the settings for a slot.",
    "request" : {
      "urlPath" : "/bots/zYrFO1D842/botversions/DRAFT/botlocales/gsb5/intents/SHGXkZTrPX/slots/tmRceVi363/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05826b8f-2638-3a68-833b-6d6e41517c8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlot"
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "06a749f5-257b-3742-8a50-9b549f9e87c8",
    "name" : "Updates the settings for a slot.",
    "request" : {
      "urlPath" : "/bots/B7ChCyhJ70/botversions/DRAFT/botlocales/0hid/intents/vyqHUAXP3b/slots/zxhNS6vaqg/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06a749f5-257b-3742-8a50-9b549f9e87c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlot"
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "4fce4b3b-f31f-310b-b5fb-24892ae70818",
    "name" : "Updates the settings for a slot.",
    "request" : {
      "urlPath" : "/bots/Vv1O5lifDV/botversions/DRAFT/botlocales/4778/intents/tmK6fL7MA7/slots/xo0M4F7kcj/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4fce4b3b-f31f-310b-b5fb-24892ae70818",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlot"
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "1fa90674-ebe0-3839-962f-94a2dd460783",
    "name" : "Updates the settings for a slot.",
    "request" : {
      "urlPath" : "/bots/oYrq4bKbRA/botversions/DRAFT/botlocales/ghf6/intents/R6jSRwQCTp/slots/o1zbuAuZNp/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fa90674-ebe0-3839-962f-94a2dd460783",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlot"
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "857ea356-f8a1-3d14-97b9-44a47790f6e5",
    "name" : "Updates the settings for a slot.",
    "request" : {
      "urlPath" : "/bots/bIrNgDQnkc/botversions/DRAFT/botlocales/6j90/intents/C4TLA5ksRv/slots/2aYtFopqzU/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subSlotSetting\" : {\n    \"expression\" : { },\n    \"slotSpecifications\" : { }\n  },\n  \"description\" : { },\n  \"intentId\" : { },\n  \"valueElicitationSetting\" : {\n    \"sampleUtterances\" : { },\n    \"slotConstraint\" : { },\n    \"waitAndContinueSpecification\" : {\n      \"continueResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"waitingResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"active\" : { },\n      \"stillWaitingResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"frequencyInSeconds\" : { },\n        \"timeoutInSeconds\" : { }\n      }\n    },\n    \"defaultValueSpecification\" : {\n      \"defaultValueList\" : { }\n    },\n    \"promptSpecification\" : {\n      \"messageGroups\" : { },\n      \"maxRetries\" : { },\n      \"allowInterrupt\" : { },\n      \"promptAttemptsSpecification\" : { },\n      \"messageSelectionStrategy\" : { }\n    },\n    \"slotCaptureSetting\" : {\n      \"failureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"captureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"elicitationCodeHook\" : {\n        \"enableCodeHookInvocation\" : { },\n        \"invocationLabel\" : { }\n      },\n      \"captureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"captureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"codeHook\" : {\n        \"postCodeHookSpecification\" : {\n          \"successResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"successConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          },\n          \"successNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"timeoutNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"timeoutResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"failureNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"failureConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          },\n          \"failureResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"timeoutConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          }\n        },\n        \"active\" : { },\n        \"enableCodeHookInvocation\" : { },\n        \"invocationLabel\" : { }\n      }\n    }\n  },\n  \"botVersion\" : { },\n  \"slotName\" : { },\n  \"slotTypeId\" : { },\n  \"slotId\" : { },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"obfuscationSetting\" : {\n    \"obfuscationSettingType\" : { }\n  },\n  \"localeId\" : { },\n  \"multipleValuesSetting\" : {\n    \"allowMultipleValues\" : { }\n  },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "857ea356-f8a1-3d14-97b9-44a47790f6e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateSlot",
          "schema" : {
            "type" : "object",
            "properties" : {
              "slotId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the slot that was updated."
                } ]
              },
              "slotName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The updated name of the slot."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The updated description of the bot."
                } ]
              },
              "slotTypeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltInOrCustomSlotTypeId"
                }, {
                  "description" : "The updated identifier of the slot type that provides values for the slot."
                } ]
              },
              "valueElicitationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueElicitationSetting"
                }, {
                  "description" : "The updated prompts that Amazon Lex sends to the user to elicit a response that provides a value for the slot."
                } ]
              },
              "obfuscationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObfuscationSetting"
                }, {
                  "description" : "The updated setting that determines whether the slot value is obfuscated in the Amazon CloudWatch logs."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the slot."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The identifier of the slot version that contains the slot. Will always be <code>DRAFT</code>."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The locale that contains the slot."
                } ]
              },
              "intentId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The intent that contains the slot."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The timestamp of the date and time that the slot was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The timestamp of the date and time that the slot was last updated."
                } ]
              },
              "multipleValuesSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MultipleValuesSetting"
                }, {
                  "description" : "Indicates whether the slot accepts multiple values in one response."
                } ]
              },
              "subSlotSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SubSlotSetting"
                }, {
                  "description" : "Specifications for the constituent sub slots and the expression for the composite slot."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "b599b179-2079-3422-b38a-3426864e601c",
    "name" : "Gets metadata information about a slot.",
    "request" : {
      "urlPath" : "/bots/atyt59QhmO/botversions/DRAFT/botlocales/7t74/intents/XhjTsQV9YX/slots/yCE2blOary/",
      "method" : "GET"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b599b179-2079-3422-b38a-3426864e601c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlot"
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "afd59d8e-c1ab-355f-8512-f3b39da179df",
    "name" : "Gets metadata information about a slot.",
    "request" : {
      "urlPath" : "/bots/OCLNhSLy0M/botversions/95595/botlocales/c95b/intents/K0JetP4BRH/slots/MR4nkTxFmT/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afd59d8e-c1ab-355f-8512-f3b39da179df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlot"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "7f5276c8-7ecf-3488-abe6-16ae6089d884",
    "name" : "Gets metadata information about a slot.",
    "request" : {
      "urlPath" : "/bots/DDDDDDDDDDDv/botversions/DRAFT/botlocales/xy5w/intents/dD3RJ2QjIh/slots/cCNaiblTXN/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f5276c8-7ecf-3488-abe6-16ae6089d884",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlot"
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "4731e091-44c6-338e-893b-b5e0fb6eca21",
    "name" : "Gets metadata information about a slot.",
    "request" : {
      "urlPath" : "/bots/gJOu0rJBn8/botversions/46428/botlocales/n592/intents/h2ykr5BeaY/slots/E32MQH43vu/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4731e091-44c6-338e-893b-b5e0fb6eca21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlot"
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "0184c740-0d2c-3fe4-8d94-1cdf577db5f2",
    "name" : "Gets metadata information about a slot.",
    "request" : {
      "urlPath" : "/bots/8P3XDGprpQ/botversions/16878/botlocales/f4g7/intents/yubK11kzkE/slots/AVe0q8Kgu9/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0184c740-0d2c-3fe4-8d94-1cdf577db5f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlot"
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "2482aee7-693c-3b7a-af88-5525a17c037d",
    "name" : "Gets metadata information about a slot.",
    "request" : {
      "urlPath" : "/bots/gUsLMqNORQ/botversions/00965/botlocales/x0uq/intents/KTRoTUVA1m/slots/Kbtjpj6JCW/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subSlotSetting\" : {\n    \"expression\" : { },\n    \"slotSpecifications\" : { }\n  },\n  \"description\" : { },\n  \"intentId\" : { },\n  \"valueElicitationSetting\" : {\n    \"sampleUtterances\" : { },\n    \"slotConstraint\" : { },\n    \"waitAndContinueSpecification\" : {\n      \"continueResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"waitingResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"active\" : { },\n      \"stillWaitingResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"frequencyInSeconds\" : { },\n        \"timeoutInSeconds\" : { }\n      }\n    },\n    \"defaultValueSpecification\" : {\n      \"defaultValueList\" : { }\n    },\n    \"promptSpecification\" : {\n      \"messageGroups\" : { },\n      \"maxRetries\" : { },\n      \"allowInterrupt\" : { },\n      \"promptAttemptsSpecification\" : { },\n      \"messageSelectionStrategy\" : { }\n    },\n    \"slotCaptureSetting\" : {\n      \"failureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"captureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"elicitationCodeHook\" : {\n        \"enableCodeHookInvocation\" : { },\n        \"invocationLabel\" : { }\n      },\n      \"captureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"captureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"codeHook\" : {\n        \"postCodeHookSpecification\" : {\n          \"successResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"successConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          },\n          \"successNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"timeoutNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"timeoutResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"failureNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"failureConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          },\n          \"failureResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"timeoutConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          }\n        },\n        \"active\" : { },\n        \"enableCodeHookInvocation\" : { },\n        \"invocationLabel\" : { }\n      }\n    }\n  },\n  \"botVersion\" : { },\n  \"slotName\" : { },\n  \"slotTypeId\" : { },\n  \"slotId\" : { },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"obfuscationSetting\" : {\n    \"obfuscationSettingType\" : { }\n  },\n  \"localeId\" : { },\n  \"multipleValuesSetting\" : {\n    \"allowMultipleValues\" : { }\n  },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2482aee7-693c-3b7a-af88-5525a17c037d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeSlot",
          "schema" : {
            "type" : "object",
            "properties" : {
              "slotId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier generated for the slot."
                } ]
              },
              "slotName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name specified for the slot."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description specified for the slot."
                } ]
              },
              "slotTypeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltInOrCustomSlotTypeId"
                }, {
                  "description" : "The identifier of the slot type that determines the values entered into the slot."
                } ]
              },
              "valueElicitationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueElicitationSetting"
                }, {
                  "description" : "Prompts that Amazon Lex uses to elicit a value for the slot."
                } ]
              },
              "obfuscationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObfuscationSetting"
                }, {
                  "description" : "Whether slot values are shown in Amazon CloudWatch logs. If the value is <code>None</code>, the actual value of the slot is shown in logs."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with the slot."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot associated with the slot."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale specified for the slot."
                } ]
              },
              "intentId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the intent associated with the slot."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the slot was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the slot was last updated."
                } ]
              },
              "multipleValuesSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MultipleValuesSetting"
                }, {
                  "description" : "<p>Indicates whether the slot accepts multiple values in a single utterance.</p> <p>If the <code>multipleValuesSetting</code> is not set, the default value is <code>false</code>.</p>"
                } ]
              },
              "subSlotSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SubSlotSetting"
                }, {
                  "description" : "Specifications for the constituent sub slots and the expression for the composite slot."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "f09a6354-c6b6-3c61-9c5b-81a8571f2f5b",
    "name" : "Deletes the specified slot from an intent. (application/json)",
    "request" : {
      "urlPath" : "/bots/2RSndyJh7P/botversions/DRAFT/botlocales/u9o4/intents/uA1JVFZlIt/slots/Xhx6AQzRGe/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f09a6354-c6b6-3c61-9c5b-81a8571f2f5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlot"
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "63b53602-0f2b-33f9-8e69-21b9b0e5420d",
    "name" : "Deletes the specified slot from an intent. (application/json)",
    "request" : {
      "urlPath" : "/bots/GuC2GVs8xi/botversions/DRAFT/botlocales/224p/intents/aGVyJg1I66/slots/wm0tcyNmda/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63b53602-0f2b-33f9-8e69-21b9b0e5420d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlot"
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "161b9ef4-9184-305c-884c-dffc7f17ca92",
    "name" : "Deletes the specified slot from an intent. (application/json)",
    "request" : {
      "urlPath" : "/bots/i9v6FMSszf/botversions/DRAFT/botlocales/4dwh/intents/KhSG0Wbvv8/slots/y0cSi318W9/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "161b9ef4-9184-305c-884c-dffc7f17ca92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlot"
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "55d4bcc9-b51a-366f-8315-adb3d6ecc8c2",
    "name" : "Deletes the specified slot from an intent. (application/json)",
    "request" : {
      "urlPath" : "/bots/7HWTOkcSzA/botversions/DRAFT/botlocales/53a5/intents/AbqFVtiUXv/slots/u2E0lcCT0q/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55d4bcc9-b51a-366f-8315-adb3d6ecc8c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlot"
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "fae74d3c-e61f-3913-901b-74a61b633b21",
    "name" : "Deletes the specified slot from an intent. (application/json)",
    "request" : {
      "urlPath" : "/bots/EEEEEEEEEEEq7Be4DWX/botversions/DRAFT/botlocales/0mi9/intents/rcEq088GZY/slots/Li76RIhH1L/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fae74d3c-e61f-3913-901b-74a61b633b21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlot"
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "aace2be9-a66e-3a02-8bfe-6f84cdcc347c",
    "name" : "Deletes the specified slot from an intent. (application/json)",
    "request" : {
      "urlPath" : "/bots/yPhXPVHSuq/botversions/DRAFT/botlocales/88f0/intents/SXhejBatsz/slots/r63QWtEqOu/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aace2be9-a66e-3a02-8bfe-6f84cdcc347c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlot"
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "752ff781-68ca-3e02-815e-3b9d6a226cea",
    "name" : "Deletes the specified slot from an intent. - 204",
    "request" : {
      "urlPath" : "/bots/Knb3LJZCkt/botversions/DRAFT/botlocales/g7p5/intents/gedKWT3QUT/slots/0RCnjsLGOA/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "752ff781-68ca-3e02-815e-3b9d6a226cea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteSlot"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "d4cbc39a-2e32-3617-b12a-57a6dc6ee135",
    "name" : "Deletes a policy statement from a resource policy. If you delete the last statem...",
    "request" : {
      "urlPath" : "/policy/8a5nd8tcrv0k0c6zc9ourc2tz0rrbq93ek6knwz51gloatu2oaxlb364c7k3o033m2ypa7qklq6kutnn3yvgqzhj9e0osg0qicgw69qwz51c82tzmwkwlc79lj3veq/statements/9_DbMB1pu4_5_hIf_x9-f_yVQ_5fE-h_gz-vzcd_G-EX-W_/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4cbc39a-2e32-3617-b12a-57a6dc6ee135",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "85819228-a6dc-3c8b-a0f0-6929e438ac08",
    "name" : "Deletes a policy statement from a resource policy. If you delete the last statem...",
    "request" : {
      "urlPath" : "/policy/hyf0hwvjju9agfhq6wc94jw1mcildm3nxtqupjgcxuu4rf4xglcclcdppo9bj5uvhhci0jxkr3n2s3gv2tor0irdr8q7vnbs4y52gh95mjwt5zrong6c92ukwrw9e36xfkcosr1wtg93z8vrpmouwb773f41g27jdfaqz4cclvdyi6r5wjj15eo24z6smzzavff735iqp8ulj3ge27755yoocfxw2u16os7k713uq0hkweglwhn22z0qja3jqkqm95pfftjkjk9jz0lvs7559aqscp64ccc7as6pvozrtztbu7rbm3jkvu5mklzzi7x0tjaruiqj4ooejrgjty2dig5zu4t8mw1u1jd4awlivrju82y5idpfw773jz27asmx4xv0umjue3ua3nkt862ynjpkuqs5gmagezvjuagguaheqjnc86reh128wl8lya488yidim0nje3mfguq9ttbo4vrkcumzt4xeyc7mersgka7pit7kzwa29enzq2myezm73xni0ez9porff8ukoru1rmus53sp94w84gf2jgjo7xsvu7cqvwzzazk8k6prnzrw7q2bwixezbh8wzg661libtzi2jv0s02w7skvxag9hgqyrz4ujvkwuxd7k28j6ounbvpjeqyhs53hbch9ga0slmq/statements/UdeM_h_s_RU-D4_fhI1tXfZ1Rk3_yA_yzXL-QNV-Y_7-n-S8_N-tnqa_3_X_L_a2W_A0-S_bj_mRKnT-N-v-bR-uT-I_C_I_6xk-/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85819228-a6dc-3c8b-a0f0-6929e438ac08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "cd0276e9-871d-3593-bf9c-bac456701eef",
    "name" : "Deletes a policy statement from a resource policy. If you delete the last statem...",
    "request" : {
      "urlPath" : "/policy/iujsvnd8xasz5ocvcdiy7pvnjhd9skmnu1r8xxqwqm1rzv6ycdghhwn8s0g7bblcv04bgdvmtqzb4vazv8wpub2ktrruj0fawo50c9hpxgjmbi8ntxa9rk8nm9c2jfl8nc29ybodo3gdl2sc9lbuzl56jmlof48yb0nnex0bp0e7idx8lbik38h38f6gdfyd4thtf5kdry9mto52osnqqbzvundifjbfiuvthkqdchusm72uqv71174fvzgtdatats54l2g93us1q21cnsd0vksm4eeq8ae01mzxborb0pfix55tz0dl5irk6hzdbpvfexy1e3un7w0v60kj2asa6plp3q4h7tge8rlonabrr9lgaf8o8j8nvpxicw4n7nx67f9e5gc46wks0luvlajm4qklup3egvttf6km5hyfn8l4hk6wd3h8sjm4fl2ku5phkz48y85iq5ys4en7s34w3uuu5oz64hdwi3se538b3wx7usnce9i4ep/statements/2-o-rp_x_Zg-P_Xh_W-Yw_0FZ2_h_9ob-91zcPR-TInn-b9-V-4_nq-2Nc9-3y6D_kx_r7d6-s_M1-qGH2-U_n_Q7_K_2-uY-FK-/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd0276e9-871d-3593-bf9c-bac456701eef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "1350fc39-d28a-3e14-b426-c249632de527",
    "name" : "Deletes a policy statement from a resource policy. If you delete the last statem...",
    "request" : {
      "urlPath" : "/policy/4t92h630rhm4sv9nlehvtnxm787toqdgi4i3pkljdzd6h1uarz01gppev8iku47kmksqtnthpzc8z1ykhz8v9uubk13hkzz6fp5wgfbqjds5l8qj2fn58vmtxxfjhnvqdkl0g6vm4ehhdx5hvluc9oj4zn134jdch8d3rq5xr5up5e3g33gs81ghpc29a9s8i9hwmgyn1isxnh8eq5jcp95mre6v0392l7dg9049dl2sh3gxhdkhbey46ck8waiulnkyw2xd0v6ro4snzhey0a4jhi5mvhg4yoz3zt4sorlh0beu8cnv2alsc5tppqs1prxjijtaod6j92wdljk2elj5scnuub9rler9da8olu3cjrpba544xdcn53k1u5bjfblhgnysxwlp6zleyut4l8yvi3chl4ap6pqwixhsgeftxp89xak0ffprbqy6ib2yetrq52r2tdb52nbwr6ooj2zdoarpfss0stk2vw7r03q4vfcf9cqpxohf2z3a21m8b31xh4xwuznr6m9qf3muovsn1f5ks7y3svhqcpt7mxkipc9c4ozk2hrnbc64u5r3mbsi21biox6ot4gzk1ujdz29n1plexhe59ogoe80hgola4y28hni3ox7e7kg91o6esb5uhagtxbigabxbsxpaik3qo587259std8baz0ipjz3rc45i1t4r74r2cqgcml0e4axlivqqjvjivjnkneng7x4li1039kt9yyfdvcdyc2kl2vo1e781a0dfvue2t4ndb18nrt2cumhi42x6f9z9m46mzl06a73r16enwxh9c0smp19debg66h1lldgzg8kuy2jh8ofsvy71xsw4qmzyqyzkui85raniylohx5f9v4ond3b3cl3uzh2khtmnk3brbuqytyuc3u5f3nq8s1e1zx9c3qz69e1qnljxji79sijmdmvh99qt8m5s8sbf03ciq4k2nle5qfu8axo9oyx4pgh1gn/statements/mK-jD_i_s-f_4_G_dVEW_d_AQJ-KE_v_Kv_H_vL-Q_F-i-v-5o_jd_7mS_Vr_e-t-OQ-gnY-ZW_O9_d_5-R_8-5b-6Pbn_4-vi_3/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1350fc39-d28a-3e14-b426-c249632de527",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "cabde136-9122-320a-ac71-e0b3643031dd",
    "name" : "Deletes a policy statement from a resource policy. If you delete the last statem...",
    "request" : {
      "urlPath" : "/policy/o6zyq29sy531jurmcwjk3xwh13lcga61vv2vu7jyul5l0x6xjg9p7loaayt2vd2ses1znfbz597br1wtru4orrlwqpzbnwfycsqmm9ld96mw4rdiwidcm4qt7ufafikqydg4ne9ut9tmxfkgn946ywynbracw4jyum8ah13uukxwkoveutfccav8p6zj6qecp7w6xo37qtta1acxvbhg3bv5xtj5kz3dgcsfvflvzy9puzk5cgfm1eblrahtjbcpa92u270b4xm45k82fivsafjf7ji8fnic72pdvkq7ww3vqoyvfvdcswnuy64ds31hnbq3a5hvxp5qqo7xh1od9rvnu5u0xipti0vorm7u3rz6l3rgru88a4jihj9pqo2gpxk89wy6oh12rmacj817mwjzy3wxp60ae68c0rv5ypcmnwch3htgq2qx9fwzwknqjjznmuqozqjbybsutgtiere1qqvzsd6174qqd6vqdfn0v3g4kwrqtmhjug4h4e77q9g7daekbqn109q7s7qbgopnrg02lisc1e9czavrxmbemdkfu87h6lo8fw693a34yrq5v0q9knosse8r06t8h8nsxz7ql5ae2xu4d62ua1hawg7d87shzhqt9/statements/e_tLQ_05Y_pu82p_G_W_9P-Nj/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204,
      "body" : "{\n  \"revisionId\" : { },\n  \"resourceArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cabde136-9122-320a-ac71-e0b3643031dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicyStatement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "resourceArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonResourceName"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy statement was removed from."
                } ]
              },
              "revisionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RevisionId"
                }, {
                  "description" : "The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "efa1f45c-442f-3fb2-9746-fac400e9979a",
    "name" : "Updates the settings for an intent.",
    "request" : {
      "urlPath" : "/bots/ppLUcCAZvj/botversions/DRAFT/botlocales/613h/intents/0ifkVmUEbv/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "efa1f45c-442f-3fb2-9746-fac400e9979a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateIntent"
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "1c9ca586-5fbc-3e84-9986-6a3ed0eb68e4",
    "name" : "Updates the settings for an intent.",
    "request" : {
      "urlPath" : "/bots/F28NHenWrK/botversions/DRAFT/botlocales/j1jh/intents/a4koskvGyS/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c9ca586-5fbc-3e84-9986-6a3ed0eb68e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateIntent"
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "1ac1f77a-62d9-3557-a9f5-b0785828cf7a",
    "name" : "Updates the settings for an intent.",
    "request" : {
      "urlPath" : "/bots/jAuKCVabIW/botversions/DRAFT/botlocales/2z12/intents/CXYiBsyGeT/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ac1f77a-62d9-3557-a9f5-b0785828cf7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateIntent"
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "82791539-51d9-378d-b44b-ca13c1c3f4f4",
    "name" : "Updates the settings for an intent.",
    "request" : {
      "urlPath" : "/bots/t9cY0OxGUS/botversions/DRAFT/botlocales/8c18/intents/WQ5d7F5fir/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82791539-51d9-378d-b44b-ca13c1c3f4f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateIntent"
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "dbbeb5c6-3c9e-3fad-b55a-8144d054ed7f",
    "name" : "Updates the settings for an intent.",
    "request" : {
      "urlPath" : "/bots/zqoaS9AUsb/botversions/DRAFT/botlocales/44j4/intents/jdAqBSfW6j/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbbeb5c6-3c9e-3fad-b55a-8144d054ed7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateIntent"
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "3a5239a0-28d8-325e-ae50-d6ccf44ae051",
    "name" : "Updates the settings for an intent.",
    "request" : {
      "urlPath" : "/bots/6WMLvayB42/botversions/DRAFT/botlocales/7mq1/intents/QF50TTk2nL/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a5239a0-28d8-325e-ae50-d6ccf44ae051",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateIntent"
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "6f9ca05d-e8fc-385c-9f52-1f5ca79b13cf",
    "name" : "Updates the settings for an intent.",
    "request" : {
      "urlPath" : "/bots/dTYos76Yem/botversions/DRAFT/botlocales/eop2/intents/yd11eW2MHn/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sampleUtterances\" : { },\n  \"parentIntentSignature\" : { },\n  \"intentConfirmationSetting\" : {\n    \"declinationResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"failureConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"active\" : { },\n    \"confirmationNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"codeHook\" : {\n      \"postCodeHookSpecification\" : {\n        \"successResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"successConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"successNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"failureNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"failureConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"failureResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"timeoutConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        }\n      },\n      \"active\" : { },\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    },\n    \"declinationNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"promptSpecification\" : {\n      \"messageGroups\" : { },\n      \"maxRetries\" : { },\n      \"allowInterrupt\" : { },\n      \"promptAttemptsSpecification\" : { },\n      \"messageSelectionStrategy\" : { }\n    },\n    \"confirmationConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"failureNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"confirmationResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"elicitationCodeHook\" : {\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    },\n    \"declinationConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"failureResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    }\n  },\n  \"intentName\" : { },\n  \"intentId\" : { },\n  \"description\" : { },\n  \"intentClosingSetting\" : {\n    \"conditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"closingResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"active\" : { },\n    \"nextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    }\n  },\n  \"botVersion\" : { },\n  \"initialResponseSetting\" : {\n    \"conditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"nextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"initialResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"codeHook\" : {\n      \"postCodeHookSpecification\" : {\n        \"successResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"successConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"successNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"failureNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"failureConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"failureResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"timeoutConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        }\n      },\n      \"active\" : { },\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    }\n  },\n  \"slotPriorities\" : { },\n  \"inputContexts\" : { },\n  \"outputContexts\" : { },\n  \"kendraConfiguration\" : {\n    \"kendraIndex\" : { },\n    \"queryFilterStringEnabled\" : { },\n    \"queryFilterString\" : { }\n  },\n  \"fulfillmentCodeHook\" : {\n    \"active\" : { },\n    \"postFulfillmentStatusSpecification\" : {\n      \"successResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"successConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"successNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"timeoutNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"timeoutResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"failureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"failureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"timeoutConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      }\n    },\n    \"fulfillmentUpdatesSpecification\" : {\n      \"active\" : { },\n      \"startResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"delayInSeconds\" : { }\n      },\n      \"updateResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"frequencyInSeconds\" : { }\n      },\n      \"timeoutInSeconds\" : { }\n    },\n    \"enabled\" : { }\n  },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"dialogCodeHook\" : {\n    \"enabled\" : { }\n  },\n  \"localeId\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f9ca05d-e8fc-385c-9f52-1f5ca79b13cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateIntent",
          "schema" : {
            "type" : "object",
            "properties" : {
              "intentId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the intent that was updated."
                } ]
              },
              "intentName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The updated name of the intent."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The updated description of the intent."
                } ]
              },
              "parentIntentSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentSignature"
                }, {
                  "description" : "The updated built-in intent that is the parent of this intent."
                } ]
              },
              "sampleUtterances" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SampleUtterancesList"
                }, {
                  "description" : "The updated list of sample utterances for the intent."
                } ]
              },
              "dialogCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DialogCodeHookSettings"
                }, {
                  "description" : "The updated Lambda function called during each turn of the conversation with the user."
                } ]
              },
              "fulfillmentCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FulfillmentCodeHookSettings"
                }, {
                  "description" : "The updated Lambda function called when the intent is ready for fulfillment."
                } ]
              },
              "slotPriorities" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotPrioritiesList"
                }, {
                  "description" : "The updated list of slots and their priorities that are elicited from the user for the intent."
                } ]
              },
              "intentConfirmationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentConfirmationSetting"
                }, {
                  "description" : "The updated prompts that Amazon Lex sends to the user to confirm the completion of an intent."
                } ]
              },
              "intentClosingSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentClosingSetting"
                }, {
                  "description" : "The updated response that Amazon Lex sends the user when the intent is closed."
                } ]
              },
              "inputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InputContextsList"
                }, {
                  "description" : "The updated list of contexts that must be active for the intent to be considered by Amazon Lex."
                } ]
              },
              "outputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OutputContextsList"
                }, {
                  "description" : "The updated list of contexts that Amazon Lex activates when the intent is fulfilled."
                } ]
              },
              "kendraConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KendraConfiguration"
                }, {
                  "description" : "The updated configuration for connecting to an Amazon Kendra index with the <code>AMAZON.KendraSearchIntent</code> intent."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the intent."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that contains the intent. Will always be <code>DRAFT</code>."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The updated language and locale of the intent."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of when the intent was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the last time that the intent was modified."
                } ]
              },
              "initialResponseSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InitialResponseSetting"
                }, {
                  "description" : "<p/>"
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "2d8e7bb0-d6e0-384e-9c07-8fa3caf5de04",
    "name" : "Returns metadata about an intent.",
    "request" : {
      "urlPath" : "/bots/WgkQ9xbFcx/botversions/69760/botlocales/2lz7/intents/bUogruaHHL/",
      "method" : "GET"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d8e7bb0-d6e0-384e-9c07-8fa3caf5de04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeIntent"
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "caf3b548-136c-30cc-9bec-f144d93aeb1b",
    "name" : "Returns metadata about an intent.",
    "request" : {
      "urlPath" : "/bots/xuVAgPQI42/botversions/DRAFT/botlocales/207h/intents/bbbbbbbbbbb8SDWgKS/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "caf3b548-136c-30cc-9bec-f144d93aeb1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeIntent"
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "21346d88-ef55-3480-978e-48a2fa803e8d",
    "name" : "Returns metadata about an intent.",
    "request" : {
      "urlPath" : "/bots/JV9cVrT1gH/botversions/95008/botlocales/9x21/intents/YojF41DVHo/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21346d88-ef55-3480-978e-48a2fa803e8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeIntent"
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "dbabf86b-6b83-3410-bce1-c1235cd45be5",
    "name" : "Returns metadata about an intent.",
    "request" : {
      "urlPath" : "/bots/72VYX7H6T6/botversions/DRAFT/botlocales/g03v/intents/WtSpigJAf1/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbabf86b-6b83-3410-bce1-c1235cd45be5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeIntent"
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "e38cf786-0feb-37fd-ac64-accb7ac05887",
    "name" : "Returns metadata about an intent.",
    "request" : {
      "urlPath" : "/bots/ozWK6kFJJQ/botversions/DRAFT/botlocales/e507/intents/99999999999kq2W/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e38cf786-0feb-37fd-ac64-accb7ac05887",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeIntent"
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "7554b12a-efd5-3b3a-a074-c9ee211e19c1",
    "name" : "Returns metadata about an intent.",
    "request" : {
      "urlPath" : "/bots/2X6GLVMHOd/botversions/DRAFT/botlocales/3idm/intents/bR9luSmaTM/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sampleUtterances\" : { },\n  \"parentIntentSignature\" : { },\n  \"intentConfirmationSetting\" : {\n    \"declinationResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"failureConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"active\" : { },\n    \"confirmationNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"codeHook\" : {\n      \"postCodeHookSpecification\" : {\n        \"successResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"successConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"successNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"failureNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"failureConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"failureResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"timeoutConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        }\n      },\n      \"active\" : { },\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    },\n    \"declinationNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"promptSpecification\" : {\n      \"messageGroups\" : { },\n      \"maxRetries\" : { },\n      \"allowInterrupt\" : { },\n      \"promptAttemptsSpecification\" : { },\n      \"messageSelectionStrategy\" : { }\n    },\n    \"confirmationConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"failureNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"confirmationResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"elicitationCodeHook\" : {\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    },\n    \"declinationConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"failureResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    }\n  },\n  \"intentName\" : { },\n  \"intentId\" : { },\n  \"description\" : { },\n  \"intentClosingSetting\" : {\n    \"conditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"closingResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"active\" : { },\n    \"nextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    }\n  },\n  \"botVersion\" : { },\n  \"initialResponseSetting\" : {\n    \"conditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"nextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"initialResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"codeHook\" : {\n      \"postCodeHookSpecification\" : {\n        \"successResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"successConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"successNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"failureNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"failureConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"failureResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"timeoutConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        }\n      },\n      \"active\" : { },\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    }\n  },\n  \"slotPriorities\" : { },\n  \"inputContexts\" : { },\n  \"outputContexts\" : { },\n  \"kendraConfiguration\" : {\n    \"kendraIndex\" : { },\n    \"queryFilterStringEnabled\" : { },\n    \"queryFilterString\" : { }\n  },\n  \"fulfillmentCodeHook\" : {\n    \"active\" : { },\n    \"postFulfillmentStatusSpecification\" : {\n      \"successResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"successConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"successNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"timeoutNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"timeoutResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"failureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"failureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"timeoutConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      }\n    },\n    \"fulfillmentUpdatesSpecification\" : {\n      \"active\" : { },\n      \"startResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"delayInSeconds\" : { }\n      },\n      \"updateResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"frequencyInSeconds\" : { }\n      },\n      \"timeoutInSeconds\" : { }\n    },\n    \"enabled\" : { }\n  },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"dialogCodeHook\" : {\n    \"enabled\" : { }\n  },\n  \"localeId\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7554b12a-efd5-3b3a-a074-c9ee211e19c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeIntent",
          "schema" : {
            "type" : "object",
            "properties" : {
              "intentId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier assigned to the intent when it was created."
                } ]
              },
              "intentName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name specified for the intent."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description of the intent."
                } ]
              },
              "parentIntentSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentSignature"
                }, {
                  "description" : "The identifier of the built-in intent that this intent is derived from, if any."
                } ]
              },
              "sampleUtterances" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SampleUtterancesList"
                }, {
                  "description" : "User utterances that trigger this intent."
                } ]
              },
              "dialogCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DialogCodeHookSettings"
                }, {
                  "description" : "The Lambda function called during each turn of a conversation with the intent."
                } ]
              },
              "fulfillmentCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FulfillmentCodeHookSettings"
                }, {
                  "description" : "The Lambda function called when the intent is complete and ready for fulfillment."
                } ]
              },
              "slotPriorities" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotPrioritiesList"
                }, {
                  "description" : "The list that determines the priority that slots should be elicited from the user."
                } ]
              },
              "intentConfirmationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentConfirmationSetting"
                }, {
                  "description" : "Prompts that Amazon Lex sends to the user to confirm completion of an intent."
                } ]
              },
              "intentClosingSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentClosingSetting"
                }, {
                  "description" : "The response that Amazon Lex sends to when the intent is closed."
                } ]
              },
              "inputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InputContextsList"
                }, {
                  "description" : "A list of contexts that must be active for the intent to be considered for sending to the user."
                } ]
              },
              "outputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OutputContextsList"
                }, {
                  "description" : "A list of contexts that are activated when the intent is fulfilled."
                } ]
              },
              "kendraConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KendraConfiguration"
                }, {
                  "description" : "Configuration information required to use the <code>AMAZON.KendraSearchIntent</code> intent."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with the intent."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot associated with the intent."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale specified for the intent."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the intent was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the intent was last updated."
                } ]
              },
              "initialResponseSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InitialResponseSetting"
                }, {
                  "description" : "<p/>"
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "c9566283-c812-3185-b04c-61075a7d433a",
    "name" : "<p>Removes the specified intent.</p> <p>Deleting an intent also deletes the slot... (application/json)",
    "request" : {
      "urlPath" : "/bots/hxfzZQjkab/botversions/DRAFT/botlocales/igv3/intents/CS09ff6vWr/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9566283-c812-3185-b04c-61075a7d433a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "1008668c-723c-3a5a-b654-9984ce122f83",
    "name" : "<p>Removes the specified intent.</p> <p>Deleting an intent also deletes the slot... (application/json)",
    "request" : {
      "urlPath" : "/bots/ToYaYBJ5vZ/botversions/DRAFT/botlocales/5256/intents/QXSB2BSfSX/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1008668c-723c-3a5a-b654-9984ce122f83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "ed8dfa7a-a835-3371-882d-95af6d052847",
    "name" : "<p>Removes the specified intent.</p> <p>Deleting an intent also deletes the slot... (application/json)",
    "request" : {
      "urlPath" : "/bots/FOBqyeRUzP/botversions/DRAFT/botlocales/5aaf/intents/G9Zt8R8Txg/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed8dfa7a-a835-3371-882d-95af6d052847",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "0be21382-d9a0-3d1c-99a5-3496e53fab14",
    "name" : "<p>Removes the specified intent.</p> <p>Deleting an intent also deletes the slot... (application/json)",
    "request" : {
      "urlPath" : "/bots/gDgckTdDR0/botversions/DRAFT/botlocales/7m4c/intents/jn3Jd98Mh2/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0be21382-d9a0-3d1c-99a5-3496e53fab14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "08bde4ae-cd3b-35de-b957-8f023b313ae0",
    "name" : "<p>Removes the specified intent.</p> <p>Deleting an intent also deletes the slot... (application/json)",
    "request" : {
      "urlPath" : "/bots/eBTciUfLmi/botversions/DRAFT/botlocales/uf34/intents/o21p5Zd4R2/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08bde4ae-cd3b-35de-b957-8f023b313ae0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "032d0e98-f005-3c59-9300-56a06597de30",
    "name" : "<p>Removes the specified intent.</p> <p>Deleting an intent also deletes the slot... (application/json)",
    "request" : {
      "urlPath" : "/bots/vfaadwABF2/botversions/DRAFT/botlocales/f971/intents/XgOpSeByCr/",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "032d0e98-f005-3c59-9300-56a06597de30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "58a462af-9f5c-374e-b3d0-463489c70c24",
    "name" : "<p>Removes the specified intent.</p> <p>Deleting an intent also deletes the slot... - 204",
    "request" : {
      "urlPath" : "/bots/ag8bqkJXgr/botversions/DRAFT/botlocales/1aj1/intents/aHhZJoHIV1/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "58a462af-9f5c-374e-b3d0-463489c70c24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteIntent"
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "94157c31-dded-344d-b26c-fbb5d7dcd7e4",
    "name" : "Gets information about a specific import.",
    "request" : {
      "urlPath" : "/imports/yHwAaiGhm6/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "94157c31-dded-344d-b26c-fbb5d7dcd7e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeImport"
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "25661921-36a9-35ee-97d8-9ab135eb9b9d",
    "name" : "Gets information about a specific import.",
    "request" : {
      "urlPath" : "/imports/XWbbCDWrGJ/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25661921-36a9-35ee-97d8-9ab135eb9b9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeImport"
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "55bbc33b-fbd1-30b6-b6a4-cc04cc39bf13",
    "name" : "Gets information about a specific import.",
    "request" : {
      "urlPath" : "/imports/LKnEZUZOZh/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55bbc33b-fbd1-30b6-b6a4-cc04cc39bf13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeImport"
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "70c521e3-ae58-31cf-b469-12bb95c7b816",
    "name" : "Gets information about a specific import.",
    "request" : {
      "urlPath" : "/imports/C6XsiYQsmy/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "70c521e3-ae58-31cf-b469-12bb95c7b816",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeImport"
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "c6e17298-c33a-3e35-9d54-8fe97951f63a",
    "name" : "Gets information about a specific import.",
    "request" : {
      "urlPath" : "/imports/WC3OkQ1rYg/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"importStatus\" : { },\n  \"importId\" : { },\n  \"importedResourceId\" : { },\n  \"mergeStrategy\" : { },\n  \"failureReasons\" : { },\n  \"resourceSpecification\" : {\n    \"customVocabularyImportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    },\n    \"botLocaleImportSpecification\" : {\n      \"nluIntentConfidenceThreshold\" : { },\n      \"voiceSettings\" : {\n        \"voiceId\" : { },\n        \"engine\" : { }\n      },\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    },\n    \"botImportSpecification\" : {\n      \"testBotAliasTags\" : { },\n      \"botName\" : { },\n      \"roleArn\" : { },\n      \"botTags\" : { },\n      \"dataPrivacy\" : {\n        \"childDirected\" : { }\n      },\n      \"idleSessionTTLInSeconds\" : { }\n    }\n  },\n  \"importedResourceName\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6e17298-c33a-3e35-9d54-8fe97951f63a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeImport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "importId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the described import."
                } ]
              },
              "resourceSpecification" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportResourceSpecification"
                }, {
                  "description" : "The specifications of the imported bot, bot locale, or custom vocabulary."
                } ]
              },
              "importedResourceId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportedResourceId"
                }, {
                  "description" : "The unique identifier that Amazon Lex assigned to the resource created by the import."
                } ]
              },
              "importedResourceName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name of the imported resource."
                } ]
              },
              "mergeStrategy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MergeStrategy"
                }, {
                  "description" : "The strategy used when there was a name conflict between the imported resource and an existing resource. When the merge strategy is <code>FailOnConflict</code> existing resources are not overwritten and the import fails."
                } ]
              },
              "importStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportStatus"
                }, {
                  "description" : "The status of the import process. When the status is <code>Completed</code> the resource is imported and ready for use."
                } ]
              },
              "failureReasons" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailureReasons"
                }, {
                  "description" : "If the <code>importStatus</code> field is <code>Failed</code>, this provides one or more reasons for the failure."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the import was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the import was last updated."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "72550e4c-f053-3a85-ba61-a3af0a929f78",
    "name" : "Removes a previous import and the associated file stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/imports/KojZEdKl2m/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72550e4c-f053-3a85-ba61-a3af0a929f78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteImport"
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "9f5c509f-3486-317f-843a-1436af4887c3",
    "name" : "Removes a previous import and the associated file stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/imports/EYeq4R9mI4/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f5c509f-3486-317f-843a-1436af4887c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteImport"
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "2fb70bcc-e703-3e5c-b5e2-e551686be7c8",
    "name" : "Removes a previous import and the associated file stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/imports/A5qV9kBSq4/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fb70bcc-e703-3e5c-b5e2-e551686be7c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteImport"
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "004658e5-6eca-3974-9d23-3a517085dab8",
    "name" : "Removes a previous import and the associated file stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/imports/5FyvtC8cly/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "004658e5-6eca-3974-9d23-3a517085dab8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteImport"
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "e60a2cd2-54ba-33d8-8572-ca3d176bbbf2",
    "name" : "Removes a previous import and the associated file stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/imports/ZZZZZZZZZZZ5ymZG/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e60a2cd2-54ba-33d8-8572-ca3d176bbbf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteImport"
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "1387462f-1a06-3e2c-acb7-253b4fdad86a",
    "name" : "Removes a previous import and the associated file stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/imports/zBDo1SVC4n/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"importStatus\" : { },\n  \"importId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1387462f-1a06-3e2c-acb7-253b4fdad86a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteImport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "importId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the deleted import."
                } ]
              },
              "importStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportStatus"
                }, {
                  "description" : "The current status of the deletion. When the deletion is complete, the import will no longer be returned by the <a href=\"https://docs.aws.amazon.com/lexv2/latest/APIReference/API_ListImports.html\">ListImports</a> operation and calls to the <a href=\"https://docs.aws.amazon.com/lexv2/latest/APIReference/API_DescribeImport.html\">DescribeImport</a> operation with the import identifier will fail."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "30600bb0-9557-38a7-b9d3-de922aa122a3",
    "name" : "<p>Updates the password used to protect an export zip archive.</p> <p>The passwo...",
    "request" : {
      "urlPath" : "/exports/YJO0wXE2i3/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30600bb0-9557-38a7-b9d3-de922aa122a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateExport"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "aae1a686-f615-38a5-9bf6-8c761a8a84cf",
    "name" : "<p>Updates the password used to protect an export zip archive.</p> <p>The passwo...",
    "request" : {
      "urlPath" : "/exports/KAiU2pAHXu/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aae1a686-f615-38a5-9bf6-8c761a8a84cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateExport"
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "4cec715a-27f2-3275-9161-ee3a621795dc",
    "name" : "<p>Updates the password used to protect an export zip archive.</p> <p>The passwo...",
    "request" : {
      "urlPath" : "/exports/gjQjmY0lRj/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cec715a-27f2-3275-9161-ee3a621795dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateExport"
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "b220b36d-c9d8-35f6-827e-685b2125b904",
    "name" : "<p>Updates the password used to protect an export zip archive.</p> <p>The passwo...",
    "request" : {
      "urlPath" : "/exports/IUvB6d3NaS/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b220b36d-c9d8-35f6-827e-685b2125b904",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateExport"
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "fbe9306b-254e-356f-901a-9d4ae3b6448b",
    "name" : "<p>Updates the password used to protect an export zip archive.</p> <p>The passwo...",
    "request" : {
      "urlPath" : "/exports/o8tHEFmxgi/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbe9306b-254e-356f-901a-9d4ae3b6448b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateExport"
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "83f6e537-a4b3-33c2-b387-063736f20a9e",
    "name" : "<p>Updates the password used to protect an export zip archive.</p> <p>The passwo...",
    "request" : {
      "urlPath" : "/exports/WTbpP3owh0/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83f6e537-a4b3-33c2-b387-063736f20a9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateExport"
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "d5b9c559-8cfe-3790-b940-da7813304133",
    "name" : "<p>Updates the password used to protect an export zip archive.</p> <p>The passwo...",
    "request" : {
      "urlPath" : "/exports/TML0XFEhhF/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"exportStatus\" : { },\n  \"resourceSpecification\" : {\n    \"customVocabularyExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    },\n    \"botExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { }\n    },\n    \"botLocaleExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    }\n  },\n  \"lastUpdatedDateTime\" : { },\n  \"exportId\" : { },\n  \"fileFormat\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5b9c559-8cfe-3790-b940-da7813304133",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateExport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "exportId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier Amazon Lex assigned to the export."
                } ]
              },
              "resourceSpecification" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportResourceSpecification"
                }, {
                  "description" : "A description of the type of resource that was exported, either a bot or a bot locale."
                } ]
              },
              "fileFormat" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportExportFileFormat"
                }, {
                  "description" : "The file format used for the files that define the resource. The <code>TSV</code> format is required to export a custom vocabulary only; otherwise use <code>LexJson</code> format."
                } ]
              },
              "exportStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportStatus"
                }, {
                  "description" : "The status of the export. When the status is <code>Completed</code> the export archive is available for download."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the export was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the export was last updated."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "99992079-90fd-3ee5-a7bf-540deb5e3636",
    "name" : "Gets information about a specific export.",
    "request" : {
      "urlPath" : "/exports/DMe0IUHtML/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99992079-90fd-3ee5-a7bf-540deb5e3636",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport"
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "68da9d66-3baa-3193-8c85-d635f17478fe",
    "name" : "Gets information about a specific export.",
    "request" : {
      "urlPath" : "/exports/KK4kS2zsug/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68da9d66-3baa-3193-8c85-d635f17478fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport"
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "ada5bc84-1626-3b1f-9636-6126a525bdf1",
    "name" : "Gets information about a specific export.",
    "request" : {
      "urlPath" : "/exports/nronE7Zd9R/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ada5bc84-1626-3b1f-9636-6126a525bdf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport"
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "662efea3-d325-3697-bedf-b38bb5ee9c93",
    "name" : "Gets information about a specific export.",
    "request" : {
      "urlPath" : "/exports/CuzdKIigf8/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "662efea3-d325-3697-bedf-b38bb5ee9c93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport"
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "2730880e-fbe2-370d-bada-03e9faaaaaaa",
    "name" : "Gets information about a specific export.",
    "request" : {
      "urlPath" : "/exports/ZqgqHs2F3C/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"exportStatus\" : { },\n  \"failureReasons\" : { },\n  \"resourceSpecification\" : {\n    \"customVocabularyExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    },\n    \"botExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { }\n    },\n    \"botLocaleExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    }\n  },\n  \"downloadUrl\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"exportId\" : { },\n  \"fileFormat\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2730880e-fbe2-370d-bada-03e9faaaaaaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeExport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "exportId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the described export."
                } ]
              },
              "resourceSpecification" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportResourceSpecification"
                }, {
                  "description" : "The bot, bot ID, and optional locale ID of the exported bot or bot locale."
                } ]
              },
              "fileFormat" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportExportFileFormat"
                }, {
                  "description" : "The file format used in the files that describe the resource. "
                } ]
              },
              "exportStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportStatus"
                }, {
                  "description" : "The status of the export. When the status is <code>Complete</code> the export archive file is available for download."
                } ]
              },
              "failureReasons" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailureReasons"
                }, {
                  "description" : "If the <code>exportStatus</code> is failed, contains one or more reasons why the export could not be completed."
                } ]
              },
              "downloadUrl" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PresignedS3Url"
                }, {
                  "description" : "A pre-signed S3 URL that points to the bot or bot locale archive. The URL is only available for 5 minutes after calling the <code>DescribeExport</code> operation."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the export was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The last date and time that the export was updated."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "95bd85a7-57d0-354a-add0-dff1b3e21aba",
    "name" : "Removes a previous export and the associated files stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/exports/RmHgGxxhD6/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95bd85a7-57d0-354a-add0-dff1b3e21aba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExport"
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "ac187b1c-bc68-3f3b-b63f-6a0920acfdcf",
    "name" : "Removes a previous export and the associated files stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/exports/chbJQ7vs6T/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac187b1c-bc68-3f3b-b63f-6a0920acfdcf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExport"
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "d822e327-6d53-31fc-9cd0-0eff36724d29",
    "name" : "Removes a previous export and the associated files stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/exports/0kk8YPKhuC/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d822e327-6d53-31fc-9cd0-0eff36724d29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExport"
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "f557f2d8-f259-338c-b956-307e9d7f8fd4",
    "name" : "Removes a previous export and the associated files stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/exports/gmHxJlP3Hh/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f557f2d8-f259-338c-b956-307e9d7f8fd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExport"
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "a227ea86-7167-3339-b795-011fde91cc9e",
    "name" : "Removes a previous export and the associated files stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/exports/7TqauDZRiQ/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a227ea86-7167-3339-b795-011fde91cc9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExport"
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "6f71ebe1-d07b-3cae-8885-cbb2423eed37",
    "name" : "Removes a previous export and the associated files stored in an S3 bucket.",
    "request" : {
      "urlPath" : "/exports/1BVwq96Vrf/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"exportStatus\" : { },\n  \"exportId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f71ebe1-d07b-3cae-8885-cbb2423eed37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteExport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "exportId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the deleted export."
                } ]
              },
              "exportStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportStatus"
                }, {
                  "description" : "The current status of the deletion. When the deletion is complete, the export will no longer be returned by the <a href=\"https://docs.aws.amazon.com/lexv2/latest/APIReference/API_ListExports.html\">ListExports</a> operation and calls to the <a href=\"https://docs.aws.amazon.com/lexv2/latest/APIReference/API_DescribeExport.html\"> DescribeExport</a> operation with the export identifier will fail."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "00238f9d-bf99-39cc-9e8a-cbc1a294d8e8",
    "name" : "Removes a custom vocabulary from the specified locale in the specified bot.",
    "request" : {
      "urlPath" : "/bots/bBpIbBCmVS/botversions/DRAFT/botlocales/j884/customvocabulary",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00238f9d-bf99-39cc-9e8a-cbc1a294d8e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCustomVocabulary"
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "63120c06-6b6f-35b5-b9f1-63e25f037cbb",
    "name" : "Removes a custom vocabulary from the specified locale in the specified bot.",
    "request" : {
      "urlPath" : "/bots/Aw2O8wcaqp/botversions/DRAFT/botlocales/7x9v/customvocabulary",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63120c06-6b6f-35b5-b9f1-63e25f037cbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCustomVocabulary"
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "e23ac15a-9d6e-3212-bba5-117505ff59ea",
    "name" : "Removes a custom vocabulary from the specified locale in the specified bot.",
    "request" : {
      "urlPath" : "/bots/K6HJbssKyM/botversions/DRAFT/botlocales/09he/customvocabulary",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e23ac15a-9d6e-3212-bba5-117505ff59ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCustomVocabulary"
        }
      }
    },
    "insertionIndex" : 202
  }, {
    "id" : "d90e881d-80f1-317a-8ce5-8c3aa151dc42",
    "name" : "Removes a custom vocabulary from the specified locale in the specified bot.",
    "request" : {
      "urlPath" : "/bots/Uvj5exVxVh/botversions/DRAFT/botlocales/0911/customvocabulary",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d90e881d-80f1-317a-8ce5-8c3aa151dc42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCustomVocabulary"
        }
      }
    },
    "insertionIndex" : 203
  }, {
    "id" : "071f122e-5baa-351e-b0b0-42e342e97da8",
    "name" : "Removes a custom vocabulary from the specified locale in the specified bot.",
    "request" : {
      "urlPath" : "/bots/YadV1AIxXk/botversions/DRAFT/botlocales/r034/customvocabulary",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "071f122e-5baa-351e-b0b0-42e342e97da8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCustomVocabulary"
        }
      }
    },
    "insertionIndex" : 204
  }, {
    "id" : "93964b5d-fc5e-344c-ab05-cd307e989272",
    "name" : "Removes a custom vocabulary from the specified locale in the specified bot.",
    "request" : {
      "urlPath" : "/bots/gc2YllBBdP/botversions/DRAFT/botlocales/2p1z/customvocabulary",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93964b5d-fc5e-344c-ab05-cd307e989272",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCustomVocabulary"
        }
      }
    },
    "insertionIndex" : 205
  }, {
    "id" : "5f2ddb11-5b43-3e3d-8ff7-858ebf7e0826",
    "name" : "Removes a custom vocabulary from the specified locale in the specified bot.",
    "request" : {
      "urlPath" : "/bots/rCbWxjCTP8/botversions/DRAFT/botlocales/9pxq/customvocabulary",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botId\" : { },\n  \"customVocabularyStatus\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f2ddb11-5b43-3e3d-8ff7-858ebf7e0826",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteCustomVocabulary",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that the custom vocabulary was removed from."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that the custom vocabulary was removed from."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The locale identifier for the locale that the custom vocabulary was removed from."
                } ]
              },
              "customVocabularyStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomVocabularyStatus"
                }, {
                  "description" : "The status of removing the custom vocabulary."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 206
  }, {
    "id" : "399c3f39-c92d-37d9-8f64-efcd38718622",
    "name" : "Provides metadata about a version of a bot.",
    "request" : {
      "urlPath" : "/bots/O5g7ei9yT3/botversions/74409/",
      "method" : "GET"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "399c3f39-c92d-37d9-8f64-efcd38718622",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotVersion"
        }
      }
    },
    "insertionIndex" : 207
  }, {
    "id" : "232faa67-c2c7-3754-9275-b8c3cd208073",
    "name" : "Provides metadata about a version of a bot.",
    "request" : {
      "urlPath" : "/bots/MT4C1UzuBG/botversions/54044/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "232faa67-c2c7-3754-9275-b8c3cd208073",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotVersion"
        }
      }
    },
    "insertionIndex" : 208
  }, {
    "id" : "00032296-7263-36fe-a3d9-773bfa429173",
    "name" : "Provides metadata about a version of a bot.",
    "request" : {
      "urlPath" : "/bots/ineDQvaEUi/botversions/01476/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00032296-7263-36fe-a3d9-773bfa429173",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotVersion"
        }
      }
    },
    "insertionIndex" : 209
  }, {
    "id" : "402ab2a5-a909-3993-978e-550ab1f8eb48",
    "name" : "Provides metadata about a version of a bot.",
    "request" : {
      "urlPath" : "/bots/7I9NaYivQB/botversions/12011/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "402ab2a5-a909-3993-978e-550ab1f8eb48",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotVersion"
        }
      }
    },
    "insertionIndex" : 210
  }, {
    "id" : "78428dfc-a3c3-34c7-a2b1-35070323e520",
    "name" : "Provides metadata about a version of a bot.",
    "request" : {
      "urlPath" : "/bots/3ZUXBxe6pR/botversions/87515/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78428dfc-a3c3-34c7-a2b1-35070323e520",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotVersion"
        }
      }
    },
    "insertionIndex" : 211
  }, {
    "id" : "9602ccc6-9e44-3e58-a9f8-f8f5fb276e42",
    "name" : "Provides metadata about a version of a bot.",
    "request" : {
      "urlPath" : "/bots/Xlmogqhi1s/botversions/50270/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botStatus\" : { },\n  \"botName\" : { },\n  \"failureReasons\" : { },\n  \"description\" : { },\n  \"dataPrivacy\" : {\n    \"childDirected\" : { }\n  },\n  \"idleSessionTTLInSeconds\" : { },\n  \"botMembers\" : { },\n  \"botVersion\" : { },\n  \"parentBotNetworks\" : { },\n  \"roleArn\" : { },\n  \"botType\" : { },\n  \"botId\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9602ccc6-9e44-3e58-a9f8-f8f5fb276e42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotVersion",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the version."
                } ]
              },
              "botName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name of the bot that contains the version."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NumericalBotVersion"
                }, {
                  "description" : "The version of the bot that was described."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description specified for the bot."
                } ]
              },
              "roleArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RoleArn"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot version."
                } ]
              },
              "dataPrivacy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DataPrivacy"
                }, {
                  "description" : "Data privacy settings for the bot version."
                } ]
              },
              "idleSessionTTLInSeconds" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SessionTTL"
                }, {
                  "description" : "The number of seconds that a session with the bot remains active before it is discarded by Amazon Lex."
                } ]
              },
              "botStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotStatus"
                }, {
                  "description" : "The current status of the bot. When the status is <code>Available</code>, the bot version is ready for use."
                } ]
              },
              "failureReasons" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailureReasons"
                }, {
                  "description" : "If the <code>botStatus</code> is <code>Failed</code>, this contains a list of reasons that the version couldn't be built."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot version was created."
                } ]
              },
              "parentBotNetworks" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ParentBotNetworks"
                }, {
                  "description" : "A list of the networks to which the bot version you described belongs."
                } ]
              },
              "botType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotType"
                }, {
                  "description" : "The type of the bot in the version that was described."
                } ]
              },
              "botMembers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotMembers"
                }, {
                  "description" : "The members of bot network in the version that was described."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 212
  }, {
    "id" : "edc0b381-ac6f-3ca1-9369-9f954ffda221",
    "name" : "Deletes a specific version of a bot. To delete all versions of a bot, use the <a...",
    "request" : {
      "urlPath" : "/bots/spbH77fRi2/botversions/94465/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "edc0b381-ac6f-3ca1-9369-9f954ffda221",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    },
    "insertionIndex" : 213
  }, {
    "id" : "2edc9ddd-84b9-3b31-ba86-163880de8504",
    "name" : "Deletes a specific version of a bot. To delete all versions of a bot, use the <a...",
    "request" : {
      "urlPath" : "/bots/3OdgBVM00j/botversions/14590/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2edc9ddd-84b9-3b31-ba86-163880de8504",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    },
    "insertionIndex" : 214
  }, {
    "id" : "f7035e26-704a-3da5-b49a-7ed392b1d846",
    "name" : "Deletes a specific version of a bot. To delete all versions of a bot, use the <a...",
    "request" : {
      "urlPath" : "/bots/QMfPJ564pN/botversions/7/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7035e26-704a-3da5-b49a-7ed392b1d846",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    },
    "insertionIndex" : 215
  }, {
    "id" : "10765949-cbc3-3cf1-9427-5d3f052fb8d0",
    "name" : "Deletes a specific version of a bot. To delete all versions of a bot, use the <a...",
    "request" : {
      "urlPath" : "/bots/6zlVGB78jg/botversions/20369/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10765949-cbc3-3cf1-9427-5d3f052fb8d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    },
    "insertionIndex" : 216
  }, {
    "id" : "b906d843-edac-35f2-a143-e55d9134210e",
    "name" : "Deletes a specific version of a bot. To delete all versions of a bot, use the <a...",
    "request" : {
      "urlPath" : "/bots/NMdOGcJPrQ/botversions/26670/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b906d843-edac-35f2-a143-e55d9134210e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    },
    "insertionIndex" : 217
  }, {
    "id" : "869b26ed-af4f-3c3f-81e1-9dadcc921940",
    "name" : "Deletes a specific version of a bot. To delete all versions of a bot, use the <a...",
    "request" : {
      "urlPath" : "/bots/7YUEfJOclB/botversions/50012/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "869b26ed-af4f-3c3f-81e1-9dadcc921940",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotVersion"
        }
      }
    },
    "insertionIndex" : 218
  }, {
    "id" : "3a5cce14-bb3c-3815-99e6-3d9b0b9923f4",
    "name" : "Deletes a specific version of a bot. To delete all versions of a bot, use the <a...",
    "request" : {
      "urlPath" : "/bots/3YzjhG7PYK/botversions/20658/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botStatus\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a5cce14-bb3c-3815-99e6-3d9b0b9923f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotVersion",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that is being deleted."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NumericalBotVersion"
                }, {
                  "description" : "The version of the bot that is being deleted."
                } ]
              },
              "botStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotStatus"
                }, {
                  "description" : "The current status of the bot. "
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 219
  }, {
    "id" : "34b7f4e5-dd83-334a-baae-ee5f1d2e4bf6",
    "name" : "Updates the configuration of an existing bot alias.",
    "request" : {
      "urlPath" : "/bots/BaBxkARpJo/botaliases/TSTALIASID/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34b7f4e5-dd83-334a-baae-ee5f1d2e4bf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotAlias"
        }
      }
    },
    "insertionIndex" : 220
  }, {
    "id" : "b8632248-4d42-37a5-8e0d-5d89f20a77bc",
    "name" : "Updates the configuration of an existing bot alias.",
    "request" : {
      "urlPath" : "/bots/SVufFHsCEd/botaliases/0MKfy6mMLK/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8632248-4d42-37a5-8e0d-5d89f20a77bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotAlias"
        }
      }
    },
    "insertionIndex" : 221
  }, {
    "id" : "0d3776f2-7122-3934-ac93-bc5790e05269",
    "name" : "Updates the configuration of an existing bot alias.",
    "request" : {
      "urlPath" : "/bots/f1zHVcj0nS/botaliases/REGBlGa4DG/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d3776f2-7122-3934-ac93-bc5790e05269",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotAlias"
        }
      }
    },
    "insertionIndex" : 222
  }, {
    "id" : "13433fae-de2b-3f33-aa36-4e5240a7ab5b",
    "name" : "Updates the configuration of an existing bot alias.",
    "request" : {
      "urlPath" : "/bots/XEIfHZkgCH/botaliases/TSTALIASID/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13433fae-de2b-3f33-aa36-4e5240a7ab5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotAlias"
        }
      }
    },
    "insertionIndex" : 223
  }, {
    "id" : "6703c6a9-e674-36c0-81e0-98bae87bdc54",
    "name" : "Updates the configuration of an existing bot alias.",
    "request" : {
      "urlPath" : "/bots/R2dUvJpgJd/botaliases/TSTALIASID/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6703c6a9-e674-36c0-81e0-98bae87bdc54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotAlias"
        }
      }
    },
    "insertionIndex" : 224
  }, {
    "id" : "e24212d2-fbea-3bca-87e5-2ab4322ca44d",
    "name" : "Updates the configuration of an existing bot alias.",
    "request" : {
      "urlPath" : "/bots/H9LwyWg8nU/botaliases/TSTALIASID/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e24212d2-fbea-3bca-87e5-2ab4322ca44d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotAlias"
        }
      }
    },
    "insertionIndex" : 225
  }, {
    "id" : "0daf9dcd-289e-33ad-9324-0ca6746ec6f8",
    "name" : "Updates the configuration of an existing bot alias.",
    "request" : {
      "urlPath" : "/bots/2kCVZsmEQH/botaliases/TSTALIASID/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botAliasLocaleSettings\" : { },\n  \"sentimentAnalysisSettings\" : {\n    \"detectSentiment\" : { }\n  },\n  \"botAliasId\" : { },\n  \"description\" : { },\n  \"botAliasName\" : { },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"botVersion\" : { },\n  \"botAliasStatus\" : { },\n  \"conversationLogSettings\" : {\n    \"textLogSettings\" : { },\n    \"audioLogSettings\" : { }\n  },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0daf9dcd-289e-33ad-9324-0ca6746ec6f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotAlias",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botAliasId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasId"
                }, {
                  "description" : "The identifier of the updated bot alias."
                } ]
              },
              "botAliasName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The updated name of the bot alias."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The updated description of the bot alias."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The updated version of the bot that the alias points to."
                } ]
              },
              "botAliasLocaleSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasLocaleSettingsMap"
                }, {
                  "description" : "The updated Lambda functions to use in each locale for the bot alias."
                } ]
              },
              "conversationLogSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConversationLogSettings"
                }, {
                  "description" : "The updated settings for storing conversation logs in Amazon CloudWatch Logs and Amazon S3 buckets."
                } ]
              },
              "sentimentAnalysisSettings" : {
                "$ref" : "#/components/schemas/SentimentAnalysisSettings"
              },
              "botAliasStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasStatus"
                }, {
                  "description" : "The current status of the bot alias. When the status is <code>Available</code> the alias is ready for use."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot with the updated alias."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot was last updated."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 226
  }, {
    "id" : "fa5ba23b-a601-3ebe-8df7-959d2f678669",
    "name" : "Get information about a specific bot alias.",
    "request" : {
      "urlPath" : "/bots/SgO8eRmbpE/botaliases/TSTALIASID/",
      "method" : "GET"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa5ba23b-a601-3ebe-8df7-959d2f678669",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotAlias"
        }
      }
    },
    "insertionIndex" : 227
  }, {
    "id" : "9a68fb6b-c40e-3686-9a9f-c410f4b59a74",
    "name" : "Get information about a specific bot alias.",
    "request" : {
      "urlPath" : "/bots/Q8f8Q84fMe/botaliases/TSTALIASID/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a68fb6b-c40e-3686-9a9f-c410f4b59a74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotAlias"
        }
      }
    },
    "insertionIndex" : 228
  }, {
    "id" : "b69e4d6a-ac01-39f1-a6a5-7f58a68af2b8",
    "name" : "Get information about a specific bot alias.",
    "request" : {
      "urlPath" : "/bots/yP9NXiTlu5/botaliases/un4QVmVsNq/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b69e4d6a-ac01-39f1-a6a5-7f58a68af2b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotAlias"
        }
      }
    },
    "insertionIndex" : 229
  }, {
    "id" : "ae2ce1df-5482-3cfb-bddd-5cfce86d55e7",
    "name" : "Get information about a specific bot alias.",
    "request" : {
      "urlPath" : "/bots/PjwxqqMyFQ/botaliases/TSTALIASID/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae2ce1df-5482-3cfb-bddd-5cfce86d55e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotAlias"
        }
      }
    },
    "insertionIndex" : 230
  }, {
    "id" : "f0a8ce00-6f7d-3afe-83b0-3000695fadde",
    "name" : "Get information about a specific bot alias.",
    "request" : {
      "urlPath" : "/bots/mOpJ3vM748/botaliases/TSTALIASID/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0a8ce00-6f7d-3afe-83b0-3000695fadde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotAlias"
        }
      }
    },
    "insertionIndex" : 231
  }, {
    "id" : "bed1a744-974b-3ff0-a836-a86ed4cf799b",
    "name" : "Get information about a specific bot alias.",
    "request" : {
      "urlPath" : "/bots/IHkEZ7kKKC/botaliases/TSTALIASID/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botAliasLocaleSettings\" : { },\n  \"sentimentAnalysisSettings\" : {\n    \"detectSentiment\" : { }\n  },\n  \"botAliasHistoryEvents\" : { },\n  \"botAliasId\" : { },\n  \"description\" : { },\n  \"botAliasName\" : { },\n  \"botVersion\" : { },\n  \"parentBotNetworks\" : { },\n  \"conversationLogSettings\" : {\n    \"textLogSettings\" : { },\n    \"audioLogSettings\" : { }\n  },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"botAliasStatus\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bed1a744-974b-3ff0-a836-a86ed4cf799b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotAlias",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botAliasId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasId"
                }, {
                  "description" : "The identifier of the bot alias."
                } ]
              },
              "botAliasName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name of the bot alias."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description of the bot alias."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot associated with the bot alias."
                } ]
              },
              "botAliasLocaleSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasLocaleSettingsMap"
                }, {
                  "description" : "The locale settings that are unique to the alias."
                } ]
              },
              "conversationLogSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConversationLogSettings"
                }, {
                  "description" : "Specifics of how Amazon Lex logs text and audio conversations with the bot associated with the alias."
                } ]
              },
              "sentimentAnalysisSettings" : {
                "$ref" : "#/components/schemas/SentimentAnalysisSettings"
              },
              "botAliasHistoryEvents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasHistoryEventsList"
                }, {
                  "description" : "A list of events that affect a bot alias. For example, an event is recorded when the version that the alias points to changes."
                } ]
              },
              "botAliasStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasStatus"
                }, {
                  "description" : "The current status of the alias. When the alias is <code>Available</code>, the alias is ready for use with your bot."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with the bot alias."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the alias was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the alias was last updated."
                } ]
              },
              "parentBotNetworks" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ParentBotNetworks"
                }, {
                  "description" : "A list of the networks to which the bot alias you described belongs."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 232
  }, {
    "id" : "dfcadbfc-86d8-3427-a73d-a6ce509e717b",
    "name" : "Deletes the specified bot alias.",
    "request" : {
      "urlPath" : "/bots/oDp55fjNNb/botaliases/BpBFxl2RHX/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dfcadbfc-86d8-3427-a73d-a6ce509e717b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    },
    "insertionIndex" : 233
  }, {
    "id" : "65ffca82-bb15-3026-9bb0-c41cb3ea88f9",
    "name" : "Deletes the specified bot alias.",
    "request" : {
      "urlPath" : "/bots/1axWaCHvdv/botaliases/QE6koCbn0N/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65ffca82-bb15-3026-9bb0-c41cb3ea88f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    },
    "insertionIndex" : 234
  }, {
    "id" : "5818c2e1-9e97-34d9-a949-ddfd4e55d169",
    "name" : "Deletes the specified bot alias.",
    "request" : {
      "urlPath" : "/bots/dZz5PFit7a/botaliases/zhK6VmzbFo/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5818c2e1-9e97-34d9-a949-ddfd4e55d169",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    },
    "insertionIndex" : 235
  }, {
    "id" : "c6ac61a8-5d1a-31e4-8f58-9ba4cedc5620",
    "name" : "Deletes the specified bot alias.",
    "request" : {
      "urlPath" : "/bots/pmlD17fZ5m/botaliases/uuuuuuuuuuucJQ70v/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6ac61a8-5d1a-31e4-8f58-9ba4cedc5620",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    },
    "insertionIndex" : 236
  }, {
    "id" : "d71826f5-c522-3465-9b32-6a4202772914",
    "name" : "Deletes the specified bot alias.",
    "request" : {
      "urlPath" : "/bots/UxsJuXduS8/botaliases/6832qavWRh/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d71826f5-c522-3465-9b32-6a4202772914",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    },
    "insertionIndex" : 237
  }, {
    "id" : "afd236c9-bc9d-3788-b292-6df1e54a5c80",
    "name" : "Deletes the specified bot alias.",
    "request" : {
      "urlPath" : "/bots/su0PkfUQnu/botaliases/6RORxy4Hsl/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "afd236c9-bc9d-3788-b292-6df1e54a5c80",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotAlias"
        }
      }
    },
    "insertionIndex" : 238
  }, {
    "id" : "73d6615d-dda9-3978-945f-e9d27358e0d9",
    "name" : "Deletes the specified bot alias.",
    "request" : {
      "urlPath" : "/bots/Y2YUQeRlpg/botaliases/TSTALIASID/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botAliasId\" : { },\n  \"botId\" : { },\n  \"botAliasStatus\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73d6615d-dda9-3978-945f-e9d27358e0d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotAlias",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botAliasId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasId"
                }, {
                  "description" : "The unique identifier of the bot alias to delete."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot that contains the alias to delete."
                } ]
              },
              "botAliasStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasStatus"
                }, {
                  "description" : "The current status of the alias. The status is <code>Deleting</code> while the alias is in the process of being deleted. Once the alias is deleted, it will no longer appear in the list of aliases returned by the <code>ListBotAliases</code> operation."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 239
  }, {
    "id" : "f49e3911-a34c-3d03-b24e-3bf53b41c5bc",
    "name" : "Updates the configuration of an existing bot. ",
    "request" : {
      "urlPath" : "/bots/EdzEtumCVA/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f49e3911-a34c-3d03-b24e-3bf53b41c5bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBot"
        }
      }
    },
    "insertionIndex" : 240
  }, {
    "id" : "977f8534-a8fc-301f-8842-e4d29cf59902",
    "name" : "Updates the configuration of an existing bot. ",
    "request" : {
      "urlPath" : "/bots/ceoGXLWp1v/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "977f8534-a8fc-301f-8842-e4d29cf59902",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBot"
        }
      }
    },
    "insertionIndex" : 241
  }, {
    "id" : "aa92dfa7-8a0f-3c1e-aeb1-7f4482f82c43",
    "name" : "Updates the configuration of an existing bot. ",
    "request" : {
      "urlPath" : "/bots/mzKhwnPK19/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa92dfa7-8a0f-3c1e-aeb1-7f4482f82c43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBot"
        }
      }
    },
    "insertionIndex" : 242
  }, {
    "id" : "75cbe2db-9537-3af7-82bf-9366e1975e50",
    "name" : "Updates the configuration of an existing bot. ",
    "request" : {
      "urlPath" : "/bots/gggggggggggY/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75cbe2db-9537-3af7-82bf-9366e1975e50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBot"
        }
      }
    },
    "insertionIndex" : 243
  }, {
    "id" : "3d24e547-26be-393e-8a0c-b583f6ca7cac",
    "name" : "Updates the configuration of an existing bot. ",
    "request" : {
      "urlPath" : "/bots/Gylx4xlud9/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d24e547-26be-393e-8a0c-b583f6ca7cac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBot"
        }
      }
    },
    "insertionIndex" : 244
  }, {
    "id" : "7df5d629-fc1f-34bf-8f15-ee0e5d0799e9",
    "name" : "Updates the configuration of an existing bot. ",
    "request" : {
      "urlPath" : "/bots/LlvCAy24Zf/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7df5d629-fc1f-34bf-8f15-ee0e5d0799e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBot"
        }
      }
    },
    "insertionIndex" : 245
  }, {
    "id" : "172cce2d-b479-3fab-8a30-16e741598bb7",
    "name" : "Updates the configuration of an existing bot. ",
    "request" : {
      "urlPath" : "/bots/qINHy381XM/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botStatus\" : { },\n  \"botName\" : { },\n  \"roleArn\" : { },\n  \"botType\" : { },\n  \"description\" : { },\n  \"dataPrivacy\" : {\n    \"childDirected\" : { }\n  },\n  \"idleSessionTTLInSeconds\" : { },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"botMembers\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "172cce2d-b479-3fab-8a30-16e741598bb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBot",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot that was updated."
                } ]
              },
              "botName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name of the bot after the update."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description of the bot after the update."
                } ]
              },
              "roleArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RoleArn"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of the IAM role used by the bot after the update."
                } ]
              },
              "dataPrivacy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DataPrivacy"
                }, {
                  "description" : "The data privacy settings for the bot after the update."
                } ]
              },
              "idleSessionTTLInSeconds" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SessionTTL"
                }, {
                  "description" : "The session timeout, in seconds, for the bot after the update."
                } ]
              },
              "botStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotStatus"
                }, {
                  "description" : "Shows the current status of the bot. The bot is first in the <code>Creating</code> status. Once the bot is read for use, it changes to the <code>Available</code> status. After the bot is created, you can use the <code>DRAFT</code> version of the bot."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot was last updated."
                } ]
              },
              "botType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotType"
                }, {
                  "description" : "The type of the bot that was updated."
                } ]
              },
              "botMembers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotMembers"
                }, {
                  "description" : "The list of bot members in the network that was updated."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 246
  }, {
    "id" : "fa18ce25-4a23-3940-9cb8-1a5c0bc6b7a1",
    "name" : "Provides metadata information about a bot. ",
    "request" : {
      "urlPath" : "/bots/1Fsww1X3Iu/",
      "method" : "GET"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa18ce25-4a23-3940-9cb8-1a5c0bc6b7a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBot"
        }
      }
    },
    "insertionIndex" : 247
  }, {
    "id" : "fc9999a4-69ea-3171-8c03-5b7df422338a",
    "name" : "Provides metadata information about a bot. ",
    "request" : {
      "urlPath" : "/bots/a6D0NEbn0x/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc9999a4-69ea-3171-8c03-5b7df422338a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBot"
        }
      }
    },
    "insertionIndex" : 248
  }, {
    "id" : "3d6151d3-6a7b-3c06-9514-60471d993a47",
    "name" : "Provides metadata information about a bot. ",
    "request" : {
      "urlPath" : "/bots/IYLcfhfgoR/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d6151d3-6a7b-3c06-9514-60471d993a47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBot"
        }
      }
    },
    "insertionIndex" : 249
  }, {
    "id" : "bc5761c1-ab99-36f0-8538-2c08c0106617",
    "name" : "Provides metadata information about a bot. ",
    "request" : {
      "urlPath" : "/bots/IxzSSIlQuj/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc5761c1-ab99-36f0-8538-2c08c0106617",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBot"
        }
      }
    },
    "insertionIndex" : 250
  }, {
    "id" : "141beb8c-8869-3f3c-9992-c82150b57596",
    "name" : "Provides metadata information about a bot. ",
    "request" : {
      "urlPath" : "/bots/8wFmLk9tNs/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "141beb8c-8869-3f3c-9992-c82150b57596",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBot"
        }
      }
    },
    "insertionIndex" : 251
  }, {
    "id" : "eb977244-1516-3b73-930d-379f653d9007",
    "name" : "Provides metadata information about a bot. ",
    "request" : {
      "urlPath" : "/bots/1AKGN79JLK/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botStatus\" : { },\n  \"botName\" : { },\n  \"roleArn\" : { },\n  \"botType\" : { },\n  \"failureReasons\" : { },\n  \"description\" : { },\n  \"dataPrivacy\" : {\n    \"childDirected\" : { }\n  },\n  \"idleSessionTTLInSeconds\" : { },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"botMembers\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb977244-1516-3b73-930d-379f653d9007",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBot",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot."
                } ]
              },
              "botName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name of the bot."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description of the bot. "
                } ]
              },
              "roleArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RoleArn"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of an IAM role that has permission to access the bot."
                } ]
              },
              "dataPrivacy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DataPrivacy"
                }, {
                  "description" : "Settings for managing data privacy of the bot and its conversations with users."
                } ]
              },
              "idleSessionTTLInSeconds" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SessionTTL"
                }, {
                  "description" : "The maximum time in seconds that Amazon Lex retains the data gathered in a conversation."
                } ]
              },
              "botStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotStatus"
                }, {
                  "description" : "The current status of the bot. When the status is <code>Available</code> the bot is ready to be used in conversations with users."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the bot was last updated."
                } ]
              },
              "botType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotType"
                }, {
                  "description" : "The type of the bot that was described."
                } ]
              },
              "botMembers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotMembers"
                }, {
                  "description" : "The list of bots in the network that was described."
                } ]
              },
              "failureReasons" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailureReasons"
                }, {
                  "description" : "If the <code>botStatus</code> is <code>Failed</code>, this contains a list of reasons that the bot couldn't be built."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 252
  }, {
    "id" : "4b842ac4-0545-39da-b229-6a6a7595974e",
    "name" : "<p>Deletes all versions of a bot, including the <code>Draft</code> version. To d...",
    "request" : {
      "urlPath" : "/bots/xATYzGSpBW/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4b842ac4-0545-39da-b229-6a6a7595974e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    },
    "insertionIndex" : 253
  }, {
    "id" : "43104552-2555-3869-9f6c-0e65d9ac8b6d",
    "name" : "<p>Deletes all versions of a bot, including the <code>Draft</code> version. To d...",
    "request" : {
      "urlPath" : "/bots/44444444444qlj/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43104552-2555-3869-9f6c-0e65d9ac8b6d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    },
    "insertionIndex" : 254
  }, {
    "id" : "9c96c3ca-2809-3551-99a9-ba85463b6dbc",
    "name" : "<p>Deletes all versions of a bot, including the <code>Draft</code> version. To d...",
    "request" : {
      "urlPath" : "/bots/RWFRR7D4at/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c96c3ca-2809-3551-99a9-ba85463b6dbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    },
    "insertionIndex" : 255
  }, {
    "id" : "9876a054-c6a4-3938-88de-1bfd91e13057",
    "name" : "<p>Deletes all versions of a bot, including the <code>Draft</code> version. To d...",
    "request" : {
      "urlPath" : "/bots/yW8s0Hm8Jx/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9876a054-c6a4-3938-88de-1bfd91e13057",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    },
    "insertionIndex" : 256
  }, {
    "id" : "4d34d716-38b5-3a08-8269-2c35f80cc556",
    "name" : "<p>Deletes all versions of a bot, including the <code>Draft</code> version. To d...",
    "request" : {
      "urlPath" : "/bots/w8R9h48Hru/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d34d716-38b5-3a08-8269-2c35f80cc556",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    },
    "insertionIndex" : 257
  }, {
    "id" : "827b4e45-0c12-30a3-a1a1-e4331423a0d3",
    "name" : "<p>Deletes all versions of a bot, including the <code>Draft</code> version. To d...",
    "request" : {
      "urlPath" : "/bots/3cKwHCkAgA/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "827b4e45-0c12-30a3-a1a1-e4331423a0d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBot"
        }
      }
    },
    "insertionIndex" : 258
  }, {
    "id" : "ec6c3e20-e3fb-3434-9e28-74eb50f855f6",
    "name" : "<p>Deletes all versions of a bot, including the <code>Draft</code> version. To d...",
    "request" : {
      "urlPath" : "/bots/E4uUj9MjBy/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botStatus\" : { },\n  \"botId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec6c3e20-e3fb-3434-9e28-74eb50f855f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBot",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot that Amazon Lex is deleting."
                } ]
              },
              "botStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotStatus"
                }, {
                  "description" : "The current status of the bot. The status is <code>Deleting</code> while the bot and its associated resources are being deleted."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 259
  }, {
    "id" : "a813538a-47b3-3c96-a143-ffc018b0e513",
    "name" : "Gets a pre-signed S3 write URL that you use to upload the zip archive when impor...",
    "request" : {
      "urlPath" : "/createuploadurl/",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a813538a-47b3-3c96-a143-ffc018b0e513",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUploadUrl"
        }
      }
    },
    "insertionIndex" : 260
  }, {
    "id" : "71e372cb-cff9-331d-90cb-3f811450edd8",
    "name" : "Gets a pre-signed S3 write URL that you use to upload the zip archive when impor...",
    "request" : {
      "urlPath" : "/createuploadurl/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71e372cb-cff9-331d-90cb-3f811450edd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUploadUrl"
        }
      }
    },
    "insertionIndex" : 261
  }, {
    "id" : "b36148fb-ccbb-3759-92e1-58c63dbbf82c",
    "name" : "Gets a pre-signed S3 write URL that you use to upload the zip archive when impor...",
    "request" : {
      "urlPath" : "/createuploadurl/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b36148fb-ccbb-3759-92e1-58c63dbbf82c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUploadUrl"
        }
      }
    },
    "insertionIndex" : 262
  }, {
    "id" : "886dd1a7-d9e6-3086-b12c-504dc95282ac",
    "name" : "Gets a pre-signed S3 write URL that you use to upload the zip archive when impor...",
    "request" : {
      "urlPath" : "/createuploadurl/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "886dd1a7-d9e6-3086-b12c-504dc95282ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUploadUrl"
        }
      }
    },
    "insertionIndex" : 263
  }, {
    "id" : "b094e067-3362-3ebf-8802-3abed2b23ed5",
    "name" : "Gets a pre-signed S3 write URL that you use to upload the zip archive when impor...",
    "request" : {
      "urlPath" : "/createuploadurl/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b094e067-3362-3ebf-8802-3abed2b23ed5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUploadUrl"
        }
      }
    },
    "insertionIndex" : 264
  }, {
    "id" : "3384856d-c7ed-3ee0-9f11-b1dfb8401689",
    "name" : "Gets a pre-signed S3 write URL that you use to upload the zip archive when impor...",
    "request" : {
      "urlPath" : "/createuploadurl/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"importId\" : { },\n  \"uploadUrl\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3384856d-c7ed-3ee0-9f11-b1dfb8401689",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateUploadUrl",
          "schema" : {
            "type" : "object",
            "properties" : {
              "importId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "An identifier for a unique import job. Use it when you call the <a href=\"https://docs.aws.amazon.com/lexv2/latest/APIReference/API_StartImport.html\">StartImport</a> operation."
                } ]
              },
              "uploadUrl" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/PresignedS3Url"
                }, {
                  "description" : "A pre-signed S3 write URL. Upload the zip archive file that contains the definition of your bot or bot locale."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 265
  }, {
    "id" : "4f961e19-94ce-3687-9a39-835ec2be5d5e",
    "name" : "Gets a list of slot types that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/TDDgdb1O9S/botversions/38007/botlocales/bl0s/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f961e19-94ce-3687-9a39-835ec2be5d5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlotTypes"
        }
      }
    },
    "insertionIndex" : 266
  }, {
    "id" : "2eea8611-38e3-35d3-ba25-74acbee91d81",
    "name" : "Gets a list of slot types that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/o0x0TxMJFo/botversions/DRAFT/botlocales/3ko9/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2eea8611-38e3-35d3-ba25-74acbee91d81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlotTypes"
        }
      }
    },
    "insertionIndex" : 267
  }, {
    "id" : "df978bec-e9e5-3513-a68c-63735bd11f94",
    "name" : "Gets a list of slot types that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/d7zN7x6LwQ/botversions/DRAFT/botlocales/t707/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df978bec-e9e5-3513-a68c-63735bd11f94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlotTypes"
        }
      }
    },
    "insertionIndex" : 268
  }, {
    "id" : "74cf0fa8-ad55-3d73-9686-f7995ba626ca",
    "name" : "Gets a list of slot types that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/jce6TYcIny/botversions/61848/botlocales/29s0/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74cf0fa8-ad55-3d73-9686-f7995ba626ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlotTypes"
        }
      }
    },
    "insertionIndex" : 269
  }, {
    "id" : "f9fe294f-cdee-3bfd-b4ef-a3d1943d8574",
    "name" : "Gets a list of slot types that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/KcIx33dQLX/botversions/DRAFT/botlocales/5s05/slottypes/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"slotTypeSummaries\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9fe294f-cdee-3bfd-b4ef-a3d1943d8574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlotTypes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the slot types."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot that contains the slot types."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and local of the slot types in the list."
                } ]
              },
              "slotTypeSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeSummaryList"
                }, {
                  "description" : "Summary information for the slot types that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more slot types available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListSlotTypes</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListSlotTypes</code> operation request to get the next page of results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 270
  }, {
    "id" : "c11466c9-ceaf-3123-a63b-af104bf650d2",
    "name" : "<p>Creates a custom slot type</p> <p> To create a custom slot type, specify a na...",
    "request" : {
      "urlPath" : "/bots/SLI5qOvYhk/botversions/DRAFT/botlocales/6392/slottypes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c11466c9-ceaf-3123-a63b-af104bf650d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlotType"
        }
      }
    },
    "insertionIndex" : 271
  }, {
    "id" : "41700ff9-c44c-3b80-b228-d646c18e1f71",
    "name" : "<p>Creates a custom slot type</p> <p> To create a custom slot type, specify a na...",
    "request" : {
      "urlPath" : "/bots/EYv2FLTbxk/botversions/DRAFT/botlocales/713y/slottypes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41700ff9-c44c-3b80-b228-d646c18e1f71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlotType"
        }
      }
    },
    "insertionIndex" : 272
  }, {
    "id" : "0ea33966-2611-34cf-a618-bc060a803279",
    "name" : "<p>Creates a custom slot type</p> <p> To create a custom slot type, specify a na...",
    "request" : {
      "urlPath" : "/bots/tZ9AtDdncS/botversions/DRAFT/botlocales/y0j0/slottypes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ea33966-2611-34cf-a618-bc060a803279",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlotType"
        }
      }
    },
    "insertionIndex" : 273
  }, {
    "id" : "bf509511-f78f-3183-a6f2-ff4f270c59d8",
    "name" : "<p>Creates a custom slot type</p> <p> To create a custom slot type, specify a na...",
    "request" : {
      "urlPath" : "/bots/0neS8xo4vT/botversions/DRAFT/botlocales/3zow/slottypes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf509511-f78f-3183-a6f2-ff4f270c59d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlotType"
        }
      }
    },
    "insertionIndex" : 274
  }, {
    "id" : "eea0694c-9538-31e2-84ea-2e0a8696dc03",
    "name" : "<p>Creates a custom slot type</p> <p> To create a custom slot type, specify a na...",
    "request" : {
      "urlPath" : "/bots/Qe1KkP4f5N/botversions/DRAFT/botlocales/0s3z/slottypes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eea0694c-9538-31e2-84ea-2e0a8696dc03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlotType"
        }
      }
    },
    "insertionIndex" : 275
  }, {
    "id" : "7ae4d94e-d311-307a-9511-e27121a10825",
    "name" : "<p>Creates a custom slot type</p> <p> To create a custom slot type, specify a na...",
    "request" : {
      "urlPath" : "/bots/SG0qUcUxzc/botversions/DRAFT/botlocales/14ne/slottypes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ae4d94e-d311-307a-9511-e27121a10825",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlotType"
        }
      }
    },
    "insertionIndex" : 276
  }, {
    "id" : "30fc1e0b-38b3-396b-b4c6-db5b85eee08c",
    "name" : "<p>Creates a custom slot type</p> <p> To create a custom slot type, specify a na...",
    "request" : {
      "urlPath" : "/bots/MUsSqNpD1S/botversions/DRAFT/botlocales/3qpu/slottypes/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"slotTypeId\" : { },\n  \"externalSourceSetting\" : {\n    \"grammarSlotTypeSetting\" : {\n      \"source\" : {\n        \"s3ObjectKey\" : { },\n        \"kmsKeyArn\" : { },\n        \"s3BucketName\" : { }\n      }\n    }\n  },\n  \"parentSlotTypeSignature\" : { },\n  \"slotTypeName\" : { },\n  \"description\" : { },\n  \"valueSelectionSetting\" : {\n    \"resolutionStrategy\" : { },\n    \"regexFilter\" : {\n      \"pattern\" : { }\n    },\n    \"advancedRecognitionSetting\" : {\n      \"audioRecognitionStrategy\" : { }\n    }\n  },\n  \"compositeSlotTypeSetting\" : {\n    \"subSlots\" : { }\n  },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"slotTypeValues\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30fc1e0b-38b3-396b-b4c6-db5b85eee08c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlotType",
          "schema" : {
            "type" : "object",
            "properties" : {
              "slotTypeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier assigned to the slot type. Use this to identify the slot type in the <code>UpdateSlotType</code> and <code>DeleteSlotType</code> operations."
                } ]
              },
              "slotTypeName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name specified for the slot type."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description specified for the slot type."
                } ]
              },
              "slotTypeValues" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeValues"
                }, {
                  "description" : "The list of values that the slot type can assume."
                } ]
              },
              "valueSelectionSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueSelectionSetting"
                }, {
                  "description" : "The strategy that Amazon Lex uses to select a value from the list of possible values."
                } ]
              },
              "parentSlotTypeSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotTypeSignature"
                }, {
                  "description" : "The signature of the base slot type specified for the slot type."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier for the bot associated with the slot type."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot associated with the slot type."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The specified language and local specified for the slot type."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the slot type was created."
                } ]
              },
              "externalSourceSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExternalSourceSetting"
                }, {
                  "description" : "The type of external information used to create the slot type."
                } ]
              },
              "compositeSlotTypeSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CompositeSlotTypeSetting"
                }, {
                  "description" : "Specifications for a composite slot type."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 277
  }, {
    "id" : "8d2a1eb3-30a7-3a06-a795-75315e081535",
    "name" : "Gets a list of slots that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/KXj2PCLr7c/botversions/DRAFT/botlocales/b076/intents/33333333333J/slots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d2a1eb3-30a7-3a06-a795-75315e081535",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlots"
        }
      }
    },
    "insertionIndex" : 278
  }, {
    "id" : "41865e7a-277d-32d6-adce-6b948c10908a",
    "name" : "Gets a list of slots that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/JkddsReKU0/botversions/DRAFT/botlocales/tvx7/intents/TRxdgVRC1I/slots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41865e7a-277d-32d6-adce-6b948c10908a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlots"
        }
      }
    },
    "insertionIndex" : 279
  }, {
    "id" : "08b260c1-77b1-3867-a6dc-e25103d74a03",
    "name" : "Gets a list of slots that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/OUpKOz6Sus/botversions/86835/botlocales/b7ge/intents/j2L1FkuyZ6/slots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08b260c1-77b1-3867-a6dc-e25103d74a03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlots"
        }
      }
    },
    "insertionIndex" : 280
  }, {
    "id" : "9cec4e57-f965-34d0-baae-3e53209944d4",
    "name" : "Gets a list of slots that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/4rmgN6dctp/botversions/DRAFT/botlocales/89l6/intents/aR0EiFiz7a/slots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cec4e57-f965-34d0-baae-3e53209944d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlots"
        }
      }
    },
    "insertionIndex" : 281
  }, {
    "id" : "196c3cd3-1993-3d6f-a75a-33afacfafa24",
    "name" : "Gets a list of slots that match the specified criteria.",
    "request" : {
      "urlPath" : "/bots/atRPJgoaWp/botversions/DRAFT/botlocales/7sa5/intents/RbNLzI1Pfq/slots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"intentId\" : { },\n  \"botId\" : { },\n  \"slotSummaries\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "196c3cd3-1993-3d6f-a75a-33afacfafa24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListSlots",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the slots."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot that contains the slots."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale of the slots in the list."
                } ]
              },
              "intentId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the intent that contains the slots."
                } ]
              },
              "slotSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotSummaryList"
                }, {
                  "description" : "Summary information for the slots that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more slots available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListSlots</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListSlots</code> operation request to get the next page of results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 282
  }, {
    "id" : "fb315493-0b20-353e-81f3-65e97605010f",
    "name" : "Creates a slot in an intent. A slot is a variable needed to fulfill an intent. F...",
    "request" : {
      "urlPath" : "/bots/HB9viazyvd/botversions/DRAFT/botlocales/78y5/intents/0bd3MZNi6U/slots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb315493-0b20-353e-81f3-65e97605010f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlot"
        }
      }
    },
    "insertionIndex" : 283
  }, {
    "id" : "af867924-dbd9-31c2-b3b1-f4aea8e9ffee",
    "name" : "Creates a slot in an intent. A slot is a variable needed to fulfill an intent. F...",
    "request" : {
      "urlPath" : "/bots/qnLqj4iAQ9/botversions/DRAFT/botlocales/4ne5/intents/2JuJRu7MPi/slots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af867924-dbd9-31c2-b3b1-f4aea8e9ffee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlot"
        }
      }
    },
    "insertionIndex" : 284
  }, {
    "id" : "4d070075-a42c-377b-a45a-957f3343c302",
    "name" : "Creates a slot in an intent. A slot is a variable needed to fulfill an intent. F...",
    "request" : {
      "urlPath" : "/bots/tT1s78kEon/botversions/DRAFT/botlocales/y435/intents/LKdBvKMGqF/slots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d070075-a42c-377b-a45a-957f3343c302",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlot"
        }
      }
    },
    "insertionIndex" : 285
  }, {
    "id" : "f9af2723-f3ec-30f9-91e1-7f0f7c59244a",
    "name" : "Creates a slot in an intent. A slot is a variable needed to fulfill an intent. F...",
    "request" : {
      "urlPath" : "/bots/mAL7M36CdC/botversions/DRAFT/botlocales/0hoh/intents/w5jhxD2QRL/slots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9af2723-f3ec-30f9-91e1-7f0f7c59244a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlot"
        }
      }
    },
    "insertionIndex" : 286
  }, {
    "id" : "5fefb4ae-a4cd-3058-9ca3-e4a754276461",
    "name" : "Creates a slot in an intent. A slot is a variable needed to fulfill an intent. F...",
    "request" : {
      "urlPath" : "/bots/MMMMMMMMMMMGPNcpW/botversions/DRAFT/botlocales/wm25/intents/xB0SeaOjXj/slots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fefb4ae-a4cd-3058-9ca3-e4a754276461",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlot"
        }
      }
    },
    "insertionIndex" : 287
  }, {
    "id" : "5edc6119-d678-3bd9-b689-d27f60ffc28d",
    "name" : "Creates a slot in an intent. A slot is a variable needed to fulfill an intent. F...",
    "request" : {
      "urlPath" : "/bots/wPuphOLyp7/botversions/DRAFT/botlocales/98ot/intents/IdQTztzNl4/slots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5edc6119-d678-3bd9-b689-d27f60ffc28d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlot"
        }
      }
    },
    "insertionIndex" : 288
  }, {
    "id" : "7386bae9-260c-3c1e-abbb-a1376897efaa",
    "name" : "Creates a slot in an intent. A slot is a variable needed to fulfill an intent. F...",
    "request" : {
      "urlPath" : "/bots/XXXXXXXXXXX0c3Xl/botversions/DRAFT/botlocales/mn91/intents/uykZYdYkej/slots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"subSlotSetting\" : {\n    \"expression\" : { },\n    \"slotSpecifications\" : { }\n  },\n  \"description\" : { },\n  \"intentId\" : { },\n  \"valueElicitationSetting\" : {\n    \"sampleUtterances\" : { },\n    \"slotConstraint\" : { },\n    \"waitAndContinueSpecification\" : {\n      \"continueResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"waitingResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"active\" : { },\n      \"stillWaitingResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"frequencyInSeconds\" : { },\n        \"timeoutInSeconds\" : { }\n      }\n    },\n    \"defaultValueSpecification\" : {\n      \"defaultValueList\" : { }\n    },\n    \"promptSpecification\" : {\n      \"messageGroups\" : { },\n      \"maxRetries\" : { },\n      \"allowInterrupt\" : { },\n      \"promptAttemptsSpecification\" : { },\n      \"messageSelectionStrategy\" : { }\n    },\n    \"slotCaptureSetting\" : {\n      \"failureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"captureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"elicitationCodeHook\" : {\n        \"enableCodeHookInvocation\" : { },\n        \"invocationLabel\" : { }\n      },\n      \"captureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"captureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"codeHook\" : {\n        \"postCodeHookSpecification\" : {\n          \"successResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"successConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          },\n          \"successNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"timeoutNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"timeoutResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"failureNextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          },\n          \"failureConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          },\n          \"failureResponse\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"timeoutConditional\" : {\n            \"defaultBranch\" : { },\n            \"active\" : { },\n            \"conditionalBranches\" : { }\n          }\n        },\n        \"active\" : { },\n        \"enableCodeHookInvocation\" : { },\n        \"invocationLabel\" : { }\n      }\n    }\n  },\n  \"botVersion\" : { },\n  \"slotName\" : { },\n  \"slotTypeId\" : { },\n  \"slotId\" : { },\n  \"botId\" : { },\n  \"obfuscationSetting\" : {\n    \"obfuscationSettingType\" : { }\n  },\n  \"localeId\" : { },\n  \"multipleValuesSetting\" : {\n    \"allowMultipleValues\" : { }\n  },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7386bae9-260c-3c1e-abbb-a1376897efaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateSlot",
          "schema" : {
            "type" : "object",
            "properties" : {
              "slotId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier associated with the slot. Use this to identify the slot when you update or delete it."
                } ]
              },
              "slotName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name specified for the slot."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description associated with the slot."
                } ]
              },
              "slotTypeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BuiltInOrCustomSlotTypeId"
                }, {
                  "description" : "The unique identifier of the slot type associated with this slot."
                } ]
              },
              "valueElicitationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SlotValueElicitationSetting"
                }, {
                  "description" : "The value elicitation settings specified for the slot."
                } ]
              },
              "obfuscationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ObfuscationSetting"
                }, {
                  "description" : "Indicates whether the slot is configured to obfuscate values in Amazon CloudWatch logs."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot associated with the slot."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot associated with the slot."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and local specified for the slot."
                } ]
              },
              "intentId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the intent associated with the slot."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The timestamp of the date and time that the slot was created."
                } ]
              },
              "multipleValuesSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MultipleValuesSetting"
                }, {
                  "description" : "Indicates whether the slot returns multiple values in one response."
                } ]
              },
              "subSlotSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SubSlotSetting"
                }, {
                  "description" : "Specifications for the constituent sub slots and the expression for the composite slot."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 289
  }, {
    "id" : "32973b92-0eeb-310f-9776-1279ad5fa58f",
    "name" : "<p>Adds a new resource policy statement to a bot or bot alias. If a resource pol...",
    "request" : {
      "urlPath" : "/policy/7qfm7grov1xlznn45m88zoa1ak0l35vigkfmmt28ot9n72bqakzqdpujvma1pwuomt7o0awqh620wiqnah9b2432lf/statements/",
      "method" : "POST"
    },
    "response" : {
      "status" : 486,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32973b92-0eeb-310f-9776-1279ad5fa58f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 290
  }, {
    "id" : "14163122-df16-37ac-a3fc-2e8ffb1e6454",
    "name" : "<p>Adds a new resource policy statement to a bot or bot alias. If a resource pol...",
    "request" : {
      "urlPath" : "/policy/qfwxbenhob0lfehyq2veem3epie4ulfqgva5yckma8ej0fgzyod3e140cx5aaup8fgcb082mq61m5lyjo0fbve8q27bddzj7yh0e50h73hqphgy19mxyx2kwodmodfhu1aqj1xq36642mucz8vxp0c6egu673jcbpb3qsuo4ich9jl84yelcwy85d25r3z3d5gnddg3s3z93z3u3qz5us69jkl94xa94aqibeo7ius9noaza42v0a1lxnwy9128nvcvi6soxumxm4qxg5w5xkrx7eeyzrpcggfjuk0if8h50o5qx08fags3dgj7hzc7ueld4dymrbxo8ttl1trbys3c05cpccqyh84qge0ikgzj65zec1rj295xeqb1rg9ypjgq9hb80qm2z97t9k275fm90qa3n1r6imb9szbnq9mor5x6mtrx8ii4n15n4ttugi3e40gz6y8q9wwuuk7vve06lcaw9ijavejmx39coo682sy0px81xvasz3jfihd63e709urv0fipt8trch88qsu8ysoo06quor8d9oyi2sc6vflt1oz4z7dw8h3qmpjj2o1pg8mf2bayn/statements/",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14163122-df16-37ac-a3fc-2e8ffb1e6454",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 291
  }, {
    "id" : "db337740-8f29-356b-83ec-8a68a5e8a585",
    "name" : "<p>Adds a new resource policy statement to a bot or bot alias. If a resource pol...",
    "request" : {
      "urlPath" : "/policy/rraz38rl6qjyttgn8an5zbi5rdia0d8nsvuan3btr1jb4cob4s9y8exvq4t0r6o33jgv5e5dt6aj80442wvnbqc2w0h7zqhi61noo0q1lloefhvif05rqso0bwayu8r0d4l0cf2dizh68aat2f8upj8bxwkpy1vha4h9tx8te2hq4k4hd1u1ex1w6s7hqxtp3p7r0il0f40r9fqiirl3ngnf0k7ym444uc7awzskugqbxm88mb7l4k5kthgy7h959ft3ece3jefy0ed2xf567qvfrlarg03u0oxlc1q3hqzaoydiny0326qw0qdthf3d5ebdk152qgqab4tqv0yz882zsrif3k08i9jqlxmh0g83wa54ih5yx3mo1cz9o33p45t5ksu1cziboscusdkli0veltdci68xjfpxsvwcp4ymhfb11se3uesj5yczhbu0j57e52hvx3dzpj9txflpd2hp1gdbj31yfxshbt1dqsz2skjqr9su7gkap12zel27oialjzzwl35o8h4ow2uupoigwv4f9y9b28a7j/statements/",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db337740-8f29-356b-83ec-8a68a5e8a585",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 292
  }, {
    "id" : "9ff1aaa6-acdd-3c35-98e0-2604cb9b9faa",
    "name" : "<p>Adds a new resource policy statement to a bot or bot alias. If a resource pol...",
    "request" : {
      "urlPath" : "/policy/j9d2k8gjafel5xf41holjynhhhiip0uda4y5qxk5euwhisbt4h3cemen1m4dxtcuad70143w5wvedmbf3w8g26mfpjmrlt3e2gl7lfymoqsnb8vif5s5ikwxsaw0di59nu71eonc2vjgy536k5ad9qqp7e5fod5rvijmjov3o3ka7bsvkejp756n8zep02v46w3b6vb95b2tyck9h7rsbkyvuy7tzo78mtfkl1uka5ikfh9cbg97rtkh2unov9d3qww8ihk2evvfutq4d5j99qvxvnzpizetj9m3nkppx17raunufjac2ovn6921xrwqv0p2dq1bct3c96ok6xhsnvxbu9hskxxbaas917dqupm1d2lfxnimmrzpzik5ncs276cvdvvxwgynk2vjxyddwjb9ql2kixx0awwhaxlj1v05wmplhdkmdh8gqo16x806b9ayjqme1d3cm1eflk1tcfmgoxqj7lyug8nf2qe9dmojqcg32k8hfhha3joe2o9l69ez2tdo82jjgru3n37r1d96nbprgszonohfeij7ze4zsy1okjf6phb9dnybnujheel7sux1tkaw21rvmcjm1qtxc1my9y9akmh1ipycandharamhctxbw50p523bsdl4kqwu3ybvo7fc153sdagovykrdm3lnzgic82eopmf5663vnkfaylpi0ainh9r5slnbifzzn13xqx5trzmk08knrzbycyp0i6b4d0pp48iglsgae32tlt6ggh5v3tzlz6c0t54awj4ixd1jxvzfd2ullixolb1bmk5lyh0uceysi5sklx0yfqu88hurj3383m3trlckbxbhq26lc8l44z9r85gz1asie78f8ku/statements/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ff1aaa6-acdd-3c35-98e0-2604cb9b9faa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 293
  }, {
    "id" : "75b71bbf-6110-327a-bb7f-85b0dc08a591",
    "name" : "<p>Adds a new resource policy statement to a bot or bot alias. If a resource pol...",
    "request" : {
      "urlPath" : "/policy/2ze884vfrydfn9mp1bz3dg09w1k9zzisbwqbu4xj0xvt7bv11cui3ti8g0fes2jfve9gq7grs0m3as9shxreqt6mc7jt68uy0scz0w98y65cdhf0xn029vbn9855ymo9b39tlxrhricguhm2wt6y8gpf7u5vr0t74cd9vnf476mc3a1qjbm3rcddq9ra5lgej8lbg9cci21rgddk2dmsz6rr2u8iwqp4jdv0sckl748evhtohzwazva3ibq4xzyr5p5ftw7m3ab0qv26guyknjbfzyqn78o5trht1huki6yho7ouigue8ldxluho6c1r37pxwug0s2l2ysaoobu1hmxqsaxqjrt9uanwc4a4xlr2efg3ymgcqd6z7o4xdfnroq54fqslsreum8j9wpe0jo1u3goasy497h58c9xzel556y7cdcu0ltdswg7owc3vz6xdjlh2b58v82bpyc7cv8v9q2zkajhtyx0ytl9in5wh6g7xv74tl6q4hoa5d1uf2exoxqdf5z7mvbhesr3isnrncsqg5mlwdty9rsggipqfk4ihpzn0zrxl0ppjrk2yluys4anz6i13rbcxxvwemd9h576hapu3uu12ip5mtb0z6b3wxfawdy7lvb13mxckq4jafxnnj23xwtextnkb5hmf2f9bvya1v8nxnxkcjljcel2clswixfas1l49qm5uyqrm0u12uimd3u74w0d2x4w4dsx4upnr3ma9w4t54jxr75f345vaaokb2s8874oomsg7eaxltv1fum5vjyaz3qxxj1duxjfhyx1vz59alug7dcrpt3u3oeoiurr1dq1e5z5qi9swjl36zs99covdxm8m5mg52sdypwgvf92ysebhct4766tirsq8hrbzlywjmjimqe4qwrurocc3dv8x5htmylkjgj9re04krf63j3edchc1f1dn3geybj3jd/statements/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75b71bbf-6110-327a-bb7f-85b0dc08a591",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 294
  }, {
    "id" : "3b4069bf-6520-3cb3-887c-e611f3b06a85",
    "name" : "<p>Adds a new resource policy statement to a bot or bot alias. If a resource pol...",
    "request" : {
      "urlPath" : "/policy/2segyyx4gy8fd2sszoasb4ww9ktlx3738lufibyj6yagsv3u9b7tu4zj84db48os42q6428vgnsy7yo39m7723t5uukm9udasqe53yq5igwwjwajhz9ajd8g5m20wd5c2ljycw954kt7awt9j1kzmknqmhugy4h4737v1k0rh936i8qncki5t2w9hdevp8c4n47sl947ivaq7dgb75yxi37r1sdonp7qqo7coc0wr4d94ikmbaredtx9o97gsmhkrknrusx0cd2u9hat3xflpiyjw0oamwrv3n4qwnu50nkmuv9ys4th1mlpud8m73076hgs5rkd05vcz7y6et1usevjxcf1yi14ouk9mw2qlr3hhag94r7x72vlvmhusyaa8mhilrlmcpgbz0bbsjz1g2dz6u6qgv2pgh1us4k74r652dx3cnd26droffm0mwplesyq230mzthc84ffd9td1keumb5wqqg93dixkntjjoxv7d06rjr1uq1b6qvrcxjjyenk5xeqe37fqilvd3vjgl54xeksxk5htq3uhgwyoy1eqd5r9kt2jmtalwg8sc2cidw3gh6tztwn6v6fd75v88vvbdwmugj5y38gvk8apwssar8hia3l5138ig6y2poi1d1ss98sjz5xqy46re7wke6pcpjhozk4qpq027np5bsy3k9uig55tyfy34rm4e0n256jyv3nbm300ogldftna6vmcx3ea5jf2wvtagwfoqjbpj9f9rkz1yybjg9gnxqj7uk7pf9992ddmtfny0swd6nwg2z96p810b8434nd66vs81brnu6mr13o2abrcay0g8xd9umbj234issai2e2d8hxej2xj80zij256nh38nn086mj1uprtyt9w3pwxjs4rm74u00dgrpcz2ar1cdiv4l9oir75y91r4sjd48kw8bh/statements/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b4069bf-6520-3cb3-887c-e611f3b06a85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 295
  }, {
    "id" : "10a718d7-4e9c-3ef6-9247-454ea7e6ce07",
    "name" : "<p>Adds a new resource policy statement to a bot or bot alias. If a resource pol...",
    "request" : {
      "urlPath" : "/policy/cjrf6iryv5/statements/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10a718d7-4e9c-3ef6-9247-454ea7e6ce07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicyStatement"
        }
      }
    },
    "insertionIndex" : 296
  }, {
    "id" : "10b2deba-b78c-39ba-ac47-8930a880ff11",
    "name" : "<p>Adds a new resource policy statement to a bot or bot alias. If a resource pol...",
    "request" : {
      "urlPath" : "/policy/8w7hz5a00m4kd1c6cajhhayadsieuwneirzhu9wc912vjnct1tx0ikqbz3olzccjfv0yqdoethx06fbbm65bh8wb2tkg407zt2gwql8eoilz2crs34gpz62f2ussp08x291fyq6bu8u487ez8xcyrmd33lwj56e7846zvf7izewqnf855f7i29hapcqmwwu1wn00pl/statements/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"revisionId\" : { },\n  \"resourceArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10b2deba-b78c-39ba-ac47-8930a880ff11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicyStatement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "resourceArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonResourceName"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to."
                } ]
              },
              "revisionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RevisionId"
                }, {
                  "description" : "The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 297
  }, {
    "id" : "920a84f3-1427-3cfd-88ca-8a184c62741a",
    "name" : "Replaces the existing resource policy for a bot or bot alias with a new one. If ...",
    "request" : {
      "urlPath" : "/policy/zfhffhria1i49pspmxu6ghwm8gun0n41ojtsb93xwezmf3qn3reqxwmsvwedk4r52oqdyylmmexu8z5vycwtnlt4qpw3n59qba2i4peru0dj4ejhk085yb5ns9fgvjsqt9n7cquprsbxs0st37f9t4yopxopsqemvhthksdvlm5ck8yqwxcqxsgldqdg7sda9677tw3nwet5cn82wuwyu0bwhudz40yugspeit0fh73j30h7aaykn7nan2xhnopxa748hgvgi72rykj1adew92rbp7ovz8eg0rjbv42t5div0ike43hfkhdf2f7g1txfroimv6bch1strfmkos2nvzrd2oxswj2iajayah8vmc3ggib4bgufv13ehtifqp8g52nmo6bv0ssdakoe/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "920a84f3-1427-3cfd-88ca-8a184c62741a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 298
  }, {
    "id" : "2e785ef9-5ea4-363f-9bf5-2740fea23f26",
    "name" : "Replaces the existing resource policy for a bot or bot alias with a new one. If ...",
    "request" : {
      "urlPath" : "/policy/ksx0lqe81wcy7zwsk3dzhjro2z9nawlyfq8s183krlwg13rz28i33yblxwtygj9uwzoc1miqwje9x511gfpp70vlhrlluxe70gjayw4qfp836czhq3i3h4chmuvg7ia4thvdvj5natowhox8b19c2quo3rd7si6y8pjx9p55059vwxiqt9n4uig6uvzrgahwx6vpflbh82nnqgniajumzxn99i7ak9t7z6bz1csyos3ic0jwz7o476niy4ylnj3egubmccnxieff9eo9go85q1f0b4p8lprivpse3c1qrt9ymck9qvmdjncl5fys7hgmzlwb3g6kfdgq9krbncyoy329klfv8lvzi89lf8qguekt1em3n3we4h81wu7u89gk2rmwwh458gxmbsdbwjpnc9v81d6e0f6e4q70hexrde3dmosg9hs3b4fbj4pxrtqxgdk1u80c9aiaftqoi1sqk1j2u5yc23rcrryj4h6dsxzx1n8f6jnknw84dhvg8nr7f9bqifz9xqd2w7yoiftlha5lirjbynvfsz1aoha1ygg9dw3kv0w19a0239qrf2qs4pznvc4oha8enuk7bfd9047ryh83nw616mti2zh8j9xd2hor7wlb1cijdwhavi4ftonliy058lfqn2s3brzc0b2vde2qmzrx3lixmdaox6bpesgtnzv0igveqqtptrhjeicmj1bwcjbrpvrh31lkfb9dghk1nuzrsej9sd2q5p1qnsbcvthmtdvrjn6xkpsmvrectpgq6c4ftqd2y37vqhqdjg/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e785ef9-5ea4-363f-9bf5-2740fea23f26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 299
  }, {
    "id" : "a8aee0a6-a378-3abc-b47b-338eebd2ec3c",
    "name" : "Replaces the existing resource policy for a bot or bot alias with a new one. If ...",
    "request" : {
      "urlPath" : "/policy/y6mytgp9ki738ugh99ibqc1i199p6zbpohuehrg7k6cn1e2y4jp8qdh45uu92dpvyoucurubp04x5sgfookch5bkjq3fz7h7iswpl8xjhcvb3gjcqk2lw9ysq6rib2shxcrnxzew5xvzbrzssqjmqv38gasdd12wou3wv74khpdjynnbnkfnc9mxfytuq5ed1wcm9sdb9aea0mcy78a49v2z1l6bcl571v3jqetlhtlvbo25cvp19r89c80yrl7fcnyxri2sg9moljlzioyi97o4hflempz19gv2aj2b0cx06twl91fb5qxzsifidlm7a5lg7h1gc02q9mz2k0j9nlg215ts4yfger8xtdhznqac2gcu9iaup6pr0bz78bn64iwowespaurhipx7678nz7fn95tzl1ap6a1o1s6mmzfdk46eh3uswvfdcjbgi6kayew77fwh12ps1d1i05utsrlewh2u34st907sq8u20gxioxgh4me3w6s9bjctxbj1zacb7qsmvifn1fzvt6903cpnvw3s3dors82n91tt2zzjlz7x7xn5ppnf5dmd9ggq881etdqqx6i2n5oquacbv243ie53svrazsufaz7yvqnss2ufmb4g56a74ec34eg99evuxq7oqghx3losryg2x9d803kjjiwctk5fxj7x4salkez80wavdr62yrrcbqfa9e1qisywjxqs4a3bn845dpd0eb7awqdwfyq7xjlaxwryq4biioxao2iec3b9t79ltqwed74mjm2znswlyehg6bg17i79msbz17r3at31q0w7iq17snxtouw5lxjusp1iw14i9rpm4tknfvo96nbrdxhps80dam5724x8mfjeegihvmy299l923k6yj0od4v5br4bspkt30qitf6i529a6tdzxatorplxrbkofrti568baz2vm7tc5tkhe0/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8aee0a6-a378-3abc-b47b-338eebd2ec3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 300
  }, {
    "id" : "e8cf3797-5b7f-3899-b3a2-25f3184e07a9",
    "name" : "Replaces the existing resource policy for a bot or bot alias with a new one. If ...",
    "request" : {
      "urlPath" : "/policy/ltfide31uga2ibb95najtfip3a817g8vlks0ln8dqwx6th39pbbyfvb6m3cy5j5m5vxeeqfvzhjvioysyqys/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8cf3797-5b7f-3899-b3a2-25f3184e07a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 301
  }, {
    "id" : "01fbe79d-3704-309a-8434-08197679dc8b",
    "name" : "Replaces the existing resource policy for a bot or bot alias with a new one. If ...",
    "request" : {
      "urlPath" : "/policy/7ixntk8qfjxblqa5nf92ihgirntn0cuczul1fsm3yme0akfiseupeq9m0vnjmur220xje8fui3m5niduf3o5g8ga8632sy6862fzt70rfdia5hzcjfne8gn53xpbsk4gw5zyf135kuqr8cqp1y75um8k488un1cjmtbduaziy0yttvsdt4nlzlvinvl79oa88u9fp357cpm2ezfnmp1ltxykph067y7x9cq7v0rjzb1o88qcslfjxyniigx33yaz2jew2bo46npy0wys0spqzdpzhfkrypb1mn9vhvw7elwwk6xuiph74et02dccxmi5yvqpg1ormxyyyf5bl6lwyc5pujaka10cyxzvvnvt7v1d0p2r55u3e7nipaqeriw1d3ijtlxtdnv3b72ts8kr97juek03qruefifnghmyf0x606runhvbl9zx2u0d1hukdismv2rt1sn5el86tpiqk1ddcw9dzi1urcrwutfysdh889e43c75c28w5qw0r56l4mhy10ygcpq/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01fbe79d-3704-309a-8434-08197679dc8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 302
  }, {
    "id" : "11450947-18ee-3896-8070-b8a8be5f87b9",
    "name" : "Replaces the existing resource policy for a bot or bot alias with a new one. If ...",
    "request" : {
      "urlPath" : "/policy/i9mh8m2uytj4xvzlxzo51z105bw54y8e2exl4bsgow95gilkitu7uyhd3y6ygqnb3sntixfl26gn2z4wkwtvtbgekrjroleu1g1mhbn8zqofxhjfqr7hkyxcw57b1bwqfyzegt26pmgs7plx61y1qwg3gkx2x5q82awj5kuqw5tazu708sb8jtxqg3yg1yu7hgagr36i16v90krydm90ys9aroq1x26h1srtmmrzc3ql4nkz5gab9hnn6hk11u9wdqkjyevkgyxnudbd7zcw787k4ry5e90069k4eysjxwiq5bu5nd0ro6uaiva8uganj3xikftpk5zl7zn2avegsn3lsn9l2mzaduhwr07hpt1ajktuox6f7p2gokreykvc3spe7dtcnk7w1vpm82zxtvwwltbvf5jvufp4k3rybyb0xviij4fxmufhh46azda8a4haimdz8vnonx4p0mcm2sxigg08w9grq78kp44e3is2f0z48bqqlp2szl5qwox7ew7zyfrbrxpw9cwmq530frcvae5v12a5vbmebvmw9uc0tiq1f61p0l1e4pr7lkq0hsxspn6zonv1zxtu2ntb1gcmdgh6yy69f27kwvtp52bkf51c4srcwyeqfoswii00qb2f0odlz40jtfjpwhz7u7hzflfurf259q0am/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "11450947-18ee-3896-8070-b8a8be5f87b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 303
  }, {
    "id" : "fb3a702d-5ed8-3974-87c4-df435739eee1",
    "name" : "Replaces the existing resource policy for a bot or bot alias with a new one. If ...",
    "request" : {
      "urlPath" : "/policy/teqhgu1c25zbw7bn6ng46yqk44x4vgf34mog1t019ow2aql9slplisk1z1h5wav51zbnpmzn6ofembsbhqbz4cdhw5mdcjm1j5sharupedmfb203uupjljsa4hgo7t11bc3nf12oh889xkygy86kratq20u2t77l9igt4dqby598xn2fikss4v5d0r6q61xnoi3n25mimz035sziuvl1vco2796yzba1p2st7jnttf7vf09r5df0kzckebokvsiawmnu1thtu84gd18awp4sry3aqlicaa6vlvgn21zoyycmdxp1bw1r4bhhje94vkdyvwi8gppx8rf42m0yuh67wsxbxyxad6wh2unp27j1a0tbdqgsw5vtyf7jjm6jpgmgcl5tcuaiq0evwzho/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"revisionId\" : { },\n  \"resourceArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb3a702d-5ed8-3974-87c4-df435739eee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateResourcePolicy",
          "schema" : {
            "type" : "object",
            "properties" : {
              "resourceArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonResourceName"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to."
                } ]
              },
              "revisionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RevisionId"
                }, {
                  "description" : "The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 304
  }, {
    "id" : "ebe546d5-4b45-378f-8169-4b53e1da63b5",
    "name" : "Gets the resource policy and policy revision for a bot or bot alias.",
    "request" : {
      "urlPath" : "/policy/x3y39cp36h1780udvoaolwqbetzem6zgu39jft66oll8j5i9vuqqhlb8q30md4x823lcm8vb67bk796eg22wt2ua7mt4oy52x4i7b8gizjv423jlet16fi206s6uoonxmuogt9tcxdmegfot9iovalnnz6rdcnllbobws3dxiobwgxjvcjxxj43qaocq9m97bj059f08khdo66pq9uxfkpgqrplfelrbl418zwkt14qkfx9wu0x1pjnu13ryfloka0ginmj2qpy6iytt0h07tvrr6gdplp8nfeg94uegfnb0v6amogahczd95tbqzpfjy9l3erw6kcycn3zbk73j2ypj1l9rih05gw7emte1pyck649798ft0w2h4y72xqo41wbwjwck6agzyu4yf0jrey5x86p64fr9h9r3m1thnjygpv3la3213q/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebe546d5-4b45-378f-8169-4b53e1da63b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeResourcePolicy"
        }
      }
    },
    "insertionIndex" : 305
  }, {
    "id" : "186a4218-61a7-393c-93e4-f2ae96ba45aa",
    "name" : "Gets the resource policy and policy revision for a bot or bot alias.",
    "request" : {
      "urlPath" : "/policy/c92rvrk1tcjr77ey3rxg4xxua3ph0hx0mrioaz00ftr7k1ipvcuvdzwba8i0bj8vo3g4lnr0yc3vt3t5kvcyft8g9e62gj5723ujgdly1ovjwalp7pfiwti0erzm1aw3jge63s7ahfnooxljkjyo73skpwucx7ewc6a8zdbzd4qhhl9s2bm70m44b5b84mympyg0yrfimu2djd9nd2nrmm93cy6uas88pew0lrbmbeluamid7so0vgou3nyfvc4bouwwt3119lwjqavqtcjm2zsdpvt63nravouq4inkbte5zg9y5462rzdvh8pr60wv9vvb4l9imzpy5160rniyatzp48ep0nrb3znwn3ht6jv4wg4omof43dvydhyf5d5hp76gzh9a619dcayobts7qp4fp5baedxj2xnzam8xboq3ulluikbrbs6gftqn1kve3j7l2qexsagxwogf9764ir55c9bzntjqr62i9ukjd6lnzcnersiabka1oiqhg4ium6gv5hde7v62f0a46k2arekhulb516zrijt6hrhfynbwlpqhqrw20mbw6tp302iw0to1g18atggjfme88x6k37cbxp97a1gu202j877uxncuqrm6ge97kyymrdjd8ew9gojgss5ot8od7pqjtl5rj2tkf8yi8uehe57ssk6gm34skzj63c95hrinx4o9n3utem9n3nbqgocze28wrau3sqnwibfx2slufxeizef96v0iidd45mhbx6amujg8nmafrsycvl2tgoruqgbcst8zhof7k2q28w1tysph3z0svny68o12l03hyv4n11j13rjopqbh7g2k2zturkzu7tgk2k7gkwhqu1u30sj/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "186a4218-61a7-393c-93e4-f2ae96ba45aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeResourcePolicy"
        }
      }
    },
    "insertionIndex" : 306
  }, {
    "id" : "6281e4ff-5c47-31cd-8c22-b9f3a3ebe231",
    "name" : "Gets the resource policy and policy revision for a bot or bot alias.",
    "request" : {
      "urlPath" : "/policy/bktlws7v40kwtpoah6y4htuwhmj4rbamibxq3p2d2whvbdh9kx4a4u6tzlr06ycu2f32ke8tbzs8wf24g4e1ckh5f03qmvns1l5yjb77icekd1xuvpyqdddyw8b6cfv3u0ddto03drm2hsn66euhpjo6a4naw2wzxoe5uhmevl84tw4e6nemnkj7d4ggtcqouid4l2j20p83llzidnksdaqslpt1clciktdy73llgcbjwfaswm64b25mazf88pza952kzjtq3l4z25fxcp06e4v340wi2jn2c3k22cb12cj04l26f70xiolhzuanxdg4tjworgyeny9e6dpi744amynu8t0mil27wf9xbooxruhcfrjtmpzgmmt4hcv881g3h5relx7eipbfrxv76ex4fkquzjmts73gdxqeqh0e8ezang28yizi9bgge359ywnaa6fmtlvctte2jlbx1l4af9xbafcz048e5kle7lj4mbv3ai88lf4vi8mt0k4vh7l7eo0q41lep7m5lw3zllfmltagqtwf7xbkx19hzo5afi43v2pl83umpt3z9akh2m2f6on8cg34tzoulueq8fk45ijiyosx7auzqgams8jtxu2/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6281e4ff-5c47-31cd-8c22-b9f3a3ebe231",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeResourcePolicy"
        }
      }
    },
    "insertionIndex" : 307
  }, {
    "id" : "b2bbf6fb-f2d3-326a-b5b6-ea11bdfb5033",
    "name" : "Gets the resource policy and policy revision for a bot or bot alias.",
    "request" : {
      "urlPath" : "/policy/qzhjao1verfssdy9j31yqxim9nesw54zqd9en00niiwjnffgtuksoadipog83f42av5tryggoqc5qvb2ltoerp72hcjgbqdn72eja4y4ng0mptkas51kjbpi9o0dh8h09hbts2olk23ok8gylcelg7mq037n2mpzz4a2d285yamqeafhsktt5n9aehnlog23t8sg4apie8du11jaqsniopsas2pgw6nozcxnr8ny2630v25b7lb586aelvx3u7k9bw0wth289yllip63txfgwisn9b63lc9gak6r14m7cfm58hdyn3z75lsrp6pjfxysexuj0kkddh0zagpo6n19c2orch9gja0x6i9ke0ahs1x7s04d8yzfnqujfrsh026nrfzfcdqvwe9uym25x75xvtw4xkc7gqnyshz8wbr71g5osx57n2wlkrt0jkd11vdi5bf2r51swwhsabf5ojseyb9ozgs0wy3jz98qsl4csw9zn2a2or96pfl54z54amytyn1jd1h6m2o09f8rihmdk1vt4/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"revisionId\" : { },\n  \"resourceArn\" : { },\n  \"policy\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2bbf6fb-f2d3-326a-b5b6-ea11bdfb5033",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeResourcePolicy",
          "schema" : {
            "type" : "object",
            "properties" : {
              "resourceArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonResourceName"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy is attached to."
                } ]
              },
              "policy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Policy"
                }, {
                  "description" : "The JSON structure that contains the resource policy. For more information about the contents of a JSON policy document, see <a href=\"https://docs.aws.amazon.com/IAM/latest/UserGuide/reference_policies.html\"> IAM JSON policy reference </a>."
                } ]
              },
              "revisionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RevisionId"
                }, {
                  "description" : "The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 308
  }, {
    "id" : "2d1ed49f-0484-325b-8aa5-cc8180c95a22",
    "name" : "Removes an existing policy from a bot or bot alias. If the resource doesn't have...",
    "request" : {
      "urlPath" : "/policy/jmoo8uobucznmiprk4y7odzkw37mx5nktuuh1ylivlr7fotjq1xrk3kl1ei6bhy2qd39kb7tgrz364cn2ztlrghg7w8oxhun6s40cpwgh2jss96hvkvbi3q00dgh8ozaxwc7f6eru60ddkzbq7u3to3uytvf7r9hrrrlyl2y73dnxgzbd0qk7xv6js0wour69nuecgsw5h3onmdve3om57oki23wpcreyeoyjnkiewtibl3vnkny658g7z99y5j4he5uw3a480odvirpub43rskhmv1psidmspihrg622djvhkjji0mp4zhsgrsbrzvautf3j1jsk4y6a0hyz7ext0tpod9wf3mdk4e5xb35uj6hpt62ak79pjdolas6zrzr48eaw9tmorq8vw2jpbdzh19chiif8y8304seh8kvrce44x9oedprwt96jq2651qbiz6lcb131z3onrf2k42r7oga8wxsbrktcfsk4z8o0ahw9ikdjl9xemcwudyoytc2dz4q3riwb3nwy78dfc1ccmwwmqte2mdxen986s9oq4th5qia4ia97p71153emryslms4gpa0yefe3qsz3pt2gyi8aow1vjhlomfojj0b9qmvs7ghy25hid2txtmak7g5xqmvcl9nhy65z3c876bujkpoiq3huv1simzau8o6k0271rq8hb63jwkx6tf3laipiyl3m881sn6lp63ocvmmsfrzbw5uk8sixedcko738u6vldrecscusdibnq1l8e3xne5kz8re9njmijmcu8bskahxwy8xxk73lq5kcpl89o99jxg281cefo08cuhc6tcjmmkvrrem5bjsq/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d1ed49f-0484-325b-8aa5-cc8180c95a22",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicy"
        }
      }
    },
    "insertionIndex" : 309
  }, {
    "id" : "cb70bdba-3275-30ec-981f-5b70d8bdf53a",
    "name" : "Removes an existing policy from a bot or bot alias. If the resource doesn't have...",
    "request" : {
      "urlPath" : "/policy/9i8myh93mlxgor6mpqzh48ealuugmz47oc9a8r28qypme4iwqzazk906kwso4002sdbqw7p1dbafrv81al8f5ox8sou3yqlw9lhs6ru6a8a2w0owegsbq398wvvnhgagwsgnj67i2gz0fr6f/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb70bdba-3275-30ec-981f-5b70d8bdf53a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicy"
        }
      }
    },
    "insertionIndex" : 310
  }, {
    "id" : "983b94e8-245c-3c8c-b1c3-bdced025b3e1",
    "name" : "Removes an existing policy from a bot or bot alias. If the resource doesn't have...",
    "request" : {
      "urlPath" : "/policy/u77eykc3wnx821eltxz003tm10lr5zt80p1p3ux2fcwjn50p64pdal4c5icxinv68y2hk4r31cjk11pm2cu5/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "983b94e8-245c-3c8c-b1c3-bdced025b3e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicy"
        }
      }
    },
    "insertionIndex" : 311
  }, {
    "id" : "fc7e85ae-6826-3bad-805b-2bf7c70a10d4",
    "name" : "Removes an existing policy from a bot or bot alias. If the resource doesn't have...",
    "request" : {
      "urlPath" : "/policy/d7hvan2427m54kfmqtem98gymllclbbvcndxxdxdpm84v18m56od14k1nro1b9crvf6b4k44qvvjxqmqmp0q7yyiovynbrn0jm7nd7ynck9hngsq9u8zd39ckuc7xndszphqy6rlf15g2ki77watp1an0j6h9fdak81oi9gnlbj6tdh4c0soaa04cykcf54f2ixs1sczw2qsoeopo9krc47mjtvds3wqh7i8f3gnl1s1bpweag7jz5o16dgkqosfwgkawi7zvsrrqswonw54cb6ttlqt77uqrpf3ttl5ngwk558inyma906vv74ou62s4p7fwwb7ltgxx3to5t99smjqpvaw70wodwkp7f8ww25ewdiby2cgo3uafuja7w9yy712pqdo1ck20h8qtli0xdl88v5ywkcux68m2d10wa5jwma9j1mxfqzy5rykkb2ts0bhigxn0krnog40oeeb2xlzqazsh5a2jukjyoshqgcj13fkkhs1bulk23opdqpuo7hj8vu79o3jhnywqatdkcjjem9wr6ujd0zuq23w78vm2cq8vg1xn9a66gi9v9pri5ywr2tgap2tzt61qjsy3oqkxprguvz9t02xj1tnqa6oswbtssuf0xcesg8gisvekwz0u0tik4krtsjmtvfmmkviaale90egrrln8ck8ky4222lkwnjdylcnti5ayzb5np0suvn5e12crgj57tu5q05p2d24d1ehkvfkufphddm2tfd3z0bp4ltdwquk22omm58mimr9mhcc7bvqrxkb7gmqtej9p68qwi9gdeww0y0y44ygxsjpv1ss2cr0z1jgnmnwbpwapfasfi57l3lwgcvorp71mr4x373n1d0064pxlt5m/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc7e85ae-6826-3bad-805b-2bf7c70a10d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicy"
        }
      }
    },
    "insertionIndex" : 312
  }, {
    "id" : "3f571e20-2b71-36c1-a511-9907f219dbce",
    "name" : "Removes an existing policy from a bot or bot alias. If the resource doesn't have...",
    "request" : {
      "urlPath" : "/policy/v3q4mj1wzkcml01iti7w10704rhm9b15mq1812tt6vye7b43l2224j847s581erdowhxse3c47h428metcof5s5nqok24knlvyxfgik8tgp8vdox9z734bf9dnyhve86o4di32kuldeixgltwlte99uzeosnu7vzw2liw6f9o7tu40v4swlg19pw088efzn9dz2vkf8q9ags1hfiko7xgn5d3ngwkfh0g4i5ag782itk0g8i7zvidc6qecn3t9dbct3sr5ao5qbevw45q3x10rnaaphpp0fazi8kdmjx00ue4pkbylib9o5ikk6k8lay82xx7cn4tmeozvv61d849n7l6aa23dvjyz682utc9pokrfzh0nhwo1i7d769pp5cn7fjh862gcmqs05ejvskh5yudi0wzdtexb1zdrqmm966zvcxekxms3fv6xmqcfnwuuet9ac3bmnw32irs7gr60sdwa7p09bzsqc3dttdfkhph34grwqwu729bunckm0ikp66qlp9ab07kptv2i93k0gy3wq77eneuw8f7gfvjicr8pqwsn7m9jfdvykh2aviq7vgho02wzx2a1rhax7vgpnh9qm440hbwtxjb5oz7o4ytzjr1950ahk0v1zr5nxx88wmtxupq2so6z7w7q/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 204,
      "body" : "{\n  \"revisionId\" : { },\n  \"resourceArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f571e20-2b71-36c1-a511-9907f219dbce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteResourcePolicy",
          "schema" : {
            "type" : "object",
            "properties" : {
              "resourceArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonResourceName"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy was deleted from."
                } ]
              },
              "revisionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RevisionId"
                }, {
                  "description" : "The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 313
  }, {
    "id" : "320e5a69-4cb0-3f1d-9f47-edf78f0b4722",
    "name" : "Creates a new resource policy with the specified policy statements.",
    "request" : {
      "urlPath" : "/policy/b4vhd2ylvqyswmyqh5o10jpuugtxfi6jm1mpj3ajc1ib8lghh0g4ykabd7692gy6zsncssuzkmahf6a2s4o3nrh6fsyaa90e1lgdra1zbrify8hozzy3hd28zmf98qtlyx7w1pg4lry404xler8vndsa0hmuaiccsi2ih0v7daedhmhrpjcwuxgmxx083mabgmfz7sx68dm9httwzwhh0a91rnjjw2ilus4xvh69mi28oaea98y2f3sjq954n114ebsiifwezzar7dg23o1wf2pf5hx27wrbzqqef1w/",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "320e5a69-4cb0-3f1d-9f47-edf78f0b4722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 314
  }, {
    "id" : "fd32883a-4e18-33bd-87b1-f65950cea919",
    "name" : "Creates a new resource policy with the specified policy statements.",
    "request" : {
      "urlPath" : "/policy/syftlp70ppaq1l4h6qsz9tvhox9vmqocome7crsooylsgaf4smjsllspzgm96hi35jh03mvbwi5zgl62ptzyodu13qed4qejot33m0giol/",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd32883a-4e18-33bd-87b1-f65950cea919",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 315
  }, {
    "id" : "ff1c2c8b-690a-3886-b570-579864f67962",
    "name" : "Creates a new resource policy with the specified policy statements.",
    "request" : {
      "urlPath" : "/policy/c53mxw61x47em1px4xlwfuwkid8yxhdbahb5yv8ijifml3ohowcmhy2kvpkoyiw0n9qve5furxkvpwtcmp1mxeb0xz0g6w76iju9iryzg7jc13fygv53pdi4lnyfv61ds9ubg862gi2x15erzu66rz7obeb8blfh5uakmmir5luz9qzmbydy26nrim4clko65blc4mr2pgo125alvne3v8q7ohj99spbf6xfwvkjgru7j3ual22iwevmv2ues9hm8056kiyu07uyo8kvv5nav3z5shjohud90m15b3pzjn6eabrq22f4w4tpz241o1l57nt76d0hqeoqglwdps0bxlu8j17tqrgitv5s7dz29uammqimibvr8p9jpnezd365h2x4w3josy6msduqn3xd01rmhbnfc3co4clk5q8xqa7fjf3txs0palnpnwg6cwiky2xcgbx3l7sxib2jcje5s4u7zc43r17cnitbr2ezj7fzlf23kbqrc7jmc6ifbfcmuitddysxp4z9xssz043bian4k7shnqct99tb6835atzs1xr65e30g4tj5d91otnwmvpon8urbq5394ov7xdmweqhr6144tf5px5cvhivpbg2tujoel8yd0qjggs1ue9m4hecugi1ygku2eb3df6fv5weqxlce3g4p0ib5t7cy2xez2ct9hupfa0cic62d9i4qv26jj8y3rnz0bk2z98lszgi86aj6wv4dpiw0n65j9msa84asevu2f5sgt11drwhuqfychxnvvi54fmt7wdlif1ldirvqzonvuv3kokebt3fu5/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff1c2c8b-690a-3886-b570-579864f67962",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 316
  }, {
    "id" : "85dab3fb-b79a-3c8d-ab11-ade5ba22638f",
    "name" : "Creates a new resource policy with the specified policy statements.",
    "request" : {
      "urlPath" : "/policy/rtbpg6tdjr/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85dab3fb-b79a-3c8d-ab11-ade5ba22638f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 317
  }, {
    "id" : "5f92af87-bb86-35ee-be28-5a7f1126ec1a",
    "name" : "Creates a new resource policy with the specified policy statements.",
    "request" : {
      "urlPath" : "/policy/ula4ffziq72mcpfa4biefi9721yf749gwoew6fi0iy462zv5jwjrleydt3o7rze4wn93pdn88sg4l3andzxo6az8wu9lunlmuswc00qb9k7q5r1qa3m28e5l7st1k3p7xr2bnp75cuwsep7pvxfwtu2qvn7i1lt11ykxp02ze3ttgar7cf3rvdg4oucgtbflaze2g5fzuy7in2smzo8ib1m00eoo8dijp5fxfkvq9vhmj1ntrgna5oogqp6mh1rwu5wqxkwhyalazy9c5o7ux62ujxnp2tcus1laneg2pcwmljfvffdrb91s5ivdp6j6vvadqauv2s5tr2f1lh55b7nbv2hk8on5nriukc3qneujinzwdu6f8hesmn2fljntdftq/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f92af87-bb86-35ee-be28-5a7f1126ec1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 318
  }, {
    "id" : "709a3f6c-b398-3875-98f0-a4f6ef29e186",
    "name" : "Creates a new resource policy with the specified policy statements.",
    "request" : {
      "urlPath" : "/policy/8w30v4x5ywm157mayklw58in8iznmbb1ljni0aely2vm6mdyt0bnj1istxwq7qfq6h7007c9xbh1baa7mlu4jzx42er1y7fwo26igw5yuwvwtyequ3u08br7ng56fuvlf188r8zsgxwl7upum9zdmvi4sgcj7s5hoo5e6ive5ebemmiw4d1letg4laifdc7lp5lkwtson6tdx3e7ht0qb95ii2e9aj2ly1piimnjgbnxoo4gthxmaivvn8cvpv1w97ngaz87e3ipcpeu3v33eown3rsczi5fdxx2vfe7iec3c3tqt5pfv7k9klinnfmlqp28erewkurelt0syttlyzdx4w2q1rbzzg6e9hw5ote2ejlrlgbov5t850h06hlsue5owj7ju11mf99r41pugwcp5rixth45dfc6ik059glc9owh130antk15n95qvvt1ahh7husz6kvvvt1xd54wu7g1paku4z5bguvcdzbu9kr6qwakkf3m1p5pd5mdy84dt6twwdvkbc4le7g2cyx51zd17ijmc5ns5503i0r79729pggn82dmb9bleijdzz1zvbiqs5c4vspl50yfazfgu7g937ie51bcdko554yoosdhay5eo5bra070unw6t9puplj6ld0ty8262bqvz1p4vlpw7l1djpih8dtgpnac7hgbr3s4fyd365x3q1h6kdqwhb0sjj1gg17sp94bncrummgaiw0lnealilu0dopn5yc22q9y5fv7fhtq04iukoqehylrr0pol754w/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "709a3f6c-b398-3875-98f0-a4f6ef29e186",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicy"
        }
      }
    },
    "insertionIndex" : 319
  }, {
    "id" : "1e90767e-b349-3654-9bd0-63feb27a5033",
    "name" : "Creates a new resource policy with the specified policy statements.",
    "request" : {
      "urlPath" : "/policy/0spmq34y4zs2k1lqryd6n8u4ltv9sgrisqpl1gsbsfb6kgtgtvp7rlgkits2nkkc2jxje6a3f83izatipyasm4fpio0mvrj0091xp86fvqo21cjuuf13he9cjiy0vaeodeoq6ig7nl1jlht2suxrsyj2a7rk8xuuxo2jclnefla07zd3zritr16kgniup7knptc2cpthjew55u09ketvx2otw37bk12bnjht9h0go1yix3ew9o6fz6qcep72iihl5hanseq30858bdrvcjwlwpn42exfq6li5mulh3le9wb5ptrjwcnfpexyc7arezazh0lxk160yevkhjuwhnbvadbywil97ij58u450nhbz876ry4yvslcjzozrcuxsiubv0e5xqylcsjtpnt1qw1vjcu3wqy3mdq8gd4zpxdqtsjohhcs7l2vmvjw6its5ju3cr5hal2omtgfvk70k44cmtpz36prptotw9h2pm5p08/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"revisionId\" : { },\n  \"resourceArn\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e90767e-b349-3654-9bd0-63feb27a5033",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateResourcePolicy",
          "schema" : {
            "type" : "object",
            "properties" : {
              "resourceArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/AmazonResourceName"
                }, {
                  "description" : "The Amazon Resource Name (ARN) of the bot or bot alias that the resource policy was attached to."
                } ]
              },
              "revisionId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RevisionId"
                }, {
                  "description" : "The current revision of the resource policy. Use the revision ID to make sure that you are updating the most current version of a resource policy when you add a policy statement to a resource, delete a resource, or update a resource."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 320
  }, {
    "id" : "bc49c1dc-9979-3e72-8002-bfdd82a8a2a3",
    "name" : "Get a list of intents that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/K2NqpDHj21/botversions/DRAFT/botlocales/8n01/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc49c1dc-9979-3e72-8002-bfdd82a8a2a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListIntents"
        }
      }
    },
    "insertionIndex" : 321
  }, {
    "id" : "7e7d74f8-9ee5-38f1-9aca-890dfc72b890",
    "name" : "Get a list of intents that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/u5ly1MFKKT/botversions/DRAFT/botlocales/l7km/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e7d74f8-9ee5-38f1-9aca-890dfc72b890",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListIntents"
        }
      }
    },
    "insertionIndex" : 322
  }, {
    "id" : "d926b3ae-8b00-3dbd-b4b9-40a60396d9cd",
    "name" : "Get a list of intents that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/G21swQp6aO/botversions/DRAFT/botlocales/341t/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d926b3ae-8b00-3dbd-b4b9-40a60396d9cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListIntents"
        }
      }
    },
    "insertionIndex" : 323
  }, {
    "id" : "01fab2f6-1bdb-36e4-9ba5-4fd7b9d97fc3",
    "name" : "Get a list of intents that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/zzzzzzzzzzzB65Ual/botversions/DRAFT/botlocales/nmji/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01fab2f6-1bdb-36e4-9ba5-4fd7b9d97fc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListIntents"
        }
      }
    },
    "insertionIndex" : 324
  }, {
    "id" : "f39cb2da-d051-30a2-aa32-7e9a6e8bbdbe",
    "name" : "Get a list of intents that meet the specified criteria.",
    "request" : {
      "urlPath" : "/bots/MbP56BQbfQ/botversions/DRAFT/botlocales/cvhc/intents/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"intentSummaries\" : { },\n  \"nextToken\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f39cb2da-d051-30a2-aa32-7e9a6e8bbdbe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListIntents",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the intent."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot that contains the intent."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale of the intents in the list."
                } ]
              },
              "intentSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentSummaryList"
                }, {
                  "description" : "Summary information for the intents that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more intents available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListIntents</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListIntents</code> operation request to get the next page of results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 325
  }, {
    "id" : "fa04314f-8455-3a14-9e44-a416eb4d7abf",
    "name" : "<p>Creates an intent.</p> <p>To define the interaction between the user and your...",
    "request" : {
      "urlPath" : "/bots/x8fuOobQm0/botversions/DRAFT/botlocales/basp/intents/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa04314f-8455-3a14-9e44-a416eb4d7abf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateIntent"
        }
      }
    },
    "insertionIndex" : 326
  }, {
    "id" : "998e32dc-c1f5-3bf5-bb5b-78270d878166",
    "name" : "<p>Creates an intent.</p> <p>To define the interaction between the user and your...",
    "request" : {
      "urlPath" : "/bots/5iMEtlVq5W/botversions/DRAFT/botlocales/6x52/intents/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "998e32dc-c1f5-3bf5-bb5b-78270d878166",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateIntent"
        }
      }
    },
    "insertionIndex" : 327
  }, {
    "id" : "f843ecdb-a87d-3392-be42-61ad7b5f4a02",
    "name" : "<p>Creates an intent.</p> <p>To define the interaction between the user and your...",
    "request" : {
      "urlPath" : "/bots/h7fYjbcpCp/botversions/DRAFT/botlocales/4331/intents/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f843ecdb-a87d-3392-be42-61ad7b5f4a02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateIntent"
        }
      }
    },
    "insertionIndex" : 328
  }, {
    "id" : "42893e97-6544-3d5f-ad8c-1cf40eb98684",
    "name" : "<p>Creates an intent.</p> <p>To define the interaction between the user and your...",
    "request" : {
      "urlPath" : "/bots/inZluIJ1un/botversions/DRAFT/botlocales/53wa/intents/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42893e97-6544-3d5f-ad8c-1cf40eb98684",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateIntent"
        }
      }
    },
    "insertionIndex" : 329
  }, {
    "id" : "8d28ae6b-2465-3224-a2e8-cc0d18910c3e",
    "name" : "<p>Creates an intent.</p> <p>To define the interaction between the user and your...",
    "request" : {
      "urlPath" : "/bots/3JfZ7ACQ6W/botversions/DRAFT/botlocales/6947/intents/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d28ae6b-2465-3224-a2e8-cc0d18910c3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateIntent"
        }
      }
    },
    "insertionIndex" : 330
  }, {
    "id" : "d61ef468-3906-3908-ad09-2dfb2af3d8d0",
    "name" : "<p>Creates an intent.</p> <p>To define the interaction between the user and your...",
    "request" : {
      "urlPath" : "/bots/bQujUzQpB0/botversions/DRAFT/botlocales/sy09/intents/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d61ef468-3906-3908-ad09-2dfb2af3d8d0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateIntent"
        }
      }
    },
    "insertionIndex" : 331
  }, {
    "id" : "80dbc51c-3e35-38e2-9cfa-370358cd47ca",
    "name" : "<p>Creates an intent.</p> <p>To define the interaction between the user and your...",
    "request" : {
      "urlPath" : "/bots/SyMLn10PnW/botversions/DRAFT/botlocales/o766/intents/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"sampleUtterances\" : { },\n  \"parentIntentSignature\" : { },\n  \"intentConfirmationSetting\" : {\n    \"declinationResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"failureConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"active\" : { },\n    \"confirmationNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"codeHook\" : {\n      \"postCodeHookSpecification\" : {\n        \"successResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"successConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"successNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"failureNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"failureConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"failureResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"timeoutConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        }\n      },\n      \"active\" : { },\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    },\n    \"declinationNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"promptSpecification\" : {\n      \"messageGroups\" : { },\n      \"maxRetries\" : { },\n      \"allowInterrupt\" : { },\n      \"promptAttemptsSpecification\" : { },\n      \"messageSelectionStrategy\" : { }\n    },\n    \"confirmationConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"failureNextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"confirmationResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"elicitationCodeHook\" : {\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    },\n    \"declinationConditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"failureResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    }\n  },\n  \"intentName\" : { },\n  \"intentId\" : { },\n  \"description\" : { },\n  \"intentClosingSetting\" : {\n    \"conditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"closingResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"active\" : { },\n    \"nextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    }\n  },\n  \"botVersion\" : { },\n  \"initialResponseSetting\" : {\n    \"conditional\" : {\n      \"defaultBranch\" : {\n        \"response\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"nextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        }\n      },\n      \"active\" : { },\n      \"conditionalBranches\" : { }\n    },\n    \"nextStep\" : {\n      \"dialogAction\" : {\n        \"suppressNextMessage\" : { },\n        \"type\" : { },\n        \"slotToElicit\" : { }\n      },\n      \"sessionAttributes\" : { },\n      \"intent\" : {\n        \"slots\" : { },\n        \"name\" : { }\n      }\n    },\n    \"initialResponse\" : {\n      \"messageGroups\" : { },\n      \"allowInterrupt\" : { }\n    },\n    \"codeHook\" : {\n      \"postCodeHookSpecification\" : {\n        \"successResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"successConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"successNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"timeoutResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"failureNextStep\" : {\n          \"dialogAction\" : {\n            \"suppressNextMessage\" : { },\n            \"type\" : { },\n            \"slotToElicit\" : { }\n          },\n          \"sessionAttributes\" : { },\n          \"intent\" : {\n            \"slots\" : { },\n            \"name\" : { }\n          }\n        },\n        \"failureConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        },\n        \"failureResponse\" : {\n          \"messageGroups\" : { },\n          \"allowInterrupt\" : { }\n        },\n        \"timeoutConditional\" : {\n          \"defaultBranch\" : {\n            \"response\" : {\n              \"messageGroups\" : { }\n            },\n            \"nextStep\" : { }\n          },\n          \"active\" : { },\n          \"conditionalBranches\" : { }\n        }\n      },\n      \"active\" : { },\n      \"enableCodeHookInvocation\" : { },\n      \"invocationLabel\" : { }\n    }\n  },\n  \"inputContexts\" : { },\n  \"outputContexts\" : { },\n  \"kendraConfiguration\" : {\n    \"kendraIndex\" : { },\n    \"queryFilterStringEnabled\" : { },\n    \"queryFilterString\" : { }\n  },\n  \"fulfillmentCodeHook\" : {\n    \"active\" : { },\n    \"postFulfillmentStatusSpecification\" : {\n      \"successResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"successConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"successNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"timeoutNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"timeoutResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"failureNextStep\" : {\n        \"dialogAction\" : {\n          \"suppressNextMessage\" : { },\n          \"type\" : { },\n          \"slotToElicit\" : { }\n        },\n        \"sessionAttributes\" : { },\n        \"intent\" : {\n          \"slots\" : { },\n          \"name\" : { }\n        }\n      },\n      \"failureConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      },\n      \"failureResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { }\n      },\n      \"timeoutConditional\" : {\n        \"defaultBranch\" : {\n          \"response\" : {\n            \"messageGroups\" : { },\n            \"allowInterrupt\" : { }\n          },\n          \"nextStep\" : {\n            \"dialogAction\" : {\n              \"type\" : { }\n            },\n            \"sessionAttributes\" : { },\n            \"intent\" : { }\n          }\n        },\n        \"active\" : { },\n        \"conditionalBranches\" : { }\n      }\n    },\n    \"fulfillmentUpdatesSpecification\" : {\n      \"active\" : { },\n      \"startResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"delayInSeconds\" : { }\n      },\n      \"updateResponse\" : {\n        \"messageGroups\" : { },\n        \"allowInterrupt\" : { },\n        \"frequencyInSeconds\" : { }\n      },\n      \"timeoutInSeconds\" : { }\n    },\n    \"enabled\" : { }\n  },\n  \"botId\" : { },\n  \"dialogCodeHook\" : {\n    \"enabled\" : { }\n  },\n  \"localeId\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80dbc51c-3e35-38e2-9cfa-370358cd47ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateIntent",
          "schema" : {
            "type" : "object",
            "properties" : {
              "intentId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "A unique identifier for the intent."
                } ]
              },
              "intentName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name specified for the intent."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description specified for the intent."
                } ]
              },
              "parentIntentSignature" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentSignature"
                }, {
                  "description" : "The signature of the parent intent specified for the intent."
                } ]
              },
              "sampleUtterances" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SampleUtterancesList"
                }, {
                  "description" : "The sample utterances specified for the intent."
                } ]
              },
              "dialogCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DialogCodeHookSettings"
                }, {
                  "description" : "The dialog Lambda function specified for the intent."
                } ]
              },
              "fulfillmentCodeHook" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FulfillmentCodeHookSettings"
                }, {
                  "description" : "The fulfillment Lambda function specified for the intent."
                } ]
              },
              "intentConfirmationSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentConfirmationSetting"
                }, {
                  "description" : "The confirmation setting specified for the intent."
                } ]
              },
              "intentClosingSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/IntentClosingSetting"
                }, {
                  "description" : "The closing setting specified for the intent."
                } ]
              },
              "inputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InputContextsList"
                }, {
                  "description" : "The list of input contexts specified for the intent."
                } ]
              },
              "outputContexts" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/OutputContextsList"
                }, {
                  "description" : "The list of output contexts specified for the intent."
                } ]
              },
              "kendraConfiguration" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/KendraConfiguration"
                }, {
                  "description" : "Configuration for searching a Amazon Kendra index specified for the intent."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with the intent."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The identifier of the version of the bot associated with the intent."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The locale that the intent is specified to use."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the intent was created."
                } ]
              },
              "initialResponseSetting" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/InitialResponseSetting"
                }, {
                  "description" : "Configuration settings for the response that is sent to the user at the beginning of a conversation, before eliciting slot values."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 332
  }, {
    "id" : "c8bc470b-ff96-3cda-aabb-1c1dcd1fb263",
    "name" : "Lists the exports for a bot, bot locale, or custom vocabulary. Exports are kept ...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8bc470b-ff96-3cda-aabb-1c1dcd1fb263",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListExports"
        }
      }
    },
    "insertionIndex" : 333
  }, {
    "id" : "2eb61c57-12a4-35a4-a5a1-c72297d89226",
    "name" : "Lists the exports for a bot, bot locale, or custom vocabulary. Exports are kept ...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2eb61c57-12a4-35a4-a5a1-c72297d89226",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListExports"
        }
      }
    },
    "insertionIndex" : 334
  }, {
    "id" : "bbc608c9-b791-323d-b73c-04d4dd9622a9",
    "name" : "Lists the exports for a bot, bot locale, or custom vocabulary. Exports are kept ...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbc608c9-b791-323d-b73c-04d4dd9622a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListExports"
        }
      }
    },
    "insertionIndex" : 335
  }, {
    "id" : "7db80a6a-479c-38ab-b2ed-2f3bedaff364",
    "name" : "Lists the exports for a bot, bot locale, or custom vocabulary. Exports are kept ...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextToken\" : { },\n  \"botId\" : { },\n  \"exportSummaries\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7db80a6a-479c-38ab-b2ed-2f3bedaff364",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListExports",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier assigned to the bot by Amazon Lex."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot that was exported."
                } ]
              },
              "exportSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportSummaryList"
                }, {
                  "description" : "Summary information for the exports that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter. If there are more exports available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListExports</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListExports</code> operation request to get the next page of results."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The locale specified in the request."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 336
  }, {
    "id" : "84b6eee3-c1f5-3562-8d62-ec6576f40947",
    "name" : "<p>Creates a zip archive containing the contents of a bot or a bot locale. The a...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84b6eee3-c1f5-3562-8d62-ec6576f40947",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExport"
        }
      }
    },
    "insertionIndex" : 337
  }, {
    "id" : "fcc8a574-b18c-3268-a827-96aae8678930",
    "name" : "<p>Creates a zip archive containing the contents of a bot or a bot locale. The a...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fcc8a574-b18c-3268-a827-96aae8678930",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExport"
        }
      }
    },
    "insertionIndex" : 338
  }, {
    "id" : "6344d0a9-fe75-34fa-9291-03320e360865",
    "name" : "<p>Creates a zip archive containing the contents of a bot or a bot locale. The a...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6344d0a9-fe75-34fa-9291-03320e360865",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExport"
        }
      }
    },
    "insertionIndex" : 339
  }, {
    "id" : "43d76468-c5aa-3a64-b41f-f53dabb6bf3b",
    "name" : "<p>Creates a zip archive containing the contents of a bot or a bot locale. The a...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43d76468-c5aa-3a64-b41f-f53dabb6bf3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExport"
        }
      }
    },
    "insertionIndex" : 340
  }, {
    "id" : "105cc7b6-23e0-3c41-aec5-55bd833d1970",
    "name" : "<p>Creates a zip archive containing the contents of a bot or a bot locale. The a...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "105cc7b6-23e0-3c41-aec5-55bd833d1970",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExport"
        }
      }
    },
    "insertionIndex" : 341
  }, {
    "id" : "fab27024-ad49-3228-af62-99976ec804c2",
    "name" : "<p>Creates a zip archive containing the contents of a bot or a bot locale. The a...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fab27024-ad49-3228-af62-99976ec804c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExport"
        }
      }
    },
    "insertionIndex" : 342
  }, {
    "id" : "a9a4e7b1-3662-3ea1-b6bd-9787cf8c5f53",
    "name" : "<p>Creates a zip archive containing the contents of a bot or a bot locale. The a...",
    "request" : {
      "urlPath" : "/exports/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"exportStatus\" : { },\n  \"resourceSpecification\" : {\n    \"customVocabularyExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    },\n    \"botExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { }\n    },\n    \"botLocaleExportSpecification\" : {\n      \"botId\" : { },\n      \"botVersion\" : { },\n      \"localeId\" : { }\n    }\n  },\n  \"exportId\" : { },\n  \"fileFormat\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a9a4e7b1-3662-3ea1-b6bd-9787cf8c5f53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateExport",
          "schema" : {
            "type" : "object",
            "properties" : {
              "exportId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "An identifier for a specific request to create an export."
                } ]
              },
              "resourceSpecification" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportResourceSpecification"
                }, {
                  "description" : "A description of the type of resource that was exported, either a bot or a bot locale."
                } ]
              },
              "fileFormat" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ImportExportFileFormat"
                }, {
                  "description" : "The file format used for the bot or bot locale definition files."
                } ]
              },
              "exportStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ExportStatus"
                }, {
                  "description" : "The status of the export. When the status is <code>Completed</code>, you can use the <a href=\"https://docs.aws.amazon.com/lexv2/latest/APIReference/API_DescribeExport.html\">DescribeExport</a> operation to get the pre-signed S3 URL link to your exported bot or bot locale."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the request to export a bot was created."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 343
  }, {
    "id" : "50c07945-b819-3b05-ad7b-7e1000e14b8e",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>ListBot...",
    "request" : {
      "urlPath" : "/bots/yzXZCJ2g1e/botversions/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50c07945-b819-3b05-ad7b-7e1000e14b8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotVersions"
        }
      }
    },
    "insertionIndex" : 344
  }, {
    "id" : "c2d2b4d8-7870-37b9-bb3f-121f85cf918e",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>ListBot...",
    "request" : {
      "urlPath" : "/bots/5Hg5DSVv3I/botversions/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2d2b4d8-7870-37b9-bb3f-121f85cf918e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotVersions"
        }
      }
    },
    "insertionIndex" : 345
  }, {
    "id" : "3ef65314-c071-3bc9-bf71-eed7ecc20ef1",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>ListBot...",
    "request" : {
      "urlPath" : "/bots/YZ8RwNDiJq/botversions/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ef65314-c071-3bc9-bf71-eed7ecc20ef1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotVersions"
        }
      }
    },
    "insertionIndex" : 346
  }, {
    "id" : "a6e295b2-f36a-398f-b0c0-a3b90b6944e3",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>ListBot...",
    "request" : {
      "urlPath" : "/bots/9vEhs9EsZz/botversions/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6e295b2-f36a-398f-b0c0-a3b90b6944e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotVersions"
        }
      }
    },
    "insertionIndex" : 347
  }, {
    "id" : "6c9e8b5e-7e34-306d-9179-b3ce7d8c492e",
    "name" : "<p>Gets information about all of the versions of a bot.</p> <p>The <code>ListBot...",
    "request" : {
      "urlPath" : "/bots/2ahXfH00sV/botversions/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botVersionSummaries\" : { },\n  \"nextToken\" : { },\n  \"botId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c9e8b5e-7e34-306d-9179-b3ce7d8c492e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotVersions",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot to list versions for."
                } ]
              },
              "botVersionSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersionSummaryList"
                }, {
                  "description" : "Summary information for the bot versions that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more versions available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListBotVersions</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListBotAliases</code> operation request to get the next page of results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 348
  }, {
    "id" : "8dd1b24a-f8d2-360b-80cd-a477a87258fe",
    "name" : "<p>Creates a new version of the bot based on the <code>DRAFT</code> version. If ...",
    "request" : {
      "urlPath" : "/bots/lEQCXUw7Ob/botversions/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dd1b24a-f8d2-360b-80cd-a477a87258fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    },
    "insertionIndex" : 349
  }, {
    "id" : "72d8decd-cf11-36ef-a255-a78f4ddd3ff7",
    "name" : "<p>Creates a new version of the bot based on the <code>DRAFT</code> version. If ...",
    "request" : {
      "urlPath" : "/bots/stHObeQdAG/botversions/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72d8decd-cf11-36ef-a255-a78f4ddd3ff7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    },
    "insertionIndex" : 350
  }, {
    "id" : "d9ecaafb-8bb3-3e56-9a9d-a0d56d3d5323",
    "name" : "<p>Creates a new version of the bot based on the <code>DRAFT</code> version. If ...",
    "request" : {
      "urlPath" : "/bots/zAYnJ0qztB/botversions/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d9ecaafb-8bb3-3e56-9a9d-a0d56d3d5323",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    },
    "insertionIndex" : 351
  }, {
    "id" : "ba62c71b-46eb-32c6-88a4-519631a0ca75",
    "name" : "<p>Creates a new version of the bot based on the <code>DRAFT</code> version. If ...",
    "request" : {
      "urlPath" : "/bots/25Vpb1D1Oa/botversions/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba62c71b-46eb-32c6-88a4-519631a0ca75",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    },
    "insertionIndex" : 352
  }, {
    "id" : "f7cb2dc5-4830-3934-b597-3c00828b6b01",
    "name" : "<p>Creates a new version of the bot based on the <code>DRAFT</code> version. If ...",
    "request" : {
      "urlPath" : "/bots/WWWWWWWWWWW6B/botversions/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7cb2dc5-4830-3934-b597-3c00828b6b01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    },
    "insertionIndex" : 353
  }, {
    "id" : "23d73a0e-982b-34a6-b0af-aed35875cdc0",
    "name" : "<p>Creates a new version of the bot based on the <code>DRAFT</code> version. If ...",
    "request" : {
      "urlPath" : "/bots/cUkiCDRV8W/botversions/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23d73a0e-982b-34a6-b0af-aed35875cdc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotVersion"
        }
      }
    },
    "insertionIndex" : 354
  }, {
    "id" : "b5da7422-7bb6-33a6-a527-e0e20868de64",
    "name" : "<p>Creates a new version of the bot based on the <code>DRAFT</code> version. If ...",
    "request" : {
      "urlPath" : "/bots/iiiiiiiiiiiRO/botversions/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botVersionLocaleSpecification\" : { },\n  \"botStatus\" : { },\n  \"description\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5da7422-7bb6-33a6-a527-e0e20868de64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotVersion",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The bot identifier specified in the request."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description of the version specified in the request."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NumericalBotVersion"
                }, {
                  "description" : "The version number assigned to the version."
                } ]
              },
              "botVersionLocaleSpecification" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersionLocaleSpecification"
                }, {
                  "description" : "The source versions used for each locale in the new version."
                } ]
              },
              "botStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotStatus"
                }, {
                  "description" : "When you send a request to create or update a bot, Amazon Lex sets the status response element to <code>Creating</code>. After Amazon Lex builds the bot, it sets status to <code>Available</code>. If Amazon Lex can't build the bot, it sets status to <code>Failed</code>."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the version was created."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 355
  }, {
    "id" : "76525777-f292-357e-bc5f-0751589f6b46",
    "name" : "Gets a list of locales for the specified bot.",
    "request" : {
      "urlPath" : "/bots/UcyQQah4vm/botversions/DRAFT/botlocales/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76525777-f292-357e-bc5f-0751589f6b46",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotLocales"
        }
      }
    },
    "insertionIndex" : 356
  }, {
    "id" : "fb4f7aaa-f491-3950-90cd-e9d1d2fe7b7b",
    "name" : "Gets a list of locales for the specified bot.",
    "request" : {
      "urlPath" : "/bots/Gop4u3dGI8/botversions/DRAFT/botlocales/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb4f7aaa-f491-3950-90cd-e9d1d2fe7b7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotLocales"
        }
      }
    },
    "insertionIndex" : 357
  }, {
    "id" : "b8aba60b-1ea9-3f6d-9b6a-e8aa406ceae0",
    "name" : "Gets a list of locales for the specified bot.",
    "request" : {
      "urlPath" : "/bots/F1GnprYi9n/botversions/67100/botlocales/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8aba60b-1ea9-3f6d-9b6a-e8aa406ceae0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotLocales"
        }
      }
    },
    "insertionIndex" : 358
  }, {
    "id" : "8aa975c6-dcd0-398f-bdec-87d74ac965fc",
    "name" : "Gets a list of locales for the specified bot.",
    "request" : {
      "urlPath" : "/bots/WDqhFaDdLB/botversions/DRAFT/botlocales/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8aa975c6-dcd0-398f-bdec-87d74ac965fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotLocales"
        }
      }
    },
    "insertionIndex" : 359
  }, {
    "id" : "733de9ac-567f-34ed-96af-e15deb81cab5",
    "name" : "Gets a list of locales for the specified bot.",
    "request" : {
      "urlPath" : "/bots/vvvvvvvvvvv6e/botversions/DRAFT/botlocales/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botLocaleSummaries\" : { },\n  \"nextToken\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "733de9ac-567f-34ed-96af-e15deb81cab5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotLocales",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot to list locales for."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The version of the bot."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListBotLocales</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListBotLocales</code> operation request to get the next page of results."
                } ]
              },
              "botLocaleSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotLocaleSummaryList"
                }, {
                  "description" : "Summary information for the locales that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more locales available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 360
  }, {
    "id" : "8833fedc-aff9-3c9d-9597-fe4142f4c978",
    "name" : "Creates a locale in the bot. The locale contains the intents and slot types that...",
    "request" : {
      "urlPath" : "/bots/TtKwt2T9nh/botversions/DRAFT/botlocales/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8833fedc-aff9-3c9d-9597-fe4142f4c978",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotLocale"
        }
      }
    },
    "insertionIndex" : 361
  }, {
    "id" : "d7e51a58-2d5b-3562-bd7d-2fc6e610e9ce",
    "name" : "Creates a locale in the bot. The locale contains the intents and slot types that...",
    "request" : {
      "urlPath" : "/bots/DDDDDDDDDDD0JvNAZ/botversions/DRAFT/botlocales/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d7e51a58-2d5b-3562-bd7d-2fc6e610e9ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotLocale"
        }
      }
    },
    "insertionIndex" : 362
  }, {
    "id" : "d0d5d954-d9a5-302c-b784-8a77919ee249",
    "name" : "Creates a locale in the bot. The locale contains the intents and slot types that...",
    "request" : {
      "urlPath" : "/bots/LQcXGbzrhg/botversions/DRAFT/botlocales/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0d5d954-d9a5-302c-b784-8a77919ee249",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotLocale"
        }
      }
    },
    "insertionIndex" : 363
  }, {
    "id" : "633c75c6-65fa-37c0-83e3-b43f7681c178",
    "name" : "Creates a locale in the bot. The locale contains the intents and slot types that...",
    "request" : {
      "urlPath" : "/bots/KaVyE8UThT/botversions/DRAFT/botlocales/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "633c75c6-65fa-37c0-83e3-b43f7681c178",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotLocale"
        }
      }
    },
    "insertionIndex" : 364
  }, {
    "id" : "4d45d3b7-1245-3209-968b-78a5cbf54a83",
    "name" : "Creates a locale in the bot. The locale contains the intents and slot types that...",
    "request" : {
      "urlPath" : "/bots/wLKPshwrP7/botversions/DRAFT/botlocales/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d45d3b7-1245-3209-968b-78a5cbf54a83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotLocale"
        }
      }
    },
    "insertionIndex" : 365
  }, {
    "id" : "3a46f7b3-711b-3603-b13a-fd050fbd4254",
    "name" : "Creates a locale in the bot. The locale contains the intents and slot types that...",
    "request" : {
      "urlPath" : "/bots/1ZlorhAEnC/botversions/DRAFT/botlocales/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a46f7b3-711b-3603-b13a-fd050fbd4254",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotLocale"
        }
      }
    },
    "insertionIndex" : 366
  }, {
    "id" : "b3dc6bc3-2e77-322b-998e-bb236699b661",
    "name" : "Creates a locale in the bot. The locale contains the intents and slot types that...",
    "request" : {
      "urlPath" : "/bots/MBmCDM0h7j/botversions/DRAFT/botlocales/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"nluIntentConfidenceThreshold\" : { },\n  \"description\" : { },\n  \"voiceSettings\" : {\n    \"voiceId\" : { },\n    \"engine\" : { }\n  },\n  \"botLocaleStatus\" : { },\n  \"botId\" : { },\n  \"localeName\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3dc6bc3-2e77-322b-998e-bb236699b661",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotLocale",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The specified bot identifier."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The specified bot version."
                } ]
              },
              "localeName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleName"
                }, {
                  "description" : "The specified locale name."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The specified locale identifier."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The specified description of the bot locale."
                } ]
              },
              "nluIntentConfidenceThreshold" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfidenceThreshold"
                }, {
                  "description" : "The specified confidence threshold for inserting the <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> intents."
                } ]
              },
              "voiceSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VoiceSettings"
                }, {
                  "description" : "The Amazon Polly voice ID that Amazon Lex uses for voice interaction with the user."
                } ]
              },
              "botLocaleStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotLocaleStatus"
                }, {
                  "description" : "<p>The status of the bot.</p> <p>When the status is <code>Creating</code> the bot locale is being configured. When the status is <code>Building</code> Amazon Lex is building the bot for testing and use.</p> <p>If the status of the bot is <code>ReadyExpressTesting</code>, you can test the bot using the exact utterances specified in the bots' intents. When the bot is ready for full testing or to run, the status is <code>Built</code>.</p> <p>If there was a problem with building the bot, the status is <code>Failed</code>. If the bot was saved but not built, the status is <code>NotBuilt</code>.</p>"
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp specifying the date and time that the bot locale was created."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 367
  }, {
    "id" : "3b60cab5-f30c-3124-a890-af527e29c464",
    "name" : "Gets a list of aliases for the specified bot.",
    "request" : {
      "urlPath" : "/bots/x1876CoNcQ/botaliases/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b60cab5-f30c-3124-a890-af527e29c464",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotAliases"
        }
      }
    },
    "insertionIndex" : 368
  }, {
    "id" : "eb16763f-e52f-3cb2-833d-80908c29842d",
    "name" : "Gets a list of aliases for the specified bot.",
    "request" : {
      "urlPath" : "/bots/7Z9jTZGeJu/botaliases/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb16763f-e52f-3cb2-833d-80908c29842d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotAliases"
        }
      }
    },
    "insertionIndex" : 369
  }, {
    "id" : "c04e3074-9895-34af-8335-c4efc977cb4a",
    "name" : "Gets a list of aliases for the specified bot.",
    "request" : {
      "urlPath" : "/bots/kgcJW0yW0q/botaliases/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c04e3074-9895-34af-8335-c4efc977cb4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotAliases"
        }
      }
    },
    "insertionIndex" : 370
  }, {
    "id" : "89690b68-8571-3328-b9cf-c710d48712f9",
    "name" : "Gets a list of aliases for the specified bot.",
    "request" : {
      "urlPath" : "/bots/QnwzIcnXYV/botaliases/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89690b68-8571-3328-b9cf-c710d48712f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotAliases"
        }
      }
    },
    "insertionIndex" : 371
  }, {
    "id" : "84f40ccd-ee80-357c-9819-b27e0c19e909",
    "name" : "Gets a list of aliases for the specified bot.",
    "request" : {
      "urlPath" : "/bots/3q7HEYVw9S/botaliases/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botAliasSummaries\" : { },\n  \"nextToken\" : { },\n  \"botId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84f40ccd-ee80-357c-9819-b27e0c19e909",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBotAliases",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botAliasSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasSummaryList"
                }, {
                  "description" : "Summary information for the bot aliases that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more aliases available, the <code>nextToken</code> field contains a token to get the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListBotAliases</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListBotAliases</code> operation request to get the next page of results."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with the aliases."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 372
  }, {
    "id" : "eafab6db-ded0-3045-8b6b-3285d3cf4d44",
    "name" : "<p>Creates an alias for the specified version of a bot. Use an alias to enable y...",
    "request" : {
      "urlPath" : "/bots/INarhc7I1y/botaliases/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eafab6db-ded0-3045-8b6b-3285d3cf4d44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotAlias"
        }
      }
    },
    "insertionIndex" : 373
  }, {
    "id" : "12ab8159-026e-3221-9c56-c5c31467bf9f",
    "name" : "<p>Creates an alias for the specified version of a bot. Use an alias to enable y...",
    "request" : {
      "urlPath" : "/bots/nQiMc4gWqe/botaliases/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12ab8159-026e-3221-9c56-c5c31467bf9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotAlias"
        }
      }
    },
    "insertionIndex" : 374
  }, {
    "id" : "8c734e5c-a492-35e5-b5a2-aa815019b010",
    "name" : "<p>Creates an alias for the specified version of a bot. Use an alias to enable y...",
    "request" : {
      "urlPath" : "/bots/ggggggggggg3/botaliases/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c734e5c-a492-35e5-b5a2-aa815019b010",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotAlias"
        }
      }
    },
    "insertionIndex" : 375
  }, {
    "id" : "54183906-4cf9-3320-b0f9-3a4bb480a398",
    "name" : "<p>Creates an alias for the specified version of a bot. Use an alias to enable y...",
    "request" : {
      "urlPath" : "/bots/pY5nnWDjct/botaliases/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54183906-4cf9-3320-b0f9-3a4bb480a398",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotAlias"
        }
      }
    },
    "insertionIndex" : 376
  }, {
    "id" : "2b1c5310-c4dc-3861-95d5-40b77f990d12",
    "name" : "<p>Creates an alias for the specified version of a bot. Use an alias to enable y...",
    "request" : {
      "urlPath" : "/bots/iG4ouNocOL/botaliases/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b1c5310-c4dc-3861-95d5-40b77f990d12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotAlias"
        }
      }
    },
    "insertionIndex" : 377
  }, {
    "id" : "609c0c64-dae0-3502-80d3-a8e5a2ac44f5",
    "name" : "<p>Creates an alias for the specified version of a bot. Use an alias to enable y...",
    "request" : {
      "urlPath" : "/bots/loIGzy3eXY/botaliases/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "609c0c64-dae0-3502-80d3-a8e5a2ac44f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotAlias"
        }
      }
    },
    "insertionIndex" : 378
  }, {
    "id" : "b9931f52-e15b-3607-bd5e-c08146173bb0",
    "name" : "<p>Creates an alias for the specified version of a bot. Use an alias to enable y...",
    "request" : {
      "urlPath" : "/bots/nbSXuTGFmV/botaliases/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botAliasLocaleSettings\" : { },\n  \"sentimentAnalysisSettings\" : {\n    \"detectSentiment\" : { }\n  },\n  \"botAliasId\" : { },\n  \"description\" : { },\n  \"botAliasName\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"botAliasStatus\" : { },\n  \"conversationLogSettings\" : {\n    \"textLogSettings\" : { },\n    \"audioLogSettings\" : { }\n  },\n  \"creationDateTime\" : { },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9931f52-e15b-3607-bd5e-c08146173bb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBotAlias",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botAliasId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasId"
                }, {
                  "description" : "The unique identifier of the bot alias."
                } ]
              },
              "botAliasName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name specified for the bot alias."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description specified for the bot alias."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NumericalBotVersion"
                }, {
                  "description" : "The version of the bot associated with this alias."
                } ]
              },
              "botAliasLocaleSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasLocaleSettingsMap"
                }, {
                  "description" : "Configuration information for a specific locale."
                } ]
              },
              "conversationLogSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConversationLogSettings"
                }, {
                  "description" : "The conversation log settings specified for the alias."
                } ]
              },
              "sentimentAnalysisSettings" : {
                "$ref" : "#/components/schemas/SentimentAnalysisSettings"
              },
              "botAliasStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotAliasStatus"
                }, {
                  "description" : "The current status of the alias. The alias is first put into the <code>Creating</code> state. When the alias is ready to be used, it is put into the <code>Available</code> state. You can use the <code>DescribeBotAlias</code> operation to get the current state of an alias."
                } ]
              },
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The unique identifier of the bot that this alias applies to."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A Unix timestamp indicating the date and time that the bot alias was created."
                } ]
              },
              "tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagMap"
                }, {
                  "description" : "A list of tags associated with the bot alias."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 379
  }, {
    "id" : "590f598b-ad1f-3784-8d13-7f03695922f5",
    "name" : "Gets a list of available bots.",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "590f598b-ad1f-3784-8d13-7f03695922f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBots"
        }
      }
    },
    "insertionIndex" : 380
  }, {
    "id" : "5772cd81-d821-3179-a716-719db83d6fa6",
    "name" : "Gets a list of available bots.",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5772cd81-d821-3179-a716-719db83d6fa6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBots"
        }
      }
    },
    "insertionIndex" : 381
  }, {
    "id" : "4235b53e-5341-32a2-b1bb-d69dac1df91c",
    "name" : "Gets a list of available bots.",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4235b53e-5341-32a2-b1bb-d69dac1df91c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBots"
        }
      }
    },
    "insertionIndex" : 382
  }, {
    "id" : "f58b41c8-078e-3869-8ae1-1e24cf739e9e",
    "name" : "Gets a list of available bots.",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f58b41c8-078e-3869-8ae1-1e24cf739e9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBots"
        }
      }
    },
    "insertionIndex" : 383
  }, {
    "id" : "9aafc153-8ac2-3f63-a61a-3b101ce8dbbd",
    "name" : "Gets a list of available bots.",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"botSummaries\" : { },\n  \"nextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9aafc153-8ac2-3f63-a61a-3b101ce8dbbd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "ListBots",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botSummaries" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotSummaryList"
                }, {
                  "description" : "Summary information for the bots that meet the filter criteria specified in the request. The length of the list is specified in the <code>maxResults</code> parameter of the request. If there are more bots available, the <code>nextToken</code> field contains a token to the next page of results."
                } ]
              },
              "nextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/NextToken"
                }, {
                  "description" : "A token that indicates whether there are more results to return in a response to the <code>ListBots</code> operation. If the <code>nextToken</code> field is present, you send the contents as the <code>nextToken</code> parameter of a <code>ListBots</code> operation request to get the next page of results."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 384
  }, {
    "id" : "17fb674e-fa07-3934-b834-6e0db9c36206",
    "name" : "Creates an Amazon Lex conversational bot. ",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "17fb674e-fa07-3934-b834-6e0db9c36206",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBot"
        }
      }
    },
    "insertionIndex" : 385
  }, {
    "id" : "36c7e0a7-35bb-3914-a102-ecb81c61b02c",
    "name" : "Creates an Amazon Lex conversational bot. ",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36c7e0a7-35bb-3914-a102-ecb81c61b02c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBot"
        }
      }
    },
    "insertionIndex" : 386
  }, {
    "id" : "8fe2d4f9-8ec3-38ea-b989-2819e6d16a5a",
    "name" : "Creates an Amazon Lex conversational bot. ",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fe2d4f9-8ec3-38ea-b989-2819e6d16a5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBot"
        }
      }
    },
    "insertionIndex" : 387
  }, {
    "id" : "8f5cd0e3-f74e-3de4-a7f2-fa812f65279b",
    "name" : "Creates an Amazon Lex conversational bot. ",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f5cd0e3-f74e-3de4-a7f2-fa812f65279b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBot"
        }
      }
    },
    "insertionIndex" : 388
  }, {
    "id" : "042c38b6-cbd8-3941-9561-aef5eff9592e",
    "name" : "Creates an Amazon Lex conversational bot. ",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "042c38b6-cbd8-3941-9561-aef5eff9592e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBot"
        }
      }
    },
    "insertionIndex" : 389
  }, {
    "id" : "19db3ecb-59c5-3623-baca-c3a0d7a523a3",
    "name" : "Creates an Amazon Lex conversational bot. ",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19db3ecb-59c5-3623-baca-c3a0d7a523a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBot"
        }
      }
    },
    "insertionIndex" : 390
  }, {
    "id" : "e475a121-9cd1-3d7b-bdd7-58998eed6533",
    "name" : "Creates an Amazon Lex conversational bot. ",
    "request" : {
      "urlPath" : "/bots/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botStatus\" : { },\n  \"testBotAliasTags\" : { },\n  \"botName\" : { },\n  \"roleArn\" : { },\n  \"botTags\" : { },\n  \"botType\" : { },\n  \"description\" : { },\n  \"dataPrivacy\" : {\n    \"childDirected\" : { }\n  },\n  \"idleSessionTTLInSeconds\" : { },\n  \"botId\" : { },\n  \"botMembers\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e475a121-9cd1-3d7b-bdd7-58998eed6533",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "CreateBot",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "A unique identifier for a particular bot. You use this to identify the bot when you call other Amazon Lex API operations."
                } ]
              },
              "botName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Name"
                }, {
                  "description" : "The name specified for the bot."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description specified for the bot."
                } ]
              },
              "roleArn" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RoleArn"
                }, {
                  "description" : "The IAM role specified for the bot."
                } ]
              },
              "dataPrivacy" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DataPrivacy"
                }, {
                  "description" : "The data privacy settings specified for the bot."
                } ]
              },
              "idleSessionTTLInSeconds" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SessionTTL"
                }, {
                  "description" : "The session idle time specified for the bot."
                } ]
              },
              "botStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotStatus"
                }, {
                  "description" : "Shows the current status of the bot. The bot is first in the <code>Creating</code> status. Once the bot is read for use, it changes to the <code>Available</code> status. After the bot is created, you can use the <code>DRAFT</code> version of the bot."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp indicating the date and time that the bot was created."
                } ]
              },
              "botTags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagMap"
                }, {
                  "description" : "A list of tags associated with the bot."
                } ]
              },
              "testBotAliasTags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagMap"
                }, {
                  "description" : "A list of tags associated with the test alias for the bot."
                } ]
              },
              "botType" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotType"
                }, {
                  "description" : "The type of a bot that was created."
                } ]
              },
              "botMembers" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotMembers"
                }, {
                  "description" : "The list of bots in a network that was created."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 391
  }, {
    "id" : "0acf91cd-a960-3b92-b07e-402231320fa5",
    "name" : "Updates the settings that a bot has for a specific locale.",
    "request" : {
      "urlPath" : "/bots/S8xnpIY2w0/botversions/DRAFT/botlocales/9008/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0acf91cd-a960-3b92-b07e-402231320fa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotLocale"
        }
      }
    },
    "insertionIndex" : 392
  }, {
    "id" : "4115f89b-b777-3de6-a60d-1a5eb78234be",
    "name" : "Updates the settings that a bot has for a specific locale.",
    "request" : {
      "urlPath" : "/bots/X7JvymKAv0/botversions/DRAFT/botlocales/6bcr/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4115f89b-b777-3de6-a60d-1a5eb78234be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotLocale"
        }
      }
    },
    "insertionIndex" : 393
  }, {
    "id" : "0e4eb79d-a439-3fe1-b858-8a0d24de7478",
    "name" : "Updates the settings that a bot has for a specific locale.",
    "request" : {
      "urlPath" : "/bots/e9vpEuAaI9/botversions/DRAFT/botlocales/zo2x/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e4eb79d-a439-3fe1-b858-8a0d24de7478",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotLocale"
        }
      }
    },
    "insertionIndex" : 394
  }, {
    "id" : "4d5159f1-def2-39e4-b3b2-6dbd8605f2be",
    "name" : "Updates the settings that a bot has for a specific locale.",
    "request" : {
      "urlPath" : "/bots/zy8v8O3wbj/botversions/DRAFT/botlocales/n5j7/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d5159f1-def2-39e4-b3b2-6dbd8605f2be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotLocale"
        }
      }
    },
    "insertionIndex" : 395
  }, {
    "id" : "4c275987-5225-31b5-a496-aeaa7fc6fb4d",
    "name" : "Updates the settings that a bot has for a specific locale.",
    "request" : {
      "urlPath" : "/bots/RVc4BLGYgS/botversions/DRAFT/botlocales/04xt/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c275987-5225-31b5-a496-aeaa7fc6fb4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotLocale"
        }
      }
    },
    "insertionIndex" : 396
  }, {
    "id" : "3aeb2e50-525e-3b83-b0ea-30d0ea0ec997",
    "name" : "Updates the settings that a bot has for a specific locale.",
    "request" : {
      "urlPath" : "/bots/pTQD9FRwoO/botversions/DRAFT/botlocales/36yj/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3aeb2e50-525e-3b83-b0ea-30d0ea0ec997",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotLocale"
        }
      }
    },
    "insertionIndex" : 397
  }, {
    "id" : "8ad05374-9c27-3a4b-9191-00597a713256",
    "name" : "Updates the settings that a bot has for a specific locale.",
    "request" : {
      "urlPath" : "/bots/BXKH2uaSco/botversions/DRAFT/botlocales/3v95/",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"nluIntentConfidenceThreshold\" : { },\n  \"failureReasons\" : { },\n  \"description\" : { },\n  \"voiceSettings\" : {\n    \"voiceId\" : { },\n    \"engine\" : { }\n  },\n  \"botLocaleStatus\" : { },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"recommendedActions\" : { },\n  \"localeName\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ad05374-9c27-3a4b-9191-00597a713256",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "UpdateBotLocale",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contains the updated locale."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that contains the updated locale."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale of the updated bot locale."
                } ]
              },
              "localeName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleName"
                }, {
                  "description" : "The updated locale name for the locale."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The updated description of the locale."
                } ]
              },
              "nluIntentConfidenceThreshold" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfidenceThreshold"
                }, {
                  "description" : "The updated confidence threshold for inserting the <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> intents in the list of possible intents for an utterance."
                } ]
              },
              "voiceSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VoiceSettings"
                }, {
                  "description" : "The updated Amazon Polly voice to use for voice interaction with the user."
                } ]
              },
              "botLocaleStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotLocaleStatus"
                }, {
                  "description" : "The current status of the locale. When the bot status is <code>Built</code> the locale is ready for use."
                } ]
              },
              "failureReasons" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailureReasons"
                }, {
                  "description" : "If the <code>botLocaleStatus</code> is <code>Failed</code>, the <code>failureReasons</code> field lists the errors that occurred while building the bot."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the locale was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp of the date and time that the locale was last updated."
                } ]
              },
              "recommendedActions" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RecommendedActions"
                }, {
                  "description" : "Recommended actions to take to resolve an error in the <code>failureReasons</code> field."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 398
  }, {
    "id" : "d33864be-d569-372b-87db-484ec74d3284",
    "name" : "Describes the settings that a bot has for a specific locale. ",
    "request" : {
      "urlPath" : "/bots/7jZkdZJm2L/botversions/DRAFT/botlocales/yd0b/",
      "method" : "GET"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d33864be-d569-372b-87db-484ec74d3284",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotLocale"
        }
      }
    },
    "insertionIndex" : 399
  }, {
    "id" : "23f715c6-8e0f-3697-b994-c6688a346371",
    "name" : "Describes the settings that a bot has for a specific locale. ",
    "request" : {
      "urlPath" : "/bots/k0OZUutxIb/botversions/DRAFT/botlocales/222a/",
      "method" : "GET"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23f715c6-8e0f-3697-b994-c6688a346371",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotLocale"
        }
      }
    },
    "insertionIndex" : 400
  }, {
    "id" : "e14e704e-5d87-38f8-8c8b-92b9a5881e1e",
    "name" : "Describes the settings that a bot has for a specific locale. ",
    "request" : {
      "urlPath" : "/bots/POY2VlpCD0/botversions/DRAFT/botlocales/2l6a/",
      "method" : "GET"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e14e704e-5d87-38f8-8c8b-92b9a5881e1e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotLocale"
        }
      }
    },
    "insertionIndex" : 401
  }, {
    "id" : "f7e678f0-c973-38ff-bcbd-59591e5527c6",
    "name" : "Describes the settings that a bot has for a specific locale. ",
    "request" : {
      "urlPath" : "/bots/aQI7TzCvkD/botversions/DRAFT/botlocales/g5ce/",
      "method" : "GET"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7e678f0-c973-38ff-bcbd-59591e5527c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotLocale"
        }
      }
    },
    "insertionIndex" : 402
  }, {
    "id" : "5b9cd91c-57ab-34c6-933a-eba8d17a8c4e",
    "name" : "Describes the settings that a bot has for a specific locale. ",
    "request" : {
      "urlPath" : "/bots/vD8NAMKZko/botversions/DRAFT/botlocales/msf8/",
      "method" : "GET"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b9cd91c-57ab-34c6-933a-eba8d17a8c4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotLocale"
        }
      }
    },
    "insertionIndex" : 403
  }, {
    "id" : "b718f2bf-bb1f-3e6a-90fa-c92091845603",
    "name" : "Describes the settings that a bot has for a specific locale. ",
    "request" : {
      "urlPath" : "/bots/yEOspJNfLR/botversions/DRAFT/botlocales/4763/",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nluIntentConfidenceThreshold\" : { },\n  \"lastBuildSubmittedDateTime\" : { },\n  \"intentsCount\" : { },\n  \"failureReasons\" : { },\n  \"slotTypesCount\" : { },\n  \"description\" : { },\n  \"voiceSettings\" : {\n    \"voiceId\" : { },\n    \"engine\" : { }\n  },\n  \"botLocaleHistoryEvents\" : { },\n  \"botVersion\" : { },\n  \"botLocaleStatus\" : { },\n  \"botId\" : { },\n  \"lastUpdatedDateTime\" : { },\n  \"recommendedActions\" : { },\n  \"localeName\" : { },\n  \"localeId\" : { },\n  \"creationDateTime\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b718f2bf-bb1f-3e6a-90fa-c92091845603",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DescribeBotLocale",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with the locale."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The identifier of the version of the bot associated with the locale."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The unique identifier of the described locale."
                } ]
              },
              "localeName" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleName"
                }, {
                  "description" : "The name of the locale."
                } ]
              },
              "description" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Description"
                }, {
                  "description" : "The description of the locale."
                } ]
              },
              "nluIntentConfidenceThreshold" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ConfidenceThreshold"
                }, {
                  "description" : "The confidence threshold where Amazon Lex inserts the <code>AMAZON.FallbackIntent</code> and <code>AMAZON.KendraSearchIntent</code> intents in the list of possible intents for an utterance."
                } ]
              },
              "voiceSettings" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/VoiceSettings"
                }, {
                  "description" : "The Amazon Polly voice Amazon Lex uses for voice interaction with the user."
                } ]
              },
              "intentsCount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ResourceCount"
                }, {
                  "description" : "The number of intents defined for the locale."
                } ]
              },
              "slotTypesCount" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ResourceCount"
                }, {
                  "description" : "The number of slot types defined for the locale."
                } ]
              },
              "botLocaleStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotLocaleStatus"
                }, {
                  "description" : "The status of the bot. If the status is <code>Failed</code>, the reasons for the failure are listed in the <code>failureReasons</code> field."
                } ]
              },
              "failureReasons" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailureReasons"
                }, {
                  "description" : "if <code>botLocaleStatus</code> is <code>Failed</code>, Amazon Lex explains why it failed to build the bot."
                } ]
              },
              "creationDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the locale was created."
                } ]
              },
              "lastUpdatedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the locale was last updated."
                } ]
              },
              "lastBuildSubmittedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "The date and time that the locale was last submitted for building."
                } ]
              },
              "botLocaleHistoryEvents" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotLocaleHistoryEventsList"
                }, {
                  "description" : "History of changes, such as when a locale is used in an alias, that have taken place for the locale."
                } ]
              },
              "recommendedActions" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/RecommendedActions"
                }, {
                  "description" : "Recommended actions to take to resolve an error in the <code>failureReasons</code> field."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 404
  }, {
    "id" : "1cab6a1e-de01-3ba9-aff8-cea6b74fea2a",
    "name" : "<p>Removes a locale from a bot.</p> <p>When you delete a locale, all intents, sl...",
    "request" : {
      "urlPath" : "/bots/ALsBQxOq2G/botversions/DRAFT/botlocales/mv93/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1cab6a1e-de01-3ba9-aff8-cea6b74fea2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotLocale"
        }
      }
    },
    "insertionIndex" : 405
  }, {
    "id" : "abbc7749-d8e1-3160-b2d9-d488f6826d26",
    "name" : "<p>Removes a locale from a bot.</p> <p>When you delete a locale, all intents, sl...",
    "request" : {
      "urlPath" : "/bots/plbyYm6Sxi/botversions/DRAFT/botlocales/04c8/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "abbc7749-d8e1-3160-b2d9-d488f6826d26",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotLocale"
        }
      }
    },
    "insertionIndex" : 406
  }, {
    "id" : "bb1858d0-46be-338a-96e9-2db93558006c",
    "name" : "<p>Removes a locale from a bot.</p> <p>When you delete a locale, all intents, sl...",
    "request" : {
      "urlPath" : "/bots/j5ZpNIkT5t/botversions/DRAFT/botlocales/gi6n/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb1858d0-46be-338a-96e9-2db93558006c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotLocale"
        }
      }
    },
    "insertionIndex" : 407
  }, {
    "id" : "a79f4dd8-bb2d-3bae-ac9a-34fe9048e85f",
    "name" : "<p>Removes a locale from a bot.</p> <p>When you delete a locale, all intents, sl...",
    "request" : {
      "urlPath" : "/bots/bbbbbbbbbbbho46HklF/botversions/DRAFT/botlocales/12f7/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a79f4dd8-bb2d-3bae-ac9a-34fe9048e85f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotLocale"
        }
      }
    },
    "insertionIndex" : 408
  }, {
    "id" : "8dca96fd-a854-36be-908b-71eca2e1b853",
    "name" : "<p>Removes a locale from a bot.</p> <p>When you delete a locale, all intents, sl...",
    "request" : {
      "urlPath" : "/bots/H7jFJ87Je6/botversions/DRAFT/botlocales/732l/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dca96fd-a854-36be-908b-71eca2e1b853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotLocale"
        }
      }
    },
    "insertionIndex" : 409
  }, {
    "id" : "093dbc4f-02fc-3c1a-850d-8ad5082c2407",
    "name" : "<p>Removes a locale from a bot.</p> <p>When you delete a locale, all intents, sl...",
    "request" : {
      "urlPath" : "/bots/pxVQ1fLzko/botversions/DRAFT/botlocales/cih3/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "093dbc4f-02fc-3c1a-850d-8ad5082c2407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotLocale"
        }
      }
    },
    "insertionIndex" : 410
  }, {
    "id" : "2419e5c2-80e2-3986-b363-1e34751b7aa5",
    "name" : "<p>Removes a locale from a bot.</p> <p>When you delete a locale, all intents, sl...",
    "request" : {
      "urlPath" : "/bots/9Z1IeC2xWd/botversions/DRAFT/botlocales/ip2m/",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"botLocaleStatus\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2419e5c2-80e2-3986-b363-1e34751b7aa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "DeleteBotLocale",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot that contained the deleted locale."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that contained the deleted locale."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale of the deleted locale."
                } ]
              },
              "botLocaleStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotLocaleStatus"
                }, {
                  "description" : "The status of deleting the bot locale. The locale first enters the <code>Deleting</code> status. Once the locale is deleted it no longer appears in the list of locales for the bot."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 411
  }, {
    "id" : "18d3220f-29ae-3d13-a7e6-92634291b8fb",
    "name" : "Builds a bot, its intents, and its slot types into a specific locale. A bot can ...",
    "request" : {
      "urlPath" : "/bots/veEAzN1ce0/botversions/DRAFT/botlocales/0r33/",
      "method" : "POST"
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18d3220f-29ae-3d13-a7e6-92634291b8fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildBotLocale"
        }
      }
    },
    "insertionIndex" : 412
  }, {
    "id" : "13d4a114-11c1-36fd-a005-183575bc68d6",
    "name" : "Builds a bot, its intents, and its slot types into a specific locale. A bot can ...",
    "request" : {
      "urlPath" : "/bots/fPB6gYUT4q/botversions/DRAFT/botlocales/895w/",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13d4a114-11c1-36fd-a005-183575bc68d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildBotLocale"
        }
      }
    },
    "insertionIndex" : 413
  }, {
    "id" : "ddc0b3ed-f954-3195-b761-e3d1ee3f1035",
    "name" : "Builds a bot, its intents, and its slot types into a specific locale. A bot can ...",
    "request" : {
      "urlPath" : "/bots/czkCLB1zsl/botversions/DRAFT/botlocales/ksqk/",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ddc0b3ed-f954-3195-b761-e3d1ee3f1035",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildBotLocale"
        }
      }
    },
    "insertionIndex" : 414
  }, {
    "id" : "6e244963-7a83-3540-acfd-236769cb8971",
    "name" : "Builds a bot, its intents, and its slot types into a specific locale. A bot can ...",
    "request" : {
      "urlPath" : "/bots/LHNY85ITk6/botversions/DRAFT/botlocales/043e/",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e244963-7a83-3540-acfd-236769cb8971",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildBotLocale"
        }
      }
    },
    "insertionIndex" : 415
  }, {
    "id" : "77ede431-896e-325b-837d-529e230e9c5a",
    "name" : "Builds a bot, its intents, and its slot types into a specific locale. A bot can ...",
    "request" : {
      "urlPath" : "/bots/Pqich2nJ6U/botversions/DRAFT/botlocales/qojl/",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77ede431-896e-325b-837d-529e230e9c5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildBotLocale"
        }
      }
    },
    "insertionIndex" : 416
  }, {
    "id" : "d816848a-64ee-39e8-aee8-37fa2a7dc1eb",
    "name" : "Builds a bot, its intents, and its slot types into a specific locale. A bot can ...",
    "request" : {
      "urlPath" : "/bots/H9N4QKCBao/botversions/DRAFT/botlocales/y5b1/",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d816848a-64ee-39e8-aee8-37fa2a7dc1eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildBotLocale"
        }
      }
    },
    "insertionIndex" : 417
  }, {
    "id" : "32d87681-b985-38a5-b605-9af8cd538c6a",
    "name" : "Builds a bot, its intents, and its slot types into a specific locale. A bot can ...",
    "request" : {
      "urlPath" : "/bots/os6DSlROC7/botversions/DRAFT/botlocales/20gc/",
      "method" : "POST"
    },
    "response" : {
      "status" : 202,
      "body" : "{\n  \"lastBuildSubmittedDateTime\" : { },\n  \"botLocaleStatus\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32d87681-b985-38a5-b605-9af8cd538c6a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BuildBotLocale",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the specified bot."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DraftBotVersion"
                }, {
                  "description" : "The version of the bot that was built. This is only the draft version of the bot."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The language and locale specified of where the bot can be used."
                } ]
              },
              "botLocaleStatus" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotLocaleStatus"
                }, {
                  "description" : "The bot's build status. When the status is <code>ReadyExpressTesting</code> you can test the bot using the utterances defined for the intents and slot types. When the status is <code>Built</code>, the bot is ready for use and can be tested using any utterance."
                } ]
              },
              "lastBuildSubmittedDateTime" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Timestamp"
                }, {
                  "description" : "A timestamp indicating the date and time that the bot was last built for this locale."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 418
  }, {
    "id" : "b5e71574-74d9-3f14-9d62-52f4b5e707a5",
    "name" : "Update a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/ds0UxOgxDW/botversions/DRAFT/botlocales/tt89/customvocabulary/DEFAULT/batchupdate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5e71574-74d9-3f14-9d62-52f4b5e707a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchUpdateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 419
  }, {
    "id" : "416e3137-acb2-3fc9-9349-05426d218acc",
    "name" : "Update a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/5AbRycjUVQ/botversions/09172/botlocales/7j88/customvocabulary/DEFAULT/batchupdate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "416e3137-acb2-3fc9-9349-05426d218acc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchUpdateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 420
  }, {
    "id" : "25c8b385-3f3c-317d-91ed-ce9000bca06f",
    "name" : "Update a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/lB8ojfXrzT/botversions/01360/botlocales/0131/customvocabulary/DEFAULT/batchupdate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25c8b385-3f3c-317d-91ed-ce9000bca06f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchUpdateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 421
  }, {
    "id" : "b54b4da1-ce46-310a-ae75-2ccba2d7107a",
    "name" : "Update a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/TlQ9VHP1nA/botversions/DRAFT/botlocales/g41h/customvocabulary/DEFAULT/batchupdate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b54b4da1-ce46-310a-ae75-2ccba2d7107a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchUpdateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 422
  }, {
    "id" : "b854527f-e546-3469-979b-1e9098c11775",
    "name" : "Update a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/ke37rGmO40/botversions/92934/botlocales/58mh/customvocabulary/DEFAULT/batchupdate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b854527f-e546-3469-979b-1e9098c11775",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchUpdateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 423
  }, {
    "id" : "30a30936-06e0-37ca-b5d1-49beb54396d3",
    "name" : "Update a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/zs8CsXagK9/botversions/40835/botlocales/1052/customvocabulary/DEFAULT/batchupdate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resources\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"errors\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30a30936-06e0-37ca-b5d1-49beb54396d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchUpdateCustomVocabularyItem",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with this custom vocabulary."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The identifier of the version of the bot associated with this custom vocabulary."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale where this custom vocabulary is used. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"> Supported Languages </a>."
                } ]
              },
              "errors" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailedCustomVocabularyItems"
                }, {
                  "description" : "A list of custom vocabulary items that failed to update during the operation. The reason for the error is contained within each error object."
                } ]
              },
              "resources" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomVocabularyItems"
                }, {
                  "description" : "A list of custom vocabulary items that were successfully updated during the operation."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 424
  }, {
    "id" : "c835e1a1-c83e-3d40-877d-2a93999952be",
    "name" : "Delete a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/mNm5TPQB9r/botversions/84783/botlocales/269j/customvocabulary/DEFAULT/batchdelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c835e1a1-c83e-3d40-877d-2a93999952be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchDeleteCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 425
  }, {
    "id" : "6f878b6a-e1d5-3350-ab0d-1e935afd8254",
    "name" : "Delete a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/8DL828MzmA/botversions/DRAFT/botlocales/60w0/customvocabulary/DEFAULT/batchdelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6f878b6a-e1d5-3350-ab0d-1e935afd8254",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchDeleteCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 426
  }, {
    "id" : "2cecb29b-4299-30da-b7c3-f737adc2c546",
    "name" : "Delete a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/nKjUetMcoA/botversions/DRAFT/botlocales/qj4g/customvocabulary/DEFAULT/batchdelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cecb29b-4299-30da-b7c3-f737adc2c546",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchDeleteCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 427
  }, {
    "id" : "29e7178d-7395-3bdc-9978-b4258a5ab052",
    "name" : "Delete a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/5mRSxlzrtc/botversions/21484/botlocales/xau5/customvocabulary/DEFAULT/batchdelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29e7178d-7395-3bdc-9978-b4258a5ab052",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchDeleteCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 428
  }, {
    "id" : "801a0906-ce07-32c8-8995-f9ef91ff419e",
    "name" : "Delete a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/9FPKjUH3Eh/botversions/DRAFT/botlocales/4ecy/customvocabulary/DEFAULT/batchdelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "801a0906-ce07-32c8-8995-f9ef91ff419e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchDeleteCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 429
  }, {
    "id" : "cd5274b5-63ac-3b03-a36c-ea837825b52e",
    "name" : "Delete a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/Yl82UvLUJp/botversions/13317/botlocales/7qlr/customvocabulary/DEFAULT/batchdelete",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resources\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"errors\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd5274b5-63ac-3b03-a36c-ea837825b52e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchDeleteCustomVocabularyItem",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with this custom vocabulary."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The identifier of the version of the bot associated with this custom vocabulary."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale where this custom vocabulary is used. The string must match one of the supported locales. For more information, see Supported languages (https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html)."
                } ]
              },
              "errors" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailedCustomVocabularyItems"
                }, {
                  "description" : "A list of custom vocabulary items that failed to delete during the operation. The reason for the error is contained within each error object."
                } ]
              },
              "resources" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomVocabularyItems"
                }, {
                  "description" : "A list of custom vocabulary items that were successfully deleted during the operation."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 430
  }, {
    "id" : "5f34d986-7526-3bd6-82b0-4312646e750c",
    "name" : "Create a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/gR0b9u1yYr/botversions/11340/botlocales/g9wd/customvocabulary/DEFAULT/batchcreate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f34d986-7526-3bd6-82b0-4312646e750c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchCreateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 431
  }, {
    "id" : "e353e4f9-2572-338b-aac7-4a73226fd25c",
    "name" : "Create a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/X3ToMZrszI/botversions/DRAFT/botlocales/z076/customvocabulary/DEFAULT/batchcreate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e353e4f9-2572-338b-aac7-4a73226fd25c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchCreateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 432
  }, {
    "id" : "41825c99-3853-36ed-947b-1d1e396ab7af",
    "name" : "Create a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/zE4xSkZ1xy/botversions/90369/botlocales/0fw8/customvocabulary/DEFAULT/batchcreate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41825c99-3853-36ed-947b-1d1e396ab7af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchCreateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 433
  }, {
    "id" : "29e3cef9-3889-3fba-a161-98a373b771ef",
    "name" : "Create a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/KikFW1Zbu3/botversions/DRAFT/botlocales/rwg8/customvocabulary/DEFAULT/batchcreate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29e3cef9-3889-3fba-a161-98a373b771ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchCreateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 434
  }, {
    "id" : "25411649-cde9-36c3-a985-42ea787729c8",
    "name" : "Create a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/fJdhvGzeNn/botversions/DRAFT/botlocales/85v9/customvocabulary/DEFAULT/batchcreate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25411649-cde9-36c3-a985-42ea787729c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchCreateCustomVocabularyItem"
        }
      }
    },
    "insertionIndex" : 435
  }, {
    "id" : "5f2aaf66-8913-3653-8c01-34dc9d09ae97",
    "name" : "Create a batch of custom vocabulary items for a given bot locale's custom vocabu...",
    "request" : {
      "urlPath" : "/bots/KL3Wp1S1bD/botversions/DRAFT/botlocales/80m2/customvocabulary/DEFAULT/batchcreate",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"resources\" : { },\n  \"botId\" : { },\n  \"botVersion\" : { },\n  \"localeId\" : { },\n  \"errors\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f2aaf66-8913-3653-8c01-34dc9d09ae97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "BatchCreateCustomVocabularyItem",
          "schema" : {
            "type" : "object",
            "properties" : {
              "botId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Id"
                }, {
                  "description" : "The identifier of the bot associated with this custom vocabulary."
                } ]
              },
              "botVersion" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BotVersion"
                }, {
                  "description" : "The identifier of the version of the bot associated with this custom vocabulary."
                } ]
              },
              "localeId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/LocaleId"
                }, {
                  "description" : "The identifier of the language and locale where this custom vocabulary is used. The string must match one of the supported locales. For more information, see <a href=\"https://docs.aws.amazon.com/lexv2/latest/dg/how-languages.html\"> Supported Languages </a>."
                } ]
              },
              "errors" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/FailedCustomVocabularyItems"
                }, {
                  "description" : "A list of custom vocabulary items that failed to create during the operation. The reason for the error is contained within each error object."
                } ]
              },
              "resources" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/CustomVocabularyItems"
                }, {
                  "description" : "A list of custom vocabulary items that were successfully created during the operation."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 436
  } ]
}