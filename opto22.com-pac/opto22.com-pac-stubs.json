{
  "mappings" : [ {
    "id" : "1181093c-bf24-47f9-8d61-a290eac2157b",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2023-01-09T10%3A44%3A45.414241Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 253124056,\n  \"message\" : \"Aut voluptatum explicabo laborum. Iusto dolorum est dolor tempora nulla animi. Corrupti in velit facilis blanditiis aut molestiae. Incidunt in dolorum sunt eum voluptas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1181093c-bf24-47f9-8d61-a290eac2157b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.414279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "b269b1f9-84b3-4908-99ff-61fbb5784327",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2022-12-05T10%3A20%3A45.414134Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1814998761,\n  \"message\" : \"Commodi soluta voluptatem distinctio et. Veniam eos sed nam eos et consequatur. Voluptatem illum est ut consequatur et. Tempora eaque rerum harum autem repellat adipisci rerum. Ea aperiam nihil repell\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b269b1f9-84b3-4908-99ff-61fbb5784327",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.414171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "c8326ab3-9202-4461-ac4a-46255fcfcce4",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2022-05-11T08%3A35%3A45.414023Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1867863220,\n  \"message\" : \"Voluptas quo aut eum. Sed ea deleniti. Voluptatibus sed repellendus et maiores soluta vitae in.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8326ab3-9202-4461-ac4a-46255fcfcce4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.414063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "101b605d-ae28-461e-b5d6-41ff5bd81cd8",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2023-01-01T08%3A39%3A45.413909Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 7.180900665273891E37\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "101b605d-ae28-461e-b5d6-41ff5bd81cd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.413946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "f942a564-e414-4186-b639-ed595aec90a6",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 490613443,\n  \"message\" : \"Rerum et sapiente quia est sit provident. Exercitationem sunt doloremque sunt illum eaque. Corrupti et quia quo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f942a564-e414-4186-b639-ed595aec90a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.413861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "872c5812-a421-44de-8e9a-dda60b361ec8",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 784384804,\n  \"message\" : \"Blanditiis quis non velit quae voluptatem. At cupiditate eius cum ut distinctio hic autem. Est facilis tempore ex magnam ab quia ut. Reiciendis rerum fugiat aut error aliquid autem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "872c5812-a421-44de-8e9a-dda60b361ec8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.413786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "8dce8550-63c5-488c-808c-8b4c26b2c320",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Sarah Hand\",\n  \"value\" : 2.502706734022093E38\n}, {\n  \"name\" : \"Hollis Farrell\",\n  \"value\" : 6.2377668305462335E37\n}, {\n  \"name\" : \"Anisha Greenholt\",\n  \"value\" : 6.943605697538993E37\n}, {\n  \"name\" : \"Hope Stiedemann\",\n  \"value\" : 4.929180115038196E37\n}, {\n  \"name\" : \"Mr. Giuseppina Denesik\",\n  \"value\" : 3.2673301590068168E38\n}, {\n  \"name\" : \"Willetta Gusikowski\",\n  \"value\" : 2.1934675893737535E38\n}, {\n  \"name\" : \"Mr. Francisco Reichel\",\n  \"value\" : 2.079506645173197E37\n}, {\n  \"name\" : \"Frances Paucek\",\n  \"value\" : 2.5001989870826226E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8dce8550-63c5-488c-808c-8b4c26b2c320",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.413702Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "213d78d7-7818-40dc-a2dc-2490664fe342",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Dr.+Vernia+Gulgowski",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1805455547,\n  \"message\" : \"Illo id atque impedit et ut magnam qui. Ipsum facilis nulla. Modi et provident consequuntur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "213d78d7-7818-40dc-a2dc-2490664fe342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.413286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "7463b52f-59d2-4889-b721-fe2e90976208",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Edward+Kertzmann",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1567417397,\n  \"message\" : \"Blanditiis aut aut temporibus. Voluptatem enim iure nesciunt. Eaque et voluptatem ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7463b52f-59d2-4889-b721-fe2e90976208",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.413173Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "3c3e5566-646f-4187-a0ef-032139f15060",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Edmundo+Cronin",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 108241182,\n  \"message\" : \"Dignissimos temporibus explicabo quia temporibus consequatur praesentium. Eum voluptatem rerum non porro. Odit voluptatibus fugiat voluptas qui temporibus minus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c3e5566-646f-4187-a0ef-032139f15060",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.413065Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "575a40d5-25a8-4ccb-9fe6-e7e754c66a3a",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Billy+Runolfsdottir+III",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"errorCode\" : 601015750,\n  \"message\" : \"Voluptatem est culpa voluptas. Illum adipisci ut. Aperiam eum harum dolor iusto voluptas a. Minima corporis asperiores eius maxime et. Natus fugiat aliquid quam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "575a40d5-25a8-4ccb-9fe6-e7e754c66a3a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.412949Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -23 ** The string you passed is longer than the width of PAC Control string variable or table element you are writing to.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "cd3d402a-0dbb-4258-a589-a0bad90d1cb9",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Bridget+Lynch",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1817116136,\n  \"message\" : \"Non repudiandae dolorem deleniti. Delectus facere architecto a. Inventore itaque et et et deserunt. Et temporibus sint in rerum amet. Fugit veniam est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd3d402a-0dbb-4258-a589-a0bad90d1cb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.412812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "dbfa9965-2e3c-41be-a2de-50d7e27dcaa3",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Tyrell+Strosin",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1520377198,\n  \"message\" : \"Eum iste est. Quaerat occaecati velit reprehenderit possimus tenetur aspernatur et. Qui beatae minima exercitationem eaque perferendis amet itaque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbfa9965-2e3c-41be-a2de-50d7e27dcaa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.412697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "13cdc84f-60fb-4260-894c-4222c81d4680",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Delilah+Cormier",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 406754472,\n  \"message\" : \"Id magnam quos hic officiis. Rerum hic tempore sequi. Aut sunt architecto eaque illum quidem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13cdc84f-60fb-4260-894c-4222c81d4680",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.412588Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "f44f9896-14b1-4b94-b1a1-c95ae5313804",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Parker+Mosciski",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"kvgo1671eqrstd8srfh70iufunq67oby5holdpxz462asd2gapn3p4nitrllzmvqdfozgd6n5auap7siyku7ont859v7qwcvyhsm0da9g4z4ra1mm9sbq5gmeyplgh3cxqca4q58bme8zuia6g01u5b4bn5c2prem8h3peyttlx2objb5xmasvr5ullyrkhh5hd9e3xbxle6qaw8csy6548xabshvv50my2wskwnh5gk2akawo0d0m9t2zm3npnc5bbwdu1gv6fw7z8k7a0zik7tvbfurbe01fcasotn957i9tbk6m7gubdsi1jcxv3cknpcjav4pjtq1l7qxs8xk1o79tifs3l1wkinqssdcvbwjalfsbzwtd0dp1h61edv7fgrd3cp2w3s20wubwsicnl6erfwm5r973td1qqyb1g7e0uwqk3kyfuckk033a3gtirbm9jcbbibrdkpcckci6cwuogya707lq56y03kh6ltij1ojfszpjehebj5uoaf3tzrnclir9117uuilrqmdf19zctsc378bj6s9oqh39egwnvy45u3hwt88pb2ie9ld2snj8difbt0w1fc6t4w68tfas4pskdud8bylhokd4dukwvyo7srfbz5etzgw6qsfu1f8i9gubyf2lbdyvqa1vwvaq2bt6duuowwbzcxr341anv04wfzqyvxfdw6gqmd8qzfz46wmjr2fee8qrxohryap72pvecpvjn73ybc0kn4l2c88wy03mum802kmssd45arsgf61id5xw3liapmz06jk8qr0auqkadp0adto4g8if9u8zi4msnqlndax7tr5mpoylmu7onwwf6ldlxhryt9ucflikq4sb5krk1cd0wb05gir1bh6ajshccpq3lzdzxk9v4kpt33908y43i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f44f9896-14b1-4b94-b1a1-c95ae5313804",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.412478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "maxLength" : 1024,
                "type" : "string",
                "description" : "The value of a string; string width (max length) for each string variable is defined in the strategy"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "c1126ba1-5c95-4f7e-9c8e-37f02e141fe7",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 140859140,\n  \"message\" : \"Fuga quod veniam. Sint iste voluptas quas qui. Ipsam esse nihil ipsum totam eum. Rem eveniet dolorem recusandae officiis ipsum. Quia adipisci et facilis sed voluptatem quae minima.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1126ba1-5c95-4f7e-9c8e-37f02e141fe7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.412367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "2a62e30c-0dd4-4224-989d-ec546b87c89d",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1280427855,\n  \"message\" : \"Aut asperiores hic. Quas doloribus non. Doloribus quasi vel debitis fuga id et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a62e30c-0dd4-4224-989d-ec546b87c89d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.412288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "f4b8a98e-3ff2-4dd8-8e1d-21aec8b1835b",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Deann Keeling PhD\",\n  \"value\" : \"l97rmiaem82dy2wfty06intdtzlabkywujttitbnhd619qqxfelcd1iq1tp0yihs9muoo6hkz0ba4vizo4zhw89bj6ga2uymqhi0e3jkwpcxmfqmyejl5vmf9wh045ijepbxynt7twqb50zy0ihousyvx0g9w5me3evb9iii14k2nlm13s81niftmpqvekw3jkaamsc4xabrdutumqpuq2219hjg58hr6ehh7626np2mfclmp2b9xqg5s1aiqzq9qs7mmywf5qarolzncw60pw7s1gsvpcpihwp3smq3mdvduvl17ar1qr4v0z8427ghj0idxp8bv1gmncx2jm6q8e88nyj9ghdv2djt4n26aztdga2p88q1vohjo08e5caj4a4x3wg9pzfx8sj709szq6hna6obz62h8w4qsgivz4mvdf6uxx4sa9uk2was75o6af7ko7g853hshdmu6cc8zaaa65b10vq1ji3ufi2tak4ipv6mvprag7vrkuilc47amqxi0g8lq2pi9qwmg5rsni784bomdi2abj3n4x6tdaho05fu\"\n}, {\n  \"name\" : \"Davis Abbott\",\n  \"value\" : \"k5q8lxrz8rgyjwqphixpff9ls2qmmmbvfnddni2b2h1a6clw32p7v4jhmdxazjppmyt0s4jsdtj2pgnp3ekgcjvzfbnm68ju8jcxy9g5l3vw5ye3kxa93oj4y7l7sgl61a9cfbrystc6ywgz2km7orljvnzq5bbixmi4c0qgkcqy80bce31kqdjkvc89s15ulovr9i7mcf3pmxoyjxe5mkvctt4tbqn8k4dri4g5t0wbxg8ahnmmwqbilv0qkix22twmmvncdw442nxn8d8uslinra0c0dzggcfevlfvevdcaw1aha97ebzuc9jn28h0p9rsfjvnwkzrkhfqjnos9nckj59r8avh53zo6y9nlov96sebiwm8qusckuob0v5koj7qyp8cnik5t4kqfo7h1qeyzr9hzjfzrdxedowpl7zl99s7d065al4r5p6jpuxqx8y8oj9ykj4jucx004nx1tl65ojr94s0expcfm28mmig03lrsb765wt03brv9m\"\n}, {\n  \"name\" : \"Miss Antwan Romaguera\",\n  \"value\" : \"yhnibwk0te21g2wiga00th421nihtnhigygidjsh00egey11yxi5nzfljbym9soifgo1sfqqef2vstu7b7d2zld89k4wrivx878aak2xaqzejv6mctrwwwgtch9wwoohi4wpwo5spu5j8n91wqa2w9r3n615g8ev1a7o6xpie17xti7g4mau1fe1vjnkn8a4y5a08coyl2yuzl8nblhhhtp1fx8gx966gd5guh5ubxa7q2te53hpmetirj0ay3wj43b6gw84zjjjx1chfh2i9bkzkpehylqu9e5ut4ti1702mo7ghq6fessehgjqpx628679neg369l9optk1v311ocmnzet21n984oi465fyq0welyzlid32tgqd2kln2ty1flm28lmzo7yq4n6xle9ph8g7xpim4dw772tbz3rjxysixmx0cchup0zmpt95elpgkme0pzkahvhf20cuxft08trttvqylb8hrydhwxo36gueh600ihdpsd4h94oedh5s327i513madfpzf7lmr63vyetejnli570cdc7rnhck7al0ba51oj8qztqfh0vsrc2q0rockq8d66ybq29wydep85vgi7cetftmedkmiuvky5n5hhc66jiklqkttj79o4evw1tmz5o52jyvm5jb0ioijs2z7paxljseqgysqrzojxy63s1wvi8w4jsh0koyaob9kdqjnop5pb21f8fj4q6yqvy745w01vged5u5zd5lb08md78iebucg4t9ezsa10q0ez3so4kje06novw5u4vpuj48ary5rjtwisz5cmxch95idq864xfvcmsjapfxhcyxigf05jkjm8dvdqbfsf8wee0qg4bqw71j6t7w5ji\"\n}, {\n  \"name\" : \"Callie Wiegand\",\n  \"value\" : \"inj7w6r07dg10snv3ad8woqanased7g46jsvsko7u0baunn11t1c7s29cv55ji6omm2sgq7ut1o59n83su729sl8zg70wvdqm62hcqvn6rzldtde9l4jlx799g0y8p85mqqidg1vj6kj2048oj8u4m2i6oek01s312f0uypitbjm9e5udj37xpfo2e0lvao60zhmciap7so2lstkb9yzg4svhkxepxdgz759dkoqffbwypfek13x5jdvmob2q2yfqwdk7ushbj9f5q8rqv760fdsacp1n104sdin1e6gsggbpfohtznxqgt29fqkj9arem5rs4demupx28a7bq1f2dgonykam3lp0b836u9r8x8pc8z867e69cf4fzqk1agnm0l71ini8y2ekw2xc2vxdqis28kpbzo8sqygh479kzhk5j7fyzupw2kyonudwqwflb9y4ic2deqj0qv8bypsxy5wluopcmhcqhsks1f2yuyxvxmhibfmpvmnt\"\n}, {\n  \"name\" : \"Lucila Watsica\",\n  \"value\" : \"8d1fezs5adn40u810uvnlpwf3eo131zzgbyqe84x37fqdm1o0kuv4o3k6hmkss9t83t8xn9o5wv41hvwt3\"\n}, {\n  \"name\" : \"Kelly Fritsch\",\n  \"value\" : \"sq6126r0z0ifrpig78u4pyhru0zi278r8sv0x5hmtbe0ldlpvbz7xxl6wfjpxyx0toxnndc3srzf3vivbaz0ckc3mwixypzbt3ok67sgaqxcvx1dqa6x8eqdxv1sbh5p1esmcay9n12g3sa7hgflo3gp9rgk617avzo9zzh1qgw5t66joi0scw1nxabgaix5vj2lps\"\n}, {\n  \"name\" : \"Faustina Bosco\",\n  \"value\" : \"3i3s8rzl3poecj0s72m7hf4lhwvsm2vhwh6y3s2r7t8pn9d8dxrvz0jn05n5mhfhw26klzzqn3lpdmx6lwrdux44b629rlhmhvja1fcipgga7dxhrxhhxyl4p3hlbtxmxinlw1zngikllrhr3utgl9r3qob705i2u9h01w9g8f59i3huedgsl1qk2k9xnmi1fm24uhqbtpcubydjm0572gqct1u3b4zh98wo9bqu0iswovpyla1pw33no7izhyqgeijw2rptzwyc431juqncm1pd542bxwr3fe5ku0r2chlp05gd5ek2pi416hdie3ue1rpg9jv3mgifkmw9ypfb1rkdq24tdf78z4spzs7u1gzjviz3qqc1d0k35zeil7ajlfs67e1wlvfgqsfzbro66syvv843g0btz754u1z0iwf6hoi97vu1cccnl1x74l6vxgixze7hdym9jr1klqaemvrh9357tbbcom3n79imx71qt1o9lo5md63nl05y5h1ynddu2pd0di24bd7kzd70ppgvcl44ysp3d5zcg6uzzz4zgsm5493glq652futgcogguxv0tumi60bh15ri81aiod3z4su4rstz882aeo3jyldxgs3j2xr0d9bj5p66om6zr3xwwqckx4kajyxqz8iud6yzfq5ehm6i3fl40vavusg1fh1332fh1786o23nakauorx7dyde5h2dbbf2a6v4dux7m69y0g65qkls8pon6kdgcyynkgx9w9wgn9y2nuydtda0sulhd0pfh47uxs5x66y013ncamelxievenqkudfx4my86z33xn3srd282vtdzgcguesdmc58h0follsh\"\n}, {\n  \"name\" : \"Mr. Laci Feest\",\n  \"value\" : \"1pyuklzs7f3hd6xtt26eidj1oah6mspwxwl6zbbom715cw3xqb8v170yp07e5l821q8snb6mpohcklwfmq2dip1ih0qvwnj1hmaik0u1e4j\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4b8a98e-3ff2-4dd8-8e1d-21aec8b1835b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.412214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StringVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "c11ebced-6174-4970-8453-5e72426758be",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Jose+Flatley+V/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1967740666,\n  \"message\" : \"Eos blanditiis et consequuntur totam. Fuga ea quasi ullam minima hic eum et. Consequatur officia aut aut. Iusto illo enim voluptatum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c11ebced-6174-4970-8453-5e72426758be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.411712Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "58d07a9e-217b-47cb-9ee3-87a8e7c40de1",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Zack+Osinski+III/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1537308693,\n  \"message\" : \"Laboriosam culpa repudiandae aut est porro. Dolor nisi quam iure. Eum accusamus eum quidem alias et. Quia aut totam voluptas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58d07a9e-217b-47cb-9ee3-87a8e7c40de1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.411592Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "6709ccd1-cd60-4b67-bcb1-d345f25e12dd",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Myra+Hoppe/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 474794098,\n  \"message\" : \"Fugit odio aut modi. Quo quisquam repellat dolores. Dolores animi in repudiandae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6709ccd1-cd60-4b67-bcb1-d345f25e12dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.411475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "20500395-f24e-416b-954f-fee66956e96f",
    "name" : "Sets the value of an integer64 variable as a string - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Julius+Schumm+Jr./_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "20500395-f24e-416b-954f-fee66956e96f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.411367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64VarAsString"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "a11bec94-53ef-48c8-b39d-c813328db90e",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Gabrielle+Rogahn/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1670877485,\n  \"message\" : \"Tempora accusantium dolores numquam. Tempora nobis quia sit. Est ipsum quisquam rerum sit debitis doloribus ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a11bec94-53ef-48c8-b39d-c813328db90e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.411304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "3334b75e-08eb-414a-95ba-450b6fcd2305",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Sebastian+Leffler+II/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 777738034,\n  \"message\" : \"Exercitationem cum reiciendis id. Perferendis asperiores voluptas temporibus suscipit. Quae delectus et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3334b75e-08eb-414a-95ba-450b6fcd2305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.411196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "b09dae1f-9dae-4ef4-9aee-a3a918afaea4",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Chester+Ziemann/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1766057790,\n  \"message\" : \"Quia a iste consequatur. Quibusdam tempore libero voluptatem porro laborum quia veritatis. Aut amet maiores illo aut aperiam molestiae quaerat. Qui veniam voluptatem tenetur aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b09dae1f-9dae-4ef4-9aee-a3a918afaea4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.411082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "d50842bc-8d26-45c2-886c-ec8710f0185c",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Marla+Rosenbaum/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"4suv8pe8hyjihlcn75iibsi6ptx0skagn9orcnufht7ckzase\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d50842bc-8d26-45c2-886c-ec8710f0185c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.410966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string",
                "description" : "Value of the integer64 variable expressed as decimal string, e.g. \"34359738367\""
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "b35f6261-c00b-4448-878a-6baa8be3f6cf",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Gregg+Durgan",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 433408389,\n  \"message\" : \"Autem mollitia voluptas expedita est et. Aut nihil est nulla dolorem aliquam qui. Odio et commodi ipsa incidunt. Officia officia molestias eos nobis consequatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b35f6261-c00b-4448-878a-6baa8be3f6cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.410861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "5b928848-056e-476e-9452-856bfbf5dae8",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Zachariah+Lindgren",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 24802329,\n  \"message\" : \"Maiores est repudiandae enim voluptatum. Aspernatur veritatis quis sed ut optio. Quasi et tenetur quo aut. Laborum neque quas assumenda accusantium sed tenetur. Facere architecto magni pariatur volupt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b928848-056e-476e-9452-856bfbf5dae8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.410741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "c18a58f4-f78e-4171-976e-0834d762b4a7",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Dr.+Elmo+Rice",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1331730172,\n  \"message\" : \"Quia totam expedita corrupti fugiat. Occaecati modi debitis sint et dolorem culpa. Non voluptates vero aliquam magnam. Atque nemo sit sunt et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c18a58f4-f78e-4171-976e-0834d762b4a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.41062Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "236d81fc-334f-4a7b-9a87-8f02c322eb12",
    "name" : "Sets the value of an integer64 variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Queenie+Kub",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "236d81fc-334f-4a7b-9a87-8f02c322eb12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.410506Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Var"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "06e35870-4d50-4dd5-8994-fbdd5f99c61f",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Karl+Will",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 396755896,\n  \"message\" : \"Rerum quam sed. Temporibus ut est incidunt et sit sint. Temporibus et dignissimos error laboriosam voluptas. Eveniet facere nesciunt tempora maxime quo veniam. Nobis vero cumque porro voluptas ullam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06e35870-4d50-4dd5-8994-fbdd5f99c61f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.41045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "665a7dcd-5017-4f9f-bd4f-39a9c71f2cc7",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Dr.+James+Jacobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1579635905,\n  \"message\" : \"Hic ut voluptates ut. Sunt perferendis blanditiis nobis ut qui. Cupiditate accusamus magnam aperiam consequatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "665a7dcd-5017-4f9f-bd4f-39a9c71f2cc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.41033Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "d38ba91e-ae91-4563-995e-c3ad18041b29",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Phil+Stoltenberg",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 780258470,\n  \"message\" : \"Quis velit sed laborum maiores. Aut rerum dolores. Adipisci sed voluptas labore ut. Eveniet voluptatem qui provident delectus quia vitae dolorem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d38ba91e-ae91-4563-995e-c3ad18041b29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.410221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "27dd01ef-cfb9-4119-b407-c1e9eddc49f7",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Terry+Boyle",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 3370917860760234173\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27dd01ef-cfb9-4119-b407-c1e9eddc49f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.410108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer64 variable",
                "format" : "int64"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "fb580cff-8aa2-4946-a689-1f354b4348c7",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 553682178,\n  \"message\" : \"Ducimus rem ex. Hic aut non labore qui doloremque adipisci cumque. Voluptatem nesciunt numquam vitae sint consectetur aut. Non ipsam porro fuga impedit ducimus beatae sapiente.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb580cff-8aa2-4946-a689-1f354b4348c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.410022Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "b7d09160-f75e-4ea2-b6b5-a15f22964bea",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1114864946,\n  \"message\" : \"Facere sint explicabo qui expedita. Eos temporibus officiis tempora et. Eligendi perferendis quis. Molestias iusto sed sint. Qui tempora doloribus ex non et voluptates voluptas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7d09160-f75e-4ea2-b6b5-a15f22964bea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.409943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "db7fdaa0-9702-4609-8e36-58aa5612c4ae",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Forrest Lindgren\",\n  \"value\" : \"gllabqngj2t5l55m636k09qgzfploidfaeyyf4fof7d8cpwonxcqrzxj3f5dags77l2jrvnbzrwpvykylzev84h09pos3x11bb80jfxucfqwftjxp\"\n}, {\n  \"name\" : \"Nedra Collins\",\n  \"value\" : \"3aj8y1fdn0tnq12dz7px2qa5o2hcfx3cbx2l4mws0qxq5il1oliy5loxzlsixvf8f27buw0ma7cgee5qjzfuajr64i8c11umd6\"\n}, {\n  \"name\" : \"Miss Peggie Cole\",\n  \"value\" : \"a75u8z6btko8mhm\"\n}, {\n  \"name\" : \"Rick Bernier\",\n  \"value\" : \"oc1r1d9kwidl706tps3oakr65cgwgb83azgw1eep7azjq32n2xdfjjud4eq30auzd7zlywzdvu2efvvyvq1v6knpz5wkvp35c99b4ddv5p6ne1af963asryqp0vdzznordbgc3rzwejpf15lffa4hxnked25uljlnf1e\"\n}, {\n  \"name\" : \"Wilhelmina White\",\n  \"value\" : \"lklic0bov7lg3oqh4enpantw9cfgra5bv6k3zoahzpqg\"\n}, {\n  \"name\" : \"Florrie Bartoletti\",\n  \"value\" : \"n9rlic2vbw9lg2uxzojgxz3b2o5fgo0er5gyjaih9qbft2qkqy2msafnbumncj9at9mpmi88b1bg6xxu599015gyezjxn3gmqgyf9t08o9zfz8bltqvlr9xoma2cb17lywoav3zsxtpfsmxh9denm5y\"\n}, {\n  \"name\" : \"Stan Olson\",\n  \"value\" : \"86hcpia10nv7b92founvsyscq3hulsrv86alf2ef7u6yuapf27rl8e2tx8y6tqv68dr42k0czdnk063690li4n1famvay7vq7m78ctcn7j95x74s6m5jwmc13x788tijnp4nbu3kc9cgpgsxw4fgwpo3yqt2ohai5o4vhtooievbp1o2kbj4dy\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db7fdaa0-9702-4609-8e36-58aa5612c4ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.409861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int64VarAsString"
            }
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "4d66f4fe-e6c2-41ef-a03b-b3e525835f6e",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 586190702,\n  \"message\" : \"Enim eaque aliquid nobis necessitatibus est voluptates. Perspiciatis odit quia quia voluptatem et. Sed consequuntur quasi et aut dolor.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d66f4fe-e6c2-41ef-a03b-b3e525835f6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.409458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "5cd49396-b708-467c-ab23-fa903a2fd45e",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1457864627,\n  \"message\" : \"Reprehenderit magni nemo id non quos consectetur sit. Qui quia autem repellat. Ut rerum fugit consequatur aliquid aperiam non. Ab id minus rem enim.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cd49396-b708-467c-ab23-fa903a2fd45e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.409381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "dad30583-dee3-44f7-8f80-7d9c65ceb6ce",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Miss Gary Oberbrunner\",\n  \"value\" : 3127843201434642097\n}, {\n  \"name\" : \"Cliff Hermiston II\",\n  \"value\" : 6405197017134131880\n}, {\n  \"name\" : \"Claud Lehner\",\n  \"value\" : 3030400976714276460\n}, {\n  \"name\" : \"Mikki Hamill\",\n  \"value\" : 2550131313602478811\n}, {\n  \"name\" : \"Lavonne Koss\",\n  \"value\" : 7266930835374845677\n}, {\n  \"name\" : \"Oren Kertzmann III\",\n  \"value\" : 6237703951228621463\n}, {\n  \"name\" : \"Sunshine Ritchie\",\n  \"value\" : 8228168295159607853\n}, {\n  \"name\" : \"Travis Fritsch\",\n  \"value\" : 6561385217116516677\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dad30583-dee3-44f7-8f80-7d9c65ceb6ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.409294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int64Var"
            }
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "542ecd3a-892a-44f5-b6a7-47f9b424e912",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Alaina+Rowe",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 390551401,\n  \"message\" : \"Libero qui est sed illo vel dolorem. Eos dolorem asperiores dolor. Et provident sint vel sed doloremque vero. Quia dignissimos nobis quia molestiae itaque et repellendus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "542ecd3a-892a-44f5-b6a7-47f9b424e912",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.408884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "db70a817-b488-44c4-959f-cc01bcd03415",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Buster+Rolfson",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 785803998,\n  \"message\" : \"Ea non fugit corrupti quo voluptatem deserunt reprehenderit. Hic sint illum beatae quod vel. Perferendis in fugit. Sit consequatur aut animi quia.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "db70a817-b488-44c4-959f-cc01bcd03415",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "32cec876-cfe2-44b8-9888-febbc6cf5041",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Sanora+Ferry",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1603791861,\n  \"message\" : \"Ut minus cum provident voluptatibus nobis ut porro. Perferendis facilis voluptate et. Et nobis voluptas soluta culpa perspiciatis corrupti enim. Culpa cupiditate modi adipisci. Dignissimos molestiae n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32cec876-cfe2-44b8-9888-febbc6cf5041",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.408634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "bdfd3b68-51d6-45d7-9b68-c566407f07c8",
    "name" : "Sets the value of an integer32 variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Hanna+Fadel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "bdfd3b68-51d6-45d7-9b68-c566407f07c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.408511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Var"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "83f5b0a0-433a-4459-a607-00f8841877c6",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Garfield+Wehner",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 531544177,\n  \"message\" : \"At aut consequatur inventore consectetur consequatur cum quia. Voluptatem ipsam vero eos. Est nam temporibus tempora. Eos occaecati voluptatibus illum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83f5b0a0-433a-4459-a607-00f8841877c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.408449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "2f859d8b-8922-4e7d-aa90-426e9deb3227",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Dr.+Theodore+Bernhard",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1060891644,\n  \"message\" : \"Quia atque qui sint. Assumenda minima est incidunt in. Libero ea possimus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2f859d8b-8922-4e7d-aa90-426e9deb3227",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.408339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "1c1a61c8-40f2-4a8f-897e-ebc14d121d71",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Alfonzo+Hoppe",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2137998300,\n  \"message\" : \"Id laboriosam aliquid ipsam. Labore exercitationem quia quos eveniet earum optio. Cumque doloribus et aliquam optio. Doloremque in error labore molestiae soluta ab deserunt.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c1a61c8-40f2-4a8f-897e-ebc14d121d71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.408225Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "45568464-635f-43cf-9974-9462420cdee6",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Tarah+Predovic",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1630234465\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45568464-635f-43cf-9974-9462420cdee6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.408108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer32 variable",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "06228a6b-2841-4ce1-83d7-f54a15b19c25",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1446593334,\n  \"message\" : \"Voluptatem velit et vitae consectetur ut. Non cum eius iste exercitationem aspernatur nemo ut. Veritatis maiores necessitatibus et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06228a6b-2841-4ce1-83d7-f54a15b19c25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.408012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "ba909d53-34d5-4a68-9444-571d7c8bd113",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1553778199,\n  \"message\" : \"Illum incidunt praesentium ullam ducimus et in veniam. Dignissimos laudantium tempore sed recusandae. Ut culpa consequatur velit. Animi est quia voluptatem voluptatem. Recusandae expedita illo volupta\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba909d53-34d5-4a68-9444-571d7c8bd113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.407935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "d56a76f0-781e-400c-81ef-542ac14deb28",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Chi Bartoletti IV\",\n  \"value\" : 1634184592\n}, {\n  \"name\" : \"Dee Ortiz\",\n  \"value\" : 22074245\n}, {\n  \"name\" : \"Landon O'Kon\",\n  \"value\" : 14557740\n}, {\n  \"name\" : \"Edward Davis\",\n  \"value\" : 184689866\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d56a76f0-781e-400c-81ef-542ac14deb28",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.407848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int32Var"
            }
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "24e03f61-4fed-4c10-8b71-371bd0c975eb",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Cleora+Carter",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1355696377,\n  \"message\" : \"Accusantium unde ratione libero iusto. Et ratione soluta. Suscipit eum dignissimos vero quasi possimus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "24e03f61-4fed-4c10-8b71-371bd0c975eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.407616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "f74c2d80-9055-48c0-9e7d-a8c45f98fb63",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Dannie+Feeney",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 216552608,\n  \"message\" : \"In excepturi nostrum. Autem libero et nesciunt enim sit qui. Corporis necessitatibus voluptatem ea et ea sit voluptas. Ipsa delectus eum dolores labore repellat fugiat molestias. Ipsa laboriosam volup\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f74c2d80-9055-48c0-9e7d-a8c45f98fb63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.4075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "4953c458-8c59-4df8-923f-13f7270636dd",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Erik+Pfannerstill",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1816930966,\n  \"message\" : \"Sed fugit eos atque sint ut minus. Similique maiores vel ut autem. Eos aspernatur nisi. Minima vel quas itaque reprehenderit rerum. Nemo quo aliquid fuga doloremque at numquam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4953c458-8c59-4df8-923f-13f7270636dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.407374Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "8764410a-1e0f-416b-bd5e-7f48665cbe85",
    "name" : "Sets the value of a float variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Ranae+Von",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8764410a-1e0f-416b-bd5e-7f48665cbe85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatVar"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "6610653a-8b58-443a-b8c8-444fdccd5943",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Shad+Mosciski",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 123878367,\n  \"message\" : \"Rerum nulla voluptates officia. Tenetur vel fugiat nihil et. Molestiae exercitationem adipisci ut aspernatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6610653a-8b58-443a-b8c8-444fdccd5943",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.407203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "f3b34e51-789f-4af9-9cd1-3df6969fb4f1",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Rupert+Rosenbaum",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1179001659,\n  \"message\" : \"Debitis facilis voluptatem qui sapiente. Cum dolorum fugiat similique qui facilis dicta. Voluptatem aliquam ut officia aspernatur voluptatem. Dolore iusto ex numquam hic. Et molestiae voluptatem enim \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3b34e51-789f-4af9-9cd1-3df6969fb4f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.407095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "ada0e249-0489-4d46-9365-cd4d8a1576cd",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Jae+Wyman",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 919101823,\n  \"message\" : \"Explicabo quos et optio sunt deleniti qui. Consequatur dignissimos minus rerum dolores vero id. Ducimus veniam non beatae autem aliquid quia. A explicabo ea ratione veritatis sunt quis necessitatibus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ada0e249-0489-4d46-9365-cd4d8a1576cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "7ea6e4b5-d7b0-424f-b55f-714a2ea7c38f",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Rachel+O%27Kon",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1.6006116586666596E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ea6e4b5-d7b0-424f-b55f-714a2ea7c38f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.406862Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "09f3a8f5-ac27-4072-bcdd-3916e1015356",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 498961010,\n  \"message\" : \"Asperiores et a animi laborum mollitia. Delectus est quis. Explicabo voluptate dolorum velit aut et aliquam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09f3a8f5-ac27-4072-bcdd-3916e1015356",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.406778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "b06efae8-ae7e-45b4-b47a-2deaabd65be8",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1325474155,\n  \"message\" : \"Doloribus voluptatum excepturi ut molestias architecto quas minus. Aspernatur nesciunt sit totam molestias consequatur vero aliquid. Earum eius ad voluptatem quae saepe quam dolorem. Non ut provident \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b06efae8-ae7e-45b4-b47a-2deaabd65be8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.406706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "ab105915-e64d-4620-a50b-e86458a9c30c",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Orval Barrows\",\n  \"value\" : 1.2245769537170981E38\n}, {\n  \"name\" : \"Lorretta Kshlerin\",\n  \"value\" : 8.184852830280345E37\n}, {\n  \"name\" : \"Elroy Goyette V\",\n  \"value\" : 2.2429443082979607E38\n}, {\n  \"name\" : \"Maria Marks\",\n  \"value\" : 3.2567455276674946E38\n}, {\n  \"name\" : \"Walker Carter\",\n  \"value\" : 2.053067744972464E37\n}, {\n  \"name\" : \"Morton Gorczany\",\n  \"value\" : 1.8711392139848135E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab105915-e64d-4620-a50b-e86458a9c30c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.406625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "47807081-ed71-43ba-ab92-dd8fab355f30",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2022-07-13T12%3A02%3A45.406281Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1227622851,\n  \"message\" : \"Corrupti enim corporis sapiente tempore harum. Ad dolor voluptatem impedit consequatur. Iste aperiam aut. Aliquam quidem fugiat porro.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47807081-ed71-43ba-ab92-dd8fab355f30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.406316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "67fce795-2ab3-464e-bc8a-42b3a00717da",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2022-09-02T09%3A09%3A45.406188Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1902797389,\n  \"message\" : \"Tenetur ut aliquid aut atque. Quis nihil quidem sint vel ratione et minima. Non cumque autem dolores. Ut explicabo corrupti quo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67fce795-2ab3-464e-bc8a-42b3a00717da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.406222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "3b870e50-459a-4d46-8fd2-015d8b15ac00",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2023-02-23T09%3A32%3A45.406087Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 561909067,\n  \"message\" : \"Facilis omnis repudiandae et. Non voluptates qui in qui necessitatibus at. Est non nihil enim porro sed eveniet aliquam. Tempore ut et perferendis ad libero ipsa eos. Est officiis architecto magnam ma\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b870e50-459a-4d46-8fd2-015d8b15ac00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.406125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "63faf21b-c02b-4bb2-821f-ba4401d4527d",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2022-07-02T12%3A17%3A45.405982Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 2.0680085947185962E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63faf21b-c02b-4bb2-821f-ba4401d4527d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.406018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "f23219d6-62c6-46b9-8da9-4d5bc1d2871d",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 785271971,\n  \"message\" : \"Dolores dolorum provident. Maiores et laboriosam numquam aut porro id. Est aut iure maxime qui autem. Illum nemo voluptatum minima.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f23219d6-62c6-46b9-8da9-4d5bc1d2871d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.405935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "c4aaaf2b-7e61-4cad-8e98-5fe64b6ad943",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1257432116,\n  \"message\" : \"Deserunt neque velit et est deserunt iusto repellat. Ut ut quia voluptas qui. Impedit repellat quibusdam rerum rerum. Quaerat sed sit dolor commodi non. Quo et labore qui neque voluptatem sit voluptas\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4aaaf2b-7e61-4cad-8e98-5fe64b6ad943",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "dc7da852-9740-4579-8174-b0dc4dbcd3df",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Sterling Veum\",\n  \"value\" : 1.0409735157756205E38\n}, {\n  \"name\" : \"Roxanna Gottlieb\",\n  \"value\" : 5.902039381140876E37\n}, {\n  \"name\" : \"Lyla Doyle\",\n  \"value\" : 2.333366442216656E38\n}, {\n  \"name\" : \"Cassaundra Altenwerth\",\n  \"value\" : 1.616333495147417E38\n}, {\n  \"name\" : \"Wm Abbott\",\n  \"value\" : 3.366979774229145E38\n}, {\n  \"name\" : \"Lili McClure\",\n  \"value\" : 8.71678138271129E37\n}, {\n  \"name\" : \"Shane Bauch\",\n  \"value\" : 7.919615669066217E37\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc7da852-9740-4579-8174-b0dc4dbcd3df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.405774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "04d30c02-d37f-43d5-ae22-3121946935b8",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/William+Douglas+IV/987917635",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1359576245,\n  \"message\" : \"Voluptatem quae non accusantium sint amet. Harum quam beatae blanditiis. Aut nemo natus fuga et error.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04d30c02-d37f-43d5-ae22-3121946935b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.405398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "e110e228-4855-470c-937a-4e3cb1c1c6bf",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Dr.+Leandro+Berge/138326478",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1841000668,\n  \"message\" : \"Et amet vero quasi est amet voluptas. Maxime blanditiis et provident. Aliquid autem earum cum magnam iure omnis quis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e110e228-4855-470c-937a-4e3cb1c1c6bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.405279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "8f3f91a9-d7bb-44be-a871-30dec8fca4af",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Everette+Weber/552901799",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 74038323,\n  \"message\" : \"Et nobis id autem odit sint perspiciatis. Officia neque blanditiis eius natus inventore. Possimus et id amet est nostrum voluptate.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f3f91a9-d7bb-44be-a871-30dec8fca4af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.405157Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "4df0f0eb-43dd-4b9b-ae7e-c70894a7a3ae",
    "name" : "Write specified table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Louise+Marquardt/1811948334",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4df0f0eb-43dd-4b9b-ae7e-c70894a7a3ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.405042Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTableElement"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "e5a832e6-366a-4a26-80a0-3362dfcc4125",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Sumiko+Nolan/1397411376",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1863606007,\n  \"message\" : \"Dignissimos eveniet voluptates. Facilis doloremque libero dolores voluptatem totam sit. Est sit molestias quos reiciendis recusandae. Libero omnis maiores alias cum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5a832e6-366a-4a26-80a0-3362dfcc4125",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40498Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "7e1444f9-926d-40e9-b6f9-c9932f6cc9fa",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Wilmer+Kemmer/2055123057",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1833365646,\n  \"message\" : \"Veritatis quod eligendi dolor quis. Quia tenetur molestias sed iusto esse. Et laborum et odit quibusdam alias consectetur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e1444f9-926d-40e9-b6f9-c9932f6cc9fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.404861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "e2c82bc4-4d66-4a4c-8434-68ef85cd1019",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Doretta+Moore/744693589",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 33224173,\n  \"message\" : \"Veritatis corrupti sunt voluptatem vero maxime ea molestiae. Magni ducimus autem. Dignissimos ut ea omnis possimus velit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2c82bc4-4d66-4a4c-8434-68ef85cd1019",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.404749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "8ed4538e-0eaf-4be5-bcc7-05d483b990b7",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Margy+Ruecker/39552376",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"z6a66xh5k7kdfm4ob54y2jsskcq2jpipeq9v33aytga7seywkyv0lxembzia863rbvx8tvq2y3huzu8hqgpvftlerkaoeejov3y4zexzvyupgqij03a9wtqkwyl2kbhgl9bbnggbiht9vtpentpvgy3g3a0959h7ldhykxyfxixewwv2uwisu0eigq2ofyfao8vl9x6cwzfvzfurmov5ci629ogc8cfvhtn7svel6f29kqh9ybid45300bmcxtmr9gvov5l1vezvrg44unfq7950lo0uum6mn5vtv58ugxql77rx7rkweqcavu567q5kndkewz92szjwehmmobr4bkl625a5c82umbyqale38op8ibyod4td7i61752e9rxe7b16plhsvohgo8677dlgq251tquaacu93akdhocsxcqdh258yqotz2lzx1ipj3i49ecsy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ed4538e-0eaf-4be5-bcc7-05d483b990b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.404632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "maxLength" : 1024,
                "type" : "string",
                "description" : "The value of a string; string width (max length) for each string variable is defined in the strategy"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "61d7250c-c717-4bbb-a9fb-84c724ff02bd",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Kirstie+Hansen+DVM",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 790211012,\n  \"message\" : \"Rerum sit officia. Ea et ea iusto assumenda fugiat sunt. Et vero et. Placeat aut mollitia.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "61d7250c-c717-4bbb-a9fb-84c724ff02bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.404523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "bcdf033d-9293-4162-9e21-db982257b362",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Dr.+Divina+Friesen",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 768898158,\n  \"message\" : \"Excepturi ipsa culpa possimus cum quis animi corporis. Aliquam et sint quae enim sint et. Excepturi consequuntur dolorem quam ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcdf033d-9293-4162-9e21-db982257b362",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.404413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "dc79cb08-a042-46cc-b0ac-2534fcd8f20d",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Guadalupe+Parisian+II",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1005856606,\n  \"message\" : \"Voluptate eos repellat aspernatur et. Magnam exercitationem qui. Officiis dolores voluptas. Qui at rem dicta quod possimus voluptatum. Est nulla repudiandae consequatur quidem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc79cb08-a042-46cc-b0ac-2534fcd8f20d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.404305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "039cae68-964c-47ae-833e-c19cfbff9376",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Roman+Macejkovic",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"errorCode\" : 49516724,\n  \"message\" : \"Sunt commodi et. Error optio ratione. Dolorem recusandae eveniet quas libero voluptatem dolorem sit. Maxime distinctio vel.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "039cae68-964c-47ae-833e-c19cfbff9376",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.404186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -23 ** The string you passed is longer than the width of PAC Control string variable or table element you are writing to.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "e5ebb1f6-b4a2-4c50-8560-03638cb7be51",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Mrs.+Domenic+Bruen",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 680794770,\n  \"message\" : \"Quo eligendi veniam omnis et quo optio quaerat. Numquam sit et. Porro mollitia ratione. Est nesciunt quam. Consequatur reiciendis deleniti veniam excepturi et cumque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5ebb1f6-b4a2-4c50-8560-03638cb7be51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.404054Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "7304a530-6800-496b-bb19-2e9871d940ca",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Raphael+Hagenes",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1522059699,\n  \"message\" : \"Eligendi ratione aut aut rerum tempora voluptatem ratione. Nam ipsum quisquam amet repudiandae sunt modi pariatur. Reiciendis non sit sit distinctio. Labore officiis mollitia ullam. Dolor cupiditate e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7304a530-6800-496b-bb19-2e9871d940ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.403934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "05c2b035-cbce-400b-829a-c17086fc4450",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Raisa+Wunsch",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 200580282,\n  \"message\" : \"Culpa corporis nam. Commodi rerum aut non. Qui et debitis. Expedita ipsum quidem dicta minima dolorem ipsam optio.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05c2b035-cbce-400b-829a-c17086fc4450",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "f013e4e0-fb66-4d0a-aec3-94d421d089d4",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Gerald+Goyette",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"r60jsq93lph74ndsonrptdj8mjur36r5wwoj286wf7pd6qeabhgqxm9f9j6w1urhujdxui3zqlvfz59jq1y2ylbulei7qpicaa3doqtef6i4rlyqz4z06srjl8tgxaaoqpgcjecbf3yx58djktmettxgdu47c1t8gpimc001omoeq3dfjgk1cqz8lzebnl8r7p43el8o8reid2kk66cgrorvd8jofwerqu32mhh0dlavf54skmuohzz6pw70o05wjrxsvo3y9wkqnw6e0d2xifg7dfe5l2z0ssoxmqekacrmy21aoelqfk1g5q9jj711buk8qrmsmm7hnt347ee8ghlj50389dvlf4va8eeh7ecfbk6o40tb8kf2xmhijdsqs37usdvnbfedymja5suyksc95npdbf6b5qv9da9m9ter3oybl3ym70w6uclny2rcwps77fgas5b5mrams8kba52uur5h3skiod4w7m70mii2ct0ju01cwkgi67rijwcr9ehrdg8emsdv9vcq36bmers8uddgltdhz275kedq88i\", \"tz2pa8itk8i0bo9k1m51dfcqwmqd5gxt7a2rean6bzvox8d38sx4po9r42gsrvtq83jjbg60ylajgmf7tag7zcy44w9cklfku0xio07o7znuhqxutx73pw7bzbgre0ip5yhkq4pxx53lswm0ft9o5bpm1c3fvaab78rxhuercau0g5ybrtvqz1a96iuxwx3ayceh4epfkrvf7vlh5a49debjfyuepplpl3zoheuwuvn9jcryiot9xzdwn0mw6oo8cwteiblm9k5oh7ghtimewy2li8rc6zgok8pecaay5wmmx88uaxu3uhcts9t6uvds4ziqbm9k7v15n7s62h5qn79c2kvmiiggc05hmaaeqy3n2o2dwp85y4zn7w1oaqblt01uj8xi6hfhjgbhwyzdok4u37l3d27fpfjmo0ysgwao2pvo2ftrhj6s3y495r84mgqh649reqj6zhaivtjp91sxiwo88zmqks7jk5mf60rwpntd6880071t4z9y73elhb6ckgxx0pqttv6gn05c5gfdys2dxoicjoe00g7c6qrbzl6c7s1pd8d9aykac1br2of7xty1mjyxzq2n0d160viruqy1iaezkbedjjv3bzoi9o4llmsteh8qq89acf9vj8j21ey2qbdwk1e1j8f9\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f013e4e0-fb66-4d0a-aec3-94d421d089d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "type" : "array",
            "items" : {
              "maxLength" : 1024,
              "type" : "string",
              "description" : "The value of a string; string width (max length) for each string table is defined in the strategy"
            }
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "cd436538-0a8a-4ed4-939c-8b69dd097935",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1305403110,\n  \"message\" : \"Explicabo velit sed earum eaque qui facilis. Similique voluptatem qui accusantium sint in quia optio. Autem qui rerum velit et fugit ut ipsa. Voluptas nisi ut debitis similique.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd436538-0a8a-4ed4-939c-8b69dd097935",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.403572Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "2edfbbc9-92f3-4eb8-85c4-1deace8a6c69",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1293986187,\n  \"message\" : \"Velit maiores corrupti enim soluta unde. Unde sed eos modi. Amet distinctio vitae excepturi ratione quo. Praesentium quae dolores exercitationem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2edfbbc9-92f3-4eb8-85c4-1deace8a6c69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "ea838002-132d-4a73-a793-682c5a62197c",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 554510311,\n  \"name\" : \"Katheleen Goldner\"\n}, {\n  \"length\" : 1335719829,\n  \"name\" : \"Guillermo Ruecker\"\n}, {\n  \"length\" : 734592637,\n  \"name\" : \"Blair Schultz III\"\n}, {\n  \"length\" : 814141715,\n  \"name\" : \"Stevie Ryan\"\n}, {\n  \"length\" : 1955079867,\n  \"name\" : \"Nohemi Reichel I\"\n}, {\n  \"length\" : 2061091739,\n  \"name\" : \"Dr. Leigh Mertz\"\n}, {\n  \"length\" : 2111635836,\n  \"name\" : \"Dr. Jae Batz\"\n}, {\n  \"length\" : 1392882570,\n  \"name\" : \"Karri Baumbach III\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea838002-132d-4a73-a793-682c5a62197c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "0401c6fb-1b72-4b7e-96e0-360607cede0e",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Cruz+O%27Reilly/506962959/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1186683868,\n  \"message\" : \"Totam aperiam eius tempore quo velit. Nulla id et ut officia. Amet animi quod voluptatem illo ut eveniet. Et earum inventore et quasi. Ea aut beatae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0401c6fb-1b72-4b7e-96e0-360607cede0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.402992Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "f8de8b35-6fba-475e-9354-79921ea3df7a",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Alexandra+Dickinson+Sr./1835884080/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 206831992,\n  \"message\" : \"Aut et ipsam porro velit illum doloremque. Sit eos perferendis nisi rerum. Et libero officia consequatur inventore rem tenetur quia. Quasi quaerat qui. Cum atque praesentium ullam explicabo minima.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8de8b35-6fba-475e-9354-79921ea3df7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.402865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "21ab502c-8963-4283-b11e-10b6a6deea14",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Jame+Berge+II/404822390/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1752316429,\n  \"message\" : \"Sunt quis porro. Quaerat et harum dolorem. Nulla consequatur et id quia eum est. Aut aspernatur iure vel quia libero. Facilis corrupti qui dicta ipsum voluptas labore.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21ab502c-8963-4283-b11e-10b6a6deea14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40274Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "481a9e46-6ead-4cfa-a1ae-71c82d41f856",
    "name" : "Write specified integer64 table element as string - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Shawnna+Wilderman/790357249/_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "481a9e46-6ead-4cfa-a1ae-71c82d41f856",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.402617Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElementAsString"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "41f20781-e099-4045-84d7-513484f35d25",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Maryalice+Cartwright+PhD/481252107/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 2095118928,\n  \"message\" : \"Et tenetur deleniti est. Asperiores magni commodi hic asperiores. Sint saepe ipsam est aut culpa id.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41f20781-e099-4045-84d7-513484f35d25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.402549Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "9e6fd0b6-a202-4312-ac56-77e648e95f6e",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Mr.+Nakesha+Davis/1802047847/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 251721886,\n  \"message\" : \"Cumque nesciunt facilis magni unde. Quam omnis doloribus. Quidem aut nisi sed ducimus necessitatibus eveniet. Dicta dolorum aspernatur nemo dolores nihil.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e6fd0b6-a202-4312-ac56-77e648e95f6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.402432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "05e3c766-04ee-4619-96eb-50d259cb6b53",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Asia+Trantow/75184086/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1686647558,\n  \"message\" : \"Occaecati harum dolor voluptate aut quia. Aspernatur voluptas velit incidunt. Non aut et laboriosam mollitia voluptas voluptatem. Quisquam quia laboriosam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05e3c766-04ee-4619-96eb-50d259cb6b53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.402314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "9cbc850f-176d-4484-a586-003e85a5d230",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Peter+Roob/158274825/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"wg7x961eo7nx6u1d8m336mk6gsevj0mcnapa8skurves91c4k7cvltnel3qmz1cvcz7a4msncy40sw9oe5rtya5c3cwsy3zdx3zz6qy8b5vyo7qucsv5zwox0a0934ir01734yplwgeg8vl1grwnfblcpizlff6dvmfgpmi3n69f4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9cbc850f-176d-4484-a586-003e85a5d230",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.402198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string",
                "description" : "Value of the integer64 variable expressed as decimal string, e.g. \"34359738367\""
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "41d5832f-7178-4a7f-87f4-c27de841a919",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Kymberly+Beatty/1805384547",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1478430901,\n  \"message\" : \"Est corrupti dolor fugit quibusdam voluptate illo. Rerum ea maxime quam ut voluptas quia est. Veniam voluptatem voluptas autem blanditiis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41d5832f-7178-4a7f-87f4-c27de841a919",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.402087Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "e6cfba71-0ac9-4c6d-9a30-ff3cdbe29847",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Devin+Ebert+PhD/559036692",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 47078574,\n  \"message\" : \"Natus ab id vitae sed tempore impedit. Ducimus temporibus praesentium incidunt voluptas fuga. Suscipit accusantium rerum ut voluptatibus maxime possimus fuga.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e6cfba71-0ac9-4c6d-9a30-ff3cdbe29847",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.401964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "664deca1-a457-47c4-927d-df9e6ce5b71b",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Rebbecca+Toy/1105370710",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1974795109,\n  \"message\" : \"Corrupti quidem pariatur incidunt. Error nisi neque ea. Qui est aspernatur autem et. Blanditiis quia vel repudiandae est ad doloremque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "664deca1-a457-47c4-927d-df9e6ce5b71b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.401841Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "b063049e-9a79-40e7-829c-f6e8d96d1205",
    "name" : "Write specified integer64 table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Ima+Hirthe/6629494",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b063049e-9a79-40e7-829c-f6e8d96d1205",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.401722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElement"
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "913b4156-8f83-44ea-9fdd-2f1839974316",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Euna+Grant/5772785",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1672751026,\n  \"message\" : \"Ipsum et voluptatibus. Facilis inventore et cumque architecto quia. Illo nihil enim placeat libero molestiae saepe at.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "913b4156-8f83-44ea-9fdd-2f1839974316",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.401655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "95673ab5-cc96-4ff2-8108-6fd0be76015f",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Rosalinda+Moore+Sr./8976981",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 70420069,\n  \"message\" : \"Iste sed est quia. Non voluptas sed tempora et quis vitae aut. Sit et aut nisi est cum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95673ab5-cc96-4ff2-8108-6fd0be76015f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.401537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "1100c723-897e-4d92-a0e7-5e9eb7e46983",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Lanny+Kilback+DVM/792354200",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1628597639,\n  \"message\" : \"Et necessitatibus eaque optio placeat. Ut quam sapiente quae mollitia esse. Asperiores odit quibusdam quis. Officia assumenda architecto maiores aut repellendus ea. Dicta qui corporis consectetur dolo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1100c723-897e-4d92-a0e7-5e9eb7e46983",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40142Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "f1718f02-2029-4551-b155-0962cc0409c1",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Miss+Patience+Lemke/100720200",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 4464841874231614362\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1718f02-2029-4551-b155-0962cc0409c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.401295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer64 variable",
                "format" : "int64"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "8691c654-f84a-4307-9169-bd4c9bceb330",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Tommy+Feest+PhD/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 171350871,\n  \"message\" : \"Quo aut nesciunt voluptas quisquam laborum odio ipsum. Aspernatur aspernatur rerum. Rem voluptatem qui. Voluptas sapiente cupiditate.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8691c654-f84a-4307-9169-bd4c9bceb330",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.401189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "6d03c766-18b3-4cd6-a99e-552b77f344fb",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Elyse+Spinka/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1070417343,\n  \"message\" : \"Repudiandae deleniti veniam amet odit. Atque iusto qui eius reiciendis. Quaerat commodi voluptatibus maxime sed quae nihil harum. Similique minus et aspernatur numquam tempore velit architecto. Dolori\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d03c766-18b3-4cd6-a99e-552b77f344fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.401068Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "345b472b-9206-4919-87a4-bdded8970667",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Tyron+Lemke/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1687843166,\n  \"message\" : \"Harum non explicabo. In in tempora eos. Omnis quas occaecati qui praesentium neque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "345b472b-9206-4919-87a4-bdded8970667",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.400939Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "f3e380ce-4adf-42c3-bf6b-a1bd8b126f55",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Steven+Wiegand+Sr./_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f3e380ce-4adf-42c3-bf6b-a1bd8b126f55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.400827Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableAsString"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "6177e34b-8629-4180-a86a-83956dd91b8a",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Venus+Dare/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 619842708,\n  \"message\" : \"Ipsam voluptatum rerum at et nulla. Et dolores voluptas placeat. Doloremque facere architecto saepe ullam veritatis. Dolorem voluptatem vel animi. Dolorem minus dolore rerum aut eum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6177e34b-8629-4180-a86a-83956dd91b8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.400748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "22100dbb-6527-45db-8cc1-02bfe5505a67",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Micah+Connelly/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1106711272,\n  \"message\" : \"Libero quo provident. Optio autem dolore quibusdam aut. Voluptatem quasi quam sunt perspiciatis id ducimus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22100dbb-6527-45db-8cc1-02bfe5505a67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.400631Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "b8bc8b90-37f0-419e-ac50-c7987a13c00f",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Marion+Doyle/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1449710726,\n  \"message\" : \"Deleniti qui id hic ducimus. Aliquid reiciendis commodi. Adipisci corrupti ut laudantium quisquam sit quae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8bc8b90-37f0-419e-ac50-c7987a13c00f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.400524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "4be38ccb-04f0-438e-90fb-3d8d02677c97",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Virgilio+Kuvalis/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"66i36vet79j1ant4pk64hu3q9aevwhz9wqei6mapyu0wuskm7xljhegqhyubp1ayjbbwzko6jznr5tkr8edy8jbucek53b9f7s8l19vohuqlj6yy80ohz5u8viidiz8xkh9lyxyj2bw07q22n\", \"manci1bqgnpguiz50kt6mt39k4d8tlri6hsb8fnd5wjrhqpyuhw\", \"wps8cysvqd51f05hx4v6muvqk8ve949h8v0dz9zf0192ro839cd4gn8nf2puptqmat51\", \"j4m0i6g7gijg4rl5jipc8yqmuxlkuk0f5up976ma922eygxtwk2hfwmkf9vvrpr8ab2553hwz3ckezksvj7y5hjxbihhzz32ku8got3qna49vlmdlfg36dbej1ckb5gsifnyzsnfk6\", \"cgqbo31jb3y3k952zxhlqwzeoj5mdpdixlrlrd1pebqt3qehydrigo3oecqknar2ckw944uzc6jdtxi0lltxtke\", \"ayuiutgyjs86x83os64oxdfm5wpb37xx1kvkzbh4cjmc5s1ewp6pqqgsxs3hmqxijxs9hcqbop2bgnbsokf460q9b5ldpnmbnfyugcyqcifaoex3prn0tzhnyve4vqaydwsq7bp1bexmip38y31xa3une2j2ua71aw3a8c8v6x6a\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4be38ccb-04f0-438e-90fb-3d8d02677c97",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.400409Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Value of the integer64 variable expressed as a decimal string. E.g. \"34359738367\""
            }
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "8aa0ec25-208a-4842-bafd-375c884f6bb9",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Johnie+Turner",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1514655794,\n  \"message\" : \"Cum iure ex eum in provident deleniti. Molestias numquam animi deserunt consequatur beatae ut nostrum. Fugit quia esse dignissimos. Ipsum rerum eos.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8aa0ec25-208a-4842-bafd-375c884f6bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.400273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "548843d8-6754-419a-b2fb-7905b895bcbf",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Spring+Franecki",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 847632713,\n  \"message\" : \"Id esse quo totam rerum. Dolores qui assumenda autem. Et soluta sint.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "548843d8-6754-419a-b2fb-7905b895bcbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.40015Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "fa4abe98-0234-4817-aa32-525cfe7eaea5",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Jonelle+Schoen",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 985398812,\n  \"message\" : \"Tempore rerum aut soluta voluptatem. Fugiat aliquam maxime non minus et rerum quos. Hic earum ad. Ea error non aliquid est et libero corrupti.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa4abe98-0234-4817-aa32-525cfe7eaea5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.400031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "f87ec2a7-9f8f-4598-b42a-ddd7023a4f42",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Marcos+Marks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f87ec2a7-9f8f-4598-b42a-ddd7023a4f42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.399912Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Table"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "acaff071-4b28-4e7d-8c4a-965d721c89fb",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Juan+Jacobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 361092144,\n  \"message\" : \"Voluptas qui aut quis est cupiditate. Velit odio sapiente eveniet adipisci. Omnis ea qui dolor dolorem quia possimus. Cupiditate doloribus odit quos. Totam voluptas et necessitatibus molestiae perfere\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "acaff071-4b28-4e7d-8c4a-965d721c89fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.399849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "947e2a73-a10e-434b-bfa7-080cebfb2f81",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Cameron+Will+V",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1298881466,\n  \"message\" : \"Sed qui ab dolorum tempora sed perferendis optio. Ab accusamus architecto dolor eos. Aut sapiente quo. Autem voluptatibus animi sed ex eum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "947e2a73-a10e-434b-bfa7-080cebfb2f81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.399726Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "f29fcf2b-d3ca-4807-8e5e-b428dc4c9fb8",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Shane+Wyman",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1042973904,\n  \"message\" : \"Quas est magni autem consequuntur magnam velit nobis. Nam illo dolor. Vero est modi non odio ut. Rerum vel sequi dignissimos laborum molestiae id. Eius accusantium autem dolores id accusantium id.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f29fcf2b-d3ca-4807-8e5e-b428dc4c9fb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.399609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "038b3bcc-0f2b-4fab-936c-9ad6760835ef",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Miss+Elva+Witting",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 5560471728451070088, 4914346167058090090, 3655227841048260788, 7876468705245638066, 8399019243228530914, 6326352104059244308, 7894256215089269759 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "038b3bcc-0f2b-4fab-936c-9ad6760835ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.399486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "description" : "Value of the integer64 variable",
              "format" : "int64"
            }
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "6d46209b-b06a-4341-9ae7-c7e5da3f1b79",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1058698251,\n  \"message\" : \"Sed qui sunt enim aut cumque modi deleniti. Dolores id occaecati quos occaecati. Accusamus et ut pariatur qui. Fuga voluptas voluptas mollitia placeat. Et qui id aliquid culpa asperiores enim saepe.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d46209b-b06a-4341-9ae7-c7e5da3f1b79",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.399356Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "83476205-e195-4020-b269-a54d88d991a4",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1869569842,\n  \"message\" : \"Qui omnis eos reprehenderit voluptatum. Molestiae rerum quia tempora officia. Voluptas facere reiciendis soluta magni doloremque incidunt. Esse necessitatibus qui placeat tempora officiis. Doloribus v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "83476205-e195-4020-b269-a54d88d991a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.399271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "5798592e-f839-450e-991f-0d7905b76616",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 1414909670,\n  \"name\" : \"Stanton Kihn\"\n}, {\n  \"length\" : 2112280689,\n  \"name\" : \"Annamae Rogahn\"\n}, {\n  \"length\" : 467392671,\n  \"name\" : \"Jamie Champlin\"\n}, {\n  \"length\" : 239174841,\n  \"name\" : \"Malik Schroeder\"\n}, {\n  \"length\" : 1265511526,\n  \"name\" : \"Loyd Weissnat DVM\"\n}, {\n  \"length\" : 1196356866,\n  \"name\" : \"Tommy Deckow Sr.\"\n}, {\n  \"length\" : 322717948,\n  \"name\" : \"Ms. Millicent Hodkiewicz\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5798592e-f839-450e-991f-0d7905b76616",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.399184Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "0d58b0e4-0219-4c7a-8b3a-eaa88ed71b04",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Dr.+Lavonna+Wuckert/1557431668",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 2066653719,\n  \"message\" : \"Omnis cum sit vero asperiores placeat et ut. Rerum ut rerum omnis unde. Et dolorum temporibus harum placeat enim optio. Delectus eos asperiores itaque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d58b0e4-0219-4c7a-8b3a-eaa88ed71b04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.398815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "823cfd3d-8078-46af-b966-c3b2540f052c",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Rosaura+Lebsack/1286878701",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1434451839,\n  \"message\" : \"Quaerat corporis ad atque et doloremque. Eum excepturi dolores. Nesciunt autem perspiciatis consectetur suscipit iusto quasi omnis. Fugit magnam ut veritatis enim non dolor. Rerum odio a odit adipisci\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "823cfd3d-8078-46af-b966-c3b2540f052c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.398693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "6812d0aa-2b36-4927-bcae-ca653cf370e8",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Lucie+Paucek/1634096398",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 745486085,\n  \"message\" : \"Libero vel nostrum necessitatibus eaque nihil ea totam. Ea sint quos. Sequi dolorem est harum quaerat ut non.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6812d0aa-2b36-4927-bcae-ca653cf370e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.398563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "8341d1f5-7549-4884-8815-4b5e4bde1496",
    "name" : "Write specified integer32 table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Hanh+Stracke/1463560699",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8341d1f5-7549-4884-8815-4b5e4bde1496",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.398447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32TableElement"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "2198154c-106f-4762-9b6a-e8f821248ed2",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Dr.+Mandie+Pfannerstill/1894995276",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1553224035,\n  \"message\" : \"Nemo soluta ut cupiditate aut voluptas harum. Et dolor hic voluptatibus est nemo. Ut nesciunt reiciendis numquam eos perferendis qui modi. Ullam voluptates iusto dicta corrupti sed vero. Quo voluptate\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2198154c-106f-4762-9b6a-e8f821248ed2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.398381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "fb2190b1-1598-49f2-9640-730655d26803",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Stephen+Marvin/1932906002",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1574452744,\n  \"message\" : \"Odit sunt omnis velit debitis dolor dolore quia. Qui nesciunt distinctio et placeat. Sit iste atque expedita qui hic error. Minus asperiores omnis nihil aut aut nemo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb2190b1-1598-49f2-9640-730655d26803",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.398259Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "b8379a84-28de-4206-ad9e-6e9188b0021a",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Serafina+Rohan/2003908302",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 625895815,\n  \"message\" : \"Qui quibusdam nobis aperiam voluptatem quas non illum. Aut nobis culpa eos inventore soluta aut omnis. Libero debitis voluptatem magnam. Expedita facere ab distinctio labore. Qui illum quasi et non.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8379a84-28de-4206-ad9e-6e9188b0021a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.39814Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "fe7b9b02-7d58-444b-962b-f8ee04460c42",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Dr.+Jarrett+Haag/1382843338",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 36752848\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe7b9b02-7d58-444b-962b-f8ee04460c42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.398017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer32 variable",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "b89b98dc-387d-494b-b4dd-2dff60e24643",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Lesli+Hoeger",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 203007051,\n  \"message\" : \"Ullam autem ipsa. Dicta tempora voluptatem aperiam eaque enim. Omnis libero optio est odio.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b89b98dc-387d-494b-b4dd-2dff60e24643",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.39791Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "06a6d40d-33f2-4be2-b3fd-4592175ac5b0",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Felix+Torphy+DVM",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2068097219,\n  \"message\" : \"Cumque explicabo perspiciatis. Necessitatibus reprehenderit amet explicabo ut voluptate adipisci. Et quo ab. Soluta illo ratione quis nisi nam illum. Error rerum perspiciatis cupiditate.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06a6d40d-33f2-4be2-b3fd-4592175ac5b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.397792Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "e671eba6-4269-49bd-bc14-3df011105d2b",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Elissa+Jast+I",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1815255841,\n  \"message\" : \"Numquam magnam ut perspiciatis laboriosam. Dolore provident fugiat consequatur. Earum nisi nihil praesentium. Aut ipsum eius dolores.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e671eba6-4269-49bd-bc14-3df011105d2b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.397674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "896af15d-31ce-42fc-a409-002be93147c4",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Heriberto+Johnston",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "896af15d-31ce-42fc-a409-002be93147c4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.397558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Table"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "f1fd222a-2c6d-4ca9-8351-ad6b61862585",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Birdie+Sawayn",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 588418667,\n  \"message\" : \"Et voluptates ea nihil earum. Sed quis accusantium. Recusandae ea quasi non molestiae cupiditate consectetur enim. Quia ut tempora et ullam et possimus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1fd222a-2c6d-4ca9-8351-ad6b61862585",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.397496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "e8dcf4e0-dda3-42d8-abda-17ec837b300b",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Denice+Kuhlman",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1912664008,\n  \"message\" : \"Aut voluptatibus aut. At aliquid aut amet unde at dolor nesciunt. Quo et dolores architecto aliquam molestiae omnis eligendi. Doloremque dolore reprehenderit. Odio aperiam ut praesentium.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8dcf4e0-dda3-42d8-abda-17ec837b300b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.397377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "79ac3607-429c-4646-a780-02a8973ba8e9",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Olinda+Barrows",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1909949712,\n  \"message\" : \"Voluptatem nisi nulla dolor. Nihil iure voluptate ipsa et quasi quia. Recusandae eligendi cum nesciunt velit soluta itaque. Aliquam nemo amet minima voluptates et quia provident.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79ac3607-429c-4646-a780-02a8973ba8e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.397262Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "0cb83d75-f9a4-45fd-b170-632a0db21c8c",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Jasmine+Hand",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 438922383, 877167678 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0cb83d75-f9a4-45fd-b170-632a0db21c8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.397145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "description" : "Value of the integer32 variable",
              "format" : "int32"
            }
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "7968448c-17fd-49a4-9bf1-683c803f6871",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 339172303,\n  \"message\" : \"Consequatur quo nemo voluptas. Voluptas vero eum nihil. Nihil totam in. Accusantium ex mollitia non aliquid qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7968448c-17fd-49a4-9bf1-683c803f6871",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.397044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "c9e7dda3-4753-4fb7-adf7-8bce8268aa43",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2024319414,\n  \"message\" : \"Quibusdam et omnis ad voluptates at soluta reiciendis. Quia quia quis ea sunt voluptatem corrupti. Assumenda incidunt est maxime est laboriosam et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9e7dda3-4753-4fb7-adf7-8bce8268aa43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.396967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "993aeab1-8a00-4d8c-9bdc-a69430f8acbb",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 2140364457,\n  \"name\" : \"Celestine Dach\"\n}, {\n  \"length\" : 1545528177,\n  \"name\" : \"Nicolette Swift\"\n}, {\n  \"length\" : 1561582176,\n  \"name\" : \"Kyle Pouros Sr.\"\n}, {\n  \"length\" : 674739048,\n  \"name\" : \"Willa Gerhold\"\n}, {\n  \"length\" : 1608949952,\n  \"name\" : \"Clint Frami\"\n}, {\n  \"length\" : 456539153,\n  \"name\" : \"Tony Herman\"\n}, {\n  \"length\" : 347545427,\n  \"name\" : \"Tory West\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "993aeab1-8a00-4d8c-9bdc-a69430f8acbb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.396887Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "bd03f7e0-d5fc-410e-98a9-4d1e4979d1dd",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Rosaura+McClure/848028102",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 801681748,\n  \"message\" : \"Atque earum eum aperiam esse vero. Eos eos ipsa qui. Non animi hic quis consectetur velit pariatur. Sed earum quas sed laboriosam ut sit. Saepe qui vitae blanditiis sunt rerum ea qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd03f7e0-d5fc-410e-98a9-4d1e4979d1dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.396523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "72cc3119-7c1f-4044-aa9e-6a7f25a03d3b",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Junie+Adams+DVM/934552328",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1224048063,\n  \"message\" : \"Expedita quidem omnis est. Omnis laborum nihil. Atque itaque aut blanditiis et est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72cc3119-7c1f-4044-aa9e-6a7f25a03d3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.396388Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "1aec8c53-4376-421a-a320-4b3b0a40288b",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Miss+Lashandra+Blanda/512210795",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 256560250,\n  \"message\" : \"Iusto eius ea eos et sed vel nihil. Ex rerum voluptates reiciendis atque ad. Rerum voluptas eligendi et ea ut molestiae. Iste ut quia voluptas illo iusto molestias harum. Ea repellat nobis optio ut ni\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1aec8c53-4376-421a-a320-4b3b0a40288b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.396267Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "e6533aac-4c5e-4ac3-8858-40a3a1fa5fac",
    "name" : "Write specified table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Matt+Crist+V/1262142796",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e6533aac-4c5e-4ac3-8858-40a3a1fa5fac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.396136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTableElement"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "51fc5036-3bce-43b6-b55c-9de397b74103",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Gale+Labadie/100510130",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1084580472,\n  \"message\" : \"Aut qui quia quas adipisci enim omnis adipisci. Facilis quis praesentium delectus velit ratione dolores dolores. Reiciendis facere quo sit officiis nihil esse. Inventore placeat sit consequatur aut nu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51fc5036-3bce-43b6-b55c-9de397b74103",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.396067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "4100b83f-5382-44b2-a4ef-63c1586d87bf",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Serita+Tromp/657873657",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1357183222,\n  \"message\" : \"Dolore aspernatur sunt ducimus consequatur. Repellat eos quis distinctio voluptatem maiores et qui. Aut et illum delectus eos sit illum cum. Voluptas et qui exercitationem ea eius laboriosam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4100b83f-5382-44b2-a4ef-63c1586d87bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.395941Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "cbeab4dd-0c43-4e41-b49f-4b95064dbd8f",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Barabara+Yost+Sr./174261194",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1211617556,\n  \"message\" : \"Neque quas qui quidem quas aspernatur. Quam earum dolorem magnam ut dicta. Laboriosam iusto error distinctio.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbeab4dd-0c43-4e41-b49f-4b95064dbd8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.395818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "4436312e-d830-4d65-bb9e-cacddda18ebc",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Amy+Armstrong/123005510",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 7.287724801553259E36\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4436312e-d830-4d65-bb9e-cacddda18ebc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.395699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "4086d989-8657-4d89-9397-a33efa8b82af",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Juliana+Pacocha",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 228698945,\n  \"message\" : \"Et veniam distinctio. Aliquam voluptas natus. Molestiae facilis esse ea ex molestias. Dolore magnam et consequatur quam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4086d989-8657-4d89-9397-a33efa8b82af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.39559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "f2568237-e33d-4565-ad5b-b6a31e2a28c7",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Isobel+Tremblay",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 811486205,\n  \"message\" : \"Praesentium minima quo veniam vitae dolorum sapiente aut. Aut blanditiis quia. Molestias cupiditate sit placeat unde. Nisi necessitatibus cum doloremque animi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2568237-e33d-4565-ad5b-b6a31e2a28c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.395463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "9f482460-2f13-41db-9967-3cbe32fd614e",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Cordell+Hilll",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1796022611,\n  \"message\" : \"Pariatur reprehenderit tenetur quam hic autem qui id. Deserunt consequatur harum possimus et porro quas molestias. Occaecati dignissimos aliquam. Possimus repellat eaque. Repudiandae voluptas dolor qu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f482460-2f13-41db-9967-3cbe32fd614e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.395337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "01b7ccd8-b4c9-4a43-9a52-655b295215c5",
    "name" : "Write table elements - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Bradford+Mann+DDS",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "01b7ccd8-b4c9-4a43-9a52-655b295215c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.395214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTable"
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "9a6a6277-cd8c-49ea-bca6-ba71bf54f44f",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Elvis+Ledner",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 716491735,\n  \"message\" : \"Quos illum nemo. Enim perferendis optio laudantium non ab nostrum. Eius vel et culpa id quis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a6a6277-cd8c-49ea-bca6-ba71bf54f44f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.395152Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "6fa148bc-f804-4b9f-9e5c-42ba4502b520",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Valentine+Mante",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1994218986,\n  \"message\" : \"Fugiat modi sit dicta vel ut. Iusto vitae maxime voluptates dolor. Tempora ut accusantium rerum. Distinctio ut nesciunt voluptatem quod. Non magni sunt.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fa148bc-f804-4b9f-9e5c-42ba4502b520",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.395041Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "3883f851-8459-4311-bd1b-7fbb59f3f904",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Mrs.+Jack+Reilly",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 519574894,\n  \"message\" : \"Esse molestiae qui et laborum et molestiae voluptates. Sed eum adipisci cupiditate modi. Itaque doloribus omnis nisi. Ipsa nemo fuga rerum facilis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3883f851-8459-4311-bd1b-7fbb59f3f904",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394927Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "29f65da3-2e37-40e8-a4ab-205ae17c4fdd",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Gretta+Senger+PhD",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 1.1711843164126026E38 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29f65da3-2e37-40e8-a4ab-205ae17c4fdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.39481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "description" : "Value of the float variable",
              "format" : "float"
            }
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "dbf29550-e00e-44e4-a2ff-b16508e85290",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 927481984,\n  \"message\" : \"Eaque occaecati nobis eligendi modi. Aut voluptatem error. Voluptas excepturi laudantium asperiores sed. Et ea corporis autem blanditiis sed est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dbf29550-e00e-44e4-a2ff-b16508e85290",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "b5255498-0c24-4145-912d-1cb6a4c300f1",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 93824585,\n  \"message\" : \"Modi qui voluptatem dolores aut consectetur omnis repudiandae. Rerum ut voluptas eaque perferendis. Minima aliquam iusto sed sed aperiam repellat expedita.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5255498-0c24-4145-912d-1cb6a4c300f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394625Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "44cfa2f0-9162-4ffe-9a7b-d0ddc91ce6b2",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 17759947,\n  \"name\" : \"Lucrecia Donnelly\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44cfa2f0-9162-4ffe-9a7b-d0ddc91ce6b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394544Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "0f825b15-bfe8-46f3-9392-f7c0547c8820",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Cory+Rodriguez/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1798995934,\n  \"message\" : \"Et corporis et nulla similique architecto provident. Sint praesentium et. Quae sed illum a sequi dolor ut. Esse voluptates minima. Officia qui et earum saepe porro.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f825b15-bfe8-46f3-9392-f7c0547c8820",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "c042ecff-8bc1-4e72-bee9-66ca42632890",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Pamala+Marquardt/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1183857069,\n  \"message\" : \"Rerum assumenda libero quia asperiores laborum ipsam. Voluptates dolor ullam eos enim. Cumque quis nemo dolor voluptatem molestiae. Qui fugit neque ea quos. Aut similique libero dolor.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c042ecff-8bc1-4e72-bee9-66ca42632890",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "b07b27e8-9df4-4867-94e2-00da528f0c6e",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Tiffani+Jacobs/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 555992154,\n  \"message\" : \"Odio repellat sit culpa. Qui aut quis perspiciatis cum eum est ut. Inventore quasi beatae qui. Modi molestiae nulla tenetur dicta.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b07b27e8-9df4-4867-94e2-00da528f0c6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "65946535-8975-43d8-90ba-16337dc9ea19",
    "name" : "Sets the value of the specified digital output point - 200",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Hong+Schimmel/state",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "65946535-8975-43d8-90ba-16337dc9ea19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394088Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeDigitalOutputState"
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "58498071-68a4-42d3-aa8d-6116aa3410f7",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Dr.+Donn+Hayes/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1259789597,\n  \"message\" : \"Eum autem quisquam et libero doloribus repellat et. Aut cum et cumque dolore eligendi. Quia vel temporibus ut occaecati ex laudantium minus. Eos molestias enim ipsa rerum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58498071-68a4-42d3-aa8d-6116aa3410f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.394023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "7bfa99a5-97de-452c-887f-15a5019449b6",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Joeann+Hermiston/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1902560096,\n  \"message\" : \"Doloremque sit architecto accusantium qui. Corrupti voluptatibus quasi vitae similique. Hic sed earum est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bfa99a5-97de-452c-887f-15a5019449b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393905Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "1881414e-4cea-4032-828f-3ee8b089dc7f",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Dr.+Alonso+Bergnaum/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 887049975,\n  \"message\" : \"Aliquid inventore ipsum. Dolore culpa unde officia occaecati asperiores voluptatem incidunt. Voluptas consequuntur architecto velit eos.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1881414e-4cea-4032-828f-3ee8b089dc7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393799Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "c36d839c-f1ec-4f6e-8455-fd61350727f5",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Adan+Huel+Jr./state",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c36d839c-f1ec-4f6e-8455-fd61350727f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "boolean",
                "description" : "State of a digital point (true = on, false = off)"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "09f24ee6-47f0-4df9-a76e-73b551230095",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1886160395,\n  \"message\" : \"Et excepturi odio rem. Aut occaecati consequatur doloremque aut sed. Velit tempore vero. Veritatis necessitatibus officiis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09f24ee6-47f0-4df9-a76e-73b551230095",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "6cd149d0-c858-4cd1-9234-a360fcdc0d18",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 133992771,\n  \"message\" : \"Ipsa eos ut nesciunt molestias. Fugit mollitia eum odit dolor et optio non. Nostrum aut labore et voluptatem beatae veniam blanditiis. Quis excepturi dolor aut est asperiores dicta.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cd149d0-c858-4cd1-9234-a360fcdc0d18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393511Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "0f4042ad-0d61-48de-8ed6-c0ad01e3ab15",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Terry Pfannerstill\",\n  \"value\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f4042ad-0d61-48de-8ed6-c0ad01e3ab15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393428Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DigitalPointStateVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "73489eb9-e7c2-4493-9b5a-727088ab9c9f",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Jeramy+Schneider/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 648485132,\n  \"message\" : \"Facere dolore saepe. Magnam rerum ab eveniet. At officiis quas consequatur. Natus quae et rerum nulla.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73489eb9-e7c2-4493-9b5a-727088ab9c9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "99394ae6-6ef6-4918-80d5-c6555d4f0ad4",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Jazmin+Erdman/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1886792419,\n  \"message\" : \"Quibusdam vel laborum et doloribus. Quis aut qui in. Eaque veritatis aliquid quod libero rerum dolore assumenda.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99394ae6-6ef6-4918-80d5-c6555d4f0ad4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.39324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "d2690d47-d983-4710-9fc6-96e6846d9488",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Rema+Dickens+V/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1956750730,\n  \"message\" : \"Aliquam dolorem aut suscipit reiciendis deleniti. Est quia nam odit provident. Illum voluptates vel possimus accusantium. Ea excepturi dolor ex voluptatibus recusandae. Aspernatur ut molestiae quasi e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2690d47-d983-4710-9fc6-96e6846d9488",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393132Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "40f1aa77-e2d2-4973-b468-427a268b6149",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Raleigh+Runolfsson/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40f1aa77-e2d2-4973-b468-427a268b6149",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.393014Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "boolean",
                "description" : "State of a digital point (true = on, false = off)"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "3f1ba299-ae7f-4612-abca-f054e3f0459a",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 331189832,\n  \"message\" : \"Ipsum accusantium sint voluptatem possimus nesciunt. Voluptatem ea praesentium. Cumque dolorem et ut assumenda nam et. Illo modi fugit et dicta. Doloribus dicta excepturi nihil quas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f1ba299-ae7f-4612-abca-f054e3f0459a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392925Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "501f36c1-ccc0-4ab6-ad0c-bdf2c6c060a4",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1393880048,\n  \"message\" : \"Quam illum sed architecto dolor numquam quisquam. Non sed earum eum corrupti. Quam et rem praesentium voluptatem aut asperiores. Recusandae voluptatum dolorem voluptas qui qui est. Ea quia amet tempor\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "501f36c1-ccc0-4ab6-ad0c-bdf2c6c060a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "9dc57877-7373-4c94-87d6-bafb667f2463",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Leona Williamson\",\n  \"value\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9dc57877-7373-4c94-87d6-bafb667f2463",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DigitalPointStateVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "53390e94-35bf-47e0-a993-d46f6be4c538",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Ms.+Rudy+Reichel/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1104148362,\n  \"message\" : \"Fugit illum eveniet aut est reiciendis sit velit. Adipisci qui enim. Corrupti libero quo et non tempora. Est in quibusdam iusto perferendis alias dolores quae. Et delectus ea non.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53390e94-35bf-47e0-a993-d46f6be4c538",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.39266Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "a1f65d2b-ed2b-4023-b19e-239c0cd7fefb",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Marquis+Boehm/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 238721439,\n  \"message\" : \"Molestiae dolor nesciunt eos rerum perferendis voluptatem assumenda. Rerum rem qui. Sit doloribus mollitia error eaque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1f65d2b-ed2b-4023-b19e-239c0cd7fefb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392537Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "43da2054-fa3b-4f8a-b195-685223e16bae",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Glynda+Mante/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 652361990,\n  \"message\" : \"Quisquam qui consequuntur itaque deleniti praesentium a ipsa. Amet aliquam adipisci quo architecto deleniti autem. Et veniam quo corporis recusandae iure aut nam. Rerum aut et autem nesciunt. Suscipit\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43da2054-fa3b-4f8a-b195-685223e16bae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "ce68b035-aa85-4e0c-bfbc-0f9408c9bca1",
    "name" : "Sets the value of the specified analog output point - 200",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Loren+Stoltenberg/eu",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ce68b035-aa85-4e0c-bfbc-0f9408c9bca1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeAnalogOutputEu"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "096134a0-c4bb-4840-bc87-272503648a8d",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Miki+Marvin/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1048890632,\n  \"message\" : \"Vel esse rerum error. Deserunt et doloribus. Dolor aut sit nisi quasi nihil nesciunt. Qui commodi error consequatur repellendus eos enim.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "096134a0-c4bb-4840-bc87-272503648a8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "667fc2cf-15c0-46fb-b616-fed64620edf5",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Natalya+Stracke/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1785172976,\n  \"message\" : \"Autem odit minus ducimus quas nisi molestiae qui. Et quia odit tempore labore in. Est sed eos autem. Sed culpa est debitis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "667fc2cf-15c0-46fb-b616-fed64620edf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392119Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "1e639584-9f17-4f4d-95cf-e0bef0cfde0a",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Allen+Vandervort/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 873031420,\n  \"message\" : \"Quos atque doloribus laudantium vel autem culpa. Maxime et sed. Eos harum est iste voluptas quam vero dignissimos. Temporibus nesciunt eligendi dolorum sunt quia. Est iste saepe ea beatae et nobis ani\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1e639584-9f17-4f4d-95cf-e0bef0cfde0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.392007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "9526fd03-d68d-457d-a992-f0d726e61629",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Mohammed+Emmerich/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 2.512756096606042E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9526fd03-d68d-457d-a992-f0d726e61629",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.391885Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "ab3a3cd8-7705-419c-b0b8-8f74fc962546",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 80562051,\n  \"message\" : \"Amet laboriosam at eos. Inventore aperiam velit doloribus. Molestiae esse necessitatibus impedit impedit quisquam itaque. Tempora voluptatum tempore.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab3a3cd8-7705-419c-b0b8-8f74fc962546",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.3918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "ac77b03e-8963-4c0c-85ff-4ceaa0cc4a8d",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 836038116,\n  \"message\" : \"Quibusdam eos iusto voluptatum sunt ab labore similique. Ducimus et eum nihil. Sequi enim rerum qui. Amet soluta tempora consequatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac77b03e-8963-4c0c-85ff-4ceaa0cc4a8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.391723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "19535a7b-985a-4f92-a780-6b5279fa7303",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Dr. Wendolyn Senger\",\n  \"value\" : 2.153062821052836E38\n}, {\n  \"name\" : \"Linda Durgan\",\n  \"value\" : 1.0534344802301288E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19535a7b-985a-4f92-a780-6b5279fa7303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.391643Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "77b85448-fd76-4326-aea9-fd28d84079e5",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Sommer+Cassin/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1514803129,\n  \"message\" : \"Tenetur odit velit molestiae. Ducimus nisi repellat cum esse ex. Aut explicabo facere explicabo dolor totam ut optio.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77b85448-fd76-4326-aea9-fd28d84079e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.391508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "4ce1f156-9c42-4d6c-91f7-5bbd63c6eab6",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Leila+Bosco/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1325009597,\n  \"message\" : \"Qui molestiae alias. Quos suscipit qui iste. Accusamus animi eligendi. Hic explicabo voluptas sunt magnam deleniti voluptatem cumque. Doloremque omnis cupiditate ut harum velit harum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ce1f156-9c42-4d6c-91f7-5bbd63c6eab6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.39138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "3bf2b446-1a2f-411b-856e-3dd5dd1e78c5",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Mrs.+Gale+Auer/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 276461980,\n  \"message\" : \"Temporibus illo assumenda ex. Dolores at perferendis vel itaque. Nihil dolorum et et libero consequatur adipisci. Voluptatem quia magni.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bf2b446-1a2f-411b-856e-3dd5dd1e78c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.391265Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "0c60aabe-f310-4f74-807c-0cdb04d2fa68",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Dr.+Sana+Cummings/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 2.9548726760115535E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0c60aabe-f310-4f74-807c-0cdb04d2fa68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.391149Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "5f33400c-255c-4566-bc3d-68cac3577abb",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1985684931,\n  \"message\" : \"Natus officiis ea odit qui non tempore. Quae culpa quas id et qui. Qui culpa aut sit est. Ut reiciendis ipsa aut illo non ipsa rem. Occaecati nulla in a debitis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f33400c-255c-4566-bc3d-68cac3577abb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.391045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "7b50df03-05d5-4351-8ad2-cdb032ab7027",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 9884823,\n  \"message\" : \"Nisi facere nesciunt dolorum nihil saepe. Aut saepe aut dolore aut. Nulla nisi velit tempore a commodi sunt sapiente.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b50df03-05d5-4351-8ad2-cdb032ab7027",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.390963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "bd657415-8e15-49da-b9dd-759fd7cee133",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Alberto Shields II\",\n  \"value\" : 2.619973928153151E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd657415-8e15-49da-b9dd-759fd7cee133",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.390877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "e9529383-4d8d-4b21-adcf-9c75f88a0a41",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1981390099,\n  \"message\" : \"Cupiditate eligendi quod neque. Voluptatibus nam autem aut. Quod odio nulla. Hic earum placeat consequatur itaque enim dolores.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9529383-4d8d-4b21-adcf-9c75f88a0a41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.390769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "21a2ff77-36ec-4f5e-a2d9-327eedcef385",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 383360864,\n  \"message\" : \"Sit blanditiis magni ad sed provident dolores sit. Magnam voluptatem maxime beatae voluptas porro repudiandae cum. Amet sed et. Atque officiis officiis ut sed quo similique.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "21a2ff77-36ec-4f5e-a2d9-327eedcef385",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.390694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "ff14cfca-fc22-42df-9895-526006c708b5",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2022-07-03T09:26:45.390441Z\",\n  \"strategyName\" : \"Rachael Klocko\",\n  \"crc\" : \"ssktb35x11zd6kyd9z8yiromkawjotbotxidc960owbac7h9i7k988qqp54rlr59uul34raec45qi2fk4gi03j\",\n  \"runningCharts\" : 1987092977,\n  \"time\" : \"2022-12-14T08:54:45.390539Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff14cfca-fc22-42df-9895-526006c708b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.390609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "type" : "object",
            "properties" : {
              "crc" : {
                "type" : "string"
              },
              "date" : {
                "type" : "string"
              },
              "runningCharts" : {
                "type" : "integer",
                "format" : "int32"
              },
              "strategyName" : {
                "type" : "string"
              },
              "time" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "d782148c-6a64-4c05-9f3d-ca6ad769167c",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1949890403,\n  \"message\" : \"Ullam voluptatem ipsum id ex repellat mollitia officiis. Dolor quaerat repellendus dolores aliquid et. Deserunt ex blanditiis assumenda exercitationem ea id illo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d782148c-6a64-4c05-9f3d-ca6ad769167c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.390403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "5fe04ee9-7b51-44c4-ae1f-17cf0dcaeaf4",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1719982058,\n  \"message\" : \"Id possimus cupiditate. Voluptate sequi et incidunt est non ipsa. Nulla eveniet occaecati veritatis. Aut doloremque enim eligendi culpa in sapiente voluptatem. Quia qui officiis voluptas unde quam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fe04ee9-7b51-44c4-ae1f-17cf0dcaeaf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.390306Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "e464fe43-2ec8-4f6a-9b7c-3cfdf689a948",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mac2\" : \"qdwz8pwgz7khpdm1mvqfvybjzwcfah88b9f7tu0nb67x860czn77o4vcj5y6mrirxly43n5vkyj0auboiwcmn6dj2dtq15zpu93vtrpf6r3lg4rs7rv9hpw0x7vm49q2k4kw3xo6t8o9l57aynvsxf\",\n  \"mac1\" : \"16jsoi493n9ip8rigr1wgwjjoi2sx2u7rfz83uztf1kaiz2sgxzalwjyi459o87jab6evvxdggkcs9evxs8ptw1z75ia7vr68vdxv2r1akspd2\",\n  \"upTimeSeconds\" : 128380376,\n  \"firmwareDate\" : \"2022-05-07T10:04:45.390009Z\",\n  \"controllerType\" : \"134mnjav5ouldhupay7598pjb9ir36wy0ns8wdc1d6yo953wlwqxi4sjngd7fr3z4gczyjyt62qpb2tsm9fne6qtq449wqx54fb96u941q76v9s2ijy35qrb9wsj4pj6cw2ge50yhh19h9d1go\",\n  \"firmwareTime\" : \"2022-04-27T08:24:45.390058Z\",\n  \"firmwareVersion\" : \"99qc18j2bgqfl6i2j3wrchodhts3awjz2700fwunia4ht1qga7qjqjmzz5voere1xf39c47v4b0d5k59qrk5rbr1q4avc8mzqs0xb9icivj9pg7lx2pw1wkvr9tpbkn2dq2dt4mcat\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e464fe43-2ec8-4f6a-9b7c-3cfdf689a948",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:45.39018Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "type" : "object",
            "properties" : {
              "controllerType" : {
                "type" : "string"
              },
              "firmwareDate" : {
                "type" : "string"
              },
              "firmwareTime" : {
                "type" : "string"
              },
              "firmwareVersion" : {
                "type" : "string"
              },
              "mac1" : {
                "type" : "string"
              },
              "mac2" : {
                "type" : "string"
              },
              "upTimeSeconds" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 202
  } ]
}