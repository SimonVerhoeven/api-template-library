{
  "mappings" : [ {
    "id" : "d0657ddc-643d-4b22-9616-a7c156f3f35f",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2023-02-15T10%3A40%3A54.31442Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1885329906,\n  \"message\" : \"Quis magni ea eum rerum repellendus. Debitis repellat non. Omnis libero dolore perspiciatis. Aut eveniet velit hic atque accusantium. Voluptas non non ab fugit perspiciatis voluptatum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0657ddc-643d-4b22-9616-a7c156f3f35f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.314456Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "aeb2331c-43aa-496b-9008-f30af89f3918",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2022-04-07T13%3A55%3A54.314317Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 487950618,\n  \"message\" : \"At impedit vel porro occaecati enim. Sequi voluptas quod dolore impedit. Consequatur nam qui voluptas facere exercitationem doloremque aut. Dolorum voluptatem commodi. Autem aut dolore incidunt offici\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aeb2331c-43aa-496b-9008-f30af89f3918",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.31435Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "84caf729-f1df-42fc-bd2e-92bdc7c011cf",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2022-08-27T13%3A13%3A54.314213Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1800953685,\n  \"message\" : \"Et nemo ut sit repudiandae exercitationem. Nesciunt accusantium voluptatem aliquid ea nobis atque. Autem velit repellendus reprehenderit suscipit nemo temporibus cum. Fugiat architecto qui quae volupt\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84caf729-f1df-42fc-bd2e-92bdc7c011cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.314249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "6b53bd42-999b-4397-a830-7a83bafabbfe",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2022-07-05T11%3A19%3A54.314112Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1.7776992274671125E37\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b53bd42-999b-4397-a830-7a83bafabbfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.314148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "7083e6a6-1aff-4d4e-b912-ff80f7cb8c54",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1655728908,\n  \"message\" : \"Est aut iure. Similique molestias blanditiis repellendus quis. Sunt consequatur incidunt reprehenderit dolor eveniet corrupti. Enim aliquid qui. Vero alias fugiat aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7083e6a6-1aff-4d4e-b912-ff80f7cb8c54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.314063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1b26dad0-4959-42c9-bfb9-8396cbb644f3",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1775576195,\n  \"message\" : \"Est nam harum commodi pariatur maxime. Tempore quo odit iusto quos. Et facere aperiam quasi molestiae optio commodi. Voluptatem mollitia consequatur saepe corrupti tempore doloribus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b26dad0-4959-42c9-bfb9-8396cbb644f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.313988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b7a16520-f578-456c-9ccd-ab3402e4dd18",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Aldo Murphy\",\n  \"value\" : 6.203749043199294E36\n}, {\n  \"name\" : \"Tina Blanda V\",\n  \"value\" : 1.7469421265480744E38\n}, {\n  \"name\" : \"Rolande Cormier IV\",\n  \"value\" : 3.4408393226051083E37\n}, {\n  \"name\" : \"Sabra Zulauf II\",\n  \"value\" : 2.4783306268085672E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7a16520-f578-456c-9ccd-ab3402e4dd18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.313907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    }
  }, {
    "id" : "434142b7-c570-4189-b468-1858816bcbeb",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Josie+Gerlach",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1727604910,\n  \"message\" : \"Qui est autem. Eum cum sapiente suscipit eum necessitatibus facilis. Voluptates et quia. Ut placeat cum sit vero qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "434142b7-c570-4189-b468-1858816bcbeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.313669Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c30fb5c2-ac46-4233-be9a-adb44b05da7f",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Ms.+Lesley+Mann",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1919845415,\n  \"message\" : \"Molestias itaque aut blanditiis at. Ipsam fuga incidunt distinctio odit tempore. Dolores tempore in. Veniam dolor omnis accusamus a. Ratione et est eos.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c30fb5c2-ac46-4233-be9a-adb44b05da7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.313557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "987e1303-b8b4-4100-91b1-cf9e818bb9eb",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Curt+Abernathy",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 626206567,\n  \"message\" : \"Qui ut mollitia non reiciendis velit. Aut molestiae quis ad eum. Excepturi voluptas sit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "987e1303-b8b4-4100-91b1-cf9e818bb9eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.313442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2cf924ce-0669-4d19-8bc4-71869339a1af",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Juanita+Schroeder+PhD",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"errorCode\" : 1246834993,\n  \"message\" : \"Earum deleniti quos numquam. Tempore sint velit quasi sit necessitatibus. Ducimus consequatur laboriosam reprehenderit laborum consectetur. Veritatis cumque magni rerum facere rem neque excepturi. Omn\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2cf924ce-0669-4d19-8bc4-71869339a1af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.313337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -23 ** The string you passed is longer than the width of PAC Control string variable or table element you are writing to.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "27614d44-143f-498b-a10b-8f29a6035e9c",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Kaylee+Braun+MD",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 984262092,\n  \"message\" : \"Omnis sunt sunt. Quos explicabo rerum deserunt nisi deserunt ea hic. Dolorum expedita et culpa autem laudantium consequatur. Numquam nobis quasi minus. Minima et adipisci aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27614d44-143f-498b-a10b-8f29a6035e9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.313189Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9e51f8a7-2428-4888-9144-a046d5b048f1",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Janette+O%27Keefe",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 625462859,\n  \"message\" : \"Blanditiis ipsa aut quo praesentium. Eum at fuga. Autem pariatur ut sit repellat et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e51f8a7-2428-4888-9144-a046d5b048f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.313067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "267a8843-b35d-4f40-83f3-aa3374094ea3",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Royce+Ritchie",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 140583817,\n  \"message\" : \"Cumque rerum enim sunt. Est magni excepturi eum voluptatum nihil. Ab excepturi quia nam reprehenderit nihil a fuga. Quisquam non voluptatem. Autem inventore odio omnis rerum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "267a8843-b35d-4f40-83f3-aa3374094ea3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.312955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3ffce407-2b6b-4da3-a3ab-b75507c1c66e",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Miss+Debera+Larkin",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"7chb60jd9hdvis1x3c9jakvrp7zhf3tnlenvuyr24g6z84lj13c4ethwi1zx84jj97xr6ys806tr6imz4n2zi1xstu2cgpptw7zmkoh7bdxtorxr80en41kgyw8s6fmfi6m1a3bhnd6myjp1ha05bha9pd44qu3fjlom7s1xtkwgx2vv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ffce407-2b6b-4da3-a3ab-b75507c1c66e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.312838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "maxLength" : 1024,
                "type" : "string",
                "description" : "The value of a string; string width (max length) for each string variable is defined in the strategy"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c1b16db6-d3fd-4702-8465-798be20d2a1b",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1886797054,\n  \"message\" : \"Dignissimos saepe optio corporis sunt aperiam. Et ut culpa voluptatem repellat sed autem reprehenderit. Accusantium est recusandae tempora et possimus blanditiis autem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1b16db6-d3fd-4702-8465-798be20d2a1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.312728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3a31859a-319b-418a-aee0-03d97f8d53c1",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 386860075,\n  \"message\" : \"Velit voluptas cum occaecati ullam aut. Optio autem ut non. Quia pariatur et fuga rem est vel. Fugiat repudiandae aut cumque voluptatibus qui reprehenderit atque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a31859a-319b-418a-aee0-03d97f8d53c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.312653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "85387c8f-8ab3-4097-a879-0dfac60ea572",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Margarette Kessler\",\n  \"value\" : \"8fx7n505hll1nfh1bmbfek71devw9axv6hiwxgmq4ucvbrpm91h9wcjdyd3bx4xzaukc5iwi18d8cgmu6mzocmz6b3e03l7xevyrlg1hzj0pgqzjywkk8am9jzyyf5kiykq5wn9s7utehlogkoz9ag2wgy96tc3kvoelyy9m8xof6eeap5e6psf6vcglu2p61fosb85zgthsn7tkh8fslmxsvnvx8op1w7yujrf44qn0g5f2sobbj2xc62z21gjnrpx7jdt47fkod0jgtueb5cn9x79asbkfn7lidgjbnt2sbtm7sm4v9tt7nawbdhztzxyl3bgu9j6bti2yvfxwevm3qob28jhdsy46kpcn4i5zec2h49hq07zo7pmjuv14qjn6o08wdd9ekgjsb5gdzd6ylgkhxvbllgqs7rj9gtfdicw4xnp1zmnlilb63l81wfnml6yc4xfk1my4a2uppg4q7pdsrikakn4ef1833a96f8s0mr52v0wcbc0017lu0qj50nh1e80xqcm1spowbnwjrp265ih5xk6ffuyrwm6fsodyhk1n0zysbh8dbt4x\"\n}, {\n  \"name\" : \"Mr. Adina Bashirian\",\n  \"value\" : \"ipr7xrxk01jus11h0fikw3w28znng478yoptuyjyi5r5aahwa61q3pwrcq8l9jaf3vtlszx6q3l3bsk87vqh1nqb1w4lzg9ytj8s3o4v0ygd6xcqjvpxy7se9lnmt6odwfsegntyszdeoam32d2iczkc2um53z2s5som6xxlq1vssjli45qvgsuaeuwxn10nehwlu6nlfcecbsbfm00ho2gqnxxnyeqfgrxnweizd9idh1yma5kbw9gy40xvb4oawlarvdpq93k1pqjn1tf23dz55nx1boxy4f7ezrt6f6qpzm22w73mmutr5dwo52ympi8chs1jjbjw0vasln7zsju4yqipeyf28p2ohrfhyasfgv1ge64geyx97q0bx802z103u61d6uruq8pxljcyghc4ompj0gkv0dntgb1l4jngzk79ozyglq93lult3utr59hp5s8zpe4mikz019y3pvo9ul0czu5ccu4kur1qjir83ks86e0z1pnm63vxvf5hbz3mapnygf2yc8fqx1tb\"\n}, {\n  \"name\" : \"Leonardo Bosco\",\n  \"value\" : \"vaz14ajbu7q42q7p0l3rbfk29cp80x4k1r3tkiyjyadg7xibw7i94b42bbo5gb5s77e783gin5paij61t62wrz2304h6zelvq6xicv669plf60q6hvjyumlvsb0wherhk568hgom899zk4sv7x2z6uywn8i3bjlqz87var9f01lxze2pzkq0x25wloqi0ppjhhz78cfb52ivowl9hd8tr1a2e3tqtrrm4f3xzfccn3jqqltq9smmzppm64diyj99mjm960xorowx6oxb3r6qyo1g1n0kazuvtzof57q9jidmfujuz5vecrzdnltyagdwf6hipfu2g07hqwpbdjmhnabnlt4kdbrsixub2qq7ibpcy0f8xrhwap1st7ez7afcszm5j7nl5ykhgbbrz86fbw4zw8enme3ub9txttuyqa65ch0ug31yene8e70srn9kqifnv96cre5fxehfab88ku5bgh1pc1ep8y9jawxydy0kjuf16tx2hhtdc9sjpjyl7yi0t05cx7kf7cuw0gzj8j8o4vtxaf5sy5q2lesilk4idyxo1s3shqwqyokst863hw675yakvuk3cbt6nqshakmib3uct1nokmtpqblq1ooqhm38rdahw2e8gx\"\n}, {\n  \"name\" : \"Alia Pouros\",\n  \"value\" : \"tkkxfrck7xnhugs964aqzrfw3uep4jrr8ojndnj47xgpx3t1o2v0o3zqe6j0v1tva83r1dsxiy5hp2h63p8f1fyzvxg5w5sfq4xhkprjd8kbhstoa24lbceqxz27n2tqtwlhboo9vje959ohumd0n6ekkw1uh1q4zzn0gtko96fagiazazlfvvvltwhas9yfvrnsscejezvz42j3ru12h9r8c2if9emdeuo3wuzb755a8iz08zxqrcgew4vmpd07f2zca6d47nzl49nr2qcdmjy7m8xl21302dcvst263vra8riocm0xjynuh0k2pfz914jw06igv7evg1hebdzo96lc1q4kry9e1zrvwuzmyczvsen23iyojm75sfkz223ixim1r7bac2rmnrocjs4s3vaobv5zks0mmh258gl2ihbkf3gjrcfsf4x2per1b3pqn0cuxuhnodkqoevgtjd1lhwuc8qvd0chdrnq8g4whulnwtyb2znto7zmwlizk20grhx8fblud8le0wojwhhizea4ilm86ltjnwg51181\"\n}, {\n  \"name\" : \"Ms. Mildred Mitchell\",\n  \"value\" : \"hgckxrdmwqbgj7xdlk3q7jf4uichhjdi1187gh7nrrhed839adlld7nwgj4lh0qzq8ylh37teoicxj4bcjnot1722l2ee6878657q3dx7xdqzko7lugsw34wr9fmajnsxeh3kwp79hm8znuq4d59a4823zevudj2nt0l6y65phzqw1cna5976swn7q1u2nsgt7fri6mpyxhzc42uha9210dzef4vaeuqnfgwuqovg8qhpuicf391zexz8icqd4tximv8bj86vva2jqd9otcmkki2mep70vdo58vyxamuotgw4wjsejuvs1uxm0myrtq389pszqasazlle5clbvs2yprj67jjao0vcw5c6z43h95azb0hma6xkcn4mg5ipnogrptfydkg57mkkgbn43b9068p8f4urr8sz2geb1z6nkfp4yurrsgbucllmg3lxyxd0tsbdh3xqxq6yrjep2ct44dsbqjtrdvn8q1b3zxumd7e5e77utc4kcy705bwol31pf8ifatksx7vqgnvkgzrrb7qwn4we93jee5zr2r0nhqgd7pxts2sxhvwfilijtgu8rfojnk03wfkp56hkg02aqgx9f7ywpfte0u899mjksqx88z499u5tiplullc5tm90b7e7xafvydho22lxrjogui9vx4sdybdikycmtd8zpxm269d7hkcdtblf7wle6odlhigi35jwf0iu0ivbk1mc2ckfaw92jnu3norzybvngaejhvwq8x8bvh22nwvage3zdjms2c8f6mquvmzm5gzk4e7si56t9vpihwb77q7gzp2js50aeb3cfbdhe7gl6hfq0ejqxjna4ia6zrgb3e8b5w\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85387c8f-8ab3-4097-a879-0dfac60ea572",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.312571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StringVar"
            }
          }
        }
      }
    }
  }, {
    "id" : "f4be8d41-2bcf-491c-8668-be81c543eaf0",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Preston+Hessel/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1060735572,\n  \"message\" : \"Sunt facere et dicta. Dicta et sed vero. Est reiciendis corporis vero quo facere nihil perspiciatis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f4be8d41-2bcf-491c-8668-be81c543eaf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.312223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1c589223-0277-414e-a926-a5a54cc3b637",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Neal+Sauer+III/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 302720511,\n  \"message\" : \"Dolores dolor occaecati laborum sint provident earum aspernatur. Non nisi reiciendis iure. Optio corrupti distinctio aut perferendis. Voluptate cupiditate corporis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c589223-0277-414e-a926-a5a54cc3b637",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.312106Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a550981b-43a5-4a3b-aeb0-7082cd4ba79d",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Julius+Schmeler+II/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1822201268,\n  \"message\" : \"Rerum aliquid dolor repellat vel quas debitis et. Quasi dolorem quas. Velit quisquam atque. Qui corrupti eos eligendi porro error.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a550981b-43a5-4a3b-aeb0-7082cd4ba79d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.311991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "419d46a3-b05c-47b7-b0f4-a304eadbb498",
    "name" : "Sets the value of an integer64 variable as a string - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Sang+Murray/_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "419d46a3-b05c-47b7-b0f4-a304eadbb498",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.311878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64VarAsString"
        }
      }
    }
  }, {
    "id" : "15da20cb-2bfc-406b-b0dc-ed5a61276b9f",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Waldo+Beier/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 237277966,\n  \"message\" : \"Sint autem dolor. Tenetur distinctio nihil quidem exercitationem. Illum officiis adipisci dignissimos minima. Rerum commodi fugit dolorum ab architecto animi. Incidunt sit fugit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15da20cb-2bfc-406b-b0dc-ed5a61276b9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.311816Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "192d453b-058a-4736-8f83-428759b15079",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Rubi+Considine+PhD/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 901237714,\n  \"message\" : \"Illo sunt itaque. Eaque consequuntur assumenda eaque. Aliquam laborum non consequatur odio. Unde doloremque dolores earum reprehenderit. Unde dicta vel laborum in voluptatum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "192d453b-058a-4736-8f83-428759b15079",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.311703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5e6c5093-2038-4d10-a0aa-ce43ce0a60b6",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Travis+Zemlak/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 170129709,\n  \"message\" : \"Qui aut mollitia. Quas eos pariatur fugit necessitatibus aut sunt. Quis in eaque necessitatibus voluptatum sunt odio.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5e6c5093-2038-4d10-a0aa-ce43ce0a60b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.31159Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b3cf4889-8185-4242-8fd1-bbff9bc337bc",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Lamont+Kilback/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"9gguoh49t0krc4pbjoffbxnzs0nkgnzn08e0498kwszynvyrn1l2nrt3j53c69kcnuxgtekpferlp88nhgekrw0z09ct1eknso5a3xg9by\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3cf4889-8185-4242-8fd1-bbff9bc337bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.311478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string",
                "description" : "Value of the integer64 variable expressed as decimal string, e.g. \"34359738367\""
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "48b6997b-4c5e-47e0-8612-99eaa7eab56e",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Kathryne+Bergnaum",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1353402021,\n  \"message\" : \"Optio reiciendis aut maxime eveniet ipsam. Soluta voluptatibus autem sed repellat eos perferendis. Reiciendis repellendus quisquam eaque iure ab cum aliquam. Quod illum maiores esse deserunt officia u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48b6997b-4c5e-47e0-8612-99eaa7eab56e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.311365Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "7c65c9a6-d477-4894-b5c1-2d44c3361ab2",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Mrs.+Cyril+Rowe",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 817013916,\n  \"message\" : \"Voluptate qui quos vero accusamus laudantium illo. Voluptates qui et error aut dignissimos atque maiores. Delectus quae dolor ab. Dolor vero velit tempora consequuntur nemo. Repellendus nihil voluptat\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c65c9a6-d477-4894-b5c1-2d44c3361ab2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.311238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "f5d4a0f3-ada1-47fc-bd2f-f0afd8fad8a3",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Mrs.+Sherron+Smith",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1111423902,\n  \"message\" : \"Corporis consequatur iure. Exercitationem consequatur sunt doloribus deleniti quia magnam earum. Qui voluptas sequi sint quia rerum aut rerum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5d4a0f3-ada1-47fc-bd2f-f0afd8fad8a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.311113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "59c8738c-4881-4841-8c96-e2962a7c9f30",
    "name" : "Sets the value of an integer64 variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Arden+Orn",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "59c8738c-4881-4841-8c96-e2962a7c9f30",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.310996Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Var"
        }
      }
    }
  }, {
    "id" : "d03730db-1df3-495b-8795-001787a41778",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Mrs.+Alfred+Mann",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 2035396786,\n  \"message\" : \"Sed consequatur consequatur laborum. Eveniet harum consequatur aut alias quo. Nihil at ipsam facilis animi. Dicta voluptatum vel. Ut consequatur nihil repellat possimus quia illo aliquid.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d03730db-1df3-495b-8795-001787a41778",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.310933Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "71e90df5-2e29-490a-9bf5-81b7e7182e12",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Morton+Mayert",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 7579915,\n  \"message\" : \"Alias consequatur repudiandae eius voluptates sapiente eveniet. Quia animi quibusdam fugiat asperiores reprehenderit omnis. Culpa iste nobis quia eos sed.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71e90df5-2e29-490a-9bf5-81b7e7182e12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.310811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "244a0327-f9ea-4f8b-af79-9b4dbd905408",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Darron+Hermann",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1390388738,\n  \"message\" : \"Consequatur accusamus voluptas non hic eligendi. Quod necessitatibus unde repellendus similique mollitia distinctio. Ut eligendi officiis. Inventore earum minus optio eum. Expedita facere nisi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "244a0327-f9ea-4f8b-af79-9b4dbd905408",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.310704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a200d498-a8cc-4135-ad2d-a84c9cc2e048",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Chantelle+Sipes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 4678132576447042590\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a200d498-a8cc-4135-ad2d-a84c9cc2e048",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.31059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer64 variable",
                "format" : "int64"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9df73c7d-8ef3-44f6-8837-e9bd23c23c6e",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1812920134,\n  \"message\" : \"Corporis consequatur vero. Aspernatur aspernatur nihil vero et quasi. Consequatur quos et in culpa porro.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9df73c7d-8ef3-44f6-8837-e9bd23c23c6e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.310475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2aed0535-47fd-4bff-94f8-74a6522b9347",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1396438942,\n  \"message\" : \"Est qui aut explicabo ratione reprehenderit ut nam. Ipsum architecto quis necessitatibus reiciendis. Voluptas nulla deserunt cumque sapiente voluptatem nesciunt. Impedit et qui sequi necessitatibus la\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2aed0535-47fd-4bff-94f8-74a6522b9347",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.310403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "8526a452-0751-411a-a976-4093ac56e096",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Mr. Glynis Shanahan\",\n  \"value\" : \"sgusnb8zxjszf6c0m445w0bxlj9h7xeslrx1jbusdxfgnubt0777nvxfi70ez4mfei\"\n}, {\n  \"name\" : \"Keren Schmeler PhD\",\n  \"value\" : \"p9oxxdz1rcowpsgbpxtol299gfa2ybakgzn4mc822a605ptyid38rfru9rkow99bvrhta88t5ooeq1ea0epy2ia5n8re8bpg1d5epxisgdpt3ybtmn03bdltgj\"\n}, {\n  \"name\" : \"Mr. Danyelle Stehr\",\n  \"value\" : \"ozaacfjyges170eb\"\n}, {\n  \"name\" : \"Ms. Karlene Rau\",\n  \"value\" : \"atele6c1x7t1t3nzr0e\"\n}, {\n  \"name\" : \"Britt Torp\",\n  \"value\" : \"8d2liqjtz07dqfxlc6pbz94ew5b240exq0edu0yv9qb91h3c472p6044jtmckb0yxdz60phoaze623xo8d84vgqx0shgj1buv41xahm5bn\"\n}, {\n  \"name\" : \"Teena Larson\",\n  \"value\" : \"gt4imu3ss27ff8o7\"\n}, {\n  \"name\" : \"Tristan Dibbert PhD\",\n  \"value\" : \"a07gpjmon0hz61ujs1prz3tyx8mh30n0aie56uzkc0n7a91dt97ymt0q129jcnez5hsrlj1942s8536xelig4qyhz1q9x6raedcm024k0j2nh5i48zdomgrsnw9zzbnlqng1g0970ivxol0kz6is6momwkip8gcwxr21erz8cr88t9lr6ov\"\n}, {\n  \"name\" : \"Norbert Runte\",\n  \"value\" : \"n7oases2yv9iibv4pc83mmzcwh8427yfmx8dh9l8wo8du9icu7rv8zvm9yfrqphlnicb0hqn98zboduxgysz66ljzzf2ccvz91rryp6jtc\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8526a452-0751-411a-a976-4093ac56e096",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.310321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int64VarAsString"
            }
          }
        }
      }
    }
  }, {
    "id" : "75b185a5-5d5a-4cbc-861f-c2524229fdd6",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1092691018,\n  \"message\" : \"Optio occaecati distinctio alias sint. Reprehenderit inventore cupiditate omnis qui consequuntur. Consequatur veniam a. Ullam enim non non et delectus dignissimos.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75b185a5-5d5a-4cbc-861f-c2524229fdd6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.309873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "910028d0-43cb-4850-9cdd-591f190f7f8e",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1621964428,\n  \"message\" : \"Voluptas debitis modi est. Nihil vel aliquid placeat distinctio quis officia. Rerum porro voluptate modi quidem. Est quia placeat sunt similique debitis officiis voluptate. Voluptas magnam saepe qui e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "910028d0-43cb-4850-9cdd-591f190f7f8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.3098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c8ee3ab5-eecf-4a00-910c-ca2e14995a9b",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Liliana Parisian I\",\n  \"value\" : 1445353709053300632\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8ee3ab5-eecf-4a00-910c-ca2e14995a9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.309719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int64Var"
            }
          }
        }
      }
    }
  }, {
    "id" : "8f3eaa10-cb69-4af2-bce8-415c3846f19f",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Darrick+Effertz",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 2117494313,\n  \"message\" : \"Doloremque eligendi inventore eos. Repudiandae labore quos recusandae. Ipsa aut aut. Ad magni itaque voluptas odit consectetur tempora. Corporis esse vero ipsa ea ut odio.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f3eaa10-cb69-4af2-bce8-415c3846f19f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.309612Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3e1c97fe-4480-4f1c-ba25-6d3592af33b8",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Madlyn+Littel+V",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1636143266,\n  \"message\" : \"Nostrum sequi voluptatibus et ut sed officiis. Quasi aut laudantium. Iste fugiat aut et quae modi reprehenderit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e1c97fe-4480-4f1c-ba25-6d3592af33b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.309491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c0393fe7-7d9e-477f-9ed4-168680c35342",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Olen+O%27Connell",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 659565496,\n  \"message\" : \"Accusantium dolor qui ut ea rerum quasi. Reiciendis eos quasi illo voluptatem. Voluptas placeat sunt velit sapiente illo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c0393fe7-7d9e-477f-9ed4-168680c35342",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.309367Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e7c02eb3-2915-4189-bbf0-219d4b44d841",
    "name" : "Sets the value of an integer32 variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Klara+Luettgen",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e7c02eb3-2915-4189-bbf0-219d4b44d841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.309257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Var"
        }
      }
    }
  }, {
    "id" : "7828dddd-6aa4-4084-a8d2-56deaf78123d",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Renato+Fritsch",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1168679739,\n  \"message\" : \"Ipsum qui ad aspernatur qui enim. Magnam eaque consequuntur architecto sed id quos. Nesciunt pariatur maiores excepturi mollitia voluptatum aut illo. Vel quisquam sint veniam unde quod.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7828dddd-6aa4-4084-a8d2-56deaf78123d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.309192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ca949368-8c4b-4e10-bf6c-4bd2720afbaf",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Tracy+Morissette",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1840644864,\n  \"message\" : \"Nihil quaerat reiciendis ad dolore ea voluptate. Aspernatur sed qui in amet. Quasi sunt qui ea qui tempore labore excepturi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca949368-8c4b-4e10-bf6c-4bd2720afbaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.309075Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "99079077-71d6-4865-a9a5-845ff4fa7710",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Ms.+Keven+Moen",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1449224942,\n  \"message\" : \"Quaerat et ad quae consequatur saepe excepturi aliquam. Ullam voluptas autem perspiciatis consequatur eveniet qui ut. Voluptatum minima aspernatur omnis tempora. Soluta ut modi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "99079077-71d6-4865-a9a5-845ff4fa7710",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.308963Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b382c3e5-1cfb-40e2-a43d-1f0fa88feb8d",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Aleen+Boyle+Sr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1579594826\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b382c3e5-1cfb-40e2-a43d-1f0fa88feb8d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.308842Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer32 variable",
                "format" : "int32"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "f69876cb-a9f3-4d4f-b1cd-400ca07f7dba",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1068862588,\n  \"message\" : \"Voluptatem quo impedit autem impedit libero error. Illo dolores optio dignissimos. Nesciunt vero fugit perferendis laudantium sapiente quo. Unde ab id cupiditate sint sit odit quisquam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f69876cb-a9f3-4d4f-b1cd-400ca07f7dba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.308741Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ba585e1a-327d-4071-be4f-496c98ec1f9d",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 422812189,\n  \"message\" : \"Voluptates quia veritatis ipsa blanditiis distinctio. Soluta omnis hic eius non ea. Consequatur animi at qui repellat omnis alias. Voluptatibus officiis distinctio sequi consequuntur impedit delectus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ba585e1a-327d-4071-be4f-496c98ec1f9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.308659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ef48e519-0648-4dfe-b77c-01b5679e75a8",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Calandra Sporer\",\n  \"value\" : 478273740\n}, {\n  \"name\" : \"Jaquelyn Lakin\",\n  \"value\" : 883671564\n}, {\n  \"name\" : \"Pa Parker\",\n  \"value\" : 796740763\n}, {\n  \"name\" : \"Eleonore Fadel\",\n  \"value\" : 164107521\n}, {\n  \"name\" : \"Michel Bahringer V\",\n  \"value\" : 2006454697\n}, {\n  \"name\" : \"Colin Toy\",\n  \"value\" : 2063948922\n}, {\n  \"name\" : \"Estell Leannon\",\n  \"value\" : 984879935\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef48e519-0648-4dfe-b77c-01b5679e75a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.308571Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int32Var"
            }
          }
        }
      }
    }
  }, {
    "id" : "0f16da69-9c84-410e-9b0f-bea4cacf5c85",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Stanford+Predovic",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1741119684,\n  \"message\" : \"Possimus vitae vitae doloremque at. Est ut perspiciatis. Qui enim velit provident commodi sint dolores. Iure rem occaecati voluptatibus et dolorem eum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f16da69-9c84-410e-9b0f-bea4cacf5c85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.308212Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5b4c0e82-67cb-4e1e-8ec0-36ffbf3edb54",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Kyong+Collier+I",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1345872071,\n  \"message\" : \"Quia enim incidunt. Perspiciatis ut consequatur sequi. Omnis at ipsum facilis labore aperiam odio voluptas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b4c0e82-67cb-4e1e-8ec0-36ffbf3edb54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.308097Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1b0d92a4-710f-44e8-a041-65f27f32822e",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Dierdre+Gerlach",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1357920461,\n  \"message\" : \"Ut est aliquam. Dicta recusandae quia et. Dolore ipsam quisquam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b0d92a4-710f-44e8-a041-65f27f32822e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.30798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ef40a501-25b2-4cb8-b1c4-a6af7337ad73",
    "name" : "Sets the value of a float variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Tayna+Leffler+MD",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ef40a501-25b2-4cb8-b1c4-a6af7337ad73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatVar"
        }
      }
    }
  }, {
    "id" : "7094645b-88a0-4d43-9c81-c4b5e9e94ec5",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Gonzalo+Schulist",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 982367647,\n  \"message\" : \"Dolor perferendis aut exercitationem nam quae voluptatum. Sit et praesentium. Est quisquam aut sed non.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7094645b-88a0-4d43-9c81-c4b5e9e94ec5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307804Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "013cf637-40a6-4951-a213-4ff3b787b48f",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Fred+Brakus",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1696990100,\n  \"message\" : \"Ut consequatur et debitis exercitationem qui ut nesciunt. Distinctio sapiente libero voluptas doloremque iste aut incidunt. Ut eum enim qui ut aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "013cf637-40a6-4951-a213-4ff3b787b48f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "28635c6d-65ec-4c8b-a2df-8d3815ad6fb1",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Bryce+Schuster",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 597546827,\n  \"message\" : \"Repellat maiores dolore. Autem saepe soluta impedit ipsam sint praesentium. Aspernatur quo eos. Maxime quam quos error.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28635c6d-65ec-4c8b-a2df-8d3815ad6fb1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9636a002-91b9-4824-b788-d407804f02af",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Germaine+Considine",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1.7368850609369186E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9636a002-91b9-4824-b788-d407804f02af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "f56bdfe2-a986-43b0-9cad-7697c92b934f",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 154719895,\n  \"message\" : \"Laborum rerum ea enim qui voluptas ad. Cum sunt cupiditate quod iste dolores. Voluptas quas ab sint. Repellat perferendis aliquid quasi. Numquam expedita deserunt tempora.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f56bdfe2-a986-43b0-9cad-7697c92b934f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "f1ae18c8-00f4-4cf6-b19b-b2f16fac8442",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1860744129,\n  \"message\" : \"Odit iste qui laboriosam unde non vel facilis. Est sit debitis id ipsum. Et voluptatem distinctio et similique. Quia ut ut alias corporis nobis officiis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1ae18c8-00f4-4cf6-b19b-b2f16fac8442",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "f44fad7d-6e56-4584-b449-3c5f7ee43bd4",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Roscoe Pacocha\",\n  \"value\" : 3.333121898994922E38\n}, {\n  \"name\" : \"Mrs. Roderick Okuneva\",\n  \"value\" : 3.3854219020331415E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f44fad7d-6e56-4584-b449-3c5f7ee43bd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    }
  }, {
    "id" : "5a8b9f83-c47b-48f4-a0f6-800677c1271a",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2023-01-13T12%3A11%3A54.307041Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 160103199,\n  \"message\" : \"Qui facilis quis fuga qui amet laborum. Consequatur et quis fugit. Nesciunt officiis vitae voluptas sit rerum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a8b9f83-c47b-48f4-a0f6-800677c1271a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.307078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "979e2ac8-bde2-4d6e-8070-dbd0225c9041",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2023-02-20T10%3A28%3A54.306945Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1738206686,\n  \"message\" : \"Optio sunt id est libero voluptatem illum quaerat. Maiores ea unde natus occaecati. Voluptas error aliquam temporibus beatae velit aut facere. Sed reiciendis autem soluta tempora.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "979e2ac8-bde2-4d6e-8070-dbd0225c9041",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.306979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "496ac2ab-eaef-47e3-95fe-d2fb15b5a461",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2022-12-11T11%3A51%3A54.306839Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1224332832,\n  \"message\" : \"Quas consequatur molestiae qui. Sequi in accusamus deleniti animi dolorem. Labore nemo dolorum sint optio rerum laborum. Alias qui eos distinctio.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "496ac2ab-eaef-47e3-95fe-d2fb15b5a461",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.306878Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a326b619-c711-41a3-ab0b-56d388a61684",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2022-12-15T13%3A54%3A54.306735Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 2.108061548663065E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a326b619-c711-41a3-ab0b-56d388a61684",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.306773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "20bbcded-0ac6-4fe7-a402-732621070774",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1948476081,\n  \"message\" : \"Esse voluptatem nesciunt aliquam aspernatur id eos. Sit excepturi vero asperiores ratione. Suscipit rem asperiores quia. Totam odio ut sit voluptatibus velit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20bbcded-0ac6-4fe7-a402-732621070774",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.306683Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "302bc8ac-087d-4846-9ba8-87c0034ba9bc",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1973824826,\n  \"message\" : \"Cum voluptatem fugiat. Voluptates impedit perferendis vitae. Nostrum occaecati repellendus perspiciatis natus praesentium. Perspiciatis dicta in iste doloribus. Exercitationem ut vitae et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "302bc8ac-087d-4846-9ba8-87c0034ba9bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.306602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "00120109-746d-4370-afaf-748be4ac65d8",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Sid Friesen\",\n  \"value\" : 1.2710599571814169E38\n}, {\n  \"name\" : \"Ossie Nolan\",\n  \"value\" : 9.769124934486678E37\n}, {\n  \"name\" : \"Phillip Ratke\",\n  \"value\" : 2.2755581408329674E38\n}, {\n  \"name\" : \"Merlene Harvey\",\n  \"value\" : 2.3911285706248532E38\n}, {\n  \"name\" : \"Roderick Wolff I\",\n  \"value\" : 2.1700184040792205E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00120109-746d-4370-afaf-748be4ac65d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.306515Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    }
  }, {
    "id" : "eb6048fe-6aec-4ed0-b88e-a167a7fca158",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Ms.+Jude+Powlowski/690673035",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1877565169,\n  \"message\" : \"Pariatur nihil qui et. Natus sit necessitatibus. Cum voluptatum voluptate. Autem quasi voluptatem autem corrupti. Voluptates nisi sint.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb6048fe-6aec-4ed0-b88e-a167a7fca158",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.306214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "956f35a2-b594-4b86-81fe-311f03f1d0ad",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Lacy+Sauer/885337944",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1289355157,\n  \"message\" : \"Et sequi consequuntur magni. Quidem ut labore non recusandae excepturi. Possimus a ut repellat repellendus praesentium iusto ut. Exercitationem adipisci ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "956f35a2-b594-4b86-81fe-311f03f1d0ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.306089Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "12965b9e-10d5-4e87-b7d8-9d2c33a3cd11",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Toni+Hilll/1461447463",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 715258228,\n  \"message\" : \"Quo dolor illo sint veritatis qui. Temporibus occaecati aliquid eos sunt iusto. Error quo ad unde eos. Velit veniam sint illo excepturi ut. Molestiae aliquam ipsum totam natus natus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12965b9e-10d5-4e87-b7d8-9d2c33a3cd11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1c562031-12f5-4d84-9715-69b30457784b",
    "name" : "Write specified table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Marchelle+Wehner/1353534311",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1c562031-12f5-4d84-9715-69b30457784b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305845Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTableElement"
        }
      }
    }
  }, {
    "id" : "806d7564-d2db-4f68-9f4a-3f0140c19168",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Marty+Considine/932023914",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 416742137,\n  \"message\" : \"Placeat consequatur accusamus. Aut unde sapiente ut et qui ipsam. Saepe non in quia et nesciunt est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "806d7564-d2db-4f68-9f4a-3f0140c19168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305772Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "20219f9a-1644-499b-a301-9d17e7391221",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Elenora+Goldner/96017665",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 462753912,\n  \"message\" : \"Dolorem vitae dolores reprehenderit cumque quos officiis. Et sunt in cumque fuga. Hic sed rerum. Et quis consequuntur sint. Illum iure minus harum sapiente minus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20219f9a-1644-499b-a301-9d17e7391221",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b379b182-9840-4662-92d2-a8c5de175bb6",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Britteny+Cummerata/1631540376",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1242824445,\n  \"message\" : \"Consequatur itaque nemo et neque totam. Repudiandae dolorum qui autem sint. Facilis qui quos earum ab non. Vero maxime amet dolor soluta optio voluptatibus. Ratione nesciunt tenetur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b379b182-9840-4662-92d2-a8c5de175bb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305543Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4108779b-49c3-45fb-bf3f-f007b779077e",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Edward+Kshlerin+III/380148582",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"xwvr9l473wx5fhnnyjyb4elq4uochqexho9noywiyaxu4bmspz3365liuk17w3bnx5m91lqi6q5blw2hai09c5odqjbv4a79tgs7da7krt3oap0fa55oy5iogrbq25opo81gn6uy9alpq5kuz87fx1uqqgwad6sn8zpjrk14bfeulg51yn9s0e5xbp1hxhrgznuy6c4932ab86o5r66aw7m1inkqz83f3lps8nhm8clwms51ugcdg46zxu1oihmpmhblz7iu9pnab5rd7q31odx7yu2tnrk6aez5dan6r1070xnb9cplh3n8nugo9e35dx0w6cetnj98w81xie7nmlj2mbkxhbxakj4pdvpoj81d4b8r5j6q8r6e82tv9lq23176q5siksjbfxdq51hm6yjs1szwgk7t2m3mu9tsyz5k6r09bmcr9sbrtoqzv9oesg6dgomd9gz2kzspcbb9okqg0kqwtn96f1un1kbytxb35jataziwfrv6eq0jbm9w2b10kj5ndgu0i25aawpwrvj2e8uwvehtkrud5d8rr2teylqgc8ddnja3i2qzs8s0bclodks6duzj1rta4w50vnwqkufsrjomdvm6ji0t5aghs4ulh4trwj0ue6djnn6uvxq30m5wtwo23cc05b5b1gisyjgsp8tttrwr3lqqahfoso4bj6lkrdwrtts7cb7vrgbqo5t4dxm6mjtvihhuxqso7oagon9ah3xdo849cnrny50ogc2m88ej4jcna4idbfhubizmw4812y5pbz62z68j0rsp9jj6xdoeb9r69twnxnsvwt37i4wojw10yrw1vlouir0ey7n1ovoprkseq3ev1i7t0gh48uyckbdhxhtm6q2csmhxetg8l9jc7adwuiba85gkty648ll43nnyrskadwjqomhff7yeuuq2t5jmlvmzo94nk8ue3kt56bk9w2bmfp6k6v3o1otsnyye1343xdv3mtn9q7i42m6u5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4108779b-49c3-45fb-bf3f-f007b779077e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "maxLength" : 1024,
                "type" : "string",
                "description" : "The value of a string; string width (max length) for each string variable is defined in the strategy"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "8201e0cd-1d8a-450d-adf0-0b2f83f0981b",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Sylvia+Flatley",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1817792687,\n  \"message\" : \"Qui blanditiis laudantium in sequi nihil. Ratione tempore dignissimos libero. Vel commodi blanditiis numquam molestiae aut iure. Fuga excepturi praesentium.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8201e0cd-1d8a-450d-adf0-0b2f83f0981b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305295Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "93c36462-f0dc-4445-9b64-a72aed0a7312",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Jarrett+Crist",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2025520725,\n  \"message\" : \"Inventore ipsum aut praesentium quas quia assumenda repudiandae. Ea rerum error. Nihil fuga voluptas numquam repudiandae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93c36462-f0dc-4445-9b64-a72aed0a7312",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305183Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "8ecd5abd-c0ba-4356-91f6-4d1ab904f4fa",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Santiago+Hills",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1061021401,\n  \"message\" : \"Dicta ex quia fuga aperiam excepturi. Earum in laudantium. Reiciendis debitis repellendus aspernatur aliquam ullam similique sed.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ecd5abd-c0ba-4356-91f6-4d1ab904f4fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.305071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "87e1cf35-a585-44ab-856d-602a551cc8e9",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Mrs.+Marquis+Jacobi",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"errorCode\" : 1678027783,\n  \"message\" : \"Corrupti incidunt autem doloribus ipsa. Fuga eveniet recusandae assumenda sed. Fugiat rerum laborum vel unde.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87e1cf35-a585-44ab-856d-602a551cc8e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.304957Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -23 ** The string you passed is longer than the width of PAC Control string variable or table element you are writing to.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "32bd9705-9f5a-4544-969b-2c903ae0fd92",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Mrs.+Merlin+Connelly",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1010970662,\n  \"message\" : \"Vitae autem qui in alias illum voluptatibus laborum. Unde consequatur voluptatem. Culpa at veniam laboriosam accusantium enim fuga iure.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32bd9705-9f5a-4544-969b-2c903ae0fd92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.304822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "33ec505c-a667-4256-984b-ad8209c53798",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Alfredia+King+III",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 74514205,\n  \"message\" : \"Hic minus vitae. Dolor non explicabo cumque suscipit adipisci. Voluptas ducimus libero. Quis officia at repellendus. Odit et laborum a.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33ec505c-a667-4256-984b-ad8209c53798",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.304696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "adc486e4-c330-4381-b1dd-553e16c938f9",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Mrs.+Jenny+West",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1923506972,\n  \"message\" : \"Sint magni cumque non beatae est vitae. Ut libero dolores est molestias quaerat voluptatem. Earum eligendi sed eligendi rerum minima et. Voluptas eius itaque delectus delectus eveniet autem ex. Dolor \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "adc486e4-c330-4381-b1dd-553e16c938f9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.304574Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "3835a150-f2d3-4b78-9577-9cde8cd67efa",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Keturah+Stanton",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"3lq7kf3g131l0f4khxis23vtiyhxy80e412hzp6itln6o3da6nfx04sq2d3n6mzmcrxu9v6ujtky043f4ypaycv5os8yy4xhd339s64ykpli2sapusck43jfqxzbced8gh0iay7zgwe5ogcu77saf5ds5z8e33kr0dgueit9ne84ivwoo2ph6lkcg671kkx9jgbs9720lvxee7csxl3r5z4j9v8ei8xsr55l6lzolj3nq1kbld2jc9vd2czdhkzzlzqslbr0gvsoutlfyo26w161k3wd5wk5xkyhyaze61iw8yjpibv78cchimryfkf8esttqdbkinbzudlxuftbc5ibev05mb1ei5bznxucyghmnx3qa3gkw1jhmlzlei1svktkvu1gccm57j2qh7h19cx1fcw7bk86uipb6g3l1gc2b7awxjqze9skxtvmq75omqcovuggp6tzml2n8g014hxqg64qq0hy1gy8ul2v70vwk8npysjkl03bzhforukwpwsufkurpklwhd0chh0r35bjk1072f1ivyw3ahjnh8iz2futcm1uh1p2pyksykgsr2naoxqp87w2y3sga77u40o02012zo2h5hu0kf6g5ma4hpjp883ia5g85rsxu0bz0ybsflpze7oiw4ygldrz1dzso0x2houctwgyncjghzqja1mhjuh81siqk9l4qroxwl7jan997fo3rorog8rxkhr0xk6k5q4rtdmycra0out7f5g8di3z89isfwe945mcjabnjsbz38re3nlzyw79w3qjpxfz5bc5st4zlyszyphhia3vn2hg1lsxpv73jab6qrslt4c0b1rzooqic8sjatf2xa84236qlnyy3a7avxtdenx2keru7rwyq7o77dfb39sloi6d13fx3r80cp4m4475v5lnxiiw2h17j2t13tuqnawk8se6xwqqlcpsku0k47cz42jlb2cd2a1ebm5jb3snh0f312sd34393kdba2ewp3iyv1\", \"i2ysg666c5oth2qcq0buuwf53q8m1qrvjb9m1wyltr73nscqv6xo65yj1sunj5puvgrq5l5rhmq3dd78pm8uiirihtgb7euwwxgyz0lkhn6hrnz74exm81aj26fnolq0cf90tv45cmbhlp8em03a6prh0jiwfj632uiu9doye246r3jhp5ns5qyp4gfkg7kkrqilgzzxc8q2olux4skxlpby4sao38hr9m6eefvl1zgg9fy1ryjpywaomg4wnsdpu3xv6jrbpwzjimn1jvc4z5s0m7wk9mhl5o0tqdi9wnukmsuqzqqi9fzh663ztv70nmejwjyfnnezjrlcfk5rg6g8c11371kh7tcz98yf1aa9jimy7x2rgivczndvf5xc1phospqs397g7d30wk9p5zddsi4ic4oih5qdjwhr7zwlbd5itu1bmacc1n9p79nvsamwsbtq7267iglxibyv4t54sxslkw8tlbu744ddeno860xtcimnjq569avk7hl2k1y4n5xyphfzt7z1asm9rsipm6zr4pkqiw5hott82hbjkjmt4w9uvr29pbyyu63k5fffpc983vr2uf9l2kg6tfnzxv4hau1w87ly0apwbijytku2ltql7ln2vbhc4jt3kkj6y8l03b0wrczkcewr5bwzlub3vnd8j98j6d5fmmidlkiebl90lzw9p95xhmw77gcw6ot1cigbz1i0zjj7x8lx3gt4oa5hbq1f8rpr5grzpmvefs2ejixtt2vyd4ee4a0nxh1wacqdivwa7f78olf8x8o5ot6g0yzvlzukm56w34b1fpqkj1ef6pkb80dqequk8ry4942y85zhg1avvz80c3elf4ntmggv9bar4ozm97wth835fxofcwmzbfgbt6uq55aeuvk3hdaiay2fstmrhwx5th0waoc68njwzre3du5jo2frqqucvk7bwgqutjk76krqvw84u0l86a9uswvvrcrdm24nmfd1y0z2zrnf562\", \"lk1631o1gjtsketcgqf1zkxj0c4tpjc0vn4mcp09wqwm14evlhp29awbayi6g94h8culguvxv1bvrzz01xcbfbdua2r01i7fij32qkvzgni4f0p3utzh6r0jm71kq8k46sadvexmw4xsvjzseh0jdlkknd2m9xc68clraxvtjslfeb6bzhulp2df4t5ophnbbyrn7199wk8uo91galtww58ir92wm5ow96omq9jn5qzhp1l7eutjgz9zabcah5fd8c0nkiv5w0umma1zyeuvl8376t1dtd2itwb\", \"jprm7ha22vhnf3elf4726h4247spt1y5etti8rr9qgf9qdatxazm4qkpcd06juoot6n1wdew7w2i25z75ghn0ym9bsog7tu5uhy5t3h7szfaflfd1tecqo41b7bjx4hef6q39ey350lppj8d3emll0hyufeyjd7a7gubo9803whyb2g377796asanwsz7ihmvc3xcs7o8iife2mavfge5zjk7d5piavl1ykpfz61j81aij16df7ayxplwrfvomdz7xabemz3l3mhr9z48bw29ay4lanqss3xoy475p194qsq9tnj0mwyttqm3ls3si6ux1b48wwfvz7enhormx37zm1i3h40iu4ftx2orwo923pqu30p94sj3xr86yvuj6qf47yht0pltpzoyymkt2cu97j1s72lrh9byvidnsvstyftyqqxjw6acebwbhk1dnvmsgrulcu0hap4wnwz2xqyxg7u1oi2ippw9f8p2gakidkb2u\", \"1coczf9n03tpfur8usoutcrsamu65ps24esfev9aifrnffra22rekuhkeampf5vpu04j6dazrkvwxebvrm69qwhnhu7oblhy8zuinj12crpc2s44t970cgys6xzxexqo845zyvds90daekychrcrt15lw00rihar70c671sxufjwb2005wkjtgea4fhin2001uebs77o77s9kqvot33i9fowf66mcbofdwgajzmqblq9apnr7ua6d84qjxvz55ojl8v7cc4uop3xjirhynvpn6x9h3hp7m2xwooxiuudsn6vfqcrmj8oa6wx1te5h0fgxc2il2bednnoobxp25cozy1h3rkpseytmyk2m3x6x8rolzgijf30kx01idueulgv9wwfcllwtj0rj5qmyrhn03w3g78kektrcbiqccmld8gpspyydeynk5ickk2rxfwd930v9pyce3930s66xou23mleld8g66u4xw3iz7amln97qdv5682a2au15ibh6uvwchojjj5jpt7aikgcc3leo1dwmeqzzaqeujy6wfk2hdotly7q7qntx0qghn43gu86v6tgeh73h3e6u25\", \"apc5sb1zt10y77b30m9w2vr7vagm0zfrcwk89jus7gc08ahkxmbqjgllym9rvty94f55znvbomnxfjiwebx3nbuz6s4qvp1hno59a2h14liuwjppz9gdtv6u08s22zsbg8kupkoibscevk99cx306ly16n57xcrynfwitno5uetl36wdqljyul4iubs17b60g2oh9wxz41ebloo8nem58epzrpc5p11vb3dxaef95g7hwjy8hobwdwwp95yxvmj38jxogay0tu3axumvj88w987skzd4t5iy8zwt7r2rc1ueg2wm1kl07a1vc8h7u7k2yhtsqza9yswe0n0d0emw819kluzsebjtmrwmmmkhcn69enerikswcu558uemj9p9w3qe2duwhu0rahy59ovt28rnc5n9nvf6s36orjuekh1cof3g7cahbgw55l1qjy1ymxchxxaazg5hvhnpmq5zfpo5rs8nawjrjn1sbbbq2bddvgwrtw48p8fpaclfx5l217ttuo1gnmc4aks198wuykhaqrbbchzvq3asq4c5flqby8x68550pumgcrjl2m1udemymos4vckln9grge26kt26fmwwozeaif1d7skvm7hmb6d0bl\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3835a150-f2d3-4b78-9577-9cde8cd67efa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.304445Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "type" : "array",
            "items" : {
              "maxLength" : 1024,
              "type" : "string",
              "description" : "The value of a string; string width (max length) for each string table is defined in the strategy"
            }
          }
        }
      }
    }
  }, {
    "id" : "faa4b6cf-bb81-4746-b26e-6b82b757ed81",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1773224463,\n  \"message\" : \"Laborum illo quas quo. Reiciendis et neque illum voluptatem. Soluta aliquid facere aut laudantium aliquam. Asperiores alias alias unde velit. Doloribus omnis eveniet.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "faa4b6cf-bb81-4746-b26e-6b82b757ed81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.304275Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d2f90d41-dab5-4efe-80f9-2e98618e6241",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1866209645,\n  \"message\" : \"Suscipit nobis omnis nam. Earum eveniet fugiat fugit numquam. Nostrum nulla quasi magnam ut expedita.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2f90d41-dab5-4efe-80f9-2e98618e6241",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.304195Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "19478818-f15a-4a78-a7f5-2ddcdea7d8bd",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 1032457040,\n  \"name\" : \"Diego Ebert\"\n}, {\n  \"length\" : 1034291058,\n  \"name\" : \"Mao Collier\"\n}, {\n  \"length\" : 837519109,\n  \"name\" : \"Tonya Wyman\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19478818-f15a-4a78-a7f5-2ddcdea7d8bd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.304117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    }
  }, {
    "id" : "a98e817e-8f43-4761-bbac-40ef82d46094",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Clay+Fritsch/1813754132/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 363230930,\n  \"message\" : \"Eum reprehenderit enim. Voluptatibus ut repellat fugiat. Atque debitis earum molestiae aliquid natus. Molestias sint qui qui qui non ad ex. Inventore rem nesciunt.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a98e817e-8f43-4761-bbac-40ef82d46094",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.303921Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b9ebd326-b217-468c-a053-44cf498f775a",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Latrice+McGlynn/1744715595/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2117222995,\n  \"message\" : \"Minima est officia qui exercitationem molestiae. Consequuntur magni earum molestiae. Quia id nam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9ebd326-b217-468c-a053-44cf498f775a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.303787Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ad56e243-583b-4b2d-b8c3-40c10db61005",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Mr.+Gary+Bogisich/447899287/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1025645680,\n  \"message\" : \"Perferendis libero et. Ad labore quae deserunt cum sint. Error excepturi qui. Eveniet qui consequatur. Consectetur aut sapiente.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad56e243-583b-4b2d-b8c3-40c10db61005",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.303668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "159810c4-a5bc-4be4-8ec0-dc6a750096ea",
    "name" : "Write specified integer64 table element as string - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Basil+Yundt/1898442512/_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "159810c4-a5bc-4be4-8ec0-dc6a750096ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.303432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElementAsString"
        }
      }
    }
  }, {
    "id" : "44ac8989-e33b-4ac4-b2e7-d0cc9eee260f",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Rodrick+Maggio+MD/1766849037/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1177339079,\n  \"message\" : \"Consequatur earum laudantium. Consequatur id ea et et quis incidunt. Ex dolores cum omnis facere quaerat doloremque rerum. Consequatur ullam ut quas itaque. Omnis distinctio accusamus ipsam quia.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44ac8989-e33b-4ac4-b2e7-d0cc9eee260f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.303359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ed8189c6-af6c-41b3-8176-00f90696d0cf",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Petra+Jerde/202694221/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1399077514,\n  \"message\" : \"Voluptatibus labore eveniet autem ipsa amet vero assumenda. Quasi corporis doloremque temporibus est est voluptate. Placeat qui possimus aut rerum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed8189c6-af6c-41b3-8176-00f90696d0cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.303236Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "86fe4e11-ae05-4576-9a7b-432c61da98a9",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Don+Kozey/1080764163/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1287098614,\n  \"message\" : \"Ab aliquid qui assumenda ut error. Nostrum nihil nihil. Accusamus tempore harum asperiores aut. Voluptatem natus adipisci eius. Et neque perferendis culpa quidem ab iure.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "86fe4e11-ae05-4576-9a7b-432c61da98a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.303123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "305193c1-9428-48e8-b5d5-43b5caaa9690",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Miss+Wilton+Nikolaus/1456174754/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"x4taurzcdkuhakb8alsku3bls\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "305193c1-9428-48e8-b5d5-43b5caaa9690",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.303008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string",
                "description" : "Value of the integer64 variable expressed as decimal string, e.g. \"34359738367\""
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a64eb819-655d-43c6-9014-99ebcc23af4b",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Duncan+Leuschke+V/514885949",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1715507074,\n  \"message\" : \"Ad ipsa laudantium eum aliquid voluptatibus. Fugit laudantium porro aliquam esse sed mollitia vero. Placeat consequatur eaque quibusdam quidem ullam et dignissimos. Dolorum vel facilis enim sed nihil \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a64eb819-655d-43c6-9014-99ebcc23af4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.302889Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "42d0a0d5-9df1-460c-939e-123fa4de08a1",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Marita+Pouros+III/1701762187",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2045796633,\n  \"message\" : \"Porro qui modi et rem enim officia. Et voluptatibus fuga sint tenetur expedita voluptatem molestias. Dolor architecto laborum ut ut harum natus atque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42d0a0d5-9df1-460c-939e-123fa4de08a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.302755Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4e48ac25-0fbd-45f1-9972-1747c120cb89",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Miss+Doug+Kessler/1153053460",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1529559754,\n  \"message\" : \"Ipsum nihil maxime tempora excepturi facere. Omnis qui exercitationem in. Voluptatem dolorum repellat exercitationem voluptas ipsa.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e48ac25-0fbd-45f1-9972-1747c120cb89",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.302632Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "0e042080-2879-4fc8-be73-ddee88b90e69",
    "name" : "Write specified integer64 table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Oswaldo+Mann/257279283",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0e042080-2879-4fc8-be73-ddee88b90e69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.302519Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableElement"
        }
      }
    }
  }, {
    "id" : "31765390-6c48-44d7-a09e-1937d8422bb5",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Regina+Reynolds/1748592369",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 410706125,\n  \"message\" : \"Esse dolorum qui quidem dignissimos cumque. Porro corrupti at dolores voluptate fugiat cum et. Odit voluptate saepe culpa est ducimus vel dolor. Officiis laborum at eligendi ea vero natus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31765390-6c48-44d7-a09e-1937d8422bb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.302449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "62bd9bea-9c64-44bb-804d-72185759dd15",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Hattie+Turcotte/1058352338",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 928324469,\n  \"message\" : \"Vitae minus est voluptate. Quaerat neque a quia ut impedit quibusdam et. Architecto aut quam. Ut odio nam quis. Eos ullam quasi similique ut aut quo facilis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62bd9bea-9c64-44bb-804d-72185759dd15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.30233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4984bc95-e099-4c03-9989-7917694a1aef",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Tran+Rodriguez/398947295",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1884008850,\n  \"message\" : \"Et distinctio ullam. Sunt ut aut. Consectetur maiores libero est. Ut est et eaque ut fuga velit aliquam. Voluptatem voluptatum nihil.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4984bc95-e099-4c03-9989-7917694a1aef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.302209Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e49eb132-6749-4bb0-a2e6-be5cec1295f4",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Blake+Metz/902734000",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1925532615707688936\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e49eb132-6749-4bb0-a2e6-be5cec1295f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.302091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer64 variable",
                "format" : "int64"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e380839f-9ba9-4db9-a180-8f928a9cd006",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Margret+Price/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1285722731,\n  \"message\" : \"Quis corporis in eius quo amet. Eligendi culpa nihil corporis. Iste cupiditate quia laudantium beatae non. Impedit soluta excepturi quam et dolores.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e380839f-9ba9-4db9-a180-8f928a9cd006",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301981Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d1f17ab6-614f-44ed-bd93-0af18502b01e",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Alfonso+Reynolds/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1853145199,\n  \"message\" : \"Veniam molestiae voluptas accusamus dolor odit exercitationem non. Non temporibus est assumenda. Illum qui rerum nobis porro aliquid non. Libero fuga quia dolorem et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1f17ab6-614f-44ed-bd93-0af18502b01e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301858Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2b3cdca5-2028-46d7-81f0-c5a37bb4a76c",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Anne+Daniel+I/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 133704913,\n  \"message\" : \"Ex ea consequatur. Id autem velit totam. Error delectus cumque sequi. Velit delectus dolore laudantium.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b3cdca5-2028-46d7-81f0-c5a37bb4a76c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4ec89e1e-8263-42ef-bce5-33994e652417",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Mrs.+Sherilyn+Dare/_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4ec89e1e-8263-42ef-bce5-33994e652417",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64TableAsString"
        }
      }
    }
  }, {
    "id" : "f5b307c3-f31d-4641-894d-48b02466e77a",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Rosana+Schmitt/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1660871311,\n  \"message\" : \"Dolor amet aut. Aut asperiores aut qui est praesentium. Sequi quia nemo voluptas velit totam occaecati. Voluptatum officiis quia aut omnis dolor.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5b307c3-f31d-4641-894d-48b02466e77a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d3c243d8-d11c-4c71-86ed-e50063342858",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Quintin+Feeney+III/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1744104193,\n  \"message\" : \"Rem aliquam est totam exercitationem quos sed. Enim et similique quos tempore quos est aliquam. Eveniet quod vel et nobis laborum sed. Cumque maiores quae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3c243d8-d11c-4c71-86ed-e50063342858",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "799ad25f-7c76-4849-a923-e06d1b9761c3",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Alphonse+Considine/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1880372630,\n  \"message\" : \"Fugit eius excepturi culpa odit possimus autem. Quia et itaque incidunt. Voluptas error et quos quia. Aliquid ut et sint nam quia maiores voluptas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "799ad25f-7c76-4849-a923-e06d1b9761c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301324Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d5ca852c-07bf-463e-a2af-9acc362fdf55",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Jefferson+Hettinger+PhD/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"maimuul1uoutue9ma1153b7kp9xwcdzyymar0kn9qsmc6kva13r8xswdjpo80h0dsbcpue0dzhx23qtfqs2eyzyc02sccv7silcdqj3hqdfqsafo2dowmosx6upt1w4yxxu28oxofv0geqobxw\", \"t8xdzpjlwaxfwzow4cjtsmjg21wc7mn5lu1nmkrw3n4hbe65ohc2q3q9w26xfc585z4mvz1hkxfmm41s28qxsqzv1762iq8l6x93vsfoag5ddz7zblolr1g8hmc87oufvv2639z4lxrilwzxux7bk2fxdlzf5956xhoypnwva3xmsj9mnfnupyur8jclqyw\", \"udooq94futp1gr3erlxnnd1stgoqls5wpvwfnszruqx6m30c61pt3f524\", \"yxo1voqmdwgg11nsgeec68d7tp7t572hks1ncsugcz9hxx24h47b2kuv9fzk6wpy9mncbpxr7ttrio9piuz3wlxkvmm2ymqboe6lq6s9le6da317w9996mwka26aqz0jtkplqd1numkw4u8xakvdi8dyfssci\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5ca852c-07bf-463e-a2af-9acc362fdf55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Value of the integer64 variable expressed as a decimal string. E.g. \"34359738367\""
            }
          }
        }
      }
    }
  }, {
    "id" : "ab2750f3-ad57-4269-9140-38803ac39185",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Kristi+Metz",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 957500459,\n  \"message\" : \"Ullam et porro qui voluptas molestias beatae ut. Illum ea dolorum omnis quaerat. Qui perspiciatis consequatur et at nihil. Autem animi sit. Id illum saepe quia iste.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab2750f3-ad57-4269-9140-38803ac39185",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.301071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "8eea3259-b8e1-4d4e-b329-238127b2128d",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Mr.+Latisha+Anderson",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 3064407,\n  \"message\" : \"Dolorem cupiditate quisquam totam. Consequatur animi consequuntur. Libero illum sed.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8eea3259-b8e1-4d4e-b329-238127b2128d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b43621e0-6a71-4238-bc45-1c4648f0b4b4",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Karolyn+Walter",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1084072388,\n  \"message\" : \"Ut ut inventore illum cum quia. Consequatur aut ipsam at dolore est quae ut. Quaerat iste architecto velit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b43621e0-6a71-4238-bc45-1c4648f0b4b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c26a2452-b54f-414f-a3fe-61c820d73240",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Johnathon+Will",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "c26a2452-b54f-414f-a3fe-61c820d73240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt64Table"
        }
      }
    }
  }, {
    "id" : "dc53f4e7-26d6-4b76-b51e-75640a329f40",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Claudette+Bergstrom",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 498522197,\n  \"message\" : \"Qui fuga cumque similique non. Et optio beatae veniam dolor dignissimos dignissimos. Deleniti deleniti dolore similique consequatur possimus. Sed possimus aut ex sed vitae sequi autem. Totam voluptate\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc53f4e7-26d6-4b76-b51e-75640a329f40",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e7db9642-0f14-410c-bff7-824c1c1e1e17",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Leo+Koss",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 40923848,\n  \"message\" : \"Est voluptatibus sed optio possimus voluptates quaerat. Excepturi veniam amet nostrum vitae. Officiis dolores debitis ipsum perspiciatis qui laborum id. Odit et quia autem voluptatem. Illo et quia dig\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7db9642-0f14-410c-bff7-824c1c1e1e17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "74b65432-e07f-4c4c-9130-6c4f29e03a4d",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Torie+Smitham",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 98317948,\n  \"message\" : \"Explicabo occaecati natus sit cupiditate asperiores magnam. Eum et quae. Fuga ut nulla cum perferendis. Quis sit voluptates et. Reiciendis et numquam aut eaque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74b65432-e07f-4c4c-9130-6c4f29e03a4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300419Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "dc6bd443-7b84-4877-9865-c1fba8c55962",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Cole+Mertz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 6622680932461488783, 3214071683463442957, 2935010426681399565, 5439491106733298879, 8443827379115899221, 3309659586615107321, 3004536029362446849 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc6bd443-7b84-4877-9865-c1fba8c55962",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300303Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "description" : "Value of the integer64 variable",
              "format" : "int64"
            }
          }
        }
      }
    }
  }, {
    "id" : "6a1d6735-9d50-46a1-84a1-dec71ede6e61",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1066361025,\n  \"message\" : \"Maxime facere ratione harum nemo animi voluptatem dolore. Praesentium molestiae sapiente nihil adipisci recusandae asperiores quas. Non quod doloribus minus omnis omnis ad. Nihil ut odit cumque et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a1d6735-9d50-46a1-84a1-dec71ede6e61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300191Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "882d60f9-707e-42e5-b0a6-160ba79106ee",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1222496671,\n  \"message\" : \"Fuga quia et vitae autem dolorum. Vero quasi rerum aut velit dolor quibusdam. Impedit dolor eius libero numquam et molestiae alias. Voluptatem aut et necessitatibus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "882d60f9-707e-42e5-b0a6-160ba79106ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.30011Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "0215987a-036d-49de-95ef-6e198c94702c",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 1998632520,\n  \"name\" : \"Eldora Predovic\"\n}, {\n  \"length\" : 91301518,\n  \"name\" : \"Alma Witting\"\n}, {\n  \"length\" : 1283982147,\n  \"name\" : \"Miss Chance Klocko\"\n}, {\n  \"length\" : 1072366344,\n  \"name\" : \"Mr. Rhett Jacobi\"\n}, {\n  \"length\" : 1931277780,\n  \"name\" : \"Nick Wolff\"\n}, {\n  \"length\" : 495937850,\n  \"name\" : \"Miss Russel Hirthe\"\n}, {\n  \"length\" : 1583598336,\n  \"name\" : \"Latashia Lang\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0215987a-036d-49de-95ef-6e198c94702c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.300027Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    }
  }, {
    "id" : "8750b56c-6d66-49f7-ba68-d11418aa6678",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Gordon+Kris/602746883",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1130615761,\n  \"message\" : \"Repellat placeat ipsa aut ipsam. Tempore aperiam odio eius consequuntur accusantium voluptatem. Minima qui quia quis eos quo quia. Corporis possimus non dolore occaecati iure aut. Consequuntur sunt at\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8750b56c-6d66-49f7-ba68-d11418aa6678",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.299663Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "63d1c45a-50b6-4ad5-bc18-3ee652569f92",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Glenn+Hermiston+DVM/342474157",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 572976159,\n  \"message\" : \"Qui architecto dolor et deserunt sunt. Non excepturi expedita aut itaque eligendi. Dicta omnis quasi nostrum aut eligendi sapiente quo. Mollitia ipsum accusantium.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63d1c45a-50b6-4ad5-bc18-3ee652569f92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.29954Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b4124738-6a40-4b9a-a795-30a90ba0934e",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Romaine+Reynolds/631559846",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1917459439,\n  \"message\" : \"Autem vel repellat iste. Deserunt voluptatum saepe autem possimus voluptas. Qui aut enim adipisci ut eos quod sit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4124738-6a40-4b9a-a795-30a90ba0934e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.299417Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b349d503-f0b5-4af2-8fbd-9325fdf145f3",
    "name" : "Write specified integer32 table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Merrill+Hane/1757291572",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b349d503-f0b5-4af2-8fbd-9325fdf145f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.299304Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32TableElement"
        }
      }
    }
  }, {
    "id" : "a122d790-90ae-4566-b292-8a7afd7fc828",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Kirby+Bernhard/254455129",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 2091490327,\n  \"message\" : \"Officia qui est quo et. Molestias ipsa ad. Illo cumque qui est quae quia nihil perspiciatis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a122d790-90ae-4566-b292-8a7afd7fc828",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.299235Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ec40893c-906a-45f3-bfed-c11e7ed28e24",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Reanna+Grady/677295866",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 652119192,\n  \"message\" : \"Eveniet non adipisci est sed deserunt quae. Facere laborum architecto porro. Odio ex voluptatibus qui repudiandae voluptatem illum. Et commodi repellendus pariatur quaerat voluptas ducimus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec40893c-906a-45f3-bfed-c11e7ed28e24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.299121Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c63eeacd-afb7-40cb-b468-0063ffb674d1",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Cyndy+Wilkinson/58659130",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 896819051,\n  \"message\" : \"Aut voluptas et asperiores repellendus fuga et optio. Voluptates reprehenderit et est. Ut quo repudiandae cum reiciendis repellendus magni totam. Aliquid tenetur quis tempore. Tempora pariatur soluta \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c63eeacd-afb7-40cb-b468-0063ffb674d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.299002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "176ea40e-b29b-4f52-9cd5-30d0b29f4026",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Laurel+Halvorson/233025156",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 335039183\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "176ea40e-b29b-4f52-9cd5-30d0b29f4026",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.298879Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer32 variable",
                "format" : "int32"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "661dd45c-efed-4a6a-9a48-dfacfec34772",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Brande+Gutkowski",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1545686482,\n  \"message\" : \"Esse deleniti exercitationem praesentium. Quia qui ut ut atque voluptatem aperiam. Est dignissimos ratione.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "661dd45c-efed-4a6a-9a48-dfacfec34772",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.298768Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "30d6a317-1353-48e7-8084-ba3469837b9c",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Hyon+Lubowitz",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1888982931,\n  \"message\" : \"Eligendi id at sed et temporibus ipsam repellendus. Dolorem qui perferendis commodi. Temporibus sed voluptas recusandae perspiciatis iure aut. Voluptatum ratione et unde id cupiditate magnam ratione.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30d6a317-1353-48e7-8084-ba3469837b9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.298658Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a4e7095d-a72d-4f6e-bd46-a24cd0639519",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Jamee+Mueller",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2017356026,\n  \"message\" : \"Eum a inventore rem rerum aut. Eius et voluptatibus alias et. Et similique enim dolorum aut rerum. Qui dolorem culpa. Sed molestias blanditiis voluptas possimus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4e7095d-a72d-4f6e-bd46-a24cd0639519",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.298535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "39967320-6770-4365-afb5-22f9b6535129",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Claudine+Leannon+DVM",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "39967320-6770-4365-afb5-22f9b6535129",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.298418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeInt32Table"
        }
      }
    }
  }, {
    "id" : "78f01cfa-7d07-4a01-82bd-6d313f489677",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Charley+Wyman",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 568604416,\n  \"message\" : \"Molestiae sit est. Recusandae qui dolor vel et qui iste non. Dolorum qui ab est qui autem nisi ad. Reiciendis eos est odio. Voluptatem expedita officia et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78f01cfa-7d07-4a01-82bd-6d313f489677",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.298348Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "92bfde4d-185f-42e6-a7fc-ad243d08d83a",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Fausto+Doyle",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 586633151,\n  \"message\" : \"Aliquid natus at laboriosam necessitatibus molestiae libero aliquam. Animi commodi praesentium et enim eum veniam. Ipsam earum ipsum dolores aliquam. Sed pariatur nam aut officia qui tenetur incidunt.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92bfde4d-185f-42e6-a7fc-ad243d08d83a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.298218Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "66a1fe52-b1c6-4e2d-88fc-a71114651e50",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Mitch+Erdman",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 970551587,\n  \"message\" : \"Incidunt voluptatum itaque. Maiores molestias culpa est. Est et minus sit ea vero. Quis accusamus eius magnam laboriosam voluptatem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66a1fe52-b1c6-4e2d-88fc-a71114651e50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.298098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1dc17337-d942-4fd6-9513-51561a0de311",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Everette+Watsica",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 1454812193, 1487753198, 901983022, 1760142692, 963225682 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1dc17337-d942-4fd6-9513-51561a0de311",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.297988Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "description" : "Value of the integer32 variable",
              "format" : "int32"
            }
          }
        }
      }
    }
  }, {
    "id" : "c3bb2704-de02-45bd-8182-65261010e74c",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1916540155,\n  \"message\" : \"Vel nihil nihil. Placeat maiores totam numquam. Itaque qui asperiores impedit ab. Et vitae aut voluptas cupiditate consequatur eius ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3bb2704-de02-45bd-8182-65261010e74c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.297881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "0213044a-aad6-4718-97b1-6b0ef68c5db4",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1440163056,\n  \"message\" : \"Alias dignissimos eos quod. In voluptatum sit quia recusandae iste magnam. Quia molestiae fuga consequuntur quo in ducimus. Quia non voluptas voluptatem nemo delectus aliquam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0213044a-aad6-4718-97b1-6b0ef68c5db4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.297803Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "97a8a700-cee3-4dac-8d18-e3a452412575",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 322629154,\n  \"name\" : \"Dillon Murphy PhD\"\n}, {\n  \"length\" : 103184373,\n  \"name\" : \"Leonel Pollich DVM\"\n}, {\n  \"length\" : 2054623814,\n  \"name\" : \"Mr. Sam Homenick\"\n}, {\n  \"length\" : 667055930,\n  \"name\" : \"Erich Klocko\"\n}, {\n  \"length\" : 1580577469,\n  \"name\" : \"Hassie Kris\"\n}, {\n  \"length\" : 93475325,\n  \"name\" : \"Mrs. Ray Goodwin\"\n}, {\n  \"length\" : 1458325450,\n  \"name\" : \"Irwin Hills\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97a8a700-cee3-4dac-8d18-e3a452412575",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.297719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    }
  }, {
    "id" : "d5329d30-50dd-4a7e-8596-6ee4672d345d",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Florencio+Erdman/587991586",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1576600940,\n  \"message\" : \"Odit accusamus dolor eos sapiente dolorem. Minima quidem cupiditate nulla id aperiam quis. Non occaecati distinctio ipsam cupiditate libero et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5329d30-50dd-4a7e-8596-6ee4672d345d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.297353Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "1fba7e58-5889-4032-85b6-56cefd9313d9",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Vicenta+Barrows+I/496378027",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1565292896,\n  \"message\" : \"Voluptatem aliquam voluptas et iusto. Facere modi est similique facere ratione sed omnis. Consequatur totam recusandae odit non sed. Expedita excepturi sed. Laudantium nobis dolore rerum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1fba7e58-5889-4032-85b6-56cefd9313d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.297231Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "cfdb6d0a-6554-4e25-8ccd-df8a48e8ac3c",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Odell+Lemke+III/1685233957",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1474127220,\n  \"message\" : \"Sit id quia aut molestiae. Iure aut assumenda. Molestiae pariatur consequatur quia ea autem illum magni. Rerum non voluptas aut eius. Repellat hic aliquam quisquam exercitationem officiis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfdb6d0a-6554-4e25-8ccd-df8a48e8ac3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.29711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "66997d1a-15bc-4f1d-8939-a5705b7648c5",
    "name" : "Write specified table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Mary+Lockman/1401115468",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "66997d1a-15bc-4f1d-8939-a5705b7648c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTableElement"
        }
      }
    }
  }, {
    "id" : "6832c488-d0dd-4b46-8920-dbe88e9fb8b6",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Carmine+Bernhard/1393439137",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1214303290,\n  \"message\" : \"Voluptatum dolorum vero quia suscipit odit pariatur. Aut illum accusantium unde. Nobis enim nostrum debitis et aut dolor nihil.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6832c488-d0dd-4b46-8920-dbe88e9fb8b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296915Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "13adc563-21f8-4efc-8771-24d8a3012c92",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Miss+Audrie+Lang/1693650434",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 381864985,\n  \"message\" : \"Dolores aut quas velit optio earum omnis voluptas. Nulla numquam culpa voluptas deleniti qui tempore. Unde enim neque velit dicta. Rerum non vero asperiores.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13adc563-21f8-4efc-8771-24d8a3012c92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b9d2ada3-9200-4817-9308-03cec53c2370",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Fernanda+Murphy+MD/1896422175",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1218372826,\n  \"message\" : \"Nemo eos deleniti at totam iste quia. Id ut eos suscipit et nulla sed. Laboriosam id illo non consectetur enim eos.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9d2ada3-9200-4817-9308-03cec53c2370",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ad93d807-19fc-450e-8ba5-15e1f67b02c1",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Jorge+Moore/664825072",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 2.3892036010465662E36\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad93d807-19fc-450e-8ba5-15e1f67b02c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c29367fa-d6b8-429d-994a-0f14b0cf4c39",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Leonel+Abbott",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1945863285,\n  \"message\" : \"Omnis ratione atque quibusdam. Laboriosam velit vitae saepe ducimus consequatur quo et. At corporis recusandae suscipit ducimus sapiente adipisci. Quis molestiae mollitia iure praesentium.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c29367fa-d6b8-429d-994a-0f14b0cf4c39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "6ac26bb2-1cdb-4239-b6c7-ca514b3814b8",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/January+Bartell",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2106261132,\n  \"message\" : \"Alias magni quaerat voluptas repellat eligendi a iste. Cupiditate et consectetur sunt ab voluptate possimus in. Ut modi non. Dolorum cum expedita deserunt autem et illo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ac26bb2-1cdb-4239-b6c7-ca514b3814b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296318Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "02aea5f1-1cae-42c3-b6b9-3ae4fe706bf6",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Mika+Mraz",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1510212979,\n  \"message\" : \"Qui facilis expedita. Corrupti hic est eum ex. Et voluptas explicabo corporis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "02aea5f1-1cae-42c3-b6b9-3ae4fe706bf6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ba7bdc2c-7eb1-46a6-bda0-5b7f7336b897",
    "name" : "Write table elements - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Sylvester+Cronin",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ba7bdc2c-7eb1-46a6-bda0-5b7f7336b897",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeFloatTable"
        }
      }
    }
  }, {
    "id" : "9e610dc8-301b-4c9d-9626-94ff7dfbf3e6",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Reuben+Kreiger",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 2055345833,\n  \"message\" : \"Officiis laboriosam sunt magni omnis. Hic voluptas perferendis reprehenderit et id culpa. Reiciendis vel nesciunt fugiat incidunt veritatis doloremque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e610dc8-301b-4c9d-9626-94ff7dfbf3e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.296012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d4d3922b-66c1-495f-9461-2052fe8f7b36",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Leoma+Homenick",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 61973124,\n  \"message\" : \"Sequi ut voluptates dolorem consequatur. Eligendi ut quas repellat iusto. Molestiae optio rerum asperiores nam. Adipisci repellat quod officiis eius vitae optio.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4d3922b-66c1-495f-9461-2052fe8f7b36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.295896Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "04815084-c540-4074-bde4-7988f2b87e25",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Felton+Toy",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1042476264,\n  \"message\" : \"Distinctio voluptatem corporis voluptatem aut. Nobis vero odio qui beatae est dolorum et. Ut enim et tenetur voluptatibus. Vitae natus soluta quia quaerat aperiam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04815084-c540-4074-bde4-7988f2b87e25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.295778Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "807c47e6-c6f5-4079-b684-c2ecca21611c",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Neil+Kulas",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 2.7234923468982547E38, 3.3101514080551363E38 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "807c47e6-c6f5-4079-b684-c2ecca21611c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.295657Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "description" : "Value of the float variable",
              "format" : "float"
            }
          }
        }
      }
    }
  }, {
    "id" : "9722af99-4ed8-414b-acff-b34a544967e2",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1105682159,\n  \"message\" : \"Maxime voluptatem aliquid vel aut. Consequuntur excepturi neque sunt. Quas tempora earum voluptatum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9722af99-4ed8-414b-acff-b34a544967e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.29552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "bab09787-bbdb-4a1f-8833-4b5136232d31",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 334624911,\n  \"message\" : \"Nesciunt sequi nemo ea quasi perferendis quas. Nihil dolores sint voluptas quasi doloremque et harum. Omnis fuga dolorem quae. In repellat odit. Praesentium sit laborum consectetur nulla amet nihil.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bab09787-bbdb-4a1f-8833-4b5136232d31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.295447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "c6091ae4-f6f8-48c3-a259-6a6d0447b976",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 993569502,\n  \"name\" : \"Annabelle McDermott\"\n}, {\n  \"length\" : 1494162762,\n  \"name\" : \"Randall Ortiz\"\n}, {\n  \"length\" : 1313021417,\n  \"name\" : \"Jonelle Kuhic\"\n}, {\n  \"length\" : 1788387373,\n  \"name\" : \"Darell Medhurst\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6091ae4-f6f8-48c3-a259-6a6d0447b976",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.295363Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    }
  }, {
    "id" : "45135d77-8305-4e8f-a9c6-f832ee144022",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Claire+Denesik+III/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1586308070,\n  \"message\" : \"Repudiandae quod iusto fugit voluptas et earum. Accusantium harum alias aliquid ullam fuga dolorem. Cumque voluptas mollitia officiis ex ut. Esse reprehenderit architecto ut nam minus. Quia suscipit m\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45135d77-8305-4e8f-a9c6-f832ee144022",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.295125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "dd91dbd3-3bfb-4a73-bc57-0c6804f7c486",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Spencer+Fay/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1788476475,\n  \"message\" : \"Amet modi magni sint qui eum aliquam. Iste beatae ut ipsum sapiente molestiae ut odit. Veniam velit magni suscipit quidem sed.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd91dbd3-3bfb-4a73-bc57-0c6804f7c486",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2bf468db-5053-45f2-9bb7-596c60b8a4f7",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Mrs.+Danilo+Raynor/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1329032766,\n  \"message\" : \"Ex quo quia voluptates error minima nostrum. Et voluptates animi qui neque rerum corporis. Quam dolores sint eaque rem. Consequatur dolores debitis est. Voluptatibus consequuntur minus eos.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2bf468db-5053-45f2-9bb7-596c60b8a4f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "65d310be-045e-452b-aaf2-79bebd05646d",
    "name" : "Sets the value of the specified digital output point - 200",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Dorthy+Predovic/state",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "65d310be-045e-452b-aaf2-79bebd05646d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeDigitalOutputState"
        }
      }
    }
  }, {
    "id" : "685cbc01-720c-46bc-896d-5acfa80fa2c9",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Mrs.+Tuan+Murphy/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 144289542,\n  \"message\" : \"Atque cum ut aut fugiat quia laudantium. Unde quas quo quasi amet nisi culpa. Et rerum cumque hic.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "685cbc01-720c-46bc-896d-5acfa80fa2c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "dc6abc94-8771-41b5-a23b-a219004ea2e4",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Lyle+Corkery+III/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2105493747,\n  \"message\" : \"Atque asperiores doloremque sed et similique aut error. Aspernatur magnam esse a accusantium omnis. Ad quia repellat magnam quis sit perspiciatis consequatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc6abc94-8771-41b5-a23b-a219004ea2e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294547Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "65eba5b2-1253-48e5-88c3-7e982a8fc293",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Deandre+Cormier+DDS/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 599003564,\n  \"message\" : \"Cupiditate et sunt eum provident quia. Qui et iste repellendus. Aut ut error excepturi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "65eba5b2-1253-48e5-88c3-7e982a8fc293",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294427Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "a51c6606-01d2-4e16-89cc-0f7d1d9bf960",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Verda+Kovacek+V/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a51c6606-01d2-4e16-89cc-0f7d1d9bf960",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "boolean",
                "description" : "State of a digital point (true = on, false = off)"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4355d6f6-ca53-40f5-a48b-fd43f070d42e",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 722275687,\n  \"message\" : \"Fugiat aspernatur praesentium eaque non. Fugiat distinctio distinctio quos ut ut eum. Illo ullam laudantium cupiditate perferendis est eaque impedit. Animi laudantium maiores ab cumque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4355d6f6-ca53-40f5-a48b-fd43f070d42e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294222Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e29cacd5-33bd-436b-9f22-547e9de1ddaa",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1049167005,\n  \"message\" : \"Excepturi neque nulla impedit quia corporis. Error cupiditate non voluptatem aut minus. Sunt et corrupti. Qui incidunt autem atque deleniti recusandae tempore. Ratione occaecati qui magnam commodi nis\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e29cacd5-33bd-436b-9f22-547e9de1ddaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294141Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b64cfddd-9fcc-469b-828d-8f92ee3c8bb6",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Cleveland Mayert\",\n  \"value\" : true\n}, {\n  \"name\" : \"Mrs. Paul Miller\",\n  \"value\" : false\n}, {\n  \"name\" : \"Forrest Schmeler\",\n  \"value\" : true\n}, {\n  \"name\" : \"Stephen Padberg\",\n  \"value\" : true\n}, {\n  \"name\" : \"Ahmad Harris\",\n  \"value\" : false\n}, {\n  \"name\" : \"Margert Russel\",\n  \"value\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b64cfddd-9fcc-469b-828d-8f92ee3c8bb6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.294053Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DigitalPointStateVar"
            }
          }
        }
      }
    }
  }, {
    "id" : "9e24184c-89d1-4af1-8772-d2667f439207",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Mickey+Kutch/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 2083719952,\n  \"message\" : \"Nulla ut sequi qui. Numquam doloribus nesciunt nobis doloremque. Quam inventore accusantium. Nisi et ratione totam inventore est dignissimos saepe.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9e24184c-89d1-4af1-8772-d2667f439207",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.293738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "f2fb5725-48ac-4129-bd25-ce3c70a0bd4c",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Anderson+Bergnaum/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 768284733,\n  \"message\" : \"Ut similique nostrum consequuntur adipisci qui nihil quia. Eos odit suscipit ipsam voluptas eveniet. Et sunt sint.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2fb5725-48ac-4129-bd25-ce3c70a0bd4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.293614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "614e1df7-9584-4a28-b0b3-127db009a0bb",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Shonta+McLaughlin+DVM/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1068721703,\n  \"message\" : \"Et ab earum ea autem aut eum et. Nulla qui nisi. Velit nulla corrupti ut ut et quo. Explicabo sunt odit. Placeat et omnis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "614e1df7-9584-4a28-b0b3-127db009a0bb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.293499Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "4f16e216-0335-4b3b-94ee-fca2f2a5c789",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Willy+Quitzon+PhD/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f16e216-0335-4b3b-94ee-fca2f2a5c789",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.293377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "boolean",
                "description" : "State of a digital point (true = on, false = off)"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "149fc99e-4b13-48b6-9e63-715d268acdbc",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1733534462,\n  \"message\" : \"Totam quos dolore alias rem voluptate vitae. Totam omnis similique accusantium et est exercitationem. Sed et dolore rem vero vitae sequi. Officiis consequatur id nemo qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "149fc99e-4b13-48b6-9e63-715d268acdbc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.293273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d2bcdc5e-4d4d-4d49-b1e9-95fc8ddd2937",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 411054858,\n  \"message\" : \"Necessitatibus doloribus delectus et qui deserunt quos sit. Omnis quos accusantium ut aut. Dignissimos et non ipsum nisi aliquam. Rem sequi autem alias qui possimus eum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2bcdc5e-4d4d-4d49-b1e9-95fc8ddd2937",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.29319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "9acdd7b2-cf5a-4249-841d-6c1c6fac83d1",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Ozella Crist IV\",\n  \"value\" : true\n}, {\n  \"name\" : \"Carey Harris\",\n  \"value\" : true\n}, {\n  \"name\" : \"Hilario Mills\",\n  \"value\" : false\n}, {\n  \"name\" : \"Mr. Sheridan Schuster\",\n  \"value\" : false\n}, {\n  \"name\" : \"Weldon Brown\",\n  \"value\" : true\n}, {\n  \"name\" : \"Ettie Borer\",\n  \"value\" : true\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9acdd7b2-cf5a-4249-841d-6c1c6fac83d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.293102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DigitalPointStateVar"
            }
          }
        }
      }
    }
  }, {
    "id" : "66438e70-6bf0-43bf-a039-3c81ace201dc",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Emmanuel+Kohler/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 903297986,\n  \"message\" : \"Eveniet laboriosam unde magnam et excepturi. Omnis ipsa molestiae omnis consequuntur voluptatum natus. Earum a porro sequi magnam excepturi magnam alias. Illum animi dolorem nobis qui ipsa quia esse. \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66438e70-6bf0-43bf-a039-3c81ace201dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.292775Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "039ebc12-93d3-4c5d-bd46-de59e36650d5",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Michal+Herman/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1445741314,\n  \"message\" : \"Voluptatem placeat culpa. Neque ratione quidem distinctio rerum deserunt porro. Corporis veniam officiis perspiciatis alias ipsam doloremque id. Non voluptates ut molestiae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "039ebc12-93d3-4c5d-bd46-de59e36650d5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.292642Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2b8b7296-616d-46ed-9046-d4ce7456e6d2",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Bruce+Schmitt/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1675272985,\n  \"message\" : \"Mollitia delectus in. Et nihil ut similique possimus unde. Dolorem voluptas debitis voluptatem illo sit odit. Inventore est ut omnis placeat quis nobis eos. Nesciunt est tenetur autem ipsa deleniti.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b8b7296-616d-46ed-9046-d4ce7456e6d2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.292517Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "120adbe1-597e-4489-910e-00591c4e0054",
    "name" : "Sets the value of the specified analog output point - 200",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Emilio+Zulauf/eu",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "120adbe1-597e-4489-910e-00591c4e0054",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.292387Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "writeAnalogOutputEu"
        }
      }
    }
  }, {
    "id" : "a6c878da-2eae-4613-8127-f7e81729e470",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Ms.+Chandra+Waelchi/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1795335932,\n  \"message\" : \"Molestias illum totam qui. Aut rerum corrupti sunt et nisi. Impedit eos quo blanditiis consequatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a6c878da-2eae-4613-8127-f7e81729e470",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.292315Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "2618c9e1-ae37-4114-9222-513e523f6e20",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Merilyn+Jenkins/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2048046541,\n  \"message\" : \"Rem et inventore eaque possimus. Ratione quam quia vel. Placeat occaecati corporis perspiciatis magni aut itaque consequatur. Ut in illo distinctio sit pariatur magnam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2618c9e1-ae37-4114-9222-513e523f6e20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.292194Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "fd2fb1f5-18e0-4232-b4b1-b7b48c91cf52",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Terrell+Labadie/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1865962232,\n  \"message\" : \"Ut et eum unde deleniti ut expedita suscipit. Necessitatibus eos qui impedit quisquam sed expedita. Magni fugiat repudiandae magnam nemo voluptates sed. Impedit voluptas fuga libero unde sed.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd2fb1f5-18e0-4232-b4b1-b7b48c91cf52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.292072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "6d9cdce6-d664-4224-aeca-c24577d0589d",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Henry+Thompson/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1.9898562759300452E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d9cdce6-d664-4224-aeca-c24577d0589d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.291948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ebaf614c-e21d-4eb4-af34-e2d1c6b6adeb",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 511715473,\n  \"message\" : \"Nulla doloremque voluptatibus at. Ratione ipsa ab rerum aliquam natus blanditiis. Dolor enim consequatur aliquid. Qui laudantium sit eos autem in sapiente. Dolor dicta neque est est pariatur eos.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ebaf614c-e21d-4eb4-af34-e2d1c6b6adeb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.291848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "ec1ecd16-9596-4204-aa7d-9fe5aa2f3c5e",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 758780524,\n  \"message\" : \"Nesciunt quo eum dignissimos vitae. Qui ut alias ullam. Eos voluptatum libero nisi eos porro.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec1ecd16-9596-4204-aa7d-9fe5aa2f3c5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.291761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "6296ab6b-5432-48f0-89d1-a024a93863a0",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Scarlet McKenzie\",\n  \"value\" : 7.490286247817132E37\n}, {\n  \"name\" : \"Leana Maggio Sr.\",\n  \"value\" : 2.8962184117390425E38\n}, {\n  \"name\" : \"Mikaela Bergnaum\",\n  \"value\" : 2.5871163781143055E38\n}, {\n  \"name\" : \"Isiah Ratke\",\n  \"value\" : 2.080045630005935E38\n}, {\n  \"name\" : \"Erich Russel Jr.\",\n  \"value\" : 2.3280803464698087E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6296ab6b-5432-48f0-89d1-a024a93863a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.29168Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    }
  }, {
    "id" : "33625d6b-d29b-49f3-a43f-e2bc64cbcac1",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Nicky+Crist/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 119130382,\n  \"message\" : \"Temporibus et rerum qui ut cupiditate ullam provident. Soluta alias voluptatibus facilis ipsum. Molestias earum nihil aut vel assumenda itaque suscipit. Repellendus nulla error dolor. Vitae vel offici\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33625d6b-d29b-49f3-a43f-e2bc64cbcac1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.291399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "b6dc31cb-dffe-4441-a7be-26570e94fbf1",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Sal+Krajcik/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 506963435,\n  \"message\" : \"Quos adipisci unde. Sunt qui laborum. Pariatur quis repellendus qui. Quibusdam ullam repellat vero. Quia totam et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6dc31cb-dffe-4441-a7be-26570e94fbf1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.29125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "5f8aa18d-4a22-4168-86c0-76b073443dca",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Evelynn+Stark+III/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1771599441,\n  \"message\" : \"Officiis inventore voluptatem praesentium nemo id. Optio natus eos ducimus nemo quaerat nihil. Ex iste quo velit maxime aut est. Esse blanditiis eum aut eius reiciendis eveniet.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f8aa18d-4a22-4168-86c0-76b073443dca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.291134Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e1f43e4c-8ee0-41bf-a04c-5bc15a5905d3",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Freddie+Durgan/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 2.792784974987975E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e1f43e4c-8ee0-41bf-a04c-5bc15a5905d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.291005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "77250b59-c13c-4eeb-bdf1-8979f60bdad9",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 688834331,\n  \"message\" : \"Non in sit vero ratione temporibus voluptatem. Eveniet autem cumque. Et modi necessitatibus voluptas error recusandae nisi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "77250b59-c13c-4eeb-bdf1-8979f60bdad9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.290892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "e7300a77-b86b-4bbc-9f70-30e1589ed02d",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 723785204,\n  \"message\" : \"Et rerum voluptatum voluptatibus mollitia et. Dolorem et sit cupiditate sit officiis non dolorem. Architecto dolores molestiae eligendi illo est quis. Est error nihil minima nihil enim ad.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e7300a77-b86b-4bbc-9f70-30e1589ed02d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.290815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "cbbba745-0c5c-4fee-95c3-81a65599e413",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Mr. Shantae Hackett\",\n  \"value\" : 3.2587505233405564E38\n}, {\n  \"name\" : \"Shaun Nicolas DVM\",\n  \"value\" : 1.1294840514428305E38\n}, {\n  \"name\" : \"Dewayne Cremin\",\n  \"value\" : 1.4233830250194957E38\n}, {\n  \"name\" : \"Rosamond Kuphal II\",\n  \"value\" : 2.2841461249138775E38\n}, {\n  \"name\" : \"Billy White Jr.\",\n  \"value\" : 2.73790026840208E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cbbba745-0c5c-4fee-95c3-81a65599e413",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.290724Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    }
  }, {
    "id" : "c4ffd6ad-3402-4d8a-af56-c8dc0ba1eef5",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 973320522,\n  \"message\" : \"Aut eos ducimus et dolor harum quas occaecati. Nesciunt laborum rem libero et mollitia dolores voluptatem. Est accusantium et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c4ffd6ad-3402-4d8a-af56-c8dc0ba1eef5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.290414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "10bbf2f9-0e61-45fb-94b6-e090025d8412",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1516874525,\n  \"message\" : \"Omnis recusandae sunt. Autem soluta et aut est sit doloribus quasi. Id qui nobis porro.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "10bbf2f9-0e61-45fb-94b6-e090025d8412",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.290334Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d6ef2a75-56d7-4aa6-9237-eb64a9a15922",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2023-01-16T12:07:54.290035Z\",\n  \"strategyName\" : \"Luella Fay\",\n  \"crc\" : \"qvhwidpzin6crkx1h03mz7hz2ncqxhzsiqgse7i2yqw7iv6inkivxk88d4q4jli2cummu3\",\n  \"runningCharts\" : 531078135,\n  \"time\" : \"2022-06-14T13:28:54.290154Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6ef2a75-56d7-4aa6-9237-eb64a9a15922",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.290233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "type" : "object",
            "properties" : {
              "crc" : {
                "type" : "string"
              },
              "date" : {
                "type" : "string"
              },
              "runningCharts" : {
                "type" : "integer",
                "format" : "int32"
              },
              "strategyName" : {
                "type" : "string"
              },
              "time" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "16863662-77ca-4ea5-9bd1-c4bdaa80bf7f",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 10463642,\n  \"message\" : \"Cum id dolores ut deleniti. Voluptatem dolores omnis adipisci qui aspernatur voluptas. Et autem debitis assumenda commodi saepe.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "16863662-77ca-4ea5-9bd1-c4bdaa80bf7f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.289995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "d4afcde7-31ad-41dc-a057-1f5469f6cd13",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1710843548,\n  \"message\" : \"Sapiente sit a ullam corporis explicabo non non. Aperiam officia inventore velit blanditiis incidunt. Possimus eveniet delectus perferendis qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4afcde7-31ad-41dc-a057-1f5469f6cd13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.289895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    }
  }, {
    "id" : "215ccdd6-8059-4aa8-875b-c681627d4e37",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mac2\" : \"koe0o6fznzgz642vhlx3nyc22agfgsyw2214jzsfkmkvw1pvzs4pmm6si3v18gdi9gcyi4v8llqezbhx9yw3al4afedkk8qhf2rcah6v0hm6c2w\",\n  \"mac1\" : \"1pqpsf6b193v9dktoixbmg6ftm0ne59bevnky74jbhds0zecxdmqmuo9tv9sla0d0l004w6422lqrbjdcktfynma0hgll65utlm403idyey2m140i5yqr05imf0lfof7fxo82jdovz06szps5eick\",\n  \"upTimeSeconds\" : 157876306,\n  \"firmwareDate\" : \"2022-07-29T13:44:54.289564Z\",\n  \"controllerType\" : \"6xgom9v9lzboqrznzw4ir9tmx2a5ea6joquf2utqh8x6o94os8he22dynkfsfkso5v79q81jt20bws0xqavbppu560thwimbh3w3x2vcp2whzd676v7isjet8w3h1railkoo55ndaugwtkwj6942qwun0ia7g4ebotn0jdc1qgw2\",\n  \"firmwareTime\" : \"2022-08-26T14:04:54.289615Z\",\n  \"firmwareVersion\" : \"2jbynzewe24v9c2j5nu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "215ccdd6-8059-4aa8-875b-c681627d4e37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:54.289769Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "type" : "object",
            "properties" : {
              "controllerType" : {
                "type" : "string"
              },
              "firmwareDate" : {
                "type" : "string"
              },
              "firmwareTime" : {
                "type" : "string"
              },
              "firmwareVersion" : {
                "type" : "string"
              },
              "mac1" : {
                "type" : "string"
              },
              "mac2" : {
                "type" : "string"
              },
              "upTimeSeconds" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        }
      }
    }
  } ]
}