{
  "mappings" : [ {
    "id" : "889a8581-44ca-3eab-9fbd-82ff2d02534a",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2022-11-03T16%3A12%3A36.457983Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 929785955,\n  \"message\" : \"Cumque sed quia inventore enim nihil ipsam reprehenderit. Accusantium voluptate alias. Recusandae distinctio eveniet.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "889a8581-44ca-3eab-9fbd-82ff2d02534a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "18838213-8a84-3b19-9d00-af23206f3b8c",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2022-03-29T14%3A55%3A36.457891Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1044579807,\n  \"message\" : \"Eos mollitia necessitatibus sed ullam. Voluptatibus illum dolores beatae. Omnis est molestias dolores. Autem tempora asperiores veniam odio repellendus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18838213-8a84-3b19-9d00-af23206f3b8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8005eb95-d686-3565-a882-a9eb306d6b1f",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2022-09-02T14%3A35%3A36.457795Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1784409085,\n  \"message\" : \"Quia ut ea et voluptas. Adipisci quibusdam qui consequatur. Quia ut suscipit pariatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8005eb95-d686-3565-a882-a9eb306d6b1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "f18e37a0-0024-3195-964d-3a4a3a1b142f",
    "name" : "Returns current value of the specified up timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers/2023-01-23T14%3A31%3A36.457702Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1.1641574337615124E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f18e37a0-0024-3195-964d-3a4a3a1b142f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readUpTimerValue",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "9ea8114e-dd22-3e60-aea7-c0353fdd2214",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 123012839,\n  \"message\" : \"Aut optio amet praesentium quaerat. Magni et facilis id voluptatem explicabo dolor. Voluptates aut perspiciatis nobis fuga asperiores.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ea8114e-dd22-3e60-aea7-c0353fdd2214",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "f5ddf151-c4aa-3474-8ba9-6d0937cda882",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 540973773,\n  \"message\" : \"Tempora velit aspernatur culpa. Laudantium ea quo accusantium. Odit quibusdam aliquid reiciendis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5ddf151-c4aa-3474-8ba9-6d0937cda882",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "d06a4498-4bee-3f6a-8d93-3954725dbd8e",
    "name" : "Returns the name and current value of all up timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/upTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Mellie Kulas DVM\",\n  \"value\" : 8.20038097935418E37\n}, {\n  \"name\" : \"Dione Klein\",\n  \"value\" : 2.0716370811966213E37\n}, {\n  \"name\" : \"Hector Shields\",\n  \"value\" : 3.4533210728782913E37\n}, {\n  \"name\" : \"Marcia Rohan\",\n  \"value\" : 1.7912640168547206E38\n}, {\n  \"name\" : \"Ciera O'Conner\",\n  \"value\" : 1.7649036036240827E38\n}, {\n  \"name\" : \"Miss Jamie Little\",\n  \"value\" : 2.806119309558675E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d06a4498-4bee-3f6a-8d93-3954725dbd8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readUpTimerVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "b86111dd-9c0a-3a70-9592-119a63fb8519",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Kip+Bernier",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 2085437167,\n  \"message\" : \"Repellendus illum quidem. Non aperiam qui. Qui delectus dolorem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b86111dd-9c0a-3a70-9592-119a63fb8519",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "66f2c069-218d-32e9-8b35-57d6d3ad4a0c",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Porfirio+Schroeder",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2090950638,\n  \"message\" : \"Aut consequuntur debitis facilis soluta voluptatem. Eius ducimus praesentium reiciendis aut. Sint non autem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66f2c069-218d-32e9-8b35-57d6d3ad4a0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "456670eb-aa03-3827-a45b-fea1f14b144f",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Jordan+Labadie",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 452413986,\n  \"message\" : \"Quia quam iste odio sit repudiandae. Incidunt quia illo labore corrupti velit. Nesciunt consequatur officia natus illo quod. Perferendis nihil qui nostrum. In iusto consectetur quasi optio quisquam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "456670eb-aa03-3827-a45b-fea1f14b144f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "18c0d677-8d38-3f91-9982-9b18c72c2b98",
    "name" : "Sets the value of a string variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Leonard+Raynor+V",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"errorCode\" : 1379879234,\n  \"message\" : \"Dicta magnam eos consequatur nihil distinctio dolorum. Qui dolorum odit recusandae accusamus laudantium sit quo. Qui voluptas et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "18c0d677-8d38-3f91-9982-9b18c72c2b98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -23 ** The string you passed is longer than the width of PAC Control string variable or table element you are writing to.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "8531203f-0472-30e0-b597-ecc3116beb94",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Dara+Franecki",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 45854058,\n  \"message\" : \"Odio consectetur ratione ipsa libero. Ut omnis distinctio recusandae autem sit rem. Maiores aut consequatur ullam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8531203f-0472-30e0-b597-ecc3116beb94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7f3913ae-2127-39a7-b10e-0aa65080069b",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Kandice+Emard",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 640314258,\n  \"message\" : \"Dolores deleniti non qui. Libero doloribus quia qui qui molestiae. Rerum autem repellat.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f3913ae-2127-39a7-b10e-0aa65080069b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "ec3ada2c-2daa-3785-8f9e-e926bfdf01e2",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Ingrid+Effertz",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1655414305,\n  \"message\" : \"Eos voluptatem incidunt. Rem corrupti molestiae numquam est autem. Exercitationem ratione non dolor qui voluptate laudantium omnis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec3ada2c-2daa-3785-8f9e-e926bfdf01e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "fc59dc91-b2d5-3faf-ae7e-3bd8b9642f59",
    "name" : "Returns value of the specified string",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings/Jayson+Kemmer",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"u8b57nyzi17i3hrty1fziatf3wf6fvvhaj08oycxs0rrgqz7k33gkbjr96dm7h2eahykbaeofyy6vjxf7e5gtmmilmjhwena9z7p4ht9y5gm600lzf0mqvh4oopf1q4fk04mj44qlswkjvvxp96rk19lthslro4n240fgbvol0kk0u0z044rxt72t88v79b4frdhud6fa41kryzrhh24qfotbipoz19005ko705b2geflvqxjivpjbrbnee1co39wnszlyc1z8lveh7pi9g0cc4civ8xqyfmktf7qvsj9lyw2von7iohp8fljo2d5un2qty3oxn6b5nbp6bgtb056twknim0xderl1coc3nv1fa0f63u1u8kefzeh31z23con8f5rg3ow83iwz0me2nlfspkpey9c8plgys3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc59dc91-b2d5-3faf-ae7e-3bd8b9642f59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringVar",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "maxLength" : 1024,
                "type" : "string",
                "description" : "The value of a string; string width (max length) for each string variable is defined in the strategy"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "53aed35d-ced4-353a-b9cd-dfd0ad6238d9",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1104421900,\n  \"message\" : \"Ut quia dolor consectetur. In veritatis rem occaecati. Explicabo consequatur error quia et hic. Non illum eos at accusamus unde. Iusto voluptatem amet.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53aed35d-ced4-353a-b9cd-dfd0ad6238d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "a5be00cc-b981-323e-9490-bfd6b5d34041",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 734262195,\n  \"message\" : \"Sed illum corporis quisquam adipisci voluptatem quia. Nisi placeat et iure iusto autem. Non et explicabo odit dolorem. Voluptatum eos dolor maxime.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5be00cc-b981-323e-9490-bfd6b5d34041",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "0b70b724-5cbf-3091-ac20-bc677e5229cf",
    "name" : "Returns the name and value of all string variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Otha Lemke\",\n  \"value\" : \"flq53usdii5qs4tpb1shgdzt9oa910t3nfybhygaotawrzc5dnnog7pcmp73kcrb8atvk0m0769rilh0l7tzgn2uuu87zu4s2tlb52brd0klrs8456grzvejynoo3m5qh5i8vqa81c56y2wn0nasyt13m37zj3qnocnpvpi16t04cwrk6bzxcfafqad7cjfwhpwwps28y4wx9q3ff5xzymu2v9nitsvu35xqo1n3scc1gsd8zteebalgjzgu70vcybqq9pdc8lblyqwv2ct1kf3xbc5v958magwpb8f62wql68i98hfpxlbhwto2wdrw3ienii7y2cfpsml1xd7ipc7409rjjqfa9o9skinacddgmbimdz9rw09r5hhuzhm8wjjzuic8os0vphdy4jpx3gi8lg7m8mqncmy47pimao11s6thmqvcaaxxmn4gh5xyuyhh8qkaq6bcknghzf0z08496l4fnxjpg11soq0z89edc5gv7r7fljxo76r81seobelih2ga8q7vaiag71df6g5m7jmf3hcjjnxqzcddmo84ibhftdtcjpw0snv43ruy8splnpi5ejrx5cn4ucfmrrl89jx6e\"\n}, {\n  \"name\" : \"Ms. Ellsworth Schultz\",\n  \"value\" : \"j49j3wlq550t40b4n925dxby99dulssevwl84ta02qh4xt66r9rkservu231tf1urmcqvjmq8jpoqf7cc6lxdr3i8s7bk3lkmfm4bboapjhtww1benbtgqxp9zj1amiog6xj9b122ff9jy75ptl0w436gwd7ih9exjvv80lp72999j08pjouale4pfc0hg9uhj77yugnphz09xpj6mrihp5rwyh1migtsxas75q0mzncd5eugsqw146kt731mtwaqmbe4xqogkj6xweyrspuc67946els42sbteskxdg19j2ygrdnbxy3qxgl2ip5uy1r2r3kv3m759jouz0coht1erbwfctsdz1ymv6cxjg0g7maiv8aol2zs7w5ijoqbbak04erlfpivwm4njgt5168yfyku3jmp4dy503qh1traosz3as26utaao19cc993bzioj14aa9xj8kj9uo30fmhta6ofvwmd3j99kz5xmfyo3eb091xa5i2jtvtfbt6rmtz1zufosh8dths27tw9ypwwkyk1czlhyxh3slf0q9yxyehxeuxgk6cwhyx0zs6v0bpkf6scehz4bgb6t7yb26yva3hln591wrgn1mr6lc9bz0ptz4o3l1ddfteb8hj6uenhxkvtqjzleu0y5h07fapd2kdqvhogln49ciu4b8xb5dv5a60seqcdlpy7ilnty5pbsp4dyk3kre7iszyxidrrx6i5fsxuhuo8zgmms4t8glwl1ps6pis9qpvh6b5oeij7hsnxp7ikcqxdqrkwta7dg5r2tu318vgc0x8k8xw748m47hoqp87cqakoqwlet65gmbpsjmeabb\"\n}, {\n  \"name\" : \"Wendell Ledner IV\",\n  \"value\" : \"7h1ub4wzd2g0cf0839zqmnv81a1rkohzl9u47zqq4ptdm40mf7y32ljij1c9eemt5x3icl8nit5n28o336lyarwohrzbi66pudp344qud25qx8tzaf0ziie6zrgkuu8r0oi9xqesvntlj6pf4y8a1kp5u6bobzsmn3y2rmxtgtg60syeq61jk31w9gj6h662sp0ocsnk6nqr0d69a02avp638lpkfuyomfh1elk17rg6mhvj2n7faosjcoxwurgnhl1637ghq2i9w8f0a89elzwsrd5vils817ec0wjbwfbdgikhovce7fkwfes23pru7kfxka2rn8k32815ecb196hhs9wjp97d65ime3fyxqsdwwxsnaz1j1fjk21rrr5yelnq5izrqtk4s0qfspjskxv9tf063alggxvn2wnv8sr3n7re8vcou5zjeed7zqf8316k1rdhdk28tlv0z6xajxsuo3n4vnks74v8ttatgoka2uoll7n24x71acuk5dyr0gq9kczkhxm5p6hxe9p41t6lojjijti3fapx82il9v3so6i13l0wdibtacykmtlc7t9ieq5xzh4c1dz533shuukhp1ewyrxvszc2e4en70pmkikgrywtu7ju77wzv6vn74amn9fough4fnpuqbcve4ibn5fycuwwz2e2ab2jyp4j4cm3cqt619v1qlgj7bmrcnhq3klgem3jg3npxuzcdilze4irqxz7moyyufjsjf2kvtwtdhhjow7teqayull1ewi1nwbmvm0ahzpxhk7o39v4i23r6qi0bwpxx7z2olphh424olqze34vz1yccwdoloahd0mt5w3wh43z78eokdm77ubsubpmhvhw3fkbfxf9fr8l8567j3svwi1ixfc5yqvnrt4yoe8qkdp2ljrstlkni9gww8x248\"\n}, {\n  \"name\" : \"Alphonse Marks\",\n  \"value\" : \"ql4\"\n}, {\n  \"name\" : \"Suzanne Dare\",\n  \"value\" : \"cinq5fureziwqo87nmewf0q024f42ha24n3z2o4d7znwymr0r4yh4lusw2ha2ykwhcbll6vkeumdd7xbyssah1p6ujvsk7283r896q467pwpuq4ipoxqihkps2onfxgrbxru0i23nwagbrytzdlcw0aqvimyvnbshmxkppxsybfsnj6a9bw2lbwxasf5o6x4cytn886df9tz2hdbyid8z50lyxsgm5t7tdlnpmoqbk6zwyd07ae00y07mz0n50w4fnr5wc3253cmlpci0qxbh7nenbde5wsovf13t4zeudsju2ipk4z6jrqfl9tquwkv8vnzw15x5cpmdm99f2rooakyzp9q98wdfxnghso9b6wnnwbdaafti5pjum12gt0l7jnu0kwn3ge3klzmhi9tvsx556c6wqx7tz4xxaleymgh04izvv2whtdh80fapwat8yalwlkwckxo3lyqt22frfweo7au3mjt5g5ztd0arasmmd9te1wo0zid19dbn15b8tw18nlja0\"\n}, {\n  \"name\" : \"Aracelis Koelpin\",\n  \"value\" : \"6ccdxqhw0lfwrcoterkuoi1t1jp9nubq4h3gddgjm8zndfe9hwwrwqxiflndmuz9bvp77f2icdokzo5xhsy3mjvoe7wlv3qextv49os914\"\n}, {\n  \"name\" : \"Sanora Hilpert Sr.\",\n  \"value\" : \"y815yueej5w4zty3mp3oqbc59aob2motpz8sd2lq3o641928uigcik13r2siq5wjn7nmfdun8e0g8luj4apm4yshgytcpbthxzov5fn2ul6csp6af5zosm0yzt8gvnxwjl4k8hrycizdla3j4zewq2argpxus948gcnz2y79q5853bcr2nukq5cvhgn2sqcd4zlmha6p1m1qagh52zbestc3844gn1vak49kfao6502vmquivxkd4yl3xby1trsog1sl2qdld9788lc22aa2e04f9i2ryfkajfqlxsiado\"\n}, {\n  \"name\" : \"Winston Gerlach\",\n  \"value\" : \"z5d8rcf1q22lp2cwqjtluihi2ninf18920w26hsz1t92620twjvbk3vm82jfwc4zr7964wcyw52lzyb5ie02ztl9s41oz9ypgyc95tdiiuago1xxtuelnvkvilkesz2ia9d5hlmysc5ai3awkdbgclrzdpolbbivz4r3cb07t7usrdn88lf3ysqxag0dogs7zmo0acxpi7qk9br6dv4atstj0etey3jnx1ev7jczfsmry3qiyn85lnl3wbflnnv3635sjcdi7tfmz3gnzpldmv9296e9e0hn9uvzmo5lugsk53e25dp50gd3cpuivz0i3kag4aradbr96u7esjs1b1ynoyyw7j4dvyvkirjawrmdw0zgzeoxsuquyefrwdy3itm1iedcyljkue74ugzppgzjhdl77v0akn755fu2grunv36e3batvqprews9okgn4xpvn3551i5cxkkhr9d2ytqedhzfrq296yqrphycyaidr0664wo6zsk75oj3wd8ybw011qehubux0nys25qbw3yvijks7d0zneky0lnhqh10uaqw1s44\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b70b724-5cbf-3091-ac20-bc677e5229cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/StringVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "cc29f829-831f-3f77-b51f-e7c1ded6dd8f",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Weston+Kshlerin/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 603443014,\n  \"message\" : \"At nihil quam sunt explicabo est. Dolore consequatur ut sapiente et. Hic et aperiam. Quo labore hic. Aut maxime facere esse nisi est quidem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc29f829-831f-3f77-b51f-e7c1ded6dd8f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "aed475bb-1899-3359-bf72-c8ef2de9df19",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Kelley+Wisoky/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1616543926,\n  \"message\" : \"Tenetur rem occaecati. Omnis asperiores aut ipsam similique. Culpa ea omnis non. Delectus sapiente illo fugit ut corporis nobis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aed475bb-1899-3359-bf72-c8ef2de9df19",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "488d8cff-5db7-3643-8718-6620d943e76d",
    "name" : "Sets the value of an integer64 variable as a string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Danielle+Ritchie/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 24665273,\n  \"message\" : \"Illo saepe eos minus cumque. Eaque aut ad dicta et cum dolores ipsum. Optio aut laborum beatae cumque. Tenetur et occaecati consequuntur eos velit quidem rerum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "488d8cff-5db7-3643-8718-6620d943e76d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "5d1b3e68-1d3b-391f-83da-d6a367768137",
    "name" : "Sets the value of an integer64 variable as a string - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Eulalia+Ratke+PhD/_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5d1b3e68-1d3b-391f-83da-d6a367768137",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64VarAsString"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "e035552e-6517-32e5-9065-1e819f3cf5fe",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Lore+Spencer/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1974901702,\n  \"message\" : \"Qui esse aliquid error. Omnis aliquid eum dolorem numquam. Explicabo in est vero neque assumenda dolor commodi. Atque aliquam qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e035552e-6517-32e5-9065-1e819f3cf5fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "4eec4dde-184b-367b-8c24-11cbc41ce1dc",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Neely+Howe/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 641118251,\n  \"message\" : \"Quis aut natus occaecati quia. Neque ducimus dicta ut voluptas voluptas. Vitae alias deserunt laborum aliquam exercitationem. Laboriosam iusto sunt atque expedita ea. Vel quis facere.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4eec4dde-184b-367b-8c24-11cbc41ce1dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "a8fa6094-cf54-3326-b561-03cf37c38433",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Robin+Jaskolski/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1366426729,\n  \"message\" : \"Sint odio reprehenderit numquam. Et aut iure asperiores. Libero eos nesciunt at quam commodi eum necessitatibus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8fa6094-cf54-3326-b561-03cf37c38433",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "da9a5476-c1f6-3310-b6d4-a6b9eccd6de1",
    "name" : "Returns value of the specified integer64 variable as a string",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Ms.+Thomasina+Hagenes/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"qu2jm5gueo89iaua4lqvujils5qk0yfyyciwd919otouqh2nr0tu3ewuohc47o2bk0drxjouiv47ej5ohhm7y82d8r4uizba4t8tsj2ris5z4srli2krmzwthcvp7nwy833yncqr4f7rqgsibzk9x4y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da9a5476-c1f6-3310-b6d4-a6b9eccd6de1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64VarAsString",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string",
                "description" : "Value of the integer64 variable expressed as decimal string, e.g. \"34359738367\""
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "134e68cf-93c9-3627-8fac-c95ba2764406",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Len+Heathcote+II",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1500647433,\n  \"message\" : \"Fugit asperiores numquam nemo magni doloremque. Sed et nihil ab vero adipisci. Magni at maxime totam sit. Blanditiis voluptate quasi rem facilis quod mollitia. Et quibusdam vel aperiam id soluta.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "134e68cf-93c9-3627-8fac-c95ba2764406",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "48eb9e44-bb4c-3446-aa7c-7c46ddc4323d",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Bertram+Barrows+PhD",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1608915037,\n  \"message\" : \"Repellat sed rerum. Exercitationem quam qui modi voluptatem. Error eligendi aut ut labore ducimus et. Repudiandae officia atque libero eius et molestiae aliquid. Perferendis saepe ut necessitatibus oc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48eb9e44-bb4c-3446-aa7c-7c46ddc4323d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "26b25ea1-c74d-3f58-a690-845c7e51df04",
    "name" : "Sets the value of an integer64 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Elliot+Haley",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 518474501,\n  \"message\" : \"Ut facere sint autem aut. Provident minima cumque quo natus et et. Qui consequatur dolores nesciunt. Placeat laborum aut qui minima nisi optio accusamus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26b25ea1-c74d-3f58-a690-845c7e51df04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "5d22a2fa-a6a7-357b-ab76-220a2a107c16",
    "name" : "Sets the value of an integer64 variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Heike+Bogisich",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5d22a2fa-a6a7-357b-ab76-220a2a107c16",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64Var"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "ede1a976-ef61-331d-a532-9adff9c65591",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Issac+Hauck",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1577894327,\n  \"message\" : \"Dolore ipsa repudiandae explicabo voluptates quod. Cum repudiandae neque nesciunt. Aspernatur repellendus iusto velit suscipit. Aut consequatur possimus est porro.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ede1a976-ef61-331d-a532-9adff9c65591",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "c1cc3ad7-0b36-36d9-89be-cf3b02112c59",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Elma+Sporer",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 876505839,\n  \"message\" : \"Veniam quae ex. Eaque quidem quos ad. Illum harum expedita praesentium et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1cc3ad7-0b36-36d9-89be-cf3b02112c59",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "d8171c4b-286c-37ce-8ae0-3bd4e2c4c856",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Willa+Koss+PhD",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1955916297,\n  \"message\" : \"Fuga quo aliquam. Minus quisquam eos. Fugit harum eos tenetur esse sit autem. Quia et eos animi est fuga magni necessitatibus. Distinctio dolor quam cum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8171c4b-286c-37ce-8ae0-3bd4e2c4c856",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "0098e9d7-dfdc-335a-972c-861000b791f4",
    "name" : "Returns value of the specified integer64 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/Catina+Bartoletti",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 6435364210426201913\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0098e9d7-dfdc-335a-972c-861000b791f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Var",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer64 variable",
                "format" : "int64"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "3f11a552-b718-3ae1-bed8-17cab18c5764",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1820898244,\n  \"message\" : \"Delectus commodi dolore reiciendis et sint. Ipsa non et. Eos iste natus. Nam provident esse id exercitationem nam ea.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f11a552-b718-3ae1-bed8-17cab18c5764",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "eb126e19-7038-3278-b626-f42e0d875d18",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 4300878,\n  \"message\" : \"Enim omnis eius. Quam dicta velit pariatur est voluptatibus rem voluptatem. Asperiores consequatur magni corporis modi et sed dolorem. Optio fugiat quibusdam provident odit rerum rem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eb126e19-7038-3278-b626-f42e0d875d18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "a39ef0bf-836f-34f6-87ff-f03802077f7b",
    "name" : "Returns the name and value as a string of all integer64 variables in the strateg...",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Angelina Franecki\",\n  \"value\" : \"mi6oxfoubo67rn6kt6ntedr10rrcrri2nqhuvayjwhlvocsddfqdacmo0c6o3mcbbqqcvgmo4fhwbx03nr5a1bc72p2ki67ubm0iidw327oz72ekuprviq\"\n}, {\n  \"name\" : \"Sacha Nikolaus Jr.\",\n  \"value\" : \"nkkikwi9op9uouptgye1w4cv6n8fhmbc516d4e6uh2rsc5ddn9vgsbkgjsja6q2gwsv1c0cnhsaos0164py95sx4zqxv2xzfkx41j9\"\n}, {\n  \"name\" : \"Kathlyn Breitenberg\",\n  \"value\" : \"feq9cdn6486fcz5g6eersdtkj9jkrjrdsyb8z3aqdv9xdx86od0t263x77c662kh91\"\n}, {\n  \"name\" : \"Lashell Johns\",\n  \"value\" : \"jya8b6uzcgnsoper9bbu42n2d9796slbnps49\"\n}, {\n  \"name\" : \"Art Stark\",\n  \"value\" : \"elb38iro61nnojfd5n5ljsu0zx6ovcc51qni006nb6732gf5h6d43amjotdkvnxwkso9mblhpnyz6thlko9bno2q0nl19z1e38o3ye1nc6g3qxsxszm403bk71r1ktxnayhn96uxsoiv21dmqdypeuca9fh2p38h9txz25fqpcn7ps4cj7eo89ff\"\n}, {\n  \"name\" : \"Lesia Fadel\",\n  \"value\" : \"66wc4s1bqfrkqk7n0udpn0wpqnsusy3lacaigf3e3z8vplbxjqzdsg88nph9fzasrgc4\"\n}, {\n  \"name\" : \"Ninfa Heller\",\n  \"value\" : \"rtke73gjy8y0wuc3a2bvywlg026vc5hx9qd0hzxnaupf9rosk7u6fuy17h2bel34u8k1idm2wwfua0tez8eytxtf9mzuu7463w2x5e1hjok6inngj8i2jsfbpape0m92pal73tsf6jo5duwf2kac\"\n}, {\n  \"name\" : \"Robbie Kessler\",\n  \"value\" : \"jyo7lzc0ut50e5bstio93p3edmmqa152pgj0cikfyho7i5010sb4dv037nb30iui5ky2vxj40d4vv3ldf4oiesqwzjf01poyv91hys4aeieapepjtqq3x381c67ae9ffzlp9i80i74kjt6pc02fr247hyslv238x9uce28z7mr4a20g36se2a4bk\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a39ef0bf-836f-34f6-87ff-f03802077f7b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64VarsAsStrings",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int64VarAsString"
            }
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "5c207dcc-4f62-3c1e-88b9-112f20e0b22d",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 490641668,\n  \"message\" : \"Ad id omnis molestiae voluptas culpa. Fuga aliquam officia dolor rerum sint eaque. Unde a a saepe.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5c207dcc-4f62-3c1e-88b9-112f20e0b22d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "1a9307d6-6215-3b84-9372-c2eedd9c9150",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1603418712,\n  \"message\" : \"Quia aut quibusdam consequuntur blanditiis est repudiandae. Delectus commodi similique animi. Voluptas maxime sint odio et beatae sequi id.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a9307d6-6215-3b84-9372-c2eedd9c9150",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "c893db4f-32f0-3a79-83cc-68010101b3a8",
    "name" : "Returns the name and value of all integer64 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Pat Legros\",\n  \"value\" : 8112788150708909002\n}, {\n  \"name\" : \"Marcos Lebsack\",\n  \"value\" : 1482058755607235913\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c893db4f-32f0-3a79-83cc-68010101b3a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Vars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int64Var"
            }
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "7da9b136-eed4-3bc8-8731-79f8aeb543d4",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Anitra+Stanton+PhD",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 932429828,\n  \"message\" : \"Eos adipisci omnis voluptas cum. Nemo illum impedit maiores sed asperiores perspiciatis. Sapiente asperiores possimus. Voluptatibus nisi sint. Necessitatibus ea quisquam exercitationem voluptatibus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7da9b136-eed4-3bc8-8731-79f8aeb543d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "06518732-be33-3391-8da9-23ebc36f5725",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Halley+Pollich",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 582238899,\n  \"message\" : \"Praesentium maiores mollitia eum. Enim quia porro est ducimus excepturi. Aspernatur omnis aut et. Ipsam voluptatum dolor molestiae debitis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06518732-be33-3391-8da9-23ebc36f5725",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "0e921709-4a31-358d-80b7-e53c262a3e14",
    "name" : "Sets the value of an integer32 variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Miss+Delphine+Wolf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 851445808,\n  \"message\" : \"Reprehenderit sit voluptas. Provident quo culpa sint modi omnis dolorum possimus. Totam repudiandae ut assumenda odit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0e921709-4a31-358d-80b7-e53c262a3e14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "22143469-f6ae-3d4d-8905-7b7ae37eaced",
    "name" : "Sets the value of an integer32 variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Alissa+Harris",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "22143469-f6ae-3d4d-8905-7b7ae37eaced",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32Var"
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "33322f40-3a3d-3466-967e-b7e2512231c7",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Alejandro+Gaylord",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1174068645,\n  \"message\" : \"Quaerat eum quod voluptates sed. Et eveniet omnis commodi. Aut alias omnis in corrupti quidem. Alias odit non sed quo. Omnis minima eaque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33322f40-3a3d-3466-967e-b7e2512231c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "4c7d937b-e950-3000-a13a-12c67b4de2d8",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Jarvis+Hoppe",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1908700490,\n  \"message\" : \"Alias omnis rerum quia autem doloribus. Sit eum commodi. Facilis est velit ullam quia non praesentium incidunt.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c7d937b-e950-3000-a13a-12c67b4de2d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "e2661253-57be-370c-8fd7-43fff4542b71",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Gertrudis+Smith",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2038417241,\n  \"message\" : \"Voluptas veritatis rerum eaque et nisi quibusdam maxime. Aut placeat molestiae. Cupiditate nam dolore tempore facilis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2661253-57be-370c-8fd7-43fff4542b71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "9d406b07-29db-3078-ae21-993424f86865",
    "name" : "Returns value of the specified integer32 variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s/Suzie+Hoeger",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 48770671\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d406b07-29db-3078-ae21-993424f86865",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Var",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer32 variable",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "ea0dd46a-3e5c-32b4-a766-f5ccc3d474f7",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 434057878,\n  \"message\" : \"Deleniti qui laborum et. Dolore id optio ut. Quia aut quia tempore dignissimos quod amet.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ea0dd46a-3e5c-32b4-a766-f5ccc3d474f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "e4304169-d08c-33b7-aa65-c3745214af0f",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1408708199,\n  \"message\" : \"Distinctio omnis sed in at sit voluptate corporis. Molestias dolor quaerat tempora dignissimos laboriosam quam. Dolorum delectus tenetur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4304169-d08c-33b7-aa65-c3745214af0f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "48a341c4-78ee-3bf6-b077-247324cb3851",
    "name" : "Returns the name and value of all integer32 variables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Daria Dach\",\n  \"value\" : 360512047\n}, {\n  \"name\" : \"Teodoro Schneider\",\n  \"value\" : 1576716627\n}, {\n  \"name\" : \"Yolando Kiehn\",\n  \"value\" : 1842939879\n}, {\n  \"name\" : \"Ingrid Rempel\",\n  \"value\" : 937767854\n}, {\n  \"name\" : \"Mr. Rodrigo Conn\",\n  \"value\" : 54386352\n}, {\n  \"name\" : \"Marin Cruickshank Jr.\",\n  \"value\" : 128805347\n}, {\n  \"name\" : \"Santos Okuneva\",\n  \"value\" : 1126540244\n}, {\n  \"name\" : \"Miles Olson\",\n  \"value\" : 1470565834\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48a341c4-78ee-3bf6-b077-247324cb3851",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Vars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/Int32Var"
            }
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "4a8e1c93-0d59-34cc-9e93-a8f9f708ad7d",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Russell+Hane",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 956889770,\n  \"message\" : \"Praesentium voluptatum et dolorem sit quia nihil. Illum dolor temporibus dolorem numquam qui ipsam. Atque vel non. Doloremque aut est a voluptatem quasi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a8e1c93-0d59-34cc-9e93-a8f9f708ad7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "cd81b578-04ae-3262-92a6-64c4c4283195",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Franklyn+Klocko",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1538336961,\n  \"message\" : \"Minus et dolorem. Hic deserunt quam. Et qui laudantium asperiores.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd81b578-04ae-3262-92a6-64c4c4283195",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "ca8991cb-ad40-3d71-8bef-5111177034b7",
    "name" : "Sets the value of a float variable (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Douglass+Kuhic",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 173178758,\n  \"message\" : \"Fuga rerum ea doloremque et repudiandae dolore voluptatem. Illum ipsam culpa. Et nihil est quaerat magni est. Earum saepe magnam qui omnis quidem veritatis sed.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca8991cb-ad40-3d71-8bef-5111177034b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "176a1666-667f-39a7-aaf9-fd5713777e2d",
    "name" : "Sets the value of a float variable - 200",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Edelmira+Hettinger",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "176a1666-667f-39a7-aaf9-fd5713777e2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatVar"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "74675db9-ecb6-3439-b0eb-1cf34ee9772a",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Ashlee+Runolfsdottir",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1016758278,\n  \"message\" : \"Officiis totam corrupti. Occaecati voluptas provident odit quia id neque. Repudiandae quod alias vel enim enim excepturi. Corrupti deleniti ducimus rerum voluptatem. Quae sunt adipisci.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "74675db9-ecb6-3439-b0eb-1cf34ee9772a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "26aacfb5-3014-37c4-98ae-a8880adb0b31",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Tory+Hackett+DDS",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1928139319,\n  \"message\" : \"Illum quod voluptas aut. Doloremque assumenda est autem quia. Esse qui nemo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26aacfb5-3014-37c4-98ae-a8880adb0b31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "0fbeb63e-6434-3342-a8d4-6c1ef8871b5e",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Keenan+Koepp",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 388410805,\n  \"message\" : \"Vel occaecati et blanditiis dolores. Atque officiis qui nihil magnam magnam voluptas. Veniam dolore sunt blanditiis. Recusandae aliquam quaerat.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fbeb63e-6434-3342-a8d4-6c1ef8871b5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "4ce57872-7fa1-324a-8e7a-9aa8b974aedc",
    "name" : "Returns value of the specified float variable",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats/Isis+Spencer",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 6.408448443792872E37\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ce57872-7fa1-324a-8e7a-9aa8b974aedc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatVar",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "0f90f9f7-9f1f-3a30-85d9-9390148cf13c",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 430368958,\n  \"message\" : \"Magni est velit ut temporibus deserunt. At est magnam. Aut animi odit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f90f9f7-9f1f-3a30-85d9-9390148cf13c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "d0e754a6-7a9f-367d-b713-e0c49e0905e2",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 324145401,\n  \"message\" : \"Enim illo sed. Earum tenetur tempora eaque. Et maxime et nesciunt aut optio aspernatur commodi. Porro molestiae voluptas vel deleniti fuga voluptates modi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0e754a6-7a9f-367d-b713-e0c49e0905e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "373fbba1-281c-302b-8e52-55e5ab104d1b",
    "name" : "Returns the name and value of all (single-precision) float variables in the stra...",
    "request" : {
      "urlPath" : "/device/strategy/vars/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Leigh Dach\",\n  \"value\" : 1.141196852476897E38\n}, {\n  \"name\" : \"Toby Kreiger\",\n  \"value\" : 1.0048217818552172E38\n}, {\n  \"name\" : \"Mr. Shayne Daugherty\",\n  \"value\" : 1.796684222809447E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "373fbba1-281c-302b-8e52-55e5ab104d1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "0f9ff3ee-38ec-3666-8379-9ce5c50608b3",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2023-01-20T15%3A58%3A36.450426Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 559307539,\n  \"message\" : \"Modi enim quo nihil. Et quibusdam laudantium qui. Laborum voluptate error repellat totam. Id omnis qui nam. Et non velit ea.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f9ff3ee-38ec-3666-8379-9ce5c50608b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "6638c228-48a5-3f51-ab65-8edfb23bb707",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2022-04-21T14%3A45%3A36.450328Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1752243113,\n  \"message\" : \"Est nemo hic dignissimos voluptas. Reiciendis enim fuga inventore maiores eaque voluptatum voluptates. Voluptas consequatur ipsa placeat unde soluta nemo ex.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6638c228-48a5-3f51-ab65-8edfb23bb707",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "8fcdf01e-cdcf-345b-9383-030dd99cfd82",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2022-07-19T15%3A11%3A36.450229Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 549887578,\n  \"message\" : \"Nesciunt tempora aliquam voluptatem facere. Neque sit laboriosam. Consequuntur ducimus ipsam hic quibusdam. Repudiandae dicta consequatur qui non. Molestiae minima delectus voluptatibus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fcdf01e-cdcf-345b-9383-030dd99cfd82",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "e4c502c7-b3fe-3edb-be17-70814656c4be",
    "name" : "Returns current value of the specified down timer",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers/2022-03-25T15%3A44%3A36.450132Z/value",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1.3957141794633325E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4c502c7-b3fe-3edb-be17-70814656c4be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDownTimerValue",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "2811cc27-119f-3ba6-8b45-a7bc79e22761",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 717746136,\n  \"message\" : \"Et ut sed laboriosam quis aliquam asperiores velit. Nihil repudiandae consequatur dolore. Non minima amet tenetur consequatur commodi dolorum. Ut recusandae ducimus illo fuga cupiditate rem. Architect\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2811cc27-119f-3ba6-8b45-a7bc79e22761",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "af4b6a7f-c3bb-356a-aee9-6fcebd58ebcc",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 641429940,\n  \"message\" : \"Repudiandae rem tempore. Rerum ut sit porro. Provident velit voluptas odit ea pariatur. Unde qui hic quisquam soluta id. Alias doloribus ut ipsam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "af4b6a7f-c3bb-356a-aee9-6fcebd58ebcc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "b4b096bf-f09e-3b9d-83e2-e2548ea1e2da",
    "name" : "Returns the name and current value of all down timers in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/vars/downTimers",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Talia Mayer\",\n  \"value\" : 2.6924439861532625E38\n}, {\n  \"name\" : \"Mrs. Hyun Green\",\n  \"value\" : 2.0281705443525505E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4b096bf-f09e-3b9d-83e2-e2548ea1e2da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDownTimerVars",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "6eb95647-023a-321b-a962-f1ad5a79c0c7",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Bryce+Russel/591794459",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 583606451,\n  \"message\" : \"Qui sed sed explicabo nostrum deserunt occaecati quas. Culpa et repellat quis maxime ipsum est. Accusantium fuga voluptas pariatur sit ab tenetur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6eb95647-023a-321b-a962-f1ad5a79c0c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "df044ab9-0e97-3c0e-aefb-9495421b7301",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Mora+Bogisich/1339889328",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 44427153,\n  \"message\" : \"Delectus recusandae asperiores aut rerum exercitationem totam. Ea numquam rerum velit perferendis ea consectetur numquam. Molestias rem in. Commodi non sed.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df044ab9-0e97-3c0e-aefb-9495421b7301",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "5a2aa67f-13e7-3293-bb0f-a5cb9c351069",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Seth+Metz/1156908999",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2053750430,\n  \"message\" : \"Sint voluptas non quisquam sunt animi asperiores. Id accusantium quo eum et autem provident. Facere ducimus dolores nisi aut recusandae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a2aa67f-13e7-3293-bb0f-a5cb9c351069",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "a72a5ec1-6a0c-3450-9e56-8a1128c0579d",
    "name" : "Write specified table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Sidney+Kulas+MD/1055472620",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a72a5ec1-6a0c-3450-9e56-8a1128c0579d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringTableElement"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "7c9f9143-da1f-3dba-b9de-97d0844c9bc4",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Nannie+Jerde+IV/92399994",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 975799773,\n  \"message\" : \"Sint enim deserunt voluptas. Minus veniam tenetur incidunt quibusdam omnis. Pariatur architecto possimus. Voluptatibus ex est. Corporis et omnis cupiditate corporis a.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c9f9143-da1f-3dba-b9de-97d0844c9bc4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "b2f0b249-a8fe-3902-b192-739c5f73c2f3",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Erin+Keebler+Jr./908319408",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1680389066,\n  \"message\" : \"Qui ut non magnam temporibus et quasi adipisci. Ut placeat magnam sequi ut ipsum amet tempore. Et voluptatum esse facilis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2f0b249-a8fe-3902-b192-739c5f73c2f3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "3a56ab0e-9bfe-311f-a59d-c557020d6639",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Jodie+Ortiz/696210406",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 535298097,\n  \"message\" : \"Accusantium quam eum est qui possimus nihil. Quia corporis nulla. Quisquam atque nihil omnis. Necessitatibus quasi voluptatem et inventore cum aut et. Repellat sed vel consectetur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a56ab0e-9bfe-311f-a59d-c557020d6639",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "d2f1fb3c-4b17-3feb-99ab-de1e51d93a12",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Bibi+Goodwin/1422226929",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"td2kj9qvdxw3tphcyhx8tygsb72ae7o3osbpd98uvxzp1cyvwcypt94dmhtzhs0jxjx80s33yj0uf0500h5z41fiar35oujn2nz2xvnlwqdbgzasc8fa7vkqyw91nn2qtr9mn03ovegfrm4xqmaqdp5x6xaz3qwu90nur4o4tw47txg1kvouz04kitqismzn9piwcn7iszev1gibx1d6ds6pa4yn90h3zed0fltcq40m0elrgvzkecu6y7tqygv4uk8vrl9glych91b5bigmfayu72jydapo9nwlhp9pr9xslnilt00ofl4kfb88juq12tkex0mz2uwus27fu890rohzzclwu44mg88lqt8a440ko4mo9vpwe9lcvdx9i0h7js43g2byok1ugvers8r0hqvk3log6qudrsp70hvcixjjmhh0a07urc94g8n9bdf27wa66rjutkzkrzx3r2ucts9q470vlnr01cv8l08e3osg6l3gry7iqcwkwhmnm6rp06x9xsefjd2xvvi7qti2rxitwu2slsvr0j68b3kt54ep3sg1kmvyjbiqhveggnrahp9uz1k5d4mwme30hy7qf9m1d4ohz0v8rb7aw6c1r1s370sul4lnrdszyf7znj2y6uq5nupjvoour1vq84xlui4deq8vcgplbplrfcf918w5db70mvswgbguz99tljobch87petttai3yw2drot7a6vyb3d9as3me0b24m9mfttxhxafgok7clkxokca4bu9dtno5hpcjyqe3yo0zy5w5lo74xz9374p12r88npotskn0bz2xu1deymtxt1tq2eojnn345785fbsjcpv21nfu84li127um4vd801p12yv0vtw5wunmnt6n8tugqb2g6bout1sr59z2td8yd8i\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2f1fb3c-4b17-3feb-99ab-de1e51d93a12",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "maxLength" : 1024,
                "type" : "string",
                "description" : "The value of a string; string width (max length) for each string variable is defined in the strategy"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "14a8b4a0-88e8-3729-bafb-41c05f957842",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Rocky+Lubowitz",
      "method" : "POST"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 656669890,\n  \"message\" : \"Qui eligendi ut. Quia vel iusto est velit illum nihil quos. Dicta velit et sint quia repellendus. Omnis nihil aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14a8b4a0-88e8-3729-bafb-41c05f957842",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "9ea5bcd6-48ce-358f-ba84-1471058571db",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Lucilla+Barton",
      "method" : "POST"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1745408387,\n  \"message\" : \"Maxime repudiandae ea voluptatum. Facere odio illo ut vel illo. Minus odit sint.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ea5bcd6-48ce-358f-ba84-1471058571db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "a70edee2-ea28-3838-bcfe-9359aaf5193a",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Hortensia+Bartell+II",
      "method" : "POST"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2114146778,\n  \"message\" : \"Vel consequatur asperiores natus vel et dolorum. Id ratione totam quis aut aut aperiam blanditiis. Dignissimos praesentium animi aut ullam repellendus aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a70edee2-ea28-3838-bcfe-9359aaf5193a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "6d4409b7-5665-3ffb-8678-01a8721aacb5",
    "name" : "\"Write a range of table elements\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Leo+Murphy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"errorCode\" : 1738945410,\n  \"message\" : \"Occaecati facilis at sunt rerum ut optio eum. Sunt vero voluptate suscipit voluptas error. Atque dignissimos nulla et omnis mollitia molestiae. Nesciunt voluptatem sit. Harum eum ad fugiat.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d4409b7-5665-3ffb-8678-01a8721aacb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -23 ** The string you passed is longer than the width of PAC Control string variable or table element you are writing to.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "52464dc5-3936-3838-a0a9-52bb0155e8e6",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Nakia+Batz+Jr.",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1887147200,\n  \"message\" : \"Minima consectetur est et qui tempora sed. Est est tempore rerum et iusto consequuntur quia. Ratione aspernatur voluptatem et et fugit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52464dc5-3936-3838-a0a9-52bb0155e8e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "12acd64f-3d1e-3dbe-86d1-52b6911f98d4",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Valeri+Schowalter+MD",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1635993793,\n  \"message\" : \"Eius neque corrupti sunt consequatur et voluptas sint. Et qui qui molestias. Autem eligendi voluptatibus harum quaerat.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12acd64f-3d1e-3dbe-86d1-52b6911f98d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "4579c370-5283-320d-a0e3-22ea8655ca33",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Mr.+Gus+Kutch",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 745399092,\n  \"message\" : \"Ducimus voluptatum tempore et. Non animi quas dignissimos officiis. Numquam repudiandae sed ut aliquam recusandae sed dolor.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4579c370-5283-320d-a0e3-22ea8655ca33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "fd639e46-22b2-3e6d-9523-a8effec41c3f",
    "name" : "\"Read a range of table elements from the specified string table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings/Boris+Schaden+DDS",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"z9rbjfarqoifhg70tfhpqtvt1jzadwfkychjkt8pnz285aaligzup4oq7ncf79qdl05u9m9axx1hncebgcuxh4rnp7iy5lzbw1cpuqmozwgnqy6d0nyosiafcfjruj3haf92rat32p\", \"ycan1f2lviekres1g3oqavmp29mii0wap0kuc561xckjnak7su9hfzndtwbbnhlg23ldvotkf18cuwg25yiulqcrrk5wuit4j1v5azyhp54uqsw1mm8m5rrqu289c22ujdp28w6y7t8ejijzxji8foem009p8jtref8bilpmdwr0o67q5sw5qrenkpqpbzydzsqtzsjmralnu0maue6l6e6x5e1lx3oe47aw8jg0ukeokoltff5worg55eeo5rs5gtwvk8j6g9uzrdnoauk9sz6dniozvv6qf5pnk9pam6unih602kj9de9vbkup4n2p5r047ruqxmhtuq4oz7jjjkhm4v3so3oemwltiqqlf68c2tish7784huioc0yefjqubsvxyt3xhxmvjk8szjwthjz2mr3zjd8plaai7690nuh16yo87bq5stemur4iawbn5m1k8itihehjvz89oog5yktk7sxoiohwz019jxxdqefxqsdzl9nsykak5fqwpjekox5xi2cr6hnsf9yfy2abq1cypry7hrszzc7qjj6iarhceyvrgb3hsyv2akyc86kul9gdkmncywc4az00fdqghcvo4jtw7xjf1wnc2c3vsh1pxv1iln9smv0o0aoeq70j72afmlyxnwnipn\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd639e46-22b2-3e6d-9523-a8effec41c3f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTable",
          "schema" : {
            "type" : "array",
            "items" : {
              "maxLength" : 1024,
              "type" : "string",
              "description" : "The value of a string; string width (max length) for each string table is defined in the strategy"
            }
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "651bfa42-ca5b-3e00-87fc-0e6f8e401af7",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 826932289,\n  \"message\" : \"Ipsum alias minima rerum voluptatem enim molestiae. Sit sint voluptate. Consequuntur ea reiciendis nihil ut sunt atque. Cumque ut at est sunt. Molestiae et perferendis voluptas cumque.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "651bfa42-ca5b-3e00-87fc-0e6f8e401af7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "ed29b6f2-6ad5-3970-9590-5930d88f9084",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 400024977,\n  \"message\" : \"Nisi eligendi eum molestias et. Quidem et ullam enim veniam qui. Quos exercitationem et quidem fuga.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed29b6f2-6ad5-3970-9590-5930d88f9084",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "ab2f36a8-787a-3880-a947-cd01b2ced8c2",
    "name" : "Returns an array of the name and length of all the string tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/strings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 1480539604,\n  \"name\" : \"James Osinski\"\n}, {\n  \"length\" : 1604392155,\n  \"name\" : \"Caren Douglas\"\n}, {\n  \"length\" : 444000751,\n  \"name\" : \"Miss Candace Krajcik\"\n}, {\n  \"length\" : 2044043360,\n  \"name\" : \"Darren Connelly Jr.\"\n}, {\n  \"length\" : 1588710428,\n  \"name\" : \"Carman Parker V\"\n}, {\n  \"length\" : 474234945,\n  \"name\" : \"Nakita Green\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ab2f36a8-787a-3880-a947-cd01b2ced8c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStringTables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "615ec37d-af55-330d-875d-18b31d648283",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Mellissa+Moen/1148024626/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1985446716,\n  \"message\" : \"Qui quia ullam non nam necessitatibus aliquam repellendus. Optio consequatur enim qui. Eveniet veritatis aliquid tempore et et vitae rerum. Laboriosam dignissimos nulla natus. Sed ad at molestias quib\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "615ec37d-af55-330d-875d-18b31d648283",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "be045407-335d-3f97-8b49-589078e2bd04",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Sol+Anderson/462655776/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 250304073,\n  \"message\" : \"Maxime temporibus enim veritatis repellat. Sint quo rerum. Voluptatem est quod exercitationem. Deserunt sed voluptas vitae delectus occaecati. Inventore repudiandae voluptas expedita voluptatem sit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "be045407-335d-3f97-8b49-589078e2bd04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "e8dd58e5-a6ab-338c-8c15-478cd53fa460",
    "name" : "Write specified integer64 table element as string (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Dr.+Edwardo+Volkman/524851611/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1613140177,\n  \"message\" : \"Voluptas ea blanditiis ullam delectus. Et voluptas nam ab ipsa et dolores sit. Odio sed laudantium. Eos suscipit deleniti sed maxime.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e8dd58e5-a6ab-338c-8c15-478cd53fa460",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "807c6125-8be8-3521-bf0f-ca2cbdf36864",
    "name" : "Write specified integer64 table element as string - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Glendora+Koss/1228070007/_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "807c6125-8be8-3521-bf0f-ca2cbdf36864",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableElementAsString"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "e894a842-10fd-3bfb-b13e-b8603924d35c",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Bradly+Kuhlman+III/60770580/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1104443062,\n  \"message\" : \"Et porro sit suscipit. Hic est dignissimos provident sed. Iste neque vel a dolor nesciunt. Sequi ut corrupti aut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e894a842-10fd-3bfb-b13e-b8603924d35c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "1ee85225-910c-39a2-b5dc-65e2579fd50c",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Dallas+Renner/897200085/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1247561803,\n  \"message\" : \"Est atque omnis dolorem soluta. Odio facilis hic placeat nam ratione quod. Nam rerum iusto explicabo ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ee85225-910c-39a2-b5dc-65e2579fd50c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "747515da-ea09-395c-ad22-4efedeab0901",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Elna+Adams/2100857360/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1986698422,\n  \"message\" : \"Quis minus numquam et voluptatum. Accusantium id laborum in temporibus aut sit rerum. Consequatur est nulla id cum eos eius. Placeat quae quo.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "747515da-ea09-395c-ad22-4efedeab0901",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "1bf5b782-7103-32b6-be74-b5e6043945f6",
    "name" : "Read specified integer64 table element as string",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Van+Olson/1536504185/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : \"k5396sp5v6n414tzn9gbq85llu3uhuuqd78dx6f9il2r1r5xsx89mfbdktsnulyf3a6r9meni9y3oayqsv1co6s9rvkl72603l58vpexoafpx5ixz4lky2kr5gbl10me3cj8bbuhgptkcgny6sk1w7m1oxxnzwagoomqco36atgu2ralr9cmtd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1bf5b782-7103-32b6-be74-b5e6043945f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableElementAsString",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "string",
                "description" : "Value of the integer64 variable expressed as decimal string, e.g. \"34359738367\""
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "9bbbc609-6a66-3cee-a452-aa01b945ccae",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Ema+Runte/556433351",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 35616084,\n  \"message\" : \"Tempora libero placeat nemo debitis. Quia in quasi sed dignissimos vitae praesentium saepe. Rerum omnis rem. Dignissimos omnis sed et eum nihil aut. Architecto ut perferendis facilis est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9bbbc609-6a66-3cee-a452-aa01b945ccae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "80b9cc18-1ada-3a56-b74f-589b1361406c",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Vito+Wolff+Sr./1088152830",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1691617516,\n  \"message\" : \"Quos velit recusandae quo quidem corrupti sint aliquid. Nihil quia maxime expedita dignissimos odio. Sed eligendi necessitatibus mollitia iure aut laudantium illum. Quia nisi nisi. Rem repudiandae ad.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80b9cc18-1ada-3a56-b74f-589b1361406c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "9765d354-0991-3eaf-a882-6aa089360397",
    "name" : "Write specified integer64 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Ms.+Josh+Grant/267826951",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 145853822,\n  \"message\" : \"Qui fugit fugiat voluptatem fuga est quia. Qui omnis temporibus accusamus. Rerum rem quibusdam non. Vitae ea vero sit sit quis repellendus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9765d354-0991-3eaf-a882-6aa089360397",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "dc9bf735-0056-3f75-86fa-d8c30687f9cb",
    "name" : "Write specified integer64 table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Otis+Hilll/161059127",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "dc9bf735-0056-3f75-86fa-d8c30687f9cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableElement"
        }
      }
    },
    "insertionIndex" : 99
  }, {
    "id" : "d687554c-0e44-3dcc-bb1b-086e296eabad",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Adan+Veum/1268881532",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1025599443,\n  \"message\" : \"Aperiam eum et eveniet sequi nisi beatae. Tenetur dolores veritatis repellat laborum. Vitae qui omnis. Voluptas delectus aut corrupti sed. Accusantium nobis amet doloribus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d687554c-0e44-3dcc-bb1b-086e296eabad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 100
  }, {
    "id" : "29f833d1-3ea7-3e28-8b09-449bbb7a8e03",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Curtis+Kemmer/2109619468",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 543794961,\n  \"message\" : \"Dolor et deserunt ut veniam laudantium tempora repudiandae. Alias eveniet tempora numquam ad pariatur. Qui velit repellendus eveniet error. Provident modi sit minima.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29f833d1-3ea7-3e28-8b09-449bbb7a8e03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 101
  }, {
    "id" : "b05cd41f-c9c8-344b-b6a4-66c6e564cc20",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Peggie+Volkman/1941090793",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1577294044,\n  \"message\" : \"Veniam qui omnis. Est et ut quas. Quibusdam recusandae minima fuga vel et. Quo qui maiores accusamus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b05cd41f-c9c8-344b-b6a4-66c6e564cc20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 102
  }, {
    "id" : "1956a0b8-c64d-3be7-b2fd-a04aa1b867fb",
    "name" : "Read specified integer64 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Alberto+Schinner/1446436656",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 7249141989868289545\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1956a0b8-c64d-3be7-b2fd-a04aa1b867fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer64 variable",
                "format" : "int64"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 103
  }, {
    "id" : "8d1bee25-0bf2-3f8d-90a6-20b9528894b3",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Ms.+Julieta+Conn/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1036855209,\n  \"message\" : \"Dolore voluptas quia similique ea sit eos consequatur. Temporibus recusandae recusandae rerum amet. Quas in ratione consequatur expedita occaecati modi. Voluptas eos blanditiis tempore sint qui odio d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d1bee25-0bf2-3f8d-90a6-20b9528894b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 104
  }, {
    "id" : "825739e1-a80d-3b8b-b41a-184f7e17eb4c",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Lera+Block/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1298157254,\n  \"message\" : \"Et officia consequatur voluptas. Ut atque quos ab. Porro quam ea voluptas et dignissimos enim ut. Adipisci ab ut. Quia quo quis rerum aspernatur amet quia.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "825739e1-a80d-3b8b-b41a-184f7e17eb4c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 105
  }, {
    "id" : "baf5c672-bc5d-3903-8596-3f7d0195c224",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Nellie+Kuhic+PhD/_string",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 404600529,\n  \"message\" : \"Incidunt accusantium facere dolor suscipit vero nesciunt rem. Rem alias tempore repellendus illum. Expedita sed voluptate tempore qui sed quia omnis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "baf5c672-bc5d-3903-8596-3f7d0195c224",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 106
  }, {
    "id" : "fc6338c4-146f-3c76-aebd-ac3776c93e99",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Jann+Ullrich/_string",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "fc6338c4-146f-3c76-aebd-ac3776c93e99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64TableAsString"
        }
      }
    },
    "insertionIndex" : 107
  }, {
    "id" : "00efef59-a338-3e7f-ac0b-282d07cc330e",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Norris+VonRueden/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 971611266,\n  \"message\" : \"Sapiente eum at error molestiae. Fugit dolores maxime. Animi quis consequatur nobis expedita. Rem ratione qui distinctio iusto ipsa eveniet.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00efef59-a338-3e7f-ac0b-282d07cc330e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 108
  }, {
    "id" : "b59098d6-0532-3fb0-a6de-7dee83adc6a0",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Cecille+Runolfsson/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1101420456,\n  \"message\" : \"Sint numquam quia ducimus voluptatem. Est et nemo quidem et. Id impedit illo. Dicta non corporis iusto.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b59098d6-0532-3fb0-a6de-7dee83adc6a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 109
  }, {
    "id" : "8814c3cf-9ab6-34ff-ae14-3b14655728e1",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Everette+Harvey/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1427076287,\n  \"message\" : \"Saepe occaecati illum numquam voluptas unde. Quas eum deserunt. Ullam aut nulla animi non. In consequuntur est fugit. Quia quibusdam repudiandae dolorum ipsa et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8814c3cf-9ab6-34ff-ae14-3b14655728e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 110
  }, {
    "id" : "f9703b27-90d3-3293-93ce-2f1c0944ce18",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Eddy+Mitchell/_string",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"m1xier31mhz9d8zgwvbzt0np8j10h2decu42132q77gow5udjifqz5n7czqjpqbhtra4qb4mzf576s9ajugag23y77xn5hiq14o6lwvlxzbfi1u9h9br18nz3tmeuwi6o1pkdqp\", \"j9lefdpnaouxywyxfvnfl3zu8s4t8v209m8yjmiubwcnaotikvvldhmr8fgbt3fwtuji5yg0gv07twxgx295qg7s69nt0ds7rchfq5pefev0k03defg008znl8k38k7hgynhq8zb68vowchsnfdibmg3x5o1va9hjts80ddfg3opytgexmon60rx67nz7qi3sth8i6\", \"zegy5pdtdbi76egfx7yxkugoloqn9fh6250745xjssavjcbhhfbs5\", \"ue4vwv0ovf6qwmuc35ydfvu5c7cwhaw5z08z7qpxa05wbuasvv186qde39fr49hv3wfe9qd4q6sy042ul954e3cfos3ty68enl0owkh82ezpphu3oqdi4pxcoqlt\", \"7zp4175okua2ib\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9703b27-90d3-3293-93ce-2f1c0944ce18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64TableAsString",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "string",
              "description" : "Value of the integer64 variable expressed as a decimal string. E.g. \"34359738367\""
            }
          }
        }
      }
    },
    "insertionIndex" : 111
  }, {
    "id" : "0608bc5b-7b67-3233-ada6-8b4d711ced9e",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Lamar+Kshlerin",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1057073798,\n  \"message\" : \"Cum nobis quis nostrum pariatur nam. Laborum dolorem consectetur. Sequi quo qui maiores. Inventore sed dolorum est. Qui et pariatur reprehenderit qui velit eum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0608bc5b-7b67-3233-ada6-8b4d711ced9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 112
  }, {
    "id" : "fa1ae785-18e1-3936-a088-4fd8e22fae9e",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Sana+Nienow+III",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1696363962,\n  \"message\" : \"Accusantium et sunt ducimus voluptatem. Molestiae quod autem est eos. Qui molestiae velit consectetur nihil temporibus exercitationem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa1ae785-18e1-3936-a088-4fd8e22fae9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 113
  }, {
    "id" : "bf5e5a54-cb60-3e31-9f21-0982126a5d50",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Major+Schuster",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1425588752,\n  \"message\" : \"Ea dolorem porro atque explicabo beatae distinctio. Et aliquam doloribus iusto nobis. Sit fuga pariatur voluptas est repellat et nihil. Ut suscipit est voluptates dolore id sunt. Dolores praesentium a\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bf5e5a54-cb60-3e31-9f21-0982126a5d50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 114
  }, {
    "id" : "d9743c50-4388-3904-9c25-f1f364cbbe24",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Gilda+Frami",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d9743c50-4388-3904-9c25-f1f364cbbe24",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt64Table"
        }
      }
    },
    "insertionIndex" : 115
  }, {
    "id" : "002b05b9-64b5-31f8-9085-40f5567a1ab6",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Wayne+MacGyver",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1595247310,\n  \"message\" : \"Voluptatum enim accusantium suscipit sed iste ab consequuntur. Autem similique quisquam error adipisci. Quis perspiciatis nihil ut necessitatibus quia omnis fugit. Iure totam et consectetur rerum sint\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "002b05b9-64b5-31f8-9085-40f5567a1ab6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 116
  }, {
    "id" : "3558d650-75be-3140-a260-ba960f490866",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Traci+Pouros",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1133050596,\n  \"message\" : \"Accusantium in repellendus alias. Debitis quaerat accusantium. Non est sapiente repudiandae ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3558d650-75be-3140-a260-ba960f490866",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 117
  }, {
    "id" : "03251950-883c-3c78-b179-176af94e238f",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Ilana+Dooley",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 267311698,\n  \"message\" : \"Qui nihil expedita voluptatum quis aut est. Magnam sapiente et earum. Porro ad voluptas. Fugiat corrupti et. Sit est reiciendis aut facere harum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03251950-883c-3c78-b179-176af94e238f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 118
  }, {
    "id" : "236b8cd8-8980-3eb5-aff7-1102b4d92794",
    "name" : "\"Read a range of table elements from the specified integer64 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s/Ezra+Bailey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 8779492986019499846, 8138447723284725337, 2084962761088364656 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "236b8cd8-8980-3eb5-aff7-1102b4d92794",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Table",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "description" : "Value of the integer64 variable",
              "format" : "int64"
            }
          }
        }
      }
    },
    "insertionIndex" : 119
  }, {
    "id" : "55c9741d-aade-361f-afaa-a35f0deb555b",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 506793745,\n  \"message\" : \"Autem ea molestiae expedita omnis ut commodi. Qui qui qui. Aut repudiandae sapiente tenetur cupiditate. Similique nihil quo asperiores aut placeat suscipit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55c9741d-aade-361f-afaa-a35f0deb555b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 120
  }, {
    "id" : "f5963ede-679d-3ebe-8cbf-3d3b91ec8734",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 576858924,\n  \"message\" : \"At aliquid itaque ea ipsum. Nobis laudantium pariatur deleniti nulla commodi. Ipsam et quia laborum. Error error enim autem non.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f5963ede-679d-3ebe-8cbf-3d3b91ec8734",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 121
  }, {
    "id" : "14c2cea0-6201-389f-a160-830f245ea1b5",
    "name" : "Returns an array of the name and length of all the integer64 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int64s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 1796939682,\n  \"name\" : \"Rubie Heathcote\"\n}, {\n  \"length\" : 1371607789,\n  \"name\" : \"Cecil Runte III\"\n}, {\n  \"length\" : 844560260,\n  \"name\" : \"Rod Ritchie\"\n}, {\n  \"length\" : 955795164,\n  \"name\" : \"Dr. Chrissy Stroman\"\n}, {\n  \"length\" : 386101493,\n  \"name\" : \"Fidel Smitham\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14c2cea0-6201-389f-a160-830f245ea1b5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt64Tables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    },
    "insertionIndex" : 122
  }, {
    "id" : "0519a75a-7a1c-37a1-9f6a-ec8da2e43f91",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Min+Harvey+IV/1331024948",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 58158990,\n  \"message\" : \"Et recusandae nihil ipsum et ipsa veniam laudantium. Excepturi velit quidem quos aliquid. Magnam deleniti suscipit. Doloribus ut quibusdam sit. Dolorem itaque aspernatur id fugit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0519a75a-7a1c-37a1-9f6a-ec8da2e43f91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 123
  }, {
    "id" : "dda51d0d-a987-3668-926c-7e5f236e63fc",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Mr.+Lorenzo+Stiedemann/1485150206",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1903404389,\n  \"message\" : \"Nisi omnis asperiores dolorem debitis dolores velit iure. Quidem nesciunt magni impedit. Laboriosam dolorum assumenda. Minima maiores aut molestias ut velit aut. Officia ad ab veritatis aut molestiae \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dda51d0d-a987-3668-926c-7e5f236e63fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 124
  }, {
    "id" : "1c649ee1-2c84-3e2c-8f81-8599f2a00efa",
    "name" : "Write specified integer32 table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Kieth+Robel/349234689",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 288779145,\n  \"message\" : \"Delectus libero ratione enim dicta distinctio ab molestiae. Aut similique qui repellat non. Velit molestiae libero. Culpa omnis neque inventore provident.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c649ee1-2c84-3e2c-8f81-8599f2a00efa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 125
  }, {
    "id" : "b7f867b0-8ad6-3d36-8be7-f5b527363309",
    "name" : "Write specified integer32 table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Wyatt+Effertz+Jr./1314151798",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "b7f867b0-8ad6-3d36-8be7-f5b527363309",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32TableElement"
        }
      }
    },
    "insertionIndex" : 126
  }, {
    "id" : "4d30f4d1-b61a-391a-8f00-70f2f576bca7",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Mr.+Shiela+O%27Keefe/222215183",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 147828197,\n  \"message\" : \"Porro sunt qui aut nihil enim tempora. Omnis sed aperiam. Provident distinctio ipsa est aperiam enim. Repellendus sit autem dolorem voluptatem ut nam. Animi ut aut soluta non voluptatum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d30f4d1-b61a-391a-8f00-70f2f576bca7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 127
  }, {
    "id" : "44199835-63fe-3e9a-9782-1af54087b9dc",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Eugenia+Barton/1219285317",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1575615218,\n  \"message\" : \"Nam iusto eius. Voluptas non est accusantium quia dolorem est. Rerum totam dolor blanditiis. Voluptas fugit ipsum rerum quisquam cumque libero amet. Sit molestiae molestiae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44199835-63fe-3e9a-9782-1af54087b9dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 128
  }, {
    "id" : "78000f1c-6314-3ae7-83e5-2a7fdc0d4f73",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Edmundo+Bogisich/773159373",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1042378315,\n  \"message\" : \"Magni sit iure cumque quos quis repellat voluptas. Laboriosam quae sit. Quisquam rerum blanditiis qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78000f1c-6314-3ae7-83e5-2a7fdc0d4f73",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 129
  }, {
    "id" : "cc1cc93a-099d-33e8-9c75-4295fd38e22a",
    "name" : "Read specified integer32 table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Nathanael+Larkin/1794018778",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 338917117\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc1cc93a-099d-33e8-9c75-4295fd38e22a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32TableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "integer",
                "description" : "Value of the integer32 variable",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 130
  }, {
    "id" : "8958d927-05e9-32de-a647-3e3e63ecd2f2",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Mrs.+Shawnna+Wolff",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1710450211,\n  \"message\" : \"Inventore vitae non velit qui enim. Voluptatem et quaerat fuga aspernatur. Harum et rerum eos architecto totam ut aut. Perferendis totam in.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8958d927-05e9-32de-a647-3e3e63ecd2f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 131
  }, {
    "id" : "34c6c1fc-bfd4-3d7d-a675-53d30491a0e5",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Marquis+Homenick",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1288145584,\n  \"message\" : \"Dolore architecto nemo optio. Optio perspiciatis eligendi architecto veniam et laboriosam. Magni non enim.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34c6c1fc-bfd4-3d7d-a675-53d30491a0e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 132
  }, {
    "id" : "ecbbea0a-7e89-3a11-909d-26a57156e115",
    "name" : "\"Write a range of table elements\" (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Kenna+Bashirian",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1142845155,\n  \"message\" : \"Veniam maxime ut ut deserunt laboriosam esse exercitationem. Dolore ut iste est nobis laborum error. Nihil dolorum mollitia temporibus dolorum vitae et. Sint animi quia beatae quasi impedit. Et alias \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecbbea0a-7e89-3a11-909d-26a57156e115",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 133
  }, {
    "id" : "0ef9c2d7-c0d5-3fbd-8dd1-9be5c9772a0a",
    "name" : "\"Write a range of table elements\" - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Marvel+Metz",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0ef9c2d7-c0d5-3fbd-8dd1-9be5c9772a0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeInt32Table"
        }
      }
    },
    "insertionIndex" : 134
  }, {
    "id" : "3be6f933-3fc3-3659-b157-abcb516a8cd5",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Lyman+Dach+V",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1053353084,\n  \"message\" : \"Ad molestiae quia voluptatem expedita quo voluptas. Distinctio qui sunt ut. Consequatur suscipit aut et beatae nemo qui suscipit. Repellat cum odio officiis eius placeat. Aut eius dolores est iste exc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3be6f933-3fc3-3659-b157-abcb516a8cd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 135
  }, {
    "id" : "cf9fdd0d-f40b-3fb1-9f03-cd908c2c679c",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Thuy+Flatley+PhD",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 744850356,\n  \"message\" : \"Reprehenderit vel deleniti voluptatum officia. Ut doloribus hic vel. Minus quis sit. Rerum laborum cumque provident tempora natus quis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cf9fdd0d-f40b-3fb1-9f03-cd908c2c679c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 136
  }, {
    "id" : "42fc3e41-6c35-383c-89a1-37d511aafc04",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Louann+Tillman",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 320863312,\n  \"message\" : \"Facilis fugit alias dolor. Dolores error dolore. Rerum saepe voluptas maxime et corporis sit voluptas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "42fc3e41-6c35-383c-89a1-37d511aafc04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 137
  }, {
    "id" : "9fbb2e0b-a4ea-3300-876a-c28d1ef1a55a",
    "name" : "\"Read a range of table elements from the specified integer32 table\"",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s/Laticia+Klein",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 1707094590, 647359120 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9fbb2e0b-a4ea-3300-876a-c28d1ef1a55a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Table",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "integer",
              "description" : "Value of the integer32 variable",
              "format" : "int32"
            }
          }
        }
      }
    },
    "insertionIndex" : 138
  }, {
    "id" : "106f74e1-1e1c-33e2-8cb1-10cc1c1c6599",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 224859877,\n  \"message\" : \"Explicabo ducimus repellat aliquid aliquam. Praesentium nesciunt est quia dolore animi. Accusantium ea doloribus aut et error quasi placeat. Est qui qui omnis perspiciatis et consequatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "106f74e1-1e1c-33e2-8cb1-10cc1c1c6599",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 139
  }, {
    "id" : "2150666c-2a0b-3cf7-b096-2f51d9bf3087",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 246164051,\n  \"message\" : \"Et fuga harum nobis omnis delectus. Eum amet id aperiam possimus quibusdam tenetur est. Tenetur hic deleniti omnis nam. Perspiciatis quis libero deleniti libero aut id.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2150666c-2a0b-3cf7-b096-2f51d9bf3087",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 140
  }, {
    "id" : "52ddec73-e66f-38d0-a4f2-2f133823da33",
    "name" : "Returns an array of the name and length of all the integer32 tables in the strat...",
    "request" : {
      "urlPath" : "/device/strategy/tables/int32s",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 1205353347,\n  \"name\" : \"Alisha Schuppe\"\n}, {\n  \"length\" : 338498452,\n  \"name\" : \"Ted Stracke PhD\"\n}, {\n  \"length\" : 70051801,\n  \"name\" : \"Darius Welch\"\n}, {\n  \"length\" : 223204124,\n  \"name\" : \"Daryl Denesik\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52ddec73-e66f-38d0-a4f2-2f133823da33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readInt32Tables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    },
    "insertionIndex" : 141
  }, {
    "id" : "2917530b-379a-3a6f-ad4f-b8e117c4bf08",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Sharonda+Runte+DVM/851676097",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1158403474,\n  \"message\" : \"Sit ea natus et ea molestiae sequi facere. Aperiam enim id quod ex quam officia. Consequatur ipsum natus qui magnam iste molestiae laborum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2917530b-379a-3a6f-ad4f-b8e117c4bf08",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 142
  }, {
    "id" : "34b61bb2-8489-3427-a506-dfff048db1a3",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Leatha+Upton+III/933718956",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 646396561,\n  \"message\" : \"Laboriosam dignissimos sit magnam odio aliquid quis porro. Sapiente eum harum alias magnam ut. Dignissimos odio qui non quaerat.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "34b61bb2-8489-3427-a506-dfff048db1a3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 143
  }, {
    "id" : "e3e9e67a-eedd-3833-9015-5c93b4295408",
    "name" : "Write specified table element (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Shawn+Johns/1635829479",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1179928418,\n  \"message\" : \"Explicabo provident velit tempora ut accusantium cumque quaerat. Sed fuga non. Aut praesentium porro quam eius voluptatum maiores qui.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3e9e67a-eedd-3833-9015-5c93b4295408",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 144
  }, {
    "id" : "5459e29d-84fa-340e-9fae-dbb25ed66581",
    "name" : "Write specified table element - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Treena+Orn/1369636926",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5459e29d-84fa-340e-9fae-dbb25ed66581",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatTableElement"
        }
      }
    },
    "insertionIndex" : 145
  }, {
    "id" : "12554548-cbb7-3ab3-bca3-4810d348e175",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Lemuel+Lowe+IV/1687759238",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1541321539,\n  \"message\" : \"Harum temporibus voluptatem laborum. Sit est nemo ut et sunt accusantium. Ut cum adipisci voluptatibus officiis blanditiis. Commodi rerum similique necessitatibus rem quia. Est alias voluptatibus dese\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12554548-cbb7-3ab3-bca3-4810d348e175",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 146
  }, {
    "id" : "1c7e4a45-8c5b-3716-a67a-b99b02cb843b",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Jesenia+Gutmann+DDS/884428490",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1164376214,\n  \"message\" : \"Quasi voluptas exercitationem excepturi. Ut eos minus labore enim. Et mollitia sequi voluptate.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1c7e4a45-8c5b-3716-a67a-b99b02cb843b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 147
  }, {
    "id" : "e796190d-6aa3-3d65-bf60-b35e58b9f9d3",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Madalyn+Walter/1629309815",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 507873909,\n  \"message\" : \"Pariatur mollitia est exercitationem. Et earum voluptates accusamus ipsam adipisci consequatur tempora. Porro et sint reiciendis ullam. Sapiente eos in aperiam sed est repellendus voluptatem. Ipsum si\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e796190d-6aa3-3d65-bf60-b35e58b9f9d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 148
  }, {
    "id" : "271c675b-7e86-3850-a1d8-2926a326be2e",
    "name" : "Read specified table element",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Mrs.+Luis+Mante/828005689",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 5.645914205928402E37\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "271c675b-7e86-3850-a1d8-2926a326be2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTableElement",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 149
  }, {
    "id" : "f66eefb8-2dac-3aaf-9352-3c9d3d76ba01",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Marry+Marvin",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1819918267,\n  \"message\" : \"Dignissimos dolorem omnis. Saepe a debitis culpa reprehenderit assumenda nemo. Cupiditate atque illo omnis autem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f66eefb8-2dac-3aaf-9352-3c9d3d76ba01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 150
  }, {
    "id" : "87e3e1df-ce87-32d1-b344-019aea10bbd8",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Evelyne+Friesen",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1967125487,\n  \"message\" : \"Id est velit consectetur. Porro qui voluptates animi explicabo praesentium tempora. Quod eos et est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87e3e1df-ce87-32d1-b344-019aea10bbd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 151
  }, {
    "id" : "dff8e438-8035-353c-aa31-1bacca888cca",
    "name" : "Write table elements (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Pansy+Marks",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 922740871,\n  \"message\" : \"Porro impedit rerum labore recusandae ipsum iure. Quae voluptates ut aliquid culpa. Voluptas odio hic. Velit aut atque quis totam officiis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dff8e438-8035-353c-aa31-1bacca888cca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 152
  }, {
    "id" : "f0f38389-5903-311f-80de-b42d8be3918c",
    "name" : "Write table elements - 200",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Jarvis+Franecki",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f0f38389-5903-311f-80de-b42d8be3918c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeFloatTable"
        }
      }
    },
    "insertionIndex" : 153
  }, {
    "id" : "1d420252-241d-3fc8-8294-63c2833310de",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Dr.+Judson+Gerlach",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1040706885,\n  \"message\" : \"Quam ea dolores voluptate alias qui reprehenderit. Itaque aut dicta laboriosam animi totam. Explicabo voluptatum rerum et ratione corrupti. Et occaecati sint nihil aut aut. Nesciunt mollitia nam et na\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d420252-241d-3fc8-8294-63c2833310de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 154
  }, {
    "id" : "2c1e1777-cc35-39b8-9210-4cef1abcf731",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Ms.+Cletus+Hamill",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 2125353624,\n  \"message\" : \"Autem est est provident quisquam illo doloremque et. Aut veniam voluptatem est. Ab ut cum dolor odit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c1e1777-cc35-39b8-9210-4cef1abcf731",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 155
  }, {
    "id" : "06e12466-0377-3635-875e-db619aa95e17",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Mr.+Shon+Treutel",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2130018180,\n  \"message\" : \"Neque sed dolorem dignissimos. Voluptates ut eaque. Nostrum accusantium officia.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06e12466-0377-3635-875e-db619aa95e17",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 156
  }, {
    "id" : "93af015b-abf8-3327-be63-90054db18c00",
    "name" : "Read table elements",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats/Gaylord+Gulgowski",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ 2.5176222468215256E38, 1.1984939657687646E38 ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "93af015b-abf8-3327-be63-90054db18c00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTable",
          "schema" : {
            "type" : "array",
            "items" : {
              "type" : "number",
              "description" : "Value of the float variable",
              "format" : "float"
            }
          }
        }
      }
    },
    "insertionIndex" : 157
  }, {
    "id" : "961a9d2d-df31-393e-ba29-9bb48c4e8be9",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1923098786,\n  \"message\" : \"Doloremque quam et est rerum sint exercitationem. Dolore beatae sit harum aut et nam. Sed iste alias dicta. Et voluptatum quis minus voluptatem fuga quam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "961a9d2d-df31-393e-ba29-9bb48c4e8be9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 158
  }, {
    "id" : "485cccc8-8c39-3a53-b01a-5ce9c10bff8b",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 258132059,\n  \"message\" : \"Est rem voluptatem qui nihil enim voluptas omnis. Mollitia eos blanditiis accusamus est placeat. Ea molestiae molestiae dolorem ut.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "485cccc8-8c39-3a53-b01a-5ce9c10bff8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 159
  }, {
    "id" : "3a613782-b22b-393d-96d5-5d7ef3fb2b2a",
    "name" : "Returns an array of the name and length of all the float tables in the strategy",
    "request" : {
      "urlPath" : "/device/strategy/tables/floats",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"length\" : 9445522,\n  \"name\" : \"Robbie Torphy\"\n}, {\n  \"length\" : 873747919,\n  \"name\" : \"Nerissa Jenkins II\"\n}, {\n  \"length\" : 1461757356,\n  \"name\" : \"Cleveland Robel\"\n}, {\n  \"length\" : 2092346216,\n  \"name\" : \"Jene Marquardt\"\n}, {\n  \"length\" : 393943751,\n  \"name\" : \"Rachael Hilpert\"\n}, {\n  \"length\" : 1730922326,\n  \"name\" : \"Grover Volkman IV\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a613782-b22b-393d-96d5-5d7ef3fb2b2a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readFloatTables",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/TableDef"
            }
          }
        }
      }
    },
    "insertionIndex" : 160
  }, {
    "id" : "aa5d5308-9d00-30e1-a2c1-779ed3544b03",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Luther+Lemke+IV/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 1673243662,\n  \"message\" : \"Possimus eum sed expedita necessitatibus consequuntur. Est alias iste quia quo corporis enim molestiae. Rerum ea cum omnis autem omnis. Non et ut dolorem est.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa5d5308-9d00-30e1-a2c1-779ed3544b03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 161
  }, {
    "id" : "ee51448c-43ae-3c32-a7bb-76e9f50dd31b",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Kylee+MacGyver/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 351396600,\n  \"message\" : \"Voluptatem similique repellat distinctio fuga. Nesciunt beatae reprehenderit odio consequuntur laborum deserunt animi. Non id at et nihil.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee51448c-43ae-3c32-a7bb-76e9f50dd31b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 162
  }, {
    "id" : "280db16a-fd2b-3280-8c41-b814b8a22f50",
    "name" : "Sets the value of the specified digital output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Muoi+Welch/state",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1526333309,\n  \"message\" : \"Commodi aperiam qui. Sapiente velit molestiae alias sit ullam. Minima voluptatem quo. Rerum ratione fugiat omnis quis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "280db16a-fd2b-3280-8c41-b814b8a22f50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 163
  }, {
    "id" : "d01fedda-1ce2-3ccd-832a-aa472c066431",
    "name" : "Sets the value of the specified digital output point - 200",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Alvera+Murazik/state",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d01fedda-1ce2-3ccd-832a-aa472c066431",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeDigitalOutputState"
        }
      }
    },
    "insertionIndex" : 164
  }, {
    "id" : "290df2f2-2af0-3a2f-95ea-734ca5b214f1",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Harry+Willms/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 126479836,\n  \"message\" : \"Consequatur sit fuga ad. Temporibus provident soluta nobis voluptatibus commodi consequatur dignissimos. Praesentium aspernatur ad et omnis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "290df2f2-2af0-3a2f-95ea-734ca5b214f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 165
  }, {
    "id" : "6af5ae02-a76b-3eaf-91f0-3b0ffcf41c10",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Israel+Reichert/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 660465777,\n  \"message\" : \"Libero architecto distinctio qui aut ex. Non hic perferendis exercitationem quo magni. Voluptatem corrupti nobis porro accusantium aperiam deserunt id.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6af5ae02-a76b-3eaf-91f0-3b0ffcf41c10",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 166
  }, {
    "id" : "13d6326e-0b6a-325e-b8ac-1f4c97c8cc5a",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Stewart+Pfannerstill+Sr./state",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 113570355,\n  \"message\" : \"Eaque magni porro accusantium excepturi quas. Earum qui et repellat quia. Non doloribus id maiores.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "13d6326e-0b6a-325e-b8ac-1f4c97c8cc5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 167
  }, {
    "id" : "33cbecf0-7094-3988-8abd-b5e3c8837b06",
    "name" : "Returns the specified digital output point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs/Debera+Shanahan/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "33cbecf0-7094-3988-8abd-b5e3c8837b06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalOutputState",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "boolean",
                "description" : "State of a digital point (true = on, false = off)"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 168
  }, {
    "id" : "889a4192-8ec5-36bc-ae10-a0d9ebcff545",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1573884543,\n  \"message\" : \"Facilis quo nihil. Minus fugit excepturi vitae doloremque dolores. Suscipit inventore aut praesentium.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "889a4192-8ec5-36bc-ae10-a0d9ebcff545",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 169
  }, {
    "id" : "0b62ad23-e986-38b2-bfb1-36f4b3ad7e29",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 447007098,\n  \"message\" : \"Fugit pariatur est. Pariatur quia nulla qui nemo et perspiciatis voluptatem. Autem vitae odit eum optio quia aut quibusdam. Maiores porro quam enim.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b62ad23-e986-38b2-bfb1-36f4b3ad7e29",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 170
  }, {
    "id" : "7958ba3b-c2b4-3b82-a914-3c4e75e87d51",
    "name" : "Returns the name and state (true = on, false = off) of all digital output points...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Lara Hand DDS\",\n  \"value\" : false\n}, {\n  \"name\" : \"Gloria Bruen\",\n  \"value\" : true\n}, {\n  \"name\" : \"Analisa Wisoky\",\n  \"value\" : false\n}, {\n  \"name\" : \"Mr. Jarod Gutmann\",\n  \"value\" : true\n}, {\n  \"name\" : \"Matthew Harris MD\",\n  \"value\" : false\n}, {\n  \"name\" : \"Shyla Anderson IV\",\n  \"value\" : true\n}, {\n  \"name\" : \"Chelsea Dibbert PhD\",\n  \"value\" : false\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7958ba3b-c2b4-3b82-a914-3c4e75e87d51",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalOutputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DigitalPointStateVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 171
  }, {
    "id" : "05091c22-4f0f-372b-9819-6f9834adcf02",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Winter+Hilll/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 771979633,\n  \"message\" : \"Enim delectus voluptas consequatur itaque omnis eos. Quia quia eaque accusamus doloremque aut culpa ea. Alias dolorem sunt officiis. Eaque in minima ducimus in animi. Hic tenetur aut doloremque eum ve\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05091c22-4f0f-372b-9819-6f9834adcf02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 172
  }, {
    "id" : "bc7d99c1-71e8-348e-979d-fbe04e2997e8",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Dalton+Kiehn/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 613951482,\n  \"message\" : \"Esse debitis hic sit illum quo. Non et eligendi voluptate sed ea deserunt. Labore veniam quis voluptatem quo perspiciatis dolorem distinctio. Reprehenderit sed et.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc7d99c1-71e8-348e-979d-fbe04e2997e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 173
  }, {
    "id" : "67df90ba-2a10-36e7-8288-6fa461299830",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Luvenia+Grant/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1873369024,\n  \"message\" : \"Quis est molestiae eius nam. Autem minus et molestias excepturi maiores minus corrupti. Dolores ut veniam voluptatum omnis enim enim. Ipsa saepe totam delectus aperiam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67df90ba-2a10-36e7-8288-6fa461299830",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 174
  }, {
    "id" : "aa31b87e-9da3-3108-8fd9-1b982f491594",
    "name" : "Returns the specified digital input point's state (true = on, false = off)",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs/Charmain+Nikolaus/state",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa31b87e-9da3-3108-8fd9-1b982f491594",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalInputState",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "boolean",
                "description" : "State of a digital point (true = on, false = off)"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 175
  }, {
    "id" : "50e80275-5e95-31df-8cad-b6f153cf1eef",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 290412877,\n  \"message\" : \"A et aliquid ipsam dolor id. Dolorem excepturi molestiae quia. Dolore minima dignissimos saepe ea accusamus reiciendis cupiditate. Sequi quo culpa. Nihil quas sed ea.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50e80275-5e95-31df-8cad-b6f153cf1eef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 176
  }, {
    "id" : "3f61bdbd-f5e0-31fd-810a-443547272e2e",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 138300368,\n  \"message\" : \"Consequatur doloremque ducimus consequuntur quos optio. Similique sed voluptatum atque. Quisquam accusamus a. Harum sint repellat est nisi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f61bdbd-f5e0-31fd-810a-443547272e2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 177
  }, {
    "id" : "e13b2907-afdb-3f93-9653-00c31bbb52bf",
    "name" : "Returns the name and state (true = on, false = off) of all digital input points ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/digitalInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Johnnie Olson\",\n  \"value\" : false\n}, {\n  \"name\" : \"Mrs. Amee Marquardt\",\n  \"value\" : false\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e13b2907-afdb-3f93-9653-00c31bbb52bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDigitalInputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/DigitalPointStateVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 178
  }, {
    "id" : "40a2c4b3-dcda-3615-824f-f16051b38f47",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Stewart+Mayer/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 431110629,\n  \"message\" : \"Recusandae consequatur rem aliquam. Et libero quam ut. Velit vel ratione. Quia adipisci incidunt magnam.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "40a2c4b3-dcda-3615-824f-f16051b38f47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 179
  }, {
    "id" : "88c916eb-f02e-36bd-8190-024e63f898b2",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Neva+Bins/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1618234332,\n  \"message\" : \"Molestias consequatur dolor. Maxime animi corrupti. Itaque recusandae aspernatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88c916eb-f02e-36bd-8190-024e63f898b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 180
  }, {
    "id" : "d8ec8487-99e3-3c4f-8078-c6dabde33924",
    "name" : "Sets the value of the specified analog output point (application/json)",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Dr.+Dinah+O%27Keefe/eu",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 836980129,\n  \"message\" : \"Labore commodi dolor. Odit recusandae nisi laboriosam cum. Sit aperiam nostrum ut minima eveniet consectetur. Voluptate in temporibus ducimus nesciunt minus debitis impedit.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d8ec8487-99e3-3c4f-8078-c6dabde33924",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 181
  }, {
    "id" : "ad54e0f6-f52e-38cb-bfd4-54a6c81eeb7d",
    "name" : "Sets the value of the specified analog output point - 200",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Emory+Hodkiewicz/eu",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ad54e0f6-f52e-38cb-bfd4-54a6c81eeb7d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "writeAnalogOutputEu"
        }
      }
    },
    "insertionIndex" : 182
  }, {
    "id" : "41090778-4055-3dc3-9576-285c8a6a1792",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Linwood+Lynch/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 342251294,\n  \"message\" : \"Et omnis quia autem ea. Nulla et cum soluta eos. Culpa illo nihil. Eveniet a eligendi accusamus. Rerum est laboriosam dolor ut assumenda eligendi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "41090778-4055-3dc3-9576-285c8a6a1792",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 183
  }, {
    "id" : "95be5513-5bf1-3f43-900d-214a67c942dd",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Norbert+Pouros/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1131248252,\n  \"message\" : \"Doloribus aperiam quo ab et officia temporibus. Vel omnis sit consequatur tempora dolorem culpa. Dignissimos et dolor maiores. Maxime soluta facilis ut et et ad id. Officia autem laudantium dolorem vo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95be5513-5bf1-3f43-900d-214a67c942dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 184
  }, {
    "id" : "6e5a4df3-f407-3df2-8a55-142183e5b058",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Naida+Rowe+III/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 247038826,\n  \"message\" : \"Saepe ut nostrum dolorem alias dicta. Eligendi iste est alias culpa et iste voluptatem. Cum quibusdam voluptas.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e5a4df3-f407-3df2-8a55-142183e5b058",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 185
  }, {
    "id" : "91a6c04e-1f7f-3060-83ea-89d62685e68b",
    "name" : "Reads the value in engineering units (EU) of the specified analog output",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs/Dena+Graham/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 2.116026408272151E38\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91a6c04e-1f7f-3060-83ea-89d62685e68b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogOutputEu",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 186
  }, {
    "id" : "07daf0e3-2957-3dab-a583-aa6d8fecbbe8",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 614571411,\n  \"message\" : \"Ratione sunt voluptas vel aut odio sint. Ab aut est dolor enim facilis. Molestiae praesentium amet provident. Ut eveniet veniam impedit nostrum non.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07daf0e3-2957-3dab-a583-aa6d8fecbbe8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 187
  }, {
    "id" : "c23d9768-2b96-315d-ac98-9518f212a604",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1858087571,\n  \"message\" : \"Soluta et totam saepe vero et perferendis. Totam ea quo. Quae et et possimus molestiae molestias dolores. Molestiae consequatur voluptas. Ad fugiat animi.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c23d9768-2b96-315d-ac98-9518f212a604",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 188
  }, {
    "id" : "4c2b126a-4341-3028-a627-66366a114ff5",
    "name" : "Returns the name and engineering units (EU) for all analog output points in the ...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogOutputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Asia Barton\",\n  \"value\" : 2.661664552727415E38\n}, {\n  \"name\" : \"Mittie Ruecker\",\n  \"value\" : 3.0159176491109995E38\n}, {\n  \"name\" : \"Daryl Hoeger\",\n  \"value\" : 2.8645947972123164E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c2b126a-4341-3028-a627-66366a114ff5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogOutputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 189
  }, {
    "id" : "aa9699b5-144b-3e1d-880c-e3c95fb6eb33",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Nia+Johns/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorCode\" : 377675628,\n  \"message\" : \"Excepturi sapiente voluptas maxime tempore dolor voluptate ut. Expedita nihil eos nihil ex error. Rerum eos sapiente ea voluptates. Animi voluptates possimus quos tempore reiciendis qui. Temporibus nu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa9699b5-144b-3e1d-880c-e3c95fb6eb33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -29 ** The tag (variable, table, timer, I/O point, etc.) you requested exists on the controller but does not match the data type for this endpoint.  ** -28 ** The tag (variable, table, timer, I/O point, etc.) does not currently exist on the controller. Check the tag name and the controller's status. ** 404 ** Endpoint does not exist. Check URL.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 190
  }, {
    "id" : "80d6f2cb-0eb7-3a52-a9f6-6128ae2a754a",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Colette+Reichel/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1604359630,\n  \"message\" : \"Cum quaerat sit nobis nisi illum. Pariatur et id enim. Qui quam reprehenderit eveniet totam. Recusandae eligendi nam qui. In reiciendis rerum.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80d6f2cb-0eb7-3a52-a9f6-6128ae2a754a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 191
  }, {
    "id" : "f3dcd700-737d-3dce-b586-f26d4c5a9852",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Cesar+Russel/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1791471039,\n  \"message\" : \"Vero debitis quis maiores. Velit dolores voluptatem autem qui dignissimos rem. Commodi voluptatum totam quia. Deleniti quo qui aut est. Quo molestiae rem.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f3dcd700-737d-3dce-b586-f26d4c5a9852",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 192
  }, {
    "id" : "d694296a-7c3a-3ce2-8925-431794b5a8ee",
    "name" : "Reads the value in engineering units (EU) of the specified analog input",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs/Cameron+Welch/eu",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : 1.7467272305822332E37\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d694296a-7c3a-3ce2-8925-431794b5a8ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogInputEu",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "number",
                "description" : "Value of the float variable",
                "format" : "float"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 193
  }, {
    "id" : "cd290789-305a-3f05-9b4e-2557b861be8b",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1228287151,\n  \"message\" : \"Vero vitae nam necessitatibus molestiae quia quidem ullam. Esse commodi culpa aut sit voluptates fugit. Inventore rem sit. Voluptatibus quos odio nemo quia nihil ut quasi. Vel soluta ab nesciunt vero \"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd290789-305a-3f05-9b4e-2557b861be8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 194
  }, {
    "id" : "f9c34f2b-629b-39aa-86b9-3c354de6e2f4",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2018412349,\n  \"message\" : \"Quis ipsam asperiores sapiente doloremque. Molestias ullam cupiditate accusantium aut. Ducimus non dolorem voluptas inventore. Doloremque vel placeat totam voluptatum voluptatibus.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9c34f2b-629b-39aa-86b9-3c354de6e2f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 195
  }, {
    "id" : "4d356a32-2e82-39a7-be7d-e0bd7e1f6744",
    "name" : "Returns the name and engineering units (EU) for all analog input points in the s...",
    "request" : {
      "urlPath" : "/device/strategy/ios/analogInputs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"name\" : \"Joesph Jacobson\",\n  \"value\" : 2.841061360742044E38\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d356a32-2e82-39a7-be7d-e0bd7e1f6744",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readAnalogInputs",
          "schema" : {
            "type" : "array",
            "items" : {
              "$ref" : "#/components/schemas/FloatVar"
            }
          }
        }
      }
    },
    "insertionIndex" : 196
  }, {
    "id" : "c8d083e2-0dcb-3871-ace6-e7736a1d531c",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1924778736,\n  \"message\" : \"Ipsum quam hic quo eaque autem. Et occaecati necessitatibus nihil porro. Natus atque vitae.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c8d083e2-0dcb-3871-ace6-e7736a1d531c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 197
  }, {
    "id" : "05d66465-2b54-3e11-9cff-a15dff712d4d",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 2033278684,\n  \"message\" : \"Vitae quo quis id et sit omnis. Nisi voluptatum dolores. Ut consequatur et. Ullam sit provident. Ipsum velit et sed.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "05d66465-2b54-3e11-9cff-a15dff712d4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 198
  }, {
    "id" : "b4924313-fd92-38cc-9f48-743abe90634f",
    "name" : "Returns the name, date, time, and CRC of the strategy currently in the controlle...",
    "request" : {
      "urlPath" : "/device/strategy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"date\" : \"2022-10-20T13:08:36.43531Z\",\n  \"strategyName\" : \"Dee Johnston\",\n  \"crc\" : \"suu50y98vagiaaflzfjq6tv0h34p18ssmnc2vk82yaw97ecc1uo39gy686iv7ecbiyd0mxw94y4k87oczra21gtyerho8i5aeo1202644640pwbm70pnzqndcajgf0783dd3qpunx9cd\",\n  \"runningCharts\" : 1043106642,\n  \"time\" : \"2022-08-15T14:19:36.435408Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4924313-fd92-38cc-9f48-743abe90634f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readStrategyDetails",
          "schema" : {
            "type" : "object",
            "properties" : {
              "crc" : {
                "type" : "string"
              },
              "date" : {
                "type" : "string"
              },
              "runningCharts" : {
                "type" : "integer",
                "format" : "int32"
              },
              "strategyName" : {
                "type" : "string"
              },
              "time" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 199
  }, {
    "id" : "38b449a3-b312-3d42-8e61-7ed8ba91916a",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorCode\" : 1854049967,\n  \"message\" : \"Consequuntur ipsa eius sunt. Modi molestiae distinctio est. Dicta iure aut consequatur.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38b449a3-b312-3d42-8e61-7ed8ba91916a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -104 ** Invalid key ID/value in HTTP header. Before using the API on this device, you must create at least one key ID/value via the URL /admin/keys. Then use one of those in your HTTP header for Basic Authentication.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 200
  }, {
    "id" : "de8eb08b-5c6c-330f-870d-e35cc199e46d",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorCode\" : 1407882728,\n  \"message\" : \"Officiis quasi occaecati id blanditiis. Recusandae omnis voluptatem. Fugiat earum placeat velit error adipisci voluptatem. Omnis molestiae sunt dolorem enim sunt reiciendis.\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de8eb08b-5c6c-330f-870d-e35cc199e46d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "required" : [ "errorCode", "message" ],
            "type" : "object",
            "properties" : {
              "errorCode" : {
                "type" : "integer",
                "description" : "Details: ** -1 ** Invalid or no strategy. Use PAC Control to download strategy logic. ** -3 ** Buffer overrun or invalid length. The number or range of table indicies you specified exceeds elements in the PAC Control table. ** -8 ** Invalid data. Check format of data written. Compare to what's read for the same endpoint. ** -12 ** You've passed a table index that is less than zero or greater than the length of the table minus 1. ** -13 ** The value you passed to write is outside of the valid range for the PAC Control data type you're writing to. For example, if you specified the value 999999999999999 for an integer32 (since integer32 data types must be in the range: -2147483648 to 2147483647). ** -17 or -20 ** The controller is busy with another task, for example, downloading a new strategy. Try again later. ** -36 ** Endpoint is not defined. ** -109 ** Attempting to write without write permissions. Check /admin/keys settings. ** -13019 ** Invalid endpoint. Check syntax of the URL (e.g. did you use 'ev' instead of 'eu'). ** 400 ** Before using the API on this device, you must first change the default user name and password via the URL /admin/keys. Use the default User Name: 'admin' and Password: 'password' to log ininitially.",
                "format" : "int32"
              },
              "message" : {
                "type" : "string"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 201
  }, {
    "id" : "a65050e0-5641-3bb9-95fa-f10200c90fd8",
    "name" : "Returns controller's type; firmware version; both mac addresses; and uptime in s...",
    "request" : {
      "urlPath" : "/device",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"mac2\" : \"umxoh552ng6yzkv0\",\n  \"mac1\" : \"svh7bfw73jab83sdj8hclmsnumsv87mrrxjfe5beh4f0q7fdvgq86fath093pt1dh31b3jpwevxcoff1we13g6ix1lo6k1fdx2bljbke643lpr8mkf2sf5k6262yticb36c8ubuf5qd42oijlnwdzqcg1iahnzl4g3w7gul0cec9jh55ulcdgkqgpatk85ori4wks\",\n  \"upTimeSeconds\" : 752351977,\n  \"firmwareDate\" : \"2022-05-10T15:22:36.434887Z\",\n  \"controllerType\" : \"16cp07g7zprn8kt35f1kkgwzacngipjglcrbbkcwrlhubuwdfo1mdfzwnz1rap8vaauu652vmpkewp7ahfw3xwi1puzah9mq\",\n  \"firmwareTime\" : \"2022-09-27T15:45:36.434934Z\",\n  \"firmwareVersion\" : \"04oglrg9bggk5iefkquvxnp7hwutqf2kf0kwe9rjmx0c4ekazcqif93i1ojsxmnbc04gy3g0zuuemy9hmroppu0v4rj6y21467uavzi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a65050e0-5641-3bb9-95fa-f10200c90fd8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "readDeviceDetails",
          "schema" : {
            "type" : "object",
            "properties" : {
              "controllerType" : {
                "type" : "string"
              },
              "firmwareDate" : {
                "type" : "string"
              },
              "firmwareTime" : {
                "type" : "string"
              },
              "firmwareVersion" : {
                "type" : "string"
              },
              "mac1" : {
                "type" : "string"
              },
              "mac2" : {
                "type" : "string"
              },
              "upTimeSeconds" : {
                "type" : "integer",
                "format" : "int32"
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 202
  } ]
}