{
  "mappings" : [ {
    "id" : "355fa563-a180-4a05-b47a-56f599dac94a",
    "name" : "Retrieves the consented UserInfo and other claims about the logged-in subject (e...",
    "request" : {
      "urlPath" : "/v1/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Kendall Feest\",\n  \"user_sid\" : \"USF0FedAf5fc241C74FBdd7Dbde050DFcC\",\n  \"last_name\" : \"Zemlak\",\n  \"first_name\" : \"Pasquale\",\n  \"email\" : \"5le65eeejlomuigzny8\",\n  \"url\" : \"https://web.example.mocklab.io/560923\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "355fa563-a180-4a05-b47a-56f599dac94a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:41.967753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserInfo",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The end-user's preferred email address.",
                "nullable" : true,
                "type" : "string"
              },
              "first_name" : {
                "description" : "The first name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The friendly name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "last_name" : {
                "description" : "The last name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ac9c9e1f-6e8e-42a2-9ec5-3f99321a593e",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"access_token\" : \"e1rw7r9qhbbgcft66vxxunc4mg9440vbpl8p1ycycvsfm6tnzntuus5bfi66\",\n  \"access_token_expires_at\" : \"2023-04-02T00:59:44.967Z\",\n  \"refresh_token\" : \"c4b1qyk52f1aq1to7f12vwc3bo3cx31xdyz50brh2dm7nwkwtj4gsfdvmh5feptl02qhcdjr92fa5emabbgl06ya2vemfo5um3s7tydh89cuunafe2tkf6ylp4g9c4m7re19w1sp\",\n  \"refresh_token_expires_at\" : \"2023-10-13T15:34:05.967Z\",\n  \"id_token\" : \"rgq9sn3alt256k5bftg7n7llhnd8nz5c0wvznxfzm5l2rwhwc7q5ubhr6pxvjkl69ay2fov8leo1g4q76fgq7zbf364bzasvm9tnse78o7nyga7frl04ovyu6gtkjlhb76jyp1n5p1uuoz555wxxnnjqh2wh6pxigb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ac9c9e1f-6e8e-42a2-9ec5-3f99321a593e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:41.967475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateToken",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "Token which carries the necessary information to access a Twilio resource directly.",
                "nullable" : true,
                "type" : "string"
              },
              "access_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id_token" : {
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "Token which carries the information necessary to get a new access token.",
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b49436e0-6419-4f7e-b6ca-1b1a913331de",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/device/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"user_code\" : \"0ap5u6m9ziv58vnaah8c2wcity61is91g2jxwk8rxfdk66dfuxgpk8bsplkhwp7lgwdc53tuowxuhp8rwcyj4j8kl22r40f3tn1mlmuvaybgwiz8lrn2lfeo9qsyaz9f3ldnk5eo5deqmb6thsstz5dy0gqc34a2liqaqcmsps\",\n  \"device_code\" : \"5dw63f50rlfcgciqluxstowlwwrhkhs62punhltsak1pbuaky4jylhsier6f5chjfdh4km9q5gi8b3xdo34jfvrkc1pna1re0hw67q0gp5hshlv74skz415ag6pfpc\",\n  \"interval\" : 8381261235249646104,\n  \"verification_uri_complete\" : \"zidgtxbnpurif45ayqc36980xs9dqrlhho0b6fk76enxc657mezx3imz1nqucynvd25ll44uq6q2cwxoq\",\n  \"verification_uri\" : \"https://web.example.mocklab.io/799010\",\n  \"expires_in\" : 7692472737570066059\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b49436e0-6419-4f7e-b6ca-1b1a913331de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:41.967322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDeviceCode",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "nullable" : true,
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The expiration time of the device_code and user_code in seconds.",
                "format" : "int64",
                "nullable" : true,
                "type" : "integer"
              },
              "interval" : {
                "description" : "The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.",
                "nullable" : true,
                "type" : "integer"
              },
              "user_code" : {
                "description" : "The verification code which end user uses to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri" : {
                "description" : "The URI that the end user visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri_complete" : {
                "description" : "The URI with user_code that the end-user alternatively visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5dd81557-0654-4374-98e4-f72f9157a446",
    "name" : "Fetches public JWKs",
    "request" : {
      "urlPath" : "/v1/certs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : { },\n  \"url\" : \"https://web.example.mocklab.io/344221\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5dd81557-0654-4374-98e4-f72f9157a446",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:41.967104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCerts",
          "schema" : {
            "properties" : {
              "keys" : {
                "description" : "A collection of certificates where are signed Twilio-issued tokens.",
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "250cf4be-6b28-485b-98b8-466970bb17c2",
    "name" : "Fetch configuration details about the OpenID Connect Authorization Server",
    "request" : {
      "urlPath" : "/v1/.well-known/openid-configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response_type_supported\" : [ \"2t41o4md6wj\", \"juvd8lbfn4obmo3sy8n036jkoybkqhz2jl2oksl3\", \"mbg3ge4x67bwj85pkkoynp4x5h79ja0wd5n4lo30u\", \"osu6uuj3sckk0g59kyw3en2jgqx956ny8ct7ni309uzosvhfhmxjig5n262859vxzkhpv1dgm68mma4603tuc535r9ked8ufz9a6020rcerlgsl8534g9bl3bvm3k6yq6p8c6a1dq3oho2d63tjv8iq2u5z7qtvchlc7jlg6qejnuf4zrtkalmbm3ah\", \"g0qtmza5ah1zsbd3iib54paw6rjahcemgkzdlcqlbawkf3mmogpapnhv5cs\", \"314iverpmvkwu8p8k53lxcc8c1jaain0lbtndk2s1ua4fo492i2gslzbk7w\", \"ogm51ymh5nahpi5c6g7x0rdl0m8zug5axbcgvgjvo1acuodvjwue0e5fit2d33\", \"hzfvjn8bvk8aeeidqzax38420zt8dlwfnfktrzbm4tgsrj35ljp7c7f20v7pdwhip4hovz3k3hhwuu9lnnpbs1c3fczgw7q70omicsqx0setrlsgce7t3un42u6ncxpqrlqt6tqgyi8mz7p7rynpuwcj41\" ],\n  \"revocation_endpoint\" : \"hw35g7is63gzjkxdhje1ixr04ef24u5b7unul22q8ywl4rmblyinaou5mlcc1jdzgilfei47mpzxm325rwvsk61j50uuho3wnstxur9ks7pil2jvxn3g0fxbby1w70rwq5nwalp3icjpsy329zcfw32fa\",\n  \"scopes_supported\" : [ \"5sbgivvydjc0h60refu84kulam6jbv9mih2cof8rbx1tx1y4mk68n17cl4uqmc6enz197lil4dal07e4jt7u8xnee\" ],\n  \"issuer\" : \"05d9rk32po29pygbr9w07i5vr0h75cokxqth7tyf6yj2odyzegei8wqjjtilyqbazsk3rt1nlc9e9ftpv4ucou1hl5dwsxyo10muge8n87\",\n  \"subject_type_supported\" : [ \"th2vfbsh57fj6k85g7lna6sl921ep6kekwmzmdqjvldxy9v1wf5xungfwvgxeg2x100tfuaqdpeah61n44asu90zh3c1psln14nynaw5eeyqpqmn9nyo0ndj0p8m\", \"202hyrux7197c89g99w2gd379hjjo8yc71re5bcqf8uhehbmysfulh4nnzpvfnh0k2e5uk1as1m9ix933dyh6wm43l3lydwbvp62saysctr0ovowhthpfyeh96d3twc\", \"jnp6xhcgbqps3j7rqawp2ghhz2e5gsfv2lk8m68w7uec3zlf6g1oefnpz69po5we4yjle19zmrko7rxu70stgzbaq0\", \"vdnovfssd853l0xhz4dgbpt86s4c98c8vc54xaktilijp0rft81ob4sygwzy4rq105nocakhvhrkruihi\", \"0wo4ef0vjhdu124ibf31lxpr2rprymvg6exe411p8kxjlej7hg7ep7cj5tic1j37xhjjzwvrusn9ax4dz4edvctthg344hqlefkgikxxoy8cs268gzwq0c\" ],\n  \"url\" : \"https://web.example.mocklab.io/783537\",\n  \"authorization_endpoint\" : \"oqv4lev1ik1p8\",\n  \"userinfo_endpoint\" : \"mo2cafsk117u1b82fb1xplb2d5kpziqwizg4jp24eyt9y1ifzijvglg6b77ti57fkabt00vl6ravf269gbh1gd51bcjqqixmkqpls2enutddcbfpdtjs5y3e01jdtww4zh0bf7fdxlo5\",\n  \"device_authorization_endpoint\" : \"7ctfumpe4gzuoq22qdj3ro13pq48rkrm18fjrbdtc0nyuulv4cjr1x38ojd4xxidg0afoiqw36fyg8x5qirk120qcnjuy6sw9wkj1xzvxlxspp2pw\",\n  \"claims_supported\" : [ \"n6fslop5arjr0bvpdawn8p1kq92mdaa6w22he50x6o590ppm2fln2vz4z3q5bzptvyhoiyzups9ngu9\" ],\n  \"id_token_signing_alg_values_supported\" : [ \"fz0ybs9jel2thnctpxyoqgm5f1f8tlihqymolk0ab73qox991kwvilo6poyqdw148w4ps31yelaanfrwq0rq6ryzdtohnt9k6zq4i65ptm5kscn2t919vr99vc1w183tnmocanczsv9x5mvja2coj3039g14d2qokrua1vom4fuex4ms18xq44j9h1kle\" ],\n  \"jwk_uri\" : \"https://web.example.mocklab.io/829980\",\n  \"token_endpoint\" : \"ij60iglad3aqpoey2hx4xhdvsoqv74s2gpiqot9o7yljyiyv06buuwcwdrz72ozrgxg4232q7po9c9w9d3vtddvghbmr8imzclyevvw9sgf0zox92eb7ui67dt76kvarhzy0grxs4qvs9r5u5l1v851c1x2gq62qn8mz0aqk9t3c8foojd89neb8p2ox374x6wdxgwuc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "250cf4be-6b28-485b-98b8-466970bb17c2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:10:41.966945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchOpenidDiscovery",
          "schema" : {
            "properties" : {
              "authorization_endpoint" : {
                "description" : "The endpoint that validates all authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "claims_supported" : {
                "description" : "A collection of claims supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "device_authorization_endpoint" : {
                "description" : "The endpoint that validates all device code related authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "id_token_signing_alg_values_supported" : {
                "description" : "A collection of JWS signing algorithms supported by authorization server to sign identity token.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "issuer" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "jwk_uri" : {
                "description" : "The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "response_type_supported" : {
                "description" : "A collection of response type supported by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "revocation_endpoint" : {
                "description" : "The endpoint used to revoke access or refresh tokens issued by the authorization server.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "scopes_supported" : {
                "description" : "A collection of scopes supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "subject_type_supported" : {
                "description" : "A collection of subject by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "token_endpoint" : {
                "description" : "The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "userinfo_endpoint" : {
                "description" : "The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}