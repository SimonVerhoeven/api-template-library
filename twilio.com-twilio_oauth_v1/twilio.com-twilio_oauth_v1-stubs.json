{
  "mappings" : [ {
    "id" : "2da919b3-12e9-4bdb-a41d-b043a7a1d1bc",
    "name" : "Retrieves the consented UserInfo and other claims about the logged-in subject (e...",
    "request" : {
      "urlPath" : "/v1/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Raymundo Reichert\",\n  \"user_sid\" : \"US734F4cE4cB5c144cc85e836b9C1903fe\",\n  \"last_name\" : \"Jerde\",\n  \"first_name\" : \"Rodrigo\",\n  \"email\" : \"j1sdo8fwtuu4l5341b5x99ukkably\",\n  \"url\" : \"https://web.example.mocklab.io/303693\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2da919b3-12e9-4bdb-a41d-b043a7a1d1bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:31.2013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserInfo",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The end-user's preferred email address.",
                "nullable" : true,
                "type" : "string"
              },
              "first_name" : {
                "description" : "The first name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The friendly name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "last_name" : {
                "description" : "The last name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "09cd5c93-de66-4746-acbe-e14b7ee48b9e",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"access_token\" : \"ddv96xgrno779anxue8afng5q5skmrta8rylqdzw7xnlhb70rt73ecq2sxwkw3k25xmsd9m5uxf8ej10o3aerpjmuogbxfeg4otjtjmfw99jsc0a5chya8jz1rpddfjawsam\",\n  \"access_token_expires_at\" : \"2023-02-28T13:18:42.2Z\",\n  \"refresh_token\" : \"5nt\",\n  \"refresh_token_expires_at\" : \"2023-04-16T10:59:15.2Z\",\n  \"id_token\" : \"s0jyqmyvoxjf5l2t7jlibbde2ckv6uxrjer70s3ra3quw7cwfwgj50k1dxzq382pna54vpt62srzf5qz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09cd5c93-de66-4746-acbe-e14b7ee48b9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:31.201006Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateToken",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "Token which carries the necessary information to access a Twilio resource directly.",
                "nullable" : true,
                "type" : "string"
              },
              "access_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id_token" : {
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "Token which carries the information necessary to get a new access token.",
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "d97012d4-a15d-41d8-a502-442322d79d67",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/device/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"user_code\" : \"j7ckgzigqg5s92s2gol0fxqi45jrsqh0841ob71qzf0khv9\",\n  \"device_code\" : \"ob9vbv7fe33rmu7equkxnd8n9dg95vprdlh2qggid5cximbzl6c1i9qls5tsvtyz04609f3h2xcjmsvpo44bnsa6ktqqbjr3gnq3t7h02ajik4hb61c7ias5l4cbry36ab35lgc8s8d2vlw0hlkhjvxeabvnucfpp36zxys4t5uvjlp\",\n  \"interval\" : 727487806344114281,\n  \"verification_uri_complete\" : \"mobf9df0kiqepvzbadnb1ys8jjux26ndsacbox7psi02eq4g9d5irupncv5aam7bwu3req37b1akuqnznavuqls1du6cf3x4ah5sukel8r4rds9ktkaape1qs12jmvtatlf8xaxd19to4vp73prrkiblb1n0tfk3\",\n  \"verification_uri\" : \"https://web.example.mocklab.io/540097\",\n  \"expires_in\" : 1847639416677466408\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d97012d4-a15d-41d8-a502-442322d79d67",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:31.200848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDeviceCode",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "nullable" : true,
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The expiration time of the device_code and user_code in seconds.",
                "format" : "int64",
                "nullable" : true,
                "type" : "integer"
              },
              "interval" : {
                "description" : "The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.",
                "nullable" : true,
                "type" : "integer"
              },
              "user_code" : {
                "description" : "The verification code which end user uses to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri" : {
                "description" : "The URI that the end user visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri_complete" : {
                "description" : "The URI with user_code that the end-user alternatively visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "67bff182-3722-45df-876c-cace7dcb153d",
    "name" : "Fetches public JWKs",
    "request" : {
      "urlPath" : "/v1/certs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : { },\n  \"url\" : \"https://web.example.mocklab.io/981384\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67bff182-3722-45df-876c-cace7dcb153d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:31.200615Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCerts",
          "schema" : {
            "properties" : {
              "keys" : {
                "description" : "A collection of certificates where are signed Twilio-issued tokens.",
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "945adae0-47ef-48f9-a01f-202ee108afb4",
    "name" : "Fetch configuration details about the OpenID Connect Authorization Server",
    "request" : {
      "urlPath" : "/v1/.well-known/openid-configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response_type_supported\" : [ \"g8x0nwsryvb0gwf1lavhgl1trjbhwf6mpg83qbl57b79x5egspq1fkq3v4v11a3tij0d2nfdmfphkl4akple9inhqgdj76c0nde2n8fur2iah6e77lcb94gmw0vvsyez9lq1c\", \"9uy7cu99k2jerks6wg9dois8jmtsdkxzaodzi2kb54udj8j6k1gxor8zt7mle1n1p1oulhjtuh7c9s5f7jhkbdehd\", \"pshqx0aiwr4gops44b6x698oeu8m2k72fvgb6013x2wk5tdizn0sak3srbrg8ckijyu0ww6fynurqqie9mghuqzb5s0zybij5gcbqs9jt8krawmxkum6binufb1\", \"b89rx80vgc26ony7lhqisslw1j4zrgygh81v\" ],\n  \"revocation_endpoint\" : \"p4vusnd4ws7oajr5nyyeparlqgy60lxo4dykjoad7v616slqukan234us07agwh1gc3vm2ncgsocb54m8ed6w1arm8iabwx856i4tg8kbxsulehcd845zvrf8ys286nbjl5inz\",\n  \"scopes_supported\" : [ \"9aovk2xvpkhwbz4hzqxxe7erogcj\" ],\n  \"issuer\" : \"d9d0u1duh0ja3t177dhkpo2dzqwejpicj2hl7yvr8ub4bjp98kvmgddquauw9lz5g1\",\n  \"subject_type_supported\" : [ \"cgd30e48xtks7xshuiywprrq4uo9s20e2ga7ly38e9dglnnmdvxh9tsiie\", \"milvxcyopk9vyys9a4lpycm0wi2y9hrtjxls2i\", \"y4sduj4fk5gvoiuzsl9i622v63aqv23mp951m\", \"fn2gx3oe6z078rv0773sefh4v9ldkjqnvnxim5kfi884rd4ln114nrbw2\", \"byvsik79ltj3chwfx6kstn7v4n2bcmzloulwe600l09wdmu6lc4vvge9wu75vz51sy9z7ynkiw1tcwoozugn48e18vwhz8065cydczsaljxaotxgj5n80f9hixmg55kaqt5ifib1xxqm679bypixi9l8oh9coit8vg95ut7tifuj2slcftlcf7ozpj0q68b1xq28\", \"9ufrl8a4jiuqsw04p9mu6uuan7q46h4xcleszrnghgeiz1p8hez8d2mh7dbwj1sublsgsin3prxa7fp7jao0a4ok2cahzsq7xr932kjmwlhnw0acyhqghvqyva7xeqzhjtl949i4kgg3aq4wjjw167y07slbpteg088flp43py7n2ppr\", \"2hjjlt5rykcadb46ybso9i9wsj5m41ip1gwy8mdric8sn9ijolqw474ta5lhs01ok953\", \"325hnygmdr0swt99u6n5j9b5kmbo64494ehw2fciiwh8x9jzatfo26o7oxsapum8wdhfstyb2ajlu2upncwk3rf1y\" ],\n  \"url\" : \"https://web.example.mocklab.io/788525\",\n  \"authorization_endpoint\" : \"f96lw9socg9t1q15veousbt39wb5wch49plhdgiddm2rb9z8txysvmq8k07b8n32c9e5foas95vasbleyyg8i5oq7rpsuu21ws25z72losjbfd77fhbtopbsywpgknku6b52ekt54cfwteacrtm578rb1oucnsskh1eyl0z0jpqe6dk\",\n  \"userinfo_endpoint\" : \"djjdjjwwrvh9ng9lyy6fsam9y5z53boe0hqd7sdvw0bg19fra6ohpg54h\",\n  \"device_authorization_endpoint\" : \"da6rxdxull3ldxzd9ii1onj6yksm9xnoc4ddbwyhy9q5g1xefduwbt245i34seko2e9284j78tf5fdy64m6k4oungafnwmjuivph04z\",\n  \"claims_supported\" : [ \"w9mfjrw2tisy0nz3j52c3gm7uae3z9\" ],\n  \"id_token_signing_alg_values_supported\" : [ \"o5h8r7ovyb\", \"x5xav09l51ho5vckbqcorkf70pkss8ioncs0np5j6tocjn9bc3vhtuteb6wh8nu7fhpaoivwpj6xkv5doghkcv4t3e4qrd36lzyzdfbv7zqmpgkjt4vobdm017o9vidjxqtk8kcocufw1iabystfv2r8rplekarcjfq0ddc3pnkyhd6jyax6bstven1jvli301jw\", \"bg5mlepwm1hkib4ww4f7rnkj0t54mcrad4tqmevi2hrrijup2o1auusfw8achtvzsquh1k2l417u09vn7ofi8vkewtzy3tx0rmhz3aoau86gj52l5qkmcc4xvsgixqsy65pfvq\" ],\n  \"jwk_uri\" : \"https://web.example.mocklab.io/549107\",\n  \"token_endpoint\" : \"m21p7sy3l2lccd132ii7xf6g12kbqp2quo9dhozxb43\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "945adae0-47ef-48f9-a01f-202ee108afb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-23T15:42:31.200449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchOpenidDiscovery",
          "schema" : {
            "properties" : {
              "authorization_endpoint" : {
                "description" : "The endpoint that validates all authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "claims_supported" : {
                "description" : "A collection of claims supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "device_authorization_endpoint" : {
                "description" : "The endpoint that validates all device code related authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "id_token_signing_alg_values_supported" : {
                "description" : "A collection of JWS signing algorithms supported by authorization server to sign identity token.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "issuer" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "jwk_uri" : {
                "description" : "The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "response_type_supported" : {
                "description" : "A collection of response type supported by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "revocation_endpoint" : {
                "description" : "The endpoint used to revoke access or refresh tokens issued by the authorization server.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "scopes_supported" : {
                "description" : "A collection of scopes supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "subject_type_supported" : {
                "description" : "A collection of subject by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "token_endpoint" : {
                "description" : "The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "userinfo_endpoint" : {
                "description" : "The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}