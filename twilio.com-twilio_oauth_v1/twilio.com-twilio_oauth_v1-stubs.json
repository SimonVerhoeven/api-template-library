{
  "mappings" : [ {
    "id" : "5d30f630-14b4-48fd-b1af-20a284c4709a",
    "name" : "Retrieves the consented UserInfo and other claims about the logged-in subject (e...",
    "request" : {
      "urlPath" : "/v1/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Natasha Abshire\",\n  \"user_sid\" : \"USbaE5FEf4E4b1Ea9DDd0E4D74CEa16dDE\",\n  \"last_name\" : \"Fay\",\n  \"first_name\" : \"Kasey\",\n  \"email\" : \"0avsdnbieoil08jhwlfgclfxqzypxc1ibos1y1drbqf10h9t5xhpuj8rp8xa4fixfp42f7frevhpq07gpc5kv30hoi3ffyfesgpbduxhi38eu4f3kv7cgqt\",\n  \"url\" : \"https://web.example.mocklab.io/470065\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d30f630-14b4-48fd-b1af-20a284c4709a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:54.270485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserInfo",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The end-user's preferred email address.",
                "nullable" : true,
                "type" : "string"
              },
              "first_name" : {
                "description" : "The first name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The friendly name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "last_name" : {
                "description" : "The last name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "50a6f5ba-f97b-441a-9fca-511614eae16c",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"access_token\" : \"o1wr\",\n  \"access_token_expires_at\" : \"2022-07-03T15:31:35.27Z\",\n  \"refresh_token\" : \"w8v65uv3zu2o5dvlzqwpg1ugjrxb2ae4vfbu44jaddzriqt9orv0s0ctzcgyompu09bct68tf0ce75lse87r\",\n  \"refresh_token_expires_at\" : \"2023-06-08T22:30:37.27Z\",\n  \"id_token\" : \"28uulp8wfzuyx4nu6vhozemijc3s7u682c7op93tmmiw653td7i9ao3a9waxmdfhq56b86zsugtdz06vvhhoelb9t72664gon5ck6z01gicko8mczmw07oqwlqkc8rx0zedjriqoream\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "50a6f5ba-f97b-441a-9fca-511614eae16c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:54.270187Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateToken",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "Token which carries the necessary information to access a Twilio resource directly.",
                "nullable" : true,
                "type" : "string"
              },
              "access_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id_token" : {
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "Token which carries the information necessary to get a new access token.",
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "1179faa7-3cf3-4052-9fb8-0bc0490efe0a",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/device/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"user_code\" : \"2qjzkf5gusw08t7f1ic12g58n3kevgq4r6zq6gs2kaxdth25dm6mfn74zlxhde9psjyi7qlnjlqceafvk4z6lt8dfyr9e4dnlbkv3omxs5ahray75oi2ghjimv7dg14jj84ui49l23v10vnq9n5ps46j\",\n  \"device_code\" : \"7p4ts99sspls37hj7w5c7un967mgv2x7f1sqf6j2d0yli9ttqh6\",\n  \"interval\" : 6179891971210278292,\n  \"verification_uri_complete\" : \"7fcsijivc18rdo9fqtbm\",\n  \"verification_uri\" : \"https://web.example.mocklab.io/176803\",\n  \"expires_in\" : 1779015518279222415\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1179faa7-3cf3-4052-9fb8-0bc0490efe0a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:54.270039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDeviceCode",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "nullable" : true,
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The expiration time of the device_code and user_code in seconds.",
                "format" : "int64",
                "nullable" : true,
                "type" : "integer"
              },
              "interval" : {
                "description" : "The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.",
                "nullable" : true,
                "type" : "integer"
              },
              "user_code" : {
                "description" : "The verification code which end user uses to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri" : {
                "description" : "The URI that the end user visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri_complete" : {
                "description" : "The URI with user_code that the end-user alternatively visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "656d2baa-7e25-4491-b38a-081c4bb71fb4",
    "name" : "Fetches public JWKs",
    "request" : {
      "urlPath" : "/v1/certs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : { },\n  \"url\" : \"https://web.example.mocklab.io/726728\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "656d2baa-7e25-4491-b38a-081c4bb71fb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:54.269837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCerts",
          "schema" : {
            "properties" : {
              "keys" : {
                "description" : "A collection of certificates where are signed Twilio-issued tokens.",
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "c6f7c297-adf8-4987-b8f2-d74fdce4f23a",
    "name" : "Fetch configuration details about the OpenID Connect Authorization Server",
    "request" : {
      "urlPath" : "/v1/.well-known/openid-configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response_type_supported\" : [ \"w4x6mvl3jfqc5vfpus9rff7gnhhcwbkof1553vjx4823y7idt3tbx61q3aunfhkbxn6gbqx6t2tr8rzw1w0idu2ae632x4ngct04\", \"wfy1aicsi7ofsd2bff983it5ytay3cqeip9wv4dsfrsahbu03zge0vbku8vjhvooab2impdr7rzv9t6xjgci5ou0v29gvbrk3odg7k08lvasotb5b34sepivbmtj3lxd26zfh4lgehkqd1fktotvfjvsohvd\", \"otwqw6tz51inro8kwva6u2kl6ukculxyftluudkr7l3apj7q1\", \"0f2hmivvrtct0q8n5u78x2edvm1dr13au19r69o5s2df7vika58eqigm727pushn372n1sc1j1x9eduxdv8y8c3w68tm6l66agr77fj1gs261\", \"v0y6l13pndvw74w3587l3bp8wvk71dfy2edpbszza9ki059w87e0t7g4xzrbrcjwa72tfpolk0kdkk9unndzceltq4kbionv0nvvhzrm94trn6altouo286sf7y3f8raz5q54rno8kkvh664252s0evg1sr4c14\", \"tgzhzp92dj80zu9p20u4n6isujwd8yt9h7mz79i0k3m671eqmugdkkjjegu9dh02jsr0v2dxryjp7lfznse4ba9o1nggl0ros4v3a171tx8y3wrst3wb0uc5xbcv\", \"hlge8w90k5ckcejo79hqyla2gw7lw6g4p92bekn65e4iu0ibt4xdcbaecmaofd282r2uhqe0canq3mtw25p557f271m7erfagpsjmd91k19h5og1\" ],\n  \"revocation_endpoint\" : \"rqh3j2t9qlcd6tfkkit3q3d8bf89fnbowxllripqzdk8b6msvrgx369i85ttsgkt4wox1mzxl27y0lnsz2j30k908uc5bye0ukpu3fujlkyy\",\n  \"scopes_supported\" : [ \"hqqns07ce7vizixte79cdoum75ixx4gappfqv5d13b35gy4mb36tf2879zmpa0v3w29ima3todkrivxr9hd6s3hoyeha9raebwn0l78ydejc8y4ihkm7edp6pqkgcx6q1gtgg0dnu5zo8ppjmefbees72qvuprp0q5s2y1ftwvtyvy4l\", \"a5rui2wzqwe3817gb4r64lqp9hji3n1sa1533htc2j4vm43s6lsa5mtzqa3enslmgdtztovfw7avg34x809ygkr586c22v9q4z0sfeqlabotlbfdrba6mr88rn7oko9k3cx0y0uib3pzzbgean8erwjov277nkwnj99q157agylxjsfmxxqj2zq4ofo8534lqw\", \"y1zj5s2wzb0ag4ixtcyfcqlowzwne9zt1odbjdgg47cbg03z90ssf292tswalx86cu62otudmylxglu249cmz3kz2qu0j7q1wzmt8gnebh2c9e0b27239tzejb3xnwhl1i1d4350t0jsmnla3546099cr5phmv9ce8gg795ixzc5z8cyacf75uncs9y\", \"4ullwucaz9y8prtsi6tjwddx6jeub0npu1nlsx4451di49fg9dxwhr26k2w4kcqia5v82gall4z\", \"yuankvr7g4s3w7gmhiyneexqqc8i7iyf4kl0i021rp96fj88kgfiiuuo1aac0q5lyfhxy6po7flfilvbi5bjb\", \"ity7vuy1cwy9auzleebe2kemylcq1m4uncgofd4ru25ae5axq\" ],\n  \"issuer\" : \"oywwqwj1vin57lvtvp60lx3lctfij4lv6smd46zbl018ctctqngibs80h7odnfq862tkokkg2r2tkrm0hbdc1n0r0lx53uia2qeydsj\",\n  \"subject_type_supported\" : [ \"q7yjq2gg6z2jlf14as2jqlok67ndrrx12clhgxdaeyy43fuyr2s6dxgaxhix63qlrobq9sdehzln51j5\", \"c959yc8ei16cj7n00blbm70vwou0bmxu9jbtratdbfhks3pshaxeuu4tius5mp453lqwhkesrmqrgf2rpk39\", \"6sa75a7tlqs8p28scunmoivm2yt6rpyg3eqmmgynkby9vk5a0yuovgx7sh7pems43uhwfvtjet1jh15cx8fwya7zz\" ],\n  \"url\" : \"https://web.example.mocklab.io/704555\",\n  \"authorization_endpoint\" : \"pmkybcwg9mos2iaqluwtzxbtxwtfbp56jmeba07ju4m1\",\n  \"userinfo_endpoint\" : \"59acf34d2frtkc5bg61kg2g9ja48lok1etwfmh5kclgd2807acbkfbr7h6xrocmq8vm5vwy5kez2nudflynuu5\",\n  \"device_authorization_endpoint\" : \"rz40jxqyktay7pgszz1f02l98mhgz1vl59lwo8c4cv5pe7vcga4yb2bt4kullo9jflfkt\",\n  \"claims_supported\" : [ \"4l3lulprjkoahil6m3gahkv5ocvi5efv3pi31vaou7ygted3xhpjudvjqbxy\", \"nen040zor2d7dffrugmoz02rbq43tt1bo47zhstpibgscfpc8g8scbu65gq9ommdozsyfrprnqfnlnbzhfxgcrbeq6ii0qt5u7037pk0pcstdromlpznst0hr8m5od5cp4pak491ib1pjhk6z6t6rdqpju4n1az6wuhmimdqc5d3nrk7gufsta9wwcr6ta\", \"z0obq50xov1szgdijrzycfla0qnphp96ix8h8ghsp67fdb7hmeleulepfs9njo37dks98evy7oeljn8k26wzp0bq9f9a65p5chfrz8862iee0f5m0mh7\" ],\n  \"id_token_signing_alg_values_supported\" : [ \"7fo1ofiu789oes5piqmr4yas9qai5od817h0iybtqw586ejud0gs573wwwyym4arqcx2399fexyc164cu8fzupsih\", \"x2o1j2d9l5rtezqdw2fg5bdxr27cyvg2wlxjzipcbiegqpgk6o4grwj2j9x22ulryv74shxbxtvok318d241npmtruitrvk7meplhiofqk5541v10we\", \"kqwbnx10t7lns\" ],\n  \"jwk_uri\" : \"https://web.example.mocklab.io/821570\",\n  \"token_endpoint\" : \"9u0nw2wkg1ypckuf6fnwbn6c1w674z06462ec0j39g04zdmf2xdb364ptuqe2blsofh2vqpnkaj8ldy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c6f7c297-adf8-4987-b8f2-d74fdce4f23a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:53:54.269709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchOpenidDiscovery",
          "schema" : {
            "properties" : {
              "authorization_endpoint" : {
                "description" : "The endpoint that validates all authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "claims_supported" : {
                "description" : "A collection of claims supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "device_authorization_endpoint" : {
                "description" : "The endpoint that validates all device code related authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "id_token_signing_alg_values_supported" : {
                "description" : "A collection of JWS signing algorithms supported by authorization server to sign identity token.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "issuer" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "jwk_uri" : {
                "description" : "The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "response_type_supported" : {
                "description" : "A collection of response type supported by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "revocation_endpoint" : {
                "description" : "The endpoint used to revoke access or refresh tokens issued by the authorization server.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "scopes_supported" : {
                "description" : "A collection of scopes supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "subject_type_supported" : {
                "description" : "A collection of subject by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "token_endpoint" : {
                "description" : "The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "userinfo_endpoint" : {
                "description" : "The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}