{
  "mappings" : [ {
    "id" : "6ba22992-8777-4b87-9bc9-6667c291c7a5",
    "name" : "Retrieves the consented UserInfo and other claims about the logged-in subject (e...",
    "request" : {
      "urlPath" : "/v1/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Hong Beier IV\",\n  \"user_sid\" : \"USBB8D2c7b0dbfB7A8c3cD9Cc31feDcABd\",\n  \"last_name\" : \"Prosacco\",\n  \"first_name\" : \"Casey\",\n  \"email\" : \"jno5hxknd5yohpn6k0ubov5q2kgj7rkxnsno0mgiy6516be4iqsrk05tbzsk7u5030xlu41fz00g3o6teb7f\",\n  \"url\" : \"https://web.example.mocklab.io/746968\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ba22992-8777-4b87-9bc9-6667c291c7a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.046174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserInfo",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The end-user's preferred email address.",
                "nullable" : true,
                "type" : "string"
              },
              "first_name" : {
                "description" : "The first name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The friendly name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "last_name" : {
                "description" : "The last name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d20ba2a9-5c85-4f66-a6ba-1ae28c82c4df",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"access_token\" : \"p3pyrnr2k3md9slhwlktpoca9fwbazfyyvw6tykeuqvk8xcjnqjr7upev1nsbvw8wrh2obu33vv3spw2yarecehcris3rng6c4wusgkraea0dylrw\",\n  \"access_token_expires_at\" : \"2023-07-20T09:09:13.045Z\",\n  \"refresh_token\" : \"elput5bxln6gwgfbqxo7leijhm76aguu1k793qm2134zhut03f31smffvhmz1zy1r87r02n3uplhno6q749jvz9aaimgy7wbcjgb30a89zxusdumx7fdskqsrurapms63u0oepb3lyjj5hukiwwjmt8sqtcq5hwss9p144z\",\n  \"refresh_token_expires_at\" : \"2023-12-20T07:50:04.045Z\",\n  \"id_token\" : \"h4hrjxx7jy32mcfy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d20ba2a9-5c85-4f66-a6ba-1ae28c82c4df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.045883Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateToken",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "Token which carries the necessary information to access a Twilio resource directly.",
                "nullable" : true,
                "type" : "string"
              },
              "access_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id_token" : {
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "Token which carries the information necessary to get a new access token.",
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8c44b4ec-c194-4ab3-8053-5e7a7f704cac",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/device/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"user_code\" : \"gk06b0bappp4dqigkf\",\n  \"device_code\" : \"itzl2srm4f3zpcmc\",\n  \"interval\" : 1254611745074477,\n  \"verification_uri_complete\" : \"rzberxuoynfk4vsr3xicvtn3cidvfnb2dxyzn6o7vtll4mi1hpjo5vi372mxx3fk1xeojb9asuybdf0f16o7w1et86w8dy8rpbth76hftriviaieaqixtdmbu04ak1vp47frq1v8bkdtoa40sowtwssbj8ksuktleimupt0j0f8oa9ejbtmzki2s2d\",\n  \"verification_uri\" : \"https://web.example.mocklab.io/716167\",\n  \"expires_in\" : 5227311277739158092\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c44b4ec-c194-4ab3-8053-5e7a7f704cac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.04573Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDeviceCode",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "nullable" : true,
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The expiration time of the device_code and user_code in seconds.",
                "format" : "int64",
                "nullable" : true,
                "type" : "integer"
              },
              "interval" : {
                "description" : "The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.",
                "nullable" : true,
                "type" : "integer"
              },
              "user_code" : {
                "description" : "The verification code which end user uses to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri" : {
                "description" : "The URI that the end user visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri_complete" : {
                "description" : "The URI with user_code that the end-user alternatively visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cfa337e7-2bec-4b6c-948c-20ee756a3315",
    "name" : "Fetches public JWKs",
    "request" : {
      "urlPath" : "/v1/certs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : { },\n  \"url\" : \"https://web.example.mocklab.io/455923\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfa337e7-2bec-4b6c-948c-20ee756a3315",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.045509Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCerts",
          "schema" : {
            "properties" : {
              "keys" : {
                "description" : "A collection of certificates where are signed Twilio-issued tokens.",
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "645674f3-5061-4202-9715-49539c220ba9",
    "name" : "Fetch configuration details about the OpenID Connect Authorization Server",
    "request" : {
      "urlPath" : "/v1/.well-known/openid-configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response_type_supported\" : [ \"4y33r2dqtniq6gbemoqmc2lzenxqidafc5swvdz2ilw4fn7rull7dbvo5aqv9lvw2uf1axfy72t9l8isojhd7zm69v80qpu202kbtmys8a1bzs6xj25nv9uuws8w68unlsspr84elq92ltd7udpr8v7u8rh\", \"vebh2q66vfpjhqlaxi0dmj12skhnjj0i4jqa2xppvlb2qcyfxncwnfv9fr93th0b3\" ],\n  \"revocation_endpoint\" : \"9pymexjenaafn\",\n  \"scopes_supported\" : [ \"qukog9bjtu736wxcjr9iitjyot3k2h6zwkxjxd3a616rdpjbqxv1thna330qscc2uw0vbx7z1wykm0mick23rjw22b775j97haszeubsllai58mtwifa4sdntvirvutx4qwfq8wyz2f1a2z\" ],\n  \"issuer\" : \"csh2fz9l3r1b8abjk1cg5h90lsu3b7khd4jl1xpdpbmjoq13z1cco7d96xl4ivx5bb76yfqwkgnuwvmpsdlzofoanbplo6ybpn2sie148agn465z\",\n  \"subject_type_supported\" : [ \"hl726iq1szn1ivjdd0n40lsme3mxwgytdvrgt7gu3q84nyecct3d4y7u0gvyv2mdk0fq4mrs6yxs10eq0foslrjp9ne9xx9mxsfb12ftt2ckbl98ciw9kzr0j11bx8rpafv8yvbv4mn9qo8kqu97ojwr38jwbch\" ],\n  \"url\" : \"https://web.example.mocklab.io/179759\",\n  \"authorization_endpoint\" : \"sd7q802at5qf7141o21i9x70967k6xihwkvetjzr3ex93hlwjew1fxx97kwptbg6aia0c6onkmkmhqsbm3ggvj3\",\n  \"userinfo_endpoint\" : \"3eivj8u6xe62ct71sobj\",\n  \"device_authorization_endpoint\" : \"xm81914c0h488x1mn5hinacpnoveffoox48i0pfe6wikt\",\n  \"claims_supported\" : [ \"kmmetuhyothfjw5gpn89c3w\", \"jlsvm5obacqkhs\", \"jdfobdftrd2j76b6giikjtf0x0ji535l76hk5j2lzqgdlpapqbztapuzkt8nwj03cdlq2qgejz62b62qspky9wtaoar5dyuwjmhv5tqrhusm8hnkherflx63551ps96pnx76u97ttlqu1x8\", \"2r3bxztk2ubfx2v2dmci7adviwupthmpxioqs4cyr42dndqs17mw7wpyo3lgfaxx7yhhkl2g5qd0k8gve2yc\", \"eyhvmtwij2ek23uq363nhe5ae81ps5pwrqj9jt07yrqb4sgz70ms3tafqwtbpgmyrz\" ],\n  \"id_token_signing_alg_values_supported\" : [ \"3mryc9e7pex1uf7rgv4e170srnxcte9ixzywm0nqitons1v5dgfzkwa3cryi67wzxh\" ],\n  \"jwk_uri\" : \"https://web.example.mocklab.io/258837\",\n  \"token_endpoint\" : \"05s18imwnqly7cklj21jlb0bnrz3jktd571ou4mhygyj6brcl5ifqqju7um2gxpyl4ahydx8rpf45qy9c15ju2eqprvt5krx9kvt0diy8at73u76a9pur3qayhj1cxat5ao14cpxxi4p01sm0ygu05m39pmiojeqs69wfibs068hkc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "645674f3-5061-4202-9715-49539c220ba9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:20:09.045354Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchOpenidDiscovery",
          "schema" : {
            "properties" : {
              "authorization_endpoint" : {
                "description" : "The endpoint that validates all authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "claims_supported" : {
                "description" : "A collection of claims supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "device_authorization_endpoint" : {
                "description" : "The endpoint that validates all device code related authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "id_token_signing_alg_values_supported" : {
                "description" : "A collection of JWS signing algorithms supported by authorization server to sign identity token.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "issuer" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "jwk_uri" : {
                "description" : "The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "response_type_supported" : {
                "description" : "A collection of response type supported by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "revocation_endpoint" : {
                "description" : "The endpoint used to revoke access or refresh tokens issued by the authorization server.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "scopes_supported" : {
                "description" : "A collection of scopes supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "subject_type_supported" : {
                "description" : "A collection of subject by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "token_endpoint" : {
                "description" : "The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "userinfo_endpoint" : {
                "description" : "The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}