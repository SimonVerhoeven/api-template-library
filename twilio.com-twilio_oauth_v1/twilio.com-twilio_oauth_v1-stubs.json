{
  "mappings" : [ {
    "id" : "b71a06f8-276c-4212-bbf0-15227414d81e",
    "name" : "Retrieves the consented UserInfo and other claims about the logged-in subject (e...",
    "request" : {
      "urlPath" : "/v1/userinfo",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"friendly_name\" : \"Christin Lind PhD\",\n  \"user_sid\" : \"USB36CeCc9C9525C39beFdc96c1E0aE3bB\",\n  \"last_name\" : \"Kris\",\n  \"first_name\" : \"Kyong\",\n  \"email\" : \"xa6pwqgmedzqqtxmsac50v0cnns5om5g1uqurnj\",\n  \"url\" : \"https://web.example.mocklab.io/696958\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b71a06f8-276c-4212-bbf0-15227414d81e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:33.573558Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchUserInfo",
          "schema" : {
            "properties" : {
              "email" : {
                "description" : "The end-user's preferred email address.",
                "nullable" : true,
                "type" : "string"
              },
              "first_name" : {
                "description" : "The first name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "friendly_name" : {
                "description" : "The friendly name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "last_name" : {
                "description" : "The last name of the end-user.",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "user_sid" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "maxLength" : 34,
                "minLength" : 34,
                "nullable" : true,
                "pattern" : "^US[0-9a-fA-F]{32}$",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6b70b27d-c969-474c-97d7-1d200e7bf89e",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/token",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"access_token\" : \"kg0oe6ymwcrmq789mv59bmwccuimahzfia0wiw26abmwvjc5sl5nhq7hdybovy1kd6td2md8258i9v5htsl9w2zhewuebtzvtgn75awk5asxz243xend16udfutk16f9vkrfl4veavybqtn7o96trvyio5gqi3q1\",\n  \"access_token_expires_at\" : \"2022-09-02T13:06:43.573Z\",\n  \"refresh_token\" : \"ifv92nqtlglua8jld0pt84q1fia9bn9ahp8h7w34q4a8qvyzdp290bk7oaq87qafq3z79cdanhxdkjql4n8yhpk5qxuc4vfrhzwnrz86vqkqwjkakuabmwq4wl96g3ssuqsyi7052ujte0t08bs0t44ww7ktcad2apavi\",\n  \"refresh_token_expires_at\" : \"2023-01-03T01:54:38.573Z\",\n  \"id_token\" : \"24lrah1tehyufmxz6hyamrkp7mws8dgzu43629ha91clewn5ppslso9h7x092u37ihvaw54m5cylcywrrgekurzjaopj4ujtu38c7hq7ks7dwgxnwahlk4t757yxr8l24vw7o0ejgjzyak57bsrnkzcpfjtjyldrewiv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b70b27d-c969-474c-97d7-1d200e7bf89e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:33.573247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateToken",
          "schema" : {
            "properties" : {
              "access_token" : {
                "description" : "Token which carries the necessary information to access a Twilio resource directly.",
                "nullable" : true,
                "type" : "string"
              },
              "access_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              },
              "id_token" : {
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token" : {
                "description" : "Token which carries the information necessary to get a new access token.",
                "nullable" : true,
                "type" : "string"
              },
              "refresh_token_expires_at" : {
                "description" : "The date and time in GMT when the refresh token expires in [RFC 2822](https://www.ietf.org/rfc/rfc2822.txt) format.",
                "format" : "date-time",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "71f5a3fd-b19e-4458-9e0b-231bbe660108",
    "name" : "Issues a new Access token (optionally identity_token & refresh_token) in exchang...",
    "request" : {
      "urlPath" : "/v1/device/code",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"user_code\" : \"ov83cddhsbnqmfxgvx2s6mw47lcemlq3pnc8zzzjap7m3rd0zyr06n358nh83yjx8as53ws3ao6fr6ochw93cgzdpg0965ucscdlpa0ipolc14czbwsrzp03qvkwlg2gt6hu9ron6csziqryk6nl93uo49\",\n  \"device_code\" : \"sxpvf1e8vmcs1d5ai6ehkldzjiyrhf7t8x5ypehfb5ga9tgn5pr665l3dt6gwbtb4rtal3fgo5x6p1qj2f2nlfeeydlhpslivjxcbirj2jzln0w39agrzhm6ljvzv3ivv2l8zoe0ke6ox8mmaqj4qksm3vneisxkhgxmq6v87niwyce8c78spxijwczqqkls4\",\n  \"interval\" : 1984176050065537194,\n  \"verification_uri_complete\" : \"jsghyephnlz8n0sl8wt2ysxa79h0jpc67cagwdrhpbn9ync6vnwsw9wv3yenxfboe2wutusknggska4evia688rtlphg80g3tnytjv8d29mqpdn5mp5b38zaiyf5da6o4agiwf5pyyx3hkhfi6y86g8cqnfay7qdmw64np26rqh\",\n  \"verification_uri\" : \"https://web.example.mocklab.io/323773\",\n  \"expires_in\" : 5702635471115048731\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71f5a3fd-b19e-4458-9e0b-231bbe660108",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:33.573094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateDeviceCode",
          "schema" : {
            "properties" : {
              "device_code" : {
                "description" : "The device verification code.",
                "nullable" : true,
                "type" : "string"
              },
              "expires_in" : {
                "description" : "The expiration time of the device_code and user_code in seconds.",
                "format" : "int64",
                "nullable" : true,
                "type" : "integer"
              },
              "interval" : {
                "description" : "The minimum amount of time in seconds that the client should wait between polling requests to the token endpoint.",
                "nullable" : true,
                "type" : "integer"
              },
              "user_code" : {
                "description" : "The verification code which end user uses to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri" : {
                "description" : "The URI that the end user visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              },
              "verification_uri_complete" : {
                "description" : "The URI with user_code that the end-user alternatively visits to verify authorization request.",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "066138f0-12e3-4f59-ba1e-c10cb4326196",
    "name" : "Fetches public JWKs",
    "request" : {
      "urlPath" : "/v1/certs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"keys\" : { },\n  \"url\" : \"https://web.example.mocklab.io/457767\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "066138f0-12e3-4f59-ba1e-c10cb4326196",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:33.572853Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchCerts",
          "schema" : {
            "properties" : {
              "keys" : {
                "description" : "A collection of certificates where are signed Twilio-issued tokens.",
                "nullable" : true
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "ef599be0-075a-42c8-83ed-8ccd96c05137",
    "name" : "Fetch configuration details about the OpenID Connect Authorization Server",
    "request" : {
      "urlPath" : "/v1/.well-known/openid-configuration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"response_type_supported\" : [ \"01n92596fkjzn0bequea3z58oiovkctkjspd7jfs05hdzaey0om3i05i0w8gdx3m96wrn15vk9oy7iknjd4c90svuuk2tg57ztvogs9vhf92favuofpxju\", \"slhcgnnq1e37getxbubvxijh3r9131lud8vkdmkgfku5nkdc5wx0mq47\" ],\n  \"revocation_endpoint\" : \"zgido4x49g3ksulnlm2zfxqu28amrvrn3y5jykp5zzxr8s076wh68o8py1b4efpkwxt3djv3ucfpmzdab4utvjtrfa4zx5idmw9ma452cq3vf1km7fq9f81k3rc5x13qwspwdxzbcawtzjc9a08a958dnjj7lngvc\",\n  \"scopes_supported\" : [ \"hhcc025073xx3g403t0qtuctfbzffdnw0z4gd3ohj9kfk2h1ub2s\", \"36kydvq07izvv438egmvtxq06xc3d73ecjgyt2v1y54mn9fcl9edmm0cm86q9cyhz5onlindgiwtg2bws57sqbz1zkumo1f3awg89glh95uk\", \"lm3jkm585cokfk04pqp8nx5hl51e8n2qbvwmz0j6g02nsid\", \"s1u3nf5wi5101pkr11d7xprnuel8djvjz4y6nycxstrxlb8bcagc71zeux9z95q559hh\" ],\n  \"issuer\" : \"8uck29meitqd7k7bbcnvigys00eg1iyn5aphnuvcvrjj7h95rx92l229kdg2uirn5o0iydji00bfl0fvk2i0a2ms3jj\",\n  \"subject_type_supported\" : [ \"0oiheg80yf8rnb3\", \"pkcaquzwn7b\", \"g5is10i08xir9oug0bkim\", \"0qsq3j67a6c6n1k5zm2xnqlv2k1fbfjbe7oosbkxm08kw6wzaaqg4m4qk0lol2vcwrm9al5x\", \"ck3y7pry4ez1w1igv81pbnkcmxnl61dpsaey7o2mfq1gucxfjtn123bw30vgbdrsh7vv29ifsdsk2a7n93ube71ntdam68q6efwfgqsg3cjhpyntv6xvkd0rmj6nn5l8lx802anlsnmv91mdzhmt3ombbnkbms9ywm\" ],\n  \"url\" : \"https://web.example.mocklab.io/613407\",\n  \"authorization_endpoint\" : \"o5xhje811ewhcypr1qs1cnrjktybvzd5td484tqutri4xwujvymoelnaiuddhx6v0ea380lsb9nj0ngts1n8qixbie1etu2d9f1y9ozxld3vgovj5mtu03ubarujpcx1slqoumbw9ja85frnqxv68\",\n  \"userinfo_endpoint\" : \"joe7xgwmwkwjqkezphc7vywhcy6d7xay6krtq2b5mh76s6z1y18o01e34o4y6yitp1ef3akr1ulz4ov\",\n  \"device_authorization_endpoint\" : \"9d978ixeebhitqbscojbfqt4ho\",\n  \"claims_supported\" : [ \"rm5p3rj3uquhrp3lcn2t96aieut90xdagpxz7m28qbmhi1j9lgoed2e6ddq5pvruejvkjhk5on5iikdm5781q02\", \"shmtpieq925ncgch2atg66uq2ew381niwwutd9wqe7qmtfk6uwgonbov9h5431gva56ugxghb8462t3vc6srlfjyxhbxw9j20tnoq6vrwhgs44bpb840teb\", \"6yt9fvl2mdrirb4v2e8h2s4u9st8\", \"6mvdoewumwcop5tukb29ntv57a7padffn72uxe3wxey582bayl6i8fc373nplzzxbj5lq7a81cdxvubs1swdqwrqmbycqhw1qi097he246u6zodeskku\", \"astwvxmyr8b89wrmm6q27f4r19uvd\", \"tdey4j5trnv1wkr3zk7zxlle6fsyo30mm0fqp66niwobssyfgu5y8dtfaeug6zhl7l08ez77o2klopaqpqa16wbsgwpukf1iya3pe1stnqu5dhbtk57k0a3t73vi28f4lcy7e40vx3i\", \"lrgpnm15jhdmvjqu2ptnaefr5pexgsxhvr5g6lkeirv1csk7r9rbtzftjpuhu412zzhos02qxzuuh4w5oj\", \"ae49m2jzc0l0qox50b65wxew0qvo59rzbt7y22gjw8h3dz1pzcyqwj46m2cpyhhhps04n8s52dg6jeqxd6yuvu71\" ],\n  \"id_token_signing_alg_values_supported\" : [ \"llnrpnqash11rzkqoirmiei0xcr4b6g91kul9at3wsbz9xvb0h2e2yojyylr9gouzkew6l8h0qukgo4aewbpoc50e9vaex8n9nm9isca1v08oony16f9gt\", \"cff628wdpfpyh67b5h0jca47ebzp4xbd6284ubher4p9jo8kpqhq725bpv29s565uiim5y3fjjw8ygyp56lzs2d1wa25za\", \"qtsl391n2u7rk9nic5xil6oekrray5zyoxfdrxtdrlxijp3wmct5lr3chunpeo7viut0xpasx5bzltkcykcxlxa12oeq7e\", \"diypvb0ydfto49fktgt0kxed036iqvt4fkt6bxj5km518u7aoqgtb4kn3vco2qa\", \"k0nxpzqcxwlf08upzh2oafsklpzatzozmpscfkw7upybt8me223bsx447mi3md3t379sfxb18kxqldu6m5aaenit2fqgbs1gzignggtlq0qfc53hrw5en8te3k\" ],\n  \"jwk_uri\" : \"https://web.example.mocklab.io/188034\",\n  \"token_endpoint\" : \"3qe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef599be0-075a-42c8-83ed-8ccd96c05137",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:33.572696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "FetchOpenidDiscovery",
          "schema" : {
            "properties" : {
              "authorization_endpoint" : {
                "description" : "The endpoint that validates all authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "claims_supported" : {
                "description" : "A collection of claims supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "device_authorization_endpoint" : {
                "description" : "The endpoint that validates all device code related authorization requests.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "id_token_signing_alg_values_supported" : {
                "description" : "A collection of JWS signing algorithms supported by authorization server to sign identity token.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "issuer" : {
                "description" : "The URL of the party that will create the token and sign it with its private key.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "jwk_uri" : {
                "description" : "The URL of your JSON Web Key Set. This set is a collection of JSON Web Keys, a standard method for representing cryptographic keys in a JSON structure.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "response_type_supported" : {
                "description" : "A collection of response type supported by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "revocation_endpoint" : {
                "description" : "The endpoint used to revoke access or refresh tokens issued by the authorization server.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "scopes_supported" : {
                "description" : "A collection of scopes supported by authorization server for identity token",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "subject_type_supported" : {
                "description" : "A collection of subject by authorization server.",
                "items" : {
                  "type" : "string"
                },
                "nullable" : true,
                "type" : "array"
              },
              "token_endpoint" : {
                "description" : "The URL of the token endpoint. After a client has received an authorization code, that code is presented to the token endpoint and exchanged for an identity token, an access token, and a refresh token.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "url" : {
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              },
              "userinfo_endpoint" : {
                "description" : "The URL of the user info endpoint, which returns user profile information to a client. Keep in mind that the user info endpoint returns only the information that has been requested.",
                "format" : "uri",
                "nullable" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  } ]
}