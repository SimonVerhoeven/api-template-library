{
  "mappings" : [ {
    "id" : "96cdb918-62d9-43f2-ad36-e59cfa020ac8",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/zwtw76gzw6670113lt5fqm6oowzntbz139py1d86fzhp7pvv96mfja8dqhp86xx58iw6y5d3jdkqnqrfnp8jt2i73dxx0zv6d0tzjuk9ioi92a1esfmqls60nk7blwug2auxy3325t4rt7:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"m41r303w741d10yokb8wd5g1kgoy77zvzrqpy3z8s2abu87795yi8gj7ozm8h5cy1s1pm5yohj3dabtj0cl85ig6jhri67wd2606ewtsvx01zhf9l41m5nyw\", \"acqk4su6tfwwintsdkxsmoiis9fxwucioj10p9xaru4o6h616rxk5ibpu3ssykelyb6uv2o22fjr88787psx0b8b796bdw6fxgd27nx2bn5st8bf224plcqjh7dz4071xm63jncu953zvwnnrfr4m4gc62efraqx6ytx2ueae9b14p6go6ze6dj8nozsnrbkbyy1\", \"otrw79cecdjcbe2arwteue8wgkvvvwpp429vknlayldfl4qllxw0wcduzldef707ioeybunkjwej5x8yl58tkpt0oy0hgnygcki2rr6u4xglb6d652piwng8bg5nlhuzku5nsqeqhwixrp8catuo753kza0u67apyhndm743m6jme3xkbldya\", \"l7xnn759oizztqwn8jgr9b1lrwi875z136ov44stu5rnxwpcxe8zgl6s12jj9b50d6p5ihbdhmq2rfqvmk3kb6ne6w56kfles7k5qekduq83g7eelpvgwb1msesqfja84txa6ijtwo6qijq2e267lnbfhhx2qhxg1\", \"xore275icmuvz46nblresd2wdb9i22d0ji9w0rjcrfu688ytw4owxx6zudvq8uki5ow30j98u0on052czd2lp7sg15zx75boq48fm3sde955z3sujjntiykhzob83jcm643f63jqqn1ph13y8m3f6vulvqw6vvxs94r08j213xwbdo3nfrkbzmbc1h9glm5flrs1gel\", \"4bt8u0457lsg1ssiwosqh9wq76l9zs1kahqwhwzlx52phtm1pvt1xvqs7zemyw0d37nvmpsubaefgufusysip0g5lhmaqdp293lbqs8gfyjvqcwkl39i95bgz71m07jfff73tczqs31wt6hcl4dgrazng\", \"irpgo59ibzwgv89v4cnd8lsc3r8i777afbohocfffhe9b08kn7evox6pkerm8pbuwux5gtimkyj152dfrieu\", \"c0uflw13ii3jb190v7\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96cdb918-62d9-43f2-ad36-e59cfa020ac8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.605013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7c7f1894-9d82-4094-9a0c-9469f89bf722",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/zta8259pq7sknqz4blt2p06db399g51ba8baijplzx2050d4abgcrgaml3bjgfsz02apeirorr0qkoypby8su3z8x4pi2ipupn:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"qz1g7tobl2r7nkt101fw9b97xs5vrppt2yg2h2m0ft10s752z7cv9qcsibxhwha93sosdoexzz9fltowh3le9dyi31miaejmztmovgze31rt5edry340drr65oawt3l7j53pahpycf3wcg8ib8d5qt74cmqup8ri9gqjsw52w48xaq56bm6tu2rb\",\n      \"description\" : \"Temporibus odio cum fuga quidem sequi impedit. Dolorem earum sed aperiam numquam aliquam. Et non rem officia. Autem voluptas inventore officia voluptas ullam voluptatem. Id magnam soluta enim occaecat\",\n      \"location\" : \"56lyxpc658m79y95chjknb73zyjg80rcxxd2d9o9h5d62m8f27gmx1pjt8q6f0lkjt3cslumkd1i9ce74ffb9xwyhnypkr8qbvmz5le9ej0vh6r7j\",\n      \"title\" : \"Assumenda numquam dolorum molestias.\"\n    },\n    \"role\" : \"zr0sl6ygap8i0yko34mh96iexem6dmztpybe5e677xfmsrzu874ikmvquhskm5z6nulwhle44jl2a8mi3d6p\",\n    \"members\" : [ \"1fzipol52m6dsjda0bdsfisf9phgosz88m831kfdk9edj0rj4oagc4oplmzlyr7316x4wej6rybflbd61k9yifyyw0xkqrdfpvb55my8npiqbwg6tzabskgeeqif83w2llpqpzsrp\", \"23ij0blvfn1few0cm3ied7sivrjbhle7a6ircrawb9ga3\", \"icdtvzp3ievq07kj4qisw6a9x5a2jmr3sio338y6de3eq6y9ydoeswhh9o6gy4jp7efaovs96yogjj94g11j8c3b51ibu2c5keaevbb361odgygr1xgbf9graour0chpb573to395px77c4caf3ejo14rtqaammz\", \"e9h3kmjtwryfic9w60iuco9oiswjt3r52p5tstriy7tuef2jyg5nwepl8vngu0z7th42cj5hlm4i87k9qygd5hjiharvlgcu8euy88bpprzq2feidrl0t5yn4tltce0lv0alcwk295y2uodlkjasifubqkdgtiytxz1bcd0elxk6nxgb\", \"1yuzmw7orfbmpkwq7q980amh0whvz77j6yjp7fs7rwd7raxrodovpv7as0c6sjuvywdnl65jg9yek8bugkvklhq2urg5dx1ipyltx02sxih\", \"m2krhkivqxjbvq16ijp9v8426xxkmc5inyvmt3a6lvkx19tcwo8lclaux3tsjmhybvbkrji04jwju3dennf1411n5iigoxzj22176pqo79m04slsft4t31ig7s6ixgj2c4b57vdnhwaraa7d7d1hawtp76fd7naqkc7stf0w8qsexztipldihexo98voe70\", \"7kolir110ali4t21vc6m2pnbpkzrq0y1grlgozgb7b3uyh73zxvg00uya8huzf2ptkxtwttwz3ihkwadtffxy7eltxuaa0bdxjpop2c6fjnj8we6s1puwjiczk231npblh90lqu302\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"35la2elwcr5pmocaamho2st9f016hd3h1hnwfgf33af00mwifzz4iyyjha06vquut9v3w8cmtng9ee69d5er8k\",\n      \"description\" : \"Illo temporibus ratione dolorem omnis. Sed facere accusamus sint consequatur enim. Possimus animi voluptatem velit a voluptate. Neque maxime vel animi. Voluptas aut soluta repudiandae quo ut velit est\",\n      \"location\" : \"rw70mhlovpqou554nl7e9zzjwj0n04irtemllj0fdmg6djdqr8v7zc3qx5xi7miatfw73ufks2p2ytyv1gvz1wxx3ezkvedhy0rmb3itf8xn2tgx9aed7xmy04595lro10khg51ozxf6txfumpp698wjjuhmvc4zgvickv8gfjcqjq0wwmo1nxhr5hgb59o\",\n      \"title\" : \"Nisi saepe voluptates minima.\"\n    },\n    \"role\" : \"brqd43th37s5s4sngsmjwef4rm4ragl2qre7iv2lik8sfj3upyhdbfs1626yhzj7qg92alsk6vklrnsd\",\n    \"members\" : [ \"36sn43uzx4azrmdhausun0o2pe75a32hbsjincfq2khvdsdivibfhm0jj42ugedv8bn17l27tkhsg976yes9fr1tsmkhagnuexuo3rsfiqyuqmaxzju6ga6wdqd79ygzohdn\", \"1cf6z0adjjz2oriw6z6sl6i6m06uyorod6s0krm6a57elpvb59w4w7344x8fi5uazpduwlxuk28nnrhvsd4mnouz755n2d177hl1fu5yu7ebglhebthzb2jc4qozdzibe15ytaddjfsxhgtu2fs7niu3e1uv\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xtb1goy0aen1svl8bntml3hm4col7j0154chnltecfdg\",\n      \"description\" : \"Est qui magnam non voluptas. Deleniti ipsam et impedit. Possimus adipisci nostrum sed laboriosam praesentium sit.\",\n      \"location\" : \"a84yo4linmheg\",\n      \"title\" : \"Veritatis assumenda maxime.\"\n    },\n    \"role\" : \"pinja4v4b4y4jvamkxbbjqjf4mel9zxh884olo4crpo74tcfj9zwx1mt8uu5khji8tv52222fyk12xh69o2thaprygfz6n54dlw8zw29lj732fywdll4o70hhsoqtedfdza6xot6dfw2zvlgfug\",\n    \"members\" : [ \"mj8dy97m01echundnbwt7cbtpzk7ya2s0do9qmgcuicmcemfyyuyi7p8hnz80wfth\", \"i3thv9wm1ig66cil1r5hteryq696fu7egr8qt0678fvitlgqycbfdrlxv3g3z3gx6h165d1tcdwuv\", \"j2jeo5bq513sqe7m38vvtr7tvtjqrof1m2ztt7mtb15skmaynpio4cp84824in7l0y7lvzeiofmihx07je7w6t13fy3j1bod8th2ftsbhvf6rnhnl3ojslep7h99tlhpb1mcvdki62snkkktq3epk6t2d15fsf\", \"942ja6zqwdljyyk3avd2vinbbgzj59sm022ua3uubdv7iph5qoc0zqdgoko05aksj2ovno8p0f5xkpqnpvu5vwnfitely1ntyf8qq9sdinxixerfzyxtt\", \"2biio9kkkb7j3grsnf3qwq25dpnvir5bjo257j4hvn60r6e90p0ltaeu877e1ltlczglzeqb49xeigcykyor2cgd7qoq4xzzjfo7hcrgq96kzv6tqd91245q2ly63cqrm4e2tumdaou3e3s8351n91jtc4hiryn6yuqmxrsm0gl93sd0f3irgcyxj7\", \"5nl3amflezmhf8nmfnpg1pk2a84u2kebhlx25\", \"162dkxlhw774xc8f2xgbk473adp1azr4ydhaebxnb0l66t9sfm8gkh50ethr0jc8w3as6wp12i1tmf726jj7hbhl1aetentd0h9e8si4ywku41bai2uupny4uesmelcio2ht0hmdirq1iovx7uwq11iracv3\" ]\n  } ],\n  \"etag\" : \"placeat\",\n  \"version\" : 1141026186\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c7f1894-9d82-4094-9a0c-9469f89bf722",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.604863Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d0c8d466-5f8e-4ac7-bd56-51b1593f542e",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/8ts7tiydvduy726yq6k13brw99r2op8wifchs33ofct35xneh92a4ehlxy2bwuwhq5421gafgtolr5f6tu5tdv3jr7ymgeldiy4nfqo5pijzri23q12tiykizad4da705s2js0zbhk3qh1n1cvoibgaki1n0uhqyna1ahzcxfsv0zm87bm:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"agdo3w8h4xh5eywdpswss6k3rssua7i710jdzwi6qbyun44ovg089syjt2jand9yap41oh56mn5z8i7wkfvxxesowhple3t3on10wki6p5wgvidck5zaj\",\n      \"description\" : \"Non qui non eaque vel dolorem. Asperiores esse veniam. Est distinctio suscipit at. Distinctio qui cumque quibusdam qui quam aut. Est voluptatum tenetur quibusdam odio.\",\n      \"location\" : \"1xvbr78wd3gj7wue55zym0o90ydbsvovgqf0o7ohzdyuvkm1wbmi1unbm7d4dnvv0yg0tomvymriw1132qw7u7h2v6j7f4rvhpgq826uafm2rpjfudh5eo4wrqx80w04dakk7eojro010395k1uzdb657svb6t2tq57xab0aq9c5uzhepmzvbel5\",\n      \"title\" : \"Quo consequatur soluta natus quibusdam et sit non.\"\n    },\n    \"role\" : \"lamj0cn26nv6ia8wydjreux4ahcmc3f574jckrzm7rkie3ya6c66r3ezbe2y37lj7or7bzqdmede\",\n    \"members\" : [ \"44tqq70xft6knbz2xwfezucce89mu10b0beheywp17yrzqgi705ukefdxnq5sgtxouqeesnxs8tfnlmiac8ij3\", \"q5mo37oa92y2fx8187mnt3lht287x8qit21fminwfghn0at6b0wmcu9kyr25tu\" ]\n  } ],\n  \"etag\" : \"quae\",\n  \"version\" : 1590330784\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0c8d466-5f8e-4ac7-bd56-51b1593f542e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.604283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6fdcb2f6-d29b-4169-80ee-f2f775249bd4",
    "name" : "Creates a specified version.",
    "request" : {
      "urlPath" : "/v1/nd8qleq/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"primarySpec\" : \"co070vbim563iiu5j88odw3ilc8pf3w67xte33t2t744ctu69wa3tst0q6maonuttrpvg8tvnbn3gi0loo06wkbaclakpglht6jga4md69h0z3c3vo07icsm7wopupcdoz9eeaolruwvb7f6vvw679weh4knb8juialty5oi1pm4\",\n  \"createTime\" : \"2022-06-04T16:00:20.603637Z\",\n  \"displayName\" : \"Logan Weimann\",\n  \"name\" : \"Cesar Hahn\",\n  \"annotations\" : { },\n  \"description\" : \"In a ut officiis repellendus dolor quia. Sequi eaque voluptate ipsa officiis ipsam distinctio quis. Est officiis quod officia. Et quo qui.\",\n  \"updateTime\" : \"2023-02-24T17:20:20.603781Z\",\n  \"state\" : \"Washington\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fdcb2f6-d29b-4169-80ee-f2f775249bd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.603967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.create",
          "schema" : {
            "description" : "Describes a particular version of an API. ApiVersions are what consumers actually use.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "primarySpec" : {
                "description" : "The primary spec for this version. Format: projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}",
                "type" : "string"
              },
              "state" : {
                "description" : "A user-definable description of the lifecycle phase of this API version. Format: free-form, but we expect single words that describe API maturity, e.g., \"CONCEPT\", \"DESIGN\", \"DEVELOPMENT\", \"STAGING\", \"PRODUCTION\", \"DEPRECATED\", \"RETIRED\".",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8a74584e-4bee-41dc-815b-a1bd65e9d802",
    "name" : "Returns matching versions.",
    "request" : {
      "urlPath" : "/v1/dapzamaerripq0x9ttya0u41cxg9zkha4xfz8uqe797qll54o42cm95rta4mnfmq2w6i8u4gv22w8z8nwuduy35usjg9dwssl6zybqo85csq62y5wz0v5ma9j4krdlz3icx0t1yq61spwyb600qdqbakfmw8apz/versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiVersions\" : [ {\n    \"primarySpec\" : \"duke2mhyt3v7bpdqoc6q4c6yxmpbfcls1v9ss6offfxqtxl94nfbfrx8vvoir09r2d3r65pzqcxmtgjwybo9h6s30eugfvrz2ue68iri93zvqn0f9ajidy63\",\n    \"createTime\" : \"2022-06-03T16:19:20.602612Z\",\n    \"displayName\" : \"Rolf Wyman\",\n    \"name\" : \"Jere Veum\",\n    \"annotations\" : { },\n    \"description\" : \"Omnis aliquid aliquam rerum reiciendis dolor. Eaque voluptatibus temporibus voluptate beatae vero enim reiciendis. Earum veniam quo voluptate id. Cupiditate sed sed ut voluptatem. Nobis qui mollitia r\",\n    \"updateTime\" : \"2022-06-10T15:10:20.602785Z\",\n    \"state\" : \"Kansas\",\n    \"labels\" : { }\n  }, {\n    \"primarySpec\" : \"v3zi16y3et4yisgkd53l9fzin5yzldyd29pubf0ebx7uun0we6c5nqybsg94rffgm0pv5eja2ck03ihq6in5hj00uods0367wuumas5cbywhgwcsi6vzmf00z5\",\n    \"createTime\" : \"2022-06-13T14:18:20.60286Z\",\n    \"displayName\" : \"Dedra Reinger III\",\n    \"name\" : \"Dr. Buffy Zieme\",\n    \"annotations\" : { },\n    \"description\" : \"Quae numquam qui eligendi qui distinctio laborum molestiae. Est doloribus cumque. Vitae et voluptatem dolorem consequuntur ea. Necessitatibus quod repellat asperiores totam sapiente voluptatum. Omnis \",\n    \"updateTime\" : \"2022-10-04T14:42:20.60301Z\",\n    \"state\" : \"Colorado\",\n    \"labels\" : { }\n  }, {\n    \"primarySpec\" : \"b2abapfj71gbusxjg6hrcnx0w5tiauwdvjjzvop0fv2c3t66a4e79garydhfzxmnigwj2gmpvge7cojkriwtv0ogqe5lh5j99i6k4xqsxa6cgp03a6yt2sb0eb0t55\",\n    \"createTime\" : \"2022-11-17T17:03:20.603076Z\",\n    \"displayName\" : \"Long Auer\",\n    \"name\" : \"Etha Orn\",\n    \"annotations\" : { },\n    \"description\" : \"Consequatur ut quasi quia eaque adipisci. Omnis eligendi veritatis fuga cum a fugit. Doloremque quidem sit eius. Tenetur et quia.\",\n    \"updateTime\" : \"2022-09-09T16:33:20.603219Z\",\n    \"state\" : \"Wisconsin\",\n    \"labels\" : { }\n  }, {\n    \"primarySpec\" : \"ussyn5w3f18jkx0ljtkx9b1udkterk2fx18n6nzg8sbudfk693q1kepzbfmaex6qcmlrmtf2rcjde9l2ac6yu6ffk1rwtx13oviq\",\n    \"createTime\" : \"2022-09-15T17:31:20.603287Z\",\n    \"displayName\" : \"Mike Rau\",\n    \"name\" : \"Lorna Wisozk\",\n    \"annotations\" : { },\n    \"description\" : \"Ullam alias est veritatis sapiente. Qui vel possimus distinctio. Vitae eius doloremque. Molestiae sunt repellat harum ut.\",\n    \"updateTime\" : \"2022-12-08T17:25:20.60343Z\",\n    \"state\" : \"Kansas\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"kma8esb36fio164iyusluehncavidia5zapfx1ji12cuhli3fz35j4z1vikdme28e40pa55c45kbc3dyxknd8v3rs0v8ppwhttzt1c64krw2j6u2x2y9iky6frxd1lys8\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a74584e-4bee-41dc-815b-a1bd65e9d802",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.603578Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.list",
          "schema" : {
            "description" : "Response message for ListApiVersions.",
            "properties" : {
              "apiVersions" : {
                "description" : "The versions from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiVersion"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "181e4023-30ad-4e5d-b607-268d07955308",
    "name" : "Creates a specified spec.",
    "request" : {
      "urlPath" : "/v1/ttqvpqj2v003iujspixs2xr2uk0dcgw4zsvqqt9yzm66o2dqm3y1xopfanj9gxj98fq28ob1fxn37dm81tr06re904qk3vj56zaypooz0xh90zd2imumireop89a2rv2z2eur4ys6behdij/specs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Molestias necessitatibus aut et nostrum eos. Mollitia voluptas voluptatem aliquam non in. Maxime pariatur cumque quis. Iste occaecati numquam veniam facilis ut temporibus. Sed doloribus ipsam consequa\",\n  \"mimeType\" : \"tayi5eg1zj3nhmlqz2xvc\",\n  \"revisionCreateTime\" : \"2022-04-13T17:01:20.602018Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1668241572,\n  \"revisionId\" : \"3w40\",\n  \"filename\" : \"Alice Paucek\",\n  \"contents\" : \"d49jkmxt3vr7i4r3fset84juyeuu77m1sbl59djyb8feruew9oyk37gu9yjd38gfudrfpt0aixnewjdhcsnzh12rywuompds\",\n  \"createTime\" : \"2022-03-14T14:35:20.602183Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/975808\",\n  \"name\" : \"Christi Bauch Jr.\",\n  \"hash\" : \"8exlsnouwb8imwv4tn834c1n28dkkrrif8ft74oa96jc86m04lq8jtkmxja4glfiyz0s7tvmefa7nxokr2hepdrvel1fcfgwzqlatgjy8c2h6el2g0p2zniai37n5suxgga8smxpumndi5d8akqr\",\n  \"revisionUpdateTime\" : \"2022-05-22T14:37:20.602326Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "181e4023-30ad-4e5d-b607-268d07955308",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.602534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.create",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "06ede53e-b857-4d50-9f53-43a9492dc735",
    "name" : "Returns matching specs.",
    "request" : {
      "urlPath" : "/v1/453l4jvjjaxh9hzagkeakkmqrw5d6i7z40342ahnbk7139j1k04ncst5mf8uf46x5h4n04qh9yss873sqx58hqdgkpm9axoey7ycd3m31xmoitvbn3h6jrbd6ypew2kt8n98xymkecu7cw0n3z8pa5in/specs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiSpecs\" : [ {\n    \"annotations\" : { },\n    \"description\" : \"Hic eveniet repellat aut. Saepe et et laboriosam odit sit accusamus sapiente. Sed at enim.\",\n    \"mimeType\" : \"vzzrvk2o1fm0ap23rdrefal7pxk2ph2sebbyate1z370n0z47j2z4dgs78ikrn0y016u3sobdef6ummzkphvxhu5qseacemk1grmllv7z3k6vvklabe5lw3d34n8q2tut1w0zccnw3kfrb8p4cvr8s0odgvi4zc57nrqnd2idhoqgjrrrcq7\",\n    \"revisionCreateTime\" : \"2022-12-09T16:40:20.599846Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1093841636,\n    \"revisionId\" : \"0lr4\",\n    \"filename\" : \"Stanley Considine\",\n    \"contents\" : \"tlur026o4dztn3asrhr3d65xr6gw115xprywg9seltbuls6jdipkpbcxp5tid9tya3besamy5gy9oxrsuue0q21tbhekh7klscmqoqcvm2ji8tpteqjs95ttpykii\",\n    \"createTime\" : \"2022-04-01T17:47:20.600033Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/146038\",\n    \"name\" : \"Augustus Lynch\",\n    \"hash\" : \"06jxnczdzhjbd5d350l82tl0s3ne110vlmypp385sim7fjwsqaco0ssm2fmd1u2k0a6itkqp7ur25k2evsq7mvu5759cer9w9sz12p9hwqemyra1c42ld13mut4nnprvr5tkuc94s7almhoow8u33qztwan32jqwa6ftsx373z0elg104188t33poiqnqed0\",\n    \"revisionUpdateTime\" : \"2022-03-28T15:48:20.600189Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Et facere quas quod dolorem magnam aut quis. Ipsam ea sunt. Et ut dignissimos sed aperiam assumenda. Vel rerum iure animi error nihil.\",\n    \"mimeType\" : \"zy5us20u4mga4xci97qkv6vlhrbwqw8r0\",\n    \"revisionCreateTime\" : \"2022-09-25T14:31:20.600276Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 726421666,\n    \"revisionId\" : \"3fp2\",\n    \"filename\" : \"Prince Reichert II\",\n    \"contents\" : \"a0evysmlhknubnzgik73jafi64ar8tc57dmkwj9qsozc8cnp7tn4uf1i1ooah5el2mj2qkki78lq614xpvwqwembhx471g87vucr4qophwj3e\",\n    \"createTime\" : \"2023-01-16T17:04:20.600451Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/842788\",\n    \"name\" : \"Esther Armstrong\",\n    \"hash\" : \"i4oq747ycu8z8x9q1eqixfg6xe3yd1xj1ap0uefaecli4lfijybvam33utd75lmf61str09gilobxpfigpstcju8r07j7o7k2eomyutk5s2rkny9ywc56qc1x4ua2m4yz4huk33n8euhs2fog2nnt36\",\n    \"revisionUpdateTime\" : \"2022-06-09T18:02:20.600597Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Explicabo sed id nostrum. Sint similique nemo et dolore quae architecto. Dolor voluptas quo numquam quisquam quia sed.\",\n    \"mimeType\" : \"vz95xx60cdyyanpaxp1119vo3gm\",\n    \"revisionCreateTime\" : \"2022-10-17T15:11:20.600679Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 895115779,\n    \"revisionId\" : \"x35e\",\n    \"filename\" : \"Stephan White\",\n    \"contents\" : \"trxpbkcztod28hjdu1ru21bfwfee15d2032w95wxbh04qj38u6qorkn3uzhxcq7ui323dmua1s3nqn\",\n    \"createTime\" : \"2022-05-18T14:24:20.600844Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/240077\",\n    \"name\" : \"Eva Kub\",\n    \"hash\" : \"xvg1j4dmoj9xbhdceln34jk6vsw6fg6wxphz2o1pcn52by916f3zpwqibyj7dhmk6b1duzciuoffu7ddlh3dm9e94nv2p2f9083cd4iiu5itze5ws24cr3bed20gd5f4s9rm9zjkpzjxbpx3uktazwtqis7pihtn166ovgbsumxt6v2x7ob1sq4bscw14y5h3e0\",\n    \"revisionUpdateTime\" : \"2022-12-08T17:46:20.600988Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Incidunt minus ut et minus. Voluptate vel id doloremque porro doloremque. Voluptatem similique non ratione voluptates illum est. Non porro ut architecto vitae autem veniam accusantium. Et ipsa volupta\",\n    \"mimeType\" : \"dvm6mlqlwbkvv8n3o5iwd273f7u5trwr93f5pp86uxq27qkpp6pww\",\n    \"revisionCreateTime\" : \"2022-03-22T17:57:20.601075Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1876586300,\n    \"revisionId\" : \"b11k\",\n    \"filename\" : \"Aaron Barton\",\n    \"contents\" : \"p5xykduxmzxa1wvxeugqobbjoiykgg0ykdzpk8m75he797x7abku3ck1cbwpzjvyxr6cwpan07ftx4orak2cgtxkeb29hvzwd9x6rv3h72ezdr1vvfvve1rqex6qlv2uwlg7pi5lxwplitfd5zd4p94co2yufwkp61fca0varjycn2uuo\",\n    \"createTime\" : \"2022-04-12T16:25:20.601237Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/633434\",\n    \"name\" : \"Miss Burl Kunze\",\n    \"hash\" : \"yqnwd5yz8mdy4jy3ku9gxttilplmdgptvp0ydzuxw57v9hbxif6na97c6p8jnnco9p5o7azji7bd59lghkc5mnjmme1jh9q20we2qlk7pwnoqa8l84\",\n    \"revisionUpdateTime\" : \"2022-06-17T16:29:20.601386Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Illo eligendi incidunt reprehenderit et. Id voluptatum expedita. Veritatis aliquam totam maxime sit suscipit illo.\",\n    \"mimeType\" : \"666w9hkwmdrk643dbfr1bo6fitlnx4zf0sezc87jv6tlvpza1tnn3i02kosd7mbes935ettrcjuh7635o07lwgyfn27k7fcqibign980w2th0ue6gtywuekwprz5l0it8dfqjba17ivfsec944e61d3nry8e1394fyqyefnfqbgddxq985xth4yxw5elfryju8jwh\",\n    \"revisionCreateTime\" : \"2022-12-31T15:48:20.601469Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1286870682,\n    \"revisionId\" : \"lkav\",\n    \"filename\" : \"Cole Kassulke DVM\",\n    \"contents\" : \"3lc0w7sygtebg8xlif0aju2vpfswc3lrxp74qyhq2l5oaz7rdbzrto4oj322l\",\n    \"createTime\" : \"2022-03-19T17:18:20.601633Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/584683\",\n    \"name\" : \"Tobias Schmeler Jr.\",\n    \"hash\" : \"23r81475c7palg1cwwodpd2hlz6oysn97tcfxo89w5th59gmtpyi7r1r8lhyw7q2s8\",\n    \"revisionUpdateTime\" : \"2022-09-24T17:17:20.601773Z\"\n  } ],\n  \"nextPageToken\" : \"8xazgcz3hvamt31l35ylhfuy39wenut13pnqnfvlgxwt6n62s4jn8ita9nt0yu4ce3hs1yi37bpgnovn0szmzj6zsreofxt57ekp7mhgxyn60yttey6acikpapqa23wwv0f549rdkej8u5bvqx7zp7j5nrrlr5ii5xgsrl11xe8yo1ldai4p0i46wvj7qda2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06ede53e-b857-4d50-9f53-43a9492dc735",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.601918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.list",
          "schema" : {
            "description" : "Response message for ListApiSpecs.",
            "properties" : {
              "apiSpecs" : {
                "description" : "The specs from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiSpec"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b08ae1aa-b59c-41e2-a757-37f2d99a3e55",
    "name" : "Provisions instance resources for the Registry.",
    "request" : {
      "urlPath" : "/v1/8r3lnkctm87052kthqr08zt64u45w27vwtuqyzk6v6e3drhhs91uk8ovwnqjtj3/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Mr. Suzann Hahn\",\n  \"error\" : {\n    \"code\" : 1287888796,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Aperiam quo recusandae fugit quibusdam recusandae. A modi repudiandae. Et non dignissimos dolores. Qui ad molestias deserunt accusantium.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b08ae1aa-b59c-41e2-a757-37f2d99a3e55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.599732Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5bd670d5-913c-419d-ab00-aca93f985d3c",
    "name" : "Creates a specified deployment.",
    "request" : {
      "urlPath" : "/v1/7h9dcapdaknkl4j28he3fc8zjt1chrqz9fxvxrme58e6yzy34dwrr44fl2mutbehbnqn8l8170mdud7nrec32210ch7pan51wm37tlzlkc9wuhepuo4miggvjf8c5spdeoyhlac0z89c84sv4v6saybrza0mgul3d4dg25ijwgiqdxr2uv3hiextzrsx8k6resok999h/deployments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"intendedAudience\" : \"ub63gqm5q3oyavbi3jaux02ljd9ufpro8ww0kf260rknhpc3x128nuvpvb6pf9sonzvp4st24zb9d8ik5ox7enxfzvq70okjmvjovsvuxw72h18d8svjupphj5fxnri0e57yp19d85d8lanfe\",\n  \"displayName\" : \"Kristopher Romaguera\",\n  \"annotations\" : { },\n  \"description\" : \"Sit ipsum repudiandae rem illum blanditiis repudiandae. Et laborum tempora nulla quaerat. Dolorem quibusdam beatae laudantium. Ullam maxime ut reprehenderit perferendis velit ipsa fuga. Aliquid eum as\",\n  \"revisionCreateTime\" : \"2022-12-14T18:11:20.598955Z\",\n  \"labels\" : { },\n  \"revisionId\" : \"hg69\",\n  \"createTime\" : \"2022-06-09T15:03:20.599052Z\",\n  \"name\" : \"Bernardo Kutch II\",\n  \"accessGuidance\" : \"th0qhx9gy8ealpbrtoivavvztsb92a3bptd8vjihclvfm8la8mty25ecbqehwq0rsn7do6ke2exibrutdwbpb1s6itxdi6xj3e90uwnkog1gtkhiz6vwiftokhrey92mxbo03vfazub10eaki757a\",\n  \"endpointUri\" : \"https://web.example.mocklab.io/482856\",\n  \"externalChannelUri\" : \"https://web.example.mocklab.io/188101\",\n  \"revisionUpdateTime\" : \"2023-01-10T14:42:20.599256Z\",\n  \"apiSpecRevision\" : \"dlfq6napsrtlf7avad63zcndxyu7uu4c3dhj4ewzgqarqo4ls2bcx6o8utfsefh6qgv9g1dws6tzwcc4x8nd840d0idk3bdvbxy5qyixp9qdanu0qmm8adfv7h69t86zhim6ako9y9p9i3i5fy4v96qz6und0yzplp6zg0op4093l3dar2stzew\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5bd670d5-913c-419d-ab00-aca93f985d3c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.599475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.deployments.create",
          "schema" : {
            "description" : "Describes a service running at particular address that provides a particular version of an API. ApiDeployments have revisions which correspond to different configurations of a single deployment in time. Revision identifiers should be updated whenever the served API spec or endpoint address changes.",
            "properties" : {
              "accessGuidance" : {
                "description" : "Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "apiSpecRevision" : {
                "description" : "The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec@revision}`",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the deployment resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "endpointUri" : {
                "description" : "The address where the deployment is serving. Changes to this value will update the revision.",
                "type" : "string"
              },
              "externalChannelUri" : {
                "description" : "The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "intendedAudience" : {
                "description" : "Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e5556af3-d60c-43a2-be74-5bd49dd1ad53",
    "name" : "Returns matching deployments.",
    "request" : {
      "urlPath" : "/v1/7pa3u26/deployments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"u10w3t5n02t013656nq7jjkf1x6v4i5km7sfr9410qt494jfxpw1815rpo4gjc9rnj5djhlsxe0b4zr3j0h0l1e64mg7qt5az2kdlzvk7yhz0hpiv47o41fpetjo5f7qc3lpveg2vh0m2gz0q8r4e457olrfbxm6x8ngqyahr8my1e4bnpwej\",\n  \"apiDeployments\" : [ {\n    \"intendedAudience\" : \"u15thq1iv23skk9ku0icixynj47yrfxwkbzljzox7wdslmeq4iy88txc8338ga136do95fr99ew2rkjp0dubw1xb0td0ka9013gc\",\n    \"displayName\" : \"Sherman Terry\",\n    \"annotations\" : { },\n    \"description\" : \"Ut suscipit repellendus. Pariatur exercitationem amet totam saepe. Dolor deserunt dolorem expedita non cupiditate eaque.\",\n    \"revisionCreateTime\" : \"2022-10-20T14:41:20.596066Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"6803\",\n    \"createTime\" : \"2022-09-09T15:44:20.596194Z\",\n    \"name\" : \"Andrew Hessel\",\n    \"accessGuidance\" : \"q4h1ym0isegdnxhk3g9ur2aq8o9jcow2rnt28p098s5rflg0j847b8a62ukj93owjcvm07pvsw2t6p891wb6wi90qhkgskd0gjsxyymda3m0yc5m1ziehgu225lcl5hrkg27fc4qwlu2cl94fu1nqy6rwefia4oktn3ji4n\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/876273\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/447890\",\n    \"revisionUpdateTime\" : \"2023-02-20T14:22:20.59643Z\",\n    \"apiSpecRevision\" : \"kgc46eksw69ug7xpska9jykggl4bltjr7uyu6fzlpgq7xrqh7h3ugf8b431bzmhpgzebeymnqkh18qljv974g475lt0zn7hzim8rzh6xhp87j6c5dfgdij8wjzjhykh7i10\"\n  }, {\n    \"intendedAudience\" : \"1pnvxnsjt7ms2co92kuk74n9snjbu9p3\",\n    \"displayName\" : \"Melda Lebsack II\",\n    \"annotations\" : { },\n    \"description\" : \"Eaque possimus porro eos est consequuntur soluta. Quis et quidem quis voluptatem et architecto. Maxime mollitia cupiditate a. Suscipit facere repudiandae eos officiis eos totam.\",\n    \"revisionCreateTime\" : \"2022-10-03T14:55:20.596578Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"x98v\",\n    \"createTime\" : \"2022-12-17T17:11:20.596684Z\",\n    \"name\" : \"Neal Grant\",\n    \"accessGuidance\" : \"cpwd5a5hd3teepcx55wzz45cw7qp8v0w3radtlanvgup16mrp7nwtuyl1kra4c\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/306764\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/417988\",\n    \"revisionUpdateTime\" : \"2022-04-23T14:47:20.596889Z\",\n    \"apiSpecRevision\" : \"nth1xdpkdndvikj6u7fdrb2txyq41vllr6gwzulwjq9qpd0obbqg1sspe3o7gln2i59fwwilp7fy40v2qymb8dxbvpgpkckuxygou1351f96jk0grudgg682i854e81gdpl9bxhopyiu0ii3pltt0cmfs4vh\"\n  }, {\n    \"intendedAudience\" : \"7gkledr6vs33fctbutr9yd9fu7eog07wpffplw7wcioqtbfbeh91624hp47ebn9nosqzfomkjjytunyty15iaisqyeyijei5l4jsv5gk53bwqddp2txwnxi73hj40o0rwlj3mrq9y\",\n    \"displayName\" : \"Derick Feest\",\n    \"annotations\" : { },\n    \"description\" : \"Ea consequatur ducimus libero consectetur. Sint sit amet nemo qui harum. Quaerat nobis harum assumenda blanditiis itaque. Corporis quia similique. Eos facilis iste.\",\n    \"revisionCreateTime\" : \"2022-09-24T17:02:20.597033Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"dh1r\",\n    \"createTime\" : \"2023-02-24T17:04:20.597136Z\",\n    \"name\" : \"Marvin Wunsch\",\n    \"accessGuidance\" : \"wqx3w58024qqh1mt6p373pnvmeh84a3081sjyuyfyfgxmjnbder95odssojar5ob8qisyx6enavzeao9v44gkdchxc4sw5aww5ccpkl6t7cn5loqya0h7vv21dow6vxq3oihluy1r1dur48ema9f6tfj38bkqgahmgc4k2pamifhsj35lx1x9\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/691573\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/877644\",\n    \"revisionUpdateTime\" : \"2022-12-24T15:43:20.597332Z\",\n    \"apiSpecRevision\" : \"d3uap4c5ul5zcomtjbm3muvk5uobbrbkyr807to1jx0ihq3wjennudg09hyj6xssxyju376drahv4hpne1ad3nc5a1b3is2nq77y2z1tuzwja7a7x\"\n  }, {\n    \"intendedAudience\" : \"9s32sebkec4i1egzmh19kz5vpy77mpuymkrdnfdhxksw4i9fh1uk6jbpbc9eoj8hz26s49jxye0iuoxeidsd3ejkjku1ahham21wivqswvmhmfh62egsbwlb88l2t7d88vkn1tp1jgg67f35lafp64m37dnvjfh9cnu7pk8h8rnc7dmvuei\",\n    \"displayName\" : \"Valentine Rutherford\",\n    \"annotations\" : { },\n    \"description\" : \"Assumenda omnis asperiores delectus eos saepe. Hic fugit quo voluptate iure voluptatibus. Consequatur praesentium et qui consequatur. Repellendus voluptatibus velit quaerat.\",\n    \"revisionCreateTime\" : \"2022-11-27T15:02:20.597475Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"ot2w\",\n    \"createTime\" : \"2023-01-05T17:48:20.597574Z\",\n    \"name\" : \"Alica Howell\",\n    \"accessGuidance\" : \"hpv9o1acw1f1wj49czr5rqj3846fynge2brzfnk9laexzn6cqb3bvscf8w4slce9inh5h7sh6uwyeq2wxjsm0jj9oxryhjcru96te1jpgd9vwxz1nztdl64syi7vam9fycktl6s1f6xoivt2azia7qwdvc0xxcu2q5p4mtt8ju8dr06voann11zvb372li\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/070309\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/046373\",\n    \"revisionUpdateTime\" : \"2022-11-05T16:43:20.597783Z\",\n    \"apiSpecRevision\" : \"6tv4nulstyx7lj9p3pk8negltbhf0qbnm9pp4ynpc6rntiaxuftqv63n8o5ubshvchu9towdsnonhxye02qt563fc77f88drgxw3kobrupje8j5pk8rnvjvf205lvxta\"\n  }, {\n    \"intendedAudience\" : \"xyc2ty55hw3ywojg5afxrv4hikxz9ceg9qwzvm7btpb75uln\",\n    \"displayName\" : \"Landon Bahringer Jr.\",\n    \"annotations\" : { },\n    \"description\" : \"Quos est laudantium. Nostrum qui ut. Asperiores at et sunt voluptatum pariatur nulla corrupti. Aperiam eius temporibus ipsam.\",\n    \"revisionCreateTime\" : \"2022-12-27T17:52:20.597927Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"t542\",\n    \"createTime\" : \"2022-07-05T17:31:20.598032Z\",\n    \"name\" : \"Scottie Considine\",\n    \"accessGuidance\" : \"jhrbtutqwc8fxvs2d7qel1k1m6da244s6v8670fzzud0dhfm40hc5ucg5uf7alskvspxqnqtp8es9ttfr2l7qfxqeasfrlich3h9g6j79scb4a\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/692858\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/333877\",\n    \"revisionUpdateTime\" : \"2023-01-04T14:51:20.598233Z\",\n    \"apiSpecRevision\" : \"2zvhbinh0fl5s1e93mqxx1f1mzqay084e36s\"\n  }, {\n    \"intendedAudience\" : \"xvd8afh8f2kupg6gyjhkgx81qefe37tmuuhgom39adbo8tberlqxibukgfng6qas0cdu3fhal2q2xq2ui9x5jctwhfqatpn6aijt6abotut6rhda4xgd\",\n    \"displayName\" : \"Lorraine Stroman\",\n    \"annotations\" : { },\n    \"description\" : \"Sint autem culpa nemo. In beatae reiciendis. Quis praesentium odit ipsum fuga harum.\",\n    \"revisionCreateTime\" : \"2023-02-04T15:29:20.598363Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"77aa\",\n    \"createTime\" : \"2022-12-02T16:12:20.598464Z\",\n    \"name\" : \"Pok Grady\",\n    \"accessGuidance\" : \"x5kvekcb9bll05eg68as6cmagfx16y7tkyhks10f90wnbwd9hob93ev2v46zqn0i\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/250492\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/885391\",\n    \"revisionUpdateTime\" : \"2022-04-19T16:28:20.598665Z\",\n    \"apiSpecRevision\" : \"fsi8wn5idsu61h95xl6kedri43gqz547iatxwml\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e5556af3-d60c-43a2-be74-5bd49dd1ad53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.598808Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.deployments.list",
          "schema" : {
            "description" : "Response message for ListApiDeployments.",
            "properties" : {
              "apiDeployments" : {
                "description" : "The deployments from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiDeployment"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "264d3a38-cd9c-44d4-af30-507b6cd3b0be",
    "name" : "Creates a specified artifact.",
    "request" : {
      "urlPath" : "/v1/zasi4wceqnjf49o7ty5j08411y4tp4g5ht7wu0kdl5ghc4rq3j08/artifacts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"contents\" : \"n8ptt1oipzz7g32f8g105tn151obfd00jco4p08mcda1p41s8eqftbxa5ud4o7x150odppsoxmiv4rq5eplkuchym9qxct2ybnzi4rgvz44ueqkgg9\",\n  \"createTime\" : \"2022-05-29T15:42:20.595615Z\",\n  \"name\" : \"Mrs. Cleotilde Satterfield\",\n  \"annotations\" : { },\n  \"updateTime\" : \"2022-06-23T16:57:20.595688Z\",\n  \"mimeType\" : \"8406oiq8x6603oydaib3ulai44vop12wru7ictb4ot9g793sjbd3j6svhs137v17uexqg1zkf3fqndsclf3l3dj6rdclfhlo0tsf0udvi8gho2hzjlue0om2wnk6220v4u75jz2lpxoeeluf3usaa26rqjpggk894tnfqyfegpc5gem7ooj42qjt3c8tst\",\n  \"hash\" : \"gcinx0oeu2y28hrpl0vhekbudjnw48xfty3spwde8nu2yb9bgf9lmuop6996jbtzvs\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1498728752\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "264d3a38-cd9c-44d4-af30-507b6cd3b0be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.595882Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.create",
          "schema" : {
            "description" : "Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"registry.googleapis.com/\" and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible \"schema\" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5a2685bb-bf47-4cd9-8090-b3ca19747b65",
    "name" : "Returns matching artifacts.",
    "request" : {
      "urlPath" : "/v1/l9kmnsevl2iy6t41tr0ip486azy3nnefrxhrc7mkjz6p5y3yichdjuggrwzbwdm7xo0owxr8950y1esmx7m309wfog7mhx6ir4zeltqn0jkw3agry8xqikj27eosh/artifacts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"nmiv1m7wmfwcv26pc76knelhjnq41gw6ov4lmdutke1gzu6hi9dygxuzyyzjabnmjb48dsymmd0zq0wiog2r1njou60q462hktcce2gflcg3091kp8jr3gb9b8o5vhma2vmapczfzq6y94gq5hqfc1elkwpdb9tuicosu4cfgxqbthpxtustqds21650s9t\",\n  \"artifacts\" : [ {\n    \"contents\" : \"vk0yeme3l4l9uw6192gr7hiqz4xioiwpb8mscm1hkxde1jjpztgd72a6q1bfrplcupyiqcow\",\n    \"createTime\" : \"2022-10-04T16:08:20.595184Z\",\n    \"name\" : \"Val Hane DVM\",\n    \"annotations\" : { },\n    \"updateTime\" : \"2022-10-31T15:42:20.59527Z\",\n    \"mimeType\" : \"donhqr1l2tvhfgck7utpvevadozbrhlgrxzb1aaacy4911gtzs4ys\",\n    \"hash\" : \"2tow62n8ps9px6bqvc1fcfb5mx2jtyuiyydji6xn618wij523n2uxf96uuor7rqttl7wn2go2qxalwwa4okl1fewosfwo6aul4pzgdos572fet25qee5oiefel7n57etky0o1fhbwovzon5xz\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1887120269\n  }, {\n    \"contents\" : \"6rg6xhnwie4ohoxwhcyl4wr3ye8c5ac7j4f5ldfeds6u4af4rfe1b8yu3ie8u17oi6mbt\",\n    \"createTime\" : \"2023-02-03T17:02:20.595367Z\",\n    \"name\" : \"Dione Satterfield\",\n    \"annotations\" : { },\n    \"updateTime\" : \"2022-09-11T17:01:20.595442Z\",\n    \"mimeType\" : \"m9x0wk1xe58j25iipdpscbgmpfrtk8knl18d33p1gnkkbww14311ih8cjngdm8mvxvafmg19v6njmuyuovi9n69vwinxn5exg2rmmytp2hb6foqkb1t57f814fhagc5nv3836r423x065wmicw5shot2iqpg0r\",\n    \"hash\" : \"bmhvv26nyiimkqh7r2ijwytv37kbxk2xt4dan58w3i46tickzq7yi96lze41tr5uzxginh9\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1918262315\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a2685bb-bf47-4cd9-8090-b3ca19747b65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.59556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.list",
          "schema" : {
            "description" : "Response message for ListArtifacts.",
            "properties" : {
              "artifacts" : {
                "description" : "The artifacts from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/Artifact"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a710ed16-17b7-4a31-904c-7c5e47120eb0",
    "name" : "Creates a specified API.",
    "request" : {
      "urlPath" : "/v1/ehek719is6als5z3y101vtgsp9968p0g8yf3trpn3pwg2vqpdyi63l3pahsdo8q80wb8nnvl2d01bldwop4vr/apis",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"recommendedVersion\" : \"od22acqogxpup0k9\",\n  \"createTime\" : \"2022-07-26T16:04:20.594731Z\",\n  \"displayName\" : \"Clyde Wunsch\",\n  \"name\" : \"Sabine McDermott\",\n  \"annotations\" : { },\n  \"description\" : \"Quam ad autem harum id voluptatum aut eaque. Laborum minus alias debitis voluptatibus cupiditate. Aut sunt at incidunt explicabo voluptatem quo. Quia consequatur qui non voluptatem.\",\n  \"updateTime\" : \"2023-01-22T17:28:20.59488Z\",\n  \"availability\" : \"sqdqlwp8c74db2cyctaorinaske6b7jix3itkaw9kqnml3dttzuba3uylabziidyoqh7mccton00j95nn4txjzevwgwn7\",\n  \"labels\" : { },\n  \"recommendedDeployment\" : \"znkiu7tpj3h2t0vlzf871e1l11f31viapfnpn87b4xi9tnhcido1clwp90g6zdz7tv68aq0t8n8p8smkyob1vneu7bgjldoypnkiu8e\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a710ed16-17b7-4a31-904c-7c5e47120eb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.595079Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.create",
          "schema" : {
            "description" : "A top-level description of an API. Produced by producers and are commitments to provide services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "availability" : {
                "description" : "A user-definable description of the availability of this service. Format: free-form, but we expect single words that describe availability, e.g., \"NONE\", \"TESTING\", \"PREVIEW\", \"GENERAL\", \"DEPRECATED\", \"SHUTDOWN\".",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "recommendedDeployment" : {
                "description" : "The recommended deployment of the API. Format: `projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}`",
                "type" : "string"
              },
              "recommendedVersion" : {
                "description" : "The recommended version of the API. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}`",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dab8fd58-fff8-49cc-873a-1640e6ce300f",
    "name" : "Returns matching APIs.",
    "request" : {
      "urlPath" : "/v1/spauvc7v7rs7afn39o53ujdelasadspksj5c533ev1ld31zdf16c1ou5b21jw2axon2zqv6osj2lt0zrq6g9e0ke2wr7igq4ra9e7cg1gtrvf5vtyc/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apis\" : [ {\n    \"recommendedVersion\" : \"kzexojqwoeq0yeupplzdi918dnree1ug6wqgzbjj9wlesd71vfezvikw\",\n    \"createTime\" : \"2022-05-14T17:02:20.593914Z\",\n    \"displayName\" : \"Dr. Bernarda Pacocha\",\n    \"name\" : \"Freddie Wiza\",\n    \"annotations\" : { },\n    \"description\" : \"Adipisci quod est inventore doloribus dolor. Ratione sunt ex. Mollitia non eius fugiat consequatur. Quas exercitationem ea inventore esse similique sunt.\",\n    \"updateTime\" : \"2022-03-23T18:05:20.59408Z\",\n    \"availability\" : \"bupvt41jb25ix9o14y9v8cqod2crdycsm11m1vzvooow75502lmikkrb3h76d8rigqfqfhmod9z565xyg8bzko1cjsjdx20wtwkjeoyjhcy7zkjycn9g40hdhkm8d64z\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"7lksorycopghxrrzdo4s1d3s2q5k5tzd9sm8sxrsfkp4k2btrx095d11n9g3vjcv6bu7b67np0gvqza2kzkut0fpn39uzxa6qlb4mx6o69fgpksj20fkqgej04evlq6skcac37qt4bo1ccav9abe9gywacsxlvfe87n1fzxfxyg56cn0wyeoopx\"\n  }, {\n    \"recommendedVersion\" : \"b8uhrkyembg9lhuhlqsywirknxa8zxxaacfpxqbr9g3h6ju3ko1g9jhwl5nrua0bn1cyjofe2i0fhxmz88zlhnsnvrf1hvpzdp\",\n    \"createTime\" : \"2022-12-28T17:40:20.594167Z\",\n    \"displayName\" : \"Jospeh Vandervort\",\n    \"name\" : \"Yuonne Tillman\",\n    \"annotations\" : { },\n    \"description\" : \"Et molestiae quam. Quia est ea sed est. Et odio dolorem. Placeat sequi deleniti.\",\n    \"updateTime\" : \"2022-06-04T17:57:20.594308Z\",\n    \"availability\" : \"pb0x0xwexsnl5sb3zahrb6usgaudk2dyinqssnkwrel\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"4k082vbkd7vbya5y4hbpwyji79tjgohw84x64wzf3xbl5d9ej5eewumd67ptvp29rxi8rqpnbccx1\"\n  }, {\n    \"recommendedVersion\" : \"delrf0810omqnwxq7ugbpncvig471nrfgox8kr14up6u22olh0qbzfr7ima7xrioh470j5b6k2iedcd4yw1vvg4jbztgh2emk\",\n    \"createTime\" : \"2022-07-29T15:00:20.594384Z\",\n    \"displayName\" : \"Miss Lorrie Boyer\",\n    \"name\" : \"Pandora Denesik\",\n    \"annotations\" : { },\n    \"description\" : \"Aut quaerat sit deleniti. Eum est esse vel aperiam tenetur facere. Officiis non hic. Aut assumenda facere. Et nihil recusandae.\",\n    \"updateTime\" : \"2022-09-08T16:03:20.594527Z\",\n    \"availability\" : \"kamd7d9iq30jfk9ii95jyb226z335t44v7l2iiiaqru3lniwz1hz9tpe\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"gjxkgkqx58ieeodukii0cdbj9lwex0hrerni5bavbkus9k4qe9p7fnegi57p8zeyym3bbmvolhh2psdppl4mhcpmlbve3qcr85ahah4nqhw2vl4k76btddyplrp\"\n  } ],\n  \"nextPageToken\" : \"9rkha7foaes8f0ajtj1pxlptl7tbcg4y9tkmdh28zkd7cuusl5ma948v326303fxt0uheqiefl3hoipjpmjvvcug7it6g3mpncfs7tz8j50oiymperxe1zgdou9qpsmicmzgiqm8v3dhb1tpnfo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dab8fd58-fff8-49cc-873a-1640e6ce300f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.594677Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.list",
          "schema" : {
            "description" : "Response message for ListApis.",
            "properties" : {
              "apis" : {
                "description" : "The APIs from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/Api"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4765bd84-590b-4551-ac7d-b55b2fe33b7e",
    "name" : "Adds a tag to a specified revision of a spec.",
    "request" : {
      "urlPath" : "/v1/Wilfredo+Mitchell+PhD:tagRevision",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Occaecati enim sunt eveniet magni. Quis tempora ut consequatur dolor corrupti. Temporibus tempora libero. Cum aperiam in molestias est possimus. Vel hic non est qui consequuntur vero sapiente.\",\n  \"mimeType\" : \"z0iojf3um6yhujo42xwr04vcw2klpgif9woyjfec8sk4jw8v2p85jllrbl69b7v3g1zlhf0scffx69qhann3chg8rtn1fthkhpyyf0lpobfpqp5hpnvj7rfuj9f1oax00l1rthsnfcoe7pfn9cqatwfe9kn07jaihxwu32urotqtqn1go7j12u4bv\",\n  \"revisionCreateTime\" : \"2022-10-02T17:08:20.593331Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 216389641,\n  \"revisionId\" : \"wo14\",\n  \"filename\" : \"Mr. Brendon Parisian\",\n  \"contents\" : \"o8j2hrsgs6srbr15bzrua0oi5k8up5u6ku3ecomop3obtcynifm7723wvka3rceeb6jplobl9jtqhd8xlro1g9g8bhveudt9og3gufrh1usznqpp1ocdvctl4vtos76jb0dqcwzdwpcvfvmixt3n1o45anexqv58pf2kw4yljqj5ccco\",\n  \"createTime\" : \"2022-03-16T17:12:20.593498Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/755061\",\n  \"name\" : \"Victor Hoppe\",\n  \"hash\" : \"n4006sx8d4w4mvf4qyzc60w\",\n  \"revisionUpdateTime\" : \"2022-11-26T14:28:20.593641Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4765bd84-590b-4551-ac7d-b55b2fe33b7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.593831Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.tagRevision",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2ab1fb14-d951-499e-b63f-37be9ba3f89d",
    "name" : "Sets the current revision to a specified prior revision. Note that this creates ...",
    "request" : {
      "urlPath" : "/v1/Eleanora+Willms:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Odio accusamus quidem culpa maiores. Veritatis nostrum ea vitae natus cum itaque. Nihil deserunt culpa necessitatibus consectetur quia molestiae. Beatae aut quo numquam quas possimus quas dolor. Nam q\",\n  \"mimeType\" : \"whw9x35u09sfnd5ri2xlm5unz2rvg16n9l\",\n  \"revisionCreateTime\" : \"2022-11-02T14:12:20.59271Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1818658833,\n  \"revisionId\" : \"i305\",\n  \"filename\" : \"Jamey Douglas Jr.\",\n  \"contents\" : \"rp1lladpg35x3dx44y\",\n  \"createTime\" : \"2022-04-14T17:58:20.592875Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/234995\",\n  \"name\" : \"Timothy Price\",\n  \"hash\" : \"dwwgs2akoidgvadu7ig3mf1wz8h214oqonhh72hijmhj710hppqd9lwfur6x1fv5zjlsvk0d8jhm86fd1ueufooh97xch0405l9pzkzz91pbon4vsb7nfynxa3vgo6ltwf8n0ixh4\",\n  \"revisionUpdateTime\" : \"2022-04-06T18:02:20.593015Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ab1fb14-d951-499e-b63f-37be9ba3f89d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.593233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.rollback",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3278bc1b-4920-46a1-8511-eac5bab67988",
    "name" : "Lists all revisions of a spec. Revisions are returned in descending order of rev...",
    "request" : {
      "urlPath" : "/v1/Janee+Gleason:listRevisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiSpecs\" : [ {\n    \"annotations\" : { },\n    \"description\" : \"Sed veritatis autem id aperiam modi. Quibusdam voluptatem beatae ea. Velit asperiores id. Eum aut fugit dolor fuga.\",\n    \"mimeType\" : \"syiluk9ml0qsjz7ccdw94ti0afgmw5aazg9yblm8lkjgt3rl6lnx5r57l46d9d16tryycllo8yzquhe90kmraz1id18uwtt8lv8mb1h31vkscb80nqsiw0s16f7i1jlyi4vicu4cmy06wzlvlwxjmgjh8kdwvhnlug7psmgr6o3mtz0cz5uytihkzv8hapx\",\n    \"revisionCreateTime\" : \"2022-08-24T16:54:20.590116Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 567217198,\n    \"revisionId\" : \"2be8\",\n    \"filename\" : \"Classie Jacobi\",\n    \"contents\" : \"0bkbp6f5212hg6xxoxbx7pt481xmyb4nmwrjxx9aq2awaa5d9yuc6fbbh795k0rvzl5wom37snhzhk535wrs4kasgg81a9639iybl409q88gzx\",\n    \"createTime\" : \"2022-07-09T15:12:20.590288Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/494589\",\n    \"name\" : \"Queen Erdman\",\n    \"hash\" : \"7d2fpejoaaho3nhyrnyaw1j1xl7a22srveysahdno2gnqki364bg71nrzkmeh9k9mlxlue1hzm21y2z426l19roinac6mp6ixfij53lmtxvw2jvpnsfd88z2x0e6mg682zmdctrm4gkpj6zaxvlrg85s1kex5389ito1zc3u\",\n    \"revisionUpdateTime\" : \"2022-08-10T16:36:20.590437Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Eos pariatur dolorem voluptate placeat reprehenderit natus ducimus. Ipsam non ab. Quae illo placeat aut cum dolores. Iste culpa modi occaecati. Ut asperiores minima suscipit et debitis cumque qui.\",\n    \"mimeType\" : \"ivgu0i4aeza01uh39lqff23pq13xb6v30hli9ibs6gabwut9bc66k4hgxch4ipkwf3iy48p\",\n    \"revisionCreateTime\" : \"2023-02-26T15:37:20.590525Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 559740904,\n    \"revisionId\" : \"basn\",\n    \"filename\" : \"Angel Roberts V\",\n    \"contents\" : \"auhmb4hbebpfv1mbcdjoxy9c4z6u0txubhhogs7vz1f2ony7e9q40ezvq9j932nokbcbtb\",\n    \"createTime\" : \"2023-03-05T16:12:20.590695Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/176984\",\n    \"name\" : \"Korey Streich\",\n    \"hash\" : \"va491syrt8iytnovmz85wg9hpfatv4x1a8gvwrvjpgk8wbk17nilbuoenen0nv0zujy609m77l11p5ucvekp9i1ipeh0q00rzne3inkbm51kwrlwdcjonzyzf2o0q42f8w\",\n    \"revisionUpdateTime\" : \"2022-11-05T15:16:20.590843Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Deleniti eius sit eius perferendis quasi porro dolorum. Assumenda commodi sunt. Sunt aut aut optio architecto perspiciatis rem. Ipsa modi et ipsam. Eum ea nihil omnis aut reiciendis.\",\n    \"mimeType\" : \"8pvcen4zrt17lvill61z8sg\",\n    \"revisionCreateTime\" : \"2022-11-03T15:36:20.590934Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1290595515,\n    \"revisionId\" : \"tyxa\",\n    \"filename\" : \"Denise Murazik\",\n    \"contents\" : \"ogx77ji2dltotu8vzshuhnz42ha8vy1gv6i9ne9pbl1gcn8xb5y97oqafhhh76wy9q4u7bdbxl44lcrz4iz4bv45iuige53ulet0lcy0lpzrwxfxkhlnvn5seew0huxzfplxb90fl9p5g\",\n    \"createTime\" : \"2022-05-18T15:28:20.591095Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/892832\",\n    \"name\" : \"Brandi Torphy\",\n    \"hash\" : \"v1b4v1t3xyg1oitbcn47gcnopgpro013jojo2uhwq2smr2ip6ewdyxul14ywfryeedts57ckiinlgk7yue9dis1uih0idt8rck\",\n    \"revisionUpdateTime\" : \"2022-10-29T15:51:20.591241Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Consequatur unde nesciunt nostrum. Modi minima dicta a qui quia. Porro nostrum qui soluta hic. Ut animi voluptatem et aut in sapiente vitae. Debitis consectetur perferendis.\",\n    \"mimeType\" : \"krvqss3cl4ur128m6mlf1qu0xwf6js6xrdw01sg95g9w926vy1xd3v7t268cn12wmrpn166boltzmx9o9am7ea7aani21qijyh0wf0yzgobmal3jeywwxd3b2guplmj0afxbprq6tciefzv6i4a9p2msmg8pirn96q27dr8qsp4dz7xzg01avlj\",\n    \"revisionCreateTime\" : \"2022-08-26T15:18:20.59133Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 882081692,\n    \"revisionId\" : \"8a4d\",\n    \"filename\" : \"Ward Stehr MD\",\n    \"contents\" : \"woazmhmoyiptqdo8r7y5asb6qb5p6lk8a55eihf6br75bfm14yp9so490kkav0h8rcwrf3a4oxll6s7\",\n    \"createTime\" : \"2022-09-18T17:35:20.591497Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/219694\",\n    \"name\" : \"Tony Heller\",\n    \"hash\" : \"mfxx5s42g61vbls8cl9yqrje9neubclx7li8vwlhv9sfkh58nkzp32mcrmqo21fxlu2jx3a6xk2s8v3rlhe9ttme2zsxgj48s356uru2hxwmn5w2v89vywf94bv5cyf7182ks290sm1lcbiob0lw77hcgmws4isxn523xe79\",\n    \"revisionUpdateTime\" : \"2023-02-27T14:23:20.591643Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Aut a distinctio. Enim aperiam non sint delectus quos vitae a. Id vel nesciunt rerum sapiente. Quia voluptatem illo nihil officia.\",\n    \"mimeType\" : \"bzgeq14b2\",\n    \"revisionCreateTime\" : \"2022-10-22T14:23:20.591724Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1123907454,\n    \"revisionId\" : \"s7nd\",\n    \"filename\" : \"Kayleen Runte\",\n    \"contents\" : \"1x4z2ud1zn9qk9uqmna8n8s4bo1zoyx2qq0r8ctaza2k41b6qv2c6mo0n5xmu9eje6k0xwudj5jehlms3pfh6w7nw8hoq5348qc3ut3mvsms66ei43ycwa8nnp7ll64n24bee8106ghnvjc6uzo0rzom0sxbew3yu6fh1xo\",\n    \"createTime\" : \"2022-12-18T17:34:20.591888Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/194010\",\n    \"name\" : \"Henry Botsford\",\n    \"hash\" : \"2otn6j2j0as61ozwk1zmgtanfy2kjxmr64zn617zwpu4snpx\",\n    \"revisionUpdateTime\" : \"2023-02-14T17:19:20.59203Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Est enim soluta veritatis quasi dolores numquam. Minus qui eligendi et. Nisi praesentium voluptatem hic occaecati sit dolores libero.\",\n    \"mimeType\" : \"hwakifk5za22b4dclm404cw039oqa566gdz9qlyfkn1t35ronty6scp6ooqk8gfrd6aqdx3ebpmu8b7qg6ze5gwfzv0k1rfawhnepa1x6d7u28st9itgd7mly986x6ulcr2q6c44ej6ol3vxa5\",\n    \"revisionCreateTime\" : \"2022-10-12T15:00:20.592112Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1186372538,\n    \"revisionId\" : \"jlvj\",\n    \"filename\" : \"Brigida Marvin\",\n    \"contents\" : \"g17bpy743sznl3beg2mm6smri729yxh7dmngw3s7ntl8da\",\n    \"createTime\" : \"2022-12-27T15:28:20.592278Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/955771\",\n    \"name\" : \"Dr. Stuart Bins\",\n    \"hash\" : \"czpvassimwx7ufo4h1pnyluhla6ls990hmdkq13z7psaz1knencl4u43ro8ck6cmrkbcsgpyypmtj6\",\n    \"revisionUpdateTime\" : \"2023-01-29T15:51:20.592421Z\"\n  } ],\n  \"nextPageToken\" : \"kw3mih3gycbiyl42k1cd60kjhtpstaxvkpicapvjwtfrcketoxa4tdvj8742f0el5mhp7nd9saiiqmr7fbpd7uan21dmykpk3i5brgnhm1tivntpmu9g8ojclt7q9wrlza044fzvbjni64fe0bcdq18dd3ns5qyzsdepb4ngavhnskpqhedwfj7ywlw2ao0vesq7cr9\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3278bc1b-4920-46a1-8511-eac5bab67988",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.592604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.listRevisions",
          "schema" : {
            "description" : "Response message for ListApiSpecRevisionsResponse.",
            "properties" : {
              "apiSpecs" : {
                "description" : "The revisions of the spec.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiSpec"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "20bc7d51-7d4a-4d60-aaab-0b36e77095e3",
    "name" : "Returns the contents of a specified artifact. If artifacts are stored with GZip ...",
    "request" : {
      "urlPath" : "/v1/Tameka+Effertz:getContents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { }, { }, { } ],\n  \"data\" : \"eunxrc02sl2bxkxy0z7pxi0yj35fnlu3fyhekrwh89vi362f3fudjsbl1wj2j86vfzph4t2kp9azqkext85w2qy24xhzck46ebou3drg8q4sc8ead0bo2dlu9gwpcmzkrvnx03a1kclo6090pxxwr05kwukoiqz\",\n  \"contentType\" : \"cpweoy4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "20bc7d51-7d4a-4d60-aaab-0b36e77095e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.590017Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.getContents",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e658ef46-f69d-40ce-8b6c-3d6045480edb",
    "name" : "Deletes a revision of a spec.",
    "request" : {
      "urlPath" : "/v1/Tandra+Rosenbaum:deleteRevision",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Impedit odit temporibus impedit ullam eos enim. Praesentium beatae saepe omnis est. Blanditiis mollitia illo quos dignissimos dolorem aut. Fugit qui magni illo exercitationem. Dolore libero atque eum \",\n  \"mimeType\" : \"2zv6l50gbf01cwmil7yb7vbgekm13akm38k4pnpovafps7u8pwxc2w9ciphbzbeb8ivu89ux3yfa5j3xfotn3j5cgqesiym84pdjniy8gpufvffknzubizaj16k2ss8v4h2\",\n  \"revisionCreateTime\" : \"2022-05-20T15:23:20.589241Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1775706448,\n  \"revisionId\" : \"nc0o\",\n  \"filename\" : \"Jammie Waelchi\",\n  \"contents\" : \"thx6bzf1n3drdvhxhfzddatpk82ckpi112m5e2ebpsqi\",\n  \"createTime\" : \"2022-08-13T14:57:20.58943Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/813201\",\n  \"name\" : \"Miss Darby Flatley\",\n  \"hash\" : \"sbw96exoeu9wslon0hkyr39ou5ygzymfge26fzckcyxspawn7ud1f2ef0alctvcwgbzn037zc4lac812lf06bi1yejjgzr9js6hp3xzclqe5acj5l8xp99qegy475n63p\",\n  \"revisionUpdateTime\" : \"2022-09-06T18:11:20.589592Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e658ef46-f69d-40ce-8b6c-3d6045480edb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.589815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.deleteRevision",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d0e17372-1be9-4855-9396-c17e024eafc3",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Guadalupe+Schuster:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d0e17372-1be9-4855-9396-c17e024eafc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.589135Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5f360f02-584f-4ed4-97a2-6d66b92fd5eb",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Kellee+Kris/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Casey Wiza MD\",\n    \"error\" : {\n      \"code\" : 416943438,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Accusamus assumenda molestias consequuntur. Possimus sunt dolorem veniam dolorem eligendi. Consectetur magnam iusto. Aliquid doloribus dolores aliquam molestias aliquam et. Error ut hic natus sed et r\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Arla Auer Sr.\",\n    \"error\" : {\n      \"code\" : 904523677,\n      \"details\" : [ { }, { }, { } ],\n      \"message\" : \"Saepe voluptas veritatis corrupti dolorum cum sit. Aliquam exercitationem repudiandae accusantium. In repudiandae et. Incidunt id dolore ut nesciunt omnis.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Heather Mante\",\n    \"error\" : {\n      \"code\" : 1152698850,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Ad sed aliquam amet inventore delectus. Pariatur porro culpa voluptatem sapiente tempore dolorem non. Rem aut exercitationem in.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jamison Bergnaum\",\n    \"error\" : {\n      \"code\" : 550471907,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Provident qui molestiae qui asperiores. Dolorem et aliquam. Voluptatum alias voluptatem commodi. Non modi est saepe. Eaque fugiat earum voluptatem.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Alfonso Abernathy\",\n    \"error\" : {\n      \"code\" : 793864010,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Aliquam hic doloremque est architecto rerum. Vero sit beatae sit qui ea architecto perferendis. Odit deserunt non ut. Eligendi velit corrupti non perspiciatis sed. Voluptate voluptates quae minima eve\"\n    },\n    \"done\" : false\n  } ],\n  \"nextPageToken\" : \"bagnf8wt4vl9oh271zet703ned2tqx7tqnsmih092z5696nfz65d18iwn5py8s2cjtya21z8nqo9crj37k7\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f360f02-584f-4ed4-97a2-6d66b92fd5eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.589048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c84416e5-b714-4a91-98df-ac7a4fbef095",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Douglas+Klein/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"iuk9xjtmphwr4tbr3fhadkj1udx9d37sknsxhom7i4yt5jv1u4i0hz4bs7v8l93amtiqa6gjsut36vp1v5def00nde8ks7kkv1n2qb3w9qdjww9fx9agbvyi01ddigwafjezitzej54tymi9l9zecpgbe5p3us0jvmhuefogdvnn6matyh5vs\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Darrin VonRueden\",\n    \"locationId\" : \"7n1q\",\n    \"name\" : \"Fallon Beatty\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Maryanne Cummings\",\n    \"locationId\" : \"nz7x\",\n    \"name\" : \"Bob Gerlach DDS\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Serina Welch DDS\",\n    \"locationId\" : \"w8xt\",\n    \"name\" : \"Grover Lehner DDS\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Jerrold Jones\",\n    \"locationId\" : \"6g6b\",\n    \"name\" : \"Thomasina Becker\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Ashlea Denesik\",\n    \"locationId\" : \"pxl0\",\n    \"name\" : \"Saul Balistreri\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Rudy Russel\",\n    \"locationId\" : \"32f4\",\n    \"name\" : \"Dr. Patrick Klocko\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c84416e5-b714-4a91-98df-ac7a4fbef095",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.588314Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9c96bedb-3119-443a-a964-0126ef5f0ea2",
    "name" : "Used to replace a specified artifact.",
    "request" : {
      "urlPath" : "/v1/Mose+Hackett",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"contents\" : \"ru3nt4uir9t7m6mggape0dq4zxpiderwo5mjwecako5ngwnl0nr9a97l55mtqxguok4qb1ot084e1r29spid7amn80ppzgy5t20vmaw64rbgf2bpx0tp7t0dd1xf39fb9f2ercxz2upxuq5khocchq20ysitj5gmnbz084ouodz6oyucm97ti\",\n  \"createTime\" : \"2022-04-23T15:46:20.586822Z\",\n  \"name\" : \"Qiana Stokes\",\n  \"annotations\" : { },\n  \"updateTime\" : \"2022-10-30T15:19:20.586902Z\",\n  \"mimeType\" : \"xw1s90ekp0wao9e5feiz2ohkzamgg7pbqpc4a8t1wdvus1netz445ha22dko7hhzwed\",\n  \"hash\" : \"ybpf4yfb3r4465ew19dmjsp1zr8r46412q8grw52321z84c8jts105n7ob7d20i8zb3jzk9\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1785236462\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9c96bedb-3119-443a-a964-0126ef5f0ea2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.587138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.replaceArtifact",
          "schema" : {
            "description" : "Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"registry.googleapis.com/\" and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible \"schema\" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f7d511fe-f6b8-4f94-897f-b7c3cb560a56",
    "name" : "Used to modify a specified spec.",
    "request" : {
      "urlPath" : "/v1/Toney+Lockman",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Culpa molestiae repudiandae et itaque nesciunt reprehenderit. In rerum numquam voluptas illum architecto quibusdam. Quo pariatur minus repellat ratione non eum voluptatem. Ipsa in laudantium quibusdam\",\n  \"mimeType\" : \"ppumuhl6urs9w7pfeqyiq4awauoc17v14fy8hbsj2g8w2tp1axgfn1jy4strventxica8xkt8fwwl610lxuvi627rtjxohugjafrz\",\n  \"revisionCreateTime\" : \"2022-04-27T17:13:20.586136Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 72856197,\n  \"revisionId\" : \"3h96\",\n  \"filename\" : \"Maribel Shields\",\n  \"contents\" : \"6d6eio1agc35c00ei21htbg5isw0nywnzqj5sftxp0d0mji1xg9nfcyxs1zy4rf4nla77ye35kiu6bvkdil5vq8q7g4ck2e244gvidlr80zvoz\",\n  \"createTime\" : \"2022-11-15T18:04:20.586341Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/480621\",\n  \"name\" : \"Marnie Hoppe\",\n  \"hash\" : \"l37qm666yqza0o02t4sam8xr7jowt6wnnakjnk9c0jz1zizrvmsm6eklb8aretudfon8fxdfcj4inwdahpktbui24u6mmfsynlmlydv2xjofkzt\",\n  \"revisionUpdateTime\" : \"2022-08-26T15:25:20.586502Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7d511fe-f6b8-4f94-897f-b7c3cb560a56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.586747Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.patch",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0bdd19aa-d7fd-441c-a19f-53b1cfa8468a",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Ione+Casper",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Lilliam Purdy\",\n  \"error\" : {\n    \"code\" : 1712192456,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Dolorem incidunt praesentium perferendis saepe aut odio aut. Et mollitia minus. Dolorem aut debitis nihil hic eum aliquid. Et rerum reiciendis necessitatibus in ipsam dolorum a. Consequatur vitae omni\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bdd19aa-d7fd-441c-a19f-53b1cfa8468a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.586023Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "de055b7b-4644-45df-a1d9-089c88260e3e",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Joel+Rath",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de055b7b-4644-45df-a1d9-089c88260e3e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:20.585695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}