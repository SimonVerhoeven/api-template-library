{
  "mappings" : [ {
    "id" : "cd386319-dd95-4c4b-9fdd-86e1674713a1",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/k5ppvvy9nn2rxws6s8ab6by6hmm6i5dklcn9r3nycxt1h4rbekxcey4jfzgr6iy0sipgvllp9fyj5nry1x76jwi08mwf37nkfjjumd71xhfy14t4gn6ihetlyg8e4h39onhg8:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"0nudrio2588rvvj8vwtabw0ldkab8knnkofcufj58u8mg62d4yw6mngox94ugfdj3k8vtenya4yu53f8qhpw9jcwvtqkm8d3yn2dvz7tdixam3xzpxvny26nbqzfjtht6\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd386319-dd95-4c4b-9fdd-86e1674713a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.267936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "526fa113-ce9b-4d4b-b6b4-1dd6328f8ebe",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/a91numvy01cxq0jxt2i8469rel4b1jsk7jzy7t9d6q4sg0s69zs2gf1uv7k4ibswnn2071tle2egp00r9nheditxo91rt2k5kpyqetuc9o:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"dwhxutli37huboympciprgxbp164yuogy74xngs19ludgsv3ses4dnj5bmrl1855tx7xrwr7jld8i6eytl9tkq8re\",\n      \"description\" : \"Veniam nostrum sed amet sunt sit voluptatibus. Non nulla molestias voluptatem deserunt. Voluptatem exercitationem non fugiat qui molestiae est praesentium.\",\n      \"location\" : \"wwh1b23i072w3n127uv9hxpuanxblhbuzpyfbico6l4vvl9d580nxjvqcxkc6px1w1dp13sg7nhcivlbqg6m68af96po8mwbia3v9irj2i2584i4alo06mmdfhzjzky5utvge0904ina50i124bz\",\n      \"title\" : \"Occaecati molestiae in repudiandae blanditiis cupiditate.\"\n    },\n    \"role\" : \"35iji09ykhpv3tofn5ljbv14b0gd0p67jodjj9xc5ymcupbt\",\n    \"members\" : [ \"gjgmv\", \"kjp9ktbhwo09xgl7dueb3orzekm7zypvj2vwqp4dbxiy8f8wou2dk6nfoqgglp5wcvqy8nsu9peg5yni0x1s9d8dftanat\", \"6bre2048cfrs\", \"flsshso0nqi0vy75tcqsf0cp45j6escnqlfunevrrfjaqpxqtnliaa7vfuyxl617gp8dsradvof7avlam7lc84oagkg5fmd18zgbfszae4vjbrnf6hqrsks6i5yilp5cq9ig6\", \"5epjuvh6fj0yrb0a16g5jxerfh389mz42npye9a65de9s\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ky1cmhi2i0cjwb6pakvseznvz0k1s87otgxkb8awqy115zd1vr7bha0213ocmwfwq9fc9eysz80\",\n      \"description\" : \"Quasi quod voluptate qui delectus. Qui nesciunt ut occaecati. Perferendis facere consequatur quia. Aperiam rerum quod qui a soluta. Voluptas quae corrupti.\",\n      \"location\" : \"h0896fbpxehrm5y2hjj1y6qo2s44df25xx41445s3id6196jraab9fevvj8km2f8yzfu2n8j2ipjyo6df7ztzo0oelh5waz2a4elgf\",\n      \"title\" : \"Consequuntur odio autem aspernatur commodi nihil quae tempore.\"\n    },\n    \"role\" : \"yx3dr4xo65vi00u9j18wl623kzon9nkuk7jydf2g9f50wg3yjjhrcxp09fbt6a7ijz2pxlcvup7kwf12zdwyb62rcetruzxk5n5c91t6v2a6k3k74h4jj0pz8l1mfni1\",\n    \"members\" : [ \"tek22o4yfsxi4q1r4yfmcshki95pew43tn3gbjcb3npe768o5d01pf3awjpz3ckhml3250h3t1jxuc3007ixpjhhni0pvte9105dbf961el8794s0suq1qst\", \"cwi1g415x88vvpgfhger3n4gd3t0w8chnghgkqsnyjn1jlus7caxiyb4fn7fio5wi9jb4j5rbx96pnjnekqj4lyco7ja4qb0zpjshxyrcdkksxjlu7wre0gjy09of8tti5zh8x2h4si0ydod2yiym759ydh3a4rlhnxb8kal85\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"qsy4np1rgb8xdm7fya5sd09fe0oy6xtd2tl2tzqexwasgp49ura0ctawbvd13y7c4jk4m5w6xalofy82\",\n      \"description\" : \"Temporibus omnis ipsa consequuntur dolorum voluptatem et. Quam et necessitatibus. Aut quasi animi repudiandae facilis eum voluptate. Enim itaque quae accusantium in harum aut. Tempora consequuntur qui\",\n      \"location\" : \"1ri\",\n      \"title\" : \"Quis sit ipsa qui rerum iusto modi et.\"\n    },\n    \"role\" : \"3enquefmj1pb1ll4fsz92vqdghj74h5vsgz9x15nd2j0x3eqqjlp8flarnxiioqpd43v615ywher9cwp3g9c2aoj4hr1tjxmyc8umch9l6betrpi11foxwhmsn4bun6cb6\",\n    \"members\" : [ \"fatocl0l3jy\", \"s77g0lzrhs15y7en2tc3j3gar8o4y2yovt7ydsfb90erzlqej4glnzv2a9orciobpuf20edai3goncamts9gakilhnejz3zvbqmnpby3nezbmq2okc1yuy592cr7fzgttw2n1n9n9krioo5axh6cmlhlmdy9w9y\", \"k0brg87b84blsq1q2on89xogxmf5k5wu9eckhjc8jezqq8hw69r47gwv2avvznkllkx5pi5jd0guriekq8mqrqnqukmbwxb8f4269c3j6vi0x6sjgf72nwl5zo4ync6s4wcl73p6kxpdjdgtywirhp\", \"xr2x9hi06r2ogppzc5owd668uu7msyt4gfh1y6ua4hkqm2fe35c7emdxr9h8hio\", \"0evijmejybe3gnoo2baea3th3tztdq7ichd6sc8lehqo2f\", \"wjwuj5dhmwpf8okzt90u7gb2j4rupg5a6qbvrtttycu5qc4u5lvcu4u5hbpbeib2tmgf0537w3pv38t4wqpyw576bhqyf\", \"84tw0or4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ap8u6i6vueym3t1dw5xqxlxkrc5oiwwuj6wev56faovstswavv2e6ze72infwsiklfvme75qwnk6560exvv7s5cioz363dlfgjwz33\",\n      \"description\" : \"Aut qui velit fugiat assumenda nobis quia. Sed qui voluptate dolore. Voluptates saepe tenetur consequatur. Accusamus sequi earum dolor pariatur quo beatae in. Deserunt porro quibusdam consequatur quib\",\n      \"location\" : \"z03qak8e9xg81s526xi6z85mkks6rhf8lh7879puoe3tbs4q2pomij6pe5lg8qmqc10zqzj2y5vtzqtntqwea66e5lynpeav0shc3v717x1b2ekw0gvpyshxomaizjeq2yze6gjcy9lk99ebefqzpl8ao5rgbku0\",\n      \"title\" : \"Qui minus qui dolor minima.\"\n    },\n    \"role\" : \"hiljuqvvecue1let858r5kpaivxxh0ilxp0lvchqgdq92wg6fhh2lyk34kwya25zg01\",\n    \"members\" : [ \"whioczlh4b9ldlc78hrsak0fkw6n0h7gvfg024z6b2aaododw8kr73ny1er9joz7xsi6bsz538vi526sprodf\", \"mg533oe4hqiw1q0wnhcygc159wkw0bbp289vxpb9n6njkz\", \"bko1jnuh7sm6qq6ynjzoe5njusis51n2ztvux54x7h1ciagrwpvehrz0ywd51h7fh1bxyz4hla68xqsl8ssvh4v7f7p9jpr7h4kplcp4empjrcq3okp3cxfspr8aeh8hyixmmdkn1rtr8c26nxdy35lyixikemt99jost5caqo46ga5m2z7ovkjqpy5\", \"oui0p6ynlphaewzeuypiac1vjh1u6tyxat5qiohvgqpqukqarg42eraqc63ps3lw4s6u62axlz85yiz9vdcy4xvo1icwrm9wjvpj51gc3i6euya3279pe6rm95ychg51av\", \"qu3lpic205xflxnwr32al0rup9t94wy74yzb9gw7iahhkbeas0iu1kwupl3t46vyk5tfl8bz6zakyg1j0zvxw5ia5xjwluifex10gm11o1u4uo5\", \"qrf8al0lpq792q9bbnvwcmdogjkopyjzt5tilesu63tysdgrr5tduolqmbv2nda2f1kizz5zwi6mzchrov1x2p4zjbtx8uqdgffl25zx1gbl3dgp690ew8y7f0f80j9j\", \"4h3xul5n4fa1rij9gsvxoc2nr67kfzsym7e87hg4omtl86iispyw2akkd3ft58mx8pve7bypf6v\", \"fv7c6zo6daxho0avpe46wd9lqkres0nkyde5u7u6jq24eco4o646cjg5hgjqr7t4ycptzq54bkdrvgkb\" ]\n  } ],\n  \"etag\" : \"officiis\",\n  \"version\" : 1147486757\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "526fa113-ce9b-4d4b-b6b4-1dd6328f8ebe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.267843Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "2db28202-e65f-4672-a0e3-842a23db9c83",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/ssj9viogz7yjhq38s470j7lq2wh7hmuq85s2mf62iq1pbvlrg724293ca0n3jrkgtml1qzdazrerjstw7o3wk841dq89m5jhk03jkytuiht9egrzhfe9ebke9stcq1pfnyh4bvakb0gzrxukm9wrwgfqoq:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"9vbniy0kyp04y5duqkm3i88qslzsf5023ebqvn6bwbkif782qjyrddsnll3925hs\",\n      \"description\" : \"Repellat deleniti unde accusantium quisquam. Omnis minima non amet vel voluptatem maiores. Dignissimos ut voluptas. Et dolore voluptatem asperiores.\",\n      \"location\" : \"oiq5aw5uedf9v9j42ttt9f693bdde0zkgydg6iwwq1idxfacbq46ont1n0v0lx\",\n      \"title\" : \"Nihil veritatis doloremque similique vel.\"\n    },\n    \"role\" : \"y3hdywtwzot4fzabc7pc6qd3most6arl2vn52h5d0kbnlcl2r0p9x8e5yrdfwe3lha8nq8oe4sbhonv4mviyhqoerheu8b4ta56c8u58zhqqir8jarnb6olmajs2nqzs2saalmtyfk8utap8n63cc3nomfjo36745fvr9sexlbd2009e8vb1giqtkun\",\n    \"members\" : [ \"p3bkjyn5hec0bddcx590q29aqfek5\", \"49d1lgzhm2pmmowgkloc3e80eogf3xfkvo51x5ob4iu1n65vrrbyn9ft5x5vdr3svqohyn1lg1cu29glgh0iiqcwqbppjcetzp7esh7x9wiv35sj8n2g92nj76onwdggovyq0skrfh6umf94apfcascysa5z6hpxty1zgridnsqagqo1j6dm6lrm835\", \"q0928rbppxezk743trbcx2r6pa8ggj4rxw1g1udtm8vcy9j9wpkbno1jm9xqj2fcocrtufwc8o3794k7ogbt42zhesfvuczkoo5s371u7a8nhd85vydtj90sc1dfo7oxmho2xewrq8n1\", \"fzhlbh2owcp8ve2nqi6bnqiqddrdcn9pn6jg710qxggghy4zrft1smdsro5hhn08iiv3eyipsui8v4xeuzwl6inkgj0a4xymujdojqtacrzzvqzz4bnt87094mop4che6va5mwkwdyzzgcfzjby3erzrq3mullfw10xogtc5\", \"bj70d7y3w6x\", \"f38yeqs8blslggntkr35exhryuo2gmommha8ivmloxwp223zu9ol8cbx1697\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"jfofx2ium600ecms8huuz17nqm9fnmmv77nm9bhkdkzlula5ks4gabidk318gs8hwj11crdzvt60hngszs\",\n      \"description\" : \"Et voluptates et repellat ipsum aut cum ratione. Ut voluptas laboriosam eaque sint. Eos aperiam eligendi vel et consequuntur voluptas. Sed deleniti quae ut est aut qui. Iure nesciunt praesentium vel.\",\n      \"location\" : \"anl22flm39fg32vc4nm162bzrpolgy43hubkx6u1bytpbpvyuxdvqx0psmt3zvmkqx4maqo2nm3hikpbbv2flss5ftp9uh69l\",\n      \"title\" : \"Ea a ut quis temporibus odit fugit consequatur.\"\n    },\n    \"role\" : \"3z7j6pivjkcx3j53xl73zz42ddxzgsfwgjmv1au2fs19tpfliqwrnly44mrciwtqdjh18iy\",\n    \"members\" : [ \"b96ptnd7peqhzcvefcem78jtbb1nv30l4nxfjbnbntfsegjp48vqokodf0mu33ez5ixn78l325mjzuzgx\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8ipfkajveux7jrm2vueawsalr47mmjuts6gfzzo9bd2akktojmpob91n3l3b7iyqomn6e9m8cjz2jx7hfdcgssy1izdusu0kj8wb9de52mfqvzacijk1q0f68sxskmtypnoxgx6ooyse0lh3i7xwr1i7oa73rkghkynpbxtsbh0iuk5jnu3nq0ykyrftdoh9h2p\",\n      \"description\" : \"Vitae veritatis minus et illo id. Error commodi voluptas delectus. Dolorem quo cum sit iusto et.\",\n      \"location\" : \"lrtg7900z7q0lhjkdmkhtoojeaw16frem3qbseo4gl\",\n      \"title\" : \"Et sint consectetur expedita deleniti molestiae libero.\"\n    },\n    \"role\" : \"2zy8lyokd8g6h5ql7sbsdfyc8txzrxg6xwricq\",\n    \"members\" : [ \"557h1rd7zgjfu0d1jztvp1j4wt9su347jys3vn6oigw3rxxfaop49t9jehzsoxlb372pd4jyrdtw6rkagzo8zsatwcji8a9at9nuoa4oo38hhsrjahfhbu48rf3\", \"9de6yaujhlrmfrgjfv5tyve8ef4x9i6becdjk80rqkcgcjoet31nqednubika35y8vc8x2ytenneh319dltuqj261nnl1zcvrmpj6v3zjr\", \"ew8i91siq7skefd63oz0lsucbfoq1es69dagvme8hozv8nhz5ymc1tjtcr3o8z6u66kbtn4elznywem7z8loo5a7feyof83b7o8kqmph0ki77nffn878y4nx8q6gayybi7ogfr2r7jwgomeajzbwc6hca52aa8s3g3qp60z42jjnzgod08rk\", \"zv5cogrjmow\", \"3fj1fcxraezdqgmra7jya3bpz9xq7ygr8gfa748wdehxyq6y6qnhpilq3o6nd2mmvp5zrtn5i12unajeef8m3re13y7s6v7csvyk70y77kx7xpxg1qg4m4hjk8moyo0a6t39znd52hc29d1qj0xssfiy29m2\", \"ec0itwqa405xf0jppezs5j1kz60xzbljxugg058dpst5fodrssoeqesrkxt36rkqxlz0c2p4nyw3lxj6p268b24bpgnyxutd9ds56nh3nrqbu3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"6ct0mtsp6sb0lz1ozponda2m5n\",\n      \"description\" : \"Placeat delectus ducimus est unde. Officia accusantium cumque natus dolor cupiditate. Et delectus doloremque quibusdam nobis deleniti quae. A eos sint. Iusto sit dolore saepe porro.\",\n      \"location\" : \"wpj4o7xszbtzbk3mrsukcz5x2hg7vzaxcb5f7por0y0es6qufyps11p32gzfwmbxyd10er19v178u6ai3tsf10j9mprcorxmaigv34u52wh1hxp6k9zf34olw8lj862doep5wpw8jwfavq590yb04b0lbgkz48z2w50pxt\",\n      \"title\" : \"Omnis voluptate et amet aperiam.\"\n    },\n    \"role\" : \"0ajz9wjk9yqlsqgw9j1c4fcpz0hw8sbhprk8xam9\",\n    \"members\" : [ \"n57bfkd0b5u0lglxmh7tv0zm2b5f5dy6fsmif1utaosfzm239foylxbxv84xssor6tq3oeq8wklhzz3w1zlg2tx2d8fk30mhgm72\", \"nlrfjioi2q1e0478e74b7wsfxlc5smxo8mraynqj0zb8ih40asyihjoqv55p00ychx94n6eu8go2m49mhm09pqspl7qy5t8havkt42gmt53k45h6h51dko8rq306x73iwzxt233zzl92k1sxd4emepx4vxm7dln7lujocp9iy5dfhi2umk7sudt\", \"s07g45o9z3vw0naeudqxoatkf6qij7h70abi03quvkhx0rwdsxrusw9kjaczd4j61xpca3hyskrhezz1saclhro6y73tlfxw13dt3tpazbw61hoe11p0i6ex8wzqb7rstacox6diyo0jirzzpdut86iqtukcyk8jt3tjfxq5aggkjdrkupj6ql9c56ax6qg4g6r\", \"1qbpm7qpmc6fs9dyq2coybqiru3awycnfemtkda0hezc\", \"xpq4edwplhn9o9gr9z0qoh27l33gmhct5zjeqrvvttm9jy0iwie8sn9rek2kjgjn303lgf7no7l2g2uond5t7u\", \"augos7hq6jnguymmmsbnynirr6siibteb2nayo137wynyz6kiz0z72an39eya5iyyhacimq77o7kxbkrx37tc82dot36mn75jzy04mtb21u4w55rk39w0a9oxrc9ja835vvptf52n6zdd5o829pxx3rcbvlquhyf4nckrhrlauppigqxooltq0pfdte\" ]\n  } ],\n  \"etag\" : \"vel\",\n  \"version\" : 319861659\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2db28202-e65f-4672-a0e3-842a23db9c83",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.267052Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a8c535c3-fd4c-4da7-893b-b18dbcb83fac",
    "name" : "Creates a specified version.",
    "request" : {
      "urlPath" : "/v1/98gvc0cdk8ik9ud989cg6ev97pe9udc0351x4oltpg052q387e1i958isp62hul8diy3zzm8nwjj40ayy44wtu6g/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"primarySpec\" : \"tmqs5164gryq6p2vv2hsvb5pd2f6ajx84chpihdqrofdjn0jsq8ss46ud6vpqrcs4gx1hzorwk453sw8ruv6u41\",\n  \"createTime\" : \"2022-09-08T09:52:10.265928Z\",\n  \"displayName\" : \"Wade Purdy\",\n  \"name\" : \"Rusty Senger\",\n  \"annotations\" : { },\n  \"description\" : \"Atque voluptas autem quos illo est. Sed soluta et harum voluptas nemo. Totam eius eveniet rerum. Autem adipisci laudantium.\",\n  \"updateTime\" : \"2022-05-20T08:26:10.266068Z\",\n  \"state\" : \"Wisconsin\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8c535c3-fd4c-4da7-893b-b18dbcb83fac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.266241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.create",
          "schema" : {
            "description" : "Describes a particular version of an API. ApiVersions are what consumers actually use.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "primarySpec" : {
                "description" : "The primary spec for this version. Format: projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}",
                "type" : "string"
              },
              "state" : {
                "description" : "A user-definable description of the lifecycle phase of this API version. Format: free-form, but we expect single words that describe API maturity, e.g., \"CONCEPT\", \"DESIGN\", \"DEVELOPMENT\", \"STAGING\", \"PRODUCTION\", \"DEPRECATED\", \"RETIRED\".",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "4d5cef27-3783-4bd8-b47c-818694ea593a",
    "name" : "Returns matching versions.",
    "request" : {
      "urlPath" : "/v1/difradxm0tp5avv52stc1b6xdrz82wn3m3vp63aa5qzszpxholdx936rwny3n6lkmpf1qm4yr2fh285i4ivdqiir94kcjfvn9907ppufso9ix4210q/versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiVersions\" : [ {\n    \"primarySpec\" : \"j31u2gi33ygv6tiylnoylt5rv1n7ky2a2vy50cta2vrg2ic1w4pn\",\n    \"createTime\" : \"2022-08-19T11:49:10.265383Z\",\n    \"displayName\" : \"Dr. Jan Powlowski\",\n    \"name\" : \"Wilber DuBuque\",\n    \"annotations\" : { },\n    \"description\" : \"Autem distinctio id rerum libero. Dolores neque ipsa impedit eos sint voluptatem consequatur. Labore ut veritatis beatae expedita dignissimos. Sed deleniti minus impedit ex.\",\n    \"updateTime\" : \"2022-05-20T09:34:10.265546Z\",\n    \"state\" : \"Texas\",\n    \"labels\" : { }\n  }, {\n    \"primarySpec\" : \"y416kgunf5myx2e57mv1s9ezoiv5d6fwmnz6qgmv9xoelne6juji1r4m0lz4wo54cxio853gv93exb061joc\",\n    \"createTime\" : \"2022-04-30T10:28:10.265615Z\",\n    \"displayName\" : \"Deanne Harvey\",\n    \"name\" : \"Merrill Heller\",\n    \"annotations\" : { },\n    \"description\" : \"Cum ut illo voluptas facere blanditiis aliquam quibusdam. Assumenda voluptates unde excepturi. Expedita enim totam ex at ut quia corporis.\",\n    \"updateTime\" : \"2022-09-02T11:22:10.265759Z\",\n    \"state\" : \"Virginia\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"7sautisbdtp5hh0z9d9le9xf03q8iymlbk457ydwjqi8elic5bech38ysmazq0xpbi79kbgmag58uo7o2lz5h5woshx504u98tdk76jk7tda7lwlyq9s9uyc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d5cef27-3783-4bd8-b47c-818694ea593a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.265881Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.list",
          "schema" : {
            "description" : "Response message for ListApiVersions.",
            "properties" : {
              "apiVersions" : {
                "description" : "The versions from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiVersion"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "9076fedb-c0f7-497e-9197-2cb580f427d4",
    "name" : "Creates a specified spec.",
    "request" : {
      "urlPath" : "/v1/y888oqt3g0ibse9vy2cueomucyola2xxux37tufr/specs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Nihil repellendus exercitationem. Assumenda quia et reiciendis sed. Voluptatem ipsum architecto et voluptatum. Deleniti quo harum labore necessitatibus et.\",\n  \"mimeType\" : \"t3ud2gxlqstxwiiekyn1l7rpjwwz3g4yis1lyqbc0pcwr03078c5ih9ows1z9olr37c6ix1t85o0p7ax8pa3i6w901t3j469d4ijv5b1an51ksyybve3qtyp0jo6gbeh7sg4mk10txf3xyz2lxr6wmurvh6xq9lbi1uxdc41meiigd5aqq3v5a\",\n  \"revisionCreateTime\" : \"2022-07-08T10:04:10.26481Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1384389186,\n  \"revisionId\" : \"repo\",\n  \"filename\" : \"Karolyn Blick\",\n  \"contents\" : \"kdty9uprwiz1swv6qj13qmswfhnyg4wlnpbez8t1bccsql4hm6wr3hz9d5fbq8cym952pxwuo70\",\n  \"createTime\" : \"2022-07-12T08:53:10.264973Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/284333\",\n  \"name\" : \"Nu Hodkiewicz\",\n  \"hash\" : \"ad2233ofz5i4oezgm5dfsp4f6tgljgf2u55qeg30eyvrciicqg7cvjgz8vsh714o2kc6pkl3t2c8psuofjk0lryvyefrj9w724qayxg5bxmdt7bgoixe1eyn06lcrts8j6tyz3z9231ri8qjqctu131953ah73a7hizfysecistzi26q4j2s8m2vho55jut\",\n  \"revisionUpdateTime\" : \"2023-02-08T10:32:10.265106Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9076fedb-c0f7-497e-9197-2cb580f427d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.26531Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.create",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "9f20e075-337c-461c-925d-444675d0e049",
    "name" : "Returns matching specs.",
    "request" : {
      "urlPath" : "/v1/wdt7vypo52ugrh44i43l6l8lz2bfkup6pj8qfzdwg2yf5m2od5ma2oipnwd29dvrfcl3yn2sl94aag59mlydsu3ea85m7e8lha4gnt0bniiy7wm31iu1hlf03o6hjnenqii02auelun9vc59qy667oloc5cewqrnbw1jot58l940ibxotum7ak6inuk0zq7/specs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiSpecs\" : [ {\n    \"annotations\" : { },\n    \"description\" : \"Est vel animi vitae consequatur culpa. Inventore dolorum perferendis aut sint quia praesentium. Provident rerum sed aliquid eum illum.\",\n    \"mimeType\" : \"1y17i46kh63rzgz8hnwfr4xf5l5wex6eps9e9cvi4n6co5zw3y7athk4wsaq0zr5ldgyyj6i04inc612qyct3ebpdlx43chgktc4dwns8dihz37w2yjvp106an8j3n8lr7fvbhjhthcy50518rvx39\",\n    \"revisionCreateTime\" : \"2022-08-20T11:34:10.263917Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 998249343,\n    \"revisionId\" : \"bco9\",\n    \"filename\" : \"Mr. Horacio Gleichner\",\n    \"contents\" : \"pooklmjbjmzgkom5h4o1gdrvuq6cgf0joj3qkn3fdu1w5jktnp715tfokjkowbn23n6dz3c6g8x6s1q5ro9w3yamljrx7h3ot770yhnwwv7u4ohtppqgd3d1x258lwwz3vh36yn9o3fimtj5shm78doxf4frvm1o974nqi\",\n    \"createTime\" : \"2022-04-08T10:27:10.264101Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/929707\",\n    \"name\" : \"Owen Kris\",\n    \"hash\" : \"gpy4tu4nvkz7haywkxlmxywkx2hdzgzcywf4b47llnat0dijv0uhkqsqzyyyamqr80ga8n5f14xbpit6az4sput52xqdpdzww90r90lgs7ioiz0hhs3w8q9l19suac8\",\n    \"revisionUpdateTime\" : \"2023-01-28T11:10:10.264249Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Ut ea assumenda incidunt aut. Nihil magnam praesentium aut dolores earum placeat quaerat. Est nihil est eum. Illum distinctio qui ut itaque. Quae id mollitia ut exercitationem debitis aut.\",\n    \"mimeType\" : \"wdmlw56gh0y98e5w4gtreyau57lihanb2lbufps2sow3yfz9mkw3ldbrf83zeyzzqb\",\n    \"revisionCreateTime\" : \"2022-10-30T10:29:10.26433Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1377711911,\n    \"revisionId\" : \"5n90\",\n    \"filename\" : \"Suellen Bogisich\",\n    \"contents\" : \"7l7dnjem1zbggcfhdtu1r58wyv6htgdb44sq5phwlatyv5xzxkab36twsdou3z1yjn1ewil3acd36l5rstw26ol0m2ilmrpwjf6896iceilx6u3x5o55h38ac7\",\n    \"createTime\" : \"2022-12-20T11:40:10.264495Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/876717\",\n    \"name\" : \"Eddy Hansen\",\n    \"hash\" : \"bvv6nvjpx7wmso8r1fa8\",\n    \"revisionUpdateTime\" : \"2022-12-15T10:42:10.264637Z\"\n  } ],\n  \"nextPageToken\" : \"gfoixf0038vtj3c2h6ow08lzmx211eldikgypnv8jzetge7otsj2hc5z08la5g25owzk5s5j4yijro3mmfnl04bg11ufsnycjzmfxovry\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f20e075-337c-461c-925d-444675d0e049",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.264728Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.list",
          "schema" : {
            "description" : "Response message for ListApiSpecs.",
            "properties" : {
              "apiSpecs" : {
                "description" : "The specs from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiSpec"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "740a0449-e7c1-4627-8ab0-cbbd33d5b88b",
    "name" : "Provisions instance resources for the Registry.",
    "request" : {
      "urlPath" : "/v1/bvavb3zyqi4525eozjq2gbn7kenncpinejoyuvxqdu3bfwfuflszrb10mnrkhyg89hfh2xglmxhsi52fqpq8xb7wf6wevcmikj427s9wxwl1r4xachnu/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Dr. Duane West\",\n  \"error\" : {\n    \"code\" : 223861096,\n    \"details\" : [ { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Et qui rerum. Voluptatem quae ducimus deleniti veniam quisquam vel odio. Consequuntur totam qui ea. Tempore molestiae fuga eveniet quam.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "740a0449-e7c1-4627-8ab0-cbbd33d5b88b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.263812Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "b9ca0c5f-83b5-4998-b371-fd60966a158a",
    "name" : "Creates a specified deployment.",
    "request" : {
      "urlPath" : "/v1/31eb55rcu61laxsd4d8v5ihr36u3fhavkvxo6hac8nquyhws0h73cxe0rce9ncfmsck1ttpyyjtx1dt1m55dojcv9xyyh3eq4g6e6p1g9kv5q2slx7yqraxuhv327sx6nk901dswwew6353axawy2rkrgs0yncqmdj2iqsos3b75uf4qu6ts6t58172xzr3mv24p07/deployments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"intendedAudience\" : \"mq4b0u5l8tuokol6tp20urir6o4yzb7d3u2g6mmaf6e70z3ha7asepiet8i26i48dmhnh3xb4cw2z4zydhlw5umggfdp5il0vselxhb2ts1pcnbhbo8heudp1ncacegkp0cqpcursh4\",\n  \"displayName\" : \"Ms. Tracee Sanford\",\n  \"annotations\" : { },\n  \"description\" : \"Corrupti excepturi cum fuga et est quia sunt. Ut quo voluptates ratione. Iure sit quod repudiandae in ex placeat.\",\n  \"revisionCreateTime\" : \"2022-07-12T09:43:10.26306Z\",\n  \"labels\" : { },\n  \"revisionId\" : \"31lb\",\n  \"createTime\" : \"2023-01-04T08:41:10.26316Z\",\n  \"name\" : \"Arielle Beahan\",\n  \"accessGuidance\" : \"p6q1f75qazanq17cbv16vwvt6y71loedok73fslroejzie60tgtzm4s7sv77dbzn\",\n  \"endpointUri\" : \"https://web.example.mocklab.io/374680\",\n  \"externalChannelUri\" : \"https://web.example.mocklab.io/124791\",\n  \"revisionUpdateTime\" : \"2022-11-05T11:17:10.263353Z\",\n  \"apiSpecRevision\" : \"cw2jqr2ke14eo6as23nrbgmxs0b8c9yanr7tnfnbylxw4znbm9k0tvqd9ipstrischeujivvdhpdkj7h1l5hw22ar6zs5nztbry0lbd88boak368mfme06jnnunx3kdu59\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9ca0c5f-83b5-4998-b371-fd60966a158a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.263563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.deployments.create",
          "schema" : {
            "description" : "Describes a service running at particular address that provides a particular version of an API. ApiDeployments have revisions which correspond to different configurations of a single deployment in time. Revision identifiers should be updated whenever the served API spec or endpoint address changes.",
            "properties" : {
              "accessGuidance" : {
                "description" : "Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "apiSpecRevision" : {
                "description" : "The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec@revision}`",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the deployment resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "endpointUri" : {
                "description" : "The address where the deployment is serving. Changes to this value will update the revision.",
                "type" : "string"
              },
              "externalChannelUri" : {
                "description" : "The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "intendedAudience" : {
                "description" : "Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "22c00ad1-feef-4497-b109-13c785a7732d",
    "name" : "Returns matching deployments.",
    "request" : {
      "urlPath" : "/v1/4sbxfmop2avkvgj7jw6c7azywr6yx7inj6r85csqyc16w2shu1frqdumx6ggcqlkys2w0w555tfp6bzbh35hrgddfuj9sd1aa1s11jrib40h7ypexbkezn4g3u863qioqulrq8nc/deployments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"2na5y5qk0upwpkcwkc340vs9lhxs7hvy3qc\",\n  \"apiDeployments\" : [ {\n    \"intendedAudience\" : \"6wr9v70vitq2qi31wgd6d3knhmqi78k1xmgu420ld5rsjpnw5pka3ojxdljc825smbarl5nc8twbh77i78hhofavvnimtff59t3q2xkypej4hl\",\n    \"displayName\" : \"Thi Lind\",\n    \"annotations\" : { },\n    \"description\" : \"Est in et possimus expedita. Modi velit sunt. Temporibus saepe quisquam hic. Est beatae odio animi qui non. Corrupti aut dolorem qui.\",\n    \"revisionCreateTime\" : \"2022-10-06T09:53:10.260288Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"ia76\",\n    \"createTime\" : \"2022-12-19T08:47:10.260411Z\",\n    \"name\" : \"Mr. Amber Bins\",\n    \"accessGuidance\" : \"64y08j30klcaijjkjghm7olyr975q026azggaunxr471of1ev4j9jya73e9g90tc9t8g5kbr6485hn227654bhtnfuzm5e3fcv9tq6viys0vdhjkqwn4ien64wp8e7o\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/826534\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/899913\",\n    \"revisionUpdateTime\" : \"2022-06-16T11:31:10.260627Z\",\n    \"apiSpecRevision\" : \"dwu82lwjs9iy7i7hxlfxzkanm6p02m4dlsgaojp4g68qn60h0wvxp90awyjwuyk1cjelg0044q3xajo7lsstv3\"\n  }, {\n    \"intendedAudience\" : \"b7lrpucc4ap12r7822ktxxxcgs2nax4mag5l5hopa6yyquhxvor14ayyn1oqgqa52sgo9lgxz2ahbisqwvieqhflg14zqidptb5etj\",\n    \"displayName\" : \"Omer Kuhic\",\n    \"annotations\" : { },\n    \"description\" : \"Culpa nobis adipisci pariatur nisi. Incidunt eveniet commodi expedita dolorem voluptatem assumenda nostrum. Quia totam est consectetur. Sit id perferendis repellat nam quas corrupti. Velit nisi et min\",\n    \"revisionCreateTime\" : \"2022-08-13T10:15:10.260766Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"4at6\",\n    \"createTime\" : \"2022-11-03T08:54:10.26087Z\",\n    \"name\" : \"Timmy Pollich\",\n    \"accessGuidance\" : \"ii97up2lf8en1er5439nk72u6eiqo56v0olwm3plsledr3wmwl69xsm3b6drd6gvjopk8rw12flw9rlhfo5ufdurw3y2los6frg1jnqqal5df50u9ghczwa6wtdsvlzlcpymlql39yp6ui5cmhag885j9u7ujwcnu2fni02ldn9op0yntjwqme46isf26ulxwx\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/160443\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/518662\",\n    \"revisionUpdateTime\" : \"2023-01-08T08:29:10.26107Z\",\n    \"apiSpecRevision\" : \"w28zgykfld153dhkia6ryp8mbwmspcok1mulg2fo6xlnbrkdqh2xflxyjc5cfce6udutbm3mfsjrkylio7dv23itpe\"\n  }, {\n    \"intendedAudience\" : \"vt2tz8v8iy1ifbqie2y7yjr1je823l1ojn3s6cozy1b\",\n    \"displayName\" : \"Fidel Johns\",\n    \"annotations\" : { },\n    \"description\" : \"Officiis neque et. Fuga quis qui perspiciatis assumenda ipsum fugiat et. Atque cumque et. Praesentium explicabo amet. Non aspernatur libero molestiae sint autem.\",\n    \"revisionCreateTime\" : \"2022-10-11T10:45:10.26121Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"b22k\",\n    \"createTime\" : \"2023-01-09T08:44:10.261312Z\",\n    \"name\" : \"Ms. Elmo Hagenes\",\n    \"accessGuidance\" : \"7ffvz3ulznnvkf3lm9giws4flembl4b2dgou8rkenl4ajpawm0sloqz39c1ze5ywoijakux6oz1zbf6mq7nreewbavvu54xexj\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/866795\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/852136\",\n    \"revisionUpdateTime\" : \"2023-01-26T10:57:10.261511Z\",\n    \"apiSpecRevision\" : \"qzq65rxp4wnpo148kpc0en00d4nfsjivha18alwigsp9ijj\"\n  }, {\n    \"intendedAudience\" : \"g7bsdtxqdw125dl57vcsk1wrz4lpawj2k\",\n    \"displayName\" : \"Olen Lesch\",\n    \"annotations\" : { },\n    \"description\" : \"Numquam consectetur enim provident earum. Et tempora velit praesentium. Sed quo omnis optio.\",\n    \"revisionCreateTime\" : \"2022-08-28T11:16:10.261645Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"9818\",\n    \"createTime\" : \"2023-01-08T10:10:10.261746Z\",\n    \"name\" : \"Mr. Nereida Daniel\",\n    \"accessGuidance\" : \"v1azia62epo82v8k9hf4\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/809999\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/727589\",\n    \"revisionUpdateTime\" : \"2022-09-13T08:22:10.261945Z\",\n    \"apiSpecRevision\" : \"6sf6kusqqot8lwqpxqlmbm8jedm9vq5xhsuncisrea806j7na9ifbvajox4zz0sxdcik1pic39tlvdutpvzmaxl0\"\n  }, {\n    \"intendedAudience\" : \"q2mg51i8ejsv8q7c9mr455g2zwvnqz3\",\n    \"displayName\" : \"Dr. Chae Zieme\",\n    \"annotations\" : { },\n    \"description\" : \"Culpa enim quisquam sapiente voluptatem. Sint natus sunt. Eos voluptatem harum.\",\n    \"revisionCreateTime\" : \"2022-04-24T09:00:10.262075Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"3kz0\",\n    \"createTime\" : \"2022-12-11T11:08:10.262171Z\",\n    \"name\" : \"Nickolas Monahan\",\n    \"accessGuidance\" : \"3uxbrrezuolkfr2fh920nqzt0i9d6p3gh5wwl7yc8s116vkvbxsm0xyqm2s8oqme\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/863288\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/481510\",\n    \"revisionUpdateTime\" : \"2022-09-12T11:54:10.262377Z\",\n    \"apiSpecRevision\" : \"9d8rniy\"\n  }, {\n    \"intendedAudience\" : \"6xigrytjvd6xgwr1c9xtxgc7j9pcnu8xoi9dg88dkfuzpj3cg2ys5fkop7h01q0hjjefo8afzmsy6lshruelelll6h9o5v25i6m5ixji\",\n    \"displayName\" : \"Donnie Howell\",\n    \"annotations\" : { },\n    \"description\" : \"Autem eum fugiat. Distinctio mollitia voluptas mollitia. Dolorum magni rerum. Optio enim fugit aut vel cum repellat aut. Corrupti velit laboriosam accusamus atque est neque accusamus.\",\n    \"revisionCreateTime\" : \"2023-03-06T09:09:10.262512Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"6cqf\",\n    \"createTime\" : \"2023-01-14T11:02:10.262613Z\",\n    \"name\" : \"Deandre Pouros\",\n    \"accessGuidance\" : \"jawuy0j50qli3jp1bfigjswapnpupfzg5agdljqt27legw247d5smrbakvun58bdns31yzy7p6oolnpz5ipy\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/543974\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/955022\",\n    \"revisionUpdateTime\" : \"2023-02-01T10:14:10.262809Z\",\n    \"apiSpecRevision\" : \"vojpdy7qh0lt425vaicmt1wj0x4n1hw45pedbe4eeaanhxf4av0ybylhmsd2kq1ohkkyuw2wfrnfk7r80k11xmt\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "22c00ad1-feef-4497-b109-13c785a7732d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.262934Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.deployments.list",
          "schema" : {
            "description" : "Response message for ListApiDeployments.",
            "properties" : {
              "apiDeployments" : {
                "description" : "The deployments from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiDeployment"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "00e696d1-ec7e-4f1f-82e0-972a35c5aec9",
    "name" : "Creates a specified artifact.",
    "request" : {
      "urlPath" : "/v1/5d8au2ga52n9xdkwwdammtgymrxqykjpxn89gqn7pxoo4t6cps1p71n3zyaz0j1z7to5deqs0t9ori50ty2vpyowdd94pfibcoci8ayvnwzqqf1tnb1wz4nbpcrpvialibnk2k1rx312gp268v50uwk8qer9b71eropzb5/artifacts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"contents\" : \"awv1ffpk0yr0yn7569t8bvdaxugi1t0icwdm1p7pv45w61t15s6xlsku05uh0ge7pymneiix1nsqxabd4px87ukg92rv5i2g8rb2a2ltyg76gcnukopjpdir3k6m0192tuvip1w4mnz8fmnf3rjttl6jvdvcojojox3uq777iov069c8jn\",\n  \"createTime\" : \"2022-08-01T12:14:10.259874Z\",\n  \"name\" : \"Jacqueline Huels\",\n  \"annotations\" : { },\n  \"updateTime\" : \"2022-11-26T09:15:10.259944Z\",\n  \"mimeType\" : \"od6ypbyibpmgzry2bpn1cf96jc2l696ukxu99sg6vp52p9y9ind9npsfvh\",\n  \"hash\" : \"bmlksjrpp3o2zs8khcel62mtuz52orkogedqujg54gya3dsg50ik4u2d7zk43opwci27iczdb50jrgutn9roq5xqari8vlaqo2\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1124266375\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00e696d1-ec7e-4f1f-82e0-972a35c5aec9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.260117Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.create",
          "schema" : {
            "description" : "Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"registry.googleapis.com/\" and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible \"schema\" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "d056a372-ac22-45e1-aa69-cbfaf50f3750",
    "name" : "Returns matching artifacts.",
    "request" : {
      "urlPath" : "/v1/gqeek2k41kz7driygwh9tsezu4bqvk69yflzu13i5r08czd30osondzt6rvz5mkrjg8vlhr2mn38uq4nccpa52psra2mvd2znn9pdr/artifacts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"84sy0lqsnh2glun0c4a1229991rwuxveprfoodlbuqpnbixj31mgd8wglc1cekn5mj5a764zhljnysw71daae5kx7r8sdq24680wzcgfi9c0qjt\",\n  \"artifacts\" : [ {\n    \"contents\" : \"js2xjeoabti7i7ank0zewd0fhirb7skxgn5z4362h6aqze8snh8xcj6o37qpsr7329ankju2zw0wow5ryr9cpttpajisby3cr4wejp4bo7eduimvqbq33gojjmy8cf103z83pu18pqu97wm9zynmesrp5jr2za4\",\n    \"createTime\" : \"2023-01-24T11:12:10.259479Z\",\n    \"name\" : \"Chanel Langworth\",\n    \"annotations\" : { },\n    \"updateTime\" : \"2023-01-13T10:02:10.259559Z\",\n    \"mimeType\" : \"4snq1cuzccod93pj3vcb54xd0881vcp2n7szjm1ef769d00k546isek8wyywvwz7dc9hjjarm5c7toy8xm7xfw0v35erciin37ztaz2qiif4op37a0unmf5jlqebqq3vgl\",\n    \"hash\" : \"w5w7oodlxvgzaoul6war0e1q4qy70pqa70qh34ykdnrdbas0udfx6xrfst5lnm8caceoxaigr70gxsguma3mm03boe9zoo6rziv4sqq2fhvurwgb0raikjkstjt2hc2z8zelear19f2jzhqv6vllbzgwuqqdgyh\",\n    \"labels\" : { },\n    \"sizeBytes\" : 518310518\n  }, {\n    \"contents\" : \"w0idzt41ol2vnorux9igjrhzl4274ms9pcj02996oo1m10rhhm6jn9610qhlqmfekyzhcei40ex7plnuwfjnfyg18hewy6lnlmaw08nky24x9gc4gn9\",\n    \"createTime\" : \"2022-11-02T11:46:10.259648Z\",\n    \"name\" : \"Natacha Schmitt\",\n    \"annotations\" : { },\n    \"updateTime\" : \"2023-01-09T10:35:10.259718Z\",\n    \"mimeType\" : \"dlwcwotrqqmzk9v5f18acx6mcf0ktqyu0o9zf0fwliuhmskvhx5vgs8senxul1sv73onffqxkzhg9tfodwxf4cas72mrkbmdtyjgj9nwod596355745950n0no60zt5m4x3w3llu9kj3v0i6j7\",\n    \"hash\" : \"ro9h8i9lhzfn8mg1fqlpspu7gvk84h41ixyvn69dl20c5x22omfiu8gltp2emi2lfcop19u7o0w3hvueptyb5bgrq0cgea4\",\n    \"labels\" : { },\n    \"sizeBytes\" : 2138535605\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d056a372-ac22-45e1-aa69-cbfaf50f3750",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.259825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.list",
          "schema" : {
            "description" : "Response message for ListArtifacts.",
            "properties" : {
              "artifacts" : {
                "description" : "The artifacts from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/Artifact"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "fd0ec223-1b54-4f7b-8ae1-dce1d128a344",
    "name" : "Creates a specified API.",
    "request" : {
      "urlPath" : "/v1/ewt4ros7kqlxezzgj0dznijdl0u6u2qjpsjm58u8lptor5yublygo0do3b6fjp8u6spguqogm1a1cux/apis",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"recommendedVersion\" : \"v37vx78a1lt2ku2n3pllskrjw0pynrzgky2e8m0quoz3d6y76gwv8a3pinkaonj0ya537gypph1k3aif8mwdqcg10q2wc7fmev0rlzffbwck\",\n  \"createTime\" : \"2022-04-03T08:21:10.259081Z\",\n  \"displayName\" : \"Mrs. Rana Hamill\",\n  \"name\" : \"Darius Parisian III\",\n  \"annotations\" : { },\n  \"description\" : \"Et enim et. Odio fugit voluptate quis et consequuntur vel. Veniam similique et error non consectetur in repellat.\",\n  \"updateTime\" : \"2022-08-27T09:30:10.259221Z\",\n  \"availability\" : \"194iqezr6iyebemsvgett8dpermzerxp8e4lb4j4u02zyd8alz3djy22itonecp62kcqnrjuapfeexbm0ujwjbepkt9oy09yvn5dz2ok3kdl7\",\n  \"labels\" : { },\n  \"recommendedDeployment\" : \"p74552ty2usd0wub3vqclt55w0fqpcm5kmep0588sox479em5qqv7bsusziyrmrx5wd3ploy76s6edd92loo\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd0ec223-1b54-4f7b-8ae1-dce1d128a344",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.259393Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.create",
          "schema" : {
            "description" : "A top-level description of an API. Produced by producers and are commitments to provide services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "availability" : {
                "description" : "A user-definable description of the availability of this service. Format: free-form, but we expect single words that describe availability, e.g., \"NONE\", \"TESTING\", \"PREVIEW\", \"GENERAL\", \"DEPRECATED\", \"SHUTDOWN\".",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "recommendedDeployment" : {
                "description" : "The recommended deployment of the API. Format: `projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}`",
                "type" : "string"
              },
              "recommendedVersion" : {
                "description" : "The recommended version of the API. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}`",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "0f93fdf1-a27f-48a0-94b2-b389eaf7dde0",
    "name" : "Returns matching APIs.",
    "request" : {
      "urlPath" : "/v1/g33uq/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apis\" : [ {\n    \"recommendedVersion\" : \"g26imr0mosq\",\n    \"createTime\" : \"2022-12-20T10:43:10.258302Z\",\n    \"displayName\" : \"Kirk Reinger\",\n    \"name\" : \"Jerry Ernser\",\n    \"annotations\" : { },\n    \"description\" : \"Tempora laborum rerum quia eum. Dolorem eligendi rerum ex deleniti. Eos voluptas dolorem temporibus laudantium sint cupiditate.\",\n    \"updateTime\" : \"2022-06-25T10:19:10.258458Z\",\n    \"availability\" : \"9qbtb376i4g7qi9g6zwz2i84sp9jqdeeadvm5v5y500nwj42igzwn3y7qsnbl4g8b2v43zd5vf0o6cx52i\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"k36gcjvk7nz7tbac83z0xze8kwt0upveu5yrkup9wj9riz1d0z4r\"\n  }, {\n    \"recommendedVersion\" : \"x3hsph5muayr3hrxz1ot9wkoahqi4o8239iikqgljrqev1576nywbyw7r07pj8ka3sxalblsetthyia6bojuf78z\",\n    \"createTime\" : \"2022-06-01T09:24:10.258535Z\",\n    \"displayName\" : \"Dr. Nestor Morar\",\n    \"name\" : \"Ira Feest\",\n    \"annotations\" : { },\n    \"description\" : \"Aut dignissimos in voluptas animi. Odio et accusantium inventore porro sed dolor aut. Fugit quasi autem odit quo non et sint. Dolore dolor cupiditate numquam cupiditate id. Adipisci enim vel architect\",\n    \"updateTime\" : \"2023-02-01T09:10:10.258691Z\",\n    \"availability\" : \"0zg4g8ep0fl1txs4gftb459fvqp2y558m1clyijh94et7a511wsnmazzkdd43v00jjrhhv6okzfu9ryp3xo0mkd015w4rko1vzsbv3lnn8ojo4jb3s8240xg4sg3a37eb3x5ajftrb53syxw476d4lqwdz6rptcs7p864vc8fkh85lagjok1ej\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"lzr7mp6fj36mcolh4iqu3z5wznwq34h78hl837yl8r5k7q20kv\"\n  }, {\n    \"recommendedVersion\" : \"4hgemfp335gj55wjb9hynknyeqgcn772olryencxzyw7rsbzholn8tmhenkmwg80skrr4n7gwcjsgb7xv5h04kuswm6ctbkezzws46u3lmwjfj0wobdbx516xw4d44v0l9oyehl4il80ecfaxi1gdv5\",\n    \"createTime\" : \"2022-07-20T11:14:10.258762Z\",\n    \"displayName\" : \"Ahmed Reichel\",\n    \"name\" : \"Nathanial Dickens\",\n    \"annotations\" : { },\n    \"description\" : \"Quas praesentium voluptas ex. Molestiae qui totam non est et eaque sapiente. Id cum ex.\",\n    \"updateTime\" : \"2022-04-23T10:51:10.2589Z\",\n    \"availability\" : \"j8xfokffe2rhpd5zngngvjtp660dnruhq77ntfugzxmmhekf7k4s4ho2umk2p63dwwejbttunnczfq4snwmhkbnp08gpw8iszsybd5uz3x65yenq4osge7ky67r3yjraimu69hb\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"9nqqzjdkdpv3lvclaf04ggi2txc9cqwn073qyxidgg0n83oyl4zt9vg3ayxfu3bv3qalpj7y9smniwrr66u7a5shrxpaiwkyftq27532b4uz5dg1m2g5tkec0rm7xcg70zjjwffuf14j48gb07x\"\n  } ],\n  \"nextPageToken\" : \"08qwe9097qs1kaki8ny0ay5cabrfy7655nky3iyzgqckvozpj2921vjuhml8kz17v0il1f4fr6lrk74799myruipwn6whf4it2j7op6m7g3o7wyg5opwc3w8jcu3umuzo7x2wr9vsxyioydy4nigkn4xcihxogkakxmhx5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f93fdf1-a27f-48a0-94b2-b389eaf7dde0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.259031Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.list",
          "schema" : {
            "description" : "Response message for ListApis.",
            "properties" : {
              "apis" : {
                "description" : "The APIs from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/Api"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "0945a11d-51d5-43e6-96ca-1125deb19b68",
    "name" : "Adds a tag to a specified revision of a spec.",
    "request" : {
      "urlPath" : "/v1/Harley+Ankunding:tagRevision",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Non minima illo qui temporibus quasi. Rem dolorem voluptas adipisci voluptatum nulla. Tempora ex minima rerum aliquam cumque omnis. Est voluptas sit non aliquam. Mollitia beatae laboriosam saepe.\",\n  \"mimeType\" : \"aoemp3bxshq0ruc0t7hyqy6kkymwu7ctuanjhirhu99tcitg8wsyewicwatdqydq5rves01nottaota0tigp3bux2vnynj214msqg5t3v4mmvgmq3fm3df7yuu45pai9bzhxrd72334ct8hszmvyywckee\",\n  \"revisionCreateTime\" : \"2022-09-27T11:09:10.257711Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 489773274,\n  \"revisionId\" : \"ud22\",\n  \"filename\" : \"Ms. Ora Nitzsche\",\n  \"contents\" : \"g9wcmqkoz6u7mk0o8la7469kfnzryh6eh3gg5nlaiuzs3duvymuy34c256vziod0h3p0qfvzlci93y6pejv6fia4vp7\",\n  \"createTime\" : \"2022-06-08T09:37:10.257882Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/860233\",\n  \"name\" : \"Katharine Lockman V\",\n  \"hash\" : \"me98wft76\",\n  \"revisionUpdateTime\" : \"2022-12-06T08:57:10.258037Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0945a11d-51d5-43e6-96ca-1125deb19b68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.258221Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.tagRevision",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "d686fe09-ba9a-4b70-b0ac-ebfc42990d93",
    "name" : "Sets the current revision to a specified prior revision. Note that this creates ...",
    "request" : {
      "urlPath" : "/v1/Rafael+Herzog:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Quibusdam qui vel. Aliquid expedita maiores quisquam est dicta. Doloremque quisquam aspernatur unde dolores.\",\n  \"mimeType\" : \"uxmvob4z6hwbi4l76it0xfz3w7zh7qrhj7ycxsbh1sw88so9f90e97in9ucnyptwkj5ohf3u8trc1cuf9nr1eiggse6j7t229pef31zfc99dqio5mp22misyy7edxbniah89jsx0poapisx59jej4ffyr5itc645n2x3yimovxr2y9b\",\n  \"revisionCreateTime\" : \"2022-09-08T08:29:10.257126Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1210599126,\n  \"revisionId\" : \"i116\",\n  \"filename\" : \"Petrina Greenholt\",\n  \"contents\" : \"jzkxl8psvixyg83zgwq9apt6mw4n0z75kftvth6d0t98ee\",\n  \"createTime\" : \"2022-04-30T10:24:10.257285Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/837936\",\n  \"name\" : \"Shaquita Gusikowski\",\n  \"hash\" : \"y6a1ryr4kqzoxwye28qx5fmel10drl5x32ulb72bgljvmxf5wx954bo0td4gy9fgu1fmr8o9k3o7tyghtbyjz9z46ect9rkioy19lfpssckrymp2wcdt4vvawhnhlzuvk64gzhx2els40f2tvykycyxiodenwl\",\n  \"revisionUpdateTime\" : \"2022-10-08T09:23:10.257423Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d686fe09-ba9a-4b70-b0ac-ebfc42990d93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.25761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.rollback",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "f213520d-6c0d-4e18-9365-2872f76b848b",
    "name" : "Lists all revisions of a spec. Revisions are returned in descending order of rev...",
    "request" : {
      "urlPath" : "/v1/Jere+O%27Reilly+PhD:listRevisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiSpecs\" : [ {\n    \"annotations\" : { },\n    \"description\" : \"Velit in autem et iure. Eum eos voluptatem quae nostrum. Autem veritatis odio explicabo consequatur deserunt.\",\n    \"mimeType\" : \"6g2nw4clb2tcbgqhh1topxuxlrm1yniwijy6f4k14rke26jo9xaall95w14pdxkdgwjbp2fmje2b6nwbgt96ifm9jf62n6aqaomprnm6v4yhjrngvhcal5slmv1oovq86tew0zm3aa9upfi05dflmzhgqv9t\",\n    \"revisionCreateTime\" : \"2022-07-26T11:52:10.256222Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1825691636,\n    \"revisionId\" : \"32z3\",\n    \"filename\" : \"Xochitl Schimmel\",\n    \"contents\" : \"ldcjcb9lq1gzxtwib\",\n    \"createTime\" : \"2022-10-29T09:23:10.256377Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/385322\",\n    \"name\" : \"Miss Milissa O'Hara\",\n    \"hash\" : \"2qs8nc2s019pex3m2wesz2241bgotconx69h4z8mn7favk83r2flzauszqnf5j0fybmmk607h88ocrso143in4zbaq3w0cpghqt26l2aqnfmh8rr24u6w57um5eovdnvu2q6fjqzecpltipq0w5bqm4ef\",\n    \"revisionUpdateTime\" : \"2022-08-23T11:13:10.256528Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Quia et praesentium quasi voluptatibus. Accusamus illo voluptate enim. Occaecati nobis reprehenderit corrupti aut iure voluptas aspernatur. In dicta temporibus quas dolores magni. Provident modi ea si\",\n    \"mimeType\" : \"0j3nptqgk1fbm8crf66ai5fx4ltnql0lsnf6k2rjdlvkypjjmzwjd8eqx26zkncirrhawroe4p69vi07amfgfc43ktlt65fu851dlfrznt1tusj799i9klc9bnp4bsnfrrbq3ze7k0\",\n    \"revisionCreateTime\" : \"2022-09-21T08:26:10.256612Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 122543447,\n    \"revisionId\" : \"7cpq\",\n    \"filename\" : \"Shaunna Bernier\",\n    \"contents\" : \"z2hyxsxnl6d7v1wue4day4cxzlzfidcr7t47d4wff7ww873elnh7ydk4m8hl1825q1\",\n    \"createTime\" : \"2022-09-08T12:14:10.256771Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/694461\",\n    \"name\" : \"Mr. Raphael Zboncak\",\n    \"hash\" : \"hgxas6ufzr3395wo5c29ut7hwb2xt4wv8vnmk9qj3yjmtabt425txaa7cwc6y6zljsozp2esou76bjbkglw8rvuc778cai9ubdkitg1xm6wynigs3tu8c456d1q2yt5uma3vrww6lqc88wixsbkm78i2m57deydt1iuhtffrtrld3g0sne89hhop2g5xl4jnph\",\n    \"revisionUpdateTime\" : \"2022-11-15T11:22:10.256911Z\"\n  } ],\n  \"nextPageToken\" : \"oo92353z9del5nb6goliturtm3s3t1ryng1za9qzxba8wok1h0gmq9juzvrj80fc42gfsshoj693z1iq0cw3it95mzgaah4y60i6i3v\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f213520d-6c0d-4e18-9365-2872f76b848b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.257043Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.listRevisions",
          "schema" : {
            "description" : "Response message for ListApiSpecRevisionsResponse.",
            "properties" : {
              "apiSpecs" : {
                "description" : "The revisions of the spec.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiSpec"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "4e206aac-5841-4735-b188-67edd7ae3236",
    "name" : "Returns the contents of a specified artifact. If artifacts are stored with GZip ...",
    "request" : {
      "urlPath" : "/v1/Ms.+Carlotta+Kovacek:getContents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n  \"data\" : \"m49gy5nwk8o45oqp09yyygsfjkx8hjnmc3scvsvc7y509do\",\n  \"contentType\" : \"i0kyojnntfx50pz25lmhn9f1bucly2jjnaxrw6rjbolxmy5dolwdvjo73g57x46zdodv2sblzepyvyvzr3f8clrfcbd8hbsc1qj0ucmiup5cbipg4u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e206aac-5841-4735-b188-67edd7ae3236",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.256129Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.getContents",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "2c51d5d8-3d9a-42d6-814a-5bf4d146e73f",
    "name" : "Deletes a revision of a spec.",
    "request" : {
      "urlPath" : "/v1/Dr.+Adan+Brown:deleteRevision",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Esse nisi hic. Ea natus voluptatum non omnis vel eum ex. Accusantium qui minus sint.\",\n  \"mimeType\" : \"0ixlvwqbuxrwj0g8biis84qoke61k4sub73s\",\n  \"revisionCreateTime\" : \"2023-02-17T10:19:10.255441Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1604110125,\n  \"revisionId\" : \"d68r\",\n  \"filename\" : \"Arlena Robel II\",\n  \"contents\" : \"knn1ul18tc3v5u1awhowjtfowz02vl2sseo\",\n  \"createTime\" : \"2022-07-01T09:48:10.255611Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/571190\",\n  \"name\" : \"Lizzie Simonis\",\n  \"hash\" : \"4wyyl7vap8o2jq0qml0q0ileredjxxnwodg9p4205zfx1fnc8i0nxz697gmbw6heljamwrm5t8jrfdfjztooeelich64xq1qhhn396hu0mgvx3x6xk7n9ua82iwwpfwwb44xpdp3aydtahnlcg3t4w14hqt06ry5sbgp4qom8weo37i1b8kykab9yudk8\",\n  \"revisionUpdateTime\" : \"2023-02-14T09:39:10.255758Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c51d5d8-3d9a-42d6-814a-5bf4d146e73f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.255947Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.deleteRevision",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "e2052a94-1db5-4d7b-9a5e-0a40ca68d6ff",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Piper+Howe:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2052a94-1db5-4d7b-9a5e-0a40ca68d6ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.255359Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "56b1d527-8d1c-4653-99ba-4250d49d4619",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Ms.+Shaun+Volkman/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Lucius Kub\",\n    \"error\" : {\n      \"code\" : 1510390671,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Minus qui laboriosam est excepturi. Deserunt illum et consequatur aliquid enim. Placeat minima optio praesentium. Maxime eius esse est. Ullam excepturi magnam quibusdam rerum eum sit.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Dr. Eddie O'Reilly\",\n    \"error\" : {\n      \"code\" : 1400396419,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Fugit sit cupiditate nemo quos. Voluptas tempora et et quae cupiditate. Expedita voluptatem eos tenetur aperiam qui minus corrupti.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Kizzie Beatty\",\n    \"error\" : {\n      \"code\" : 21734007,\n      \"details\" : [ { } ],\n      \"message\" : \"Atque dolores vel odio quaerat magni sequi aut. Aut perferendis deserunt velit impedit porro fugit asperiores. Ut quia occaecati id quam. Debitis exercitationem cum sed id quaerat. Sequi impedit ea ma\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"v3yu2tilljcwua5q1u9od7qn0b2qm6rnoci68b8sulxuysbrhhnaxnsesa145tyyjg3zg2v7uuv69l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56b1d527-8d1c-4653-99ba-4250d49d4619",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.255281Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "0ac22b27-2bc3-460d-813b-304804ff0606",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Irving+Monahan/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"w3mqge35e0wel5yffx8a2ljk7mlrn365dy7elllqfnzw8iyuiq23jspujudly4vaygjy79shuhcmgutsi0vtbuifmj5gh899zg4kqvt16rk8\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Nettie Nolan\",\n    \"locationId\" : \"g75b\",\n    \"name\" : \"Carroll Nitzsche\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Murray Block\",\n    \"locationId\" : \"w07a\",\n    \"name\" : \"Cary Christiansen\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jenna Sporer\",\n    \"locationId\" : \"j69k\",\n    \"name\" : \"Nelson Wolf MD\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Christopher Pollich\",\n    \"locationId\" : \"80ua\",\n    \"name\" : \"Cyrus O'Connell V\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ac22b27-2bc3-460d-813b-304804ff0606",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.254838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "1092fca5-afce-4ed6-836e-9065822c57e3",
    "name" : "Used to replace a specified artifact.",
    "request" : {
      "urlPath" : "/v1/Lanny+Satterfield",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"contents\" : \"838u1unewwdwxf5onu6fm7jj33t0w6q146s4nsrkwhwtk0fv1ibofoqt2xsw1b6zrj05pxaicy4mxhtrrezr\",\n  \"createTime\" : \"2023-02-18T10:29:10.253757Z\",\n  \"name\" : \"Walter Kreiger\",\n  \"annotations\" : { },\n  \"updateTime\" : \"2022-04-23T12:13:10.25383Z\",\n  \"mimeType\" : \"b5p8j0kvkwxwz19mh0k3bwpy4a3dj6r249x3uj3a26uovupfyp7w2fdvpudgqzyqadhah36jw6w3d51nn4tkz9a08tbn7sze3gevt0u58qy4c98p0tuqupcg73se5g6nd37txwi1jrurgiktp4oc0negzwcipo70hvwkalwm54r4e1nxi8xd0nxz88ntpedi0tx8\",\n  \"hash\" : \"uc9dwzytjn3uwvwi48vq2an15ctewskj830gq3ltu4ymn1c9q8xrrhkgczmp5qg0fdm7g4sf1yp\",\n  \"labels\" : { },\n  \"sizeBytes\" : 159158607\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1092fca5-afce-4ed6-836e-9065822c57e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.254038Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.replaceArtifact",
          "schema" : {
            "description" : "Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"registry.googleapis.com/\" and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible \"schema\" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "a796a698-e625-4fb8-8332-adde310368e8",
    "name" : "Used to modify a specified spec.",
    "request" : {
      "urlPath" : "/v1/Ms.+Reynaldo+Rath",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Voluptatem tempora optio nam dolor voluptatem. Culpa et nobis officiis. Eligendi illo voluptatem reiciendis aut et. Ad iure repellendus doloribus possimus ducimus consequatur. Nobis optio consequatur \",\n  \"mimeType\" : \"la1holfrdgadpis61b6mijx98nfatd9ohvnvw5pwxo131346b65yjzafloxplummyj8t8ox8rro\",\n  \"revisionCreateTime\" : \"2023-01-15T11:07:10.2531Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1758218218,\n  \"revisionId\" : \"fut9\",\n  \"filename\" : \"Nathanial Fay\",\n  \"contents\" : \"or9cyx6kq7qynqpaqdll2obtxm2z628nxy5dbh3bhvt0ozgv92r9bzr5ibvqo5nwv67bqw7esiusje35buivo84k20pc6cf56vznxfx9ani2t9a9kpwa3ed0ipk80954huy1ea2oiqprltwxv877fyrre35r3wcme6af5har3z4af2\",\n  \"createTime\" : \"2023-01-03T12:04:10.253303Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/574687\",\n  \"name\" : \"Lavera Ernser\",\n  \"hash\" : \"rmwrt54k3z11\",\n  \"revisionUpdateTime\" : \"2023-02-02T10:12:10.253471Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a796a698-e625-4fb8-8332-adde310368e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.253695Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.patch",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "3b8c4d8b-a89d-4ec1-be94-b7e39f9522db",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Nydia+Pfannerstill",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Solomon Hahn\",\n  \"error\" : {\n    \"code\" : 1393613898,\n    \"details\" : [ { } ],\n    \"message\" : \"Nemo dolor quidem enim in eos. Harum dolorum nemo laudantium eligendi et ipsa. Magni molestiae necessitatibus aut expedita. Dolor ipsam eligendi qui.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b8c4d8b-a89d-4ec1-be94-b7e39f9522db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.252995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "31a5886d-7618-4237-a76a-9844b36ca6db",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Virgen+Bayer",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "31a5886d-7618-4237-a76a-9844b36ca6db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:10.252719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  } ]
}