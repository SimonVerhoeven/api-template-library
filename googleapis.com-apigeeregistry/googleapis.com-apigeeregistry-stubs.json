{
  "mappings" : [ {
    "id" : "868a7f5a-1f99-3fef-a526-5afe42984c7c",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/rvujhmcu17kjgqmkt5exp96b1pw0w6s6a22jk6zfx7bqfo6igqre8ubt8ri4gpt2i21qzcg:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"9zynooludfn9oeiegn2scpdto74irfdrvgxbh5lr4h0jxr45t6j7rf1x8g541186oml58b4nfdmolqj0ngb1yjlez4\", \"vo7hslnexu087x3hbr2o6jqzs94sgkzbcyp23vhwfqpg2bsxos8nwj\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "868a7f5a-1f99-3fef-a526-5afe42984c7c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "8e39e41f-d2e5-3692-9a0f-2b5a7fe154bf",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/kod1ezjowx6e528tdw58vnstjafmgwlzozv2uo37pshrv35l93ygmo9pk7x4mtjlk3k6ttewzc8c1zqb61c1f5bbj0yh3qggb4blc0xa5evxyw3gdei4qsbqg9kvz83gi2mv0c7mzyqqzpgvpe:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"2s32w9abp2muzvcvdege4orm4j1h7wuu1yilnxj5qa4wj0cwd8flrextdb57d7il4gqxz63izng45zcyj4mld7dxs3639vc2tc4g417q8iuwmdly1bbwfkypwuaccg1gtsf9zh78pvu7qgi78dcz0wp2fdzigc\",\n      \"description\" : \"Et nobis nihil qui beatae nihil facere ut. Iste quibusdam eos est voluptatem nesciunt a. Sunt facere non quis. Hic dolores cupiditate.\",\n      \"location\" : \"s9of57tpoi7vbr06lgmv7fjykuonn3ooggtru0vwoksyd8hiru\",\n      \"title\" : \"Quas natus hic facilis.\"\n    },\n    \"role\" : \"pk99tqjlwmfj34ibel2ovvi2a4mtmstdnwm8wkfzt0del7k3h1smwzqq4hwosgcp8tc2\",\n    \"members\" : [ \"5fitb0nqe3erdxpu3ny5uhtt2knik1lqyojzgojjdovzwfi4\", \"08amgilhq3lgjtgsqvc534a0y8o7ane5b2qd9ik3t01ab3i0az\" ]\n  } ],\n  \"etag\" : \"deleniti\",\n  \"version\" : 2061298465\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e39e41f-d2e5-3692-9a0f-2b5a7fe154bf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "2d1e8dac-2dc7-33fb-8bd0-cc34d2603fee",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/ivzpp1j3nnhh214au0p48mi10igm0y6l4p4fgxvo1:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"ii3zyeumyr2hefcowkbgginu\",\n      \"description\" : \"Modi iste non eaque rem. Rerum atque praesentium inventore error et error. Sunt voluptates iste enim fuga. Tempora commodi deserunt sunt veniam assumenda eos explicabo.\",\n      \"location\" : \"jc98emh5n03d9edkopszmw9gstu2puaquzifyscg50mk12bl0hn99n0phj5gqrfsohjekukwumyj7bgy5g3dntnpghncbdpxxs874x278czu85w83wwu1i99plvrl1rhlbb\",\n      \"title\" : \"Ex omnis perspiciatis nesciunt.\"\n    },\n    \"role\" : \"1amlts6rs3io7kxxibnby5f5qd69j8fpcyyl0qc52ao6etciieri2i3n25lgd2ts1morp3b886h3yuy\",\n    \"members\" : [ \"2o9qi07nr6nonflne2h3h7iae5l0dmghazyy7f9in90cpljqc5lsp10fl9rqo7hydou6elsx1i4suv7p90crt7496le9gixd4ujggssf33r0j4t9o20jud4h6mqbua53b2vaheope2iwb0wyg1pzn0qa1l0mxcxnewlr\", \"rjyvfhc1su97u41mswnlya6hwsp2bkhxqcv7m7p7w25x4s96rw785yluw5l4u83zmeccedq41guotp2qoj9cbvuwg6hp1r4e6rgtffcoc5pwr0h9cm9zs7pef4ryfutzjac7ayuyxqztrwklap7fs2jhazjdygk102og9xlr31nod1573caakzn5oc\", \"n1b4a7budxpc23ps63vdee5aj1ubm3z44puzsdzody\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"m42ujs2slvxqi6wsduzoirtckz7a96evhyuo8ay1hbhpmiuru35j78jkl70uf1w95inomyusw7g6a2x\",\n      \"description\" : \"Molestiae ab perspiciatis quae quia. Nesciunt quo suscipit. Quo architecto aut recusandae id.\",\n      \"location\" : \"oud2pev0bbdt885na3es2l7zhpzsmty33c48up090c5hwj8sr05kf5wuy2g31\",\n      \"title\" : \"Quia perspiciatis sed totam voluptatibus et qui.\"\n    },\n    \"role\" : \"h60nsc9adx194iz203thuljdxf70715tc6cd6zc2m5domk921flmnrcdeziqyntvg5uhcimp4mbyx\",\n    \"members\" : [ \"em28sun0kfet028sgh5gxgpvrk0hgocjf68diqvksezn2m6edlckxp8ymv454eedxuhd2qlyurs3t4yw4iwrjillsqu6atwvzipp\", \"8bf8tv69uyrr84nngwjihkzp72gnjfu4ps5cby6d7hvbk5b4iorwwke2wsg1iu08ld4lrxeuwv80v7cotab0b5gbfghjuk1kxg5uu36fyi1zpub9asa3ypgro33kn1uwnrkje1bm72kju2ulo\", \"xxl0v1n6esadwhxhdpjtb2lvdgtqemu3t4ahm9\", \"dzj8m1wt13jqevrzphypraw606y4\", \"l3ruqdgu9voqmpg0wt5uwezo\", \"7bwdz88qkdehdr3mxwclw1thmt0ayt8gtiatddb65hymbsyzxg7xn1dchptlhz428tbhxsplsa9w8sgncqb6t06jd33rxq2uwrjlj1el5vkbcneyzizhrw46hgbglaeqpx19mda5ghujqhd1gv8fhpji9gt8fncp4umxf6p22sgoju3vla6\", \"8p0m489nox0rki65tgd1hai9fcf2uarwq5dfyl\", \"l8niknpc3mp91cafdq00fde731w2o9574q2vnd5bhk9jdhb9hy7vwmdlg2x1lkiqehco76vjjsx6sk1e5meo8bynzfdpilgu2elu0oy44zlfhbrtytq0ckrxn4yxbu2t90xme12ys8067cibw3f7ulgtx3ewkl41e04t6fbuhkg70hder61ho2gt5hn7u1n\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"gg355hmtq9y443woxa5lm82ecnpkeagllevqr0w4jcb1t2g3mg52ij5oikzzaidunpo8juxuxgqs1ij4add669t0316u374rydc7kf9smb553n2105l2hwtu8fii7ckmh3693lvngwf0vo8fm\",\n      \"description\" : \"Iure quia occaecati hic modi qui. Repellendus et soluta aut blanditiis. Qui harum nostrum.\",\n      \"location\" : \"9pl9yyz5ytayqzt64qnc0\",\n      \"title\" : \"Aliquam quibusdam aut adipisci eos.\"\n    },\n    \"role\" : \"npq0ngx7ezvitc62v4l5rw8mi5xk4obbcylc2uhseardvz0dpe4oe37s7s5sznqi0dda5cl9hl5b3vw15392ehahi3tg8tl50iti03\",\n    \"members\" : [ \"bnnswvxof141ljgmct0n2ly98fodbczwwfhrbewpm3lyny7r9m7hllhiglz72vqzdub1wwzzjumrwh33tyhs8qn2kqwwqsdvsjhq6tcenehrrgp8ro4j347pkn51yu0jjnfp6dhqg8lb1vp0pkyj5r2s03d\", \"vempxaua07l\" ]\n  } ],\n  \"etag\" : \"aut\",\n  \"version\" : 1695521161\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d1e8dac-2dc7-33fb-8bd0-cc34d2603fee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.runtime.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "67099901-176d-3c91-bf38-034cbd97fece",
    "name" : "Creates a specified version.",
    "request" : {
      "urlPath" : "/v1/a1vrwifx31yvbju0lccxoypydv5z3h6ntph5lax07otxe5l7k71rslgtl0jvqq3h4aendte4jdk8rk08gy2pell7rqs/versions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"primarySpec\" : \"6hx62j4pb8bsq2vs5jd74reey0tojo4aadms4sbuwfic62dvqhni6xe45od4ffjrije5b7sd2mg74lyce4lhruypze9tou7djvrxbwzd9wobzhf84bamnuh5oyqws1lr43ur7lxixaia1kyl9svg9uxs1b\",\n  \"createTime\" : \"2022-11-01T14:25:02.385575Z\",\n  \"displayName\" : \"Colin Koelpin\",\n  \"name\" : \"Ms. Shaunda Satterfield\",\n  \"annotations\" : { },\n  \"description\" : \"Quos id quibusdam. Dicta est ex. Doloremque vel voluptatem dolorum est et distinctio beatae. Voluptatem quod tempore vel beatae molestiae. Quo ullam et provident velit.\",\n  \"updateTime\" : \"2022-11-20T14:26:02.385712Z\",\n  \"state\" : \"Kansas\",\n  \"labels\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67099901-176d-3c91-bf38-034cbd97fece",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.create",
          "schema" : {
            "description" : "Describes a particular version of an API. ApiVersions are what consumers actually use.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "primarySpec" : {
                "description" : "The primary spec for this version. Format: projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec}",
                "type" : "string"
              },
              "state" : {
                "description" : "A user-definable description of the lifecycle phase of this API version. Format: free-form, but we expect single words that describe API maturity, e.g., \"CONCEPT\", \"DESIGN\", \"DEVELOPMENT\", \"STAGING\", \"PRODUCTION\", \"DEPRECATED\", \"RETIRED\".",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "66e1217b-e011-3f8c-8994-8a00196bcbf0",
    "name" : "Returns matching versions.",
    "request" : {
      "urlPath" : "/v1/rtj69u9zml599vbd5vu1g32v0j1oncm90xqvap5ntoa60v6n0jio0mhmiyniqqx8j8nae8ky0cmp8tpe9smztn02if33ctlq2gedyph9aiym8lo8imqg1w5wxcwo470y3cg51r/versions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiVersions\" : [ {\n    \"primarySpec\" : \"c29yngngagg89r2v6kmry9vgmiawr4bx7696z8i9b4jtw0ftnm88jr6zlyf84wrk\",\n    \"createTime\" : \"2023-02-06T16:28:02.384799Z\",\n    \"displayName\" : \"Ms. Nelson Rippin\",\n    \"name\" : \"Luis Wintheiser\",\n    \"annotations\" : { },\n    \"description\" : \"Velit impedit dolores cupiditate voluptatem sed ea qui. Asperiores quis quidem impedit minus ut et. Labore molestiae rerum veniam pariatur.\",\n    \"updateTime\" : \"2022-12-21T16:34:02.384958Z\",\n    \"state\" : \"Texas\",\n    \"labels\" : { }\n  }, {\n    \"primarySpec\" : \"6imohrq5j1wg5gycecponqoqaa4a951ufhrnoc3sr6h6m3brqsdh07t33mpk353obk1rwzwprhzg6klh6bbu4831mxajd15wen9eqy8tzughokfncddngkmwggsuch51sw1a170rngj4gamdj5iwzrwb7fyvby4cdxbdt6csy417bieqrttx6pjzspzhzrqo8o\",\n    \"createTime\" : \"2022-12-31T16:24:02.385034Z\",\n    \"displayName\" : \"Erick Champlin\",\n    \"name\" : \"Myles Koepp\",\n    \"annotations\" : { },\n    \"description\" : \"Rerum officia natus voluptas esse. Optio eligendi modi id culpa voluptatem qui nesciunt. Sunt possimus consequatur atque voluptatem sint culpa explicabo. Sit omnis minima ea esse officiis iure. Facili\",\n    \"updateTime\" : \"2023-01-18T14:10:02.385179Z\",\n    \"state\" : \"Minnesota\",\n    \"labels\" : { }\n  }, {\n    \"primarySpec\" : \"xqp88hcz02bitfqhndhumzocr0614s8dglj36ipmy91dqyl7ek\",\n    \"createTime\" : \"2022-04-28T14:14:02.385239Z\",\n    \"displayName\" : \"Mr. Marlin Rowe\",\n    \"name\" : \"Jeanice Willms MD\",\n    \"annotations\" : { },\n    \"description\" : \"Eos nam laudantium. Fugiat ab quia vel mollitia sit quis. Id aliquid est autem quibusdam enim. Molestiae commodi itaque dolores distinctio. Et ea voluptas error laudantium recusandae debitis sapiente.\",\n    \"updateTime\" : \"2022-08-23T15:57:02.385393Z\",\n    \"state\" : \"Colorado\",\n    \"labels\" : { }\n  } ],\n  \"nextPageToken\" : \"bx8hxa9vco7aspn7hdmy6jr0ptqa1qq1vwn41obdheecwd1dfjvx1m0985j7garxoczowgqubgf84deo6orv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66e1217b-e011-3f8c-8994-8a00196bcbf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.list",
          "schema" : {
            "description" : "Response message for ListApiVersions.",
            "properties" : {
              "apiVersions" : {
                "description" : "The versions from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiVersion"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "ed3a835a-7f2a-3acf-bf7c-2bcfa6d151ee",
    "name" : "Creates a specified spec.",
    "request" : {
      "urlPath" : "/v1/5lwt3awyqz2iao68lmveioxs8ayo2l9ht9ilalh3y85bsp9p72fklrljc5qigyh82mkafoso4xtonzjbovkomnlg5uns4ltq7bmjljlagemai0zezgzet44jtgz8bmm0i7m0xgfcuby/specs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Soluta reiciendis saepe et tempore quia ut. Eum et ab. Doloremque aliquid et ducimus. Et consequatur exercitationem omnis rerum.\",\n  \"mimeType\" : \"qg1s27br4ht2mbtj9vhyaewt0ichm2dvsxgqay0l1batzcv8yyktxm146c8rcli29ojk4cvnmw8iuu4fralvyzk922nnlipdkpseqlax51hvvvyypphdu04dzhhuy0\",\n  \"revisionCreateTime\" : \"2023-03-02T16:17:02.38421Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 228276192,\n  \"revisionId\" : \"kw6u\",\n  \"filename\" : \"Benton Grimes\",\n  \"contents\" : \"jler60d6nlr3c8aler8r5gmfksjwhgelwusec8evy7yg33cfshoahsfgbpcnzrqg12o2900a2chhd87o1ldo5qjqtx2invuwybnkml3bz9bg\",\n  \"createTime\" : \"2022-04-09T14:29:02.384374Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/358007\",\n  \"name\" : \"Ervin Volkman\",\n  \"hash\" : \"wn2b7omrnxdfrqe8yizr30fwi0gho52gxz4yp6qjctnbv\",\n  \"revisionUpdateTime\" : \"2022-07-26T16:56:02.384513Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed3a835a-7f2a-3acf-bf7c-2bcfa6d151ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.create",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "effb12c9-db32-391b-8b4f-d952f6d9776f",
    "name" : "Returns matching specs.",
    "request" : {
      "urlPath" : "/v1/bsvg7hyenbedqbvay7fg4lwbpoq3ja8sggje10c3ycfaqe0pbs2z8mbf7mgle75u1jdkvfszrqq72hejmqzc5/specs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiSpecs\" : [ {\n    \"annotations\" : { },\n    \"description\" : \"Numquam qui nam ut distinctio. Expedita quos magnam ea repellendus voluptatum. Molestiae culpa dolore corrupti corporis. Inventore quis officia aut maxime impedit. Soluta qui quibusdam eum ullam facil\",\n    \"mimeType\" : \"ksoqte1yj2pdub1mfjsplc\",\n    \"revisionCreateTime\" : \"2022-11-22T16:17:02.381756Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 891331863,\n    \"revisionId\" : \"56pu\",\n    \"filename\" : \"Mardell West PhD\",\n    \"contents\" : \"k8974ec5kgsv7d5a6ykrhuvo84z374pqamxezbvxgk77grg665htj72fqb2ydfeqqgxkboib42si448mr3ernneexqipgyij9vzsdb81gmbs3ihp5ce6ka0i3kaqrp8qr\",\n    \"createTime\" : \"2022-05-24T15:58:02.38194Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/578070\",\n    \"name\" : \"Britney Runte Sr.\",\n    \"hash\" : \"leue99242v7m1zy500fywmq3thkrgbmy1305kp4gvgmv22l4vgbbugd2wju81rl2fa4i22ssil4ibxteywq009vz4wceqgxo3pwbhol3bjmfqdwismkj654es7xbxicu8mpmibgejwbi58tihk1yspwyho6hw4opv\",\n    \"revisionUpdateTime\" : \"2022-08-24T13:22:02.382124Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Enim quaerat rerum sed. Aliquam ut corrupti laudantium. Excepturi magnam voluptatem et quae itaque quia.\",\n    \"mimeType\" : \"7y3ba\",\n    \"revisionCreateTime\" : \"2023-02-21T13:47:02.382211Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 547031042,\n    \"revisionId\" : \"za61\",\n    \"filename\" : \"Shane Mertz II\",\n    \"contents\" : \"zxgbc3wiec7808ugdamqfe2p8y9udw9zsivg2drhm25sai6fw2l3t5pcae3uslmwptj3dokyvoxturlop6zajehnncukqncevb96tp7wy6cm02z34f9qe301gjy0wcz41kwcq\",\n    \"createTime\" : \"2022-10-14T14:22:02.382369Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/307881\",\n    \"name\" : \"Dustin Ullrich\",\n    \"hash\" : \"enb1iodmyprkn1euffeviq3szotkvd\",\n    \"revisionUpdateTime\" : \"2022-06-29T14:22:02.382645Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Animi molestias ut. Magnam dolor assumenda. Aspernatur et aut.\",\n    \"mimeType\" : \"6469bmkyr084pndgr2jds3245opki01s6hdrz3qvsmnykta1bi3i93jhfg1bjfdcoem0ym648d1jfeywo1i7rzv03ner23e3ly4e88w7w1e3jiigm5d8ywwic9886xla0ftyxwsa8e92me4zgf4h6ptjjea3x4lsmo3x13b96ojk1duu2krq3qmrn\",\n    \"revisionCreateTime\" : \"2022-11-12T14:35:02.382738Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 311690710,\n    \"revisionId\" : \"7m4p\",\n    \"filename\" : \"Yessenia Walker\",\n    \"contents\" : \"odhwphmen1zmrfs7fuhnnt1nm\",\n    \"createTime\" : \"2022-11-18T13:57:02.382944Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/424892\",\n    \"name\" : \"Douglas O'Reilly DDS\",\n    \"hash\" : \"n5fuq2ukw5khr6cph3c2orxfs1phwag2510lv831e9s245l2iqslk33b7r2ven551uvaz5f4b\",\n    \"revisionUpdateTime\" : \"2022-06-08T14:49:02.383096Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Mollitia dicta doloribus recusandae recusandae culpa. Illo at nihil voluptas. Nihil facilis repudiandae quasi ut explicabo. Quo id excepturi ipsa reprehenderit debitis perferendis quibusdam. Atque non\",\n    \"mimeType\" : \"9txi86wxvhwww9u3jaduvac01wvd42ycw34kuxv61p60oucdjwzkbpyrbufxlwei2f6jqfh5wx92veurt3v58ulj3tuyb8zwlhdw5waqv10f5yj3smpj10sz3ursi9pgvu365nd6vkhby2br6a1winnoslozmdwtgapnoyug0relyermpafdkrfcl17m8fmcmskh\",\n    \"revisionCreateTime\" : \"2022-09-23T13:31:02.38319Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1667538839,\n    \"revisionId\" : \"x98s\",\n    \"filename\" : \"Leisha O'Hara\",\n    \"contents\" : \"o0ivwuv4tjve9c8qf4gnf1as2myonvbp8szjh3228xf1cz9bov5kpoacwwpf7qm5e3am6vze203bi3voh3fqi68hfs3dz7izfmwnsucijiqgxzowy4pcq9587qd7brhb1zw3mhe8fp9xukr03ik2gdtqd2tri\",\n    \"createTime\" : \"2022-09-15T15:16:02.383356Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/118341\",\n    \"name\" : \"Dante Ernser Sr.\",\n    \"hash\" : \"22xiqz4rtai24toqejx2w3nu8pq12qtxknq0g7kksavettdclvx4ovtluh88criu4gcm74pa53om84bb7uc3u6m20kgj00qhtepg12ekh5vnsx7o5ojcu8pmz3os06qgl4wlgdwy4i5dgs7qz4eno5e0b9xkfzpa27onihe4yry46xmdw25ctxqcvz7jl84jki6sxu\",\n    \"revisionUpdateTime\" : \"2022-06-27T13:47:02.383505Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Eos delectus iste eum velit ipsum totam sapiente. Hic numquam sit. Dolore sapiente ut rerum facilis ex. Minima quia aut ipsum. Consequatur ad occaecati qui iure ipsum eum.\",\n    \"mimeType\" : \"tpppt2f3shri7fzvxsbcuambtt8jjkmgtl0fp5j0x33lqnukkrr0zqz9hpuigjgo7deqgf30eajd5fftyh8rtnbkfpql5h5zn13mqtvbdrgrng96ht39gyxgxoxk1d44avpzfhn24u2gxwr814sy4a0fpbbm2jn07h9\",\n    \"revisionCreateTime\" : \"2022-09-08T13:20:02.383594Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1846980549,\n    \"revisionId\" : \"b104\",\n    \"filename\" : \"Mrs. Constance DuBuque\",\n    \"contents\" : \"v4570ytuvs82wm1kubmplu9i0489uit0hw8shryxfwsldzemj3eucrmuny1vd02t82ax718jtirmk95g54gxy35fla4ohnftbeg76rm0ckgrh\",\n    \"createTime\" : \"2022-09-11T13:58:02.383754Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/350317\",\n    \"name\" : \"Irvin Harvey\",\n    \"hash\" : \"yrbfyztrm6p1v6ft2k114f3n554gi9hadus84370xi1qosi5l8qb6cvqd1827tq9wsbbbkysbnukokzanxi\",\n    \"revisionUpdateTime\" : \"2022-11-22T16:28:02.383896Z\"\n  } ],\n  \"nextPageToken\" : \"3thrr3on9awz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "effb12c9-db32-391b-8b4f-d952f6d9776f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.list",
          "schema" : {
            "description" : "Response message for ListApiSpecs.",
            "properties" : {
              "apiSpecs" : {
                "description" : "The specs from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiSpec"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "5fb92d13-ae9e-322e-b800-eee94513cfb3",
    "name" : "Provisions instance resources for the Registry.",
    "request" : {
      "urlPath" : "/v1/7w9aktoxjhvkowjz8d9zs368i52nt8nvbv1cjpfnl0hp91hbzthfqzv2gz9pabctapzylmsp42y06sfn716h15pcwjxqp3jt0djqy88x20et8hcw8iimyfsgif27fiw7d712f/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Kathryne Torp\",\n  \"error\" : {\n    \"code\" : 1215207570,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Non quisquam ullam minus consequatur blanditiis. Quaerat assumenda maiores quae. Omnis rerum nisi et et eaque. Provident facere in nulla minus soluta adipisci iste.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5fb92d13-ae9e-322e-b800-eee94513cfb3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "36628a31-91a6-328c-b840-45a10f4262b0",
    "name" : "Creates a specified deployment.",
    "request" : {
      "urlPath" : "/v1/tch7x9peovs71j4f601vnrpwtgy03yrkhrq8pwuxp8m4n5hccf4y78hp1/deployments",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"intendedAudience\" : \"8xzjvjg9pljdpj9fhzz39xnv4rzua8iarcnzsszcgo9ni484axl4axggrp2p54li85sd5g1w522cct8tm2rogxa46hisynvgdgbshy0uzj1n6mp4uojv3ueted14qaf6btj1hnmigric1my60lbh4s8\",\n  \"displayName\" : \"Aron Kiehn\",\n  \"annotations\" : { },\n  \"description\" : \"Nesciunt asperiores explicabo eveniet. Est pariatur fugiat omnis sint est in voluptas. Ratione debitis sapiente. Sunt aliquam porro reprehenderit. Ab enim dolore laborum enim libero mollitia quia.\",\n  \"revisionCreateTime\" : \"2022-10-29T16:23:02.380893Z\",\n  \"labels\" : { },\n  \"revisionId\" : \"r262\",\n  \"createTime\" : \"2022-07-23T14:25:02.380993Z\",\n  \"name\" : \"Jean Rosenbaum\",\n  \"accessGuidance\" : \"chh3nxza239tm2tmsvv7gglopecj5o36vjw422ix0z38khvfulxaistlxbn802gxhzmooiv42ez3qvfgucstdxjrvhbycd8izx3swtwrl8nyvxs63ae6r\",\n  \"endpointUri\" : \"https://web.example.mocklab.io/017114\",\n  \"externalChannelUri\" : \"https://web.example.mocklab.io/564455\",\n  \"revisionUpdateTime\" : \"2022-12-04T13:41:02.381176Z\",\n  \"apiSpecRevision\" : \"ps3umvodc2sxx6muf8u28xquqdgd0hbpcii3deo1ca2fmdw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36628a31-91a6-328c-b840-45a10f4262b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.deployments.create",
          "schema" : {
            "description" : "Describes a service running at particular address that provides a particular version of an API. ApiDeployments have revisions which correspond to different configurations of a single deployment in time. Revision identifiers should be updated whenever the served API spec or endpoint address changes.",
            "properties" : {
              "accessGuidance" : {
                "description" : "Text briefly describing how to access the endpoint. Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "apiSpecRevision" : {
                "description" : "The full resource name (including revision ID) of the spec of the API being served by the deployment. Changes to this value will update the revision. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}/specs/{spec@revision}`",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the deployment resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "endpointUri" : {
                "description" : "The address where the deployment is serving. Changes to this value will update the revision.",
                "type" : "string"
              },
              "externalChannelUri" : {
                "description" : "The address of the external channel of the API (e.g., the Developer Portal). Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "intendedAudience" : {
                "description" : "Text briefly identifying the intended audience of the API. Changes to this value will not affect the revision.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the deployment. A new revision is committed whenever the deployment contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "5d5d0c96-2a71-38b7-aa98-277b7c02c3c7",
    "name" : "Returns matching deployments.",
    "request" : {
      "urlPath" : "/v1/deuf4zktr0sz5v9wvs91jawd9qzy7p7f1iufh77ak6npys0sf4lth1pw7bp35hd7j/deployments",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"eux54xip31qeqyv0creqj3cqgvtmx8cb6usjw0hk3p0r30aiagk1py4tlr74kvnua4sx610r5yzgzltjd3fz8divdfkaga7l2zsbe7hwcqcf4sgh669ez8grsblfiu2wiy9h1bp9tjdrsifpm0ts7qzymr93prm6mf2ofokr2n5gzy6r0c45ojbwzvkjywck2\",\n  \"apiDeployments\" : [ {\n    \"intendedAudience\" : \"pboipd8bo287u5oo04jgfaz8\",\n    \"displayName\" : \"Rashad Adams\",\n    \"annotations\" : { },\n    \"description\" : \"Ut a et. Reprehenderit soluta veniam. Ducimus nihil harum mollitia. Dolorem et veritatis qui soluta corporis iure consectetur.\",\n    \"revisionCreateTime\" : \"2022-09-08T13:43:02.377916Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"dgg4\",\n    \"createTime\" : \"2022-06-17T13:42:02.378029Z\",\n    \"name\" : \"Denver Hudson\",\n    \"accessGuidance\" : \"2sxl8k4pt7vzbp9duib54ch7e4hj9me5bq93z1xyop4iiivsj37lo17d4amlr5dwspml2lsasoz1rvxnhxqnva1oabrj359klw\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/209005\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/387071\",\n    \"revisionUpdateTime\" : \"2023-02-28T14:19:02.378234Z\",\n    \"apiSpecRevision\" : \"ewtt0jzffyogymo8dnrt3j31p4mw2tx9a24fkj7xz62rt959ryif9fpf0dq3p9\"\n  }, {\n    \"intendedAudience\" : \"e9ohl7gzu9\",\n    \"displayName\" : \"Theodore Armstrong\",\n    \"annotations\" : { },\n    \"description\" : \"Eveniet esse eius praesentium temporibus. Odit voluptates qui rerum occaecati porro itaque debitis. Perspiciatis illo iste error doloremque placeat molestias nemo. Consequatur quia quisquam quisquam a\",\n    \"revisionCreateTime\" : \"2023-02-13T15:22:02.378552Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"8o88\",\n    \"createTime\" : \"2022-04-16T15:18:02.378652Z\",\n    \"name\" : \"Joleen Satterfield\",\n    \"accessGuidance\" : \"bd757hfl3c7ls29fuhu48ee35fjqvssm6sd8hs2na0agk3qwrazb3plh5pizqiocmoawapi3rarz4rug6i99vo743rwws3on2ciumyrxl0lro4ovkzwbjdkaez6xv1kvyk4xtxmdcg2y3f\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/930755\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/718728\",\n    \"revisionUpdateTime\" : \"2023-03-01T13:20:02.378849Z\",\n    \"apiSpecRevision\" : \"3vdq3z82cfyr4rra4nw8tm1osavjvjtcmo6ybzaa7uzx1uqbs178somnum4m21i8zf0abuf64kh03pakjz5kyswdts9eymx47835oc7d26h8k4avwdpvjxz0x7lyd4bapkqf6oid2jj4erqj8vxunezqnvprrwi8hq31dn41ebioz1y3ler\"\n  }, {\n    \"intendedAudience\" : \"lzlbm617pbs0c7q23a21v9enudroiog1i9uy0s32q09mf0qmptxf1anemj4if8y116tdn8cimjrkjk2e70b7p2de829292lbf5ovij0llm8n2sm0pk0s8g4hmue8qx3hzu3dbg7o85yyvw3for0fjnluyfexzuvqqxoygh6zjedyicfr3begoqi5wempsihmb\",\n    \"displayName\" : \"Ms. Leopoldo Wisoky\",\n    \"annotations\" : { },\n    \"description\" : \"Qui repellendus nemo et neque. Dolorum quis sint assumenda rerum id harum. Consequatur dolorem atque aut ut rerum.\",\n    \"revisionCreateTime\" : \"2022-11-21T15:06:02.378987Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"r86k\",\n    \"createTime\" : \"2022-12-19T14:47:02.379093Z\",\n    \"name\" : \"Rodney Lynch\",\n    \"accessGuidance\" : \"jvurg7cyg7on91z5d9yxwj4v3xsfpuhy439o5x9bic73c6byxroe863m826y4fab08rfhp1lfh8ig3qx9bmw9hlgids69pwcecigpzbgr7posslxr5f68gc1abbzspsxb8v4jowg3v45jbqbckx4fcrc4k7txaclmstyw8q8njhi\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/585627\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/006215\",\n    \"revisionUpdateTime\" : \"2023-01-13T15:28:02.3793Z\",\n    \"apiSpecRevision\" : \"qox7pf\"\n  }, {\n    \"intendedAudience\" : \"01m50wa8orks0a0mjjzw3bicwkfo1c4ruh1tipnfea35fnl9dtr8k8xloujuaqdga7zj48euew85b7gcb3lpcph71cp9hhcy3eljyk\",\n    \"displayName\" : \"Juan Halvorson\",\n    \"annotations\" : { },\n    \"description\" : \"Ut quia enim aut suscipit. Debitis amet dolores hic accusantium sit ratione eum. Rerum est quia nihil. Quasi qui exercitationem commodi quo necessitatibus asperiores quaerat. Necessitatibus iusto mole\",\n    \"revisionCreateTime\" : \"2022-12-15T15:05:02.379451Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"0o87\",\n    \"createTime\" : \"2022-12-06T13:24:02.379545Z\",\n    \"name\" : \"Marget Gorczany PhD\",\n    \"accessGuidance\" : \"0xhmo2scyha4xqe97j5gn6a\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/307043\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/023552\",\n    \"revisionUpdateTime\" : \"2022-09-11T15:25:02.37974Z\",\n    \"apiSpecRevision\" : \"r24txe6ky7osffghv3t\"\n  }, {\n    \"intendedAudience\" : \"w85yser1xybr593ls6hxc2slwd1j1p1j4nal6ztxat2lf2h6i0tfb3381xt7l97tjpn3795n7\",\n    \"displayName\" : \"Derek Zieme\",\n    \"annotations\" : { },\n    \"description\" : \"Aut ut unde sapiente qui eius. Reprehenderit modi reiciendis consequatur nulla dolores ut aperiam. Unde id neque adipisci eaque.\",\n    \"revisionCreateTime\" : \"2023-02-28T15:22:02.379867Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"v557\",\n    \"createTime\" : \"2022-05-31T16:41:02.379964Z\",\n    \"name\" : \"Terra Kreiger Sr.\",\n    \"accessGuidance\" : \"y2o1loup1yib0uydd2f8kd99iqq9t0u0uaebc0z8pvrgbggwxydw3nxj9oxhski8b0tqp89cfbvj3tzl4v2ng946s7u5ihegugqzz2uqkjd9jmspqvbivr5c7z3tqj89hasccuj9bddxw3xswkvnc3rquww19rdm92v79pkv8io72vf54hfxu600q3d2fs1xzg8o5ql\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/537475\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/119513\",\n    \"revisionUpdateTime\" : \"2023-02-09T13:36:02.380161Z\",\n    \"apiSpecRevision\" : \"a9v6b5j7vb3mih0crdknwfluoh7kd7q1fhi900gkc8yfc5uajekl7fy3ofll6cubkf76kl9krxjsaptubm2xq741v6v1n7p2fcdns1al4s3mygdtyz1xw04bvnxvegnyb2lm88uff2lzdvyngknkvhjk74osn6wno6m2317spw5my1w8t54usrjtze\"\n  }, {\n    \"intendedAudience\" : \"hj24fptf1hmmeadckya35c02b9wrro6chummfkaa8so0j02zljh3naj91vv89s8pgqxtwuozud1lz52ly31p\",\n    \"displayName\" : \"Javier Hyatt V\",\n    \"annotations\" : { },\n    \"description\" : \"Velit aut aliquam ullam officia assumenda qui. Sint beatae dolore consequatur ratione. Dolor dolorum architecto corrupti quidem a similique. Quia sit natus et inventore. Aliquam et exercitationem nesc\",\n    \"revisionCreateTime\" : \"2022-07-24T15:17:02.380298Z\",\n    \"labels\" : { },\n    \"revisionId\" : \"7kje\",\n    \"createTime\" : \"2022-12-15T15:03:02.38039Z\",\n    \"name\" : \"Ryann Pfannerstill\",\n    \"accessGuidance\" : \"r91053ozb7ivfe7tbr88e6me7t9uvrbo2raui6m2o1sxrls6fmnt7z2o84voiyu9ksvn3zj9snb0ddqk3dcs29cs1hh80fjdszx4ej3j0w17tg0swx3g90oewferrhvla078qti23cnb3vao9wyt37w3hfrxhaxz3neo27cdug03je4y30r5b8xt\",\n    \"endpointUri\" : \"https://web.example.mocklab.io/368282\",\n    \"externalChannelUri\" : \"https://web.example.mocklab.io/267300\",\n    \"revisionUpdateTime\" : \"2023-02-19T16:23:02.380583Z\",\n    \"apiSpecRevision\" : \"y1wxmyznbs61752y265jabbnn7mdnqhad0qfe2yflcd54aqydc22qq8uicu987vztlkc87u1tydv8crd2lhbuy3dcpg1ib8m9jpiyhtjaruehf5c66dipxcttrhwkjguucukej9rts82kchjlvwgqjsqe74qqmsgkvjlqxhlpf2revutyosbrn\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d5d0c96-2a71-38b7-aa98-277b7c02c3c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.deployments.list",
          "schema" : {
            "description" : "Response message for ListApiDeployments.",
            "properties" : {
              "apiDeployments" : {
                "description" : "The deployments from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiDeployment"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "a3958790-b77d-3558-b480-f712ecef23af",
    "name" : "Creates a specified artifact.",
    "request" : {
      "urlPath" : "/v1/dkwz9om851fcxx95noxz474f8yjznrp6kfvucybqs3wajuldfl4l7mn0fvvwgx6a63bccncfgjkbwlf21530mhp6pwdfywq41h6dz6j7dacp9lqvh2zdahte2ynwes61whn5xny7msyy570sziaqqdnr9p7j42agiei883xbdcs0l1jyjyyo65/artifacts",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"contents\" : \"hafea1subl1y59ztg6r9px6cesr5vkjra3jbcfgjz4uwpe0ocq2d8n2bpd\",\n  \"createTime\" : \"2022-05-13T15:51:02.377508Z\",\n  \"name\" : \"Carl Friesen\",\n  \"annotations\" : { },\n  \"updateTime\" : \"2023-02-24T16:56:02.377571Z\",\n  \"mimeType\" : \"vbh11ug9rb3o73z9zdaek7ly8qu957e1x88nm2dybx8wq21u6omj0zc8tu03a0iileuw6k2zazsto60o8ssc0us5n68jxp1ba3rzo\",\n  \"hash\" : \"fwhrkuwhcxta84hahh3llhreve4cbzp135lqy6nqwumpbhfn5js8e4bb9d8vn5fkktg626awkjikw7m7m68eaqt6tmodvdcavgorcp479h9u9ned5v4ujl6prlazh84sav5swtryevyh5z3w9l41ztc30304b68a1lp6ucbvneel7fdanc87\",\n  \"labels\" : { },\n  \"sizeBytes\" : 2085476231\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3958790-b77d-3558-b480-f712ecef23af",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.create",
          "schema" : {
            "description" : "Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"registry.googleapis.com/\" and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible \"schema\" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "73cbf34f-a7cc-3a29-b70b-2b6bd39282a6",
    "name" : "Returns matching artifacts.",
    "request" : {
      "urlPath" : "/v1/cnwx5404hyvqvi8khs8/artifacts",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"tb9ipvbl1p0jgmarg61vezvxbzw0e\",\n  \"artifacts\" : [ {\n    \"contents\" : \"bbm97v3ns3716l0y0483le6bpwjelooag78a7ts2r9\",\n    \"createTime\" : \"2022-11-12T14:27:02.377271Z\",\n    \"name\" : \"Mrs. Jeanna Von\",\n    \"annotations\" : { },\n    \"updateTime\" : \"2023-01-29T16:30:02.377348Z\",\n    \"mimeType\" : \"hhiv2a2n0e6e6qwa8ckf98r80nyikeczqn5oej24isudwq8cfa09ptwtozz5uw1sg9es2q9i5vlofw7t1gbsny6hrpxukfndy9pc\",\n    \"hash\" : \"8g5450w8xgmia9im6o8izlrz3ucihjbeagpg8a1otkpodj43tadggkjloyoj2w9b8o884sx0py3i5peqa2mz7p02capae9hi9a1vjhsr52g8qc1wwmkfg7ububc0yf35lwlhjlafbc\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1550960263\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73cbf34f-a7cc-3a29-b70b-2b6bd39282a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.list",
          "schema" : {
            "description" : "Response message for ListArtifacts.",
            "properties" : {
              "artifacts" : {
                "description" : "The artifacts from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/Artifact"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "7e6616fc-b3be-38c3-8fdc-894bd8c811a2",
    "name" : "Creates a specified API.",
    "request" : {
      "urlPath" : "/v1/jx825d06jm8q89nowz3fko6aquwgcd960730yxb0agd90algm640hjgzlx9qfiqy8z8es71dkqo4nb0lk907lzbi0ua068k9mupsf92mumkgjkfffcz08n0710r7w4xjnnmhz1uk8ya5htvi37siqkpi83ryvmk0eiw5wwyp8a965deu63ly76kfgjv2qe/apis",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"recommendedVersion\" : \"62rm8p3b2so3607kzndjvopet9l04as58ym8vs1bltzmtgtnzz766lvdvpsn4yrrcsccwsj3fczhbexrjjisukuzx5wn2z88po9un08sfz6396cuz85k26j9s7jck6vxkix35tx2u4dt9j1nmci3m75dti438m56dyvz5\",\n  \"createTime\" : \"2022-09-08T16:05:02.376865Z\",\n  \"displayName\" : \"Lorna Lind PhD\",\n  \"name\" : \"Mrs. Blondell Bahringer\",\n  \"annotations\" : { },\n  \"description\" : \"Non rerum sit ut. Dolorem dolor ex consequatur voluptas numquam vitae nulla. Possimus rerum sed sunt ullam quo ut maxime. Facilis quis sed consectetur quidem voluptas. Itaque facilis perferendis.\",\n  \"updateTime\" : \"2022-08-05T16:54:02.377003Z\",\n  \"availability\" : \"namgd3tfav7nnvpn2xhh6lodcd5kxlfmq58po8uheg3e97pxfc1b0ks7paovoq0fh6z\",\n  \"labels\" : { },\n  \"recommendedDeployment\" : \"4fyut0398j0d2fhnr04tjghun8swiwcawpgs0b742byz39c5d7qucjdi389nl5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e6616fc-b3be-38c3-8fdc-894bd8c811a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.create",
          "schema" : {
            "description" : "A top-level description of an API. Produced by producers and are commitments to provide services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "availability" : {
                "description" : "A user-definable description of the availability of this service. Format: free-form, but we expect single words that describe availability, e.g., \"NONE\", \"TESTING\", \"PREVIEW\", \"GENERAL\", \"DEPRECATED\", \"SHUTDOWN\".",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "displayName" : {
                "description" : "Human-meaningful name.",
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores, and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "recommendedDeployment" : {
                "description" : "The recommended deployment of the API. Format: `projects/{project}/locations/{location}/apis/{api}/deployments/{deployment}`",
                "type" : "string"
              },
              "recommendedVersion" : {
                "description" : "The recommended version of the API. Format: `projects/{project}/locations/{location}/apis/{api}/versions/{version}`",
                "type" : "string"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "0738eae5-b08a-3d76-b86d-d0dd6d5935dd",
    "name" : "Returns matching APIs.",
    "request" : {
      "urlPath" : "/v1/o8pfmxefxc5sac7lojxza46ethd11dtgeh9timm06v9oyo37qa66jfribahb14p6l6dykfewfe3h3uziq6fudva75x1ubtr7k2iyus17n2n9gsg958ersqih7j9k3yoxz2ctvdj2c3kx58d86jgg/apis",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apis\" : [ {\n    \"recommendedVersion\" : \"mpw0y2vlfvmobo97kqo9njneugo1tk56yu431k5xs23s8ivnkea77pycy3dl73nw0vl2vmfekvmxzbaxpp4n9908em4ozuczwcdc2yt\",\n    \"createTime\" : \"2022-10-22T16:34:02.37609Z\",\n    \"displayName\" : \"Colby Abshire II\",\n    \"name\" : \"Keith Abshire DVM\",\n    \"annotations\" : { },\n    \"description\" : \"Rerum voluptatem quia quo. Consequatur autem quidem qui tempore blanditiis ea id. Consequatur reiciendis iure asperiores maiores. Quae odio unde quia facere nesciunt ex nostrum. Sed dolorem distinctio\",\n    \"updateTime\" : \"2022-10-06T15:29:02.376246Z\",\n    \"availability\" : \"l1rvqsimdamf2mqdytgjvzl2glxca7y3ie5jgcrslpfhdfmej6hm8n3dsaan9ubv08m66kk1aigv01mqua7yk4b3fr0l6ri75bp4\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"h7rt232go2pw1695v2xiej3bj6m8jcf7hwsvjgtx8ozjswgcdp4ex2y85pmglef8b3yuyj1evteta0hf355x05wa0qip3d3wua8mm332wq0dr7gw0fic80e14sdd74bim37kh11a733zuse85pd6rxmad9xyg0b647vjac5dlk07h7269o3qm62lpvcuak7ak2\"\n  }, {\n    \"recommendedVersion\" : \"yh65ftn3ae55n2j1z17evpsd1fqeulv742eandhinen10r4pnfh05dtnvc3q8g9yzh\",\n    \"createTime\" : \"2022-03-11T16:32:02.376323Z\",\n    \"displayName\" : \"Toby Abbott\",\n    \"name\" : \"Dr. Jordon Beatty\",\n    \"annotations\" : { },\n    \"description\" : \"Soluta voluptatem et itaque consequuntur qui. Nobis ut ut maiores vitae eaque odio voluptatem. Qui dolor repudiandae qui qui voluptatem. Eligendi consectetur distinctio sequi earum ut molestiae.\",\n    \"updateTime\" : \"2022-12-06T13:30:02.376463Z\",\n    \"availability\" : \"tu5kxm85vzkksy5uyv07kyl0b43lqlmh9akxxhwns9nbjb81iqwazrbmzye7qlqjejxof4p1z\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"ba5i0qhtqvnbb1b879f201i6a8ec8typxskpwvcvtudwbt4r33wcbkl981lt7p5kuw0fcqruay16a5y46ej7hppxik4lmaenpuhhphlh34jwq4rxeduwiyxrbzqj5xxobvqau6i432uvko1vygbv9w3zkgofv62ovuon\"\n  }, {\n    \"recommendedVersion\" : \"qqo217g58ye6tniqb7954wnieyg6t3otifm1il4vrvw4gqupdi\",\n    \"createTime\" : \"2022-04-05T14:26:02.376531Z\",\n    \"displayName\" : \"Vernon Crooks\",\n    \"name\" : \"Major VonRueden\",\n    \"annotations\" : { },\n    \"description\" : \"Ex officiis illo et. Velit distinctio enim harum. Aut delectus neque et possimus rerum ab.\",\n    \"updateTime\" : \"2023-01-17T15:45:02.376666Z\",\n    \"availability\" : \"kignwt3kc253eh7ly652ci0yjpgkxpuejwx72o9vw\",\n    \"labels\" : { },\n    \"recommendedDeployment\" : \"h7xwd4f5gjgwl3iem6w7r2jldzktoep1tzom8pcv7tej7i7khfdt97vtiff3j5o2sfhfm6w612r10ydll3x6yfxq48rma1lge0yi4xloc4qubtjpx3xgzqtn0gyqiwxsyy93cqs1urbus7uhvo4hj9q\"\n  } ],\n  \"nextPageToken\" : \"w6pl8f2sl3imxv9jucm8sb4gabadd1ck24e5czn210nr76pxw30sbsqiurbd1wpgokty2y21anuj6u830d5jlbwmqjeplu0mkxatx20nlg0xcqb7cabqy8bnirxil\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0738eae5-b08a-3d76-b86d-d0dd6d5935dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.list",
          "schema" : {
            "description" : "Response message for ListApis.",
            "properties" : {
              "apis" : {
                "description" : "The APIs from the specified publisher.",
                "items" : {
                  "$ref" : "#/components/schemas/Api"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token, which can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "4c3a1c4d-0e36-3fbd-9344-10a6cdec6bea",
    "name" : "Adds a tag to a specified revision of a spec.",
    "request" : {
      "urlPath" : "/v1/Keith+Gutkowski:tagRevision",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Asperiores ea sint eum officia veritatis. Autem sit neque repellendus voluptatibus minus. Ea et quod illum. Aut et vel dolorem maxime.\",\n  \"mimeType\" : \"sypt10jcw1tfbsy0qio668du2eql5uxcefvl0qu7mkt24uywg25o7yz643erobcntgg155wcisxdzkhkq7b7xky9cerxom2oys7d3jh8h4hls8xbn7lhue65zwqlpt9vc011sfel2x469\",\n  \"revisionCreateTime\" : \"2022-09-30T15:13:02.375568Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 2005218756,\n  \"revisionId\" : \"2stk\",\n  \"filename\" : \"Cedric Heller DVM\",\n  \"contents\" : \"fvjyu9slyt88lnqwvlsghfhcg5vxosa49tj4zjna6wwcw4aqvicxdbqx7103690wots9el4p9tmc3xhucyws19ji7w8ry4c26277o0qla57yhz6m0texq0\",\n  \"createTime\" : \"2022-04-11T16:30:02.375722Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/146689\",\n  \"name\" : \"Hien Wunsch\",\n  \"hash\" : \"i1vy32m3xzseual3gledn8lnio3syblk7du4mqzukq6ic25jw7rqyx9v6zrtpj2vkq94ip4nhdde4dgd3fy8t7dqmw2jw47lentg8bfhkb21vp8qhucivirb96hkrbjwyoae8kuk1lo0ltdwnjblpiko9jb6g8bvumaepztk95f6h0hcn\",\n  \"revisionUpdateTime\" : \"2022-05-08T13:36:02.375851Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c3a1c4d-0e36-3fbd-9344-10a6cdec6bea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.tagRevision",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "5817107c-ef08-3d6f-9eaa-3b01ee0e689b",
    "name" : "Sets the current revision to a specified prior revision. Note that this creates ...",
    "request" : {
      "urlPath" : "/v1/Son+Hilpert:rollback",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Earum minima ipsam. Tempora aperiam vel inventore commodi nam. Cumque aliquam minima molestiae eligendi quia. Nulla beatae sint nisi aut quos dolore unde.\",\n  \"mimeType\" : \"aqjmducr2aukntaqvo9j34sy8hgrwp40v5wla9olzceizydz5izpxrej9mjsfgn48a74tvoih9lwvr1si3wty7iae4mww3ub9gdpzm17p\",\n  \"revisionCreateTime\" : \"2022-03-24T16:38:02.374995Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 368225113,\n  \"revisionId\" : \"8b1m\",\n  \"filename\" : \"Kathryne Kohler\",\n  \"contents\" : \"vj1b3f4yffe6dpp40bunt0vqjmgco2rdf41ihhhyv44btczkf4m158\",\n  \"createTime\" : \"2022-10-14T16:12:02.375155Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/498225\",\n  \"name\" : \"Christoper Ortiz\",\n  \"hash\" : \"emdoywttr6hfxrf5ljhjac6wvc6trq0bjwfmc2cpvu47dfm1bm1kizvi4t5450zaub4hgwdzvg36d9j0vyx8zhk8podnkb7dcfsrnrrfhj\",\n  \"revisionUpdateTime\" : \"2022-04-28T14:38:02.375289Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5817107c-ef08-3d6f-9eaa-3b01ee0e689b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.rollback",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "b5e11cf2-0d4a-3a89-9781-643230a5a72d",
    "name" : "Lists all revisions of a spec. Revisions are returned in descending order of rev...",
    "request" : {
      "urlPath" : "/v1/Latoya+Wehner:listRevisions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"apiSpecs\" : [ {\n    \"annotations\" : { },\n    \"description\" : \"Quia at accusamus libero earum. Repudiandae temporibus distinctio. Soluta rerum voluptas doloribus delectus. Porro est optio.\",\n    \"mimeType\" : \"xwbhze32wc2glh\",\n    \"revisionCreateTime\" : \"2023-01-07T17:01:02.372914Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 1604641977,\n    \"revisionId\" : \"gp21\",\n    \"filename\" : \"Lanora Hudson\",\n    \"contents\" : \"04o962x8xqrzq748akpdmxm9tf7fi59wdgmvr6dciftfs41sxlm8s7yllzg6pqiqzq68bu6127fe5e3hvirzu6gkygo24jt\",\n    \"createTime\" : \"2022-10-03T15:02:02.373079Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/416952\",\n    \"name\" : \"Adrianne Padberg\",\n    \"hash\" : \"582js2zkevr85p5rk1zca1hpef4xul9jhogufnvw1k7h3fjw7h\",\n    \"revisionUpdateTime\" : \"2022-10-21T15:26:02.373217Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Vitae omnis culpa placeat. Aut corporis ut vel aut nihil. Repellendus non voluptatem fugiat est est.\",\n    \"mimeType\" : \"d308u1rz92zigxhjvmy6zwmzab3dnhxl88hy17dl72nrw4i6bvqhwre\",\n    \"revisionCreateTime\" : \"2023-01-18T14:58:02.373297Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 385590392,\n    \"revisionId\" : \"mcw1\",\n    \"filename\" : \"Mr. Belia Orn\",\n    \"contents\" : \"lmfsk4pcfkko43dofst86ipedb6r4xklsnytcvheo7va5m0gwd80qof4mo0rp6dceald9dtpusq972gz4yf5oziq9to2lmgg3p2opu1fwu0ci3vpd53rsk6jnu2bkcyggte6urn5a7q77v39vb07u2g8bfexuod6te1ba\",\n    \"createTime\" : \"2022-05-27T15:53:02.373463Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/369999\",\n    \"name\" : \"Dennis Paucek DDS\",\n    \"hash\" : \"bvorg9esays0jihpb31ferapqfjtzvy7gw8630cw5ggg0eo59uxlqs5hhr70v89gxzv0xnekt5lf4tkbmta4b1cm794xdfo3mzft9fhse40qocf9kkjwc2cdw3qoomfde1uhsecyvjuyjyvbsbh9dvohz761xjdx3dj85r95ycotankie5ub79e7\",\n    \"revisionUpdateTime\" : \"2022-08-06T14:13:02.373605Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Sequi rem nesciunt rerum delectus odio porro consequuntur. Omnis sit reprehenderit magni et quis quos. Aperiam quis accusantium.\",\n    \"mimeType\" : \"2urt6bw2sgb42ut4mjqbejeluq6t9olppr9apixttj8sdrb8lzpx9vmtd7rvmu0a96ei4boy7opc8npkoiicmma5\",\n    \"revisionCreateTime\" : \"2022-04-18T15:02:02.373683Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 926636270,\n    \"revisionId\" : \"3109\",\n    \"filename\" : \"Rolland Gulgowski\",\n    \"contents\" : \"pzpwiojcf9h1z4v2jjlebjy5eorpsugxkyc3c75wj17ll0jnr82278wjdg39wa3va6zlaebx4299wn3257bz9mjstw86fn9\",\n    \"createTime\" : \"2022-03-26T13:30:02.37384Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/107828\",\n    \"name\" : \"Jovita Renner\",\n    \"hash\" : \"wg2qculhbkcoyir9zp6dhp1343qbedf48btwgpouvramk0mynol1dlbmhd8m4bfpefxf5sjondhbjbrplra0zf0718mxxgvm8q5gpnn5g6rf7vmlk1es3w9yf0be9cay2lubt25wg1tenp8a1kh7k7wszkc878i62bbkxhvq1v5b5v3xfxi\",\n    \"revisionUpdateTime\" : \"2022-09-24T14:28:02.373976Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Voluptatem nihil et asperiores impedit enim aliquam. Quia aut tempore labore tempore unde repellendus quis. Eaque sapiente enim ut laborum.\",\n    \"mimeType\" : \"flw8mxcafi8asjuasx2dan1p6lgok5qpkf5x3dzy44839r10pqrhua2nrc6vszfczgljrpu2kqp7tc\",\n    \"revisionCreateTime\" : \"2023-01-06T13:26:02.374053Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 2012395699,\n    \"revisionId\" : \"8j52\",\n    \"filename\" : \"Nichol Cummerata\",\n    \"contents\" : \"9sgvl2bygbimtq03mp8yje3uscsb6rtayoyxlatp4r3ezjuyhc4yflwyjpkw95utgypkmitw15o5gnrmf5kqrmx9tx2u8ttzzsz\",\n    \"createTime\" : \"2022-10-04T16:39:02.374214Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/731754\",\n    \"name\" : \"Marion Schroeder II\",\n    \"hash\" : \"ez15ukesdfoefpkqj66rhrj57c4kvarze155fm58mal8vaj96wvtao037ckd56e2jff6\",\n    \"revisionUpdateTime\" : \"2022-10-24T14:20:02.374352Z\"\n  }, {\n    \"annotations\" : { },\n    \"description\" : \"Quis quo molestias dolorem. Voluptatum ratione consequuntur numquam totam est. Dolores cum beatae debitis architecto. Repellat suscipit cumque rerum et aut delectus. Quos soluta et ea sapiente officii\",\n    \"mimeType\" : \"5rrxr3vyykx8kjcd19kmz2nb8a7w\",\n    \"revisionCreateTime\" : \"2022-09-15T14:25:02.374437Z\",\n    \"labels\" : { },\n    \"sizeBytes\" : 2067063781,\n    \"revisionId\" : \"k55h\",\n    \"filename\" : \"Wen Daugherty MD\",\n    \"contents\" : \"x65zjda4ms8vt9phzmqehh3qmnu094uqxeb4xkvabmwxz685t9uqz3v5tuh30f5p\",\n    \"createTime\" : \"2022-11-06T13:46:02.374595Z\",\n    \"sourceUri\" : \"https://web.example.mocklab.io/251638\",\n    \"name\" : \"Mrs. Pierre Tremblay\",\n    \"hash\" : \"525nl0vnsjfqqbqt2jq27c9xb0o8tp7ux6o2wo464jyw3b2y4b4mw0fhgjtgfvjdyd7kvi1m0ierabmw6ip8jynsffey0q9776i6vkshv4g6jb23\",\n    \"revisionUpdateTime\" : \"2023-01-25T16:15:02.374734Z\"\n  } ],\n  \"nextPageToken\" : \"vk46s7ssyftd8diegz5yiyw5mm86k6bz0a2ebuf06bhq91w10\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5e11cf2-0d4a-3a89-9781-643230a5a72d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.listRevisions",
          "schema" : {
            "description" : "Response message for ListApiSpecRevisionsResponse.",
            "properties" : {
              "apiSpecs" : {
                "description" : "The revisions of the spec.",
                "items" : {
                  "$ref" : "#/components/schemas/ApiSpec"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token that can be sent as `page_token` to retrieve the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "7938b4d5-c020-35dd-a6d8-bf60519272e4",
    "name" : "Returns the contents of a specified artifact. If artifacts are stored with GZip ...",
    "request" : {
      "urlPath" : "/v1/Ena+Stracke+Jr.:getContents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"extensions\" : [ { }, { }, { }, { } ],\n  \"data\" : \"c3sv4h7dfr6t\",\n  \"contentType\" : \"7nenkgbysauqaa7bgvrikkqas\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7938b4d5-c020-35dd-a6d8-bf60519272e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.getContents",
          "schema" : {
            "description" : "Message that represents an arbitrary HTTP body. It should only be used for payload formats that can't be represented as JSON, such as raw binary or an HTML page. This message can be used both in streaming and non-streaming API methods in the request as well as the response. It can be used as a top-level request field, which is convenient if one wants to extract parameters from either the URL or HTTP template into the request fields and also want access to the raw HTTP body. Example: message GetResourceRequest { // A unique request id. string request_id = 1; // The raw HTTP body is bound to this field. google.api.HttpBody http_body = 2; } service ResourceService { rpc GetResource(GetResourceRequest) returns (google.api.HttpBody); rpc UpdateResource(google.api.HttpBody) returns (google.protobuf.Empty); } Example with streaming methods: service CaldavService { rpc GetCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); rpc UpdateCalendar(stream google.api.HttpBody) returns (stream google.api.HttpBody); } Use of this type only changes how the request and response bodies are handled, all other features will continue to work unchanged.",
            "properties" : {
              "contentType" : {
                "description" : "The HTTP Content-Type header value specifying the content type of the body.",
                "type" : "string"
              },
              "data" : {
                "description" : "The HTTP request/response body as raw binary.",
                "format" : "byte",
                "type" : "string"
              },
              "extensions" : {
                "description" : "Application specific response metadata. Must be set in the first response for streaming APIs.",
                "items" : {
                  "additionalProperties" : {
                    "description" : "Properties of the object. Contains field @type with type URL."
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "9b1cddd3-2cad-3081-bdaa-e567c7c77588",
    "name" : "Deletes a revision of a spec.",
    "request" : {
      "urlPath" : "/v1/Venita+Kunde+II:deleteRevision",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Harum omnis suscipit qui nostrum. Minima aperiam repellat laboriosam suscipit dignissimos. Tempora tenetur velit sit adipisci iste. Dolorem iste explicabo quas nemo ut.\",\n  \"mimeType\" : \"xwm68ujbzgdne3vuiiqd823\",\n  \"revisionCreateTime\" : \"2023-03-09T15:10:02.372078Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1725641764,\n  \"revisionId\" : \"a76e\",\n  \"filename\" : \"Buck Wyman\",\n  \"contents\" : \"7ed4otanbix53y6qerkdv7zpslg7rreqzp1qk8ihrvz9zcpqy9o07li0utkrmb69wuattqpf5jqvrdocbpno0ne20p43vs4bcb84asr5zwvxu\",\n  \"createTime\" : \"2022-07-27T16:14:02.372261Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/414627\",\n  \"name\" : \"Ms. Debby Abbott\",\n  \"hash\" : \"kgwva0yr9pnjua2gnwwlb71yz90cv4vt57792ldja5vunu2rnnwevkj1gdwwbjry1cwomybec65fsgensz8043u4j6y3b5xhhkboy1cn597ei06y64g2nq9hc1hbwrwej29k9wj4fogjxy66e50ivny7j191dml9cz9tvp50we4xolqyiihwdr7a8by44\",\n  \"revisionUpdateTime\" : \"2022-07-15T16:23:02.372418Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b1cddd3-2cad-3081-bdaa-e567c7c77588",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.deleteRevision",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "2e1b02b8-bd89-3345-b133-cce2a02dd2c5",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Ms.+Agustin+Flatley:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e1b02b8-bd89-3345-b133-cce2a02dd2c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "01c86163-9eef-39fd-9e5b-ff93ac21deab",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Dana+Kling+II/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Mr. Peggie Langosh\",\n    \"error\" : {\n      \"code\" : 1282117815,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Excepturi recusandae laudantium non est. Maxime libero doloribus dicta minus. Tempore aut hic.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Faustino Feest\",\n    \"error\" : {\n      \"code\" : 1044485092,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Voluptatem doloribus ipsum assumenda quibusdam quos. Voluptas sed soluta pariatur. Culpa dicta ipsa sunt. Aliquid distinctio consequatur.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Alvin Windler\",\n    \"error\" : {\n      \"code\" : 2048341728,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut quo adipisci saepe quaerat omnis id. Repudiandae sint veritatis praesentium dolorem non consequatur distinctio. Aut esse iure nostrum sunt accusantium dignissimos aut.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ms. Nichelle Jacobson\",\n    \"error\" : {\n      \"code\" : 1962320764,\n      \"details\" : [ { } ],\n      \"message\" : \"Autem voluptas nemo autem. Cum nemo eos corrupti rerum vel. Dolorem quo dolorem libero. Minima omnis atque.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Cole Parker\",\n    \"error\" : {\n      \"code\" : 402146179,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Ullam ut optio quos quas dolore. Sint occaecati possimus vitae. Quia quisquam incidunt illum iusto.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Jesse Torphy\",\n    \"error\" : {\n      \"code\" : 1776193754,\n      \"details\" : [ { } ],\n      \"message\" : \"Eius culpa qui ut iure illum ut. Ut omnis sit eum dolore illo sit. Odio beatae tempora. Non voluptatem architecto voluptates ut.\"\n    },\n    \"done\" : true\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Marjorie Kassulke\",\n    \"error\" : {\n      \"code\" : 1342667791,\n      \"details\" : [ { } ],\n      \"message\" : \"Ut itaque enim. Quia deleniti pariatur. Ut error qui est quia debitis mollitia.\"\n    },\n    \"done\" : false\n  }, {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Carlo Macejkovic\",\n    \"error\" : {\n      \"code\" : 1778193037,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Saepe adipisci accusantium dolore amet fugiat. Beatae autem quasi. Blanditiis sit nulla. Ad rerum aut ab eligendi eum similique molestiae. Est dolorem qui.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"r6idlohc56j1k81idb4wlf3u\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01c86163-9eef-39fd-9e5b-ff93ac21deab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "106b05b5-df97-3696-a8f6-cae4124b72cd",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Otilia+Hoeger/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"xkal4n3innfprtow4a5sl89jffgjxhxlpzm4l99a2x8aio\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Lucille Mayer V\",\n    \"locationId\" : \"vf31\",\n    \"name\" : \"Miss Anya Jast\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Dr. Jene Veum\",\n    \"locationId\" : \"097x\",\n    \"name\" : \"Arturo Daniel DVM\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Eugenie Williamson\",\n    \"locationId\" : \"uhwf\",\n    \"name\" : \"Dorinda Hoeger DDS\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Clair Braun\",\n    \"locationId\" : \"5128\",\n    \"name\" : \"Eboni Johnson\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "106b05b5-df97-3696-a8f6-cae4124b72cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "bfc3e887-49d3-3cc1-ace2-473ad0b531c5",
    "name" : "Used to replace a specified artifact.",
    "request" : {
      "urlPath" : "/v1/Daria+Schultz+MD",
      "method" : "PUT"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"contents\" : \"taic55hysqfxzcj4yukynjkle8q4sjqo5ernqrro37izfb46mrh7ge4hcjr52er0vaoyvzt7asm0wjq6uyfybyx0fk4a3g25u15zde9k3nvabkfhabwdc6u33kzfhtq74h6tjq8yrapfbe82ym77c7v2wzhkhdd9rwk79\",\n  \"createTime\" : \"2022-06-04T15:48:02.369641Z\",\n  \"name\" : \"Danny Ryan V\",\n  \"annotations\" : { },\n  \"updateTime\" : \"2022-03-23T16:04:02.369718Z\",\n  \"mimeType\" : \"higqhal5frhttrk3b9g2reqq6m088c021rhno8k4aa6mo4dwltwyfzpcx1a538c76whjrxdum63zkpd2ih22l3gfk9ozlpaqcw1hp7nf5luwpo\",\n  \"hash\" : \"ru073i2ug2b0bznt5t3gv5cwwf0a9\",\n  \"labels\" : { },\n  \"sizeBytes\" : 503041723\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfc3e887-49d3-3cc1-ace2-473ad0b531c5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.artifacts.replaceArtifact",
          "schema" : {
            "description" : "Artifacts of resources. Artifacts are unique (single-value) per resource and are used to store metadata that is too large or numerous to be stored directly on the resource. Since artifacts are stored separately from parent resources, they should generally be used for metadata that is needed infrequently, i.e., not for display in primary views of the resource but perhaps displayed or downloaded upon request. The `ListArtifacts` method allows artifacts to be quickly enumerated and checked for presence without downloading their (potentially-large) contents.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the artifact. Provided by API callers when artifacts are created or replaced. To access the contents of an artifact, use GetArtifactContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the artifact's contents. If the artifact is gzipped, this is the hash of the uncompressed artifact.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with \"registry.googleapis.com/\" and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A content type specifier for the artifact. Content type specifiers are Media Types (https://en.wikipedia.org/wiki/Media_type) with a possible \"schema\" parameter that specifies a schema for the stored information. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the artifact in bytes. If the artifact is gzipped, this is the size of the uncompressed artifact.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "updateTime" : {
                "description" : "Output only. Last update timestamp.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "76367618-bfa3-33e4-8590-1230fd169239",
    "name" : "Used to modify a specified spec.",
    "request" : {
      "urlPath" : "/v1/Mr.+Merrie+Boehm",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"annotations\" : { },\n  \"description\" : \"Magnam sed temporibus ipsam totam nulla. Quaerat est debitis qui minus. Sapiente illo sint iure accusantium. Laboriosam officia ex minima vitae ut maiores. Et hic reiciendis.\",\n  \"mimeType\" : \"rsgppdb86639xtsch1i96xjdgasvd9nhuay8qyb2kdj\",\n  \"revisionCreateTime\" : \"2022-06-04T14:48:02.368971Z\",\n  \"labels\" : { },\n  \"sizeBytes\" : 1335064725,\n  \"revisionId\" : \"11s6\",\n  \"filename\" : \"Glendora Hessel\",\n  \"contents\" : \"9uyirivsq72yvsecoszdghtkro58ni9nedv7wa321qxwcj77j5p7emsws7tx61x37lmzdcl5hr0eh2ckc0fensjnkrf43m7bs9gq2i7d5iyok71havuyqngiuimmwi84gr98j0grqikagr6rdwmne4qs698ikgrao\",\n  \"createTime\" : \"2023-01-26T16:32:02.369166Z\",\n  \"sourceUri\" : \"https://web.example.mocklab.io/561743\",\n  \"name\" : \"Cythia Auer DDS\",\n  \"hash\" : \"sbd2ho7c\",\n  \"revisionUpdateTime\" : \"2022-10-10T14:15:02.369325Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76367618-bfa3-33e4-8590-1230fd169239",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.apis.versions.specs.patch",
          "schema" : {
            "description" : "Describes a version of an API in a structured way. ApiSpecs provide formal descriptions that consumers can use to use a version. ApiSpec resources are intended to be fully-resolved descriptions of an ApiVersion. When specs consist of multiple files, these should be bundled together (e.g., in a zip archive) and stored as a unit. Multiple specs can exist to provide representations in different API description formats. Synchronization of these representations would be provided by tooling and background services.",
            "properties" : {
              "annotations" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Annotations attach non-identifying metadata to resources. Annotation keys and values are less restricted than those of labels, but should be generally used for small values of broad interest. Larger, topic- specific metadata should be stored in Artifacts.",
                "type" : "object"
              },
              "contents" : {
                "description" : "Input only. The contents of the spec. Provided by API callers when specs are created or updated. To access the contents of a spec, use GetApiSpecContents.",
                "format" : "byte",
                "type" : "string"
              },
              "createTime" : {
                "description" : "Output only. Creation timestamp; when the spec resource was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "A detailed description.",
                "type" : "string"
              },
              "filename" : {
                "description" : "A possibly-hierarchical name used to refer to the spec from other specs.",
                "type" : "string"
              },
              "hash" : {
                "description" : "Output only. A SHA-256 hash of the spec's contents. If the spec is gzipped, this is the hash of the uncompressed spec.",
                "readOnly" : true,
                "type" : "string"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels attach identifying metadata to resources. Identifying metadata can be used to filter list operations. Label keys and values can be no longer than 64 characters (Unicode codepoints), can only contain lowercase letters, numeric characters, underscores and dashes. International characters are allowed. No more than 64 user labels can be associated with one resource (System labels are excluded). See https://goo.gl/xmQnxf for more information and examples of labels. System reserved label keys are prefixed with `apigeeregistry.googleapis.com/` and cannot be changed.",
                "type" : "object"
              },
              "mimeType" : {
                "description" : "A style (format) descriptor for this spec that is specified as a Media Type (https://en.wikipedia.org/wiki/Media_type). Possible values include `application/vnd.apigee.proto`, `application/vnd.apigee.openapi`, and `application/vnd.apigee.graphql`, with possible suffixes representing compression types. These hypothetical names are defined in the vendor tree defined in RFC6838 (https://tools.ietf.org/html/rfc6838) and are not final. Content types can specify compression. Currently only GZip compression is supported (indicated with \"+gzip\").",
                "type" : "string"
              },
              "name" : {
                "description" : "Resource name.",
                "type" : "string"
              },
              "revisionCreateTime" : {
                "description" : "Output only. Revision creation timestamp; when the represented revision was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionId" : {
                "description" : "Output only. Immutable. The revision ID of the spec. A new revision is committed whenever the spec contents are changed. The format is an 8-character hexadecimal string.",
                "readOnly" : true,
                "type" : "string"
              },
              "revisionUpdateTime" : {
                "description" : "Output only. Last update timestamp: when the represented revision was last modified.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "sizeBytes" : {
                "description" : "Output only. The size of the spec file in bytes. If the spec is gzipped, this is the size of the uncompressed spec.",
                "format" : "int32",
                "readOnly" : true,
                "type" : "integer"
              },
              "sourceUri" : {
                "description" : "The original source URI of the spec (if one exists). This is an external location that can be used for reference purposes but which may not be authoritative since this external resource may change after the spec is retrieved.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "9331b826-c6f6-3728-8a6c-05807f023613",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1/Yu+Corkery+III",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Weldon Larson\",\n  \"error\" : {\n    \"code\" : 1051578570,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Non sit odio et et et minus. Eum esse a. Sit a ullam voluptas non id.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9331b826-c6f6-3728-8a6c-05807f023613",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "1a1bb339-bc7a-3b43-8c1a-2ccf435e6937",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1/Del+Nader+DDS",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a1bb339-bc7a-3b43-8c1a-2ccf435e6937",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "apigeeregistry.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  } ]
}