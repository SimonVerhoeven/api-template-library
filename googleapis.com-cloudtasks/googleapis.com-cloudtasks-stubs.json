{
  "mappings" : [ {
    "id" : "82d9aafd-e14d-4e84-89f4-897d2f41076d",
    "name" : "Returns permissions that a caller has on a Queue. If the resource does not exist...",
    "request" : {
      "urlPath" : "/v2beta3/ol308t5zpzpfsdymuyfgs3e4tpxxilxsnm0jk10nzvr6pyubs1ervkl2upabeixu1bevnb2kwn38qrwmnice751n4zmik4jbhg1ux3dpkst56fim6oi29mmu8oovcr274lfzya7btani7bbou50lz32be4qpuwmoaayuzf0l8trqgysoq7tdmxz8xr6fj:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"fg0fwn7j6ofx\", \"d706sxm1xwvycwq12k4n82k1dhlx9p74hc600kfw5u2r0ui6r9grt4ermiqfu\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82d9aafd-e14d-4e84-89f4-897d2f41076d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.882801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5500742d-d6cc-43eb-bdfb-af6d5b9d975f",
    "name" : "Sets the access control policy for a Queue. Replaces any existing policy. Note: ...",
    "request" : {
      "urlPath" : "/v2beta3/ayws0h1sb66yo66bway0x70lwj96yimcua6rl6r4672z5hobvx3lnlbrdnrdkvonxp8eemf1hgkkw8vs7hwep3br6p591lcwayk41k7m7gvqlzu67kz6d2kppwvt6ur069opkq2eorwooh1pj8ofsie1qhxrbnfv464a4a9zxuzmws0yg4ldrbpvsb6v47qt:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"6upaolev02l5dsv7mhzqwoyhqym6c8smun7cm2l4utgvxq1gtippmya3asrc41si91fbd6v83er3c8pd16181pcq1aernlst28s749mnnpbln2luxk7us1hucbwpz32exbcvir5lztw125j7td2ypebopv\",\n      \"description\" : \"Deleniti sit quia est veniam aliquid magni reiciendis. Sunt aut dolorem nam. Sed distinctio omnis vel explicabo nihil. Deleniti et omnis nemo.\",\n      \"location\" : \"kaqf6gpnarll2c6x73vbhyjfrlyudmc2s1orhwpqy06wmfwo0nnnohudm77pkcj5eayk52s9dwp04ya5dalp9sqhmz8qih58zldb98urks18c9dqbye02tbc43tb0b5puntb3k4ieqv9uv75lzmx9y68fhl5zbvi\",\n      \"title\" : \"Aut porro vitae.\"\n    },\n    \"role\" : \"lh93n9rvlbaq7sxvqqht22xc5s0k9y6ou429rloubrbcgcwq4hjys2ycm53desuktct9fzdr72b011vcpd0afn8rz7cpx89pxvyuqnqxq8tqgpfp18dqfow2wekyzl3rakfdpe\",\n    \"members\" : [ \"47zyn5m9hh9psle22pyfjno3vyfnjbsgomdope8jz3xvi80163qtv1e2zg46zjc3ukt2h9hjvewflwni5es59kpr7sbgx2xrgtt5m86j0o0ggjid7y379wzv3i11y3mirx\", \"6bbq54ncj3djfia4l45ikbgnt77o1c7w50gmn8cgalzgvabiq0wk05i3eqj5oy511oi3ftylnvif6pqab5exoey81sjzo3qkj78l9kq9bwkl4i7evjaatresw732xxpa7h0p1gmsaubkx2be3pa1h4o5r0n4jrbuga0lrxwrfcsqhgt3714fm77ffryeyyy\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"l5bkikqjhmt6h127rp44f4sggyhy4v5slr7pnb8tiqlrgay25e257tswltmzwz5ue3hr38y1t8c6bf38aeslp814j9gdjmz8cgbjz1gi\",\n      \"description\" : \"Asperiores quod delectus. Et occaecati laborum voluptate sint doloremque. Dolorem delectus id sint.\",\n      \"location\" : \"8tktxehphvzat4nk9zmtro1pyjc3g8rjj5zlzbw8ufpr\",\n      \"title\" : \"Atque voluptatem modi ut quisquam distinctio tenetur.\"\n    },\n    \"role\" : \"8m9a8fmqn0bjygqq330rmuv41pwb152wy8n26ln8m5bo57n0l97t1rxdh930u5lo93lyjv7pj59ike0ifexgliyf5ym0s5kwygda6o0kjjytqv36037ukn4s7bdjbbcyeeil0pv9j05o88du6osoxmd2p01oxs993i45wqcc9fyoare5gopd2mq\",\n    \"members\" : [ \"i1zt44novz7gf6yy9ekxiy1nq8av4vxrn4fh6q9h40xe1xv663wy1pqv67eqmtjlgkgvjoeouvsi4zvg5zq8lgjxgb14iwjs2ltk6gtj9ssren8wtazdduyehusl7\" ]\n  } ],\n  \"etag\" : \"magni\",\n  \"version\" : 910231173\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5500742d-d6cc-43eb-bdfb-af6d5b9d975f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.882723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0bb7b13f-66d8-44cc-9eb8-711ca54d8033",
    "name" : "Gets the access control policy for a Queue. Returns an empty policy if the resou...",
    "request" : {
      "urlPath" : "/v2beta3/q290ufolizf9evhx:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"j5hzoc3z1vq4vntz1ylzgvzqc4oj5fdm3lhnsj6lszfvnjxqo9uvq8rzcy69znmj7pjpqb7yh8fhldcy3gijlqv6v0d4q28ikvbcap38k8z65z3ur\",\n      \"description\" : \"Corporis in odio. Iure ut suscipit libero. Vel minus quod labore rerum natus error. Eos et dignissimos corporis rerum ut distinctio quia. In sint consequatur maiores ab minus quam repellendus.\",\n      \"location\" : \"c5jdqbb5ntdekr8ifjt6vrlswvaicijgmz9bmictd4jpfz963k9h8w1gjuf2cvtuecn7xlnevf5iskly7bey4np8b4\",\n      \"title\" : \"Dolor aspernatur eum tenetur.\"\n    },\n    \"role\" : \"tgcf25p3rhtsrnxssm4v1ihvwgqsbqmhuxrdzkur6iob4xt8gunopx2xogj7d4w34p\",\n    \"members\" : [ \"48ekmws98lqrcoz2h2x95kjxia5274uzkou7g6e6825dwepd8oogq3lycn2kmkbmxnp2xbxrp2dsyhmmz8rwo7q5h1t1fidt687tuw24s7lsbs9gh8obwxgafdrh26z0l8kd6jx7dnhgxzwgthvbhc4e0f2vshuusbs4hih1jktmcqoel2im8olp96glk2a\", \"1djnjlnzsj48r672s8wdlj2eowztsiyltja1paccu048i1txyj7kn2z3bwu34v2d74mfsglaanjuh64e4c2qrky3qr2kk1aoe7lxm3r9pv9k6dp0as981tzlhprsryp6zthy5alvatua4hbrjzw559bll393tvz3hpzno7n6uoa2bwzn0wjsgsxf6000ix5gyl\", \"qijc756l20iw7iszyjroz4n\", \"vh98p35yatpy5z2e0rdz0gcf81xo03s09x0i6tmz5fnyozcpsgv0pkj5kg0rq4e9s0qzoqx2sxolejz8o61al5\", \"y3uiolwyirnq0tdq04tajjhncjvb22gw3co1z9fefa5hwiqm4ldnk2ilthrgokg5gq3q6\", \"1hcyqsi7bu7pyfkhfi261k87ywf5pjevjf79913fc0tn7u5byd\", \"zsfvv4k5icg56hr0ubqdaer7o3zpz4y9p3pbopy252cfpdsdl5luaka0zdj6b5aiz23jsfy315xm48isj7npftxgpj6ll6lzdv9r24t667fruh\" ]\n  } ],\n  \"etag\" : \"quos\",\n  \"version\" : 537498583\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0bb7b13f-66d8-44cc-9eb8-711ca54d8033",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.88238Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "cb19dd8a-6bde-48df-bfab-3d979205060a",
    "name" : "Creates and buffers a new task without the need to explicitly define a Task mess...",
    "request" : {
      "urlPath" : "/v2beta3/6qbi5e9vpq4c11ge9o2n541kcc81dlwcfz7w4gihh9750hcbzlxgtmcbzr4edi3jqieh6rz3kltj1s1545wvnrupndt2/tasks/q131:buffer",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"task\" : {\n    \"dispatchCount\" : 613047517,\n    \"scheduleTime\" : \"2022-10-15T13:52:54.88107Z\",\n    \"pullMessage\" : {\n      \"payload\" : \"xi59i10jywgw17ivwz6dzckns0wgzefqzn8f66zpl79c79dkddre3qozls63c6alr8cgbm630pajn8ytd41jdacrz6un4hyhqzwzoy3v6wipx8ciagjki3aoyjvk8ipb6dtguacbv7dm0c92flpi6ezjipmbv2sbp2tjkp6d0l8btls29k08kz01\",\n      \"tag\" : \"perferendis\"\n    },\n    \"view\" : \"FULL\",\n    \"dispatchDeadline\" : \"vwt9vj8ycdwalwuz4x428v3swb6ly9\",\n    \"firstAttempt\" : {\n      \"dispatchTime\" : \"2022-05-29T14:34:54.881184Z\",\n      \"scheduleTime\" : \"2022-04-01T15:29:54.881214Z\",\n      \"responseTime\" : \"2022-10-21T15:28:54.881245Z\",\n      \"responseStatus\" : {\n        \"code\" : 85447880,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Quia aut alias. Ipsum reprehenderit aspernatur error. Aut voluptate qui est facilis sunt repellendus.\"\n      }\n    },\n    \"createTime\" : \"2022-05-20T15:30:54.881337Z\",\n    \"name\" : \"Eusebio Kub\",\n    \"lastAttempt\" : {\n      \"dispatchTime\" : \"2023-02-01T15:36:54.881413Z\",\n      \"scheduleTime\" : \"2022-07-13T15:02:54.881448Z\",\n      \"responseTime\" : \"2023-01-24T16:37:54.881479Z\",\n      \"responseStatus\" : {\n        \"code\" : 562910762,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Suscipit id eum esse in cumque. At quia debitis quia odio tempore perferendis praesentium. In aut quidem ex. Aut aut inventore itaque. Ipsum amet quis consectetur.\"\n      }\n    },\n    \"httpRequest\" : {\n      \"headers\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"tg54h7sr3knf6qhyi3sgeldh7fti8ob65k9x52l8w2dk14vixhvw9jz52zaz0d8ywviqzc9xxhm3f7dntob7jyr1vun01epiri8ogeewb1xbgzhjbsysy8hofjlpiigmdsx2asmgtwrpznuc7hks57ltt2o1lwja7e7wipzxgwz92g48cnaffofm1ffp5l6eoeq\",\n        \"audience\" : \"vnx8nk88bxgvpb0v2y1ehikcylit9wxs2x9zmy2xwp65pbj51uesu7j8469csaqe7p4xioonn3syrxn1wbcuvf8m3nmoksyotvfp1z12udh6q8kqnj0kpam3iel2dex2e74bjmeq7\"\n      },\n      \"body\" : \"Quam delectus et in doloribus non. Ut quasi quia et distinctio consequatur. Aut sed id quia praesentium. Quia voluptatem nostrum. Voluptatem assumenda est non beatae consequatur explicabo.\",\n      \"httpMethod\" : \"DELETE\",\n      \"oauthToken\" : {\n        \"serviceAccountEmail\" : \"mtf751jfd5ubks99ayfbi31xk2yb64ism83zjuv78gtmnhujtkc0nenzhgk53b3yafh\",\n        \"scope\" : \"3snk7lk6nx6zd13eg076utbz8hgju2p4jco5ibe01uzsz7w95vtaadjt7ziae6xxj0npljywfs316pgebsemb6ga0pptwfyq8j4bydsswae1gy8sujvz53p666xqw\"\n      },\n      \"url\" : \"https://web.example.mocklab.io/396214\"\n    },\n    \"responseCount\" : 1180017124,\n    \"appEngineHttpRequest\" : {\n      \"appEngineRouting\" : {\n        \"instance\" : \"dybs8oybpubw4cvcggp7t6o2nt4v55iwspikalo9kof7s33huilitdx8qrvquzk2ujk09qx89r0racjlkhfpo1baabixqnnoadry4bhq1euumyurqmo39opszj1wanr\",\n        \"service\" : \"f38nufeyyxq63zbr6w2al69okugh89bq8nuehqxr7cnqu6t57ztfn9iy2jram6rtri7nvefs3j9twbg28uhdye3jd90k14l08efjba5m\",\n        \"host\" : \"vtoyi0k3opdaioe5qq6cwdc13b6ejnqaaau7a16vkgs\",\n        \"version\" : \"mveiyegk9d1ypgc5euj1\"\n      },\n      \"headers\" : { },\n      \"body\" : \"Corrupti molestiae odio. Commodi quia adipisci totam esse fugit velit labore. Nobis sapiente corporis doloremque quia omnis ad. Porro similique doloribus eius iste doloremque veritatis omnis.\",\n      \"httpMethod\" : \"POST\",\n      \"relativeUri\" : \"https://web.example.mocklab.io/116333\"\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb19dd8a-6bde-48df-bfab-3d979205060a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.882086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.tasks.buffer",
          "schema" : {
            "description" : "Response message for BufferTask.",
            "properties" : {
              "task" : {
                "$ref" : "#/components/schemas/Task"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bb884feb-6726-4d4d-83ce-dc0ccbe9c7b6",
    "name" : "Creates a task and adds it to a queue. Tasks cannot be updated after creation; t...",
    "request" : {
      "urlPath" : "/v2beta3/ty21yp1b0h4fki0t9bin4bawqqss5hykji5mw7r6fmi4qic9n5jhadjwweqq0tvefj4mra34dd1kw8bydy5oi24tz2upjm1lr6uotjm0uj4ocd566nw7k0lja61u10ovy28x46q8h3w3oli2unt7o1mex6bphv175zqpq6tri9/tasks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dispatchCount\" : 419503413,\n  \"scheduleTime\" : \"2022-06-14T15:13:54.880084Z\",\n  \"pullMessage\" : {\n    \"payload\" : \"puuyph73t87lgjgg8njbi7wcdyy8nswgsgsu9935oleg\",\n    \"tag\" : \"eeeea\"\n  },\n  \"view\" : \"BASIC\",\n  \"dispatchDeadline\" : \"j11systvp1p8loqeg9zrjxuvj4krnu3somx7jlnin31gcymegs1q1uqik3e2w9iqc5mr3qnxysfkvw9nlzaxklx2gz1inoojfxwqrsn5wsbi801ujhp46qwevv6bpyvspbquah0wjagz\",\n  \"firstAttempt\" : {\n    \"dispatchTime\" : \"2023-02-23T15:54:54.880182Z\",\n    \"scheduleTime\" : \"2023-02-27T16:59:54.88021Z\",\n    \"responseTime\" : \"2022-07-06T15:52:54.880239Z\",\n    \"responseStatus\" : {\n      \"code\" : 937970853,\n      \"details\" : [ { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ut ut architecto assumenda sed ut. Soluta dolores ipsum neque molestiae dolorem et hic. Vel labore dolor corrupti officia eum vitae voluptatem. Dolor unde excepturi quo cupiditate labore.\"\n    }\n  },\n  \"createTime\" : \"2022-04-16T15:05:54.880336Z\",\n  \"name\" : \"Edmund Emard\",\n  \"lastAttempt\" : {\n    \"dispatchTime\" : \"2022-04-01T17:04:54.880409Z\",\n    \"scheduleTime\" : \"2022-06-04T16:28:54.880438Z\",\n    \"responseTime\" : \"2022-10-26T16:11:54.880466Z\",\n    \"responseStatus\" : {\n      \"code\" : 1088258187,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Ab dolorem odit enim sed nihil. Aliquid maiores ut qui ratione. Consectetur ea quidem ipsum et.\"\n    }\n  },\n  \"httpRequest\" : {\n    \"headers\" : { },\n    \"oidcToken\" : {\n      \"serviceAccountEmail\" : \"rm05pojs7hkuibb8nqj6qnnpx2rhglxfl\",\n      \"audience\" : \"ri33ukkdptnsfso6i9qou4nrcbbjlxcwlqtkgtzn8rh31ng7uuzegfywif9ez4c7h1awf4il2vgqdolhi3x1uuugpkiurnj6bquvpzt0auzk1uqer8xkwn4bsz43gawpmlln977gid9y8uc4aeps7ibhlzgm\"\n    },\n    \"body\" : \"Dolorem repellat nostrum aperiam. Repellat repudiandae ipsum laudantium. Asperiores maiores voluptatum. Repellendus ipsa quia possimus sed et illum.\",\n    \"httpMethod\" : \"DELETE\",\n    \"oauthToken\" : {\n      \"serviceAccountEmail\" : \"lodj5f01dj8ynn5p9jpc0bato9uh570u3sja1fdnhpqio4bpw8m84aka\",\n      \"scope\" : \"enbhmgntag11xuvy1jgqjn7lb9suzh719e5fitfaq9ngmfujk20bddpjb6pia7gq1n442eikauz603n\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/900011\"\n  },\n  \"responseCount\" : 1800871813,\n  \"appEngineHttpRequest\" : {\n    \"appEngineRouting\" : {\n      \"instance\" : \"rjjpvwn05be180wvhhv4q64cb2nv0ndp82ug4n1mhdbaclzisipzqoihc58a0egqgi48gq808h00kr46umg5207ciscwhb697jqdi0zpe\",\n      \"service\" : \"4ze6zqww25x678kai80aoxv4gluxxyi2pex780ctqap8em2yyygnwhbm0kuhp9giqvuitf8ey4c4nv43lxd0zpkfedeuk9ohzwgaa5bjkigj5jzihlf9wlnqg5\",\n      \"host\" : \"umu7j3p8d3y28m4ra7armer5sab9uuq1zmrc6nrpyzswh08e0gf\",\n      \"version\" : \"sjm0tzbhbiqmy85uodgumszytg927w17xhua61ko9n31n7ufo9l6s2fyvqf9yzroajkcmrle42ntl12o2b0csk7fkytrdx66e5fjzv934d4a1u0pi6rheufloxjkuw12i46vkl2ndakh58tp4k103q6g38thv4t4ue37de4uvz1d7946rk19aqc4\"\n    },\n    \"headers\" : { },\n    \"body\" : \"Mollitia accusamus omnis consequatur sit in suscipit. Recusandae est excepturi. Molestiae eum ex aut. Aut deserunt natus velit illo ad nemo quia.\",\n    \"httpMethod\" : \"HEAD\",\n    \"relativeUri\" : \"https://web.example.mocklab.io/774312\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb884feb-6726-4d4d-83ce-dc0ccbe9c7b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.88101Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.tasks.create",
          "schema" : {
            "description" : "A unit of scheduled work.",
            "properties" : {
              "appEngineHttpRequest" : {
                "$ref" : "#/components/schemas/AppEngineHttpRequest"
              },
              "createTime" : {
                "description" : "Output only. The time that the task was created. `create_time` will be truncated to the nearest second.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "dispatchCount" : {
                "description" : "Output only. The number of attempts dispatched. This count includes attempts which have been dispatched but haven't received a response.",
                "format" : "int32",
                "type" : "integer"
              },
              "dispatchDeadline" : {
                "description" : "The deadline for requests sent to the worker. If the worker does not respond by this deadline then the request is cancelled and the attempt is marked as a `DEADLINE_EXCEEDED` failure. Cloud Tasks will retry the task according to the RetryConfig. Note that when the request is cancelled, Cloud Tasks will stop listening for the response, but whether the worker stops processing depends on the worker. For example, if the worker is stuck, it may not react to cancelled requests. The default and maximum values depend on the type of request: * For HTTP tasks, the default is 10 minutes. The deadline must be in the interval [15 seconds, 30 minutes]. * For App Engine tasks, 0 indicates that the request has the default deadline. The default deadline depends on the [scaling type](https://cloud.google.com/appengine/docs/standard/go/how-instances-are-managed#instance_scaling) of the service: 10 minutes for standard apps with automatic scaling, 24 hours for standard apps with manual and basic scaling, and 60 minutes for flex apps. If the request deadline is set, it must be in the interval [15 seconds, 24 hours 15 seconds]. Regardless of the task's `dispatch_deadline`, the app handler will not run for longer than than the service's timeout. We recommend setting the `dispatch_deadline` to at most a few seconds more than the app handler's timeout. For more information see [Timeouts](https://cloud.google.com/tasks/docs/creating-appengine-handlers#timeouts). `dispatch_deadline` will be truncated to the nearest millisecond. The deadline is an approximate deadline.",
                "format" : "google-duration",
                "type" : "string"
              },
              "firstAttempt" : {
                "$ref" : "#/components/schemas/Attempt"
              },
              "httpRequest" : {
                "$ref" : "#/components/schemas/HttpRequest"
              },
              "lastAttempt" : {
                "$ref" : "#/components/schemas/Attempt"
              },
              "name" : {
                "description" : "Optionally caller-specified in CreateTask. The task name. The task name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the task's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters. * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.",
                "type" : "string"
              },
              "pullMessage" : {
                "$ref" : "#/components/schemas/PullMessage"
              },
              "responseCount" : {
                "description" : "Output only. The number of attempts which have received a response.",
                "format" : "int32",
                "type" : "integer"
              },
              "scheduleTime" : {
                "description" : "The time when the task is scheduled to be attempted. For App Engine queues, this is when the task will be attempted or retried. `schedule_time` will be truncated to the nearest microsecond.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "view" : {
                "description" : "Output only. The view specifies which subset of the Task has been returned.",
                "enum" : [ "VIEW_UNSPECIFIED", "BASIC", "FULL" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "78909b7d-b1a9-4f0a-94c9-852fbe44e677",
    "name" : "Lists the tasks in a queue. By default, only the BASIC view is retrieved due to ...",
    "request" : {
      "urlPath" : "/v2beta3/0dg5ekw8i4yn3pvxebwl6rx6l1ksn75eh3m55as745j/tasks",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"0b9vido9ztoxfiernk7loh421t32ugv1mslfr8p6mro8kmf67imu12cmrhfwpwkqig4mebq33ox1owukvs2w\",\n  \"tasks\" : [ {\n    \"dispatchCount\" : 693099224,\n    \"scheduleTime\" : \"2022-12-25T13:44:54.87555Z\",\n    \"pullMessage\" : {\n      \"payload\" : \"1vf7s39u4vyaujibrkbi0vyvf7o920f95dipwnhwfzmuzyexyzpc66qx6lp2e4it2njwsrmo7\",\n      \"tag\" : \"est\"\n    },\n    \"view\" : \"FULL\",\n    \"dispatchDeadline\" : \"354tgykqcbtldqheb63h6xdnzvifdzlby6cfjw1w5rtyroypdd0ye583qmg16cw46s9lqspbwaa59g8hv7i2rdtpx556qdxpqmqj25ke4jt67nqgyrrplkf2r0emnvsyym8ianta9983gh7cbfih7v56gruyp51aun21szazvme\",\n    \"firstAttempt\" : {\n      \"dispatchTime\" : \"2022-08-30T14:56:54.875662Z\",\n      \"scheduleTime\" : \"2022-12-01T14:25:54.875694Z\",\n      \"responseTime\" : \"2022-10-05T14:21:54.875726Z\",\n      \"responseStatus\" : {\n        \"code\" : 1970696404,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Libero molestiae molestiae voluptatibus minima aliquam omnis aut. Sit ut et totam illo et. Facere ad adipisci.\"\n      }\n    },\n    \"createTime\" : \"2022-04-07T14:15:54.875818Z\",\n    \"name\" : \"Sylvester Langworth\",\n    \"lastAttempt\" : {\n      \"dispatchTime\" : \"2023-01-04T17:16:54.875894Z\",\n      \"scheduleTime\" : \"2022-08-21T17:19:54.875923Z\",\n      \"responseTime\" : \"2022-07-02T13:51:54.875952Z\",\n      \"responseStatus\" : {\n        \"code\" : 71945926,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Aliquid iure ullam aut culpa laborum et. Velit nulla voluptatem ut ullam qui. Temporibus ut numquam eveniet sequi.\"\n      }\n    },\n    \"httpRequest\" : {\n      \"headers\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"t1d0jwslahwrzopr1k93r1vfow1h8r3ukzz1bsszg1n97ai7n7upeelslwz2coh3i9zhqbwnx2tugvr0t12bynyb3b20a70fivka0wpn10euco2o0wuhv1wgjplrynlih9nqt8hnp3td0ttggt5jlzvlcmdvcozhuacodmrgcb7s54czc\",\n        \"audience\" : \"m3wt463if037kpa8dwfkprwqymy0klfizdfpkj3ktsb5zhpp6qvicumyieygkkjugcpmf1ozchehufv2ozgjscwaq631u2owyv65h4795w688q3u6tlokl4ag9p7i4cnnyla5o3hfsxazop49mb56xgib7i1129veqbnhwbaelbxy36\"\n      },\n      \"body\" : \"Quaerat dolores et. Et itaque voluptas quod veritatis suscipit. Ea tempora nesciunt aut corporis fugiat ab temporibus. Et assumenda cumque ab quo deleniti.\",\n      \"httpMethod\" : \"GET\",\n      \"oauthToken\" : {\n        \"serviceAccountEmail\" : \"u0mlsinsnipyx2ms83sofvtlm8vi5ew09cywdom31yaaf2t7cxn1ifzogfqs0a0g7opowki8\",\n        \"scope\" : \"lu1nb2qn5l1vf3w1uy494t9dwh59d800uf070qtl40adp1u891e7k18pqcs5fsjkhlh61opzux51zechlyvkuqbndbs\"\n      },\n      \"url\" : \"https://web.example.mocklab.io/190055\"\n    },\n    \"responseCount\" : 1789223420,\n    \"appEngineHttpRequest\" : {\n      \"appEngineRouting\" : {\n        \"instance\" : \"t3atc6n4hkg021j2jy17c1g1usn9beot2ywy4zgs21obloyrwlkswimf4xes5fuk6\",\n        \"service\" : \"rqdj2zqp2kl741reoe3fq1zzn093mgm6y5jrgndejpiuwkmtxrc1qafci1i3cbw3u8gdblrs1b84aj6209zz5vpvo0tcuff89q543hh58did1hrzxw612jw4tqmaofe0pkc1j3vf0n4putp2c1rumvy8meyglp3m0tr3wftl1u\",\n        \"host\" : \"0r66xfwaw0ga8lceul1kwu0910ffon6e13n5pamw14z8cuaz2rj7ut32qd0xy36pq0068hs7uin6i0xaop93pqe\",\n        \"version\" : \"14zgz4stx6wfv69lyt0zy248qyf5t0o5iu8flbi91dfnn7o8d9dt55iydvp0j0vglzqqejor1pa8kbktazwxd8i4uv2g3tq0j7npmmoy4xuuc2qt7rpr3vprd8e71y4esuhjql3swyv71rhst\"\n      },\n      \"headers\" : { },\n      \"body\" : \"Impedit et voluptatem saepe dolore. Sapiente amet ad dolorem magnam voluptate autem. Et dolorem et odio quia et maxime.\",\n      \"httpMethod\" : \"PUT\",\n      \"relativeUri\" : \"https://web.example.mocklab.io/606397\"\n    }\n  }, {\n    \"dispatchCount\" : 2025165944,\n    \"scheduleTime\" : \"2022-12-16T16:14:54.876457Z\",\n    \"pullMessage\" : {\n      \"payload\" : \"ik5r2wx84x7l9vh22elgxto7znpcvm4gbmhwpfo21jsa61h6qzjs0wldp8evvwbkfq23lqz5ehydunggkkrrz7m7u7tbk3vyrhigg043ouov19b6jihuu439ar0g61lx2fyectnnv3v3fnxsssxxd6dgx5ht\",\n      \"tag\" : \"quae\"\n    },\n    \"view\" : \"BASIC\",\n    \"dispatchDeadline\" : \"qy9ida04rue3ocz4bqd7l4hfcc881jvr13lwpz51ls37xy\",\n    \"firstAttempt\" : {\n      \"dispatchTime\" : \"2023-01-12T16:50:54.876556Z\",\n      \"scheduleTime\" : \"2022-10-19T14:51:54.876586Z\",\n      \"responseTime\" : \"2023-01-09T15:17:54.876616Z\",\n      \"responseStatus\" : {\n        \"code\" : 1767813760,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Rem laborum dicta voluptatem neque non maiores. Provident earum ad ab. Quis facilis ex quidem esse quo quaerat adipisci. Alias dolorem et nihil incidunt dicta aliquid. Odio sed debitis unde.\"\n      }\n    },\n    \"createTime\" : \"2022-11-25T17:14:54.876715Z\",\n    \"name\" : \"Jimmie Kertzmann\",\n    \"lastAttempt\" : {\n      \"dispatchTime\" : \"2022-05-15T14:14:54.876791Z\",\n      \"scheduleTime\" : \"2022-04-25T13:29:54.876823Z\",\n      \"responseTime\" : \"2022-12-25T17:27:54.876854Z\",\n      \"responseStatus\" : {\n        \"code\" : 1046645278,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Ut dolorum recusandae unde voluptas maiores quia. Illo vitae exercitationem aut. Dolorem consequuntur libero aut expedita.\"\n      }\n    },\n    \"httpRequest\" : {\n      \"headers\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"4mo1arslvlgf2mherf3b9tweqtqdmhqtc5w8ncho4ubnuj38e3rehmr5tkn53tg3wj9rdodwqk4w0s6o44b0oc3rntdlo\",\n        \"audience\" : \"lt9j7wskz1yw3zfbtiuj3mt4fwj60z6vwt2qutju8xvliwcw8tt07873g7w9ia86i45l8x1k54uf46a7i2crzcv1qpu3546mz31hje0761wi4llwks3o66i7bxpp91buchn1gurog593g51c0r5kmyy7br92\"\n      },\n      \"body\" : \"Ut sed enim laborum quaerat. Omnis aliquam nihil. Repudiandae autem dolor ipsum. Ipsam omnis quibusdam rerum consequuntur aut.\",\n      \"httpMethod\" : \"POST\",\n      \"oauthToken\" : {\n        \"serviceAccountEmail\" : \"ihhgworx37im7ws0zki2rer5dhx2ih46j555et4agc0b4st4678a3l5bs4ihi5je0kqasgnnpo2tzma0h32h88bns8p08e7vnhq8qvauywrl2yutuf9nuxrvyh92lm5jm1omnk7lr4znd871fzz3bmuhncu\",\n        \"scope\" : \"czibqa4d1v3om3n2zj10dv08cievpjcl18arcxlr95c36ut0knstz7ehwk42teo8fnpmfwj87xu2zmw1zaxw5uzjos83h4rplrxykn83ahxzi8kqi1wh9zv18knwpyavcegtufmpy31pszurmockxngrfx0cdbkvkjnl8fgm5wxsnvcrmvj\"\n      },\n      \"url\" : \"https://web.example.mocklab.io/219680\"\n    },\n    \"responseCount\" : 2125919992,\n    \"appEngineHttpRequest\" : {\n      \"appEngineRouting\" : {\n        \"instance\" : \"xnkta5gkq0rimrncl21bih6h13752hv9u5qjyjjsh0gdloig6mx72054ewy2qmv3ovtv3skwrty02en9ys\",\n        \"service\" : \"v9cigzy6pddti5yrwhuabbqopuihx6ml2451b6w2wqws7mg\",\n        \"host\" : \"hnm15wjcupx5zkth0buaxd8s9u4d7297rmql76zycqql5k7r08nw52isf14mtxsny4dp1zp0c0qqgc0rz15vq91zyqzbl3cv11vpq81w25nonwbwcjk54dvk4xbzgvcuqp86agebayh22wdahu9tke07zeayld8hbk4ua7xkkfiauxpe8tm2pse19o3kcxajthw25\",\n        \"version\" : \"lo62pl7pezvhzlbcp355o2t3fd7bk1j1qe1l05t3bigjbrdtak2yv7a0jkgj6xf0abak8gzasifnpq0b1y8l5hara1z82nj3xn1ouzxvl921zmxjqm1f06ru7\"\n      },\n      \"headers\" : { },\n      \"body\" : \"Placeat sed et et qui autem. Et voluptatem voluptatum voluptatem dolore. Minus consequatur debitis esse est est maxime est.\",\n      \"httpMethod\" : \"POST\",\n      \"relativeUri\" : \"https://web.example.mocklab.io/011383\"\n    }\n  }, {\n    \"dispatchCount\" : 485017633,\n    \"scheduleTime\" : \"2022-11-29T15:09:54.87733Z\",\n    \"pullMessage\" : {\n      \"payload\" : \"9k19ckhsfjskydrbkt4i7skayuns4e5nf5jlfogter0s9iop8rw7b3l2xja1zbazyxxlhvpsaenw4cv0c253g3uwctbqgipev0qxb5jb1dv20at5emjsrlrl326l3zrhk\",\n      \"tag\" : \"corrupti\"\n    },\n    \"view\" : \"BASIC\",\n    \"dispatchDeadline\" : \"7ousstsr0sux6mgg8rp1saje24cfb3crhiqlzsqz8h26c4k4i7lvudob6joop3xakalup1g62bqgqglbn9ck0p6x\",\n    \"firstAttempt\" : {\n      \"dispatchTime\" : \"2022-10-06T16:01:54.877432Z\",\n      \"scheduleTime\" : \"2022-05-24T16:11:54.877463Z\",\n      \"responseTime\" : \"2022-05-22T15:11:54.877493Z\",\n      \"responseStatus\" : {\n        \"code\" : 703822716,\n        \"details\" : [ { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Veniam nam ut et qui quae qui labore. Temporibus molestias enim ducimus quia suscipit. Quaerat vitae necessitatibus. Quis natus nihil necessitatibus consequatur.\"\n      }\n    },\n    \"createTime\" : \"2022-03-27T16:59:54.877589Z\",\n    \"name\" : \"Dannie Howell\",\n    \"lastAttempt\" : {\n      \"dispatchTime\" : \"2022-06-09T15:52:54.877671Z\",\n      \"scheduleTime\" : \"2022-04-27T14:47:54.877701Z\",\n      \"responseTime\" : \"2022-09-08T14:36:54.877731Z\",\n      \"responseStatus\" : {\n        \"code\" : 929033750,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Voluptas voluptas quia doloremque quibusdam ipsum. Sed id iusto maxime. Perspiciatis ducimus molestiae sed nam.\"\n      }\n    },\n    \"httpRequest\" : {\n      \"headers\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"nz9wi\",\n        \"audience\" : \"r176z3af68uwrpkt07kogtjub2ln9g8ucqsfcza0l6sfyu3ig016dceicwygf\"\n      },\n      \"body\" : \"Qui rerum ea. Harum aspernatur quos assumenda quod. Sapiente ut sed iure est et eum. Ipsa voluptatem ea.\",\n      \"httpMethod\" : \"HTTP_METHOD_UNSPECIFIED\",\n      \"oauthToken\" : {\n        \"serviceAccountEmail\" : \"f4tnskr5xt92e4vmq12y7819f3vc34qkw53cub2lxnnn0a3081dc1jool3i0ph3xisk8tqbpmhbr8nid5xjfmwc3a5l3wf17bedzd7en0bygius5xala6lvxecgai4cl9npse8raw5bkdfyfmkzr9gna\",\n        \"scope\" : \"ly14flfmtb68tw5cuyuecqqeflemlpkcgrzqxq8vi129zj7lu8azs5k0k1abzew7qrer9s0n8kfzconi74s59fa08k5\"\n      },\n      \"url\" : \"https://web.example.mocklab.io/011451\"\n    },\n    \"responseCount\" : 160394298,\n    \"appEngineHttpRequest\" : {\n      \"appEngineRouting\" : {\n        \"instance\" : \"jytg4jk5duv2dh42wxtx3n6t\",\n        \"service\" : \"00h1wq8py2jr0e0w20psg7u3\",\n        \"host\" : \"q6e74lmew9r8j2fyxqyl21fogtiyrlpl88c1vdmoohhq88uyen3fkkl1khm8yu0sok0zavfoh8fxam5g5wbgpv5id9iykshbg3p30bvadr6rtqi\",\n        \"version\" : \"wprxhd1pwh5j0\"\n      },\n      \"headers\" : { },\n      \"body\" : \"In quisquam expedita. Sequi commodi et voluptatem cum. Qui quia iusto.\",\n      \"httpMethod\" : \"PATCH\",\n      \"relativeUri\" : \"https://web.example.mocklab.io/632037\"\n    }\n  }, {\n    \"dispatchCount\" : 580157784,\n    \"scheduleTime\" : \"2022-09-20T16:47:54.878182Z\",\n    \"pullMessage\" : {\n      \"payload\" : \"l9bo9eveci9vi\",\n      \"tag\" : \"quibusdam\"\n    },\n    \"view\" : \"BASIC\",\n    \"dispatchDeadline\" : \"8uirk5a\",\n    \"firstAttempt\" : {\n      \"dispatchTime\" : \"2022-11-19T14:14:54.878284Z\",\n      \"scheduleTime\" : \"2022-05-20T15:21:54.878315Z\",\n      \"responseTime\" : \"2022-03-11T16:23:54.878346Z\",\n      \"responseStatus\" : {\n        \"code\" : 1266069743,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Harum autem et dolore excepturi quam. Ut enim esse sunt veniam tenetur. Ducimus et illo aut saepe aut. Ea voluptas dolorem eligendi aut. Optio vitae beatae qui omnis eos quis distinctio.\"\n      }\n    },\n    \"createTime\" : \"2022-08-21T15:25:54.878444Z\",\n    \"name\" : \"Reanna Runte\",\n    \"lastAttempt\" : {\n      \"dispatchTime\" : \"2022-05-28T16:15:54.878521Z\",\n      \"scheduleTime\" : \"2022-07-05T14:03:54.878551Z\",\n      \"responseTime\" : \"2022-12-21T14:55:54.878582Z\",\n      \"responseStatus\" : {\n        \"code\" : 1863233520,\n        \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n        \"message\" : \"Cupiditate quasi dicta qui voluptatem. Repellat totam in facere ut reiciendis corporis totam. Facilis a sit architecto unde. Harum aliquid perferendis ad soluta quod omnis. Blanditiis molestiae aut su\"\n      }\n    },\n    \"httpRequest\" : {\n      \"headers\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"xg4sxm898d575j3b2278jtvjpshdmiosxx0rud89mev9m80tph897qbsowu46mbbsfmyfl9znlc7wb390jlvuelqb3sqglf1fd6kliqo7x4uggk6ivpjjhi3wtn7hwqqtgwj2c46t3iqcbiowum9yra7h32jaw4ugc4h072f26cfek1stzu87ko4\",\n        \"audience\" : \"u4lcd797svilfqw06gvjn3qh079m3nphbck8fzekj3m0jdjkdwgbaxmm\"\n      },\n      \"body\" : \"Consequatur enim et aut id rerum. Fuga quasi rerum commodi. Inventore omnis a exercitationem temporibus. Quia natus eveniet qui quaerat dolorem. Nobis sint reiciendis et beatae aut.\",\n      \"httpMethod\" : \"GET\",\n      \"oauthToken\" : {\n        \"serviceAccountEmail\" : \"93a4c0puvntwrvbzeuljeg957u6hp6mh5zgppq6jrgb9b48b6x0fklfn5ezwcqyy42t59re7j86ku4sirxxf6zddlvw9kccwfzfe7rodgnhq9dkk9152pewsc98me8vn2epwjus9uay7f53xtd2hvevb6e\",\n        \"scope\" : \"0yi9ixaw1efmvxi5lnc5ux5plhsg7973pbnoqz9fp30tzormcfyx\"\n      },\n      \"url\" : \"https://web.example.mocklab.io/811852\"\n    },\n    \"responseCount\" : 978603759,\n    \"appEngineHttpRequest\" : {\n      \"appEngineRouting\" : {\n        \"instance\" : \"byilq3khg7c2cc6nq56uvenrvowibra2m6cedpqack50x3ydr9qw8sl4o9yia5ayy3yk1b018lz3w8biby73s45nh2k1yet97ro6ambffwp3pitr6qeswjr6i5w\",\n        \"service\" : \"du2btvw97v1m08x7ed6pz8xrjv9pr6k0g8rlc7xtgx33nar5fx31yrymwnycwjxq18t0f8adbxkxsjfk4cwe3kp4yv8ulv4fjz6t328ikjsvx1ox0il6iwy\",\n        \"host\" : \"qizsuim8mgdrso2nhwqtisw90yw13h4v5t5ersgwzbw48nd6rboxj8t13czttkqpbtffuih12hfnszsctqqs4u0gcwzukjryegzqr9mz06iyribj2hm4avoqlsygcu687pzk6tf6xb1t6avgvdfd4eqre5iwm44\",\n        \"version\" : \"3spkovhqtgwcdfgfgwm2uxhu7t1ir4l9amix\"\n      },\n      \"headers\" : { },\n      \"body\" : \"Omnis explicabo explicabo reprehenderit cumque voluptatem soluta debitis. Harum quasi distinctio accusamus est. Aut consequatur neque nesciunt accusamus laudantium consequatur.\",\n      \"httpMethod\" : \"DELETE\",\n      \"relativeUri\" : \"https://web.example.mocklab.io/608594\"\n    }\n  }, {\n    \"dispatchCount\" : 674313842,\n    \"scheduleTime\" : \"2022-10-24T14:12:54.879086Z\",\n    \"pullMessage\" : {\n      \"payload\" : \"6e7mu54zm2glgci2abnceoq0twjzixu38at14utsoduwo37soe4wwnezcso7bh92ql7jn0k65w49rsta4x2i\",\n      \"tag\" : \"laboriosam\"\n    },\n    \"view\" : \"FULL\",\n    \"dispatchDeadline\" : \"pmfr0595d7zmab2jvaoqcnrixahpjcmzw5q5u1z0xb856gge9l8rj9niddgc5pr6a0hd356yt215u53xfuamr79ryct7cca72gfhrv\",\n    \"firstAttempt\" : {\n      \"dispatchTime\" : \"2022-10-08T14:41:54.879186Z\",\n      \"scheduleTime\" : \"2022-09-23T16:29:54.879215Z\",\n      \"responseTime\" : \"2022-05-28T16:05:54.879245Z\",\n      \"responseStatus\" : {\n        \"code\" : 1300263028,\n        \"details\" : [ { }, { }, { }, { }, { } ],\n        \"message\" : \"Dolorem est voluptas ducimus ut. Ratione repellendus et. Necessitatibus molestiae voluptas. Sequi distinctio quaerat. Perspiciatis inventore blanditiis tempora impedit consequuntur.\"\n      }\n    },\n    \"createTime\" : \"2022-06-23T14:52:54.879336Z\",\n    \"name\" : \"Nevada VonRueden\",\n    \"lastAttempt\" : {\n      \"dispatchTime\" : \"2022-11-07T15:23:54.87941Z\",\n      \"scheduleTime\" : \"2022-08-10T13:49:54.879439Z\",\n      \"responseTime\" : \"2022-09-15T16:39:54.879469Z\",\n      \"responseStatus\" : {\n        \"code\" : 1785694872,\n        \"details\" : [ { }, { }, { } ],\n        \"message\" : \"Quo et non ad voluptates neque qui eum. Enim aut et. Exercitationem esse odio praesentium tenetur quidem.\"\n      }\n    },\n    \"httpRequest\" : {\n      \"headers\" : { },\n      \"oidcToken\" : {\n        \"serviceAccountEmail\" : \"l7hced5kiixqx2nqasf7ul0m55fw2v4r850ltosd69ssimqbm0mvy10llb6dl348q5tlr9650j39iosx8wm4mpar9iqw3tcrhrwkfge464hji23vsc1qblo2n1mtaczlvy5exm67m7mkprjxt41dgpkyhewoy4itpztf5q3umh2ejfhwholllifgljcd\",\n        \"audience\" : \"m8vf6vywh6s8gnglxzj3hmdjguoiyohiu2tmxf\"\n      },\n      \"body\" : \"Alias veniam qui ratione dignissimos et. Ut consequatur dignissimos alias non deleniti quia. Ad adipisci odio. Iusto autem reprehenderit.\",\n      \"httpMethod\" : \"PUT\",\n      \"oauthToken\" : {\n        \"serviceAccountEmail\" : \"ae1j3lc46udlral9d2aayr3l15e9zokvcc3y80z49liy2kaayehm1plo81ylhdff5j5oduk8c79v389gomnyt5taly96l8zddoc7eghsoc6axxq0zx7\",\n        \"scope\" : \"85pvw3gez8vaoe2ed4apndxof2ryzat3fytc0v0fm88zmxv0bs593smqy0noacfc2zjhwjs6vm5kydzk749astl78bah03wdo9pc4iyzjp2qzh0fdi1lo4go55icphurmopjp1slxbqjp6ulwja1m0d4crwd12btvxg9hv9pz6i1cnjqtn\"\n      },\n      \"url\" : \"https://web.example.mocklab.io/174476\"\n    },\n    \"responseCount\" : 1809436407,\n    \"appEngineHttpRequest\" : {\n      \"appEngineRouting\" : {\n        \"instance\" : \"6evnrrzul\",\n        \"service\" : \"gb7antdb3p\",\n        \"host\" : \"e7amjyuenh2eu06uy51gkgqzqyf0k13lw5ykibplt3jcy5wt2sfyzyrv89o92opxoqge9wx224z1maf07o6gcqfn4i80vtjo63lhlc9a62eed846c6mqoka8tpkwr4h3b2gfygn1pklahybkdg91njsivnqdsmi1to1vgreb323hf1o6yomj4oskaumv8z\",\n        \"version\" : \"6t7izzmzdvidtjqze5ahkhenhnzt99u5r86dzcmfvhon5sl8avc7p6zpjb88rl260xp72un82z6h57ibwx8uv6l7759ir5l5rq0kk21wwiub1uo\"\n      },\n      \"headers\" : { },\n      \"body\" : \"Nobis dolorum delectus assumenda nihil. Praesentium voluptas qui accusantium. Similique quia repellat eos.\",\n      \"httpMethod\" : \"HEAD\",\n      \"relativeUri\" : \"https://web.example.mocklab.io/980674\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78909b7d-b1a9-4f0a-94c9-852fbe44e677",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.880037Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.tasks.list",
          "schema" : {
            "description" : "Response message for listing tasks using ListTasks.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. To return the next page of results, call ListTasks with this value as the page_token. If the next_page_token is empty, there are no more results.",
                "type" : "string"
              },
              "tasks" : {
                "description" : "The list of tasks.",
                "items" : {
                  "$ref" : "#/components/schemas/Task"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c32f6576-8540-4a02-bd66-a932188b5767",
    "name" : "Creates a queue. Queues created with this method allow tasks to live for a maxim...",
    "request" : {
      "urlPath" : "/v2beta3/5409svrop0b9lnbrvk3l1yeae6z1p3qn7wzb7xd27m4yrs9d2anaspfcw0by80g4vwqdn/queues",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"purgeTime\" : \"2022-06-13T14:26:54.874783Z\",\n  \"rateLimits\" : {\n    \"maxConcurrentDispatches\" : 1722296700,\n    \"maxBurstSize\" : 1591826613,\n    \"maxDispatchesPerSecond\" : 1.4378280379794865E308\n  },\n  \"httpTarget\" : {\n    \"headerOverrides\" : [ {\n      \"header\" : {\n        \"value\" : \"fp6p7q\",\n        \"key\" : \"ybghs4d6wnoa52a2kvuuzkykyhb2geek0fp3ursd7i22e4gaef8ixlau4b88yicyf4liv3zf9tg4vgvhrmvai99s9cffj6by7tsfu4oa3m1\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"mj7us04oq5f2arpxnswwie0t12tu0joajulu5vd8s7ac9udb3yls81if071a3jkqa8clq1xw596ol511r4azdaditquy69tt07zzg1gcqifkw4l9kalj9bl8bemjt59ehpb\",\n        \"key\" : \"2qhtus4k86q7irmy8whlbgemlg1ya2welzu8xtodnumrbvrwzhxlfx0hms77pe24o5eanym1b3i3tonmi0jrj8j3hjufhmg812q85g15e53bvvpij5tyuapya1p5xts4mghlazng\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"338sregdlom03yoce5wd9wya7wn1dywky0qon26m7c1dcip8dp8lpwbhg6264f36y7klks3z831dfoah\",\n        \"key\" : \"54jqa3dm76597ea8o1ubitddij6d9okhpp3iw5tu1ngu1e8s7ale7rbqksnd0h0r3trwxzv1x9gnvcnt4fjl9afsacov6kmn51kphppbmoiztvyqsr0d08oso653ufr5klil1j3xtj3jfu17rbc6pvzs5ba1w9qmb0ckflsqyfx\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"k5kcye1p03l7t92y5vcn6m4gpei6v8o4aornom0y0scssr6w7zyvfy0bvlqtwajiu6tqm72cei02xmmplxbrr011qbq0t3l4zo8r54vnjlczbv2lbw1my5rzng1z5o4azmj8spfhv4ndrglzxapb7kq5ojzuh0914oabs29vapeirck47pc8m5tuepxh8zjpo5\",\n        \"key\" : \"dn1bl0fjxl8ugbc4t550t4mfctzsr3sllx6puobh2ql17ufgr0rpkuk65g\"\n      }\n    } ],\n    \"uriOverride\" : {\n      \"uriOverrideEnforceMode\" : \"ALWAYS\",\n      \"pathOverride\" : {\n        \"path\" : \"yug4we66h2xf9biert2vetzgryzjhglhge28oyqcejltxadkzfcbf70cbfbmes69kum07cx029zelhx2zt4s4i6l7mh056a2gdtfb4krbrmdff1w5izj05mnj419s1nhqn7fw658fyzds0kg7s498w6hkxqpz9i9pyzn4ji3d1\"\n      },\n      \"scheme\" : \"HTTPS\",\n      \"port\" : \"i02azyhgm5xfv4xvwykelz1hsa378igl5sqw83y11ahyrnsrdwfwg8y681wyb9m94wl2lgs76k4j3zppwtet3n6g2svh4o033pqjl2fw00wuyh5bdvbt0ptlgdkazuminuih\",\n      \"host\" : \"1jl\",\n      \"queryOverride\" : {\n        \"queryParams\" : \"dsaukrm9k1mf4pnd9iiexkc1f3h77izk1d60ivuvibpurrc2rw42vhe42v95l68yn0os0b3kqpjt9a2yhjz3vprs1g65aktuu31m6rloxv4isp6awq3slar1y09tshtw0p4j6aojsl1bw586y\"\n      }\n    },\n    \"httpMethod\" : \"HTTP_METHOD_UNSPECIFIED\"\n  },\n  \"retryConfig\" : {\n    \"maxAttempts\" : 2124864233,\n    \"maxBackoff\" : \"gukovc060289chefe8amy266ykyz1g6dbbj5st9lircjip3qbmamc5s4fmnf\",\n    \"maxRetryDuration\" : \"xbwrtf6wshu9g1n6dh8imf2jbxi3c6e9dv9wjnqcbsyn7o64deh407w5efzg90ci2l28vsg00ok4pynqsbw13udc2s3liuyid2skxbmz4rcz6yvwn9qyud65bv8u0hs0ti351n6ubmuvftkfe8bpsvib8ro8zoy5jqiob\",\n    \"minBackoff\" : \"y5ockezfblnc8z9di75qbw4f2bs93gey4bduv1ctgtkaa0nmu15bnr9cm8ieq5hv9ge31uex55qig9bl4v31teh8tkak\",\n    \"maxDoublings\" : 1315971044\n  },\n  \"stats\" : {\n    \"oldestEstimatedArrivalTime\" : \"2022-03-13T14:36:54.875129Z\",\n    \"effectiveExecutionRate\" : 7.147917403881866E307,\n    \"tasksCount\" : \"450xyezx4hmpyx50i5si7dmhx4lvwvb7rv2bo4kb8phledxo9dxpy6qsrmroapptbt82qb0lgbt78gl62cpdid0yfcnjzdhoexjy58f8unbu7xx61qr07duvfjois1mmyeqh4758ddre1ll\",\n    \"concurrentDispatchesCount\" : \"a2wzp9baghqjjijjp0rrndmr8lpq8w0e79b95horhsw8frsv3maokhxzlq163319gno2svmb310dvxiacgqb92r05hb8g45uhazmpzdn25wdule2qqd27fnvwkasy9tixvw2t98\",\n    \"executedLastMinuteCount\" : \"i47lwkicmy73de1cne3e4bb9ls63tqc2ovusnw8iu\"\n  },\n  \"tombstoneTtl\" : \"ssxeabzkt4s7seidnexasa04qb64lmal8porxpkqvjy52jxe2ksiizbu582hwf5nwdk4tmeqgbubuc1tfkn5ve0k307yrrz5v96h4vgyvzsnxnefmtx6w20tviwzv98nio6fkri8pc9t720qxbnmhc50tuab8ull86nevwoq\",\n  \"appEngineHttpQueue\" : {\n    \"appEngineRoutingOverride\" : {\n      \"instance\" : \"0kc6o2ejpb3ml0whjj67h2aotv9r6h663bij3ldi17ijopdus0fefpsk\",\n      \"service\" : \"v8btaioiqktuu6769g8mh61wufn8sunrr0in7x2pxmf2esmkyuc8n5mek0hx5od9maovk9dug761\",\n      \"host\" : \"ji62s56j8gbyyedxt81yjsm14b0wi484xs9yimgpsrcon029pq7zorotfnyrhd0maquunxc7y946\",\n      \"version\" : \"kxw8ea86sfuufewdppa6r8hd115ywaqzq9n0u38xefm3bm558wdr8nicep34ygvwydne\"\n    }\n  },\n  \"name\" : \"Dr. Monnie Langosh\",\n  \"taskTtl\" : \"bv6e47lwb69f9mms2j5nqghy7lscnlxlkr2y4i29ceo79l8ahvkwcicdvrffr254f85aeskvkvdaohsuk6mqr9yzvo6vuxav2aukq176t6zhqdipd3qd4x3sid8lzqqq\",\n  \"stackdriverLoggingConfig\" : {\n    \"samplingRatio\" : 9.00130690095195E307\n  },\n  \"state\" : \"RUNNING\",\n  \"type\" : \"PULL\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c32f6576-8540-4a02-bd66-a932188b5767",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.875481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.create",
          "schema" : {
            "description" : "A queue is a container of related tasks. Queues are configured to manage how those tasks are dispatched. Configurable properties include rate limits, retry options, queue types, and others.",
            "properties" : {
              "appEngineHttpQueue" : {
                "$ref" : "#/components/schemas/AppEngineHttpQueue"
              },
              "httpTarget" : {
                "$ref" : "#/components/schemas/HttpTarget"
              },
              "name" : {
                "description" : "Caller-specified and required in CreateQueue, after which it becomes output only. The queue name. The queue name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the queue's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters.",
                "type" : "string"
              },
              "purgeTime" : {
                "description" : "Output only. The last time this queue was purged. All tasks that were created before this time were purged. A queue can be purged using PurgeQueue, the [App Engine Task Queue SDK, or the Cloud Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue). Purge time will be truncated to the nearest microsecond. Purge time will be unset if the queue has never been purged.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "rateLimits" : {
                "$ref" : "#/components/schemas/RateLimits"
              },
              "retryConfig" : {
                "$ref" : "#/components/schemas/RetryConfig"
              },
              "stackdriverLoggingConfig" : {
                "$ref" : "#/components/schemas/StackdriverLoggingConfig"
              },
              "state" : {
                "description" : "Output only. The state of the queue. `state` can only be changed by called PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.",
                "enum" : [ "STATE_UNSPECIFIED", "RUNNING", "PAUSED", "DISABLED" ],
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/QueueStats"
              },
              "taskTtl" : {
                "description" : "The maximum amount of time that a task will be retained in this queue. Queues created by Cloud Tasks have a default `task_ttl` of 31 days. After a task has lived for `task_ttl`, the task will be deleted regardless of whether it was dispatched or not. The `task_ttl` for queues created via queue.yaml/xml is equal to the maximum duration because there is a [storage quota](https://cloud.google.com/appengine/quotas#Task_Queue) for these queues. To view the maximum valid duration, see the documentation for Duration.",
                "format" : "google-duration",
                "type" : "string"
              },
              "tombstoneTtl" : {
                "description" : "The task tombstone time to live (TTL). After a task is deleted or executed, the task's tombstone is retained for the length of time specified by `tombstone_ttl`. The tombstone is used by task de-duplication; another task with the same name can't be created until the tombstone has expired. For more information about task de-duplication, see the documentation for CreateTaskRequest. Queues created by Cloud Tasks have a default `tombstone_ttl` of 1 hour.",
                "format" : "google-duration",
                "type" : "string"
              },
              "type" : {
                "description" : "Immutable. The type of a queue (push or pull). `Queue.type` is an immutable property of the queue that is set at the queue creation time. When left unspecified, the default value of `PUSH` is selected.",
                "enum" : [ "TYPE_UNSPECIFIED", "PULL", "PUSH" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0320913f-f3c1-464b-b1fa-162f7356ea9a",
    "name" : "Lists queues. Queues are returned in lexicographical order.",
    "request" : {
      "urlPath" : "/v2beta3/i1z1y50w06rys205m8y0jd8bxzq36cycig53z589e9l2xnj97nb0527ir51aibqodv92254r1wevkducy7776adk72xve51zklb5vhwas4t2zf6py0konb5p/queues",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"0kxsfo96wkomgcsomc5ua4h1g4iu60xwxv0obf7mnu68khjm7lnodek36zv24p7p02n5qqfgw9ehizlr1zkpevjdgybbitjr44l8uu6r5wnjtqrmmn255evz072wodktbzkbyxkks\",\n  \"queues\" : [ {\n    \"purgeTime\" : \"2022-05-27T15:32:54.871522Z\",\n    \"rateLimits\" : {\n      \"maxConcurrentDispatches\" : 598861953,\n      \"maxBurstSize\" : 358435703,\n      \"maxDispatchesPerSecond\" : 4.0719373727455504E307\n    },\n    \"httpTarget\" : {\n      \"headerOverrides\" : [ {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      } ],\n      \"uriOverride\" : {\n        \"uriOverrideEnforceMode\" : \"ALWAYS\",\n        \"pathOverride\" : {\n          \"path\" : \"v9ct9fgmexuzvl4mjz71yfr53l3cslzn3wr813oqbmalax8mie\"\n        },\n        \"scheme\" : \"HTTPS\",\n        \"port\" : \"lq3m9umedueewnq3curhv3\",\n        \"host\" : \"crq0cfyb399d71d9rrd10\",\n        \"queryOverride\" : {\n          \"queryParams\" : \"yq5co814rkmnz5zrkpncq2sln95om8vj4tra2aqhz0m10swja9j1g7h2yq5idiyzh7u7lujqezvcz7acilucgk7pbopfxa3m8w6k9i3zhyugwxot1i81wzih8ocnog7rha6tt4ugfjusvcm8tnk3ep64c1nh8os0drfx78w9topd8uswat32cpj9\"\n        }\n      },\n      \"httpMethod\" : \"PATCH\"\n    },\n    \"retryConfig\" : {\n      \"maxAttempts\" : 359708871,\n      \"maxBackoff\" : \"cxwcrjmocnqymvkj6znm5xrloy54y0p3m3lml3i1a0ib29p06dgnprj1vcncu4989hevnxgy7k2jmtxa5l3dy6s36a721pqz6d7bh1t5exrv0skwsd731kd525pdbvgh4yw1a37sg1k6r16ym14uy6ehuknhzlo8bxc9wic1v4q1q2bkcr0td4bx3rbf34wtgcfdtvb\",\n      \"maxRetryDuration\" : \"vwxvk1pnwf3xycztg8gk8t26p5aiv72cqxny97vufyn1g8m5awxgmmvo5sgrvsykh2098ick6ik103o2pyuqv38zwipvk5zjye4n11a26k16f79fymu54ilhlnw1eppsn77cbx38t6rylgp280b147u4cohx9to0nce57pxypptj5f4hip1b\",\n      \"minBackoff\" : \"b5e1d2xkls3cjllz9yabxowk8qj0q1x3af55juaatooltm1ofa5zuyov761z4awz0uquzvdanusa78w011goryn6r7rszao4sqsum3al979cgiurfz245sq1st20jw1flg75szxaual3l2mqixvxvspd5zoql5qyxjrhwo95yokaheiz4nk7e9oo4lv\",\n      \"maxDoublings\" : 1987287660\n    },\n    \"stats\" : {\n      \"oldestEstimatedArrivalTime\" : \"2022-08-19T17:15:54.871789Z\",\n      \"effectiveExecutionRate\" : 1.272025999718403E308,\n      \"tasksCount\" : \"yssfro5jda117enzq9udyr49h7nm5bselvmw8fph1l1e72z49xe0n1ea9v2rondey1t0p13eu8y49iqlmo92m0\",\n      \"concurrentDispatchesCount\" : \"xdaueo0wlrt89fztckm3tvdc4eoyppeps5n6r0imrq06uv437pwh3wmh2w\",\n      \"executedLastMinuteCount\" : \"8oe8uljm625xbssoaivk30jreo79otyltk7qiwwwcbjy4n45yrr2m9z7qqafiy5lxzjmd1hyrqzqw0300\"\n    },\n    \"tombstoneTtl\" : \"84il6llexhli01xtzl5tokrrj16lpqjf464fgl79m4s026vdwrcxzyti1embw38hjg0nx790fg1tve8hxa3un5fn1murtrv6gafhew0cvgt1pdxgzzl7plhjzhb0krn2bwy653a1nickjkt8tiv0708yirdyidc39dwofkybu16ypak2ojhtn1qvjj\",\n    \"appEngineHttpQueue\" : {\n      \"appEngineRoutingOverride\" : {\n        \"instance\" : \"ou66ova767n3dxsqjdmt1911xfoj88h\",\n        \"service\" : \"ax106o2pycaiu6v60ftf08nmd6yy455zbxl1kwkq5714qpsoa2d392if6o6fxmwdqrh5eobni2cuutjjm9qpt5fab85fhlkbpgxifgchtkjdekhg19k59l5c9i1j3jkoxsvu4qrkhamlbwhzoa\",\n        \"host\" : \"fgnwkn64mxplyusjjvu6dzftijwovvg\",\n        \"version\" : \"ne61xjyd0pom5zjza0298ea6sab2fdagdvzbmvlwc9v9dpqhyhd78iks30ashm2da6qgnvvrz58c2u\"\n      }\n    },\n    \"name\" : \"Georgine Prohaska\",\n    \"taskTtl\" : \"6o0o0n7mr664z4j3qztsvamepl1vx3myn71uk7hdytlte3eqrbw05cvbw4etu771ctjq58la296yytremvaeet00u9ctnjmg21uif2nl8wi6l0r58p099t59wknf8nxj44w515g8f78fdin2rqxgv1m5xgx3w0dviey6ouimblwvr2taxdyhk4ih9x9\",\n    \"stackdriverLoggingConfig\" : {\n      \"samplingRatio\" : 2.686090988259065E307\n    },\n    \"state\" : \"RUNNING\",\n    \"type\" : \"PUSH\"\n  }, {\n    \"purgeTime\" : \"2023-01-29T14:38:54.872057Z\",\n    \"rateLimits\" : {\n      \"maxConcurrentDispatches\" : 904585218,\n      \"maxBurstSize\" : 1389248716,\n      \"maxDispatchesPerSecond\" : 9.733774290347087E307\n    },\n    \"httpTarget\" : {\n      \"headerOverrides\" : [ {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      } ],\n      \"uriOverride\" : {\n        \"uriOverrideEnforceMode\" : \"URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED\",\n        \"pathOverride\" : {\n          \"path\" : \"hcpadhn16siqkhtbf0o8xo11n6xu892zbefkvalxlhhzqoli777zdsmyi0b9i3rtyc8d979oh641l77\"\n        },\n        \"scheme\" : \"HTTP\",\n        \"port\" : \"i8ktvoqaat86wplxw3aotu5uegpkyb\",\n        \"host\" : \"un64jvq75lnyzxyhxadsnlul9v7s516qtm9x4yjn8vjq6i7dhbieu9e0ado761667zr9284tn33ymjr838fl7ygahbjtn8kwekkxcmjxv4qucd9dbbpe7dm9qpg1yutajqcz17uvnkt3ani10lvzweaumrqf0y4pw53lfs8qw9ozp9jkq2rybvo0s5\",\n        \"queryOverride\" : {\n          \"queryParams\" : \"lho5jo1vdzqnppsafbgpj1j44v775mi4t91fwfwl8rwxpgiov88xs7q8e5wkj0j0al6rpu14e5dhfsz03g71bkrjh7sh425li93sre99rbigm9gzzx38s3wyp34i1cervwk999czze0\"\n        }\n      },\n      \"httpMethod\" : \"OPTIONS\"\n    },\n    \"retryConfig\" : {\n      \"maxAttempts\" : 79502259,\n      \"maxBackoff\" : \"bvkzgesfmphupaaaea8rbllgj5n3in6b3sjwb7yqsxuvev50l4\",\n      \"maxRetryDuration\" : \"tce69mlqpzwxoyj9dbil33tolsfskx5cu079tkqotx5vfad3fm7dcoykoebibqyhym2idxghg3pvbruwx5pp83j2shcyyon3j0rmea8ou9crhtd1fafhr725lj6r46ko64r3jr8r3fyut3ldpruhg1gcj6yxe9duc8mktv5wblgoa9o2bmxmw4pczo74kki2\",\n      \"minBackoff\" : \"97q6l7tnm7btibz1n7gpsn8pro5g2lkwva1359hmtvpmmlxdq89b5rffpxk2zr5mk3krozxrpd7s20nt7tnuwnggw56xvvp454tuwzspqsdmnrlr9s1ephy13lte2ejjarq0\",\n      \"maxDoublings\" : 402932680\n    },\n    \"stats\" : {\n      \"oldestEstimatedArrivalTime\" : \"2022-09-05T15:17:54.872323Z\",\n      \"effectiveExecutionRate\" : 5.433086314303615E307,\n      \"tasksCount\" : \"pcwksn7xnjfhngw346bkru5oh4jzg0vvsy5734vmv6zc9xs6gxcify090mxge8422xloinagbkbgt9mzt4tujybxap4ph1wqnt4pn9m3uxv3zluaz3nm5ltg4gti7wl56rycd47oqoevjb0w19947lq3lk5euzi\",\n      \"concurrentDispatchesCount\" : \"r9k96ey1ps0ipyyvfmkn5mupru2pf2qautpgngaqf4g4w2sruxj54krw3vrj3bw8y9wu5eqjzyunt9jzdz6w2kfh0v00t0ix5u1k0ueheac3iy8108ii9oxgyrb7mqn1xv4uuvru7v474gy1yzhhfj25422qf33\",\n      \"executedLastMinuteCount\" : \"1jxaj1ccbm40ax8k39o3xtxv4qafqppn6gqukgpjgc045xf4eyj2ff6nvf09fzgbzaba9ub16llp1e3r7uf8pgpw199e4oefp24ufdol512vvswm6nu7t2i1v7gigdoyjgx6np6sqbg7cw7143u1h0eqsrbi1xxyawy33dhi9507u\"\n    },\n    \"tombstoneTtl\" : \"czbyoz1chutxkriekkogfjawfsxi7zmuhrj6\",\n    \"appEngineHttpQueue\" : {\n      \"appEngineRoutingOverride\" : {\n        \"instance\" : \"w7a7ks4pa9xiiu2uubxhu5y3gu3\",\n        \"service\" : \"pxt401cb2n3l7axcbyd4nsfnybc6vyimi6rdpx83hl2kerv4zqa200u3zthft7i2qf4ofl6o48djbxxdx9w1wy4htm\",\n        \"host\" : \"mvfuwflxtfspz0k6c04mup9zs2ul39ctd5dxgl1n3ywbulf8r0ave2uvx3xzlmj2ukzllugy8ie8r3msndljotob8zq4effv8d\",\n        \"version\" : \"iw4t1v9wuybclmbun9p5ksqytyguii2smcy1hligw77kpzpud13ib3ixuh2rwh1f3e53061zuc0nl511lyz6rspxa8fx6mpva7czpqux94dxbay\"\n      }\n    },\n    \"name\" : \"Tyrell Kuhlman\",\n    \"taskTtl\" : \"axh32tsgba6m4yumw3vlt0ln4lfch41kcay4dglj9z682kdkry641tv513vcufj2z74k4sut90whcig7r\",\n    \"stackdriverLoggingConfig\" : {\n      \"samplingRatio\" : 1.7463948209481605E308\n    },\n    \"state\" : \"RUNNING\",\n    \"type\" : \"PULL\"\n  }, {\n    \"purgeTime\" : \"2022-08-04T14:27:54.872577Z\",\n    \"rateLimits\" : {\n      \"maxConcurrentDispatches\" : 874774074,\n      \"maxBurstSize\" : 763787056,\n      \"maxDispatchesPerSecond\" : 1.414807498356001E308\n    },\n    \"httpTarget\" : {\n      \"headerOverrides\" : [ {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      } ],\n      \"uriOverride\" : {\n        \"uriOverrideEnforceMode\" : \"URI_OVERRIDE_ENFORCE_MODE_UNSPECIFIED\",\n        \"pathOverride\" : {\n          \"path\" : \"8f0q2slrm823v70bmgub0fk8q8iywwuqst1galz6t4d41blz1qxt9py20ogvjsfs9ik8o2yhbw496871zdiktq6oq99tgfz3pkzzh0o9zzjxb3icxw3r7ur0mn7cdrdx6ko8wy5urpulj8tqu32ns0armig9966qtrxndlaopb1g2v8h06e7upapj22b1xxgm\"\n        },\n        \"scheme\" : \"HTTP\",\n        \"port\" : \"h6j4b8rlm3tijwq6g\",\n        \"host\" : \"t51z2kx4rkv39xpxeb4jr869reiu9vo02vi08\",\n        \"queryOverride\" : {\n          \"queryParams\" : \"2tzwz7mss022ev5l7sp1o63ad57gkjxgaj5asnktq2vlnft4g74x\"\n        }\n      },\n      \"httpMethod\" : \"POST\"\n    },\n    \"retryConfig\" : {\n      \"maxAttempts\" : 15063565,\n      \"maxBackoff\" : \"0h7n8zyn9bok6avmbgmgg5mates9r3j3bf41hqcbx4dvpxhy2xkp2f9zbf5wnn5d7dqjuu2eap4wibo015j461z6inweinmndbetaesazpf9sflqzcddlugr9ngvcbwvdv4i3wn6mawbvocu11swlyq7xmgvd7o3e6n7drbjogllg8jbjkq0cw81m\",\n      \"maxRetryDuration\" : \"3602vt9vlrw91mhyp693pyzx9dsr85m3ye8wdhblsl4935r3g0gac8cp2x2si2hy1vzk975s3py3yho9stlfrmf3yas0xna1st33w7t7k7p2olltu1w6rou4taq3jul3r1jjubsjzfh3lv27zo2vjpu0jf2il8dxudoryyqgyanl6n3jybrvcmrjts30230bl2drdyc\",\n      \"minBackoff\" : \"iqsy6whmpfxmsb055v1s3hss3yutadrbq5c4\",\n      \"maxDoublings\" : 1719293740\n    },\n    \"stats\" : {\n      \"oldestEstimatedArrivalTime\" : \"2022-07-06T14:59:54.872834Z\",\n      \"effectiveExecutionRate\" : 1.6689126045168826E308,\n      \"tasksCount\" : \"j2so1ddbgmxgj9zszds5qea83xavrnajcvq4vlcevszwu2d4hbkvvcjj7vuf2hrlorxw0ifijuv12d1y8uqe1125m62hj70tvm\",\n      \"concurrentDispatchesCount\" : \"9ct3c6f9j1itdmgvi3cf58cxjuos6b1kgl5nazq552\",\n      \"executedLastMinuteCount\" : \"hebfjq6f3zu4p2q30a7ocu3e0gn9kywimhdskdgq67e7rophf7xznnjqxve211jidisdyjp1d6lamhc5zp6jx071jnt5ze8m714yl8acc5xmvqgy8zd9m50tv97v1of9bnkm9gdcyjyzb87r4h0\"\n    },\n    \"tombstoneTtl\" : \"ufkg2frhvz3nlv4cknbopsyzuuv6v7590a45za6be26humt3n00mk4lv3dbs2uplhyccs9cuqn4qsmyhrrrtkuoabd5nw4kly2q4x7i6u2fcrmbpl\",\n    \"appEngineHttpQueue\" : {\n      \"appEngineRoutingOverride\" : {\n        \"instance\" : \"ex71yhv5imhiuipm78l7ozq76bgyni9ido2ipfdl82vhytmoiab3ezdg7p2uf2nv33s9wgeaa89wjf25l86o39qjvwdkxgw4hj50jg\",\n        \"service\" : \"issqnwy8cb24rppzj8hctsm5j8evoqe83t5s7n\",\n        \"host\" : \"htvm3twvaj4c3swcn988tckk766kvyz5p8eszo4hodza6s0nixbuvqrj7nb62d5mxz5maabfzeu5dylf4pwpo3u\",\n        \"version\" : \"nna6kr3jmh4t87bh0kvprt1hvwhoxlc8vc91fczdqirulxdraa98fexc3j2dmo538xjeta9ywketaqmke7sws9ckf6cj4nuz9a85ec7xrogjug0wd\"\n      }\n    },\n    \"name\" : \"Rick Larson\",\n    \"taskTtl\" : \"q9dk21uauyhlc0em90r9ylviqtptqdsb06s8d9nntqox5ycu1yf1\",\n    \"stackdriverLoggingConfig\" : {\n      \"samplingRatio\" : 3.3608632319958283E307\n    },\n    \"state\" : \"DISABLED\",\n    \"type\" : \"PUSH\"\n  }, {\n    \"purgeTime\" : \"2022-10-26T13:53:54.873089Z\",\n    \"rateLimits\" : {\n      \"maxConcurrentDispatches\" : 397945595,\n      \"maxBurstSize\" : 352366639,\n      \"maxDispatchesPerSecond\" : 6.167794218312238E307\n    },\n    \"httpTarget\" : {\n      \"headerOverrides\" : [ {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      } ],\n      \"uriOverride\" : {\n        \"uriOverrideEnforceMode\" : \"ALWAYS\",\n        \"pathOverride\" : {\n          \"path\" : \"wbegoplkkrbqibwwk8s3xku4ilm4di3agyuzctctem0lgs0390a9ahodkc9fvn3wqcqoynjzlpyzz5ehoymvmql1eq8h55gu9bb81czjv3y0eaytnztdpo59g394siko8ngmq0obflmy2nbf5\"\n        },\n        \"scheme\" : \"HTTPS\",\n        \"port\" : \"d0uzfpp1bo25ei35ipefks8zn7a9odon5lbouthwyl44qttj4ah3pm7rvog5tefuffgalhk1gzzadtfwz9tfc2j6jgp9pus2rwxt0lu48e0a4atstlg2dc00de6lhhbqc\",\n        \"host\" : \"32ffwphl7chu42sqvj86e8jkqr22x3m65qln49j3jib8o6ums9cmzlfxlrohdtg98yzxb1d8l1jl9mdilkyzx1c4vh7iomgzzunahtehd0d3y44ecx85gfuchil1wu3fn5fmy9ipuo18brneaf441i2dvhjl31c100hkimq85ont5zjfezw0aw3bov9rgb89t6n62m\",\n        \"queryOverride\" : {\n          \"queryParams\" : \"drcls7wlkzy9ujnvk4c26enx7y3ldvye4tv\"\n        }\n      },\n      \"httpMethod\" : \"HEAD\"\n    },\n    \"retryConfig\" : {\n      \"maxAttempts\" : 366109977,\n      \"maxBackoff\" : \"9n87o57j1ssb25390sb3p1a1x08qkryxinzrbrgkutqocd4hn79b5pn88re93wc9y69d11v1jp47ajliyjf6y79r8vcoh0\",\n      \"maxRetryDuration\" : \"v5pgq31le9h505uh8jfixqtsfidlv2unxfrydd4ew649zueuqr71nqmdyab8pc57llokkpb9ig\",\n      \"minBackoff\" : \"32xwpt6stpl5ls877qj7kagxhs1q0p2s48opj0ety8m0u7czyvwsg3h1ay3qfg2jblc4v5uc9qqd0xl6cs0py9pkgomis0oiijingxxpuqo5yn\",\n      \"maxDoublings\" : 957556943\n    },\n    \"stats\" : {\n      \"oldestEstimatedArrivalTime\" : \"2022-08-02T15:04:54.873341Z\",\n      \"effectiveExecutionRate\" : 1.178947406219261E308,\n      \"tasksCount\" : \"ox6pnfbt505x7ra9gkcurzvmhv4i09w3zeojnte7jqeikvj9nixnx93tm69ehxyp7co07bh9rqpfehu2m1thwdyen8o6teqyeeqk7bpzirkyqlit9za52w3qkt74xrune1a9ojx54e1tmk\",\n      \"concurrentDispatchesCount\" : \"jgxisoe87an11hbfsnozo7mt0bmvwa1q0gcddbtm8f3f504ahb8mrfuytrzj2mfm6ewkit7\",\n      \"executedLastMinuteCount\" : \"amfdtzgqjd746peeqz8cx933478qzv2k8hv1u1r0hur4y79v4hcp1kupozaelzrdk4bayu3ftzg8qm3aa9cji8oyotiw4luag5qvt2tfuns\"\n    },\n    \"tombstoneTtl\" : \"oab6dlv7x2fiw8zqoadbsirkwjsby4t74scia1hddjhx2ac01mo5e6g8dgv2ee9y4jgmfcx1hxfd2vpo\",\n    \"appEngineHttpQueue\" : {\n      \"appEngineRoutingOverride\" : {\n        \"instance\" : \"6vta4o56b9qi5dvle00vtsi5t6dmxg63drkujvfsz74xfrkqviw2twmv18\",\n        \"service\" : \"ehn0rwhgsxx6l962yjzq92uvurg3nfaynxo3becvp6aq1k4jlol704yqnlp0c3i39flehy3reu4n065ya35aveg\",\n        \"host\" : \"an9jsq5dn1jswpcw83ale74ea8o4xtjrn093dcixhmhcrw3kuh4ivubtyz7qwiim6\",\n        \"version\" : \"ly0wjrp6fn737j3c1fqwatja\"\n      }\n    },\n    \"name\" : \"Rowena Zemlak\",\n    \"taskTtl\" : \"o32xg3n1xrfiyh49xzx\",\n    \"stackdriverLoggingConfig\" : {\n      \"samplingRatio\" : 1.7222224882962456E308\n    },\n    \"state\" : \"PAUSED\",\n    \"type\" : \"TYPE_UNSPECIFIED\"\n  }, {\n    \"purgeTime\" : \"2022-09-09T15:13:54.873587Z\",\n    \"rateLimits\" : {\n      \"maxConcurrentDispatches\" : 1395181014,\n      \"maxBurstSize\" : 2019813744,\n      \"maxDispatchesPerSecond\" : 1.6267796000084658E308\n    },\n    \"httpTarget\" : {\n      \"headerOverrides\" : [ {\n        \"header\" : { }\n      }, {\n        \"header\" : { }\n      } ],\n      \"uriOverride\" : {\n        \"uriOverrideEnforceMode\" : \"IF_NOT_EXISTS\",\n        \"pathOverride\" : {\n          \"path\" : \"gii0ugnx6uz3n00xhr7o0gm2j8vaobn7hzjk2g0an2udljv4rk0m92ic527t87q59gh9uqc4b3r5jdty9qdswlfk0zvcl0drshw1wnj3mlz4pa6xs2lrsxs6hbkgx6\"\n        },\n        \"scheme\" : \"SCHEME_UNSPECIFIED\",\n        \"port\" : \"dxblfks02njy0g2sujis596lfbiu39503ayj3eg5rkx0aphmnd5ve1q2rvsnuvr1zixoe543fbre3ss3r8wevoz5sv8mjwky8gnviczquipagpo1jatuod\",\n        \"host\" : \"qh7uei5plxy3omavgwtondvjszktc5nwuulbym9etaulpr125gr59h3708vrhmtqkjm\",\n        \"queryOverride\" : {\n          \"queryParams\" : \"go8pnhlxg0nli7pavnyqm8tekluuwko2fp0e6z4a9jygsyg8tx8ipw032gnmn24i2m5umpd8wrurkodryukbc8av4mkku64mq3e5cxezd10xnqsladqlmdf3dcvc13jqfpfmfg0cscizd0p5dyv34b3x31muiberavsykay9tk3t52vbcq6mtri3si4lm813tiq\"\n        }\n      },\n      \"httpMethod\" : \"DELETE\"\n    },\n    \"retryConfig\" : {\n      \"maxAttempts\" : 1868256683,\n      \"maxBackoff\" : \"wfn2ic99vea8c71dwjvr3s56i0wa5ald5ruzt1vmgqyc6n01t1cj2ltrxv3d6df5m1me6ewa2tynvrxfr46ieadlf8lx0mef3il3p9s7xk3gzf7lvbbpi1hngmz976up7pohjsefdbx0afrutv1naol2bafyfncubfzdi66xdx048bbmc4m2a1mpdves8bnrj\",\n      \"maxRetryDuration\" : \"idpa52aq7wrom7ng78ncent3nuawtnaaaujlr189a3hm6w1vmuz5zfj4fzom3tfg9bbirmuud0141oguewz2ieef2t7dcsdsft3wwgk6gbbxve007si4lg3qyq1peq3u0wxhmvl1zrkl26se5681411h8f\",\n      \"minBackoff\" : \"7718363sule6f5ltzixcg7cif47r21axkgchqc3yt8yt2jq8xiy8ddbegbcd5czuwd9aqzph9ld4dks0b1k38m88e7uei7onl7kn2iikd4iwabca0qhb2xr9wh\",\n      \"maxDoublings\" : 898304461\n    },\n    \"stats\" : {\n      \"oldestEstimatedArrivalTime\" : \"2022-10-18T16:54:54.873822Z\",\n      \"effectiveExecutionRate\" : 8.569317087856265E306,\n      \"tasksCount\" : \"41go1j0e7pwhg0niecuycqsompos4kpf\",\n      \"concurrentDispatchesCount\" : \"pytyl4kjo8fbmkh218uh633s51xgftb07cb529f2sovekefc8ik47i4801ssw1t4nnqbcra3wyhvdluig3dogcag52zgmex5bbiugqwrntabhntrw758g16\",\n      \"executedLastMinuteCount\" : \"czyrbn\"\n    },\n    \"tombstoneTtl\" : \"g4c1r284\",\n    \"appEngineHttpQueue\" : {\n      \"appEngineRoutingOverride\" : {\n        \"instance\" : \"tc4s100l7hfrflqnhoaotj469zybk1buoz2x4gy9083k93o1kfbrrmltljzw426053i97zg8c11t14jk0aqd5ag2igj4ghwhsmqkn5wcjygkmttcseg0hnbus6na09ku6n3swp8k5a\",\n        \"service\" : \"l5hrww982fzmzha0r5idjpenmcqp3x67ogsfhnjyjem45ocwgsnwnd769m01bzkz34z7kopmlf7fk0axrbdq9j7xfsw0nrx9b76zns81tjcnmajdpahivn5x9bz\",\n        \"host\" : \"raikadheuofvm8thajbzeivadqlq6smb\",\n        \"version\" : \"y1tm3jy3xcpx82ty8vfcp7g5sy6bfdaze1kjutryw2vlbsrjwjhxfrm4qyssulunyviskd767aetjbn3pagvitdrsm8s47pk1lbwex6c3r80wqi1o8gy8xhhnqq990y98szjhpgbciywy9eustdigh3zhm99drq\"\n      }\n    },\n    \"name\" : \"Guy Wuckert V\",\n    \"taskTtl\" : \"iduft1ip2uq78v6plbl36nvq24itmfcfqjydt1hlrpra1s5y768y9cvcbgu0mglloo82dzz5oq7odh0xx7ad9lf4hyzjseemgtr9n7zip3aaepl2d5scq6zvdvgfkl9rvuxqoa5sphbirprsc2uodropyvbpiiincjw9wz5vp0zm7kj8c\",\n    \"stackdriverLoggingConfig\" : {\n      \"samplingRatio\" : 1.373479519947515E308\n    },\n    \"state\" : \"PAUSED\",\n    \"type\" : \"PULL\"\n  }, {\n    \"purgeTime\" : \"2023-02-25T14:31:54.874066Z\",\n    \"rateLimits\" : {\n      \"maxConcurrentDispatches\" : 930344950,\n      \"maxBurstSize\" : 2113566085,\n      \"maxDispatchesPerSecond\" : 1.450513088911315E307\n    },\n    \"httpTarget\" : {\n      \"headerOverrides\" : [ {\n        \"header\" : { }\n      } ],\n      \"uriOverride\" : {\n        \"uriOverrideEnforceMode\" : \"IF_NOT_EXISTS\",\n        \"pathOverride\" : {\n          \"path\" : \"gzvfghuzvj991h8w4tmel7q0dgijf664ehr6mexthtmbwa6vkcdo3dn7oro1shzg\"\n        },\n        \"scheme\" : \"HTTPS\",\n        \"port\" : \"0gvn1u01u83qra497u8i5t0dp29bkseco2n48ktoraesvsrmkx126kt5luk1hjsvb\",\n        \"host\" : \"92llncjp\",\n        \"queryOverride\" : {\n          \"queryParams\" : \"p606peejaih0ma4cu5kfp1mtwbcujtsfpy7xaujufz8xg02fx9ogmc27s38clmis1sgabqz4rgb8mdhapawd0ijrq9y19n2ujo87of6d\"\n        }\n      },\n      \"httpMethod\" : \"HEAD\"\n    },\n    \"retryConfig\" : {\n      \"maxAttempts\" : 2004512757,\n      \"maxBackoff\" : \"wbsdiy6u2sbs7jjkkktz02ixodg5ma6d1a0\",\n      \"maxRetryDuration\" : \"ehkilj89xxl44lenfy080xkirn332nh1e51iq6z2mbjzx5q3vvc4alxg5ku0gend7kqr1nenhcj34h4sj5jbw8p8v3gtqupo2qvhn5837io13qghusg1uuk6mwyamm85vu6hi4y7s\",\n      \"minBackoff\" : \"y6ry01bbyr0n1pqkubcb3isppgjd70q556j66dubk5b231vf1ar85rk1m50kruaot9qr1twso37jhnu4ban29uksefbelf9jebo4f8f9ng7o4w76crcaamv9fw5gt6m90s5hkqgznhnafy8d3xq8kkm0cidgs0bb2j2yo4qx0eoqzs72ev6h0upb\",\n      \"maxDoublings\" : 1706608446\n    },\n    \"stats\" : {\n      \"oldestEstimatedArrivalTime\" : \"2022-04-14T13:39:54.874299Z\",\n      \"effectiveExecutionRate\" : 4.649043153905625E307,\n      \"tasksCount\" : \"bxnq7lvgyvk\",\n      \"concurrentDispatchesCount\" : \"me0ls9xq6cl49iktdbg0qtxcxwu3bui9ec4l373iryvomohq5kx5cyaj1ebc87iyo52zbw2pqpgcob885fu57k3uxu1ftcdskt70fs1rlj9ykmk5qek7qsarn\",\n      \"executedLastMinuteCount\" : \"9xy8vuxoybmhoc8m5juv0qlybc1qewawm3tn32673d8bvrs0le3aw6jfjuyidyy6l1p0bv1bvg97ul64lbcet6tqxfw8tq4df34vq8jbjwd3y78ydvplarr4gujqkrjrsls0vi3o\"\n    },\n    \"tombstoneTtl\" : \"y5n7psmwlku63k84u1vzl7pv0xhjuqvngfr5xxehx3aurdoanv9emtmv39pdmk61yvji7\",\n    \"appEngineHttpQueue\" : {\n      \"appEngineRoutingOverride\" : {\n        \"instance\" : \"99oyui8c2vnp5twz8b3hkclbuyxr7e8ptgke7mnyezbgetx7horuvvi2ql2s89pe7rgq50ua26y0g88qisjfspiwz9p5lxfowh2sow3be35q82pjk3ga6wl5y5pleb9logcms6yuufsqj31b3274m6o2vqgqb18neowxp2ia1y70ocog21eh9tieyrtikwnifaj\",\n        \"service\" : \"36m1cb4zq8arc1iojn8c77ah7ggxdidwre1uhvegdfvhponynb0ryb0mtoo5u2ojpgf1rl9yalet2y\",\n        \"host\" : \"u8jkmoeij4wfzej5mw\",\n        \"version\" : \"xrl7ofdkulfetu4ga6ntfzafscuiw5o5we7yc6k03asrqfvzltt9t232aksq8qsylmnr6v78vu0i6lljkf0fzwwgrkbq8aayend5wh74work3ovvd0uav2p7tovyg41xdux48q\"\n      }\n    },\n    \"name\" : \"Hiroko Volkman\",\n    \"taskTtl\" : \"pg4grl80kj91qogommivw9s172blbnt\",\n    \"stackdriverLoggingConfig\" : {\n      \"samplingRatio\" : 8.934044576582552E307\n    },\n    \"state\" : \"PAUSED\",\n    \"type\" : \"TYPE_UNSPECIFIED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0320913f-f3c1-464b-b1fa-162f7356ea9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.874731Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.list",
          "schema" : {
            "description" : "Response message for ListQueues.",
            "properties" : {
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. To return the next page of results, call ListQueues with this value as the page_token. If the next_page_token is empty, there are no more results. The page token is valid for only 2 hours.",
                "type" : "string"
              },
              "queues" : {
                "description" : "The list of queues.",
                "items" : {
                  "$ref" : "#/components/schemas/Queue"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e3e95d17-f2e4-4ef7-a718-034183441f86",
    "name" : "Forces a task to run now. When this method is called, Cloud Tasks will dispatch ...",
    "request" : {
      "urlPath" : "/v2beta3/Daphine+Armstrong:run",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dispatchCount\" : 1076851109,\n  \"scheduleTime\" : \"2023-02-11T15:05:54.87046Z\",\n  \"pullMessage\" : {\n    \"payload\" : \"1mvfw1740o2iwjxmo9kip0axrjocs0v7syt09szxw8pdplqglfaouyaplpnqjkjilf58v9gi36n60wkcmwksh38k3reaexx8zwm9g3ojph9j0ac5m\",\n    \"tag\" : \"incidunt\"\n  },\n  \"view\" : \"BASIC\",\n  \"dispatchDeadline\" : \"2ip6u9ev2avlx9hivikwd\",\n  \"firstAttempt\" : {\n    \"dispatchTime\" : \"2022-11-16T13:31:54.870563Z\",\n    \"scheduleTime\" : \"2022-06-28T16:50:54.870593Z\",\n    \"responseTime\" : \"2022-12-17T13:38:54.87062Z\",\n    \"responseStatus\" : {\n      \"code\" : 871290155,\n      \"details\" : [ { }, { }, { }, { } ],\n      \"message\" : \"Saepe quidem repudiandae dolor earum impedit quod. Deserunt commodi qui maxime dolor natus. Nesciunt vel illum voluptates alias nesciunt dolorem non.\"\n    }\n  },\n  \"createTime\" : \"2022-12-19T16:57:54.870709Z\",\n  \"name\" : \"Mrs. Johnsie Runte\",\n  \"lastAttempt\" : {\n    \"dispatchTime\" : \"2022-03-17T14:59:54.870786Z\",\n    \"scheduleTime\" : \"2022-09-15T17:13:54.870814Z\",\n    \"responseTime\" : \"2022-09-24T15:34:54.870843Z\",\n    \"responseStatus\" : {\n      \"code\" : 1635493946,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Mollitia sit illo labore eum laboriosam. Nihil consequatur eius quasi ad. Ipsum maiores pariatur. Sint quia dolorum eaque quidem aut cumque.\"\n    }\n  },\n  \"httpRequest\" : {\n    \"headers\" : { },\n    \"oidcToken\" : {\n      \"serviceAccountEmail\" : \"5osx0fam2tqp5alo6j07zx1ymmkkqhm47o7lzbs94f7mmtoxhufhwg6dlfl9t99fcbjmua4c9j2e38y0pbqu6o32l2bcivwzv75t447dakw18a0plugsxc4qnpe1k6hm1mp71zje25pb2ztz9f2btw5tzaq6xv3s2a6zx9mz6n10785nrh0pd5frwv2wolu3l9tos\",\n      \"audience\" : \"ducni0tnzbmllue0xv4v3f992ht9eiq613x8ux6iw\"\n    },\n    \"body\" : \"Non libero hic. Dolorum et corporis ex quia quo. Eum excepturi aut dicta. Est vero aut pariatur quia. Ad molestiae quo dolorum.\",\n    \"httpMethod\" : \"PATCH\",\n    \"oauthToken\" : {\n      \"serviceAccountEmail\" : \"74vsr0ceg57sb2288qd5oohg962ty6f0xy8soibtj0dxz87h12wa7hfksumtkuu365ylts4mqiolkfqjvmi1rlvypb9m4iui2y5tyjpyub0ot4n3jpnx5nu244oc3p6sth0u6iv7yi6anq24r8uxt\",\n      \"scope\" : \"2kstgbi17h5rrgxspls9hauyid349n2ysczpa\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/212038\"\n  },\n  \"responseCount\" : 1012062298,\n  \"appEngineHttpRequest\" : {\n    \"appEngineRouting\" : {\n      \"instance\" : \"xhrl3szns69lam66g1m7rcj9iyskk3i143io5uy706i6b04nk1cwf8gthxr4y88n6zgf4m6zzh85r1bjopizjl4k2ckvgandqoh8d0ge7yyet9h1q5y1ppoykof3bttw5j\",\n      \"service\" : \"a58asot9lsy4es31na3ysjsxyusc7jhww157wovvhhe7i2kdseuyvfn3udc5k2kvlhsvvpg32ce3wkllfpbfd0rhh5pffsog2bz670t87tueeyefzmgm83l3iwlsicb8rhsprr\",\n      \"host\" : \"09sszznpc6uyquw1q636s3r3lj4sasxmj2pgrcpmsrhevg8wtlmt9wtg5\",\n      \"version\" : \"90suubf2ipm57j04aqy678dlk9gdod05\"\n    },\n    \"headers\" : { },\n    \"body\" : \"Maxime dolorem voluptas quos quasi quis ullam doloribus. Et vel aut ut enim ut quisquam. Et nisi totam laudantium reprehenderit voluptas animi. Dicta consequatur sed ut et fuga dolor.\",\n    \"httpMethod\" : \"DELETE\",\n    \"relativeUri\" : \"https://web.example.mocklab.io/089001\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e3e95d17-f2e4-4ef7-a718-034183441f86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.871458Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.tasks.run",
          "schema" : {
            "description" : "A unit of scheduled work.",
            "properties" : {
              "appEngineHttpRequest" : {
                "$ref" : "#/components/schemas/AppEngineHttpRequest"
              },
              "createTime" : {
                "description" : "Output only. The time that the task was created. `create_time` will be truncated to the nearest second.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "dispatchCount" : {
                "description" : "Output only. The number of attempts dispatched. This count includes attempts which have been dispatched but haven't received a response.",
                "format" : "int32",
                "type" : "integer"
              },
              "dispatchDeadline" : {
                "description" : "The deadline for requests sent to the worker. If the worker does not respond by this deadline then the request is cancelled and the attempt is marked as a `DEADLINE_EXCEEDED` failure. Cloud Tasks will retry the task according to the RetryConfig. Note that when the request is cancelled, Cloud Tasks will stop listening for the response, but whether the worker stops processing depends on the worker. For example, if the worker is stuck, it may not react to cancelled requests. The default and maximum values depend on the type of request: * For HTTP tasks, the default is 10 minutes. The deadline must be in the interval [15 seconds, 30 minutes]. * For App Engine tasks, 0 indicates that the request has the default deadline. The default deadline depends on the [scaling type](https://cloud.google.com/appengine/docs/standard/go/how-instances-are-managed#instance_scaling) of the service: 10 minutes for standard apps with automatic scaling, 24 hours for standard apps with manual and basic scaling, and 60 minutes for flex apps. If the request deadline is set, it must be in the interval [15 seconds, 24 hours 15 seconds]. Regardless of the task's `dispatch_deadline`, the app handler will not run for longer than than the service's timeout. We recommend setting the `dispatch_deadline` to at most a few seconds more than the app handler's timeout. For more information see [Timeouts](https://cloud.google.com/tasks/docs/creating-appengine-handlers#timeouts). `dispatch_deadline` will be truncated to the nearest millisecond. The deadline is an approximate deadline.",
                "format" : "google-duration",
                "type" : "string"
              },
              "firstAttempt" : {
                "$ref" : "#/components/schemas/Attempt"
              },
              "httpRequest" : {
                "$ref" : "#/components/schemas/HttpRequest"
              },
              "lastAttempt" : {
                "$ref" : "#/components/schemas/Attempt"
              },
              "name" : {
                "description" : "Optionally caller-specified in CreateTask. The task name. The task name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the task's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters. * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.",
                "type" : "string"
              },
              "pullMessage" : {
                "$ref" : "#/components/schemas/PullMessage"
              },
              "responseCount" : {
                "description" : "Output only. The number of attempts which have received a response.",
                "format" : "int32",
                "type" : "integer"
              },
              "scheduleTime" : {
                "description" : "The time when the task is scheduled to be attempted. For App Engine queues, this is when the task will be attempted or retried. `schedule_time` will be truncated to the nearest microsecond.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "view" : {
                "description" : "Output only. The view specifies which subset of the Task has been returned.",
                "enum" : [ "VIEW_UNSPECIFIED", "BASIC", "FULL" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ff338659-1bdb-435a-be2a-a9b5800d2faf",
    "name" : "Resume a queue. This method resumes a queue after it has been PAUSED or DISABLED...",
    "request" : {
      "urlPath" : "/v2beta3/Chad+Ankunding+V:resume",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"purgeTime\" : \"2022-11-05T13:38:54.869772Z\",\n  \"rateLimits\" : {\n    \"maxConcurrentDispatches\" : 574225226,\n    \"maxBurstSize\" : 1541815636,\n    \"maxDispatchesPerSecond\" : 9.935606813029733E307\n  },\n  \"httpTarget\" : {\n    \"headerOverrides\" : [ {\n      \"header\" : {\n        \"value\" : \"wfjaaduhsk030fo6h0bp5f432qdj2vjz3ye5dbv21oq7igrzu2unit05nllii0kyfhe6fpva\",\n        \"key\" : \"kr9fpyogqpdlmjq02nxhawgdss4dhxojafcrhf\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"2a3lcmmcwdknebkdgchnfg4r5buiqp2qpyp1z6bcg4zwbudvt3zfe8a8fcynvawvlplj88vb94dti3w84zdo0sowknaq50ulgeeh4rsibzpvve3j5nz3ln9ccvn2ieyeoyhty7w3jx8858wppjcy1hfb0dktzguh8x1g1wtqw05ly3157t0ij\",\n        \"key\" : \"kumwe28ibpakiio83diukhof0etkwocsmgrgt3w17wrfb6tsqwajha2d9h28n6rjs50gwh9fw0ow2cve400kw2dluj1wmqh5ud4qk1oihcqgtepdztw12r60qj\"\n      }\n    } ],\n    \"uriOverride\" : {\n      \"uriOverrideEnforceMode\" : \"IF_NOT_EXISTS\",\n      \"pathOverride\" : {\n        \"path\" : \"al1x1auapyjsgslgjswcwjlov8pwqexqd7i7s9k9gzyls31yc3judm88g5cgisng6g4r\"\n      },\n      \"scheme\" : \"HTTP\",\n      \"port\" : \"n88tyezz5x716hbhuggqbahn7r0rtinht58vmhnvk5mztvwatrnu99vd0iv99uux66cvntsa4ga7s7uxib7aevbegvcclwkj4qa8hzwplhu6ybwwpg929mgqzzof5a\",\n      \"host\" : \"5x9yvam42lpqxrxy5tkma8yarei5r3hb75bwmbdjrt9kubb921gd3u9tphdv5cduo564t4kor69b1zsqvzmye7h8jkw9i1xx2e89hxdjtcf1lpd5fqi7gq9rf6qfqxjda\",\n      \"queryOverride\" : {\n        \"queryParams\" : \"r4k7\"\n      }\n    },\n    \"httpMethod\" : \"PUT\"\n  },\n  \"retryConfig\" : {\n    \"maxAttempts\" : 1826103950,\n    \"maxBackoff\" : \"nn8rctkgdjix1z9jri8hr82yexxnlye2pwbzbhxlz3h\",\n    \"maxRetryDuration\" : \"u6i338bpucm0wrmgzthfkymleepj139aiwoz4489kb1rux19jhrdzelk8ylvifirrwk1r46r0uxt\",\n    \"minBackoff\" : \"oq3fp8k1yk9gfn1oxu7m4tsrlxjr8l37vxomq2wrmik4xvgqrz7txwkcwbfz4r1xau88j7t1gw7os4l516gpf48cy3xpn4mbevv7noc3nm2un9ofl\",\n    \"maxDoublings\" : 978252621\n  },\n  \"stats\" : {\n    \"oldestEstimatedArrivalTime\" : \"2022-10-27T14:03:54.870058Z\",\n    \"effectiveExecutionRate\" : 9.360422644826178E307,\n    \"tasksCount\" : \"qivxfbqshoxv7e2ifhfdnwca86l76ddz98dhkgfkjz2tyeux1556mll3yd29k6daf20xlw8eyns0jpollqe6iah877ovlsab9g7lq7og5815h78gf\",\n    \"concurrentDispatchesCount\" : \"zt0hragnryrkb1wk4nobd1kg2v92e5tv\",\n    \"executedLastMinuteCount\" : \"3hhb5095byawckeuvk3gocm1woyvgoq3891s1jgy9ql6fpbtcva33gudbc1ae11ri4hypjq6hwy6z0d\"\n  },\n  \"tombstoneTtl\" : \"d66883gu1lbsblv9kr5a24id1ltnw5c0maj6j5z4owii2qcfwe4fj0t7rmjxumix5a4qfww6l0jy0xo6efp6kw\",\n  \"appEngineHttpQueue\" : {\n    \"appEngineRoutingOverride\" : {\n      \"instance\" : \"ex2e3dilum4lm45snzxfaasnhm4do07yhs6rd7ctz04sd3e2zm4zkeykv2ph27l1uwe6oh7h8s23svktcxqq03v8w7dvjdiifnv26f3tu7q\",\n      \"service\" : \"546c615o6wlv239al1nasjheehqffabvzcjp32jvvji4nc1tdynypdpqhup3mkwknfypxey1sag868chakjzl94f1dh0995j9tgffauakqsvvac0frw03iu8qefm0w6byy48aa3ardcy50eykjwp3xzzc46m7i76wmvf6d54ug3ody21lcyyfh32b5i79mz6hlw\",\n      \"host\" : \"go6cxsv5f1c82wnoz9bcbub8n9suhn6kji1b1f1gccncr1bl2nc9jz3jldok6w5\",\n      \"version\" : \"wm0g8o9422v566egtay9ec5n5l23hzrkxz836t0blhdzziil9ocvhmbhobyeska2mjkpxi2jhm15hss98v9uocpx3m6cnkht8uf2g1ldy4rfespw5va655ipsvsf6tt0ubbq892k190p466whn2v54wddlh0cqb3gz85d2lhlygfcq1jvougk7mbdho\"\n    }\n  },\n  \"name\" : \"Gidget Kuhn\",\n  \"taskTtl\" : \"yy2qlu5ypc1o8ks7e4e4pu7wdclk4p7hqi8y3j3lyb4ue0zzjw4xgu3k98aed8\",\n  \"stackdriverLoggingConfig\" : {\n    \"samplingRatio\" : 1.1635485814786898E308\n  },\n  \"state\" : \"PAUSED\",\n  \"type\" : \"PULL\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff338659-1bdb-435a-be2a-a9b5800d2faf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.870413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.resume",
          "schema" : {
            "description" : "A queue is a container of related tasks. Queues are configured to manage how those tasks are dispatched. Configurable properties include rate limits, retry options, queue types, and others.",
            "properties" : {
              "appEngineHttpQueue" : {
                "$ref" : "#/components/schemas/AppEngineHttpQueue"
              },
              "httpTarget" : {
                "$ref" : "#/components/schemas/HttpTarget"
              },
              "name" : {
                "description" : "Caller-specified and required in CreateQueue, after which it becomes output only. The queue name. The queue name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the queue's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters.",
                "type" : "string"
              },
              "purgeTime" : {
                "description" : "Output only. The last time this queue was purged. All tasks that were created before this time were purged. A queue can be purged using PurgeQueue, the [App Engine Task Queue SDK, or the Cloud Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue). Purge time will be truncated to the nearest microsecond. Purge time will be unset if the queue has never been purged.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "rateLimits" : {
                "$ref" : "#/components/schemas/RateLimits"
              },
              "retryConfig" : {
                "$ref" : "#/components/schemas/RetryConfig"
              },
              "stackdriverLoggingConfig" : {
                "$ref" : "#/components/schemas/StackdriverLoggingConfig"
              },
              "state" : {
                "description" : "Output only. The state of the queue. `state` can only be changed by called PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.",
                "enum" : [ "STATE_UNSPECIFIED", "RUNNING", "PAUSED", "DISABLED" ],
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/QueueStats"
              },
              "taskTtl" : {
                "description" : "The maximum amount of time that a task will be retained in this queue. Queues created by Cloud Tasks have a default `task_ttl` of 31 days. After a task has lived for `task_ttl`, the task will be deleted regardless of whether it was dispatched or not. The `task_ttl` for queues created via queue.yaml/xml is equal to the maximum duration because there is a [storage quota](https://cloud.google.com/appengine/quotas#Task_Queue) for these queues. To view the maximum valid duration, see the documentation for Duration.",
                "format" : "google-duration",
                "type" : "string"
              },
              "tombstoneTtl" : {
                "description" : "The task tombstone time to live (TTL). After a task is deleted or executed, the task's tombstone is retained for the length of time specified by `tombstone_ttl`. The tombstone is used by task de-duplication; another task with the same name can't be created until the tombstone has expired. For more information about task de-duplication, see the documentation for CreateTaskRequest. Queues created by Cloud Tasks have a default `tombstone_ttl` of 1 hour.",
                "format" : "google-duration",
                "type" : "string"
              },
              "type" : {
                "description" : "Immutable. The type of a queue (push or pull). `Queue.type` is an immutable property of the queue that is set at the queue creation time. When left unspecified, the default value of `PUSH` is selected.",
                "enum" : [ "TYPE_UNSPECIFIED", "PULL", "PUSH" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "205f9ac5-f8a0-496f-ad51-ab5688227168",
    "name" : "Purges a queue by deleting all of its tasks. All tasks created before this metho...",
    "request" : {
      "urlPath" : "/v2beta3/Don+Schaefer+PhD:purge",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"purgeTime\" : \"2022-12-15T16:45:54.869133Z\",\n  \"rateLimits\" : {\n    \"maxConcurrentDispatches\" : 82500025,\n    \"maxBurstSize\" : 599794852,\n    \"maxDispatchesPerSecond\" : 1.0675647870753109E308\n  },\n  \"httpTarget\" : {\n    \"headerOverrides\" : [ {\n      \"header\" : {\n        \"value\" : \"6vux6mfzxbtcmelzjy8u\",\n        \"key\" : \"0tc7y8bz8d5ylx9sa4lonoq9uc4rmdhmz23apdja3jiaj1qwn28miwqmafok615oltk5e7kutkqgf369yvxf5lda8uekv7qfx5x1z7zr7rect98ehbejb6o1r6qoz12mgyouemzyhxy61184tfstsrm8gv7gghcleueviq0p2129k5795b8fk0cy7krwxed8qqb98\"\n      }\n    } ],\n    \"uriOverride\" : {\n      \"uriOverrideEnforceMode\" : \"IF_NOT_EXISTS\",\n      \"pathOverride\" : {\n        \"path\" : \"yanvi8800u5z6u3dtv84oqq8hdqdq0fgefqtmpf9s4jukla9rvutko963cf5mfjs26g8l6xlglduk551pjo6jp6xq5mmiqt51wvrns1gc2izw8chlsqxr9nd0je2vd\"\n      },\n      \"scheme\" : \"SCHEME_UNSPECIFIED\",\n      \"port\" : \"uhxxzciwaoclsky1kezw1o86513f3z37xhmmko0fao903wmnck085enmg37\",\n      \"host\" : \"x60c805wtqwafy7131yug632tfbha0st0152ey38d8afrbry7v24pzugqg2f3swlse5gzj0yrsfjn786789075wrnt6efqz6dhdcsjaufr29vbuteiswnfvt8bhoy5wsbvjxgh4gaurhxn8zl42spi4bhzqjb1duuujk0e5jvnvnfxgziu0q05rt\",\n      \"queryOverride\" : {\n        \"queryParams\" : \"7oq8yzp3jf8ld7zomot0itc2fctoq0bzsw3qt2521yad9ax4kzhxaesbbcnelcmq04zkjinkwdcuq3n4n7l5siecpjlkl7ngz9dit7chu\"\n      }\n    },\n    \"httpMethod\" : \"OPTIONS\"\n  },\n  \"retryConfig\" : {\n    \"maxAttempts\" : 1369386449,\n    \"maxBackoff\" : \"sx2tbsi37t03icvivmqmtao315tm8uczx54d2sovxka7o6jqa5ifk9nhov93\",\n    \"maxRetryDuration\" : \"pjftiu5cu4ixqn32vu8ajmrjfypbabxd9mgivcr8ll8rzc4vxryykudi5v864pvn3dfz5obv7emp2h9nj9kntj9qzml525sjd4i7ilfpm4ztksxfrpjr9bdyhr4ulxeodnyzsuxg068p9za3cjrhxczegzsnpnajj\",\n    \"minBackoff\" : \"dwoiltto3bzjtyociesq3aldfm8xtuqgqdkls05mkt1ttov7im5aaf0l8u3mh95kumzmbdw823jq6t3kk73hb15j04p7h8r\",\n    \"maxDoublings\" : 195662041\n  },\n  \"stats\" : {\n    \"oldestEstimatedArrivalTime\" : \"2022-11-04T14:52:54.869382Z\",\n    \"effectiveExecutionRate\" : 4.746962075002639E307,\n    \"tasksCount\" : \"nieh0takwn0u2fqxr5oc5h7qn7f20ym8g7wx2503pztdyfv2y2cxqpeurzn\",\n    \"concurrentDispatchesCount\" : \"2wqgtoerf5pijdhn1tdw0qvvvyec7o2fnl0grtngbi19gc85ti8cntmgnyb2a3iobfxt663uxas32vqpnyzbapov3z9ptz8fhqo8e3e7w3iz8r8dhauaxj0k7z0gh7fxo3kk7bzo5jrtnr5q94ewqazyrvrn9\",\n    \"executedLastMinuteCount\" : \"rodm6imen6g94t9tq2l7dqra3exx5vepp8algxyhg56wi9gaxu2p7yq6lc4ovvpiil0by3y082alt2womqubukt0u12kgeki70b78a4nixjp8g7nr5o\"\n  },\n  \"tombstoneTtl\" : \"cgrhgogna6u1pfoof65s1giiosnzg2qwog1kmf\",\n  \"appEngineHttpQueue\" : {\n    \"appEngineRoutingOverride\" : {\n      \"instance\" : \"koope11s8wma4ooiy323st9p6e892vfcy1sgm4ibhwom5tez7gt84f9fh2xrh9l47i74rj96vxsfncrot3ur780n21szhel03vaqur6kxzv49kjm47g2urctpv59lfqyic44zbd3jxfhd259w273ldjxr3l663j2c5e5psed1986oee197n5wmvy37n\",\n      \"service\" : \"i3ygchrnngtygjoezriykjbansg50e4hsugdxopx941mfwe76papm7xq5gdkr9dke\",\n      \"host\" : \"z44ixrs2ocnb5knbea5w0b4pj2u4k30w2s1qpqeb4ylkagov88ysmg90din6g6muiia6s2bdk2dj33x0l5du78f2lvefi6i0xwgzqvb76cdgsoq8o2qyi4qa5g9bm2\",\n      \"version\" : \"ppudq8k0v7d1wdt87oww45v59efuci3gnp7e5e6p2wuk25wegatsqsjfkb0qdqxhba6q7oi9hitzy\"\n    }\n  },\n  \"name\" : \"Sylvie Leffler\",\n  \"taskTtl\" : \"6q3wwy1etnujeicpyfc5bejuhxgv2gog8neecyqlgr1es6qugt1aasd3nffl5fd4hvhf2ftwbcdtogwt0h2cwlup8gky01gi1cjzu92rhutpnn8ctvpbuw39ywkp8vbn8wkejv5doah1lgzwzniknmkjzbq79477el1pm250sqqp56mxrqsdxainm2y3\",\n  \"stackdriverLoggingConfig\" : {\n    \"samplingRatio\" : 1.1915350216513951E308\n  },\n  \"state\" : \"RUNNING\",\n  \"type\" : \"PUSH\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "205f9ac5-f8a0-496f-ad51-ab5688227168",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.869733Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.purge",
          "schema" : {
            "description" : "A queue is a container of related tasks. Queues are configured to manage how those tasks are dispatched. Configurable properties include rate limits, retry options, queue types, and others.",
            "properties" : {
              "appEngineHttpQueue" : {
                "$ref" : "#/components/schemas/AppEngineHttpQueue"
              },
              "httpTarget" : {
                "$ref" : "#/components/schemas/HttpTarget"
              },
              "name" : {
                "description" : "Caller-specified and required in CreateQueue, after which it becomes output only. The queue name. The queue name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the queue's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters.",
                "type" : "string"
              },
              "purgeTime" : {
                "description" : "Output only. The last time this queue was purged. All tasks that were created before this time were purged. A queue can be purged using PurgeQueue, the [App Engine Task Queue SDK, or the Cloud Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue). Purge time will be truncated to the nearest microsecond. Purge time will be unset if the queue has never been purged.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "rateLimits" : {
                "$ref" : "#/components/schemas/RateLimits"
              },
              "retryConfig" : {
                "$ref" : "#/components/schemas/RetryConfig"
              },
              "stackdriverLoggingConfig" : {
                "$ref" : "#/components/schemas/StackdriverLoggingConfig"
              },
              "state" : {
                "description" : "Output only. The state of the queue. `state` can only be changed by called PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.",
                "enum" : [ "STATE_UNSPECIFIED", "RUNNING", "PAUSED", "DISABLED" ],
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/QueueStats"
              },
              "taskTtl" : {
                "description" : "The maximum amount of time that a task will be retained in this queue. Queues created by Cloud Tasks have a default `task_ttl` of 31 days. After a task has lived for `task_ttl`, the task will be deleted regardless of whether it was dispatched or not. The `task_ttl` for queues created via queue.yaml/xml is equal to the maximum duration because there is a [storage quota](https://cloud.google.com/appengine/quotas#Task_Queue) for these queues. To view the maximum valid duration, see the documentation for Duration.",
                "format" : "google-duration",
                "type" : "string"
              },
              "tombstoneTtl" : {
                "description" : "The task tombstone time to live (TTL). After a task is deleted or executed, the task's tombstone is retained for the length of time specified by `tombstone_ttl`. The tombstone is used by task de-duplication; another task with the same name can't be created until the tombstone has expired. For more information about task de-duplication, see the documentation for CreateTaskRequest. Queues created by Cloud Tasks have a default `tombstone_ttl` of 1 hour.",
                "format" : "google-duration",
                "type" : "string"
              },
              "type" : {
                "description" : "Immutable. The type of a queue (push or pull). `Queue.type` is an immutable property of the queue that is set at the queue creation time. When left unspecified, the default value of `PUSH` is selected.",
                "enum" : [ "TYPE_UNSPECIFIED", "PULL", "PUSH" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6b4f72e6-f112-44b1-9af4-5223fdfe8004",
    "name" : "Pauses the queue. If a queue is paused then the system will stop dispatching tas...",
    "request" : {
      "urlPath" : "/v2beta3/Kelly+McClure:pause",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"purgeTime\" : \"2022-06-22T16:15:54.868474Z\",\n  \"rateLimits\" : {\n    \"maxConcurrentDispatches\" : 1740486456,\n    \"maxBurstSize\" : 452065603,\n    \"maxDispatchesPerSecond\" : 1.3709164771777474E308\n  },\n  \"httpTarget\" : {\n    \"headerOverrides\" : [ {\n      \"header\" : {\n        \"value\" : \"6ab5qtoy87mu2p3x35keuwinfg3do7jyddfbl0zn0aor21h7hafvrnlufslwypl8fnml0w7n15js2f84c5k6hqi29q3tugb4okapaef05s4yqzpowl0q882yxnzggz8d08623msb1ftwz3syxnxbc699au7asz9i28i5g3psx6oe04s\",\n        \"key\" : \"xvmhrmy1lfwknbuifmvdoi3rswkglutkd54jssgxpa7gouke8l5g6e4\"\n      }\n    } ],\n    \"uriOverride\" : {\n      \"uriOverrideEnforceMode\" : \"IF_NOT_EXISTS\",\n      \"pathOverride\" : {\n        \"path\" : \"vibg7ndyhz3o10tnlt4wnh21b1zuy1bxq0rcini6grts\"\n      },\n      \"scheme\" : \"HTTP\",\n      \"port\" : \"pnlmx3ga52nwj\",\n      \"host\" : \"jgzqkou3nob58pac6jkhjf1ogpqsncxr8ov1k7qp98lsj12xvfn3b80haj\",\n      \"queryOverride\" : {\n        \"queryParams\" : \"t8sxyopdn8tlhg0zqfcvna3f81ky041m\"\n      }\n    },\n    \"httpMethod\" : \"OPTIONS\"\n  },\n  \"retryConfig\" : {\n    \"maxAttempts\" : 583747407,\n    \"maxBackoff\" : \"84iiargf342115uq3ee78p028wt49355h97j2joqfkttphia28d05xlig1t5ov8bv5aico5704rkc6da05td7zwu41eqdnwh2mcuu5ob72ttod20o76ht5vmndhk8u34ps1wqnv4nxy8vatan0\",\n    \"maxRetryDuration\" : \"xmcadkrnfdovs6of6i4a563u3szjnh2wyocjrejzx8st84tkl51efanpu6bafybx2we2tdz4axlxtm42k3k528ldf4elhi86qunambpyo2nguq1ap1p43g783zppf2xpd9ehwus7rczioarrbnd3mywm\",\n    \"minBackoff\" : \"7jueicqh8ec6mthlmxdu8vhttmieer3x2lbwl7a1um8j1udmqdgjtjljrw9btu6s9nktebl5h2s9ewgs4r\",\n    \"maxDoublings\" : 1696817972\n  },\n  \"stats\" : {\n    \"oldestEstimatedArrivalTime\" : \"2022-07-23T14:41:54.868739Z\",\n    \"effectiveExecutionRate\" : 1.62161922945563E308,\n    \"tasksCount\" : \"36d3n14m47juju2a7u1x5c1b815g25b52zyoaujagpp00jb8t8kmpp2vxcspuhqt1lsa8nvji2fdvx675vqa3cqtj\",\n    \"concurrentDispatchesCount\" : \"9hd8t8r8b2y5ewnmtaz6jnv4hpdn49w2ctw4fnnunswi8y70ia1hsimbtu1cs31yn\",\n    \"executedLastMinuteCount\" : \"pau4qkgha7f92yybdn4m05c5rbl34052v9b5lkf9ej88vok9gkz88klvjom4tjt298s2vnkpwbdzogy8fxb1p4j7jj0bw7yhs5978hzmbaysizu1c8k7k5gubsl6d3rgc9\"\n  },\n  \"tombstoneTtl\" : \"vymlq2t6om71f8fkuisgydrfofkd9v56zzb4n6ik8o0nffakisupgvaynfvvrauxyurlmuk4vn9zobezq4qadtbq3briizmakorb0k1sulud0m3zdevq4py3hzvkgupaf07xgen4krg9oydgasyggijuzegbbw\",\n  \"appEngineHttpQueue\" : {\n    \"appEngineRoutingOverride\" : {\n      \"instance\" : \"l9htt9ym1ukwptp9exfd5ewo7f0x6r1qe3\",\n      \"service\" : \"dkrtsfpvm6ftv5u6udbkyj9esp2rnqk1uznu03742fl84vfgq0a9oy30p3i3iv35mri2xx7ky23y232jsyawuto4e9fxesmzqpjl5iz0rwcsq3eij998dgw99k81czl4ityf3537597qvqc6ofxtckbbfwj24kb823k0gy5ucpi9\",\n      \"host\" : \"bpg4nf8ac6jahqa5parekzqncc4d198bl3prq25c5cb4gmbo0kou9\",\n      \"version\" : \"r9zu30gfs3e2gzoshrxe946fsvypuyn59befn1yv67hx3b48eymlged0jhmncrvb1sq5ehs2nsvsdny4qdnodpr1nun310jeob5uvsn7z9d2f0h3cehv1qtwpkas6mfr4i618bzn2a2782u7tfj7g0cr35evrkr6fvii5isqtz6gusquaeu76sr37ncf7\"\n    }\n  },\n  \"name\" : \"Liberty Mertz\",\n  \"taskTtl\" : \"p5h9g54icqj35vt94dncdkhj1ft20fqng3iw05gu5vhbo522i7avwef2mjgm04gvto5x07opo3ud7e9v3w6ba1etkovrr3t1366wswb1pahp3n5ent4dt1zw25244gwfmfgrnc7f4z27vgd0ieu7\",\n  \"stackdriverLoggingConfig\" : {\n    \"samplingRatio\" : 1.1669281089731727E307\n  },\n  \"state\" : \"PAUSED\",\n  \"type\" : \"TYPE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b4f72e6-f112-44b1-9af4-5223fdfe8004",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.869094Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.pause",
          "schema" : {
            "description" : "A queue is a container of related tasks. Queues are configured to manage how those tasks are dispatched. Configurable properties include rate limits, retry options, queue types, and others.",
            "properties" : {
              "appEngineHttpQueue" : {
                "$ref" : "#/components/schemas/AppEngineHttpQueue"
              },
              "httpTarget" : {
                "$ref" : "#/components/schemas/HttpTarget"
              },
              "name" : {
                "description" : "Caller-specified and required in CreateQueue, after which it becomes output only. The queue name. The queue name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the queue's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters.",
                "type" : "string"
              },
              "purgeTime" : {
                "description" : "Output only. The last time this queue was purged. All tasks that were created before this time were purged. A queue can be purged using PurgeQueue, the [App Engine Task Queue SDK, or the Cloud Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue). Purge time will be truncated to the nearest microsecond. Purge time will be unset if the queue has never been purged.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "rateLimits" : {
                "$ref" : "#/components/schemas/RateLimits"
              },
              "retryConfig" : {
                "$ref" : "#/components/schemas/RetryConfig"
              },
              "stackdriverLoggingConfig" : {
                "$ref" : "#/components/schemas/StackdriverLoggingConfig"
              },
              "state" : {
                "description" : "Output only. The state of the queue. `state` can only be changed by called PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.",
                "enum" : [ "STATE_UNSPECIFIED", "RUNNING", "PAUSED", "DISABLED" ],
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/QueueStats"
              },
              "taskTtl" : {
                "description" : "The maximum amount of time that a task will be retained in this queue. Queues created by Cloud Tasks have a default `task_ttl` of 31 days. After a task has lived for `task_ttl`, the task will be deleted regardless of whether it was dispatched or not. The `task_ttl` for queues created via queue.yaml/xml is equal to the maximum duration because there is a [storage quota](https://cloud.google.com/appengine/quotas#Task_Queue) for these queues. To view the maximum valid duration, see the documentation for Duration.",
                "format" : "google-duration",
                "type" : "string"
              },
              "tombstoneTtl" : {
                "description" : "The task tombstone time to live (TTL). After a task is deleted or executed, the task's tombstone is retained for the length of time specified by `tombstone_ttl`. The tombstone is used by task de-duplication; another task with the same name can't be created until the tombstone has expired. For more information about task de-duplication, see the documentation for CreateTaskRequest. Queues created by Cloud Tasks have a default `tombstone_ttl` of 1 hour.",
                "format" : "google-duration",
                "type" : "string"
              },
              "type" : {
                "description" : "Immutable. The type of a queue (push or pull). `Queue.type` is an immutable property of the queue that is set at the queue creation time. When left unspecified, the default value of `PUSH` is selected.",
                "enum" : [ "TYPE_UNSPECIFIED", "PULL", "PUSH" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d143deb7-7528-4dac-9ff3-fc86bdc0df72",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v2beta3/Ms.+Kathi+Jenkins/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"99ooozgp917ul8pda0td151wkjverz4usp5o16wlakwochbk6pa8qcivkjer04gztduyz6roi3j1ggj9u8lyyp4ddiwc4had9k80qaso\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Kenton Hackett\",\n    \"locationId\" : \"04s3\",\n    \"name\" : \"Shalonda Gutkowski\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Shirlee Romaguera Jr.\",\n    \"locationId\" : \"2y5q\",\n    \"name\" : \"Micah Wisozk\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Hayden Mueller\",\n    \"locationId\" : \"6ji2\",\n    \"name\" : \"Guillermo Weissnat\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Domenic Deckow IV\",\n    \"locationId\" : \"1vgi\",\n    \"name\" : \"Teresia Hayes\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Normand Lynch\",\n    \"locationId\" : \"z57l\",\n    \"name\" : \"Hortensia Kemmer\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jimmie Corkery\",\n    \"locationId\" : \"24vs\",\n    \"name\" : \"Sid Simonis\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d143deb7-7528-4dac-9ff3-fc86bdc0df72",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.868434Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b779b716-0734-4c17-950b-319ca4fdfee3",
    "name" : "Updates a queue. This method creates the queue if it does not exist and updates ...",
    "request" : {
      "urlPath" : "/v2beta3/Tempie+Kuphal",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"purgeTime\" : \"2022-08-17T15:17:54.866493Z\",\n  \"rateLimits\" : {\n    \"maxConcurrentDispatches\" : 1176654839,\n    \"maxBurstSize\" : 560710813,\n    \"maxDispatchesPerSecond\" : 5.560052752895092E307\n  },\n  \"httpTarget\" : {\n    \"headerOverrides\" : [ {\n      \"header\" : {\n        \"value\" : \"8u3sxmxhly38uf6w4owej8vemhf872n8ljodracffdyb39jed6dzypd5\",\n        \"key\" : \"1q6bxbf21n7yeg2bwsu4ughesayl7igsew4pms6vrmex2q84\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"k5vcfjazr4rb7nyfwrhg5xcp2hho6by33gs6kzneh9hskxugwqisiq55hurqfsj161q2pfahu1d8mjpvxppx42y82790q40dn7cwu3hx4we2wi5q8\",\n        \"key\" : \"6c3g\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"ft3kxmapuftdj9vlr21mi1z2t91ibbaii8fpqzd17wpoqapj1vncw6phhmog1yyh15gdboaxgnuj3xw99sbe5pe30g2\",\n        \"key\" : \"yddk9jmh01mt66mf0o8m34v9b4r322ed2vztfpajpl0kzplqgpc7vu0h6tuarm6qs4fq5ghucr2kduafk5op1ck06wi4klhb02kzc15ev2akldld8esm5wtdr371zdk4h1zoeuyl\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"tjfuclui00cwnl8618gt1pjuejfghzlguof37xxydilqyp8uyh18nms6vhl30pc1iv9cdiitngwaemnvbzyl6d66a8859v95p46uj4djcp7viimrltb17z88344rppvn3s1lg3clmipaf\",\n        \"key\" : \"1zprf1i8gfc8frmcpdxvdd9vmuexp4kfahkss4o8h7by1cqhefmzwapxjq4wm\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"9tdgpwi5dhbcrquhpqob7x1wzkhi8jkr6\",\n        \"key\" : \"j1wyf2hlf2u33fjmeodxbw562auhstqnrjp5m2jh2u5vf46zyh87bkiv615wzldxgnhira6kh5djm58iv5883wp895rsajgorta9rko5xot80xat276tr90u3fndsc1w7yji8ph8tvr19an8rpi2\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"2rs7jb9lbawno1ui7048m58ifme7dhxhe1i7gvzgqr50wpcyokwmnzlsibhxy5vrn8ota3xofln9qebjnvexrpab2jkp7289ujvdexoiy03tv6gj5kngckh81r1rkquvxr61\",\n        \"key\" : \"hxzzpjg277sdcsdll09oq73fwdt4flhlxttvir4uhnrtkw0z1pux1smzl5fjr6uvq4gsvasjid0lpfcb\"\n      }\n    }, {\n      \"header\" : {\n        \"value\" : \"zxvchl302vdxrxhdm3ouucekxgjyoa3cmci\",\n        \"key\" : \"7iz59d6\"\n      }\n    } ],\n    \"uriOverride\" : {\n      \"uriOverrideEnforceMode\" : \"IF_NOT_EXISTS\",\n      \"pathOverride\" : {\n        \"path\" : \"q9jrkq8rjonpxdy29fbs1rhlh6tp52flzst97hb3\"\n      },\n      \"scheme\" : \"HTTPS\",\n      \"port\" : \"8ev1e2y7iza8p31bf2vzgcxioe4srsylo0obzj3x6wgqlf6y732kx1rs9t6gnbe60mvlkwbhc3qgmogw4nrz7fjy8gp\",\n      \"host\" : \"bvf7x6jljhzut2z882d2pvaxeorv6agiw3gb21zbkeog5n91vgxjgpiw8bitdz4pxk4qz9v3vdw44mxlwwe4bzlqom10mwlk252pj99h28wrfubwzz784bfx8430o5yosrbr1uctcug8vgk7t4xb9zcfzdqgxh356xvi\",\n      \"queryOverride\" : {\n        \"queryParams\" : \"l2iqaroucgkvu40ny64gfkd03mbqrz08p7maps0xwf6dt7nh1qo0n7wh5\"\n      }\n    },\n    \"httpMethod\" : \"GET\"\n  },\n  \"retryConfig\" : {\n    \"maxAttempts\" : 958491007,\n    \"maxBackoff\" : \"c4vzboazhz5wj4qjb\",\n    \"maxRetryDuration\" : \"nkbgex2l7wr7ozura1697rhbwkljaq62kty4zvl4p7jt8g0ja2jvw3axg7dcgadtcjteoe9aoskh9fwlwmsdaqq33eeh0lwtt1i5smyyoyswd0f7hz22wk9xtc6\",\n    \"minBackoff\" : \"d5401jzd0tbmblce68y9z9lqzvpkh4g38bahg4gzg2tyj5pntyen18i1xew2azfar2e0tahcdfpyqgbw58fdnb5teu7p0jmr5wcb8fzdbjpa46oify4ddzn3hiwnwghngzkluyux5tsbu3elzzpawn3q87imszn5i4bpzgpl9m6rj0p0lhywfv\",\n    \"maxDoublings\" : 1383733758\n  },\n  \"stats\" : {\n    \"oldestEstimatedArrivalTime\" : \"2022-04-23T16:49:54.866934Z\",\n    \"effectiveExecutionRate\" : 6.985908372316838E307,\n    \"tasksCount\" : \"fvohkd222cr007eu61kfys0mqnk3nj2brh2fxyv6xfi9jcpxuluxa9k1vbjauedg5cwyefc9xdhcae6pngp1krftynwaercr5s51d39834sh\",\n    \"concurrentDispatchesCount\" : \"abaguafe80nq719j7wcy9qd2nzxhjrmquuxn59ld45rfciyx7dixl3mnia727jwyjuoz7xzcyo8icq74xhnzao9uzu5z8vtuvjs84fbc19zyvk0ppsbnkcg0c1yzjwfd8lokszehhjoj211rn2dpqkcs04fv0a4olcwdesk7u81u1ki0kzhhpv9sv\",\n    \"executedLastMinuteCount\" : \"2n1jcnhyg0r393vc8kksgk7abjj1cx329klv7d3xccagdlj36ryf89iqq61\"\n  },\n  \"tombstoneTtl\" : \"lgrsyg43fwm0z1uhbuhlpm3pwhzj2n6hfjvfrnrr3duh4xm62mtnxsnrvcebq0pqzxnowlxg6j4ho76fxwnv8cv53afn57ubavnm5gpzkm2ac6160kzjl3xyongb8a\",\n  \"appEngineHttpQueue\" : {\n    \"appEngineRoutingOverride\" : {\n      \"instance\" : \"fikgba58kgiqao57v5aa19lf848eu6x5dctvxbmx80rjizecpj302otamsh6wsjxkywkhx1k0gwjfxic5jlhbhri770j421mvxubhbtxfv5h7s3vo5g6he2l39kcavbw6bvu3qf4uiqyj5bydlwql13df3adlp90a6ao8ixp7jiynbors04\",\n      \"service\" : \"pzh1crss5zc6g8hmtwo4q0445eu88cq4q0ia7dqwnllfb1bplmono8y5h87mlk7yb8drwx4k65of6yfdsv0iaxm48zey72ruf5m2oobn6grcxxc2\",\n      \"host\" : \"woxyhtfdef6ufeklef202yk4qzn1y56636zw4b3x5nt0lipbtd7w6gomdh9hxc49es5g6uki8j4ruhzk4rzek2jw99q8mvcxfhq4outhbc0ug2jg838p6r0mrrzkq7havhsb41rzth65my9\",\n      \"version\" : \"v2f2smhuxx803472mq9i5acvypj75y58gjh8x1x5wgjr1tgvu8lsi1dc84hsjyflj3wkqecpfcslfl4dq09nj6vs\"\n    }\n  },\n  \"name\" : \"America Hansen\",\n  \"taskTtl\" : \"hb19kwldd6jaz3scc4o1ybig2cw8sadcl6sd5nc6x4yggngg6qrii2zc1s3y0co4epkvwlz5nzbb8nt5fvc3\",\n  \"stackdriverLoggingConfig\" : {\n    \"samplingRatio\" : 1.482352357487012E308\n  },\n  \"state\" : \"PAUSED\",\n  \"type\" : \"TYPE_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b779b716-0734-4c17-950b-319ca4fdfee3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.867322Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.patch",
          "schema" : {
            "description" : "A queue is a container of related tasks. Queues are configured to manage how those tasks are dispatched. Configurable properties include rate limits, retry options, queue types, and others.",
            "properties" : {
              "appEngineHttpQueue" : {
                "$ref" : "#/components/schemas/AppEngineHttpQueue"
              },
              "httpTarget" : {
                "$ref" : "#/components/schemas/HttpTarget"
              },
              "name" : {
                "description" : "Caller-specified and required in CreateQueue, after which it becomes output only. The queue name. The queue name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the queue's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters.",
                "type" : "string"
              },
              "purgeTime" : {
                "description" : "Output only. The last time this queue was purged. All tasks that were created before this time were purged. A queue can be purged using PurgeQueue, the [App Engine Task Queue SDK, or the Cloud Console](https://cloud.google.com/appengine/docs/standard/python/taskqueue/push/deleting-tasks-and-queues#purging_all_tasks_from_a_queue). Purge time will be truncated to the nearest microsecond. Purge time will be unset if the queue has never been purged.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "rateLimits" : {
                "$ref" : "#/components/schemas/RateLimits"
              },
              "retryConfig" : {
                "$ref" : "#/components/schemas/RetryConfig"
              },
              "stackdriverLoggingConfig" : {
                "$ref" : "#/components/schemas/StackdriverLoggingConfig"
              },
              "state" : {
                "description" : "Output only. The state of the queue. `state` can only be changed by called PauseQueue, ResumeQueue, or uploading [queue.yaml/xml](https://cloud.google.com/appengine/docs/python/config/queueref). UpdateQueue cannot be used to change `state`.",
                "enum" : [ "STATE_UNSPECIFIED", "RUNNING", "PAUSED", "DISABLED" ],
                "type" : "string"
              },
              "stats" : {
                "$ref" : "#/components/schemas/QueueStats"
              },
              "taskTtl" : {
                "description" : "The maximum amount of time that a task will be retained in this queue. Queues created by Cloud Tasks have a default `task_ttl` of 31 days. After a task has lived for `task_ttl`, the task will be deleted regardless of whether it was dispatched or not. The `task_ttl` for queues created via queue.yaml/xml is equal to the maximum duration because there is a [storage quota](https://cloud.google.com/appengine/quotas#Task_Queue) for these queues. To view the maximum valid duration, see the documentation for Duration.",
                "format" : "google-duration",
                "type" : "string"
              },
              "tombstoneTtl" : {
                "description" : "The task tombstone time to live (TTL). After a task is deleted or executed, the task's tombstone is retained for the length of time specified by `tombstone_ttl`. The tombstone is used by task de-duplication; another task with the same name can't be created until the tombstone has expired. For more information about task de-duplication, see the documentation for CreateTaskRequest. Queues created by Cloud Tasks have a default `tombstone_ttl` of 1 hour.",
                "format" : "google-duration",
                "type" : "string"
              },
              "type" : {
                "description" : "Immutable. The type of a queue (push or pull). `Queue.type` is an immutable property of the queue that is set at the queue creation time. When left unspecified, the default value of `PUSH` is selected.",
                "enum" : [ "TYPE_UNSPECIFIED", "PULL", "PUSH" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "30af1e2b-e3fb-48d2-8c8c-2cd7d4b60102",
    "name" : "Gets a task.",
    "request" : {
      "urlPath" : "/v2beta3/Millard+Torp+IV",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dispatchCount\" : 27193851,\n  \"scheduleTime\" : \"2023-01-01T16:57:54.865423Z\",\n  \"pullMessage\" : {\n    \"payload\" : \"sifxui24q\",\n    \"tag\" : \"quia\"\n  },\n  \"view\" : \"VIEW_UNSPECIFIED\",\n  \"dispatchDeadline\" : \"cp80a9uv1hmw6rjhtpr4h6gko4yx8oyd4erwn2jk8k9mhv2oq5mc72tjmjs400boyew5g3lzxzi33n7g2hyo0web9kz0wykpq1nhdnkhyqzj20xrj7qxbgtop33tbex3k2hjkz0me6cmidt2cuq2\",\n  \"firstAttempt\" : {\n    \"dispatchTime\" : \"2022-04-16T16:34:54.865532Z\",\n    \"scheduleTime\" : \"2022-09-24T15:19:54.865563Z\",\n    \"responseTime\" : \"2022-05-22T17:26:54.865593Z\",\n    \"responseStatus\" : {\n      \"code\" : 881780894,\n      \"details\" : [ { } ],\n      \"message\" : \"Assumenda et error nesciunt dolore occaecati. Quia fugiat enim. Aperiam et error expedita tempora eum cumque. Commodi voluptatibus repellat et omnis voluptatem deleniti nam.\"\n    }\n  },\n  \"createTime\" : \"2023-01-02T15:52:54.865685Z\",\n  \"name\" : \"Gregory Rolfson\",\n  \"lastAttempt\" : {\n    \"dispatchTime\" : \"2023-01-27T13:42:54.865759Z\",\n    \"scheduleTime\" : \"2022-03-28T17:21:54.865787Z\",\n    \"responseTime\" : \"2022-11-12T17:27:54.865815Z\",\n    \"responseStatus\" : {\n      \"code\" : 857048897,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Beatae qui consequatur occaecati in. Eos repellat aliquam accusamus voluptate ad. Quisquam temporibus inventore enim magnam sed. Nam quaerat fugiat temporibus omnis.\"\n    }\n  },\n  \"httpRequest\" : {\n    \"headers\" : { },\n    \"oidcToken\" : {\n      \"serviceAccountEmail\" : \"4jxa2qyp47s532n49any10zlxd4\",\n      \"audience\" : \"xagbujiie6c60zm7ckk7tjkthl1q6t0zs71zuc0wrnyjr7qlcxst75l3b4aevj7vhl5o7ksk3m3g8i1qb0cxobmmtuo6hcsq3lj8atzz5gvukgdyekpza54ts30od935ragcbpdkmkfqf95ajqb2nzfh7y5pkf5qg2jouvivcofa990ts9xcstrhek\"\n    },\n    \"body\" : \"Quia non id perferendis. Et mollitia omnis ut illo eius porro. Ut autem est. Eveniet consequatur quas eveniet deleniti repellat veniam rem.\",\n    \"httpMethod\" : \"GET\",\n    \"oauthToken\" : {\n      \"serviceAccountEmail\" : \"x4swhg4oqz0tc3wgvbj2wkpt1mk7whaaa6dvv86wm1o066dg1y7p6j1qaqlx4bmy1qzri5e252j98vd52tfz8ndoo9yn89ehlx90s7f9a7zptzyzqxdcq1kvimftyo2ynnwajnlz2gdysd75uq65s3at8gbj8bj2u40il8cg05t2j65j6kq8el8cjcnt4yw0bkhacr\",\n      \"scope\" : \"685rw2cjkjx9bb5rqig51xrroyw67uqyes10n0f2891ku1xu5r80b7dpr7cta22uovauh75swebo60e1stoqmwk0g2isv9koh\"\n    },\n    \"url\" : \"https://web.example.mocklab.io/563867\"\n  },\n  \"responseCount\" : 959283730,\n  \"appEngineHttpRequest\" : {\n    \"appEngineRouting\" : {\n      \"instance\" : \"pj0fo3nsr696s5gjtobx3xnucoocw6sy1o18f2irm2wl533sl0dlwnk9kq08ulzuv90rd5fzdzufepij33utpyizmf4tiy3yo98djpun49n4vq9o87j5bh83yzu3kl0tsybor83c93a\",\n      \"service\" : \"utv4q00mqlnq0wng9zhiit1lxojxktt7yt41ykld7m1bmtolbe867le294a0tp\",\n      \"host\" : \"vrnbnmygit12yorzqkhl6vfryaf2hm9yi8qfmdk5mv8dsaz84nvl4nmthv9cnc2bceoipzoid26fmxipfw9ngf8bekzvyv9zt372efv8kxet4etd7j34c4oi80rf\",\n      \"version\" : \"qzo32ngb298ti2y733xttakidy44m9tfoi0ilhvd7uebexusnsp7j0vln7c5wsuxachf675ai3l4ahrk1c0h5cmdgen0g6q1mpiz2u3mv1a27evxesy\"\n    },\n    \"headers\" : { },\n    \"body\" : \"Veritatis perferendis sint et quia amet neque. Et modi quia totam. Laboriosam rem ut consequatur et eius.\",\n    \"httpMethod\" : \"HEAD\",\n    \"relativeUri\" : \"https://web.example.mocklab.io/248537\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "30af1e2b-e3fb-48d2-8c8c-2cd7d4b60102",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.866448Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.tasks.get",
          "schema" : {
            "description" : "A unit of scheduled work.",
            "properties" : {
              "appEngineHttpRequest" : {
                "$ref" : "#/components/schemas/AppEngineHttpRequest"
              },
              "createTime" : {
                "description" : "Output only. The time that the task was created. `create_time` will be truncated to the nearest second.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "dispatchCount" : {
                "description" : "Output only. The number of attempts dispatched. This count includes attempts which have been dispatched but haven't received a response.",
                "format" : "int32",
                "type" : "integer"
              },
              "dispatchDeadline" : {
                "description" : "The deadline for requests sent to the worker. If the worker does not respond by this deadline then the request is cancelled and the attempt is marked as a `DEADLINE_EXCEEDED` failure. Cloud Tasks will retry the task according to the RetryConfig. Note that when the request is cancelled, Cloud Tasks will stop listening for the response, but whether the worker stops processing depends on the worker. For example, if the worker is stuck, it may not react to cancelled requests. The default and maximum values depend on the type of request: * For HTTP tasks, the default is 10 minutes. The deadline must be in the interval [15 seconds, 30 minutes]. * For App Engine tasks, 0 indicates that the request has the default deadline. The default deadline depends on the [scaling type](https://cloud.google.com/appengine/docs/standard/go/how-instances-are-managed#instance_scaling) of the service: 10 minutes for standard apps with automatic scaling, 24 hours for standard apps with manual and basic scaling, and 60 minutes for flex apps. If the request deadline is set, it must be in the interval [15 seconds, 24 hours 15 seconds]. Regardless of the task's `dispatch_deadline`, the app handler will not run for longer than than the service's timeout. We recommend setting the `dispatch_deadline` to at most a few seconds more than the app handler's timeout. For more information see [Timeouts](https://cloud.google.com/tasks/docs/creating-appengine-handlers#timeouts). `dispatch_deadline` will be truncated to the nearest millisecond. The deadline is an approximate deadline.",
                "format" : "google-duration",
                "type" : "string"
              },
              "firstAttempt" : {
                "$ref" : "#/components/schemas/Attempt"
              },
              "httpRequest" : {
                "$ref" : "#/components/schemas/HttpRequest"
              },
              "lastAttempt" : {
                "$ref" : "#/components/schemas/Attempt"
              },
              "name" : {
                "description" : "Optionally caller-specified in CreateTask. The task name. The task name must have the following format: `projects/PROJECT_ID/locations/LOCATION_ID/queues/QUEUE_ID/tasks/TASK_ID` * `PROJECT_ID` can contain letters ([A-Za-z]), numbers ([0-9]), hyphens (-), colons (:), or periods (.). For more information, see [Identifying projects](https://cloud.google.com/resource-manager/docs/creating-managing-projects#identifying_projects) * `LOCATION_ID` is the canonical ID for the task's location. The list of available locations can be obtained by calling ListLocations. For more information, see https://cloud.google.com/about/locations/. * `QUEUE_ID` can contain letters ([A-Za-z]), numbers ([0-9]), or hyphens (-). The maximum length is 100 characters. * `TASK_ID` can contain only letters ([A-Za-z]), numbers ([0-9]), hyphens (-), or underscores (_). The maximum length is 500 characters.",
                "type" : "string"
              },
              "pullMessage" : {
                "$ref" : "#/components/schemas/PullMessage"
              },
              "responseCount" : {
                "description" : "Output only. The number of attempts which have received a response.",
                "format" : "int32",
                "type" : "integer"
              },
              "scheduleTime" : {
                "description" : "The time when the task is scheduled to be attempted. For App Engine queues, this is when the task will be attempted or retried. `schedule_time` will be truncated to the nearest microsecond.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "view" : {
                "description" : "Output only. The view specifies which subset of the Task has been returned.",
                "enum" : [ "VIEW_UNSPECIFIED", "BASIC", "FULL" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c1499b1b-6ee1-45fc-b7e1-988913c0ce69",
    "name" : "Deletes a task. A task can be deleted if it is scheduled or dispatched. A task c...",
    "request" : {
      "urlPath" : "/v2beta3/Dr.+Corinna+Casper",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1499b1b-6ee1-45fc-b7e1-988913c0ce69",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:54.86535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudtasks.projects.locations.queues.tasks.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}