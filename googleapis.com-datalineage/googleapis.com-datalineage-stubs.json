{
  "mappings" : [ {
    "id" : "c023f82a-b524-40c6-89fb-ba4247ae928a",
    "name" : "Retrieve a list of links connected to a specific asset. Links represent the data...",
    "request" : {
      "urlPath" : "/v1/jd0arvh56jwzi9plzpem3t9zg5a8ia6zyxxc7vaic8tsebwt81v29n3ff42920tif267vw5icwrxc5vwpcmz51lcei03u6d3x0bm8bribqm2u1hsiumgibz3d51rwhayh4gvkwv8onqq14zz9c4mmol6tcs8hplfigsm4z4pnlu6i6nbhlb:searchLinks",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"xq52ink0i3ayghc1ax2lm0zr83oubmgphsz4v35c8dy216l0b2qjejppwoxeaixntsivsquh5qxg3ef\",\n  \"links\" : [ {\n    \"name\" : \"Sharee D'Amore\",\n    \"startTime\" : \"2022-12-15T11:00:24.427845Z\",\n    \"endTime\" : \"2022-04-21T08:23:24.427892Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Gary Stokes\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Grover Monahan IV\"\n    }\n  }, {\n    \"name\" : \"Carole Ankunding\",\n    \"startTime\" : \"2022-06-18T12:04:24.428281Z\",\n    \"endTime\" : \"2022-08-03T11:40:24.428318Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Cira Murazik\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Janeen O'Connell\"\n    }\n  }, {\n    \"name\" : \"Jaime Prohaska\",\n    \"startTime\" : \"2022-05-29T10:29:24.428566Z\",\n    \"endTime\" : \"2022-11-16T09:18:24.428601Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Grazyna Lueilwitz\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Efrain Waters\"\n    }\n  }, {\n    \"name\" : \"Charlott Cummings\",\n    \"startTime\" : \"2023-02-10T09:11:24.428816Z\",\n    \"endTime\" : \"2023-02-03T11:01:24.428848Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Eleonore McKenzie IV\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Stephan Langworth\"\n    }\n  }, {\n    \"name\" : \"Shona Stanton\",\n    \"startTime\" : \"2022-08-27T11:20:24.429089Z\",\n    \"endTime\" : \"2022-04-12T11:09:24.429121Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Shira Fisher\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Ms. Agustin Conn\"\n    }\n  }, {\n    \"name\" : \"Marcia Donnelly\",\n    \"startTime\" : \"2022-11-21T08:55:24.429359Z\",\n    \"endTime\" : \"2022-05-06T10:38:24.429394Z\",\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Karan Bechtelar\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Charline Koepp\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c023f82a-b524-40c6-89fb-ba4247ae928a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.42976Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.searchLinks",
          "schema" : {
            "description" : "Response message for SearchLinks.",
            "properties" : {
              "links" : {
                "description" : "The list of links for a given asset. Can be empty if the asset has no relations of requested type (source or target).",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1Link"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the subsequent call to get the next page. Omitted if there are no more pages in the response.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "d5621610-a4ae-4855-a410-4d08e815fcaa",
    "name" : "Retrieve information about LineageProcesses associated with specific links. Line...",
    "request" : {
      "urlPath" : "/v1/x33xgm8tfmcsixmo2x6gmfdqrl95f4sn6law8kz12cwzkm1xvmwhh8qraamj5ssdkob8epsgdofxfqbspdmpqtnzmzt5ohhuypvokkujvry:batchSearchLinkProcesses",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"processLinks\" : [ {\n    \"process\" : \"cgks3d65j4mxdg1ormz3bh3gdn25tssuncwgmjfr3kkkso3gr0go1tfx1l3um7o2f9ev497wuqpv45m0wowjicqlrrkh2d308iunzdgfn1svdlqq8rdwouyzhcvm679y8gwajemtj5zc3r49v5lu9jlj3tez81z7lmflaowc9\",\n    \"links\" : [ {\n      \"link\" : \"szk0duj2qs45rui360q2cs3xp26t6jeaw8hgm5nlvmh9ag7df5igbr4g1g21n84ygfe57yz8e0eummofus8esbfhfth6g7msve2cp46c9bj7oyuzg8rfoys0dzmwj\",\n      \"startTime\" : \"2022-09-04T11:59:24.422376Z\",\n      \"endTime\" : \"2022-05-07T10:57:24.42242Z\"\n    }, {\n      \"link\" : \"yh5d2mp3r25gqk7s4gdwxoxyjyrky7hc0tbiupmad3o0fj7efyndseikanhvqbh0g1pk8ns875vi8ukkdaidbhd4b8qply8q3ub36gxuva7rph6n85f0w9u9sda49eua3wnry07j3zoxmstm4m9ytr14454jnt3teu8z10s86\",\n      \"startTime\" : \"2022-09-16T11:27:24.422486Z\",\n      \"endTime\" : \"2023-01-31T08:30:24.42252Z\"\n    }, {\n      \"link\" : \"gwq7fhuuf8hn8a81719fo5t0uit35xxz79nosy79w2vfvwsse66qlmxv5jg8e4221qote5a4y4an9wrslw3lhqdzuoastenn38r0hfwbjkhrddx865im1kxyxcvqcna8gpzkjifydhg000yuczvh5dk6uf6uos6vgitymmcxnevx19dozkho\",\n      \"startTime\" : \"2022-11-26T10:49:24.422575Z\",\n      \"endTime\" : \"2022-12-27T10:03:24.422613Z\"\n    }, {\n      \"link\" : \"3as1a2l7eom0k3yy1b\",\n      \"startTime\" : \"2022-11-14T10:58:24.422667Z\",\n      \"endTime\" : \"2022-04-28T08:46:24.422703Z\"\n    }, {\n      \"link\" : \"qx3t48t79j8k8bhak5zwu38ppcmzox9gqx9y8p3q6lhuwi43mg5irps50xdzglssvb9egkxks14lukgqoba2ovx38eg98z1n3wta5i26o18sxj3qvuefrearyt3qszc11z9x3fxkhgewyxfbi6th9ylga6tq8p6m6w\",\n      \"startTime\" : \"2022-06-21T08:56:24.42281Z\",\n      \"endTime\" : \"2022-11-25T10:16:24.422845Z\"\n    }, {\n      \"link\" : \"ntk3906ji22eu8sch3wklu6yp594\",\n      \"startTime\" : \"2022-12-03T11:05:24.422901Z\",\n      \"endTime\" : \"2022-12-20T10:48:24.422939Z\"\n    } ]\n  }, {\n    \"process\" : \"gztppyluwfeh5sguc0r8xj17keknlscl6e02ptc5h13tixwtpik1udbmlm3dobqmr6405f15ve1njathr74de148gyiph5oq7lgcpe31cy11eptni3hif8nwpigqm26a6l12l1umydim19rhbfy2\",\n    \"links\" : [ {\n      \"link\" : \"eqkh62frgm\",\n      \"startTime\" : \"2023-01-21T09:05:24.423032Z\",\n      \"endTime\" : \"2023-03-11T10:48:24.423079Z\"\n    }, {\n      \"link\" : \"tya1i9b675n6gt2wjpponppzh17h917lb083b2q1rjjjoa4ebvrcsmruse4u5hhgvcs9dr30akmyci2wpae62\",\n      \"startTime\" : \"2023-02-28T09:54:24.423209Z\",\n      \"endTime\" : \"2023-01-23T12:12:24.423249Z\"\n    }, {\n      \"link\" : \"shblbqd55co5asf6ibb8m63\",\n      \"startTime\" : \"2022-07-24T08:51:24.423306Z\",\n      \"endTime\" : \"2022-06-11T12:11:24.423339Z\"\n    }, {\n      \"link\" : \"x7yjs1g5ovl0nihlw10cd7wlulhim1aaxia37wvplt47y5b7p7b1ykmyj1djhjtdkbcrzl5jygjvuv8ojwrmaa368qvfoa8hddulh0zimm1pd4vbdwwd6f0lsvb8kq44xtbznpvzqnopec4g4g1b4twr545g\",\n      \"startTime\" : \"2022-11-25T11:56:24.423396Z\",\n      \"endTime\" : \"2022-10-28T09:11:24.423434Z\"\n    } ]\n  }, {\n    \"process\" : \"7m26ipssnky3n1p7wycdz8omfnwxi0i1ac9wd6zh5c8pnqu1tl933cqsny8lwfn7tg8es2ig17fcmxsew84qbz8yoyzkfzv\",\n    \"links\" : [ {\n      \"link\" : \"bvv0x9p2unksts4cduh3o1w70v1p98m1mklm83v2dq1sbtdrkxbf9r7k3aa2iic926vwstrp91k\",\n      \"startTime\" : \"2022-04-12T09:53:24.424098Z\",\n      \"endTime\" : \"2022-09-06T11:21:24.424154Z\"\n    }, {\n      \"link\" : \"16r3486z3qsqi8v8aixucaewi96yp44hnh50lbi89m8edhq9gn2dm8iusx756ijd59r6d14cb0621l4afuz2unato1r8n6g3ysykyhzb3fz1zlkncryp5yhhb8oaqrgn4cn\",\n      \"startTime\" : \"2022-08-15T08:49:24.424214Z\",\n      \"endTime\" : \"2022-08-10T10:26:24.424255Z\"\n    }, {\n      \"link\" : \"re8shcrika94ubim\",\n      \"startTime\" : \"2022-09-09T11:05:24.424316Z\",\n      \"endTime\" : \"2022-04-13T11:43:24.424361Z\"\n    }, {\n      \"link\" : \"72ql45l7b0m7sd9v99l8g3r9ukcba9vxrqnh2kr6yl4lezb\",\n      \"startTime\" : \"2022-06-28T08:25:24.424419Z\",\n      \"endTime\" : \"2022-09-17T11:05:24.424457Z\"\n    }, {\n      \"link\" : \"gleap6ix5na6rap3azoadk6kte72hy879rrzpjtg\",\n      \"startTime\" : \"2022-10-14T09:38:24.424622Z\",\n      \"endTime\" : \"2022-07-29T10:35:24.424667Z\"\n    }, {\n      \"link\" : \"1wcc4nd\",\n      \"startTime\" : \"2022-03-22T09:58:24.424724Z\",\n      \"endTime\" : \"2022-11-21T10:54:24.424762Z\"\n    }, {\n      \"link\" : \"td7tuk78h3eth1a3k7e31o90bi3w3dhkzmgv1l40ifjx43k8kov56oc63w88plppt3x4tl192wde5dcr72e1bh9jc\",\n      \"startTime\" : \"2022-06-26T11:04:24.424818Z\",\n      \"endTime\" : \"2022-11-14T11:47:24.424859Z\"\n    }, {\n      \"link\" : \"bw5971xjc8nogngbhu3td2h5nmanugdg5e4rhdiqcw2tz6x8vl7\",\n      \"startTime\" : \"2022-08-03T12:02:24.424965Z\",\n      \"endTime\" : \"2022-10-30T10:46:24.425001Z\"\n    } ]\n  }, {\n    \"process\" : \"sxdbdwavyoxq8y4kky9gzqfmuqvq78cznezxpjhrh2mumvyzr4a8okqzpg4u3memrjhjd4se5e0kyvabntfi0uwg72emvexoylx65gyki3pf334vy5jzxt2zjfr16ngj8zydev197on75bt6memlulbrubkc9uvofdftehlo5f4dpukes1ffcpk7ou52abo\",\n    \"links\" : [ {\n      \"link\" : \"m0m4ugui4bptmm3t0u1ggdobtgkvf0dxxszd363qvgqfmn42b7eul924ogsy2fazem0gh574ye94tymqkm13aghl8xra233v3c3tl1zhcxu8v3hauo4p6eryqtrvyj9cfmuwfjbsfn5\",\n      \"startTime\" : \"2022-04-19T08:26:24.425101Z\",\n      \"endTime\" : \"2022-08-29T09:08:24.425136Z\"\n    } ]\n  }, {\n    \"process\" : \"dnbu6o3w9dct2vxgjhnmj9w2hixf2jncqaq0k2exoyri3jcyey8t0bemme0no3bpe1ebghwmwyvavhocn1sdkx2v1mvousrvtaj4e22s3z6mx9ow104l7lg1eaa7191fyrp407g97b3g5g05j9u1mtfnx2iyou9pft1t96d9i\",\n    \"links\" : [ {\n      \"link\" : \"5coexe2vlubq6wwnnixro85h5lrg42kn4lf0v4zbv3d39p8h2emojzcy5exxjs70wdkd88pvje1gpx95183vxo99a3opxyfwafmymkj3l6wryif1fm8f8plnnc0jy0h3u13j4mej2wai8\",\n      \"startTime\" : \"2022-05-02T11:46:24.425224Z\",\n      \"endTime\" : \"2022-05-31T09:48:24.425262Z\"\n    }, {\n      \"link\" : \"i6vqncgrikknzsvpk9edvm20p6lky0lf7393mzkoozr630jlzv07s75thwja3khdxzrq4jouksecau03h2yxkjhcm3o51tkgldjw0vicbp9lguhjok6z01bfw2e6w1h2vhbcec53l\",\n      \"startTime\" : \"2022-04-21T12:03:24.425437Z\",\n      \"endTime\" : \"2023-01-21T09:09:24.425473Z\"\n    }, {\n      \"link\" : \"erioo8xlroqr825i4wqn55ifqinec6u3mb7d5tojpfm6c1ln17ogzhhrkwn\",\n      \"startTime\" : \"2022-11-28T08:31:24.425529Z\",\n      \"endTime\" : \"2022-09-08T08:58:24.425566Z\"\n    }, {\n      \"link\" : \"64ui4617k02zb9rqds4rc0fgfbxmh8uo9suz2gj40x66q0hy7dj5n8g13bl01v03f20fv6n24pm4s83klxz73h2tngeg6e8ty6\",\n      \"startTime\" : \"2022-05-29T11:43:24.425635Z\",\n      \"endTime\" : \"2022-08-04T08:24:24.425673Z\"\n    }, {\n      \"link\" : \"noza2jd0stebc8bl6x6cqwf7\",\n      \"startTime\" : \"2022-11-23T10:43:24.42573Z\",\n      \"endTime\" : \"2022-11-10T09:04:24.42577Z\"\n    } ]\n  }, {\n    \"process\" : \"depwzy5amkg1vxx9nbph4fvehjrc3eked72yorgfc0nn6acqmgn9uhbbmdcv4wx6wpb8kjn2x5ig90n26wzz5w6u1yztvnw11zzknex254uiwa8c66xp9gefov4c39uikmn10ws0tc6i3lthen4a5mk5tkom5tgpyejuoi3e8ibz673zy3oh\",\n    \"links\" : [ {\n      \"link\" : \"5g6jujmv2xmm29dcxdpzda1ehh5b4kxb7w9j5dt7e5lvn7iuk6laiy438i7898gfp886qsquetp9i2d5da37j8c6xj8\",\n      \"startTime\" : \"2022-10-14T08:21:24.425856Z\",\n      \"endTime\" : \"2022-04-10T11:04:24.425895Z\"\n    } ]\n  }, {\n    \"process\" : \"lhkj2z5rylegkuv1yaqfa3ysh7lnn6zzk4d2428g7gql\",\n    \"links\" : [ {\n      \"link\" : \"ihqbsj99brp1b2olpayj70lh4vya2q6uj0ual6a0952axe31r01x5qe4oyemmuvgb1cdhudlbauws02s5agnli8tqrscgituqhdhlr0upzi1n7s0d9niqtvb6pfndqwhcc8d8h42oj9ifl63q4z55zjm4g\",\n      \"startTime\" : \"2022-08-07T12:04:24.425975Z\",\n      \"endTime\" : \"2023-02-20T09:33:24.42601Z\"\n    }, {\n      \"link\" : \"aks7fj789n3cez60ii1hk43fnub3h9s9zasfitp6o8lbd2a9wmt57i7iea5xcnyybsdd\",\n      \"startTime\" : \"2022-04-11T09:33:24.426119Z\",\n      \"endTime\" : \"2022-04-07T10:50:24.426238Z\"\n    }, {\n      \"link\" : \"5qrzjd8mxqylf4dljs0dn7kg6ntjg\",\n      \"startTime\" : \"2022-06-20T08:37:24.426293Z\",\n      \"endTime\" : \"2023-02-10T10:11:24.426332Z\"\n    }, {\n      \"link\" : \"m4lbovyfy6kajeczg3k2q98g2gt08tqveq7n70fsg7tw1ofzloo7hjtqgt3gacj1toqfkccxetx6b6kpceg7wf34o8djsq3ggkj02dpzpfnrr1lhw2btb94g7ad63jv6a4x9zljqo5wxygbvhf2aiwnrf2c8fe1xv3aaxhkvf8w44xbkku0u16k5jshqghn80ubldku\",\n      \"startTime\" : \"2022-10-15T09:55:24.426395Z\",\n      \"endTime\" : \"2023-01-10T11:43:24.42643Z\"\n    }, {\n      \"link\" : \"01jn25kpiump\",\n      \"startTime\" : \"2022-08-31T10:28:24.426487Z\",\n      \"endTime\" : \"2023-01-09T11:57:24.426523Z\"\n    }, {\n      \"link\" : \"pgxxur307dc7v2ktqzlmzii847defnmgr86xkxhk4ewmcrapjtai2q3he2o1vzijhuotlwx4t0ijtktbvjd7id4dstikx0omcsyx\",\n      \"startTime\" : \"2022-08-09T10:21:24.426576Z\",\n      \"endTime\" : \"2022-05-10T08:52:24.426614Z\"\n    } ]\n  }, {\n    \"process\" : \"ldiimbfj4k8p5s2g6lyo8xb0h8rwrqtqnf0ogwzphoksphcrekqea7ko38jrxktoujyei8ok12he3c0wnuzqjtbc719z0j22d1f6aerkuuxpvrq0wsk1rbqqlq1a7rnwu8uhclsie12lm1vya9v761dcw8fyuzkmyw12ibldhmm07ium\",\n    \"links\" : [ {\n      \"link\" : \"giiof2lofc9cq18xfilujcv66gmdjjx\",\n      \"startTime\" : \"2022-04-30T09:26:24.426707Z\",\n      \"endTime\" : \"2022-07-19T09:11:24.426741Z\"\n    }, {\n      \"link\" : \"vfnapj9km05jrvu86srmv9xwpawl5t68fx98kgg7t86qatfbetr3e9h8hltbsaesjq0fxwtco8ortybtfj5rmflgrv4ykx7af5y9kztob4uo70abudtfyhxcd97iwieha350ppj23350cxpw2r76hw25l6kq7hi9hzbp1i4egium4f0s4i76dsvpgc5veqc7vihwmu\",\n      \"startTime\" : \"2022-11-21T12:16:24.426803Z\",\n      \"endTime\" : \"2023-01-08T10:58:24.426835Z\"\n    }, {\n      \"link\" : \"ppqz\",\n      \"startTime\" : \"2022-10-02T11:04:24.426889Z\",\n      \"endTime\" : \"2022-12-22T10:01:24.426926Z\"\n    }, {\n      \"link\" : \"34yg65m2kme8rv6l4c3es5b7ml6uh0e1dbul7rbyq2bexj0\",\n      \"startTime\" : \"2023-01-13T09:44:24.426978Z\",\n      \"endTime\" : \"2023-01-06T11:53:24.427014Z\"\n    }, {\n      \"link\" : \"bgl8gip7yy73zwo52tf2fi4xcxf4t6v8e4xom4pakrje17r1wnni47ukscqv9xqd0ci5fxxbrc2jjfrowunl9mduuxyqmf0qmf6mhyxs1uch8w849me2xi3sngj004lbrpeoh\",\n      \"startTime\" : \"2022-10-21T09:28:24.427069Z\",\n      \"endTime\" : \"2023-01-13T10:59:24.427105Z\"\n    } ]\n  } ],\n  \"nextPageToken\" : \"xr303qo6pw79xemqny1xvbck4m9wc1a2eqo5cs1n95kyyjs9ecqjcxg9azvn8ihp2k20qbs12rpzy580ncd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5621610-a4ae-4855-a410-4d08e815fcaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.427425Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.batchSearchLinkProcesses",
          "schema" : {
            "description" : "Response message for BatchSearchLinkProcesses.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the subsequent call to get the next page. Omitted if there are no more pages in the response.",
                "type" : "string"
              },
              "processLinks" : {
                "description" : "An array of processes associated with the specified links.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1ProcessLinks"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "d53ac218-e972-4933-b6c1-0e173b1324ba",
    "name" : "Creates a new run.",
    "request" : {
      "urlPath" : "/v1/hku47c6nc475jnr52wgfc6bof9f1n311tji7n7dz86pwswzzpjrrp04ohjgm/runs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Pattie Waters V\",\n  \"name\" : \"Clay Christiansen\",\n  \"attributes\" : { },\n  \"startTime\" : \"2022-08-30T11:50:24.421981Z\",\n  \"endTime\" : \"2023-01-24T09:50:24.422011Z\",\n  \"state\" : \"FAILED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d53ac218-e972-4933-b6c1-0e173b1324ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.422208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.create",
          "schema" : {
            "description" : "A lineage run represents an execution of a process that creates lineage events.",
            "properties" : {
              "attributes" : {
                "description" : "Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.",
                "type" : "object"
              },
              "displayName" : {
                "description" : "Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`",
                "type" : "string"
              },
              "endTime" : {
                "description" : "Optional. The timestamp of the end of the run.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Required. The timestamp of the start of the run.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "state" : {
                "description" : "Required. The state of the run.",
                "enum" : [ "UNKNOWN", "STARTED", "COMPLETED", "FAILED", "ABORTED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "96f37bde-e148-4684-80dc-ec33d27a0441",
    "name" : "Lists runs in the given project and location. List order is descending by `start...",
    "request" : {
      "urlPath" : "/v1/psaag7h9na2prbgt1fcebgpghqd398cl3q71j2qn14zb961gsxsacanvtamwy1gw9ps3zvntk6c9zewo31bzsgtq5py/runs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"cg9l6r79683cjzslnfwsz0w9m1n7grm2x8nad8r1juusmjlj6f46bg03wlxfjtg11ym33toryi\",\n  \"runs\" : [ {\n    \"displayName\" : \"Lucio Larson\",\n    \"name\" : \"Lakeesha White\",\n    \"attributes\" : { },\n    \"startTime\" : \"2022-07-17T08:36:24.420137Z\",\n    \"endTime\" : \"2022-07-19T10:42:24.420258Z\",\n    \"state\" : \"STARTED\"\n  }, {\n    \"displayName\" : \"Dr. Ji Satterfield\",\n    \"name\" : \"Jess Greenfelder\",\n    \"attributes\" : { },\n    \"startTime\" : \"2022-09-10T11:38:24.420442Z\",\n    \"endTime\" : \"2022-11-13T09:26:24.42048Z\",\n    \"state\" : \"ABORTED\"\n  }, {\n    \"displayName\" : \"Amado Schmidt\",\n    \"name\" : \"Nella Lowe IV\",\n    \"attributes\" : { },\n    \"startTime\" : \"2022-12-04T10:33:24.420641Z\",\n    \"endTime\" : \"2023-03-02T09:13:24.420672Z\",\n    \"state\" : \"COMPLETED\"\n  }, {\n    \"displayName\" : \"Miss Deann Cartwright\",\n    \"name\" : \"Marsha Kiehn\",\n    \"attributes\" : { },\n    \"startTime\" : \"2022-11-16T09:46:24.42083Z\",\n    \"endTime\" : \"2023-01-29T09:17:24.420869Z\",\n    \"state\" : \"COMPLETED\"\n  }, {\n    \"displayName\" : \"Arron Rogahn III\",\n    \"name\" : \"Loris Wisoky\",\n    \"attributes\" : { },\n    \"startTime\" : \"2023-01-22T10:27:24.42102Z\",\n    \"endTime\" : \"2022-03-22T11:36:24.42105Z\",\n    \"state\" : \"ABORTED\"\n  }, {\n    \"displayName\" : \"Angel Lakin\",\n    \"name\" : \"Mr. Loan Olson\",\n    \"attributes\" : { },\n    \"startTime\" : \"2022-12-12T10:28:24.421202Z\",\n    \"endTime\" : \"2022-08-18T11:15:24.421236Z\",\n    \"state\" : \"STARTED\"\n  }, {\n    \"displayName\" : \"Porfirio Hane\",\n    \"name\" : \"Ms. Erlene Homenick\",\n    \"attributes\" : { },\n    \"startTime\" : \"2022-07-09T10:15:24.42143Z\",\n    \"endTime\" : \"2022-12-30T11:36:24.421464Z\",\n    \"state\" : \"FAILED\"\n  }, {\n    \"displayName\" : \"Bernetta Heller\",\n    \"name\" : \"Domingo Kutch\",\n    \"attributes\" : { },\n    \"startTime\" : \"2023-02-13T09:46:24.421625Z\",\n    \"endTime\" : \"2022-10-12T09:02:24.421656Z\",\n    \"state\" : \"COMPLETED\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96f37bde-e148-4684-80dc-ec33d27a0441",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.421815Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.list",
          "schema" : {
            "description" : "Response message for ListRuns.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              },
              "runs" : {
                "description" : "The runs from the specified project and location.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1Run"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "8779db53-91fe-4e8f-a915-5f10830fe891",
    "name" : "Creates a new process.",
    "request" : {
      "urlPath" : "/v1/013nczcm26u3buhjkii2fitn9xt49t2dvs5jceacl5zijy4vptj7ddow65fqgz3xi4za9t4gltixtv8gg2vp707nbhsyfvfivwuwzas0rmqre728bq13ohcqgp0g2x0ak8swsfbyo975hbyb80/processes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Marissa Breitenberg\",\n  \"origin\" : {\n    \"sourceType\" : \"BIGQUERY\",\n    \"name\" : \"Keven Roberts\"\n  },\n  \"name\" : \"Gene Abshire\",\n  \"attributes\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8779db53-91fe-4e8f-a915-5f10830fe891",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.419849Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.create",
          "schema" : {
            "description" : "A process is the definition of a data transformation operation.",
            "properties" : {
              "attributes" : {
                "description" : "Optional. The attributes of the process. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the process). Up to 100 attributes are allowed.",
                "type" : "object"
              },
              "displayName" : {
                "description" : "Optional. A human-readable name you can set to display in a user interface. Must be not longer than 200 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`",
                "type" : "string"
              },
              "name" : {
                "description" : "Immutable. The resource name of the lineage process. Format: `projects/{project}/locations/{location}/processes/{process}`. Can be specified or auto-assigned. {process} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "origin" : {
                "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1Origin"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "2e027edd-6227-43cd-8c7e-bc06293055b9",
    "name" : "List processes in the given project and location. List order is descending by in...",
    "request" : {
      "urlPath" : "/v1/91972e5brvge6698frjyvpqbdcveja6tsavtw4xq4e48sr/processes",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"processes\" : [ {\n    \"displayName\" : \"Joe Hammes IV\",\n    \"origin\" : {\n      \"sourceType\" : \"LOOKER_STUDIO\",\n      \"name\" : \"Ms. Clair Yundt\"\n    },\n    \"name\" : \"Russ Predovic\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Fannie Kihn\",\n    \"origin\" : {\n      \"sourceType\" : \"SOURCE_TYPE_UNSPECIFIED\",\n      \"name\" : \"Janett Anderson\"\n    },\n    \"name\" : \"Alexander Heidenreich\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Aracelis Kerluke\",\n    \"origin\" : {\n      \"sourceType\" : \"CUSTOM\",\n      \"name\" : \"Lien Thiel\"\n    },\n    \"name\" : \"Reba Torp\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Lacie Little DVM\",\n    \"origin\" : {\n      \"sourceType\" : \"DATA_FUSION\",\n      \"name\" : \"Sheila Kiehn\"\n    },\n    \"name\" : \"Corrinne Schumm\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Nilsa Schamberger\",\n    \"origin\" : {\n      \"sourceType\" : \"LOOKER_STUDIO\",\n      \"name\" : \"Kelsi Ratke\"\n    },\n    \"name\" : \"Gema Wisoky IV\",\n    \"attributes\" : { }\n  }, {\n    \"displayName\" : \"Dr. Lasandra Lind\",\n    \"origin\" : {\n      \"sourceType\" : \"DATAPROC\",\n      \"name\" : \"Fidel Gutmann\"\n    },\n    \"name\" : \"Autumn Jacobs\",\n    \"attributes\" : { }\n  } ],\n  \"nextPageToken\" : \"n7v0nqioneli37yfj811mdbilxg2v45b8lccyqlv8x5kyxq4vqnfiag20q14v5b0okkh3o0ynp981b0urz6zmz245zmzp1trlsr2fe3gy76mo2a4z3zbvqizrkkltrd1lh6kemypkbsyice6g5pl5y1wm0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2e027edd-6227-43cd-8c7e-bc06293055b9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.419408Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.list",
          "schema" : {
            "description" : "Response message for ListProcesses.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              },
              "processes" : {
                "description" : "The processes from the specified project and location.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1Process"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "c5cb9cb8-9596-4df0-8a7a-5f07278ede6b",
    "name" : "Creates a new lineage event.",
    "request" : {
      "urlPath" : "/v1/ukcewz7ctzckm8ly9tbvqdkwl0ttxi9saqxocdy2pl9v291eir0mbxgb1vddoxp5lpz/lineageEvents",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Walter Waters\",\n  \"links\" : [ {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Merry Wisozk\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Thanh Schneider PhD\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Latonia Cruickshank\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Tonia Stanton\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Buddy Howe\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Miss Lucila Murazik\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Gracie Bernier\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Tu O'Conner\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Toby Lehner\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Lawrence Bauch\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Alexandra Blick\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Fredda Parisian\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Mr. Jacklyn McClure\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Simonne Reinger\"\n    }\n  } ],\n  \"startTime\" : \"2022-04-12T10:37:24.417115Z\",\n  \"endTime\" : \"2023-02-08T09:58:24.417156Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5cb9cb8-9596-4df0-8a7a-5f07278ede6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.417333Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.lineageEvents.create",
          "schema" : {
            "description" : "A lineage event represents an operation on assets. Within the operation, the data flows from the source to the target defined in the links field.",
            "properties" : {
              "endTime" : {
                "description" : "Optional. The end of the transformation which resulted in this lineage event. For streaming scenarios, it should be the end of the period from which the lineage is being reported.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "links" : {
                "description" : "Optional. List of source-target pairs. Can't contain more than 100 tuples.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1EventLink"
                },
                "type" : "array"
              },
              "name" : {
                "description" : "Immutable. The resource name of the lineage event. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`. Can be specified or auto-assigned. {lineage_event} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Optional. The beginning of the transformation which resulted in this lineage event. For streaming scenarios, it should be the beginning of the period from which the lineage is being reported.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "3a82f647-0482-400b-afef-ec3470ee53de",
    "name" : "Lists lineage events in the given project and location. The list order is not de...",
    "request" : {
      "urlPath" : "/v1/wo9blntwssczm83kqdvgd4f77s4ofh163q05vgpypbzwf7dfmtsfi66qatebep0ew5rqxb475wih1mbm1x2mpfhxefnscy89el69zw9aunx68a3lfje739hmb171hkqpe7k3gf09alamo2fktxgf6yws8jpx9u4sjqqby3lbdlze/lineageEvents",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"f0wzanjkqx19nucaryfcaiysug5prl7khizwhfonvey19js31kr78uhar1s2p95bvx0ussmesbabz2joovzg4l16uafj0luknz8smxc41my7t8mujafl2z96mdcm3\",\n  \"lineageEvents\" : [ {\n    \"name\" : \"Miss Emil Stark\",\n    \"links\" : [ {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Miss Jeanetta Kling\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Jennefer Ullrich V\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Harold Mitchell\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Nathanael Goyette\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Wei Brakus\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Savannah Torp\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Dexter Ziemann\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Shaquana Wiza\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Darci Kemmer Jr.\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Jesse Stark\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Jackie Walsh\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"George O'Keefe\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Tonisha Senger\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Dr. Jeramy Haag\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Queen Kuhn IV\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Reinaldo Witting\"\n      }\n    } ],\n    \"startTime\" : \"2022-10-21T09:55:24.414649Z\",\n    \"endTime\" : \"2022-08-19T08:45:24.414689Z\"\n  }, {\n    \"name\" : \"Devora Marvin\",\n    \"links\" : [ {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Shanice McLaughlin\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Ms. Nicky Smith\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Josie Hane\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Marina O'Keefe\"\n      }\n    }, {\n      \"source\" : {\n        \"fullyQualifiedName\" : \"Damion Auer\"\n      },\n      \"target\" : {\n        \"fullyQualifiedName\" : \"Riley Koepp\"\n      }\n    } ],\n    \"startTime\" : \"2022-10-04T12:01:24.415601Z\",\n    \"endTime\" : \"2022-06-11T11:22:24.415648Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a82f647-0482-400b-afef-ec3470ee53de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.415872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.lineageEvents.list",
          "schema" : {
            "description" : "Response message for ListLineageEvents.",
            "properties" : {
              "lineageEvents" : {
                "description" : "Lineage events from the specified project and location.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1LineageEvent"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The token to specify as `page_token` in the next call to get the next page. If this field is omitted, there are no subsequent pages.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "1eb3ec75-cd64-4f6f-98b7-78ea1104c884",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1/Charis+Rowe:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1eb3ec75-cd64-4f6f-98b7-78ea1104c884",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.413313Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "ad82682c-32a1-458d-aae5-ff9d7aad4d33",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1/Ms.+Darrell+Zieme/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Ian Raynor\",\n    \"error\" : {\n      \"code\" : 364065752,\n      \"details\" : [ { }, { } ],\n      \"message\" : \"Voluptatibus dicta quasi voluptatem in. Doloremque et excepturi vel voluptatibus illo cum harum. Dolor nisi ipsa molestiae aspernatur. Laborum sint ex quidem nulla neque veritatis rem.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"3l82cmgvm1t\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ad82682c-32a1-458d-aae5-ff9d7aad4d33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.413174Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleLongrunningOperation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "6be8f0dd-1e9b-48e9-9bce-12894c9b1597",
    "name" : "Updates a run.",
    "request" : {
      "urlPath" : "/v1/Josiah+Denesik",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"displayName\" : \"Ed Gutmann\",\n  \"name\" : \"Chadwick Murphy\",\n  \"attributes\" : { },\n  \"startTime\" : \"2022-06-16T10:58:24.412364Z\",\n  \"endTime\" : \"2022-12-29T08:58:24.412402Z\",\n  \"state\" : \"ABORTED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6be8f0dd-1e9b-48e9-9bce-12894c9b1597",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.412637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.patch",
          "schema" : {
            "description" : "A lineage run represents an execution of a process that creates lineage events.",
            "properties" : {
              "attributes" : {
                "description" : "Optional. The attributes of the run. Should only be used for the purpose of non-semantic management (classifying, describing or labeling the run). Up to 100 attributes are allowed.",
                "type" : "object"
              },
              "displayName" : {
                "description" : "Optional. A human-readable name you can set to display in a user interface. Must be not longer than 1024 characters and only contain UTF-8 letters or numbers, spaces or characters like `_-:&.`",
                "type" : "string"
              },
              "endTime" : {
                "description" : "Optional. The timestamp of the end of the run.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "name" : {
                "description" : "Immutable. The resource name of the run. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}`. Can be specified or auto-assigned. {run} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Required. The timestamp of the start of the run.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "state" : {
                "description" : "Required. The state of the run.",
                "enum" : [ "UNKNOWN", "STARTED", "COMPLETED", "FAILED", "ABORTED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "dc828355-d51a-4c59-9900-a008c8794f94",
    "name" : "Gets details of a specified lineage event.",
    "request" : {
      "urlPath" : "/v1/Agatha+Schoen",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Iona Nolan MD\",\n  \"links\" : [ {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Darryl Padberg II\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Gabriele Roob\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Robbie Von\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Fausto Greenfelder\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Florinda Hintz DVM\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Giovanni Collins I\"\n    }\n  }, {\n    \"source\" : {\n      \"fullyQualifiedName\" : \"Mr. Jesus Schulist\"\n    },\n    \"target\" : {\n      \"fullyQualifiedName\" : \"Rob Feeney\"\n    }\n  } ],\n  \"startTime\" : \"2022-06-08T10:39:24.411914Z\",\n  \"endTime\" : \"2022-12-25T11:23:24.411953Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc828355-d51a-4c59-9900-a008c8794f94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.412113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.lineageEvents.get",
          "schema" : {
            "description" : "A lineage event represents an operation on assets. Within the operation, the data flows from the source to the target defined in the links field.",
            "properties" : {
              "endTime" : {
                "description" : "Optional. The end of the transformation which resulted in this lineage event. For streaming scenarios, it should be the end of the period from which the lineage is being reported.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "links" : {
                "description" : "Optional. List of source-target pairs. Can't contain more than 100 tuples.",
                "items" : {
                  "$ref" : "#/components/schemas/GoogleCloudDatacatalogLineageV1EventLink"
                },
                "type" : "array"
              },
              "name" : {
                "description" : "Immutable. The resource name of the lineage event. Format: `projects/{project}/locations/{location}/processes/{process}/runs/{run}/lineageEvents/{lineage_event}`. Can be specified or auto-assigned. {lineage_event} must be not longer than 200 characters and only contain characters in a set: `a-zA-Z0-9_-:.`",
                "type" : "string"
              },
              "startTime" : {
                "description" : "Optional. The beginning of the transformation which resulted in this lineage event. For streaming scenarios, it should be the beginning of the period from which the lineage is being reported.",
                "format" : "google-datetime",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "bd1253eb-2f80-46e4-b5ef-9e11f9d39bc3",
    "name" : "Deletes the lineage event with the specified name.",
    "request" : {
      "urlPath" : "/v1/Donald+Runolfsdottir+Sr.",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd1253eb-2f80-46e4-b5ef-9e11f9d39bc3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:20:24.411241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "datalineage.projects.locations.processes.runs.lineageEvents.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  } ]
}