{
  "mappings" : [ {
    "id" : "43461e32-33f3-30be-b639-fed4ce35e2eb",
    "name" : "Retrieve individual audit event",
    "request" : {
      "urlPath" : "/events/k80s",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error\" : \"Not Found\",\n  \"message\" : \"Event with provided id: aaaaaaaa-bbbb-cccc-dddd-0123456789ab was not found\",\n  \"status\" : 404\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "43461e32-33f3-30be-b639-fed4ce35e2eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvent",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "A human readable description of the error XXX",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A longer description of the error YYY",
                "example" : "Event with provided id: aaaaaaaa-bbbb-cccc-dddd-0123456789ab was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The HTTP Status code of the error",
                "example" : 404,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "e390cfc0-c934-3060-b13e-c4687adefb0e",
    "name" : "Retrieve individual audit event",
    "request" : {
      "urlPath" : "/events/eowd",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Full authentication is required. JWT was not found in \\\"Authorization\\\" HTTP header.\",\n  \"status\" : 401\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e390cfc0-c934-3060-b13e-c4687adefb0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvent",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "A human readable description of the error",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A longer description of the error",
                "example" : "Full authentication is required. JWT was not found in \"Authorization\" HTTP header.",
                "type" : "string"
              },
              "status" : {
                "description" : "The HTTP Status code of the error",
                "example" : 401,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "ace4bfe2-861b-376f-931a-209a97808b4f",
    "name" : "Retrieve individual audit event",
    "request" : {
      "urlPath" : "/events/y0h7",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"user_email\" : \"user@example.org\",\n  \"_links\" : {\n    \"self\" : {\n      \"href\" : \"https://api.nexmo.com/beta/audit/events/aaaaaaaa-bbbb-cccc-dddd-0123456789ab\"\n    }\n  },\n  \"created_at\" : \"2018-07-04T11:41:32\",\n  \"source\" : \"CD\",\n  \"source_ip\" : \"192.0.2.0\",\n  \"account_id\" : \"abcd1234\",\n  \"event_type\" : \"APP_CREATE\",\n  \"source_country\" : \"GB\",\n  \"user_id\" : 1234567,\n  \"context\" : {\n    \"created\" : {\n      \"accountId\" : \"abcdef01\",\n      \"answer_url\" : {\n        \"method\" : \"GET\",\n        \"url\" : \"https://example.org/call\"\n      },\n      \"appId\" : \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\",\n      \"event_url\" : {\n        \"method\" : \"POST\",\n        \"url\" : \"https://example.org/event\"\n      },\n      \"name\" : \"My voice app\",\n      \"type\" : \"voice\"\n    }\n  },\n  \"id\" : \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\",\n  \"event_type_description\" : \"Application created.\",\n  \"source_description\" : \"Customer Dashboard\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ace4bfe2-861b-376f-931a-209a97808b4f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvent",
          "schema" : {
            "properties" : {
              "_links" : {
                "$ref" : "#/components/schemas/EventLink"
              },
              "account_id" : {
                "description" : "The NEXMO_API_KEY of the Vonage API account that the audit event is associated with.",
                "example" : "abcd1234",
                "type" : "string"
              },
              "context" : {
                "description" : "A valid JSON object with information detailing the context of the audit event.",
                "example" : {
                  "created" : {
                    "accountId" : "abcdef01",
                    "answer_url" : {
                      "method" : "GET",
                      "url" : "https://example.org/call"
                    },
                    "appId" : "aaaaaaaa-bbbb-cccc-dddd-0123456789ab",
                    "event_url" : {
                      "method" : "POST",
                      "url" : "https://example.org/event"
                    },
                    "name" : "My voice app",
                    "type" : "voice"
                  }
                },
                "oneOf" : [ {
                  "$ref" : "#/components/schemas/ContextAppCreate"
                }, {
                  "$ref" : "#/components/schemas/ContextNumberLinking"
                }, {
                  "$ref" : "#/components/schemas/ContextNumberUpdate"
                } ],
                "type" : "object"
              },
              "created_at" : {
                "description" : "When the audit event was created.",
                "example" : "2018-07-04T11:41:32",
                "format" : "date",
                "type" : "string"
              },
              "event_type" : {
                "$ref" : "#/components/schemas/EventTypes"
              },
              "event_type_description" : {
                "description" : "A description of the event type",
                "example" : "Application created.",
                "type" : "string"
              },
              "id" : {
                "description" : "UUID of the audit event",
                "example" : "aaaaaaaa-bbbb-cccc-dddd-0123456789ab",
                "type" : "string"
              },
              "source" : {
                "description" : "The source of the event.\nCD: Customer Dashboard DEVAPI: via Developer API\n",
                "enum" : [ "CD", "DEVAPI" ],
                "example" : "CD",
                "type" : "string"
              },
              "source_country" : {
                "description" : "ISO 3166-1 Alpha-2 country code recorded for the event.",
                "example" : "GB",
                "type" : "string"
              },
              "source_description" : {
                "description" : "Description of the audit event source.",
                "enum" : [ "Customer Dashboard", "Developer API" ],
                "example" : "Customer Dashboard",
                "format" : "A human readable description of the `source`.",
                "type" : "string"
              },
              "source_ip" : {
                "description" : "The IP address used to make the account change.",
                "example" : "192.0.2.0",
                "format" : "ipv4",
                "type" : "string"
              },
              "user_email" : {
                "description" : "Email of the user whose account the audit event is associated with.",
                "example" : "user@example.org",
                "format" : "email",
                "type" : "string"
              },
              "user_id" : {
                "description" : "The ID of the user that the audit event is associated with.",
                "example" : 1234567,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "81718543-152f-3fb8-9caa-58ae9c10bf53",
    "name" : "Retrieve audit event types",
    "request" : {
      "urlPath" : "/events",
      "method" : "OPTIONS"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"error\" : \"Forbidden\",\n  \"message\" : \"An example goes here\",\n  \"status\" : 403\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81718543-152f-3fb8-9caa-58ae9c10bf53",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEventsOptions",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "A human readable description of the error",
                "example" : "Forbidden",
                "type" : "string"
              },
              "message" : {
                "description" : "A longer description of the error",
                "example" : "An example goes here",
                "type" : "string"
              },
              "status" : {
                "description" : "The HTTP Status code of the error",
                "example" : 403,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "df8f391c-1a5e-307a-b962-b1f72a7d2cac",
    "name" : "Retrieve audit event types",
    "request" : {
      "urlPath" : "/events",
      "method" : "OPTIONS"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Full authentication is required. JWT was not found in \\\"Authorization\\\" HTTP header.\",\n  \"status\" : 401\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df8f391c-1a5e-307a-b962-b1f72a7d2cac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEventsOptions",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "A human readable description of the error",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A longer description of the error",
                "example" : "Full authentication is required. JWT was not found in \"Authorization\" HTTP header.",
                "type" : "string"
              },
              "status" : {
                "description" : "The HTTP Status code of the error",
                "example" : 401,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "b84be459-456c-3772-bc98-f20d565a1f9a",
    "name" : "Retrieve audit event types",
    "request" : {
      "urlPath" : "/events",
      "method" : "OPTIONS"
    },
    "response" : {
      "status" : 204,
      "body" : "{\n  \"error\" : \"No Content\",\n  \"message\" : \"No content\",\n  \"status\" : 204\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b84be459-456c-3772-bc98-f20d565a1f9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEventsOptions",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "A human readable description of the error AAA",
                "example" : "No Content",
                "type" : "string"
              },
              "message" : {
                "description" : "A longer description of the error BBB",
                "example" : "No content",
                "type" : "string"
              },
              "status" : {
                "description" : "The HTTP Status code of the error",
                "example" : 204,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "171f74f0-786b-304f-9dc9-e94902232cc9",
    "name" : "Retrieve audit event types",
    "request" : {
      "urlPath" : "/events",
      "method" : "OPTIONS"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"eventTypes\" : [ {\n    \"description\" : \"Application created.\",\n    \"type\" : \"APP_CREATE\"\n  }, {\n    \"description\" : \"Application created.\",\n    \"type\" : \"APP_CREATE\"\n  }, {\n    \"description\" : \"Application created.\",\n    \"type\" : \"APP_CREATE\"\n  }, {\n    \"description\" : \"Application created.\",\n    \"type\" : \"APP_CREATE\"\n  }, {\n    \"description\" : \"Application created.\",\n    \"type\" : \"APP_CREATE\"\n  }, {\n    \"description\" : \"Application created.\",\n    \"type\" : \"APP_CREATE\"\n  }, {\n    \"description\" : \"Application created.\",\n    \"type\" : \"APP_CREATE\"\n  }, {\n    \"description\" : \"Application created.\",\n    \"type\" : \"APP_CREATE\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "171f74f0-786b-304f-9dc9-e94902232cc9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEventsOptions",
          "schema" : {
            "properties" : {
              "eventTypes" : {
                "description" : "An array of audit event types.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditEventType"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "555bfd85-5430-341c-a88c-6b1060740822",
    "name" : "Retrieve audit events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"error\" : \"Not Found\",\n  \"message\" : \"Event with provided id: aaaaaaaa-bbbb-cccc-dddd-0123456789ab was not found\",\n  \"status\" : 404\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "555bfd85-5430-341c-a88c-6b1060740822",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "A human readable description of the error XXX",
                "example" : "Not Found",
                "type" : "string"
              },
              "message" : {
                "description" : "A longer description of the error YYY",
                "example" : "Event with provided id: aaaaaaaa-bbbb-cccc-dddd-0123456789ab was not found",
                "type" : "string"
              },
              "status" : {
                "description" : "The HTTP Status code of the error",
                "example" : 404,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "4ed17070-c649-3283-b3be-5238387dd1bc",
    "name" : "Retrieve audit events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 403,
      "body" : "{\n  \"error\" : \"Forbidden\",\n  \"message\" : \"An example goes here\",\n  \"status\" : 403\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ed17070-c649-3283-b3be-5238387dd1bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "A human readable description of the error",
                "example" : "Forbidden",
                "type" : "string"
              },
              "message" : {
                "description" : "A longer description of the error",
                "example" : "An example goes here",
                "type" : "string"
              },
              "status" : {
                "description" : "The HTTP Status code of the error",
                "example" : 403,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "dec60416-a924-32a7-895c-77ccb4ce6082",
    "name" : "Retrieve audit events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"error\" : \"Unauthorized\",\n  \"message\" : \"Full authentication is required. JWT was not found in \\\"Authorization\\\" HTTP header.\",\n  \"status\" : 401\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dec60416-a924-32a7-895c-77ccb4ce6082",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "properties" : {
              "error" : {
                "description" : "A human readable description of the error",
                "example" : "Unauthorized",
                "type" : "string"
              },
              "message" : {
                "description" : "A longer description of the error",
                "example" : "Full authentication is required. JWT was not found in \"Authorization\" HTTP header.",
                "type" : "string"
              },
              "status" : {
                "description" : "The HTTP Status code of the error",
                "example" : 401,
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "26b3166e-d517-39c7-a973-5a34055619bc",
    "name" : "Retrieve audit events",
    "request" : {
      "urlPath" : "/events",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"_embedded\" : {\n    \"events\" : [ {\n      \"user_email\" : \"user@example.org\",\n      \"_links\" : {\n        \"self\" : {\n          \"href\" : \"https://api.nexmo.com/beta/audit/events/aaaaaaaa-bbbb-cccc-dddd-0123456789ab\"\n        }\n      },\n      \"created_at\" : \"2018-07-04T11:41:32\",\n      \"source\" : \"CD\",\n      \"source_ip\" : \"192.0.2.0\",\n      \"account_id\" : \"abcd1234\",\n      \"event_type\" : \"APP_CREATE\",\n      \"source_country\" : \"GB\",\n      \"user_id\" : 1234567,\n      \"context\" : {\n        \"created\" : {\n          \"accountId\" : \"abcdef01\",\n          \"answer_url\" : {\n            \"method\" : \"GET\",\n            \"url\" : \"https://example.org/call\"\n          },\n          \"appId\" : \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\",\n          \"event_url\" : {\n            \"method\" : \"POST\",\n            \"url\" : \"https://example.org/event\"\n          },\n          \"name\" : \"My voice app\",\n          \"type\" : \"voice\"\n        }\n      },\n      \"id\" : \"aaaaaaaa-bbbb-cccc-dddd-0123456789ab\",\n      \"event_type_description\" : \"Application created.\",\n      \"source_description\" : \"Customer Dashboard\"\n    } ]\n  },\n  \"_links\" : {\n    \"next\" : {\n      \"href\" : \"http://api.nexmo.com/beta/audit/events?page=2&size=30\"\n    },\n    \"last\" : {\n      \"href\" : \"http://api.nexmo.com/beta/audit/events?page=2&size=30\"\n    },\n    \"self\" : {\n      \"href\" : \"http://api.nexmo.com/beta/audit/events\"\n    }\n  },\n  \"page\" : {\n    \"number\" : 1,\n    \"size\" : 100,\n    \"totalPages\" : 2,\n    \"totalElements\" : 120\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26b3166e-d517-39c7-a973-5a34055619bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getEvents",
          "schema" : {
            "properties" : {
              "_embedded" : {
                "description" : "Container containing the `events` array.",
                "properties" : {
                  "events" : {
                    "items" : {
                      "$ref" : "#/components/schemas/AuditEvent"
                    },
                    "type" : "array"
                  }
                },
                "type" : "object"
              },
              "_links" : {
                "$ref" : "#/components/schemas/PaginationLinks"
              },
              "page" : {
                "$ref" : "#/components/schemas/PaginationData"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  } ]
}