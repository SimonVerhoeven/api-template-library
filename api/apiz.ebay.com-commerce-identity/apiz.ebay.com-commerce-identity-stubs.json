{
  "mappings" : [ {
    "id" : "10bd7453-cf89-4317-937b-3e2704945da1",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 500",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "10bd7453-cf89-4317-937b-3e2704945da1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:11.228074Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "976c1a6a-7380-4bf2-aad8-17ff40eb44a9",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 404",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "976c1a6a-7380-4bf2-aad8-17ff40eb44a9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:11.228047Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "8b5a4ce6-3aef-4562-9a12-658dd815639d",
    "name" : "This method retrieves the account profile information for an authenticated user,... (application/json)",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountType\" : \"1ply9m3eoqaagutn779e95sir5qymig8dmh9t6rmx7ukf5ien66r5syvpp1yv8oo5kgln1fx2fy81jmoo9ljq8ghm\",\n  \"businessAccount\" : {\n    \"primaryPhone\" : {\n      \"number\" : \"1-662-680-4769\",\n      \"phoneType\" : \"jkfxd8uqxlfjtz8hwnjwr0gnezs4eags29woehb9g8w6rlnqz8yeqb4td239a1656syiwqbjx33afluwgr455ho6gjjk\",\n      \"countryCode\" : \"bbbbh\"\n    },\n    \"website\" : \"mzpjwy8nrz7gitspf\",\n    \"address\" : {\n      \"country\" : \"Egypt\",\n      \"stateOrProvince\" : \"eq5aem7ag9f0lglr3o4bijynrw0pvdygpuyptbn8u22zvn0dj9alfayqgsnbyepgf2mfx4hls1te43qccs5gzum3casndukfw92pj6on209lv0rwmtedvyaqq33e9eslhphquwaot85ctb4lqc5zvgya6\",\n      \"city\" : \"Hartmannview\",\n      \"postalCode\" : \"55493\",\n      \"county\" : \"0c0p782ck7tb8qg4c3wz15rk2e20pyurzuqhy3b1kiysi9qugjzl1pnz8ps5dhfmtpj8dtvk1ieh68xv2fuvk6c6d8jokl3uotivjayov12zqcbzy1b74ha4wfp1z9y29ikxafwe9hpc73i9r6k\",\n      \"addressLine1\" : \"8599 Stephenie Crescent\",\n      \"addressLine2\" : \"Suite 780\"\n    },\n    \"doingBusinessAs\" : \"w4ewqeee82kaderzel0ptnu46fj543ypqjh5ie9o2tkxni316kalrlat1u2r6jhnafjdu3297n2c2yubqyedevyf8e7gr85ja15j2nmh6agumxsmpovq3l6akmzpjhylgwfo2k0sc0msiqm03xe8bjeugzh8abhl0k0jdr0i4kd20u\",\n    \"primaryContact\" : {\n      \"firstName\" : \"Stacey\",\n      \"lastName\" : \"Greenholt\"\n    },\n    \"name\" : \"Leandro McGlynn\",\n    \"email\" : \"cp9n7yh0cgqfj3e57sqct47vewjnlijjiqmsjbdbidrptj5iihed9mpn0skbft17alfeleyqh1pwxeizowqdymeyyekf3lzybo2qhq11fatm0f6sdrklbefuhqps3d5wqltq839rk6rajvsvm4lscy\",\n    \"secondaryPhone\" : {\n      \"number\" : \"228-714-4905\",\n      \"phoneType\" : \"i27d7kbqwpud4fk0lb7lsdtfwlgxn75pmic8kbq8fm5zsxixtxnm8fwzmgtex6nt028j5ijfxb58d97qlwapj4xe5pp7n012z9uov1b03mj2kusctd6cw32h1908k1m0cp7p99ye21lvot9u1od5sgr4y03loa8agkwsg98qp59xi9llc1y6eoimgita4q75\",\n      \"countryCode\" : \"kkkkr\"\n    }\n  },\n  \"individualAccount\" : {\n    \"firstName\" : \"Clayton\",\n    \"lastName\" : \"Pouros\",\n    \"primaryPhone\" : {\n      \"number\" : \"1-205-061-7504\",\n      \"phoneType\" : \"kxec5be97q3ouh04wftxv\",\n      \"countryCode\" : \"nnnni\"\n    },\n    \"registrationAddress\" : {\n      \"country\" : \"Vanuatu\",\n      \"stateOrProvince\" : \"krs0l2w\",\n      \"city\" : \"North Jacelynberg\",\n      \"postalCode\" : \"11030\",\n      \"county\" : \"esq0e6b1w2yu81dga9ct2ml4bfjbxqr8ejbku00qbdatgfv4eud72irry2umex32rz1o\",\n      \"addressLine1\" : \"321 Greenfelder Springs\",\n      \"addressLine2\" : \"Suite 360\"\n    },\n    \"email\" : \"1z6kfo1faidv08uhw0j8bvhltrkfzolewiazicu2lzldbb398vty630v62nja6xoeynupm94lin0ntrlad6r70ji6tpqk6m74yxq9gxl5imt13l51gmun2uekof1uzm16mom5v6lfscb4w\",\n    \"secondaryPhone\" : {\n      \"number\" : \"181.982.8548 x128\",\n      \"phoneType\" : \"nf7ezg64dy6rzzfc129t2prtjscwtio1myh2exdjse5ajfwnpr7wjl5kn82qko1truj6b0gaq4ornvv2kyi2al64ktzv60enam8ng7r83wkx74f1wwq4xvpdfp34hmyokrpyfcruodwq3wo9lh0k\",\n      \"countryCode\" : \"sssss\"\n    }\n  },\n  \"registrationMarketplaceId\" : \"3d4h\",\n  \"userId\" : \"dsb7\",\n  \"status\" : \"6pacocf8nmx7dv1sfmtn9gasy39z1zuzbwdr8x03q12z25int2hvihn2hd5mkvbbba8irqrc03awbkatnltd47ok6v9twiy44sp0gfz843wpbc0a1cg9ys1ij5qmm01uokr284t18lkzwl1jvy2ukadkik2et1hux1i\",\n  \"username\" : \"guillermo.doyle\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b5a4ce6-3aef-4562-9a12-658dd815639d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:11.227979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "description" : "The type that defines the fields for the getUser method.",
            "properties" : {
              "accountType" : {
                "description" : "Indicates the user account type. This is determined when the user registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in the following countries: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, EBAY_PL Valid Values: BUSINESS or INDIVIDUAL Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:AccountTypeEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "businessAccount" : {
                "$ref" : "#/components/schemas/BusinessAccount"
              },
              "individualAccount" : {
                "$ref" : "#/components/schemas/IndividualAccount"
              },
              "registrationMarketplaceId" : {
                "description" : "The eBay site on which the account is registered. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:MarketplaceIdEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "status" : {
                "description" : "Indicates the user's account status. Possible values: CONFIRMED, UNCONFIRMED, ACCOUNTONHOLD and UNDETERMINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:UserStatusEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "userId" : {
                "description" : "The eBay immutable user ID of the user's account and can always be used to identify the user.",
                "type" : "string"
              },
              "username" : {
                "description" : "The user name, which was specific by the user when they created the account. Note: This value can be changed by the user.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  } ]
}