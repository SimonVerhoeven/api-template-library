{
  "mappings" : [ {
    "id" : "7e0b54c6-7cbc-4a10-bdcc-2a95026c7116",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e0b54c6-7cbc-4a10-bdcc-2a95026c7116",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.202186Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "1f3dcc80-22e0-4b4d-81e6-9a6ec1c28205",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f3dcc80-22e0-4b4d-81e6-9a6ec1c28205",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.20199Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "19a87c5d-70d2-4970-9f48-6ad89098737c",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19a87c5d-70d2-4970-9f48-6ad89098737c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.201786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "6999b434-4a4e-4689-821e-07a0358dcb56",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6999b434-4a4e-4689-821e-07a0358dcb56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.201294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "56bbadf4-9f26-4337-b6d5-68dadd17ef95",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56bbadf4-9f26-4337-b6d5-68dadd17ef95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.201116Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "c36fb6bc-52f7-40fc-94b7-51eb04d94219",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c36fb6bc-52f7-40fc-94b7-51eb04d94219",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.200876Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "fab05925-a43c-4f2d-8d81-484b67c3d6e1",
    "name" : "Insurance Policy - Two Wheeler (application/json)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fab05925-a43c-4f2d-8d81-484b67c3d6e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.200692Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "d129f5f4-6a79-4742-99f2-a6059d4041c7",
    "name" : "Insurance Policy - Two Wheeler (application/pdf)",
    "request" : {
      "urlPath" : "/twipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "d129f5f4-6a79-4742-99f2-a6059d4041c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.200496Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "twipc"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "7a6877d3-f23d-451b-8f6c-97fdaae00ef2",
    "name" : "Insurance Policy - Travel (application/json)",
    "request" : {
      "urlPath" : "/tripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a6877d3-f23d-451b-8f6c-97fdaae00ef2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.200357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "3a9a1c74-ab9a-4218-9c06-2edc21611368",
    "name" : "Insurance Policy - Travel (application/json)",
    "request" : {
      "urlPath" : "/tripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a9a1c74-ab9a-4218-9c06-2edc21611368",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.200175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "f0e7be38-5809-407a-961e-2454e20deb84",
    "name" : "Insurance Policy - Travel (application/json)",
    "request" : {
      "urlPath" : "/tripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f0e7be38-5809-407a-961e-2454e20deb84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.199962Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "7b62fb50-6361-4e46-80b9-2a1e3a37de57",
    "name" : "Insurance Policy - Travel (application/json)",
    "request" : {
      "urlPath" : "/tripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b62fb50-6361-4e46-80b9-2a1e3a37de57",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.199716Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "5cde12d5-f3a0-4837-991a-39932e19769d",
    "name" : "Insurance Policy - Travel (application/json)",
    "request" : {
      "urlPath" : "/tripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cde12d5-f3a0-4837-991a-39932e19769d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.199535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "e69d5222-5474-49a9-b30f-3765336f27fc",
    "name" : "Insurance Policy - Travel (application/json)",
    "request" : {
      "urlPath" : "/tripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e69d5222-5474-49a9-b30f-3765336f27fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.199349Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "9b163b03-f312-4d17-b132-f417b9f261e3",
    "name" : "Insurance Policy - Travel (application/json)",
    "request" : {
      "urlPath" : "/tripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b163b03-f312-4d17-b132-f417b9f261e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.199148Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "1a867db5-85c8-425d-aae0-756d6173d5e4",
    "name" : "Insurance Policy - Travel (application/pdf)",
    "request" : {
      "urlPath" : "/tripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "1a867db5-85c8-425d-aae0-756d6173d5e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.198892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "tripc"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "086f5e92-8b25-454a-a82f-53b4a3c87cdb",
    "name" : "Insurance Policy - Home (application/json)",
    "request" : {
      "urlPath" : "/hmipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "086f5e92-8b25-454a-a82f-53b4a3c87cdb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.198699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hmipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "3e862abf-5a0b-43f9-ae38-f6b1b6846524",
    "name" : "Insurance Policy - Home (application/json)",
    "request" : {
      "urlPath" : "/hmipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e862abf-5a0b-43f9-ae38-f6b1b6846524",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.198522Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hmipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "bcbd8c20-0669-4352-9682-562ba0e4cd5a",
    "name" : "Insurance Policy - Home (application/json)",
    "request" : {
      "urlPath" : "/hmipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bcbd8c20-0669-4352-9682-562ba0e4cd5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.198337Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hmipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "f9063ae0-6238-4d5b-9399-322f6885dd63",
    "name" : "Insurance Policy - Home (application/json)",
    "request" : {
      "urlPath" : "/hmipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9063ae0-6238-4d5b-9399-322f6885dd63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.198153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hmipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "9a5fda8e-2853-4275-89cc-902bfa174300",
    "name" : "Insurance Policy - Home (application/json)",
    "request" : {
      "urlPath" : "/hmipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"record_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9a5fda8e-2853-4275-89cc-902bfa174300",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.197969Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hmipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "49f455b7-f279-469b-9a6d-1d48f607f801",
    "name" : "Insurance Policy - Home (application/json)",
    "request" : {
      "urlPath" : "/hmipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49f455b7-f279-469b-9a6d-1d48f607f801",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.19777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hmipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "08eed9b0-e6b0-4749-b698-b7577a7a06a7",
    "name" : "Insurance Policy - Home (application/json)",
    "request" : {
      "urlPath" : "/hmipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08eed9b0-e6b0-4749-b698-b7577a7a06a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.197486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hmipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "93c9108a-e876-49ff-abf6-3d8a015a1c9c",
    "name" : "Insurance Policy - Home (application/pdf)",
    "request" : {
      "urlPath" : "/hmipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "93c9108a-e876-49ff-abf6-3d8a015a1c9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.197271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hmipc"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "bbbfe41a-f0fa-4c36-abf7-8f614dc1bada",
    "name" : "Insurance Policy - Health (application/json)",
    "request" : {
      "urlPath" : "/hlipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbbfe41a-f0fa-4c36-abf7-8f614dc1bada",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.197138Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hlipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "01658087-7382-47af-97f7-7dc52e1409cd",
    "name" : "Insurance Policy - Health (application/json)",
    "request" : {
      "urlPath" : "/hlipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01658087-7382-47af-97f7-7dc52e1409cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.196951Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hlipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "985de33e-0337-4b3f-8bf7-c96b7c394394",
    "name" : "Insurance Policy - Health (application/json)",
    "request" : {
      "urlPath" : "/hlipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "985de33e-0337-4b3f-8bf7-c96b7c394394",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.196761Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hlipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "0f1cb878-35d8-448b-9c13-1dda46cbd04b",
    "name" : "Insurance Policy - Health (application/json)",
    "request" : {
      "urlPath" : "/hlipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f1cb878-35d8-448b-9c13-1dda46cbd04b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.196556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hlipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "4d8a3abd-e90a-46d0-9614-bb9beea5a8c8",
    "name" : "Insurance Policy - Health (application/json)",
    "request" : {
      "urlPath" : "/hlipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d8a3abd-e90a-46d0-9614-bb9beea5a8c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.196369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hlipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "254a88ad-ffc6-4770-a384-437659f4ffe5",
    "name" : "Insurance Policy - Health (application/json)",
    "request" : {
      "urlPath" : "/hlipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "254a88ad-ffc6-4770-a384-437659f4ffe5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.196179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hlipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "b089d998-d350-405e-90a4-09dd819b1001",
    "name" : "Insurance Policy - Health (application/json)",
    "request" : {
      "urlPath" : "/hlipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The consentId parameter must be in UUID format\",\n  \"error\" : \"invalid_format\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b089d998-d350-405e-90a4-09dd819b1001",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.195979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hlipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "518709f2-c900-432c-8a2f-f21901df1274",
    "name" : "Insurance Policy - Health (application/pdf)",
    "request" : {
      "urlPath" : "/hlipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "518709f2-c900-432c-8a2f-f21901df1274",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.195725Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "hlipc"
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "63a0cbeb-ba42-42a5-8a64-fe9bd1aa0dc1",
    "name" : "Insurance Policy - Cyber (application/json)",
    "request" : {
      "urlPath" : "/cyipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "63a0cbeb-ba42-42a5-8a64-fe9bd1aa0dc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.195565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cyipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "f58afbf5-4263-40b0-8cd4-8cda61171a66",
    "name" : "Insurance Policy - Cyber (application/json)",
    "request" : {
      "urlPath" : "/cyipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f58afbf5-4263-40b0-8cd4-8cda61171a66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.195369Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cyipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "87fc928d-2aad-45aa-94cf-bdcc8a21432b",
    "name" : "Insurance Policy - Cyber (application/json)",
    "request" : {
      "urlPath" : "/cyipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87fc928d-2aad-45aa-94cf-bdcc8a21432b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.195108Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cyipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "196b8279-15cf-49fa-877b-20ad23075d34",
    "name" : "Insurance Policy - Cyber (application/json)",
    "request" : {
      "urlPath" : "/cyipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "196b8279-15cf-49fa-877b-20ad23075d34",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.194892Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cyipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "a8499909-4e7e-4c9a-bc87-7b6aae9b5883",
    "name" : "Insurance Policy - Cyber (application/json)",
    "request" : {
      "urlPath" : "/cyipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a8499909-4e7e-4c9a-bc87-7b6aae9b5883",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.194698Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cyipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "a17e4098-d830-4683-a4c6-272f23d85568",
    "name" : "Insurance Policy - Cyber (application/json)",
    "request" : {
      "urlPath" : "/cyipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a17e4098-d830-4683-a4c6-272f23d85568",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.194502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cyipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "9804c5c3-6938-4425-8713-d96d03e7cfec",
    "name" : "Insurance Policy - Cyber (application/json)",
    "request" : {
      "urlPath" : "/cyipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Bad request\",\n  \"error\" : \"invalid_consentid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9804c5c3-6938-4425-8713-d96d03e7cfec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.194288Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cyipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "585653f2-7462-494d-96cf-6dde9697f578",
    "name" : "Insurance Policy - Cyber (application/pdf)",
    "request" : {
      "urlPath" : "/cyipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "585653f2-7462-494d-96cf-6dde9697f578",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.193994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cyipc"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "91e07fb4-01e8-402e-8445-75afe7c1a18f",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91e07fb4-01e8-402e-8445-75afe7c1a18f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.19383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "b8f98267-a7e5-4c1e-9aa4-0b34907708f5",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8f98267-a7e5-4c1e-9aa4-0b34907708f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.193629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "07c94de0-daff-403e-9707-030da67c857c",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "07c94de0-daff-403e-9707-030da67c857c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.193421Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "f8466f59-af61-423d-af8c-89073e93edff",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8466f59-af61-423d-af8c-89073e93edff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.193202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "1686cd3d-b65b-4daf-acba-17d900420461",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"Your API url or path is incorrect\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1686cd3d-b65b-4daf-acba-17d900420461",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.192972Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "2498e327-d744-4579-a4ce-eb1b4897f5f7",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"You are not authorized to use this API\",\n  \"error\" : \"invalid_authorization\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2498e327-d744-4579-a4ce-eb1b4897f5f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.192719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "4c75ddee-3351-4f93-94d2-577defa0f29e",
    "name" : "Insurance Policy - Commercial Vehicle (application/json)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"The format parameter is invalid\",\n  \"error\" : \"missing_parameter\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c75ddee-3351-4f93-94d2-577defa0f29e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.192418Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "0600f140-84b0-44d0-a9f6-e55069b2a988",
    "name" : "Insurance Policy - Commercial Vehicle (application/pdf)",
    "request" : {
      "urlPath" : "/cvipc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "0600f140-84b0-44d0-a9f6-e55069b2a988",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.192105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cvipc"
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "bd42da37-b870-48e4-a582-1ffd886cede4",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 504,
      "body" : "{\n  \"errorDescription\" : \"Publisher service did not respond in time\",\n  \"error\" : \"gateway_timeout\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bd42da37-b870-48e4-a582-1ffd886cede4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.191932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "gateway_timeout" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service did not respond in time" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "ae8edd35-cbb3-430e-97fa-d40acc0561ef",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 503,
      "body" : "{\n  \"errorDescription\" : \"Publisher service is temporarily unavailable\",\n  \"error\" : \"service_unavailable\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae8edd35-cbb3-430e-97fa-d40acc0561ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.191671Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "service_unavailable" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service is temporarily unavailable" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "96199537-2b47-4664-a5eb-3fa5cacf5e96",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 502,
      "body" : "{\n  \"errorDescription\" : \"Publisher service returned an invalid response\",\n  \"error\" : \"bad_gatewy\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96199537-2b47-4664-a5eb-3fa5cacf5e96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.191399Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "bad_gatewy" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Publisher service returned an invalid response" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "d4c02144-3db7-4ab2-b15e-25e9f529a002",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 500,
      "body" : "{\n  \"errorDescription\" : \"Internal server error\",\n  \"error\" : \"internal_server_error\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d4c02144-3db7-4ab2-b15e-25e9f529a002",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.190952Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "internal_server_error" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Internal server error" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "e468333e-72dc-418b-addb-90278ae02231",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 404,
      "body" : "{\n  \"errorDescription\" : \"No record found\",\n  \"error\" : \"url_not_found\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e468333e-72dc-418b-addb-90278ae02231",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.190524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "record_not_found", "url_not_found" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "No record found", "Your API url or path is incorrect" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "79b83f18-618e-4a03-9e50-1d28fcc7488b",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 401,
      "body" : "{\n  \"errorDescription\" : \"Authentication failed\",\n  \"error\" : \"invalid_authentication\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79b83f18-618e-4a03-9e50-1d28fcc7488b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.190273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "invalid_authentication", "invalid_authorization" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Authentication failed", "You are not authorized to use this API" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "fc7ced78-77a6-4aaf-a6e1-a632e3bc0b90",
    "name" : "Insurance Policy - Car (application/json)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 400,
      "body" : "{\n  \"errorDescription\" : \"Please provide all mandatory parameters\",\n  \"error\" : \"invalid_txnid\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc7ced78-77a6-4aaf-a6e1-a632e3bc0b90",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.189983Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc",
          "schema" : {
            "properties" : {
              "error" : {
                "enum" : [ "missing_parameter", "invalid_parameter", "invalid_format", "invalid_txnid", "invalid_consentid" ],
                "type" : "string"
              },
              "errorDescription" : {
                "enum" : [ "Please provide all mandatory parameters", "Bad request", "The format parameter is invalid", "The txnId parameter must be in UUID format", "The consentId parameter must be in UUID format" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "283ec89e-1dc0-42fd-b40e-2ee3ff48af77",
    "name" : "Insurance Policy - Car (application/pdf)",
    "request" : {
      "urlPath" : "/cripc/certificate",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/pdf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "Response body contains contents of the certificate in PDF format.",
      "headers" : {
        "Content-Type" : "application/pdf"
      }
    },
    "uuid" : "283ec89e-1dc0-42fd-b40e-2ee3ff48af77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-28T09:23:07.189486Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cripc"
        }
      }
    },
    "insertionIndex" : 55
  } ]
}