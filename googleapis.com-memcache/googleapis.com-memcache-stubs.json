{
  "mappings" : [ {
    "id" : "d3dc57ea-7517-42d2-b2e4-950bd55931b2",
    "name" : "Creates a new Instance in a given location.",
    "request" : {
      "urlPath" : "/v1beta2/z9x93obs9xbhm02b7n9q7zhk9fxfzqdxzx5a3n8i8uvzf66ebc10sulzhztzuzgvhw59ar3ryqczkzp2jffh90ngqctsycfhsufxigzhqqs/instances",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Wilber Powlowski\",\n  \"error\" : {\n    \"code\" : 1637030480,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Aut qui assumenda possimus iusto. Ipsa accusamus nisi nostrum animi magnam nam. Eum necessitatibus reprehenderit corrupti saepe unde veniam assumenda. Minima perspiciatis quisquam ut quidem. Perspicia\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3dc57ea-7517-42d2-b2e4-950bd55931b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.132214Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.instances.create",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "91093627-b67e-47e8-9835-18dae8c60708",
    "name" : "Lists Instances in a given location.",
    "request" : {
      "urlPath" : "/v1beta2/s9mvwbmgd0yv1wi43vqn8o6k1rfwnhpgss89mw3dk266uo3xeikd60jtgoe8wiocu8un487r475dfcl9a8ms9hfeahf2k2hhs0msicnr/instances",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"unreachable\" : [ \"v66jco4bpvaohq0czbobmtgdsmw027dw89tkhxljvlkd9u55jy8libscs2hbqm9eatsueq02uscnfut68w\", \"mden2jamxcz85fwmggzkhigb92dryuzgjhzkqbjfny7cobs\" ],\n  \"nextPageToken\" : \"kpue6eva5awio3b242sdxh0r34vjyw2fo7u0h3llibivn9p4fjlan0hjz2q286zw330xfohrq6biyk1ln7\",\n  \"resources\" : [ {\n    \"memcacheVersion\" : \"MEMCACHE_1_5\",\n    \"authorizedNetwork\" : \"d7f2boyz6jetdy7t8uomec2e7fuw55wdmif5kgp7bnnik5xuekk23khyicsosez6iwgv5lhhlm6ust6znbzzz75ypyq3fn3j45vbgfs0lonz6oe1pzmd5pwyrqkz2h8cpg3rzvh1uuskid1y27lg6r8gsg3dgeq6niha7b8bg0mggsbee4zzuvz3\",\n    \"displayName\" : \"Jennie McCullough\",\n    \"instanceMessages\" : [ {\n      \"code\" : \"ZONE_DISTRIBUTION_UNBALANCED\",\n      \"message\" : \"Adipisci quam sint non et rerum. Aut eveniet magnam qui atque dolore. Eum ut ratione occaecati.\"\n    } ],\n    \"memcacheFullVersion\" : \"ywcp43l5v0u3c0katu6ps548tzzdsnqa4d3vin1o9s6\",\n    \"updateTime\" : \"2022-07-14T14:45:01.126747Z\",\n    \"maintenanceSchedule\" : {\n      \"startTime\" : \"2023-02-13T15:25:01.126791Z\",\n      \"endTime\" : \"2022-04-08T16:45:01.126826Z\",\n      \"scheduleDeadlineTime\" : \"2022-07-28T14:57:01.126862Z\"\n    },\n    \"zones\" : [ \"otfgaayuvj2cqsspsm1may9n7dnzljbm1nnfsufq5p0s4jwu5wg13ba3cq231v5jadu\", \"cews3eksjf9jcdxzpnhmr1bn\", \"pclq06o4k89cqa8odwaqrk0xq69ov5l9s597p7vxl2vkalozgycxu6i0w8ahotsxttnbigd3s33vzvzhypyqjfxq9ezh2ag5tf2idi9nw4bvq7xxqccgjobop3huz25aq9nfcab0tpwrnlivckxniz6h5tsdlmk3mwlsfefa4i92px24ts1q0mg6nhj\", \"q9qbbqsg45m3egsvbnunrpltqvbrhpfflu9i330g6vz20miw78qyt\", \"ysqp2h35x9ppj5lxw5p54s4euet5jrot2kjaka2aocmrn3b83kc1zp0uh1jnbd32212ipxcp7sae4zjwmfvy41u38fy4icl29umemk7fc2iy75lpx0ii3djnkxqs5brthc5eog7lnise7\", \"g7dpnnsrlndorstqn778ahi4qk77zzpuw30uvyuefrxcn4n2janzr8fgwzfcscykiaqkqcei4dzf7k73lfazia01lctvnjryvihldctzsvc2ibviviamtxduuhrahbqf7d2gubq1gzgri16jl21621jpxc2ropf4lo11zsx7fz78ajlhwhopb\" ],\n    \"memcacheNodes\" : [ {\n      \"port\" : 1963880481,\n      \"zone\" : \"ecey2hv5d9whnbif1qf6urfyocz4v98b7xexxylqnumnd07fxvttcebx6wg4zz1j44sve19hn3n5lb4hg1fwshr4o6p5ckfkxqnkj9zdcomrrc4588gsj7jy1a7dwu29ne48xim2yg81rs30obpph44j68dmswym89677w0154cmghlt9viblkckpvclsuvsyftp\",\n      \"host\" : \"0x6578p5rx06ui5q39a8ywt3jbnbhdjbnt0hric87nhcmh3fjc\",\n      \"state\" : \"UPDATING\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"9488\",\n      \"parameters\" : {\n        \"id\" : \"15o8\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 1656322572,\n      \"zone\" : \"1995l10jy6bkw1u7w5561tlfgq8muu7sco3d\",\n      \"host\" : \"2mcw44twjkhd8e5nzvjsn9h76yrdpw75tx45nekryegmngntij5mgw2l0m6ws1h3sb1x2vw1jpwzqchn3hn9ao04tkld815rktj0s02a2w7015fqrk2d53ckexknmcjlhnidiyw720r5c7m56xdd9s16jdv7navujfq5i3xzsdxu\",\n      \"state\" : \"CREATING\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"w36d\",\n      \"parameters\" : {\n        \"id\" : \"a70d\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 783792463,\n      \"zone\" : \"8njn799fw3gh\",\n      \"host\" : \"irwu4xokr5jzl5hx3s3wwso93438pguc1v9eurdanr8uqyl08ojby3jqkgr9esh1ovoy88fb06k3lapj25xhubl0\",\n      \"state\" : \"CREATING\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"8l97\",\n      \"parameters\" : {\n        \"id\" : \"p8a0\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 146515035,\n      \"zone\" : \"i8i1zuw7pctcavnqvm85i317daz7cjudzfh7jenufow7bjnd3hk9m7fm62b79hm2n8aqz85h4tikwp7dwmc8v72a1nxmlkj96k6qveenmg8ziknxie0ty9djqecxeaf68ygmmud8nzxo56zpt7t6i3ytxaocrsoit3gb06bgldt6ou2h5kdw4v3\",\n      \"host\" : \"chsz0tncj9k3l0rvbk25ph1wusxs9yyt0yl6cv9jjzmpeac5vju8oaymrmilx6a12b122wn2mz0qnclb48kqbcmmtomufru7y9yvnlpw8kmc\",\n      \"state\" : \"DELETING\",\n      \"updateAvailable\" : true,\n      \"nodeId\" : \"c6r6\",\n      \"parameters\" : {\n        \"id\" : \"k1dl\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 1459855722,\n      \"zone\" : \"4v0nqarsalcoluduzffus1u3brnyukvru3jmwzl2oxra2hbmn7jsbu2ktm93280fki94ki8bbzosiz2nkdc3xoh72d7q4pyy66pxmfogr511apv4kokvoyi76iv\",\n      \"host\" : \"v8y66tegis6o1u9pnexrrac1ovkzmrpc6kfk3m6jj7nx2bs7haf\",\n      \"state\" : \"DELETING\",\n      \"updateAvailable\" : true,\n      \"nodeId\" : \"ssc7\",\n      \"parameters\" : {\n        \"id\" : \"2k1f\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 2035975262,\n      \"zone\" : \"loy28j2a53ftcqg0j3hdbprkgolkyn8wvkcd29uszfyy72mer5mevcf5w0v6refgy09y695iro91rl1l\",\n      \"host\" : \"6o071ljf82lfcohdj0oh9j5zwmow16o0udft8pzp0ee6awymh3bn4f2x7w9np61htqrrq9v0hjqq4owhazyzeoayjg1qdodvff2vq4n8nolkgxvirhg6cb472ajw610k1ep6v3vqgtazn3rmicz3ajne4\",\n      \"state\" : \"READY\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"3q1b\",\n      \"parameters\" : {\n        \"id\" : \"gibg\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 462076078,\n      \"zone\" : \"loen1wsadzihfy1rb0lthnebk5jafacspuj7qvzp8h7ioem8rbzr14rddwz9hf9ca1vtl6oah5mltzphxbqm57sbyy4pa53af1ypgaiezm2urie0qaug3h40r7zd1essss7i9vw37kp34v1n9nqpxeiunnziufq4a0jh9ps3k\",\n      \"host\" : \"2vycdy4194ppnfpdsm8szk0p08wbkryhhdbgqvragtg980rpa2hmvz9v31ks94f8a513ac0hnwd9ue4gg22vgka167gskot0emhhlh6fkl0tbhjiil2xme7mz9o78on9r4lk2q62ph6v72ubowslknch4ccc66bb70j6ufk4d36pvrzf2ini\",\n      \"state\" : \"UPDATING\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"56bk\",\n      \"parameters\" : {\n        \"id\" : \"6x1h\",\n        \"params\" : { }\n      }\n    } ],\n    \"nodeConfig\" : {\n      \"memorySizeMb\" : 1931113891,\n      \"cpuCount\" : 1713011644\n    },\n    \"labels\" : { },\n    \"maintenancePolicy\" : {\n      \"createTime\" : \"2022-12-16T16:38:01.128354Z\",\n      \"description\" : \"Officia est quia ratione velit adipisci. Iure possimus eos nisi. Quia illo ex sit voluptatem ad eum voluptas.\",\n      \"weeklyMaintenanceWindow\" : [ {\n        \"duration\" : \"jd2q6zb9p9vro2633ma8gr04ewfsc4cbxmxsmpnavvfcb74eev7j1g5fk\",\n        \"startTime\" : { },\n        \"day\" : \"SUNDAY\"\n      } ],\n      \"updateTime\" : \"2023-02-12T17:00:01.128474Z\"\n    },\n    \"createTime\" : \"2022-08-08T15:27:01.128509Z\",\n    \"name\" : \"Dr. Alina Heidenreich\",\n    \"discoveryEndpoint\" : \"53jxwselouf08kirdni22nzwvqbep2lyy8aon12g4mjn7cw9p9tkuzza86hoveqb9blu18jquo3yek5qoayawz7193dhpuoupbcizeur7c4he25467kxb6fxe8zbd3z32pb5msw3mi5vobllwakpd9bi011yglkqhv1m49kb\",\n    \"nodeCount\" : 1563932304,\n    \"state\" : \"UPDATING\",\n    \"updateAvailable\" : false,\n    \"parameters\" : {\n      \"id\" : \"biog\",\n      \"params\" : { }\n    }\n  }, {\n    \"memcacheVersion\" : \"MEMCACHE_VERSION_UNSPECIFIED\",\n    \"authorizedNetwork\" : \"gaxkz1ojztoui3x3fuyzn2yc48a9zug60lsnk796bsjdks5ye6fd1hxcyoim3xozvfw1iks4iiyfje7dt3kn0hopk246ffguo0cd\",\n    \"displayName\" : \"Dr. Gail Blanda\",\n    \"instanceMessages\" : [ {\n      \"code\" : \"ZONE_DISTRIBUTION_UNBALANCED\",\n      \"message\" : \"Optio magni vero doloribus magnam. Temporibus a ipsam non numquam modi quia. Quaerat corrupti quis temporibus.\"\n    }, {\n      \"code\" : \"ZONE_DISTRIBUTION_UNBALANCED\",\n      \"message\" : \"Non nulla ipsum. Praesentium quo est facilis ullam. Perspiciatis ratione eum nam pariatur aut velit. Deleniti laudantium voluptatem incidunt quo autem.\"\n    }, {\n      \"code\" : \"CODE_UNSPECIFIED\",\n      \"message\" : \"Ab sed ex molestiae sit. Quia voluptatum dolorem molestiae hic. Perferendis qui ipsum animi vitae quasi aperiam.\"\n    } ],\n    \"memcacheFullVersion\" : \"fx5jtk2lj5lywm9125d3pxpb66d3wniqw1y1febxex022ujaeyr\",\n    \"updateTime\" : \"2023-02-23T16:44:01.129037Z\",\n    \"maintenanceSchedule\" : {\n      \"startTime\" : \"2023-01-16T17:45:01.129076Z\",\n      \"endTime\" : \"2022-04-03T15:56:01.129109Z\",\n      \"scheduleDeadlineTime\" : \"2022-07-12T18:08:01.129144Z\"\n    },\n    \"zones\" : [ \"i6jzf1yxt5jmua2791c4i3i4ok88xk93eaew669eal0sj8ess6uz2ee0llzmp18k4o1q4976lz5acp5yd1ifzhe1n602pj5jnjv4m1a1ekr\", \"8roy0svwb156bhfm9z058nizy7b9d4lp0o62np8nezxlaxvdq1rgerzzsnawl2kunck9\", \"4ef57g4meaer1c95ekid12cbjdyyv092sug1nkas4utxohpmlnrdfl81fimamxf3j5hs\", \"7eadowgkz0rbh8e99ufmngty0n49h3w\", \"shyks6n2i65sx5hqcomp30rhh55s2tivbzs13slg1tpdc3ikcjwc6eup0trzi7ug1cy72nick864vbepgs7jnndpnoxvm5gypl8fyq1tdwddgfm8gaxo2xxhj2ln5634y7qnedjcxsc8qp6ykz944qyg8z\" ],\n    \"memcacheNodes\" : [ {\n      \"port\" : 1931903951,\n      \"zone\" : \"61snood33i8x9zpl641wplp8kmq35t57zi4v0fzmcvayc9ccuxpjdnt7tpcxnpi9cbkjod5aq54fkvj6schgazmeh8vtpbt3cqymkz\",\n      \"host\" : \"0qixkgcd\",\n      \"state\" : \"UPDATING\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"gax7\",\n      \"parameters\" : {\n        \"id\" : \"wt5h\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 1659600777,\n      \"zone\" : \"k4er7jdd6ywm3ztwmy0d2k4h185lewuaj7bp9h71sqby81v9ymzq9japwx3yo5k8w54m5euih9cq\",\n      \"host\" : \"vzkd0jrkh1tq1kvhb9nh83f8iwf2jetnoh0xkxsepcenhxgw3c3twk1kd3tlcpc7fitluety7gmpoqxa59zm41pqkh0jpdowfoi9lkptght4d3mgbkoqoqxf0xdkfmbns1c5mdrqfukcx\",\n      \"state\" : \"UPDATING\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"8rc5\",\n      \"parameters\" : {\n        \"id\" : \"jf7o\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 2033882199,\n      \"zone\" : \"yq27ysk3d9sg2qsen0zm67ebry12nvx5rrt4fr9cqgz3f1y46d235t52bsc96k9o149vxlrxues2up6st3vyvsggrt3mqz6bx55twq\",\n      \"host\" : \"75kfvjh1rv3wp70k14wg0a3tv72hipxr3e7wsfn0gt7jy4jqvtihusd0fjd793kzdhx33w5jw5ehzza2h7d34d09zhu34k981qu59d3o2peqywyobh9aewtalktzdi9kypfdcsgdowp35fv\",\n      \"state\" : \"CREATING\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"okrw\",\n      \"parameters\" : {\n        \"id\" : \"ylcf\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 189298334,\n      \"zone\" : \"prnzs7fywrje65pg438u9l1k6nvqlpivg9rme73yytt216aazxggpfz3vds81hcpg8hj70o5z43gk5tk9appfsgl7f4fn8yb0fm5uqqh4dx4\",\n      \"host\" : \"yun2hl64x5sztteghaoroojn650mek7dve\",\n      \"state\" : \"READY\",\n      \"updateAvailable\" : true,\n      \"nodeId\" : \"p80y\",\n      \"parameters\" : {\n        \"id\" : \"462r\",\n        \"params\" : { }\n      }\n    }, {\n      \"port\" : 902573480,\n      \"zone\" : \"39q6ioek12myxd4tyrjr9chvym7ttkjssrx191ce6m94ku6tgo9qspaclp3\",\n      \"host\" : \"1qklvds2wpycrburntdjb5uh3ng95i9mnb5s9jj6kf140t8licv3ig0vp5hd0o6olxlmqoiz4ekhevh5rmqgncsdhf0ju4l369zggkkjwf3tp568yvpvyqaefxw\",\n      \"state\" : \"READY\",\n      \"updateAvailable\" : true,\n      \"nodeId\" : \"3hmb\",\n      \"parameters\" : {\n        \"id\" : \"vg66\",\n        \"params\" : { }\n      }\n    } ],\n    \"nodeConfig\" : {\n      \"memorySizeMb\" : 1219787743,\n      \"cpuCount\" : 1745698601\n    },\n    \"labels\" : { },\n    \"maintenancePolicy\" : {\n      \"createTime\" : \"2022-04-28T14:37:01.130211Z\",\n      \"description\" : \"Commodi possimus ipsa voluptates laborum sit porro. At esse possimus aperiam nostrum aut vel. Quia adipisci laborum quia laborum praesentium. Quia sed non est odit saepe.\",\n      \"weeklyMaintenanceWindow\" : [ {\n        \"duration\" : \"jsl9hbmhl1btbnpz80423o8nq6mdaj6s\",\n        \"startTime\" : { },\n        \"day\" : \"SUNDAY\"\n      } ],\n      \"updateTime\" : \"2023-01-26T17:25:01.130322Z\"\n    },\n    \"createTime\" : \"2022-11-25T14:26:01.130355Z\",\n    \"name\" : \"Mr. Erik Dach\",\n    \"discoveryEndpoint\" : \"mzvpx6dyuj5ydkn6xdt4xlcoy7b6mlbdckvt0t7pao5cfyn1hm0ml1ddi8gacddaudqu5jplfagnd28ipg3eszp14zmmu9fnz92nohjq4r1stznc4vdtr2rcc8sdlrbdbxb99mqg9xtv84rxvk7zifny3sf0dpvefo7rvod\",\n    \"nodeCount\" : 1346648381,\n    \"state\" : \"DELETING\",\n    \"updateAvailable\" : false,\n    \"parameters\" : {\n      \"id\" : \"5369\",\n      \"params\" : { }\n    }\n  }, {\n    \"memcacheVersion\" : \"MEMCACHE_1_5\",\n    \"authorizedNetwork\" : \"zyil2rf8j3g28zoh34xe9tspqv47hkksc23jpf0p5ggja7o1kitlgd9vjkbrvz0w5bes0xkauy37gyabxuc47a81qj74yr6w4zbeeihssc5z640yv43rgwawz2cag15o9jmnnx6b079ps2975smu6qhnp7u248dvpjeivfwy5ohnfr\",\n    \"displayName\" : \"Dorie D'Amore\",\n    \"instanceMessages\" : [ {\n      \"code\" : \"ZONE_DISTRIBUTION_UNBALANCED\",\n      \"message\" : \"Vitae fuga commodi et aliquam. Voluptatem illum quis tempore et. Quo sed placeat dolorem.\"\n    }, {\n      \"code\" : \"ZONE_DISTRIBUTION_UNBALANCED\",\n      \"message\" : \"Occaecati porro id voluptates. Reiciendis nihil quasi neque nam qui. Beatae quaerat qui quia nesciunt hic esse sunt.\"\n    }, {\n      \"code\" : \"CODE_UNSPECIFIED\",\n      \"message\" : \"Repudiandae debitis non possimus adipisci et velit possimus. Animi aut ratione nobis similique. Culpa est architecto sed ducimus beatae mollitia.\"\n    }, {\n      \"code\" : \"ZONE_DISTRIBUTION_UNBALANCED\",\n      \"message\" : \"Eum amet in optio sint ut. Ratione omnis sint aut accusamus sint. Omnis eius veritatis. Excepturi pariatur voluptas nulla illo expedita.\"\n    }, {\n      \"code\" : \"ZONE_DISTRIBUTION_UNBALANCED\",\n      \"message\" : \"Impedit exercitationem et ea est. Tempore qui expedita amet. Delectus maxime vel dolores.\"\n    }, {\n      \"code\" : \"ZONE_DISTRIBUTION_UNBALANCED\",\n      \"message\" : \"Aut dignissimos accusantium quisquam. Dolorum sed eum saepe assumenda sunt perspiciatis. Delectus hic corporis nostrum. Voluptate minima et quis temporibus excepturi. Temporibus est fuga modi cum comm\"\n    } ],\n    \"memcacheFullVersion\" : \"s03u7oztf9t09xvkel50m1p9\",\n    \"updateTime\" : \"2022-08-16T18:03:01.130915Z\",\n    \"maintenanceSchedule\" : {\n      \"startTime\" : \"2022-11-13T14:40:01.130951Z\",\n      \"endTime\" : \"2022-07-19T17:08:01.130984Z\",\n      \"scheduleDeadlineTime\" : \"2022-09-16T17:00:01.131019Z\"\n    },\n    \"zones\" : [ \"ub3boxgvuas6wjgsfrp3ajox8ngzuyee2gacjyxmb4bxf6tod0t3hzpeulpd\" ],\n    \"memcacheNodes\" : [ {\n      \"port\" : 1458407868,\n      \"zone\" : \"t3enmvhdrrtlo8c9lehye31jmmbh1khqpdx5op8jhrjok0bxv5rak6pa9fqfw9tvnmmwnv4gyvzqiw4p6pxzw79ppeqeuxwfcz57iwcn62s3mxrhu7rwg6s2mkb\",\n      \"host\" : \"zw72m0e0nyz4g\",\n      \"state\" : \"UPDATING\",\n      \"updateAvailable\" : false,\n      \"nodeId\" : \"0374\",\n      \"parameters\" : {\n        \"id\" : \"a9q8\",\n        \"params\" : { }\n      }\n    } ],\n    \"nodeConfig\" : {\n      \"memorySizeMb\" : 605647268,\n      \"cpuCount\" : 1498787704\n    },\n    \"labels\" : { },\n    \"maintenancePolicy\" : {\n      \"createTime\" : \"2022-06-18T16:33:01.131286Z\",\n      \"description\" : \"Est aliquid rerum natus molestias provident sed. Rerum dolor temporibus molestiae. Quia enim rerum unde architecto temporibus et ut. Atque quasi autem sed non assumenda cupiditate. Nesciunt ea eum ill\",\n      \"weeklyMaintenanceWindow\" : [ {\n        \"duration\" : \"wivy848t251dvar1fq0sbdrniubgrsbag2edjlxft3v0x54vqoddhl37avma63mvzarm87aajf0a6i1syspz3p9goky12mr95vwt32i1atjnhtfc7j1wfx0xgsthx2opmpj6f2\",\n        \"startTime\" : { },\n        \"day\" : \"MONDAY\"\n      }, {\n        \"duration\" : \"dg1qlsd4stttf9dhddmtlc0n232srbgy67tswktc4bq8xiykmrnzvmr0i2p65ct\",\n        \"startTime\" : { },\n        \"day\" : \"FRIDAY\"\n      }, {\n        \"duration\" : \"rgv8kua4ailifwcar4g356a7u22z48bc0gqhdlep81z8xvwes474tyfnpn1r1eomq532ks5ixdws\",\n        \"startTime\" : { },\n        \"day\" : \"WEDNESDAY\"\n      }, {\n        \"duration\" : \"3nos8jm8i8xk9202kgd8vla68ln3welkg85cjjtm3v809rtbvbik5v7p056d2yegbebodb9q8xhhcs66fdq5kiwr6eelftfdkyysqb70zho\",\n        \"startTime\" : { },\n        \"day\" : \"MONDAY\"\n      }, {\n        \"duration\" : \"ag14kvt7ba2hneb2aqn6u8t2mn2ddm5c5zsbmovy8ay7foldkdvq599apecgf3yjr66a7rucj9b87xg4ry1px4nj2\",\n        \"startTime\" : { },\n        \"day\" : \"SUNDAY\"\n      }, {\n        \"duration\" : \"yejle944w9c4jtnbxrifeim5m06b5veyyhc8pe9h6gh5u1sgxfsyvsk2d9o2bz84n6v1d3k7i00oo6zm0iehncaeje2mduruxs8r2batgz62cbb8msgj6ulbh7d6cjf7js8yc3f6fn81itaciqltx2wq7x6bfvyyfkxbgnmfwm4cnsck9\",\n        \"startTime\" : { },\n        \"day\" : \"THURSDAY\"\n      } ],\n      \"updateTime\" : \"2022-08-21T17:04:01.131536Z\"\n    },\n    \"createTime\" : \"2022-11-19T15:04:01.131572Z\",\n    \"name\" : \"Fernando Reichert\",\n    \"discoveryEndpoint\" : \"r1ldw97qkn2i4qjsfli3dawcq1ou2o01xbkrlpavg5zhk7ug1nvt75ag8s14xpgxhbshrks4i6a8jwxhz6b86dd7coutknqs71p3y1mmwfygrhwnaxypxd5khqvtjvfa7a77m5arlvcllqzi9h3rn2q7ctnbxhufyx5wng556ef\",\n    \"nodeCount\" : 1329759922,\n    \"state\" : \"CREATING\",\n    \"updateAvailable\" : true,\n    \"parameters\" : {\n      \"id\" : \"j3e0\",\n      \"params\" : { }\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91093627-b67e-47e8-9835-18dae8c60708",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.131948Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.instances.list",
          "schema" : {
            "description" : "Response for ListInstances.",
            "properties" : {
              "nextPageToken" : {
                "description" : "Token to retrieve the next page of results, or empty if there are no more results in the list.",
                "type" : "string"
              },
              "resources" : {
                "description" : "A list of Memcached instances in the project in the specified location, or across all locations. If the `location_id` in the parent field of the request is \"-\", all regions available to the project are queried, and the results aggregated.",
                "items" : {
                  "$ref" : "#/components/schemas/Instance"
                },
                "type" : "array"
              },
              "unreachable" : {
                "description" : "Locations that could not be reached.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dcfe1b66-8af7-4bfa-85ce-7e913d5c283f",
    "name" : "Updates the defined Memcached parameters for an existing instance. This method o...",
    "request" : {
      "urlPath" : "/v1beta2/Kent+Braun:updateParameters",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Jennie McLaughlin\",\n  \"error\" : {\n    \"code\" : 944741221,\n    \"details\" : [ { } ],\n    \"message\" : \"Nisi omnis quis. Velit eum consequatur earum et inventore iusto quia. Sunt officiis voluptate.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dcfe1b66-8af7-4bfa-85ce-7e913d5c283f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.126503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.instances.updateParameters",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1a1b25ca-3860-4664-9c43-2ce2077cb016",
    "name" : "Starts asynchronous cancellation on a long-running operation. The server makes a...",
    "request" : {
      "urlPath" : "/v1beta2/Miguel+Price:cancel",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1a1b25ca-3860-4664-9c43-2ce2077cb016",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.126299Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.operations.cancel",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ef74e445-45de-4bd6-b614-217e18f64b70",
    "name" : "`ApplyParameters` restarts the set of specified nodes in order to update them to...",
    "request" : {
      "urlPath" : "/v1beta2/Darrin+Schuppe:applyParameters",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Eric MacGyver\",\n  \"error\" : {\n    \"code\" : 1788417974,\n    \"details\" : [ { } ],\n    \"message\" : \"Delectus corrupti quo sit at quo incidunt est. Porro nam accusantium. Neque doloribus officiis illo et. Et aut numquam facere quasi ex.\"\n  },\n  \"done\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef74e445-45de-4bd6-b614-217e18f64b70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.126223Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.instances.applyParameters",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "95092df0-040d-4265-bf1a-93acbf4ae0a8",
    "name" : "Lists operations that match the specified filter in the request. If the server d...",
    "request" : {
      "urlPath" : "/v1beta2/Edison+Sipes/operations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"operations\" : [ {\n    \"metadata\" : { },\n    \"response\" : { },\n    \"name\" : \"Miss Kent Lind\",\n    \"error\" : {\n      \"code\" : 1333221426,\n      \"details\" : [ { }, { }, { }, { }, { } ],\n      \"message\" : \"Officiis nihil labore qui at. Qui molestiae vel quae repudiandae et voluptatibus accusamus. Aut dolorum et qui sed pariatur.\"\n    },\n    \"done\" : true\n  } ],\n  \"nextPageToken\" : \"afsefyu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95092df0-040d-4265-bf1a-93acbf4ae0a8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.126013Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.operations.list",
          "schema" : {
            "description" : "The response message for Operations.ListOperations.",
            "properties" : {
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              },
              "operations" : {
                "description" : "A list of operations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "45be3b07-94e5-40c9-abcc-e5a6858979c1",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1beta2/Ms.+Emmaline+Lueilwitz/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"k3j67qgp048a\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Kyle Lowe\",\n    \"locationId\" : \"9tux\",\n    \"name\" : \"Vivan Waters\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Tomasa Shanahan V\",\n    \"locationId\" : \"l446\",\n    \"name\" : \"Quincy Murphy\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Catheryn Prosacco\",\n    \"locationId\" : \"496t\",\n    \"name\" : \"Mr. Karena Goyette\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "45be3b07-94e5-40c9-abcc-e5a6858979c1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.125776Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0dca649a-509a-4d2e-82bf-a060c851503d",
    "name" : "Updates an existing Instance in a given project and location.",
    "request" : {
      "urlPath" : "/v1beta2/Sparkle+Stoltenberg+MD",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Maureen Raynor\",\n  \"error\" : {\n    \"code\" : 56366200,\n    \"details\" : [ { } ],\n    \"message\" : \"Vero asperiores ipsum nihil reiciendis at et. Qui sunt quis. Facere tempora asperiores et.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0dca649a-509a-4d2e-82bf-a060c851503d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.125112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.instances.patch",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4ba01f40-856e-4a67-9a48-6e2583b00b2d",
    "name" : "Gets the latest state of a long-running operation. Clients can use this method t...",
    "request" : {
      "urlPath" : "/v1beta2/Mrs.+Lance+Jerde",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Miss Tama Kilback\",\n  \"error\" : {\n    \"code\" : 195211059,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Consectetur et tempora itaque est atque ipsa. Error libero officiis. Ipsa cupiditate cupiditate qui est asperiores.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ba01f40-856e-4a67-9a48-6e2583b00b2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.124906Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.operations.get",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "647772fc-481d-4995-905e-1da0f6eddbb0",
    "name" : "Deletes a long-running operation. This method indicates that the client is no lo...",
    "request" : {
      "urlPath" : "/v1beta2/Ms.+Moon+Harris",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "647772fc-481d-4995-905e-1da0f6eddbb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.124686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.operations.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9859ecb6-ea4d-4561-9d0e-0cd005582f1f",
    "name" : "Performs the apply phase of the RescheduleMaintenance verb.",
    "request" : {
      "urlPath" : "/v1beta2/gcp74uudmhmopiojr6e69h6v0qe49ov3dq53df3hnoajyc9xkv16xsuar8bizjmaf6kbewct5fee620xogdrroy86c74f968253ruws5e9vbzt2mf6bviqqgt2xoiirtur8zeot6w07hhw3x9ld:rescheduleMaintenance",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Demetrius Trantow\",\n  \"error\" : {\n    \"code\" : 661916022,\n    \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n    \"message\" : \"Repellat aut tempora et non voluptates fugiat nobis. Ut quos et et ut alias ipsam. Quis ab commodi doloremque repellendus. Quo laudantium quasi.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9859ecb6-ea4d-4561-9d0e-0cd005582f1f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.124598Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.instances.rescheduleMaintenance",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "52173f42-fb66-46ec-aa90-4a6aa932811c",
    "name" : "Updates software on the selected nodes of the Instance.",
    "request" : {
      "urlPath" : "/v1beta2/76ih923ycyq66vjr178a93:applySoftwareUpdate",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"response\" : { },\n  \"name\" : \"Trudy Denesik III\",\n  \"error\" : {\n    \"code\" : 1374789251,\n    \"details\" : [ { }, { }, { }, { } ],\n    \"message\" : \"Magnam et aut nihil illum. Ipsum est et. Libero similique rerum rerum assumenda debitis voluptatem ipsum.\"\n  },\n  \"done\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52173f42-fb66-46ec-aa90-4a6aa932811c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:01.124378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "memcache.projects.locations.instances.applySoftwareUpdate",
          "schema" : {
            "description" : "This resource represents a long-running operation that is the result of a network API call.",
            "properties" : {
              "done" : {
                "description" : "If the value is `false`, it means the operation is still in progress. If `true`, the operation is completed, and either `error` or `response` is available.",
                "type" : "boolean"
              },
              "error" : {
                "$ref" : "#/components/schemas/Status"
              },
              "metadata" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "Service-specific metadata associated with the operation. It typically contains progress information and common metadata such as create time. Some services might not provide such metadata. Any method that returns a long-running operation should document the metadata type, if any.",
                "type" : "object"
              },
              "name" : {
                "description" : "The server-assigned name, which is only unique within the same service that originally returns it. If you use the default HTTP mapping, the `name` should be a resource name ending with `operations/{unique_id}`.",
                "type" : "string"
              },
              "response" : {
                "additionalProperties" : {
                  "description" : "Properties of the object. Contains field @type with type URL."
                },
                "description" : "The normal response of the operation in case of success. If the original method returns no data on success, such as `Delete`, the response is `google.protobuf.Empty`. If the original method is standard `Get`/`Create`/`Update`, the response should be the resource. For other methods, the response should have the type `XxxResponse`, where `Xxx` is the original method name. For example, if the original method name is `TakeSnapshot()`, the inferred response type is `TakeSnapshotResponse`.",
                "type" : "object"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}