{
  "mappings" : [ {
    "id" : "74980b6a-2c0e-4b98-9bb0-199e13020957",
    "name" : "Calculate discounts and taxes (Bundles) - 200",
    "request" : {
      "urlPath" : "/pub/bundles",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "74980b6a-2c0e-4b98-9bb0-199e13020957",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.70273Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Calculatediscountsandtaxes(Bundles)"
        }
      }
    }
  }, {
    "id" : "e89e9c1c-5811-4cce-87f5-917a53efb1eb",
    "name" : "Get Price by SKU ID and Trade Policy - 200",
    "request" : {
      "urlPath" : "/price-sheet/ngb7/srlyt9",
      "method" : "GET",
      "queryParameters" : {
        "an" : {
          "equalTo" : "112fjvxllqf0oo2ixmd9aodkeburffl33jctrxyglvpiwcq0i9oayjemjl3dij4ckjh4wl858rjayepdczdb5qmmuo3vwpbpbkxky0n7glxzvcu8iweefxyez3k1o0jeen48h0c2bqv2lwl1l1k88spyhq02vzv4v7e5izrq9517msfsl2j987zspetkagnyaxv"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e89e9c1c-5811-4cce-87f5-917a53efb1eb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PricebyskuIdandtradePolicy"
        }
      }
    }
  }, {
    "id" : "5318da15-88d7-4c87-8f25-58187083e574",
    "name" : "Get Price by SKU ID - 200",
    "request" : {
      "urlPath" : "/price-sheet/n770",
      "method" : "GET",
      "queryParameters" : {
        "an" : {
          "equalTo" : "ydsjffr"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5318da15-88d7-4c87-8f25-58187083e574",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "PricebyskuId"
        }
      }
    }
  }, {
    "id" : "42c18756-8ee9-48af-ac96-d1af4f819fcd",
    "name" : "Delete Price by SKU Id - 200",
    "request" : {
      "urlPath" : "/price-sheet/t4hj",
      "method" : "DELETE",
      "queryParameters" : {
        "an" : {
          "equalTo" : "xiptxo9qqwg0ieqb2tetlms2ifjyrnmu4skbvifjjoeqv5ffv6gpzb51xr45lc6tkkded3gdpeq7j6rs3ahcn5byjwp8b4nwtxoalo8jlblukynu2db3rxq5td7wqniqz3asuwy8qtcbkc6scflxrf823mzox0zrants9gqemqtnby1480nv9moxl0rs4cd2x3"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "42c18756-8ee9-48af-ac96-d1af4f819fcd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.70248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "DeletebyskuId"
        }
      }
    }
  }, {
    "id" : "f0253b54-f28c-4c86-af10-5e0288398fa5",
    "name" : "Get Price by context - 200",
    "request" : {
      "urlPath" : "/price-sheet/context",
      "method" : "POST",
      "queryParameters" : {
        "an" : {
          "equalTo" : "u97vq4ww4b81wcq4mu2a3e8oxfscsqj4cbsyjljn0drxlerhipsfyx3fz5hk0fjqu1rglbe"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f0253b54-f28c-4c86-af10-5e0288398fa5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702368Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Pricebycontext"
        }
      }
    }
  }, {
    "id" : "7b2ff8a2-ddc4-44b5-815c-8266fcb8e3be",
    "name" : "Get all paged prices - 200",
    "request" : {
      "urlPath" : "/price-sheet/all/6bify6ih6rfd3pyeij51h64tbx2199gcmivv7pgyz4pth8w41yjvzm70w8yhdwchwpj7emy4onkj8r3m8v3bde1wp3k1n1vtdhvocr8g0jnu7bmtzj4qwo1y0pulj85kf6uydvvxz5v4tr7wmlrc0nje0o9d1/gh459r6vhby6x7nhsawlv7mgl45u2m2maa9rhs5apc11g5ayfbjern0y0y5kczyvbookq37x9kew2r19qxipf7cjh5wxa218r1v1chkscrkv5cssmzm1lc8t36aswbe7shnafmdjaew7ems575ur",
      "method" : "GET",
      "queryParameters" : {
        "an" : {
          "equalTo" : "o70yq0ew2n7zfcvwgxv59lnk2hpbg333cgmkqp9zaj11b4rswec7579lcr3fc7q136yzypjxb4y4kotwnaocua3s8sga78twhgfa38uik9osikazfj32rykobwthibgp42s23uexiot6qjp7di0sxah81fanr410ugb6luk45"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "7b2ff8a2-ddc4-44b5-815c-8266fcb8e3be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702325Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getallpaged"
        }
      }
    }
  }, {
    "id" : "1b85d3a0-a110-442f-96bf-6bb6521416a1",
    "name" : "Save Price - 200",
    "request" : {
      "urlPath" : "/price-sheet",
      "method" : "POST",
      "queryParameters" : {
        "an" : {
          "equalTo" : "baj7mgbw8ltvaf8u6tizk59bxjh0rcva1kmfzki5uvt94kjhqhc9vn936jwzl1zf88fc1ifhqag1e3dxdboj2x812161bzrnt48rlp1ao4kv6xl54drktja5oto83y8tv2i38yw"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "1b85d3a0-a110-442f-96bf-6bb6521416a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702255Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Saveprice"
        }
      }
    }
  }, {
    "id" : "3c04519c-ebde-4616-bb34-54146ca1d402",
    "name" : "Unarchive coupon by coupon code",
    "request" : {
      "urlPath" : "/api/rnb/pvt/unarchive/coupon/d4ojvef22kykhja2mf011iyxh4mayyijwyji3nof86jpp7wbqkd48lptjd74v5kanp7nrtq6w7ilqvuy1cdfpsmglvqroepynrhhyagj93wzvf6ccw52okh0ju02z9t7dz0x5",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "test",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3c04519c-ebde-4616-bb34-54146ca1d402",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702211Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Unarchivebycouponcode",
          "schema" : {
            "description" : "Coupon code.",
            "title" : "couponCode",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "cce284ed-500f-4a9a-902e-9bb0019f9df7",
    "name" : "Unarchive Promotion or Tax - 204",
    "request" : {
      "urlPath" : "/api/rnb/pvt/unarchive/calculatorConfiguration/8k40czn4xkz20p0ew22tufa51esl5eb2dc7wkg0pdwhl6hmqb",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "cce284ed-500f-4a9a-902e-9bb0019f9df7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702165Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "UnarchivePromotion"
        }
      }
    }
  }, {
    "id" : "678042b1-dbeb-4c48-bcda-1c8ee0c3da11",
    "name" : "Get All Taxes",
    "request" : {
      "urlPath" : "/api/rnb/pvt/taxes/calculatorconfiguration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"archivedItems\" : [ ],\n  \"disabledItems\" : [ ],\n  \"items\" : [ {\n    \"Campaigns\" : [ ],\n    \"activateGiftsMultiplier\" : false,\n    \"areSalesChannelIdsExclusive\" : false,\n    \"beginDate\" : \"2022-05-09T03:00:00Z\",\n    \"description\" : \"Tax applied by the government\",\n    \"endDate\" : \"2022-06-01T02:30:00Z\",\n    \"hasMaxPricePerItem\" : false,\n    \"idCalculatorConfiguration\" : \"90f4affc-fea0-424c-a7a7-c69aec7bbdc8\",\n    \"idsSalesChannel\" : [ \"1\" ],\n    \"isActive\" : true,\n    \"isArchived\" : false,\n    \"isTax\" : true,\n    \"lastModifiedUtc\" : \"2022-05-10T02:42:52.4493897Z\",\n    \"maxUsage\" : 0,\n    \"name\" : \"Government Tax\",\n    \"percentualTax\" : 10,\n    \"scope\" : {\n      \"allCatalog\" : false,\n      \"brands\" : 1,\n      \"brandsAreInclusive\" : true,\n      \"categories\" : 1,\n      \"categoriesAreInclusive\" : true,\n      \"collections\" : 1,\n      \"collectionsAreInclusive\" : true,\n      \"products\" : 1,\n      \"productsAreInclusive\" : true,\n      \"sellers\" : 0,\n      \"sellersAreInclusive\" : false,\n      \"skus\" : 1,\n      \"skusAreInclusive\" : true\n    },\n    \"status\" : \"active\",\n    \"type\" : \"tax\",\n    \"utmCampain\" : \"\",\n    \"utmSource\" : \"\",\n    \"utmiCampaign\" : \"\"\n  } ],\n  \"limitConfiguration\" : {\n    \"activesCount\" : 1,\n    \"limit\" : 100\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "678042b1-dbeb-4c48-bcda-1c8ee0c3da11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllTaxes",
          "schema" : {
            "properties" : {
              "archivedItems" : {
                "description" : "Archived items.",
                "items" : {
                  "description" : "Archived item.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "disabledItems" : {
                "description" : "Disabled items.",
                "items" : {
                  "description" : "Disabled item.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "items" : {
                "$ref" : "#/components/schemas/GetTaxes"
              },
              "limitConfiguration" : {
                "description" : "Limit configuration.",
                "properties" : {
                  "activesCount" : {
                    "description" : "Actives count.",
                    "type" : "integer"
                  },
                  "limit" : {
                    "description" : "Limit.",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "68a67137-1ddb-4c9e-b375-0d09145c9af8",
    "name" : "Create multiple coupons",
    "request" : {
      "urlPath" : "/api/rnb/pvt/multiple-coupons",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"promobf\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "68a67137-1ddb-4c9e-b375-0d09145c9af8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.702008Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "description" : "Array with the coupon codes that were created.",
            "items" : {
              "description" : "Coupon code.",
              "example" : "promobf",
              "title" : "items",
              "type" : "string"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "719441ca-17be-411c-86e7-7e616e0dc524",
    "name" : "Update Multiple SKU Promotion - 202",
    "request" : {
      "urlPath" : "/api/rnb/pvt/import/calculatorConfiguration/n83y",
      "method" : "PUT"
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "719441ca-17be-411c-86e7-7e616e0dc524",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701968Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "e4f5fe30-417b-4d5b-97e7-34a92dea2113",
    "name" : "Create Multiple SKU Promotion - 200",
    "request" : {
      "urlPath" : "/api/rnb/pvt/import/calculatorConfiguration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e4f5fe30-417b-4d5b-97e7-34a92dea2113",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701873Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)"
        }
      }
    }
  }, {
    "id" : "3f79d205-d275-475c-b9d1-a63d0c625bbf",
    "name" : "Coupon Massive Generation",
    "request" : {
      "urlPath" : "/api/rnb/pvt/coupons",
      "method" : "POST",
      "queryParameters" : {
        "quantity" : {
          "equalTo" : "841746728809281374"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "[ \"ctest-7DLKU492HR4MANV\", \"ctest-QUM3U4HUGJ54301\", \"ctest-0KYBWQUKR3WXV4C\", \"ctest-971CX1N55WZSEBY\", \"ctest-9FCQ0UX80F6K4A7\", \"ctest-HWZEJ7D0D9MP3O7\", \"ctest-7PI34QVEERM8A70\", \"ctest-RT47PC2A116O9QO\", \"ctest-F4T3IQBAGQWRVW7\", \"ctest-8C3MS3U594EPQB8\" ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f79d205-d275-475c-b9d1-a63d0c625bbf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701848Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "MassiveGeneration",
          "schema" : {
            "description" : "Array with the generated coupon codes.",
            "items" : {
              "description" : "Coupon code.",
              "title" : "couponCode",
              "type" : "string"
            },
            "title" : "",
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "32ac8604-771a-4038-9a18-f56004b3d390",
    "name" : "Get coupon by coupon code",
    "request" : {
      "urlPath" : "/api/rnb/pvt/coupon/50wrsomzwbxmx4rop5fyga3rcasnmeopfdwi8bcr1hxz4bmrjly33eluofd8uolkqsbc79c3p39d4nvjcuuzcgnt4v9o6zbm67tme3p46lxwzn6tznzh27gpk8qz71e8j4mdo809lz5ock5oyuqd93",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"couponCode\" : \"test\",\n  \"expirationIntervalPerUse\" : \"00:00:00\",\n  \"isArchived\" : false,\n  \"lastModifiedUtc\" : \"2021-11-10T14:24:39.3683694Z\",\n  \"maxItemsPerClient\" : 10,\n  \"utmSource\" : \"coupon3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32ac8604-771a-4038-9a18-f56004b3d390",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701785Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getbycouponcode",
          "schema" : {
            "properties" : {
              "couponCode" : {
                "description" : "Coupon code.",
                "type" : "string"
              },
              "expirationIntervalPerUse" : {
                "description" : "Coupon expiration interval per use.",
                "type" : "string"
              },
              "isArchived" : {
                "description" : "Defines if the coupon is archived (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "lastModifiedUtc" : {
                "description" : "Date and time of the last update of the coupon in UTC format.",
                "type" : "string"
              },
              "maxItemsPerClient" : {
                "description" : "Maximum items per client that the coupon can be applied.",
                "type" : "integer"
              },
              "utmCampaign" : {
                "description" : "UTM campaign code.",
                "type" : "string"
              },
              "utmSource" : {
                "description" : "UTM source code.",
                "type" : "string"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e60d5bb9-deca-4d69-99bc-e6e600cb631e",
    "name" : "Get coupon usage",
    "request" : {
      "urlPath" : "/api/rnb/pvt/coupon/usage/8f4rmh7bwqp0uw1a3y",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"couponCode\" : \"test\",\n  \"hostName\" : \"account\",\n  \"profileUsages\" : {\n    \"23fa76cd-14e1-43ee-93af-0c04c9f6cfd7\" : {\n      \"orderUsage\" : [ {\n        \"orderId\" : \"11636716780563-01\",\n        \"usageDateUtc\" : \"2021-11-03T23:27:54.8305115Z\"\n      } ]\n    }\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e60d5bb9-deca-4d69-99bc-e6e600cb631e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701668Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getusage",
          "schema" : {
            "properties" : {
              "couponCode" : {
                "description" : "Coupon code.",
                "type" : "string"
              },
              "hostName" : {
                "description" : "Name of the store.",
                "type" : "string"
              },
              "profileUsages" : {
                "description" : "Object with information where and when the coupon was used.",
                "properties" : {
                  "profileId" : {
                    "description" : "Profile ID.",
                    "properties" : {
                      "orderUsage" : {
                        "description" : "Array with all the orders that the coupon was used.",
                        "items" : {
                          "description" : "Object with information about the order that the coupon was used.",
                          "properties" : {
                            "orderId" : {
                              "description" : "Order ID.",
                              "type" : "string"
                            },
                            "usageDateUtc" : {
                              "description" : "Date and time when the coupon was used in the order in UTC format.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      }
                    },
                    "type" : "object"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "883f92d7-6b98-4147-99f7-9347b3e13a8e",
    "name" : "Create coupon",
    "request" : {
      "urlPath" : "/api/rnb/pvt/coupon/",
      "method" : "POST"
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"couponCode\" : \"summersale10\",\n  \"expirationIntervalPerUse\" : \"00:00:00\",\n  \"isArchived\" : false,\n  \"lastModifiedUtc\" : \"2021-11-10T14:24:39.3683694Z\",\n  \"maxItemsPerClient\" : 10,\n  \"utmCampaign\" : \"summer\",\n  \"utmSource\" : \"email\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "883f92d7-6b98-4147-99f7-9347b3e13a8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701541Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "(none)",
          "schema" : {
            "properties" : {
              "couponCode" : {
                "description" : "Coupon code.",
                "type" : "string"
              },
              "expirationIntervalPerUse" : {
                "description" : "Coupon expiration interval per use.",
                "type" : "string"
              },
              "isArchived" : {
                "description" : "Defines if the coupon is archived (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "lastModifiedUtc" : {
                "description" : "Date and time of the last update of the coupon in UTC format.",
                "type" : "string"
              },
              "maxItemsPerClient" : {
                "description" : "Maximum items per client that the coupon can be applied.",
                "type" : "integer"
              },
              "utmCampaign" : {
                "description" : "UTM campaign code.",
                "type" : "string"
              },
              "utmSource" : {
                "description" : "UTM source code.",
                "type" : "string"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "52556aa3-f148-4aba-9a72-896c01f3c398",
    "name" : "Update coupon",
    "request" : {
      "urlPath" : "/api/rnb/pvt/coupon",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"couponCode\" : \"test\",\n  \"expirationIntervalPerUse\" : \"00:00:00\",\n  \"isArchived\" : false,\n  \"lastModifiedUtc\" : \"2021-11-10T14:24:39.3683694Z\",\n  \"maxItemsPerClient\" : 10,\n  \"utmCampaign\" : \"coupon3\",\n  \"utmSource\" : \"coupon3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52556aa3-f148-4aba-9a72-896c01f3c398",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701442Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Update",
          "schema" : {
            "properties" : {
              "couponCode" : {
                "description" : "Coupon code.",
                "type" : "string"
              },
              "expirationIntervalPerUse" : {
                "description" : "Coupon expiration interval per use.",
                "type" : "string"
              },
              "isArchived" : {
                "description" : "Defines if the coupon is archived (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "lastModifiedUtc" : {
                "description" : "Date and time of the last update of the coupon in UTC format.",
                "type" : "string"
              },
              "maxItemsPerClient" : {
                "description" : "Maximum items per client that the coupon can be applied.",
                "type" : "integer"
              },
              "utmCampaign" : {
                "description" : "UTM campaign code.",
                "type" : "string"
              },
              "utmSource" : {
                "description" : "UTM source code.",
                "type" : "string"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "23cb644b-fa80-4947-acdd-fa32ea271263",
    "name" : "Get all coupons",
    "request" : {
      "urlPath" : "/api/rnb/pvt/coupon",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"couponCode\" : \"test\",\n  \"expirationIntervalPerUse\" : \"00:00:00\",\n  \"isArchived\" : false,\n  \"lastModifiedUtc\" : \"2021-11-10T14:24:39.3683694Z\",\n  \"maxItemsPerClient\" : 10,\n  \"utmCampaign\" : \"coupon3\",\n  \"utmSource\" : \"coupon3\"\n}, {\n  \"couponCode\" : \"test-lucian2\",\n  \"expirationIntervalPerUse\" : \"00:00:00\",\n  \"isArchived\" : false,\n  \"lastModifiedUtc\" : \"2020-06-22T18:25:24.4583474Z\",\n  \"maxItemsPerClient\" : 10,\n  \"utmSource\" : \"cupom3\"\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "23cb644b-fa80-4947-acdd-fa32ea271263",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701344Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getall",
          "schema" : {
            "items" : {
              "description" : "Object with information about the coupon.",
              "properties" : {
                "couponCode" : {
                  "description" : "Coupon code.",
                  "type" : "string"
                },
                "expirationIntervalPerUse" : {
                  "description" : "Coupon expiration interval per use.",
                  "type" : "string"
                },
                "isArchived" : {
                  "description" : "Defines if the coupon is archived (`true`) or not (`false`).",
                  "type" : "boolean"
                },
                "lastModifiedUtc" : {
                  "description" : "Date and time of the last update of the coupon in UTC format.",
                  "type" : "string"
                },
                "maxItemsPerClient" : {
                  "description" : "Maximum items per client that the coupon can be applied.",
                  "type" : "integer"
                },
                "utmCampaign" : {
                  "description" : "UTM campaign code.",
                  "type" : "string"
                },
                "utmSource" : {
                  "description" : "UTM source code.",
                  "type" : "string"
                }
              },
              "title" : "",
              "type" : "object"
            },
            "title" : "",
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "ee01b492-48ad-49da-812f-29669e9e7473",
    "name" : "Get campaign audience configuration",
    "request" : {
      "urlPath" : "/api/rnb/pvt/campaignConfiguration/omm6",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"beginDateUtc\" : \"2020-05-01T21:30:00Z\",\n  \"endDateUtc\" : \"2020-05-02T01:30:00Z\",\n  \"id\" : \"dd270d06-1ed1-47fc-b04e-a2431121b5a4\",\n  \"isActive\" : true,\n  \"isAndOperator\" : false,\n  \"isArchived\" : false,\n  \"lastModified\" : {\n    \"dateUtc\" : \"2020-05-01T21:22:01.807398Z\",\n    \"user\" : \"email@email.com\"\n  },\n  \"name\" : \"Interna\",\n  \"targetConfigurations\" : [ {\n    \"affiliates\" : [ ],\n    \"areSalesChannelIdsExclusive\" : false,\n    \"brands\" : [ ],\n    \"brandsAreInclusive\" : true,\n    \"campaigns\" : [ ],\n    \"cardIssuers\" : [ ],\n    \"categories\" : [ ],\n    \"categoriesAreInclusive\" : true,\n    \"clusterExpressions\" : [ ],\n    \"clusterOperator\" : \"all\",\n    \"collections\" : [ ],\n    \"collections1BuyTogether\" : [ ],\n    \"collections2BuyTogether\" : [ ],\n    \"collectionsIsInclusive\" : true,\n    \"compareListPriceAndPrice\" : false,\n    \"coupon\" : [ ],\n    \"daysAgoOfPurchases\" : 0,\n    \"enableBuyTogetherPerSku\" : false,\n    \"featured\" : false,\n    \"firstBuyIsProfileOptimistic\" : false,\n    \"giftListTypes\" : [ ],\n    \"id\" : \"77ae1e4c-a216-4b15-a4a3-ae64ec298988\",\n    \"idSellerIsInclusive\" : false,\n    \"idsSalesChannel\" : [ ],\n    \"installment\" : 0,\n    \"isDifferentListPriceAndPrice\" : false,\n    \"isFirstBuy\" : false,\n    \"isMinMaxInstallments\" : false,\n    \"isSlaSelected\" : false,\n    \"itemMaxPrice\" : 0,\n    \"itemMinPrice\" : 0,\n    \"listBrand1BuyTogether\" : [ ],\n    \"listCategory1BuyTogether\" : [ ],\n    \"listSku1BuyTogether\" : [ ],\n    \"listSku2BuyTogether\" : [ ],\n    \"marketingTags\" : [ \"MKT1\" ],\n    \"marketingTagsAreNotInclusive\" : false,\n    \"maxInstallment\" : 0,\n    \"maxUsage\" : 0,\n    \"maxUsagePerClient\" : 0,\n    \"merchants\" : [ ],\n    \"minInstallment\" : 0,\n    \"minimumQuantityBuyTogether\" : 1,\n    \"multipleUsePerClient\" : false,\n    \"name\" : \"Social Sellers\",\n    \"origin\" : \"Marketplace\",\n    \"paymentsMethods\" : [ ],\n    \"paymentsRules\" : [ ],\n    \"percentualDiscountValueList\" : [ ],\n    \"products\" : [ ],\n    \"productsAreInclusive\" : false,\n    \"productsSpecifications\" : [ ],\n    \"quantityToAffectBuyTogether\" : 0,\n    \"restrictionsBins\" : [ ],\n    \"shouldDistributeDiscountAmongMatchedItems\" : false,\n    \"skus\" : [ ],\n    \"skusAreInclusive\" : true,\n    \"slasIds\" : [ ],\n    \"stores\" : [ ],\n    \"storesAreInclusive\" : false,\n    \"totalValueCeling\" : 0,\n    \"totalValueFloor\" : 0,\n    \"totalValueIncludeAllItems\" : false,\n    \"totalValueMode\" : \"IncludeMatchedItems\",\n    \"totalValuePurchase\" : 0,\n    \"useNewProgressiveAlgorithm\" : false,\n    \"zipCodeRanges\" : [ {\n      \"inclusive\" : true\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee01b492-48ad-49da-812f-29669e9e7473",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.701203Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getcampaignconfiguration",
          "schema" : {
            "properties" : {
              "beginDateUtc" : {
                "description" : "Start date of the campaign audience in UTC format.",
                "type" : "string"
              },
              "endDateUtc" : {
                "description" : "End date of the campaign audience in UTC format.",
                "type" : "string"
              },
              "id" : {
                "description" : "Campaign audience ID.",
                "type" : "string"
              },
              "isActive" : {
                "description" : "Defines if the campaign audience is active (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "isAndOperator" : {
                "description" : "When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.",
                "type" : "boolean"
              },
              "isArchived" : {
                "description" : "Defines if the campaign audience is archived (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "lastModified" : {
                "description" : "Object with information about the most recent update of the campaign audience.",
                "properties" : {
                  "dateUtc" : {
                    "description" : "Date of the most recent update in UTC format.",
                    "type" : "string"
                  },
                  "user" : {
                    "description" : "Email of the user who updated the campaign audience for the latest time.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "name" : {
                "description" : "Campaign audience name.",
                "type" : "string"
              },
              "targetConfigurations" : {
                "description" : "Array that contains all target audience that the campaign audience will be valid.",
                "items" : {
                  "description" : "Object with information about the target audience.",
                  "properties" : {
                    "affiliates" : {
                      "description" : "Marketplace order identifier. The discount will apply to selected affiliates.",
                      "items" : {
                        "description" : "Object with information of the affiliate.",
                        "properties" : {
                          "id" : {
                            "description" : "Affiliate ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Affiliate Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "areSalesChannelIdsExclusive" : {
                      "description" : "Defines if the trade policy IDs are exclusive.",
                      "type" : "boolean"
                    },
                    "brands" : {
                      "description" : "Object composed by the brands that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the brand.",
                        "properties" : {
                          "id" : {
                            "description" : "Brand ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Brand Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "brandsAreInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "campaigns" : {
                      "description" : "Campaign Audiences that activate this promotion.",
                      "type" : "array"
                    },
                    "cardIssuers" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "categories" : {
                      "description" : "Object composed by the categories that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the category.",
                        "properties" : {
                          "id" : {
                            "description" : "Category ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Category Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "categoriesAreInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "clusterExpressions" : {
                      "description" : "An expression to use with clusters.",
                      "items" : {
                        "description" : "Cluster expression.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "collections" : {
                      "description" : "Object composed by the collections that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the collection.",
                        "properties" : {
                          "id" : {
                            "description" : "Collection ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Collection Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "collections1BuyTogether" : {
                      "description" : "Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
                      "items" : {
                        "description" : "Collection ID.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "collections2BuyTogether" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "collectionsIsInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "compareListPriceAndPrice" : {
                      "description" : "If the **List Price** and **Price** are the same.",
                      "type" : "boolean"
                    },
                    "coupon" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "daysAgoOfPurchases" : {
                      "description" : "Number of days that are considered to add the purchase history.",
                      "type" : "integer"
                    },
                    "enableBuyTogetherPerSku" : {
                      "description" : "Enable **Buy Together** per SKU.",
                      "type" : "boolean"
                    },
                    "featured" : {
                      "description" : "Defines if the target audience is featured (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "firstBuyIsProfileOptimistic" : {
                      "description" : "Applies the discount even if the user is not logged.",
                      "type" : "boolean"
                    },
                    "giftListTypes" : {
                      "description" : "Gifts List Type.",
                      "items" : {
                        "description" : "Gift List Type.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "id" : {
                      "description" : "Target audience ID.",
                      "type" : "string"
                    },
                    "idSellerIsInclusive" : {
                      "description" : "Defines if at least one of the sellers must be valid to active the campaign audience.",
                      "type" : "boolean"
                    },
                    "idsSalesChannel" : {
                      "description" : "Array with all the trade policies that activate the campaign audience.",
                      "items" : {
                        "description" : "Trade policy ID.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "installment" : {
                      "deprecated" : true,
                      "type" : "integer"
                    },
                    "isDifferentListPriceAndPrice" : {
                      "description" : "Applies the campaign audience only if the list price and price is different.",
                      "type" : "boolean"
                    },
                    "isFirstBuy" : {
                      "description" : "Applies the discount only if it's a first buy.",
                      "type" : "boolean"
                    },
                    "isMinMaxInstallments" : {
                      "description" : "Set if the campaign audience will be applied considering a minimum and maximum values for installments.",
                      "type" : "boolean"
                    },
                    "isSlaSelected" : {
                      "description" : "Applies selected discount only when one of the defined shipping method is selected by the customer.",
                      "type" : "boolean"
                    },
                    "itemMaxPrice" : {
                      "description" : "Maximum price of the item.",
                      "type" : "number"
                    },
                    "itemMinPrice" : {
                      "description" : "Minimum price of the item.",
                      "type" : "number"
                    },
                    "listBrand1BuyTogether" : {
                      "description" : "Brand first list for the promotion **Buy Together.",
                      "type" : "array"
                    },
                    "listCategory1BuyTogether" : {
                      "description" : "Category first list for the promotion **Buy Together**.",
                      "type" : "array"
                    },
                    "listSku1BuyTogether" : {
                      "description" : "SKU first list for the promotion **Buy Together**.",
                      "type" : "array"
                    },
                    "listSku2BuyTogether" : {
                      "description" : "SKU second list for the promotion **Buy Together**.",
                      "type" : "array"
                    },
                    "marketingTags" : {
                      "description" : "Array with all the campaign audience's marketing tags.",
                      "items" : {
                        "description" : "Campaign audience marketing tags.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "marketingTagsAreNotInclusive" : {
                      "description" : "Defines if marketing tags are not inclusive.",
                      "type" : "boolean"
                    },
                    "maxInstallment" : {
                      "description" : "Maximum value for installment.",
                      "type" : "integer"
                    },
                    "maxUsage" : {
                      "description" : "Defines how many times the campaign audience can be used.",
                      "type" : "integer"
                    },
                    "maxUsagePerClient" : {
                      "description" : "Defines if the campaign audience can be used multiple times per client.",
                      "type" : "integer"
                    },
                    "merchants" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "minInstallment" : {
                      "description" : "Minimum value for installment.",
                      "type" : "integer"
                    },
                    "minimumQuantityBuyTogether" : {
                      "description" : "Minimum quantity for **Buy Together** promotion.",
                      "type" : "integer"
                    },
                    "multipleUsePerClient" : {
                      "description" : "Defines if the campaign audience can be used multiple times per client.",
                      "type" : "boolean"
                    },
                    "name" : {
                      "description" : "Target audience name.",
                      "type" : "string"
                    },
                    "origin" : {
                      "description" : "Shows the campaign audience origin, `Marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
                      "type" : "string"
                    },
                    "paymentsMethods" : {
                      "description" : "Array composed by all the Payments Methods.",
                      "items" : {
                        "description" : "Object with information of the Payment Method.",
                        "properties" : {
                          "id" : {
                            "description" : "Payment Method ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Payment Method Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "paymentsRules" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "percentualDiscountValueList" : {
                      "description" : "Percentual discount value list.",
                      "items" : {
                        "description" : "Percentual discount value.",
                        "type" : "number"
                      },
                      "type" : "array"
                    },
                    "products" : {
                      "description" : "Object composed by the products that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the product.",
                        "properties" : {
                          "id" : {
                            "description" : "Product ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Product Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "productsAreInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "productsSpecifications" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "quantityToAffectBuyTogether" : {
                      "description" : "Quantity to affect **Buy Together** promotion.",
                      "type" : "integer"
                    },
                    "restrictionsBins" : {
                      "description" : "The discount will be granted if the card's BIN is given.",
                      "items" : {
                        "description" : "Card's BIN.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "shouldDistributeDiscountAmongMatchedItems" : {
                      "description" : "Should distribute discount among matched items.",
                      "type" : "boolean"
                    },
                    "skus" : {
                      "description" : "Object composed by the SKUs that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the SKU.",
                        "properties" : {
                          "id" : {
                            "description" : "SKU ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "SKU Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "skusAreInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "slasIds" : {
                      "description" : "The discount will be granted if the shipping method is the same as the one given.",
                      "items" : {
                        "description" : "Shipping method.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "stores" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "storesAreInclusive" : {
                      "deprecated" : true,
                      "type" : "boolean"
                    },
                    "totalValueCeling" : {
                      "description" : "Maximum chart value to active the campaign audience.",
                      "type" : "number"
                    },
                    "totalValueFloor" : {
                      "description" : "Minimum chart value to active the campaign audience.",
                      "type" : "number"
                    },
                    "totalValueIncludeAllItems" : {
                      "deprecated" : true,
                      "type" : "boolean"
                    },
                    "totalValueMode" : {
                      "description" : "Total chart value to active the campaign audience.",
                      "type" : "string"
                    },
                    "totalValuePurchase" : {
                      "description" : "Total value a client must have in past orders to active the campaign audience.",
                      "type" : "number"
                    },
                    "useNewProgressiveAlgorithm" : {
                      "description" : "Use new progressive algorithm.",
                      "type" : "boolean"
                    },
                    "zipCodeRanges" : {
                      "description" : "Range of the zip code that applies the campaign audience.",
                      "items" : {
                        "description" : "Zip code that applies the campaign audience.",
                        "properties" : {
                          "inclusive" : {
                            "description" : "Defines if the zip code applies the campaign audience.",
                            "type" : "boolean"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1b7a890b-7285-445a-815f-d88957418ee3",
    "name" : "Create campaign audience",
    "request" : {
      "urlPath" : "/api/rnb/pvt/campaignConfiguration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"beginDateUtc\" : \"2020-05-01T21:30:00Z\",\n  \"endDateUtc\" : \"2020-05-02T01:30:00Z\",\n  \"id\" : \"dd270d06-1ed1-47fc-b04e-a2431121b5a4\",\n  \"isActive\" : true,\n  \"isAndOperator\" : false,\n  \"isArchived\" : false,\n  \"lastModified\" : {\n    \"dateUtc\" : \"2020-05-01T21:22:01.807398Z\",\n    \"user\" : \"email@email.com\"\n  },\n  \"name\" : \"Interna\",\n  \"targetConfigurations\" : [ {\n    \"affiliates\" : [ ],\n    \"areSalesChannelIdsExclusive\" : false,\n    \"brands\" : [ ],\n    \"brandsAreInclusive\" : true,\n    \"campaigns\" : [ ],\n    \"cardIssuers\" : [ ],\n    \"categories\" : [ ],\n    \"categoriesAreInclusive\" : true,\n    \"clusterExpressions\" : [ ],\n    \"collections\" : [ ],\n    \"collections1BuyTogether\" : [ ],\n    \"collections2BuyTogether\" : [ ],\n    \"collectionsIsInclusive\" : true,\n    \"compareListPriceAndPrice\" : false,\n    \"coupon\" : [ ],\n    \"daysAgoOfPurchases\" : 0,\n    \"enableBuyTogetherPerSku\" : false,\n    \"featured\" : false,\n    \"firstBuyIsProfileOptimistic\" : false,\n    \"giftListTypes\" : [ ],\n    \"id\" : \"77ae1e4c-a216-4b15-a4a3-ae64ec298988\",\n    \"idSellerIsInclusive\" : false,\n    \"idsSalesChannel\" : [ ],\n    \"installment\" : 0,\n    \"isDifferentListPriceAndPrice\" : false,\n    \"isFirstBuy\" : false,\n    \"isMinMaxInstallments\" : false,\n    \"isSlaSelected\" : false,\n    \"itemMaxPrice\" : 0,\n    \"itemMinPrice\" : 0,\n    \"listBrand1BuyTogether\" : [ ],\n    \"listCategory1BuyTogether\" : [ ],\n    \"listSku1BuyTogether\" : [ ],\n    \"listSku2BuyTogether\" : [ ],\n    \"marketingTags\" : [ \"MKT1\" ],\n    \"marketingTagsAreNotInclusive\" : false,\n    \"maxInstallment\" : 0,\n    \"maxUsage\" : 0,\n    \"maxUsagePerClient\" : 0,\n    \"merchants\" : [ ],\n    \"minInstallment\" : 0,\n    \"minimumQuantityBuyTogether\" : 1,\n    \"multipleUsePerClient\" : false,\n    \"name\" : \"Social Sellers\",\n    \"origin\" : \"Marketplace\",\n    \"paymentsMethods\" : [ ],\n    \"paymentsRules\" : [ ],\n    \"percentualDiscountValueList\" : [ ],\n    \"products\" : [ ],\n    \"productsAreInclusive\" : false,\n    \"productsSpecifications\" : [ ],\n    \"quantityToAffectBuyTogether\" : 0,\n    \"restrictionsBins\" : [ ],\n    \"shouldDistributeDiscountAmongMatchedItems\" : false,\n    \"skus\" : [ ],\n    \"skusAreInclusive\" : true,\n    \"slasIds\" : [ ],\n    \"stores\" : [ ],\n    \"storesAreInclusive\" : false,\n    \"totalValueCeling\" : 0,\n    \"totalValueFloor\" : 0,\n    \"totalValueIncludeAllItems\" : false,\n    \"totalValueMode\" : \"IncludeMatchedItems\",\n    \"totalValuePurchase\" : 0,\n    \"useNewProgressiveAlgorithm\" : false,\n    \"zipCodeRanges\" : [ {\n      \"inclusive\" : true\n    } ]\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b7a890b-7285-445a-815f-d88957418ee3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.699961Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Setcampaignconfiguration",
          "schema" : {
            "properties" : {
              "beginDateUtc" : {
                "description" : "Start date of the campaign audience in UTC format.",
                "type" : "string"
              },
              "endDateUtc" : {
                "description" : "End date of the campaign audience in UTC format.",
                "type" : "string"
              },
              "id" : {
                "description" : "Campaign audience ID.",
                "type" : "string"
              },
              "isActive" : {
                "description" : "Defines if the campaign audience is active (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "isAndOperator" : {
                "description" : "When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.",
                "type" : "boolean"
              },
              "isArchived" : {
                "description" : "Defines if the campaign audience is archived (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "lastModified" : {
                "description" : "Object with information about the most recent update of the campaign audience.",
                "properties" : {
                  "dateUtc" : {
                    "description" : "Date of the most recent update in UTC format.",
                    "type" : "string"
                  },
                  "user" : {
                    "description" : "Email of the user who updated the campaign audience for the latest time.",
                    "type" : "string"
                  }
                },
                "type" : "object"
              },
              "name" : {
                "description" : "Campaign audience name.",
                "type" : "string"
              },
              "targetConfigurations" : {
                "description" : "Array that contains all target audience that the campaign audience will be valid.",
                "items" : {
                  "description" : "Object with information about the target audience.",
                  "properties" : {
                    "affiliates" : {
                      "description" : "Marketplace order identifier. The discount will apply to selected affiliates.",
                      "items" : {
                        "description" : "Object with information of the affiliate.",
                        "properties" : {
                          "id" : {
                            "description" : "Affiliate ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Affiliate Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "areSalesChannelIdsExclusive" : {
                      "description" : "Defines if the trade policy IDs are exclusive.",
                      "type" : "boolean"
                    },
                    "brands" : {
                      "description" : "Object composed by the brands that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the brand.",
                        "properties" : {
                          "id" : {
                            "description" : "Brand ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Brand Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "brandsAreInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "campaigns" : {
                      "description" : "Campaign Audiences that activate this promotion.",
                      "type" : "array"
                    },
                    "cardIssuers" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "categories" : {
                      "description" : "Object composed by the categories that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the category.",
                        "properties" : {
                          "id" : {
                            "description" : "Category ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Category Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "categoriesAreInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "clusterExpressions" : {
                      "description" : "An expression to use with clusters.",
                      "items" : {
                        "description" : "Cluster expression.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "clusterOperator" : {
                      "deprecated" : true,
                      "type" : "string"
                    },
                    "collections" : {
                      "description" : "Object composed by the collections that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the collection.",
                        "properties" : {
                          "id" : {
                            "description" : "Collection ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Collection Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "collections1BuyTogether" : {
                      "description" : "Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
                      "items" : {
                        "description" : "Collection ID.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "collections2BuyTogether" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "collectionsIsInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "compareListPriceAndPrice" : {
                      "description" : "If the **List Price** and **Price** are the same.",
                      "type" : "boolean"
                    },
                    "coupon" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "daysAgoOfPurchases" : {
                      "description" : "Number of days that are considered to add the purchase history.",
                      "type" : "integer"
                    },
                    "enableBuyTogetherPerSku" : {
                      "description" : "Enable **Buy Together** per SKU.",
                      "type" : "boolean"
                    },
                    "featured" : {
                      "description" : "Defines if the target audience is feature (`true`) or not (`false`).",
                      "type" : "boolean"
                    },
                    "firstBuyIsProfileOptimistic" : {
                      "description" : "Applies the discount even if the user is not logged.",
                      "type" : "boolean"
                    },
                    "giftListTypes" : {
                      "description" : "Gifts List Type.",
                      "items" : {
                        "description" : "Gift List Type.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "id" : {
                      "description" : "Target audience ID.",
                      "type" : "string"
                    },
                    "idSellerIsInclusive" : {
                      "description" : "Defines if at least one of the sellers must be valid to active the campaign audience.",
                      "type" : "boolean"
                    },
                    "idsSalesChannel" : {
                      "description" : "Array with all the trade policies that activate the campaign audience.",
                      "items" : {
                        "description" : "Trade policy ID.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "installment" : {
                      "deprecated" : true,
                      "type" : "integer"
                    },
                    "isDifferentListPriceAndPrice" : {
                      "description" : "Applies the campaign audience only if the list price and price is different.",
                      "type" : "boolean"
                    },
                    "isFirstBuy" : {
                      "description" : "Applies the discount only if it's a first buy.",
                      "type" : "boolean"
                    },
                    "isMinMaxInstallments" : {
                      "description" : "Set if the campaign audience will be applied considering a minimum and maximum values for installments.",
                      "type" : "boolean"
                    },
                    "isSlaSelected" : {
                      "description" : "Applies selected discount only when one of the defined shipping method is selected by the customer.",
                      "type" : "boolean"
                    },
                    "itemMaxPrice" : {
                      "description" : "Maximum price of the item.",
                      "type" : "number"
                    },
                    "itemMinPrice" : {
                      "description" : "Minimum price of the item.",
                      "type" : "number"
                    },
                    "listBrand1BuyTogether" : {
                      "description" : "Brand first list for the promotion **Buy Together.",
                      "type" : "array"
                    },
                    "listCategory1BuyTogether" : {
                      "description" : "Category first list for the promotion **Buy Together**.",
                      "type" : "array"
                    },
                    "listSku1BuyTogether" : {
                      "description" : "SKU first list for the promotion **Buy Together**.",
                      "type" : "array"
                    },
                    "listSku2BuyTogether" : {
                      "description" : "SKU second list for the promotion **Buy Together**.",
                      "type" : "array"
                    },
                    "marketingTags" : {
                      "description" : "Array with all the campaign audience's marketing tags.",
                      "items" : {
                        "description" : "Campaign audience marketing tags.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "marketingTagsAreNotInclusive" : {
                      "description" : "Defines if marketing tags are not inclusive.",
                      "type" : "boolean"
                    },
                    "maxInstallment" : {
                      "description" : "Maximum value for installment.",
                      "type" : "integer"
                    },
                    "maxUsage" : {
                      "description" : "Defines how many times the campaign audience can be used.",
                      "type" : "integer"
                    },
                    "maxUsagePerClient" : {
                      "description" : "Defines if the campaign audience can be used multiple times per client.",
                      "type" : "integer"
                    },
                    "merchants" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "minInstallment" : {
                      "description" : "Minimum value for installment.",
                      "type" : "integer"
                    },
                    "minimumQuantityBuyTogether" : {
                      "description" : "Minimum quantity for **Buy Together** promotion.",
                      "type" : "integer"
                    },
                    "multipleUsePerClient" : {
                      "description" : "Defines if the campaign audience can be used multiple times per client.",
                      "type" : "boolean"
                    },
                    "name" : {
                      "description" : "Target audience name.",
                      "type" : "string"
                    },
                    "origin" : {
                      "description" : "Shows the campaign audience origin, `Marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
                      "type" : "string"
                    },
                    "paymentsMethods" : {
                      "description" : "Array composed by all the Payments Methods.",
                      "items" : {
                        "description" : "Object with information of the Payment Method.",
                        "properties" : {
                          "id" : {
                            "description" : "Payment Method ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Payment Method Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "paymentsRules" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "percentualDiscountValueList" : {
                      "description" : "Percentual discount value list.",
                      "items" : {
                        "description" : "Percentual discount value.",
                        "type" : "number"
                      },
                      "type" : "array"
                    },
                    "products" : {
                      "description" : "Object composed by the products that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the product.",
                        "properties" : {
                          "id" : {
                            "description" : "Product ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "Product Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "productsAreInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "productsSpecifications" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "quantityToAffectBuyTogether" : {
                      "description" : "Quantity to affect **Buy Together** promotion.",
                      "type" : "integer"
                    },
                    "restrictionsBins" : {
                      "description" : "The discount will be granted if the card's BIN is given.",
                      "items" : {
                        "description" : "Card's BIN.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "shouldDistributeDiscountAmongMatchedItems" : {
                      "description" : "Should distribute discount among matched items.",
                      "type" : "boolean"
                    },
                    "skus" : {
                      "description" : "Object composed by the SKUs that will activate or deactivate the campaign audience.",
                      "items" : {
                        "description" : "Object with information of the SKU.",
                        "properties" : {
                          "id" : {
                            "description" : "SKU ID.",
                            "type" : "string"
                          },
                          "name" : {
                            "description" : "SKU Name.",
                            "type" : "string"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    },
                    "skusAreInclusive" : {
                      "description" : "If set to `true`, this campaign audience will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this campaign audience not to be applied.",
                      "type" : "boolean"
                    },
                    "slasIds" : {
                      "description" : "The discount will be granted if the shipping method is the same as the one given.",
                      "items" : {
                        "description" : "Shipping method.",
                        "type" : "string"
                      },
                      "type" : "array"
                    },
                    "stores" : {
                      "deprecated" : true,
                      "type" : "array"
                    },
                    "storesAreInclusive" : {
                      "deprecated" : true,
                      "type" : "boolean"
                    },
                    "totalValueCeling" : {
                      "description" : "Maximum chart value to active the campaign audience.",
                      "type" : "number"
                    },
                    "totalValueFloor" : {
                      "description" : "Minimum chart value to active the campaign audience.",
                      "type" : "number"
                    },
                    "totalValueIncludeAllItems" : {
                      "deprecated" : true,
                      "type" : "boolean"
                    },
                    "totalValueMode" : {
                      "description" : "Total chart value to active the campaign audience.",
                      "type" : "string"
                    },
                    "totalValuePurchase" : {
                      "description" : "Total value a client must have in past orders to active the campaign audience.",
                      "type" : "number"
                    },
                    "useNewProgressiveAlgorithm" : {
                      "description" : "Use new progressive algorithm.",
                      "type" : "boolean"
                    },
                    "zipCodeRanges" : {
                      "description" : "Range of the zip code that applies the campaign audience.",
                      "items" : {
                        "description" : "Zip code that applies the campaign audience.",
                        "properties" : {
                          "inclusive" : {
                            "description" : "Defines if the zip code applies the campaign audience.",
                            "type" : "boolean"
                          }
                        },
                        "type" : "object"
                      },
                      "type" : "array"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8fda3cfd-8805-4d38-a949-35b856a5669e",
    "name" : "Get all campaign audiences",
    "request" : {
      "urlPath" : "/api/rnb/pvt/campaignConfiguration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "[ {\n  \"beginDateUtc\" : \"2020-05-01T21:30:00Z\",\n  \"endDateUtc\" : \"2020-05-02T01:30:00Z\",\n  \"id\" : \"dd270d06-1ed1-47fc-b04e-a2431121b5a4\",\n  \"isActive\" : true,\n  \"isAndOperator\" : false,\n  \"isArchived\" : false,\n  \"lastModified\" : {\n    \"dateUtc\" : \"2020-05-01T21:22:01.807398Z\",\n    \"user\" : \"email@email.com\"\n  },\n  \"name\" : \"Interna\",\n  \"targetConfigurations\" : [ {\n    \"affiliates\" : [ ],\n    \"areSalesChannelIdsExclusive\" : false,\n    \"brands\" : [ ],\n    \"brandsAreInclusive\" : true,\n    \"campaigns\" : [ ],\n    \"cardIssuers\" : [ ],\n    \"categories\" : [ ],\n    \"categoriesAreInclusive\" : true,\n    \"clusterExpressions\" : [ ],\n    \"clusterOperator\" : \"all\",\n    \"collections\" : [ ],\n    \"collections1BuyTogether\" : [ ],\n    \"collections2BuyTogether\" : [ ],\n    \"collectionsIsInclusive\" : true,\n    \"compareListPriceAndPrice\" : false,\n    \"coupon\" : [ ],\n    \"daysAgoOfPurchases\" : 0,\n    \"enableBuyTogetherPerSku\" : false,\n    \"featured\" : false,\n    \"firstBuyIsProfileOptimistic\" : false,\n    \"giftListTypes\" : [ ],\n    \"id\" : \"77ae1e4c-a216-4b15-a4a3-ae64ec298988\",\n    \"idSellerIsInclusive\" : false,\n    \"idsSalesChannel\" : [ ],\n    \"installment\" : 0,\n    \"isDifferentListPriceAndPrice\" : false,\n    \"isFirstBuy\" : false,\n    \"isMinMaxInstallments\" : false,\n    \"isSlaSelected\" : false,\n    \"itemMaxPrice\" : 0,\n    \"itemMinPrice\" : 0,\n    \"listBrand1BuyTogether\" : [ ],\n    \"listCategory1BuyTogether\" : [ ],\n    \"listSku1BuyTogether\" : [ ],\n    \"listSku2BuyTogether\" : [ ],\n    \"marketingTags\" : [ \"MKT1\" ],\n    \"marketingTagsAreNotInclusive\" : false,\n    \"maxInstallment\" : 0,\n    \"maxUsage\" : 0,\n    \"maxUsagePerClient\" : 0,\n    \"merchants\" : [ ],\n    \"minInstallment\" : 0,\n    \"minimumQuantityBuyTogether\" : 1,\n    \"multipleUsePerClient\" : false,\n    \"name\" : \"Social Sellers\",\n    \"origin\" : \"Marketplace\",\n    \"paymentsMethods\" : [ ],\n    \"paymentsRules\" : [ ],\n    \"percentualDiscountValueList\" : [ ],\n    \"products\" : [ ],\n    \"productsAreInclusive\" : false,\n    \"productsSpecifications\" : [ ],\n    \"quantityToAffectBuyTogether\" : 0,\n    \"restrictionsBins\" : [ ],\n    \"shouldDistributeDiscountAmongMatchedItems\" : false,\n    \"skus\" : [ ],\n    \"skusAreInclusive\" : true,\n    \"slasIds\" : [ ],\n    \"stores\" : [ ],\n    \"storesAreInclusive\" : false,\n    \"totalValueCeling\" : 0,\n    \"totalValueFloor\" : 0,\n    \"totalValueIncludeAllItems\" : false,\n    \"totalValueMode\" : \"IncludeMatchedItems\",\n    \"totalValuePurchase\" : 0,\n    \"useNewProgressiveAlgorithm\" : false,\n    \"zipCodeRanges\" : [ {\n      \"inclusive\" : true\n    } ]\n  } ]\n} ]",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fda3cfd-8805-4d38-a949-35b856a5669e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.698819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getcampaignaudiences",
          "schema" : {
            "description" : "Array of campaign audiences.",
            "items" : {
              "description" : "Object containing information about the campaign audience.",
              "properties" : {
                "beginDateUtc" : {
                  "description" : "Start date of the campaign audience in UTC format.",
                  "type" : "string"
                },
                "endDateUtc" : {
                  "description" : "End date of the campaign audience in UTC format.",
                  "type" : "string"
                },
                "id" : {
                  "description" : "Campaign audience ID.",
                  "type" : "string"
                },
                "isActive" : {
                  "description" : "Defines if the campaign audience is active (`true`) or not (`false`).",
                  "type" : "boolean"
                },
                "isAndOperator" : {
                  "description" : "When `true`, determines that all the `targetConfigurations` need to be valid for the campaign audience to be active. When `false`, determines that if at least one of the `targetConfigurations` is valid, the campaign audience will be active.",
                  "type" : "boolean"
                },
                "isArchived" : {
                  "description" : "Defines if the campaign audience is archived (`true`) or not (`false`).",
                  "type" : "boolean"
                },
                "lastModified" : {
                  "description" : "Object with information about the most recent update of the campaign audience.",
                  "properties" : {
                    "dateUtc" : {
                      "description" : "Date of the most recent update in UTC format.",
                      "type" : "string"
                    },
                    "user" : {
                      "description" : "Email of the user who updated the campaign audience for the latest time.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "name" : {
                  "description" : "Campaign audience name.",
                  "type" : "string"
                },
                "targetConfigurations" : {
                  "description" : "Array that contains all target audience that the campaign audience will be valid.",
                  "items" : {
                    "description" : "Object with information about the target audience.",
                    "properties" : {
                      "affiliates" : {
                        "description" : "Marketplace order identifier. The discount will apply to selected affiliates.",
                        "items" : {
                          "description" : "Object with information of the affiliate.",
                          "properties" : {
                            "id" : {
                              "description" : "Affiliate ID.",
                              "type" : "string"
                            },
                            "name" : {
                              "description" : "Affiliate Name.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "areSalesChannelIdsExclusive" : {
                        "description" : "Defines if the trade policy IDs are exclusive.",
                        "type" : "boolean"
                      },
                      "brands" : {
                        "description" : "Object composed by the brands that will activate or deactivate the campaign audience.",
                        "items" : {
                          "description" : "Object with information of the brand.",
                          "properties" : {
                            "id" : {
                              "description" : "Brand ID.",
                              "type" : "string"
                            },
                            "name" : {
                              "description" : "Brand Name.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "brandsAreInclusive" : {
                        "description" : "If set to `true`, this campaign audience will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this campaign audience not to be applied.",
                        "type" : "boolean"
                      },
                      "campaigns" : {
                        "description" : "Campaign Audiences that activate this promotion.",
                        "type" : "array"
                      },
                      "cardIssuers" : {
                        "deprecated" : true,
                        "type" : "array"
                      },
                      "categories" : {
                        "description" : "Object composed by the categories that will activate or deactivate the campaign audience.",
                        "items" : {
                          "description" : "Object with information of the category.",
                          "properties" : {
                            "id" : {
                              "description" : "Category ID.",
                              "type" : "string"
                            },
                            "name" : {
                              "description" : "Category Name.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "categoriesAreInclusive" : {
                        "description" : "If set to `true`, this campaign audience will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this campaign audience not to be applied.",
                        "type" : "boolean"
                      },
                      "clusterExpressions" : {
                        "description" : "An expression to use with clusters.",
                        "items" : {
                          "description" : "Cluster expression.",
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "clusterOperator" : {
                        "deprecated" : true,
                        "type" : "string"
                      },
                      "collections" : {
                        "description" : "Object composed by the collections that will activate or deactivate the campaign audience.",
                        "items" : {
                          "description" : "Object with information of the collection.",
                          "properties" : {
                            "id" : {
                              "description" : "Collection ID.",
                              "type" : "string"
                            },
                            "name" : {
                              "description" : "Collection Name.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "collections1BuyTogether" : {
                        "description" : "Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
                        "items" : {
                          "description" : "Collection ID.",
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "collections2BuyTogether" : {
                        "deprecated" : true,
                        "type" : "array"
                      },
                      "collectionsIsInclusive" : {
                        "description" : "If set to `true`, this campaign audience will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this campaign audience not to be applied.",
                        "type" : "boolean"
                      },
                      "compareListPriceAndPrice" : {
                        "description" : "If the **List Price** and **Price** are the same.",
                        "type" : "boolean"
                      },
                      "coupon" : {
                        "deprecated" : true,
                        "type" : "array"
                      },
                      "daysAgoOfPurchases" : {
                        "description" : "Number of days that are considered to add the purchase history.",
                        "type" : "integer"
                      },
                      "enableBuyTogetherPerSku" : {
                        "description" : "Enable **Buy Together** per SKU.",
                        "type" : "boolean"
                      },
                      "featured" : {
                        "description" : "Defines if the target audience is featured (`true`) or not (`false`).",
                        "type" : "boolean"
                      },
                      "firstBuyIsProfileOptimistic" : {
                        "description" : "Applies the discount even if the user is not logged.",
                        "type" : "boolean"
                      },
                      "giftListTypes" : {
                        "description" : "Gifts List Type.",
                        "items" : {
                          "description" : "Gift List Type.",
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "id" : {
                        "description" : "Target audience ID.",
                        "type" : "string"
                      },
                      "idSellerIsInclusive" : {
                        "description" : "Defines if at least one of the sellers must be valid to active the campaign audience.",
                        "type" : "boolean"
                      },
                      "idsSalesChannel" : {
                        "description" : "Array with all the trade policies that activate the campaign audience.",
                        "items" : {
                          "description" : "Trade policy ID.",
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "installment" : {
                        "deprecated" : true,
                        "type" : "integer"
                      },
                      "isDifferentListPriceAndPrice" : {
                        "description" : "Applies the campaign audience only if the list price and price is different.",
                        "type" : "boolean"
                      },
                      "isFirstBuy" : {
                        "description" : "Applies the discount only if it's a first buy.",
                        "type" : "boolean"
                      },
                      "isMinMaxInstallments" : {
                        "description" : "Set if the campaign audience will be applied considering a minimum and maximum values for installments.",
                        "type" : "boolean"
                      },
                      "isSlaSelected" : {
                        "description" : "Applies selected discount only when one of the defined shipping method is selected by the customer.",
                        "type" : "boolean"
                      },
                      "itemMaxPrice" : {
                        "description" : "Maximum price of the item.",
                        "type" : "number"
                      },
                      "itemMinPrice" : {
                        "description" : "Minimum price of the item.",
                        "type" : "number"
                      },
                      "listBrand1BuyTogether" : {
                        "description" : "Brand first list for the promotion **Buy Together.",
                        "type" : "array"
                      },
                      "listCategory1BuyTogether" : {
                        "description" : "Category first list for the promotion **Buy Together**.",
                        "type" : "array"
                      },
                      "listSku1BuyTogether" : {
                        "description" : "SKU first list for the promotion **Buy Together**.",
                        "type" : "array"
                      },
                      "listSku2BuyTogether" : {
                        "description" : "SKU second list for the promotion **Buy Together**.",
                        "type" : "array"
                      },
                      "marketingTags" : {
                        "description" : "Array with all the campaign audience's marketing tags.",
                        "items" : {
                          "description" : "Campaign audience marketing tags.",
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "marketingTagsAreNotInclusive" : {
                        "description" : "Defines if marketing tags are not inclusive.",
                        "type" : "boolean"
                      },
                      "maxInstallment" : {
                        "description" : "Maximum value for installment.",
                        "type" : "integer"
                      },
                      "maxUsage" : {
                        "description" : "Defines how many times the campaign audience can be used.",
                        "type" : "integer"
                      },
                      "maxUsagePerClient" : {
                        "description" : "Defines if the campaign audience can be used multiple times per client.",
                        "type" : "integer"
                      },
                      "merchants" : {
                        "deprecated" : true,
                        "type" : "array"
                      },
                      "minInstallment" : {
                        "description" : "Minimum value for installment.",
                        "type" : "integer"
                      },
                      "minimumQuantityBuyTogether" : {
                        "description" : "Minimum quantity for **Buy Together** promotion.",
                        "type" : "integer"
                      },
                      "multipleUsePerClient" : {
                        "description" : "Defines if the campaign audience can be used multiple times per client.",
                        "type" : "boolean"
                      },
                      "name" : {
                        "description" : "Target audience name.",
                        "type" : "string"
                      },
                      "origin" : {
                        "description" : "Shows the campaign audience origin, `Marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
                        "type" : "string"
                      },
                      "paymentsMethods" : {
                        "description" : "Array composed by all the Payments Methods.",
                        "items" : {
                          "description" : "Object with information of the Payment Method.",
                          "properties" : {
                            "id" : {
                              "description" : "Payment Method ID.",
                              "type" : "string"
                            },
                            "name" : {
                              "description" : "Payment Method Name.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "paymentsRules" : {
                        "deprecated" : true,
                        "type" : "array"
                      },
                      "percentualDiscountValueList" : {
                        "description" : "Percentual discount value list.",
                        "items" : {
                          "description" : "Percentual discount value.",
                          "type" : "number"
                        },
                        "type" : "array"
                      },
                      "products" : {
                        "description" : "Object composed by the products that will activate or deactivate the campaign audience.",
                        "items" : {
                          "description" : "Object with information of the product.",
                          "properties" : {
                            "id" : {
                              "description" : "Product ID.",
                              "type" : "string"
                            },
                            "name" : {
                              "description" : "Product Name.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "productsAreInclusive" : {
                        "description" : "If set to `true`, this campaign audience will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this campaign audience not to be applied.",
                        "type" : "boolean"
                      },
                      "productsSpecifications" : {
                        "deprecated" : true,
                        "type" : "array"
                      },
                      "quantityToAffectBuyTogether" : {
                        "description" : "Quantity to affect **Buy Together** promotion.",
                        "type" : "integer"
                      },
                      "restrictionsBins" : {
                        "description" : "The discount will be granted if the card's BIN is given.",
                        "items" : {
                          "description" : "Card's BIN.",
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "shouldDistributeDiscountAmongMatchedItems" : {
                        "description" : "Should distribute discount among matched items.",
                        "type" : "boolean"
                      },
                      "skus" : {
                        "description" : "Object composed by the SKUs that will activate or deactivate the campaign audience.",
                        "items" : {
                          "description" : "Object with information of the SKU.",
                          "properties" : {
                            "id" : {
                              "description" : "SKU ID.",
                              "type" : "string"
                            },
                            "name" : {
                              "description" : "SKU Name.",
                              "type" : "string"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      },
                      "skusAreInclusive" : {
                        "description" : "If set to `true`, this campaign audience will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this campaign audience not to be applied.",
                        "type" : "boolean"
                      },
                      "slasIds" : {
                        "description" : "The discount will be granted if the shipping method is the same as the one given.",
                        "items" : {
                          "description" : "Shipping method.",
                          "type" : "string"
                        },
                        "type" : "array"
                      },
                      "stores" : {
                        "deprecated" : true,
                        "type" : "array"
                      },
                      "storesAreInclusive" : {
                        "deprecated" : true,
                        "type" : "boolean"
                      },
                      "totalValueCeling" : {
                        "description" : "Maximum chart value to active the campaign audience.",
                        "type" : "number"
                      },
                      "totalValueFloor" : {
                        "description" : "Minimum chart value to active the campaign audience.",
                        "type" : "number"
                      },
                      "totalValueIncludeAllItems" : {
                        "deprecated" : true,
                        "type" : "boolean"
                      },
                      "totalValueMode" : {
                        "description" : "Total chart value to active the campaign audience.",
                        "type" : "string"
                      },
                      "totalValuePurchase" : {
                        "description" : "Total value a client must have in past orders to active the campaign audience.",
                        "type" : "number"
                      },
                      "useNewProgressiveAlgorithm" : {
                        "description" : "Use new progressive algorithm.",
                        "type" : "boolean"
                      },
                      "zipCodeRanges" : {
                        "description" : "Range of the zip code that applies the campaign audience.",
                        "items" : {
                          "description" : "Zip code that applies the campaign audience.",
                          "properties" : {
                            "inclusive" : {
                              "description" : "Defines if the zip code applies the campaign audience.",
                              "type" : "boolean"
                            }
                          },
                          "type" : "object"
                        },
                        "type" : "array"
                      }
                    },
                    "type" : "object"
                  },
                  "type" : "array"
                }
              },
              "title" : "",
              "type" : "object"
            },
            "type" : "array"
          }
        }
      }
    }
  }, {
    "id" : "5eac55f1-b1e0-404c-b25a-3b45ea7189fc",
    "name" : "Get Promotion or Tax by ID (Tax)",
    "request" : {
      "urlPath" : "/api/rnb/pvt/calculatorconfiguration/nxg30k",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "Tax"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"absoluteShippingDiscountValue\" : 0,\n  \"activateGiftsMultiplier\" : false,\n  \"activeDaysOfWeek\" : [ ],\n  \"affiliates\" : [ ],\n  \"applyToAllShippings\" : false,\n  \"areSalesChannelIdsExclusive\" : false,\n  \"beginDateUtc\" : \"2022-05-09T03:00:00Z\",\n  \"brands\" : [ {\n    \"id\" : \"2000000\",\n    \"name\" : \"VALDIE&CO (2000000)\"\n  } ],\n  \"brandsAreInclusive\" : true,\n  \"campaigns\" : [ ],\n  \"cardIssuers\" : [ ],\n  \"categories\" : [ {\n    \"id\" : \"2\",\n    \"name\" : \"Computers (2)\"\n  } ],\n  \"categoriesAreInclusive\" : true,\n  \"clusterExpressions\" : [ ],\n  \"collections\" : [ {\n    \"id\" : \"137\",\n    \"name\" : \"Best Sellers (137)\"\n  } ],\n  \"collections1BuyTogether\" : [ ],\n  \"collections2BuyTogether\" : [ ],\n  \"collectionsIsInclusive\" : true,\n  \"compareListPriceAndPrice\" : false,\n  \"coupon\" : [ ],\n  \"cumulative\" : false,\n  \"daysAgoOfPurchases\" : 0,\n  \"description\" : \"Tax applied by the government\",\n  \"disableDeal\" : false,\n  \"enableBuyTogetherPerSku\" : false,\n  \"endDateUtc\" : \"2022-06-01T02:30:00Z\",\n  \"firstBuyIsProfileOptimistic\" : false,\n  \"giftListTypes\" : [ ],\n  \"idCalculatorConfiguration\" : \"90f4affc-fea0-424c-a7a7-c69aec7bbdc8\",\n  \"idSellerIsInclusive\" : false,\n  \"idsSalesChannel\" : [ ],\n  \"installment\" : 0,\n  \"isActive\" : true,\n  \"isArchived\" : false,\n  \"isDifferentListPriceAndPrice\" : false,\n  \"isFeatured\" : false,\n  \"isFirstBuy\" : false,\n  \"isMinMaxInstallments\" : false,\n  \"isSlaSelected\" : false,\n  \"itemMaxPrice\" : 0,\n  \"itemMinPrice\" : 0,\n  \"lastModified\" : \"2022-05-12T20:09:03.6623908Z\",\n  \"listSku1BuyTogether\" : [ ],\n  \"listSku2BuyTogether\" : [ ],\n  \"marketingTags\" : [ \"hello-world\" ],\n  \"marketingTagsAreNotInclusive\" : false,\n  \"maxInstallment\" : 0,\n  \"maxNumberOfAffectedItems\" : 0,\n  \"maxNumberOfAffectedItemsGroupKey\" : \"perCart\",\n  \"maxPricesPerItems\" : [ ],\n  \"maxUsage\" : 0,\n  \"maxUsagePerClient\" : 0,\n  \"maximumUnitPriceDiscount\" : 0,\n  \"merchants\" : [ ],\n  \"minInstallment\" : 0,\n  \"minimumQuantityBuyTogether\" : 0,\n  \"multipleUsePerClient\" : false,\n  \"name\" : \"Government Tax\",\n  \"newOffset\" : 0,\n  \"nominalDiscountValue\" : 0,\n  \"nominalRewardValue\" : 0,\n  \"nominalShippingDiscountValue\" : 0,\n  \"nominalTax\" : 0,\n  \"offset\" : 0,\n  \"orderStatusRewardValue\" : \"invoiced\",\n  \"origin\" : \"Fulfillment\",\n  \"paymentsMethods\" : [ {\n    \"id\" : \"45\",\n    \"name\" : \"Venda Direta Credito (45)\"\n  } ],\n  \"paymentsRules\" : [ ],\n  \"percentualDiscountValue\" : 0,\n  \"percentualDiscountValueList\" : [ ],\n  \"percentualDiscountValueList1\" : 0,\n  \"percentualDiscountValueList2\" : 0,\n  \"percentualRewardValue\" : 0,\n  \"percentualShippingDiscountValue\" : 0,\n  \"percentualTax\" : 10,\n  \"products\" : [ {\n    \"id\" : \"1\",\n    \"name\" : \"Seaweed Strengthening Masks - Pre Order! (Produto 1)\"\n  } ],\n  \"productsAreInclusive\" : true,\n  \"productsSpecifications\" : [ ],\n  \"quantityToAffectBuyTogether\" : 0,\n  \"rebatePercentualDiscountValue\" : 0,\n  \"restrictionsBins\" : [ ],\n  \"shippingPercentualTax\" : 0,\n  \"shouldDistributeDiscountAmongMatchedItems\" : false,\n  \"skus\" : [ {\n    \"id\" : \"1\",\n    \"name\" : \"50 ml (SKU 1)\"\n  } ],\n  \"skusAreInclusive\" : true,\n  \"skusGift\" : {\n    \"quantitySelectable\" : 0\n  },\n  \"slasIds\" : [ ],\n  \"stores\" : [ ],\n  \"storesAreInclusive\" : false,\n  \"totalValueCeling\" : 0,\n  \"totalValueFloor\" : 0,\n  \"totalValueIncludeAllItems\" : false,\n  \"totalValueMode\" : \"IncludeMatchedItems\",\n  \"totalValuePurchase\" : 123,\n  \"type\" : \"tax\",\n  \"useNewProgressiveAlgorithm\" : false,\n  \"zipCodeRanges\" : [ ]\n}",
      "headers" : {
        "Content-Type" : "Tax"
      }
    },
    "uuid" : "5eac55f1-b1e0-404c-b25a-3b45ea7189fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.697554Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCalculatorConfigurationById",
          "schema" : {
            "properties" : {
              "absoluteShippingDiscountValue" : {
                "description" : "Maximum value for the shipping.",
                "type" : "number"
              },
              "activateGiftsMultiplier" : {
                "description" : "If set as `true`, it activates gifts Multiplier.",
                "type" : "boolean"
              },
              "activeDaysOfWeek" : {
                "description" : "Defines days of the week in which the Tax will applied.",
                "items" : {
                  "description" : "Day of the week that the Tax will be valid.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "affiliates" : {
                "description" : "Marketplace order identifier. The discount will apply to selected affiliates.",
                "items" : {
                  "description" : "Object with information of the affiliate.",
                  "properties" : {
                    "id" : {
                      "description" : "Affiliate ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Affiliate Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "applyToAllShippings" : {
                "description" : "Tax will be applied to all kind of shipping.",
                "type" : "boolean"
              },
              "areSalesChannelIdsExclusive" : {
                "description" : "If set to `false`, this Tax will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this Tax not to be applied.",
                "type" : "boolean"
              },
              "beginDateUtc" : {
                "description" : "Tax Begin Date (UTC).",
                "type" : "string"
              },
              "brands" : {
                "description" : "Object composed by the brands that will activate or deactivate the Tax.",
                "items" : {
                  "description" : "Object with information of the brand.",
                  "properties" : {
                    "id" : {
                      "description" : "Brand ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Brand Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "brandsAreInclusive" : {
                "description" : "If set to `true`, this Tax will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this Tax not to be applied.",
                "type" : "boolean"
              },
              "campaigns" : {
                "description" : "Campaign Audiences that activate this Tax.",
                "items" : {
                  "description" : "Campaign Audience.",
                  "example" : "Campaign Audience example",
                  "type" : "string"
                },
                "type" : "array"
              },
              "cardIssuers" : {
                "deprecated" : true,
                "type" : "array"
              },
              "categories" : {
                "description" : "Object composed by the categories that will activate or deactivate the Tax.",
                "items" : {
                  "description" : "Object with information of the category.",
                  "properties" : {
                    "id" : {
                      "description" : "Category ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Category Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "categoriesAreInclusive" : {
                "description" : "If set to `true`, this Tax will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this Tax not to be applied.",
                "type" : "boolean"
              },
              "clusterExpressions" : {
                "description" : "An expression to use with clusters.",
                "items" : {
                  "description" : "Cluster expression.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "collections" : {
                "description" : "Array composed by the collections that will be activated or deactivated the Tax.",
                "items" : {
                  "description" : "Object with information of the collection.",
                  "properties" : {
                    "id" : {
                      "description" : "Collection ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Collection Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "collections1BuyTogether" : {
                "description" : "Collections that will generate the Tax, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
                "items" : {
                  "description" : "Collection ID.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "collections2BuyTogether" : {
                "deprecated" : true,
                "type" : "array"
              },
              "collectionsIsInclusive" : {
                "description" : "If set to `true`, this Tax will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this Tax not be applied.",
                "type" : "boolean"
              },
              "compareListPriceAndPrice" : {
                "description" : "If the **List Price** and **Price** are the same.",
                "type" : "boolean"
              },
              "coupon" : {
                "deprecated" : true,
                "type" : "array"
              },
              "cumulative" : {
                "description" : "Defines if a Tax can accumulate with another one. (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "daysAgoOfPurchases" : {
                "description" : "Number of days that are considered to add the purchase history.",
                "type" : "integer"
              },
              "description" : {
                "description" : "Tax internal description.",
                "type" : "string"
              },
              "disableDeal" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "enableBuyTogetherPerSku" : {
                "description" : "Enable **Buy Together** per SKU.",
                "type" : "boolean"
              },
              "endDateUtc" : {
                "description" : "Tax End Date (UTC).",
                "type" : "string"
              },
              "firstBuyIsProfileOptimistic" : {
                "description" : "Applies the Tax even if the user is not logged.",
                "type" : "boolean"
              },
              "giftListTypes" : {
                "description" : "Gifts List Type.",
                "items" : {
                  "description" : "Gift List Type.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "idCalculatorConfiguration" : {
                "description" : "Tax ID.",
                "type" : "string"
              },
              "idSeller" : {
                "description" : "Seller Name.",
                "type" : "string"
              },
              "idSellerIsInclusive" : {
                "description" : "If set to `true`, this Tax will be applied to any seller present on the idSeller field. If set to `false`, sellers present on that field will make this Tax not to be applied.",
                "type" : "boolean"
              },
              "idsSalesChannel" : {
                "description" : "List of Trade Policies that activate this Tax.",
                "items" : {
                  "description" : "Trade Policy ID.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "installment" : {
                "deprecated" : true,
                "type" : "integer"
              },
              "isActive" : {
                "description" : "If set as `true` the Tax is activated. If set as `false` the Tax is deactivated.",
                "type" : "boolean"
              },
              "isArchived" : {
                "description" : "If set as `true` the Tax is archived. If set as `false` the Tax is not archived.",
                "type" : "boolean"
              },
              "isDifferentListPriceAndPrice" : {
                "description" : "Applies the Tax only if the list price and price is different.",
                "type" : "boolean"
              },
              "isFeatured" : {
                "description" : "Insert a flag with the Tax name used in the product's window display and page.",
                "type" : "boolean"
              },
              "isFirstBuy" : {
                "description" : "Applies the Tax only if it's a first buy.",
                "type" : "boolean"
              },
              "isMinMaxInstallments" : {
                "description" : "Set if the Tax will be applied considering a minimum and maximum values for installments.",
                "type" : "boolean"
              },
              "isSlaSelected" : {
                "description" : "Applies the Tax only when one of the defined shipping method is selected by the customer.",
                "type" : "boolean"
              },
              "itemMaxPrice" : {
                "description" : "Maximum price of the item.",
                "type" : "number"
              },
              "itemMinPrice" : {
                "description" : "Minimum price of the item.",
                "type" : "number"
              },
              "lastModified" : {
                "description" : "When the Tax was last modified.",
                "type" : "string"
              },
              "listSku1BuyTogether" : {
                "description" : "SKU first list for the promotion **Buy Together**.",
                "items" : {
                  "description" : "SKU ID.",
                  "example" : 1,
                  "type" : "integer"
                },
                "type" : "array"
              },
              "listSku2BuyTogether" : {
                "description" : "SKU second list for the promotion **Buy Together**.",
                "items" : {
                  "description" : "SKU ID.",
                  "example" : 1,
                  "type" : "integer"
                },
                "type" : "array"
              },
              "marketingTags" : {
                "description" : "Tax Marketing tags.",
                "items" : {
                  "description" : "Promotion Marketing tag.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "marketingTagsAreNotInclusive" : {
                "description" : "If set to `false`, this Tax will be applied to any marketing tag present on the `marketingTags` field. If set to `true`, marketing tags present on that field will make this Tax not to be applied.",
                "type" : "boolean"
              },
              "maxInstallment" : {
                "description" : "Maximum value for installment.",
                "type" : "integer"
              },
              "maxNumberOfAffectedItems" : {
                "description" : "The maximum number of affected items for a promotion.",
                "type" : "integer"
              },
              "maxNumberOfAffectedItemsGroupKey" : {
                "description" : "The maximum number of affected items by group key for a promotion.",
                "type" : "string"
              },
              "maxPricesPerItems" : {
                "deprecated" : true,
                "type" : "array"
              },
              "maxUsage" : {
                "description" : "Defines how many times the Tax can be applied.",
                "type" : "integer"
              },
              "maxUsagePerClient" : {
                "description" : "Defines the maximum amount of times the Tax can be applied per client.",
                "type" : "integer"
              },
              "maximumUnitPriceDiscount" : {
                "description" : "The maximum price for each item of the purchase will be the price set up.",
                "type" : "number"
              },
              "merchants" : {
                "deprecated" : true,
                "type" : "array"
              },
              "minInstallment" : {
                "description" : "Minimum value for installment.",
                "type" : "integer"
              },
              "minimumQuantityBuyTogether" : {
                "description" : "Minimum quantity for **Buy Together** promotion.",
                "type" : "integer"
              },
              "multipleUsePerClient" : {
                "description" : "Defines if the Tax can be applied multiple times per client.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "Tax Name.",
                "type" : "string"
              },
              "newOffset" : {
                "description" : "New time offset from UTC in seconds.",
                "type" : "number"
              },
              "nominalDiscountValue" : {
                "description" : "Exact discount to be applied for the total purchase value.",
                "type" : "number"
              },
              "nominalRewardValue" : {
                "description" : "Nominal value for rewards program.",
                "type" : "number"
              },
              "nominalShippingDiscountValue" : {
                "description" : "Exact discount to be applied for the shipping value.",
                "type" : "number"
              },
              "nominalTax" : {
                "description" : "Nominal Tax.",
                "type" : "number"
              },
              "offset" : {
                "description" : "Time offset from UTC in seconds.",
                "type" : "integer"
              },
              "orderStatusRewardValue" : {
                "description" : "Order status reward value.",
                "type" : "string"
              },
              "origin" : {
                "description" : "Origin of the Tax, `marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
                "type" : "string"
              },
              "paymentsMethods" : {
                "description" : "Array composed by all the Payments Methods.",
                "items" : {
                  "description" : "Object with information of the Payment Method.",
                  "properties" : {
                    "id" : {
                      "description" : "Payment Method ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Payment Method Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "paymentsRules" : {
                "deprecated" : true,
                "type" : "array"
              },
              "percentualDiscountValue" : {
                "description" : "Percentage discount to be applied for total purchase value.",
                "type" : "number"
              },
              "percentualDiscountValueList" : {
                "description" : "Percentual discount value list.",
                "items" : {
                  "description" : "Percentual discount value.",
                  "type" : "number"
                },
                "type" : "array"
              },
              "percentualDiscountValueList1" : {
                "description" : "Valid discounts for the SKUs in `listSku1BuyTogether`, discount list used for Buy Together Promotions.",
                "type" : "number"
              },
              "percentualDiscountValueList2" : {
                "description" : "Equivalent to `percentualDiscountValueList1`.",
                "type" : "number"
              },
              "percentualRewardValue" : {
                "description" : "Percentage value for rewards program.",
                "type" : "number"
              },
              "percentualShippingDiscountValue" : {
                "description" : "Percentage discount to be applied for shipping value.",
                "type" : "number"
              },
              "percentualTax" : {
                "description" : "Percentual Tax over purchase total value.",
                "type" : "number"
              },
              "products" : {
                "description" : "Array composed by the products that will activate or deactivate the Tax.",
                "items" : {
                  "description" : "Object with information of the product.",
                  "properties" : {
                    "id" : {
                      "description" : "Product ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Product Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "productsAreInclusive" : {
                "description" : "If set to `true`, this Tax will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this Tax not to be applied.",
                "type" : "boolean"
              },
              "productsSpecifications" : {
                "deprecated" : true,
                "type" : "array"
              },
              "quantityToAffectBuyTogether" : {
                "description" : "Quantity to affect **Buy Together** promotion.",
                "type" : "integer"
              },
              "rebatePercentualDiscountValue" : {
                "description" : "Percentual Shipping Discount Value.",
                "type" : "number"
              },
              "restrictionsBins" : {
                "description" : "The Tax will be applied if the card's BIN is given.",
                "items" : {
                  "description" : "Card's BIN.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "shippingPercentualTax" : {
                "description" : "Shipping Percentual Tax over purchase total value.",
                "type" : "number"
              },
              "shouldDistributeDiscountAmongMatchedItems" : {
                "description" : "Should distribute the Tax among matched items.",
                "type" : "boolean"
              },
              "skus" : {
                "description" : "Array composed by the SKUs that will activate or deactivate the Tax.",
                "items" : {
                  "description" : "Object with information of the SKU.",
                  "properties" : {
                    "id" : {
                      "description" : "SKU ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "SKU Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "skusAreInclusive" : {
                "description" : "If set to `true`, this Tax will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this Tax not to be applied.",
                "type" : "boolean"
              },
              "skusGift" : {
                "description" : "SKU Gift Object. Total discount on the product value set as a gift.",
                "properties" : {
                  "gifts" : {
                    "description" : "Array with SKU Gifts IDs.",
                    "type" : "integer"
                  },
                  "quantitySelectable" : {
                    "description" : "Quantity of SKU Gifts.",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "slasIds" : {
                "description" : "The Tax will be applied if the shipping method is the same as the one given.",
                "items" : {
                  "description" : "Shipping method.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "stores" : {
                "deprecated" : true,
                "type" : "array"
              },
              "storesAreInclusive" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "totalValueCeling" : {
                "description" : "Maximum chart value to activate the Tax.",
                "type" : "number"
              },
              "totalValueFloor" : {
                "description" : "Minimum chart value to activate the Tax.",
                "type" : "number"
              },
              "totalValueIncludeAllItems" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "totalValueMode" : {
                "description" : "If products that are already receiving a Tax will be considered on the cart's total value. There are three options available: `IncludeMatchedItems`, `ExcludeMatchedItems`, `AllItems`.",
                "type" : "string"
              },
              "totalValuePurchase" : {
                "description" : "Total value a client must have in past orders to activate the Tax.",
                "type" : "number"
              },
              "type" : {
                "description" : "Defines what is the type of the promotion or indicates if it is a tax. Possible values: `regular` ([Regular Promotion](https://help.vtex.com/tutorial/regular-promotion--tutorials_327)), `combo` ([Buy Together](https://help.vtex.com/en/tutorial/buy-together--tutorials_323)), `forThePriceOf` ([More for Less](https://help.vtex.com/en/tutorial/creating-a-more-for-less-promotion--tutorials_325)), `progressive` ([Progressive Discount](https://help.vtex.com/en/tutorial/progressive-discount--tutorials_324)), `buyAndWin` ([Buy One Get One](https://help.vtex.com/en/tutorial/buy-one-get-one--tutorials_322)), `maxPricePerItem` (Deprecated), `campaign` ([Campaign Promotion](https://help.vtex.com/en/tutorial/campaign-promotion--1ChYXhK2AQGuS6wAqS8Ume)), `tax` (Tax), `multipleEffects` (Multiple Effects).",
                "type" : "string"
              },
              "useNewProgressiveAlgorithm" : {
                "description" : "Use new progressive algorithm.",
                "type" : "boolean"
              },
              "zipCodeRanges" : {
                "description" : "Range of the zip code that activate the Tax.",
                "items" : {
                  "properties" : {
                    "inclusive" : {
                      "description" : "Defines if the zip code range is included in the Tax.",
                      "type" : "boolean"
                    },
                    "zipCodeFrom" : {
                      "description" : "Initial Zip Code.",
                      "type" : "string"
                    },
                    "zipCodeTo" : {
                      "description" : "Final Zip Code.",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "e9f97f28-6284-453d-beec-69dfdc42358d",
    "name" : "Get Promotion or Tax by ID (Promotion)",
    "request" : {
      "urlPath" : "/api/rnb/pvt/calculatorconfiguration/sazi9j8xee6rm8saft7dpwe22agb7va6o3bs3laxffen0tyxw7ob9m8r9ii23fk4g62na8lw2ajdkkhw807zwqsl87z7wytdob6xi3oiyh",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "Promotion"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"absoluteShippingDiscountValue\" : 0,\n  \"accumulateWithManualPrice\" : false,\n  \"activateGiftsMultiplier\" : false,\n  \"activeDaysOfWeek\" : [ ],\n  \"affiliates\" : [ ],\n  \"applyToAllShippings\" : false,\n  \"areSalesChannelIdsExclusive\" : false,\n  \"beginDateUtc\" : \"2020-05-01T18:47:15.89Z\",\n  \"brands\" : [ ],\n  \"brandsAreInclusive\" : false,\n  \"campaigns\" : [ ],\n  \"cardIssuers\" : [ ],\n  \"categories\" : [ ],\n  \"categoriesAreInclusive\" : false,\n  \"clusterExpressions\" : [ ],\n  \"collections\" : [ ],\n  \"collections1BuyTogether\" : [ ],\n  \"collections2BuyTogether\" : [ ],\n  \"collectionsIsInclusive\" : false,\n  \"compareListPriceAndPrice\" : false,\n  \"conditionsIds\" : [ \"372e1868-2c0e-4437-be45-1ef8c9cab735\" ],\n  \"coupon\" : [ ],\n  \"cumulative\" : false,\n  \"daysAgoOfPurchases\" : 0,\n  \"disableDeal\" : false,\n  \"discountType\" : \"percentual\",\n  \"enableBuyTogetherPerSku\" : false,\n  \"firstBuyIsProfileOptimistic\" : false,\n  \"giftListTypes\" : [ ],\n  \"idCalculatorConfiguration\" : \"d8a1cd2e-b667-4054-b3ae-b79124c7218e\",\n  \"idSellerIsInclusive\" : false,\n  \"idsSalesChannel\" : [ ],\n  \"installment\" : 0,\n  \"isActive\" : true,\n  \"isArchived\" : false,\n  \"isDifferentListPriceAndPrice\" : false,\n  \"isFeatured\" : false,\n  \"isFirstBuy\" : false,\n  \"isMinMaxInstallments\" : false,\n  \"isSlaSelected\" : false,\n  \"itemMaxPrice\" : 0,\n  \"itemMinPrice\" : 0,\n  \"lastModified\" : \"2021-02-23T20:58:38.7963862Z\",\n  \"listSku1BuyTogether\" : [ ],\n  \"listSku2BuyTogether\" : [ ],\n  \"marketingTags\" : [ ],\n  \"marketingTagsAreNotInclusive\" : false,\n  \"maxInstallment\" : 0,\n  \"maxNumberOfAffectedItems\" : 0,\n  \"maxNumberOfAffectedItemsGroupKey\" : \"perCart\",\n  \"maxPricesPerItems\" : [ ],\n  \"maxUsage\" : 0,\n  \"maxUsagePerClient\" : 0,\n  \"maximumUnitPriceDiscount\" : 0,\n  \"merchants\" : [ ],\n  \"minInstallment\" : 0,\n  \"minimumQuantityBuyTogether\" : 0,\n  \"multipleUsePerClient\" : false,\n  \"name\" : \"Promoção Social Seller\",\n  \"newOffset\" : -3,\n  \"nominalDiscountValue\" : 0,\n  \"nominalRewardValue\" : 0,\n  \"nominalShippingDiscountValue\" : 0,\n  \"nominalTax\" : 0,\n  \"offset\" : -3,\n  \"orderStatusRewardValue\" : \"invoiced\",\n  \"origin\" : \"marketplace\",\n  \"paymentsMethods\" : [ {\n    \"id\" : \"202\",\n    \"name\" : \"Dinheiro (202)\"\n  }, {\n    \"id\" : \"2\",\n    \"name\" : \"Visa (2)\"\n  } ],\n  \"paymentsRules\" : [ ],\n  \"percentualDiscountValue\" : 10,\n  \"percentualDiscountValueList\" : [ ],\n  \"percentualDiscountValueList1\" : 0,\n  \"percentualDiscountValueList2\" : 0,\n  \"percentualRewardValue\" : 0,\n  \"percentualShippingDiscountValue\" : 0,\n  \"percentualTax\" : 0,\n  \"products\" : [ ],\n  \"productsAreInclusive\" : false,\n  \"productsSpecifications\" : [ ],\n  \"quantityToAffectBuyTogether\" : 0,\n  \"rebatePercentualDiscountValue\" : 0,\n  \"restrictionsBins\" : [ ],\n  \"shippingPercentualTax\" : 0,\n  \"shouldDistributeDiscountAmongMatchedItems\" : false,\n  \"skus\" : [ ],\n  \"skusAreInclusive\" : true,\n  \"skusGift\" : {\n    \"quantitySelectable\" : 0\n  },\n  \"slasIds\" : [ ],\n  \"stores\" : [ ],\n  \"storesAreInclusive\" : false,\n  \"totalValueCeling\" : 0,\n  \"totalValueFloor\" : 0,\n  \"totalValueIncludeAllItems\" : false,\n  \"totalValueMode\" : \"IncludeMatchedItems\",\n  \"totalValuePurchase\" : 0,\n  \"type\" : \"regular\",\n  \"useNewProgressiveAlgorithm\" : false,\n  \"utmCampaign\" : \"georgeTest\",\n  \"utmSource\" : \"georgeSource\",\n  \"zipCodeRanges\" : [ ]\n}",
      "headers" : {
        "Content-Type" : "Promotion"
      }
    },
    "uuid" : "e9f97f28-6284-453d-beec-69dfdc42358d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.696039Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetCalculatorConfigurationById",
          "schema" : {
            "properties" : {
              "absoluteShippingDiscountValue" : {
                "description" : "Maximum value for the shipping.",
                "type" : "number"
              },
              "accumulateWithManualPrice" : {
                "description" : "Allows the promotion to apply to products whose prices have been manually added by a call center operator.",
                "type" : "boolean"
              },
              "activateGiftsMultiplier" : {
                "description" : "If set as `true`, it activates gifts Multiplier.",
                "type" : "boolean"
              },
              "activeDaysOfWeek" : {
                "description" : "Defines which days of the week the promotion will applied.",
                "items" : {
                  "description" : "Day of the week that the promotion will be valid.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "affiliates" : {
                "description" : "Marketplace order identifier. The discount will apply to selected affiliates.",
                "items" : {
                  "description" : "Object with information of the affiliate.",
                  "properties" : {
                    "id" : {
                      "description" : "Affiliate ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Affiliate Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "applyToAllShippings" : {
                "description" : "Promotion will be applied to all kind of shipping.",
                "type" : "boolean"
              },
              "areSalesChannelIdsExclusive" : {
                "description" : "If set to `false`, this promotion will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "beginDateUtc" : {
                "description" : "Promotion Begin Date (UTC).",
                "type" : "string"
              },
              "brands" : {
                "description" : "Object composed by the brands that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the brand.",
                  "properties" : {
                    "id" : {
                      "description" : "Brand ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Brand Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "brandsAreInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "campaigns" : {
                "description" : "Campaign Audiences that activate this promotion.",
                "type" : "array"
              },
              "cardIssuers" : {
                "deprecated" : true,
                "type" : "array"
              },
              "categories" : {
                "description" : "Object composed by the categories that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the category.",
                  "properties" : {
                    "id" : {
                      "description" : "Category ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Category Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "categoriesAreInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "clusterExpressions" : {
                "description" : "An expression to use with clusters.",
                "items" : {
                  "description" : "Cluster expression.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "collections" : {
                "description" : "Array composed by the collections that will be activated or deactivated the promotion.",
                "items" : {
                  "description" : "Object with information of the collection.",
                  "properties" : {
                    "id" : {
                      "description" : "Collection ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Collection Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "collections1BuyTogether" : {
                "description" : "Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
                "items" : {
                  "description" : "Collection ID.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "collections2BuyTogether" : {
                "deprecated" : true,
                "type" : "array"
              },
              "collectionsIsInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "compareListPriceAndPrice" : {
                "description" : "If the **List Price** and **Price** are the same.",
                "type" : "boolean"
              },
              "conditionsIds" : {
                "description" : "Array with conditions IDs.",
                "items" : {
                  "description" : "Condition ID.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "coupon" : {
                "deprecated" : true,
                "type" : "array"
              },
              "cumulative" : {
                "description" : "Defines if a promotion can accumulate with another one. (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "daysAgoOfPurchases" : {
                "description" : "Number of days that are considered to add the purchase history.",
                "type" : "integer"
              },
              "description" : {
                "description" : "Promotion internal description.",
                "type" : "string"
              },
              "disableDeal" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "discountType" : {
                "description" : "The type of discount that will apply to the promotion.",
                "type" : "string"
              },
              "enableBuyTogetherPerSku" : {
                "description" : "Enable **Buy Together** per SKU.",
                "type" : "boolean"
              },
              "endDateUtc" : {
                "description" : "Promotion End Date (UTC).",
                "type" : "string"
              },
              "firstBuyIsProfileOptimistic" : {
                "description" : "Applies the discount even if the user is not logged.",
                "type" : "boolean"
              },
              "giftListTypes" : {
                "description" : "Gifts List Type.",
                "items" : {
                  "description" : "Gift List Type.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "idCalculatorConfiguration" : {
                "description" : "Promotion ID.",
                "type" : "string"
              },
              "idSeller" : {
                "description" : "Seller Name.",
                "type" : "string"
              },
              "idSellerIsInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any seller present on the idSeller field. If set to `false`, sellers present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "idsSalesChannel" : {
                "description" : "List of Trade Policies that activate this promotion.",
                "items" : {
                  "description" : "Trade Policy ID.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "installment" : {
                "deprecated" : true,
                "type" : "integer"
              },
              "isActive" : {
                "description" : "If set as `true` the Promotion is activated. If set as `false` the Promotion is deactivated.",
                "type" : "boolean"
              },
              "isArchived" : {
                "description" : "If set as `true` the Promotion is archived. If set as `false` the Promotion is not archived.",
                "type" : "boolean"
              },
              "isDifferentListPriceAndPrice" : {
                "description" : "Applies the promotion only if the list price and price is different.",
                "type" : "boolean"
              },
              "isFeatured" : {
                "description" : "Insert a flag with the promotion name used in the product's window display and page.",
                "type" : "boolean"
              },
              "isFirstBuy" : {
                "description" : "Applies the discount only if it's a first buy.",
                "type" : "boolean"
              },
              "isMinMaxInstallments" : {
                "description" : "Set if the promotion will be applied considering a minimum and maximum values for installments.",
                "type" : "boolean"
              },
              "isSlaSelected" : {
                "description" : "Applies selected discount only when one of the defined shipping method is selected by the customer.",
                "type" : "boolean"
              },
              "itemMaxPrice" : {
                "description" : "Maximum price of the item.",
                "type" : "number"
              },
              "itemMinPrice" : {
                "description" : "Minimum price of the item.",
                "type" : "number"
              },
              "lastModified" : {
                "description" : "When the Promotion was last modified.",
                "type" : "string"
              },
              "listSku1BuyTogether" : {
                "description" : "SKU first list for the promotion **Buy Together**.",
                "type" : "array"
              },
              "listSku2BuyTogether" : {
                "description" : "SKU second list for the promotion **Buy Together**.",
                "type" : "array"
              },
              "marketingTags" : {
                "description" : "Promotion Marketing tags.",
                "items" : {
                  "description" : "Promotion Marketing tag.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "marketingTagsAreNotInclusive" : {
                "description" : "If set to `false`, this promotion will be applied to any marketing tag present on the `marketingTags` field. If set to `true`, marketing tags present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "maxInstallment" : {
                "description" : "Maximum value for installment.",
                "type" : "integer"
              },
              "maxNumberOfAffectedItems" : {
                "description" : "The maximum number of affected items for a promotion.",
                "type" : "integer"
              },
              "maxNumberOfAffectedItemsGroupKey" : {
                "description" : "The maximum number of affected items by group key for a promotion.",
                "type" : "string"
              },
              "maxPricesPerItems" : {
                "deprecated" : true,
                "type" : "array"
              },
              "maxUsage" : {
                "description" : "Defines how many times the promotion can be used.",
                "type" : "integer"
              },
              "maxUsagePerClient" : {
                "description" : "Defines if the promotion can be used multiple times per client.",
                "type" : "integer"
              },
              "maximumUnitPriceDiscount" : {
                "description" : "The maximum price for each item of the purchase will be the price set up.",
                "type" : "number"
              },
              "merchants" : {
                "deprecated" : true,
                "type" : "array"
              },
              "minInstallment" : {
                "description" : "Minimum value for installment.",
                "type" : "integer"
              },
              "minimumQuantityBuyTogether" : {
                "description" : "Minimum quantity for **Buy Together** promotion.",
                "type" : "integer"
              },
              "multipleSkusCause" : {
                "additionalProperties" : {
                  "description" : "SKU ID.",
                  "type" : "string"
                },
                "description" : "Object composed by a list of SKUs on a Multiple Effects promotion. Structure: `\"{SkuId}\": {PercentageDiscount}`. There is a limit of 400 SKUs for this type of promotion.",
                "type" : "object"
              },
              "multipleUsePerClient" : {
                "description" : "Defines if the promotion can be used multiple times per client.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "Promotion Name.",
                "type" : "string"
              },
              "newOffset" : {
                "description" : "New time offset from UTC in seconds.",
                "type" : "number"
              },
              "nominalDiscountValue" : {
                "description" : "Exact discount to be applied for the total purchase value.",
                "type" : "number"
              },
              "nominalRewardValue" : {
                "description" : "Nominal value for rewards program.",
                "type" : "number"
              },
              "nominalShippingDiscountValue" : {
                "description" : "Exact discount to be applied for the shipping value.",
                "type" : "number"
              },
              "nominalTax" : {
                "description" : "Nominal Tax.",
                "type" : "number"
              },
              "offset" : {
                "description" : "Time offset from UTC in seconds.",
                "type" : "integer"
              },
              "orderStatusRewardValue" : {
                "description" : "Order status reward value.",
                "type" : "string"
              },
              "origin" : {
                "description" : "Origin of the promotion, `marketplace` or `Fulfillment`. Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
                "type" : "string"
              },
              "paymentsMethods" : {
                "description" : "Array composed by all the Payments Methods.",
                "items" : {
                  "description" : "Object with information of the Payment Method.",
                  "properties" : {
                    "id" : {
                      "description" : "Payment Method ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Payment Method Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "paymentsRules" : {
                "deprecated" : true,
                "type" : "array"
              },
              "percentualDiscountValue" : {
                "description" : "Percentage discount to be applied for total purchase value.",
                "type" : "number"
              },
              "percentualDiscountValueList" : {
                "description" : "Percentual discount value list.",
                "items" : {
                  "description" : "Percentual discount value.",
                  "type" : "number"
                },
                "type" : "array"
              },
              "percentualDiscountValueList1" : {
                "description" : "Valid discounts for the SKUs in `listSku1BuyTogether`, discount list used for Buy Together Promotions.",
                "type" : "number"
              },
              "percentualDiscountValueList2" : {
                "description" : "Equivalent to `percentualDiscountValueList1`.",
                "type" : "number"
              },
              "percentualRewardValue" : {
                "description" : "Percentage value for rewards program.",
                "type" : "number"
              },
              "percentualShippingDiscountValue" : {
                "description" : "Percentage discount to be applied for shipping value.",
                "type" : "number"
              },
              "percentualTax" : {
                "description" : "Percentual Tax over purchase total value.",
                "type" : "number"
              },
              "products" : {
                "description" : "Object composed by the products that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the product.",
                  "properties" : {
                    "id" : {
                      "description" : "Product ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Product Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "productsAreInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "productsSpecifications" : {
                "deprecated" : true,
                "type" : "array"
              },
              "quantityToAffectBuyTogether" : {
                "description" : "Quantity to affect **Buy Together** promotion.",
                "type" : "integer"
              },
              "rebatePercentualDiscountValue" : {
                "description" : "Percentual Shipping Discount Value.",
                "type" : "number"
              },
              "restrictionsBins" : {
                "description" : "The discount will be granted if the card's BIN is given.",
                "items" : {
                  "description" : "Card's BIN.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "shippingPercentualTax" : {
                "description" : "Shipping Percentual Tax over purchase total value.",
                "type" : "number"
              },
              "shouldDistributeDiscountAmongMatchedItems" : {
                "description" : "Should distribute discount among matched items.",
                "type" : "boolean"
              },
              "skus" : {
                "description" : "Object composed by the SKUs that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the SKU.",
                  "properties" : {
                    "id" : {
                      "description" : "SKU ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "SKU Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "skusAreInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "skusGift" : {
                "description" : "SKU Gift Object. Total discount on the product value set as a gift.",
                "properties" : {
                  "gifts" : {
                    "description" : "Array with SKU Gifts IDs.",
                    "type" : "integer"
                  },
                  "quantitySelectable" : {
                    "description" : "Quantity of SKU Gifts.",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "slasIds" : {
                "description" : "The discount will be granted if the shipping method is the same as the one given.",
                "items" : {
                  "description" : "Shipping method.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "stores" : {
                "deprecated" : true,
                "type" : "array"
              },
              "storesAreInclusive" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "totalValueCeling" : {
                "description" : "Maximum chart value to activate the promotion.",
                "type" : "number"
              },
              "totalValueFloor" : {
                "description" : "Minimum chart value to activate the promotion.",
                "type" : "number"
              },
              "totalValueIncludeAllItems" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "totalValueMode" : {
                "description" : "If products that already are receiving a promotion, will be considered on the chart total value. There are three options available: `IncludeMatchedItems`, `ExcludeMatchedItems`, `AllItems`.",
                "type" : "string"
              },
              "totalValuePurchase" : {
                "description" : "Total value a client must have in past orders to active the promotion.",
                "type" : "number"
              },
              "type" : {
                "description" : "Defines what is the type of the promotion or indicates if it is a tax. Possible values: `regular` ([Regular Promotion](https://help.vtex.com/tutorial/regular-promotion--tutorials_327)), `combo` ([Buy Together](https://help.vtex.com/en/tutorial/buy-together--tutorials_323)), `forThePriceOf` ([More for Less](https://help.vtex.com/en/tutorial/creating-a-more-for-less-promotion--tutorials_325)), `progressive` ([Progressive Discount](https://help.vtex.com/en/tutorial/progressive-discount--tutorials_324)), `buyAndWin` ([Buy One Get One](https://help.vtex.com/en/tutorial/buy-one-get-one--tutorials_322)), `maxPricePerItem` (Deprecated), `campaign` ([Campaign Promotion](https://help.vtex.com/en/tutorial/campaign-promotion--1ChYXhK2AQGuS6wAqS8Ume)), `tax` (Tax), `multipleEffects` (Multiple Effects).",
                "type" : "string"
              },
              "useNewProgressiveAlgorithm" : {
                "description" : "Use new progressive algorithm.",
                "type" : "boolean"
              },
              "utmCampaign" : {
                "description" : "Coupon utmCampaign code.",
                "type" : "string"
              },
              "utmSource" : {
                "description" : "Coupon utmSource code.",
                "type" : "string"
              },
              "zipCodeRanges" : {
                "description" : "Range of the zip code that applies the promotion.",
                "items" : {
                  "properties" : {
                    "inclusive" : {
                      "description" : "Defines if the zip code range is included in the promotion.",
                      "type" : "boolean"
                    },
                    "zipCodeFrom" : {
                      "description" : "Initial Zip Code.",
                      "type" : "string"
                    },
                    "zipCodeTo" : {
                      "description" : "Final Zip Code.",
                      "type" : "string"
                    }
                  },
                  "title" : "",
                  "type" : "object"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fb4f88c6-b6b1-4ba3-a7cd-537b52072a5e",
    "name" : "Create or Update Promotion or Tax",
    "request" : {
      "urlPath" : "/api/rnb/pvt/calculatorconfiguration",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"absoluteShippingDiscountValue\" : 0,\n  \"accumulateWithManualPrice\" : false,\n  \"activateGiftsMultiplier\" : false,\n  \"activeDaysOfWeek\" : [ ],\n  \"affiliates\" : [ ],\n  \"applyToAllShippings\" : false,\n  \"areSalesChannelIdsExclusive\" : false,\n  \"beginDateUtc\" : \"2020-05-01T18:47:15.89Z\",\n  \"brands\" : [ ],\n  \"brandsAreInclusive\" : false,\n  \"campaigns\" : [ ],\n  \"cardIssuers\" : [ ],\n  \"categories\" : [ ],\n  \"categoriesAreInclusive\" : false,\n  \"clusterExpressions\" : [ ],\n  \"collections\" : [ ],\n  \"collections1BuyTogether\" : [ ],\n  \"collections2BuyTogether\" : [ ],\n  \"collectionsIsInclusive\" : false,\n  \"compareListPriceAndPrice\" : false,\n  \"conditionsIds\" : [ \"372e1868-2c0e-4437-be45-1ef8c9cab735\" ],\n  \"coupon\" : [ ],\n  \"cumulative\" : false,\n  \"daysAgoOfPurchases\" : 0,\n  \"disableDeal\" : false,\n  \"discountType\" : \"percentual\",\n  \"enableBuyTogetherPerSku\" : false,\n  \"firstBuyIsProfileOptimistic\" : false,\n  \"giftListTypes\" : [ ],\n  \"idCalculatorConfiguration\" : \"d8a1cd2e-b667-4054-b3ae-b79124c7218e\",\n  \"idSellerIsInclusive\" : false,\n  \"idsSalesChannel\" : [ ],\n  \"installment\" : 0,\n  \"isActive\" : true,\n  \"isArchived\" : false,\n  \"isDifferentListPriceAndPrice\" : false,\n  \"isFeatured\" : false,\n  \"isFirstBuy\" : false,\n  \"isMinMaxInstallments\" : false,\n  \"isSlaSelected\" : false,\n  \"itemMaxPrice\" : 0,\n  \"itemMinPrice\" : 0,\n  \"lastModified\" : \"2021-02-23T20:58:38.7963862Z\",\n  \"listSku1BuyTogether\" : [ ],\n  \"listSku2BuyTogether\" : [ ],\n  \"marketingTags\" : [ ],\n  \"marketingTagsAreNotInclusive\" : false,\n  \"maxInstallment\" : 0,\n  \"maxNumberOfAffectedItems\" : 0,\n  \"maxNumberOfAffectedItemsGroupKey\" : \"perCart\",\n  \"maxPricesPerItems\" : [ ],\n  \"maxUsage\" : 0,\n  \"maxUsagePerClient\" : 0,\n  \"maximumUnitPriceDiscount\" : 0,\n  \"merchants\" : [ ],\n  \"minInstallment\" : 0,\n  \"minimumQuantityBuyTogether\" : 0,\n  \"multipleUsePerClient\" : false,\n  \"name\" : \"Promoção Social Seller\",\n  \"newOffset\" : -3,\n  \"nominalDiscountValue\" : 0,\n  \"nominalRewardValue\" : 0,\n  \"nominalShippingDiscountValue\" : 0,\n  \"nominalTax\" : 0,\n  \"offset\" : -3,\n  \"orderStatusRewardValue\" : \"invoiced\",\n  \"origin\" : \"marketplace\",\n  \"paymentsMethods\" : [ {\n    \"id\" : \"202\",\n    \"name\" : \"Dinheiro (202)\"\n  }, {\n    \"id\" : \"2\",\n    \"name\" : \"Visa (2)\"\n  } ],\n  \"paymentsRules\" : [ ],\n  \"percentualDiscountValue\" : 10,\n  \"percentualDiscountValueList\" : [ ],\n  \"percentualDiscountValueList1\" : 0,\n  \"percentualDiscountValueList2\" : 0,\n  \"percentualRewardValue\" : 0,\n  \"percentualShippingDiscountValue\" : 0,\n  \"percentualTax\" : 0,\n  \"products\" : [ ],\n  \"productsAreInclusive\" : false,\n  \"productsSpecifications\" : [ ],\n  \"quantityToAffectBuyTogether\" : 0,\n  \"rebatePercentualDiscountValue\" : 0,\n  \"restrictionsBins\" : [ ],\n  \"shippingPercentualTax\" : 0,\n  \"shouldDistributeDiscountAmongMatchedItems\" : false,\n  \"skus\" : [ ],\n  \"skusAreInclusive\" : true,\n  \"skusGift\" : {\n    \"quantitySelectable\" : 0\n  },\n  \"slasIds\" : [ ],\n  \"stores\" : [ ],\n  \"storesAreInclusive\" : false,\n  \"totalValueCeling\" : 0,\n  \"totalValueFloor\" : 0,\n  \"totalValueIncludeAllItems\" : false,\n  \"totalValueMode\" : \"IncludeMatchedItems\",\n  \"totalValuePurchase\" : 0,\n  \"type\" : \"regular\",\n  \"useNewProgressiveAlgorithm\" : false,\n  \"utmCampaign\" : \"georgeTest\",\n  \"utmSource\" : \"georgeSource\",\n  \"zipCodeRanges\" : [ ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fb4f88c6-b6b1-4ba3-a7cd-537b52072a5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.69441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "CreateOrUpdateCalculatorConfiguration",
          "schema" : {
            "properties" : {
              "absoluteShippingDiscountValue" : {
                "description" : "Maximum shipping value.",
                "type" : "number"
              },
              "accumulateWithManualPrice" : {
                "description" : "Allows the promotion to apply to products whose prices have been manually added by a call-center operator.",
                "type" : "boolean"
              },
              "activateGiftsMultiplier" : {
                "description" : "If set as `true`, it activates gifts Multiplier.",
                "type" : "boolean"
              },
              "activeDaysOfWeek" : {
                "description" : "Defines which days of the week the promotion will applied.",
                "items" : {
                  "description" : "Day of the week that the promotion will be valid.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "affiliates" : {
                "description" : "Marketplace order identifier. The discount will apply to selected affiliates.",
                "items" : {
                  "description" : "Object with information of the affiliate.",
                  "properties" : {
                    "id" : {
                      "description" : "Affiliate ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Affiliate Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "applyToAllShippings" : {
                "description" : "Promotion will be applied to all kind of shipping.",
                "type" : "boolean"
              },
              "areSalesChannelIdsExclusive" : {
                "description" : "If set to `false`, this promotion will be applied to any trade policies present on the `idsSalesChannel` field. If set to `true`, trade policies present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "beginDateUtc" : {
                "description" : "Promotion Begin Date (UTC).",
                "type" : "string"
              },
              "brands" : {
                "description" : "Object composed by the brands that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the brand.",
                  "properties" : {
                    "id" : {
                      "description" : "Brand ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Brand Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "brandsAreInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any brand present on the `brands` field. If set to `false`, brands present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "campaigns" : {
                "description" : "Campaign Audiences that activate this promotion.",
                "type" : "array"
              },
              "cardIssuers" : {
                "deprecated" : true,
                "type" : "array"
              },
              "categories" : {
                "description" : "Object composed by the categories that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the category.",
                  "properties" : {
                    "id" : {
                      "description" : "Category ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Category Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "categoriesAreInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any category present on the `categories` field. If set to `false`, categories present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "clusterExpressions" : {
                "description" : "An expression to use with clusters.",
                "items" : {
                  "description" : "Cluster expression.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "collections" : {
                "description" : "Object composed by the collections that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the collection.",
                  "properties" : {
                    "id" : {
                      "description" : "Collection ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Collection Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "collections1BuyTogether" : {
                "description" : "Collections that will generate the promotion, type **Buy Together**, **More for less**, **Progressive Discount**, **Buy One Get One**.",
                "items" : {
                  "description" : "Collection ID.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "collections2BuyTogether" : {
                "deprecated" : true,
                "type" : "array"
              },
              "collectionsIsInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any collection present on the `collections` field. If set to `false`, collections present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "compareListPriceAndPrice" : {
                "description" : "If the **List Price** and **Price** are the same.",
                "type" : "boolean"
              },
              "conditionsIds" : {
                "description" : "Array with conditions IDs.",
                "items" : {
                  "description" : "Condition ID.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "coupon" : {
                "deprecated" : true,
                "type" : "array"
              },
              "cumulative" : {
                "description" : "Defines if a promotion can accumulate with another one. (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "daysAgoOfPurchases" : {
                "description" : "Number of days that are considered to add the purchase history.",
                "type" : "integer"
              },
              "description" : {
                "description" : "Promotion internal description.",
                "type" : "string"
              },
              "disableDeal" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "discountType" : {
                "description" : "The type of discount that will apply to the promotion.",
                "type" : "string"
              },
              "enableBuyTogetherPerSku" : {
                "description" : "Enable **Buy Together** per SKU.",
                "type" : "boolean"
              },
              "endDateUtc" : {
                "description" : "Promotion End Date (UTC).",
                "type" : "string"
              },
              "firstBuyIsProfileOptimistic" : {
                "description" : "Applies the discount even if the user is not logged.",
                "type" : "boolean"
              },
              "giftListTypes" : {
                "description" : "Gifts List Type.",
                "items" : {
                  "description" : "Gift List Type.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "idCalculatorConfiguration" : {
                "description" : "Promotion ID.",
                "type" : "string"
              },
              "idSeller" : {
                "description" : "Seller Name.",
                "type" : "string"
              },
              "idSellerIsInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any seller present on the `idSeller` field. If set to `false`, sellers present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "idsSalesChannel" : {
                "description" : "List of Trade Policies that activate this promotion.",
                "items" : {
                  "description" : "Trade Policy ID.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "installment" : {
                "deprecated" : true,
                "type" : "integer"
              },
              "isActive" : {
                "description" : "If set as `true` the Promotion is activated. If set as `false` the Promotion is deactivated.",
                "type" : "boolean"
              },
              "isArchived" : {
                "description" : "If set as `true` the Promotion is archived. If set as `false` the Promotion is not archived.",
                "type" : "boolean"
              },
              "isDifferentListPriceAndPrice" : {
                "description" : "Applies the promotion only if the list price and price is different.",
                "type" : "boolean"
              },
              "isFeatured" : {
                "description" : "Insert a flag with the promotion name used in the product's window display and page.",
                "type" : "boolean"
              },
              "isFirstBuy" : {
                "description" : "Applies the discount only if it's a first buy.",
                "type" : "boolean"
              },
              "isMinMaxInstallments" : {
                "description" : "Set if the promotion will be applied considering a minimum and maximum values for installments.",
                "type" : "boolean"
              },
              "isSlaSelected" : {
                "description" : "Applies selected discount only when one of the defined shipping method is selected by the customer.",
                "type" : "boolean"
              },
              "itemMaxPrice" : {
                "description" : "Maximum price of the item.",
                "type" : "number"
              },
              "itemMinPrice" : {
                "description" : "Minimum price of the item.",
                "type" : "number"
              },
              "lastModified" : {
                "description" : "When the Promotion was last modified.",
                "type" : "string"
              },
              "listSku1BuyTogether" : {
                "description" : "SKU first list for the promotion **Buy Together**.",
                "type" : "array"
              },
              "listSku2BuyTogether" : {
                "description" : "SKU second list for the promotion **Buy Together**.",
                "type" : "array"
              },
              "marketingTags" : {
                "description" : "Promotion Marketing tags.",
                "items" : {
                  "description" : "Promotion Marketing tag.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "marketingTagsAreNotInclusive" : {
                "description" : "If set to `false`, this promotion will be applied to any marketing tag present on the `marketingTags` field. If set to `true`, marketing tags present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "maxInstallment" : {
                "description" : "Maximum value for installment.",
                "type" : "integer"
              },
              "maxNumberOfAffectedItems" : {
                "description" : "The maximum number of affected items for a promotion.",
                "type" : "integer"
              },
              "maxNumberOfAffectedItemsGroupKey" : {
                "description" : "The maximum number of affected items by group key for a promotion.",
                "type" : "string"
              },
              "maxPricesPerItems" : {
                "deprecated" : true,
                "type" : "array"
              },
              "maxUsage" : {
                "description" : "Defines how many times the promotion can be used.",
                "type" : "integer"
              },
              "maxUsagePerClient" : {
                "description" : "Defines if the promotion can be used multiple times per client.",
                "type" : "integer"
              },
              "maximumUnitPriceDiscount" : {
                "description" : "The maximum price for each item of the purchase will be the price set up.",
                "type" : "number"
              },
              "merchants" : {
                "deprecated" : true,
                "type" : "array"
              },
              "minInstallment" : {
                "description" : "Minimum value for installment.",
                "type" : "integer"
              },
              "minimumQuantityBuyTogether" : {
                "description" : "Minimum quantity for **Buy Together** promotion.",
                "type" : "integer"
              },
              "multipleUsePerClient" : {
                "description" : "Defines if the promotion can be used multiple times per client.",
                "type" : "boolean"
              },
              "name" : {
                "description" : "Promotion Name.",
                "type" : "string"
              },
              "newOffset" : {
                "description" : "New time offset from UTC in seconds.",
                "type" : "number"
              },
              "nominalDiscountValue" : {
                "description" : "Exact discount to be applied for the total purchase value.",
                "type" : "number"
              },
              "nominalRewardValue" : {
                "description" : "Nominal value for rewards program.",
                "type" : "number"
              },
              "nominalShippingDiscountValue" : {
                "description" : "Exact discount to be applied for the shipping value.",
                "type" : "number"
              },
              "nominalTax" : {
                "description" : "Nominal Tax.",
                "type" : "number"
              },
              "offset" : {
                "description" : "Time offset from UTC in seconds.",
                "type" : "integer"
              },
              "orderStatusRewardValue" : {
                "description" : "Order status reward value.",
                "type" : "string"
              },
              "origin" : {
                "description" : "Origin of the promotion, `marketplace` or `Fulfillment`.  Read [Difference between orders with marketplace and fulfillment sources](https://help.vtex.com/en/tutorial/what-are-orders-with-marketplace-source-and-orders-with-fulfillment-source--6eVYrmUAwMOeKICU2KuG06) for more information.",
                "type" : "string"
              },
              "paymentsMethods" : {
                "description" : "Array composed by all the Payments Methods.",
                "items" : {
                  "description" : "Object with information of the Payment Method.",
                  "properties" : {
                    "id" : {
                      "description" : "Payment Method ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Payment Method Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "paymentsRules" : {
                "deprecated" : true,
                "type" : "array"
              },
              "percentualDiscountValue" : {
                "description" : "Percentage discount to be applied for total purchase value.",
                "type" : "number"
              },
              "percentualDiscountValueList" : {
                "description" : "Percentual discount value list.",
                "items" : {
                  "description" : "Percentual discount value.",
                  "type" : "number"
                },
                "type" : "array"
              },
              "percentualDiscountValueList1" : {
                "description" : "Valid discounts for the SKUs in `listSku1BuyTogether`, discount list used for Buy Together Promotions.",
                "type" : "number"
              },
              "percentualDiscountValueList2" : {
                "description" : "Equivalent to `percentualDiscountValueList1`.",
                "type" : "number"
              },
              "percentualRewardValue" : {
                "description" : "Percentage value for rewards program.",
                "type" : "number"
              },
              "percentualShippingDiscountValue" : {
                "description" : "Percentage discount to be applied for shipping value.",
                "type" : "number"
              },
              "percentualTax" : {
                "description" : "Percentual Tax over purchase total value.",
                "type" : "number"
              },
              "products" : {
                "description" : "Object composed by the products that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the product.",
                  "properties" : {
                    "id" : {
                      "description" : "Product ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "Product Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "productsAreInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any product present on the `products` field. If set to `false`, products present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "productsSpecifications" : {
                "deprecated" : true,
                "type" : "array"
              },
              "quantityToAffectBuyTogether" : {
                "description" : "Quantity to affect **Buy Together** promotion.",
                "type" : "integer"
              },
              "rebatePercentualDiscountValue" : {
                "description" : "Percentual Shipping Discount Value.",
                "type" : "number"
              },
              "restrictionsBins" : {
                "description" : "The discount will be granted if the card's BIN is given.",
                "items" : {
                  "description" : "Card's BIN.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "shippingPercentualTax" : {
                "description" : "Shipping Percentual Tax over purchase total value.",
                "type" : "number"
              },
              "shouldDistributeDiscountAmongMatchedItems" : {
                "description" : "Should distribute discount among matched items.",
                "type" : "boolean"
              },
              "skus" : {
                "description" : "Object composed by the SKUs that will activate or deactivate the promotion.",
                "items" : {
                  "description" : "Object with information of the SKU.",
                  "properties" : {
                    "id" : {
                      "description" : "SKU ID.",
                      "type" : "string"
                    },
                    "name" : {
                      "description" : "SKU Name.",
                      "type" : "string"
                    }
                  },
                  "type" : "object"
                },
                "type" : "array"
              },
              "skusAreInclusive" : {
                "description" : "If set to `true`, this promotion will be applied to any SKU present on the `skus` field. If set to `false`, SKUs present on that field will make this promotion not to be applied.",
                "type" : "boolean"
              },
              "skusGift" : {
                "description" : "SKU Gift Object. Total discount on the product value set as a gift.",
                "properties" : {
                  "gifts" : {
                    "description" : "Array with SKU Gifts IDs.",
                    "type" : "integer"
                  },
                  "quantitySelectable" : {
                    "description" : "Quantity of SKU Gifts.",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "slasIds" : {
                "description" : "The discount will be granted if the shipping method is the same as the one given.",
                "items" : {
                  "description" : "Shipping method.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "stores" : {
                "deprecated" : true,
                "type" : "array"
              },
              "storesAreInclusive" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "totalValueCeling" : {
                "description" : "Maximum chart value to activate the promotion.",
                "type" : "number"
              },
              "totalValueFloor" : {
                "description" : "Minimum chart value to activate the promotion.",
                "type" : "number"
              },
              "totalValueIncludeAllItems" : {
                "deprecated" : true,
                "type" : "boolean"
              },
              "totalValueMode" : {
                "description" : "Defines if products that already are receiving a promotion will be considered on the chart total value. There are three options available: `IncludeMatchedItems`, `ExcludeMatchedItems`, `AllItems`.",
                "type" : "string"
              },
              "totalValuePurchase" : {
                "description" : "Total value a client must have in past orders to active the promotion.",
                "type" : "number"
              },
              "type" : {
                "description" : "Defines what is the type of the promotion or indicates if it is a tax. Possible values: `regular` ([Regular Promotion](https://help.vtex.com/tutorial/regular-promotion--tutorials_327)), `combo` ([Buy Together](https://help.vtex.com/en/tutorial/buy-together--tutorials_323)), `forThePriceOf` ([More for Less](https://help.vtex.com/en/tutorial/creating-a-more-for-less-promotion--tutorials_325)), `progressive` ([Progressive Discount](https://help.vtex.com/en/tutorial/progressive-discount--tutorials_324)), `buyAndWin` ([Buy One Get One](https://help.vtex.com/en/tutorial/buy-one-get-one--tutorials_322)), `maxPricePerItem` (Deprecated), `campaign` ([Campaign Promotion](https://help.vtex.com/en/tutorial/campaign-promotion--1ChYXhK2AQGuS6wAqS8Ume)), `tax` (Tax), `multipleEffects` (Multiple Effects).",
                "type" : "string"
              },
              "useNewProgressiveAlgorithm" : {
                "description" : "Use new progressive algorithm.",
                "type" : "boolean"
              },
              "utmCampaign" : {
                "description" : "Coupon utmCampaign code.",
                "type" : "string"
              },
              "utmSource" : {
                "description" : "Coupon utmSource code.",
                "type" : "string"
              },
              "zipCodeRanges" : {
                "description" : "Range of the zip code that applies the promotion.",
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6d0f536a-99d8-4a5e-8391-c94c4728954d",
    "name" : "Get All Promotions",
    "request" : {
      "urlPath" : "/api/rnb/pvt/benefits/calculatorconfiguration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"archivedItems\" : [ ],\n  \"disabledItems\" : [ ],\n  \"items\" : [ {\n    \"Campaigns\" : [ ],\n    \"activateGiftsMultiplier\" : false,\n    \"areSalesChannelIdsExclusive\" : false,\n    \"beginDate\" : \"2020-05-01T18:47:15.89Z\",\n    \"conditionsIds\" : [ \"372e1868-2c0e-4437-be45-1ef8c9cab735\" ],\n    \"description\" : \"Promotion for Social Seller\",\n    \"hasMaxPricePerItem\" : false,\n    \"idCalculatorConfiguration\" : \"d8a1cd2e-b667-4054-b3ae-b79124c7218e\",\n    \"idsSalesChannel\" : [ ],\n    \"isActive\" : true,\n    \"isArchived\" : false,\n    \"isTax\" : false,\n    \"lastModifiedUtc\" : \"2021-09-17T18:13:16.2896414Z\",\n    \"maxUsage\" : 0,\n    \"name\" : \"Promoção Social Seller\",\n    \"percentualTax\" : 0,\n    \"scope\" : {\n      \"allCatalog\" : true,\n      \"brands\" : 0,\n      \"brandsAreInclusive\" : false,\n      \"categories\" : 0,\n      \"categoriesAreInclusive\" : false,\n      \"collections\" : 0,\n      \"collectionsAreInclusive\" : false,\n      \"products\" : 0,\n      \"productsAreInclusive\" : false,\n      \"sellers\" : 0,\n      \"sellersAreInclusive\" : false,\n      \"skus\" : 0,\n      \"skusAreInclusive\" : true\n    },\n    \"status\" : \"active\",\n    \"type\" : \"regular\",\n    \"utmCampain\" : \"georgeTest\",\n    \"utmSource\" : \"georgeSource\",\n    \"utmiCampaign\" : \"\"\n  }, {\n    \"Campaigns\" : [ ],\n    \"activateGiftsMultiplier\" : false,\n    \"areSalesChannelIdsExclusive\" : false,\n    \"beginDate\" : \"2009-12-31T02:00:00Z\",\n    \"description\" : \"\",\n    \"hasMaxPricePerItem\" : false,\n    \"idCalculatorConfiguration\" : \"7c946926-7815-4446-9428-83bd577a9135\",\n    \"idsSalesChannel\" : [ ],\n    \"isActive\" : true,\n    \"isArchived\" : false,\n    \"isTax\" : false,\n    \"lastModifiedUtc\" : \"2021-11-12T16:58:30.2553053Z\",\n    \"maxUsage\" : 0,\n    \"name\" : \"Progressive Discount\",\n    \"percentualTax\" : 0,\n    \"scope\" : {\n      \"allCatalog\" : true,\n      \"brands\" : 0,\n      \"brandsAreInclusive\" : true,\n      \"categories\" : 0,\n      \"categoriesAreInclusive\" : true,\n      \"collections\" : 0,\n      \"collectionsAreInclusive\" : true,\n      \"products\" : 0,\n      \"productsAreInclusive\" : true,\n      \"sellers\" : 0,\n      \"sellersAreInclusive\" : true,\n      \"skus\" : 0,\n      \"skusAreInclusive\" : true\n    },\n    \"status\" : \"active\",\n    \"type\" : \"progressive\",\n    \"utmCampain\" : \"\",\n    \"utmSource\" : \"\",\n    \"utmiCampaign\" : \"\"\n  } ],\n  \"limitConfiguration\" : {\n    \"activesCount\" : 4,\n    \"limit\" : 100\n  },\n  \"limitConfigurationMaxPrice\" : {\n    \"activesCount\" : 0,\n    \"limit\" : 10\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6d0f536a-99d8-4a5e-8391-c94c4728954d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.692855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetAllBenefits",
          "schema" : {
            "properties" : {
              "archivedItems" : {
                "description" : "Archived items.",
                "items" : {
                  "description" : "Archived item.",
                  "type" : "string"
                },
                "type" : "array"
              },
              "disabledItems" : {
                "description" : "Disabled items.",
                "type" : "array"
              },
              "items" : {
                "$ref" : "#/components/schemas/GetPromotions"
              },
              "limitConfiguration" : {
                "description" : "Limit configuration.",
                "properties" : {
                  "activesCount" : {
                    "description" : "Actives count.",
                    "type" : "integer"
                  },
                  "limit" : {
                    "description" : "Limit.",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              },
              "limitConfigurationMaxPrice" : {
                "description" : "Limit configuration max price.",
                "properties" : {
                  "activesCount" : {
                    "description" : "Actives count.",
                    "type" : "integer"
                  },
                  "limit" : {
                    "description" : "Limit.",
                    "type" : "integer"
                  }
                },
                "type" : "object"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "03143d8c-2ebc-4b13-bd96-57a969b225f8",
    "name" : "List Archived Taxes",
    "request" : {
      "urlPath" : "/api/rnb/pvt/archive/taxes/calculatorConfiguration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"items\" : [ {\n    \"Campaigns\" : [ ],\n    \"activateGiftsMultiplier\" : false,\n    \"areSalesChannelIdsExclusive\" : false,\n    \"beginDate\" : \"2022-05-09T03:00:00Z\",\n    \"description\" : \"My description\",\n    \"endDate\" : \"2022-06-01T02:30:00Z\",\n    \"hasMaxPricePerItem\" : false,\n    \"idCalculatorConfiguration\" : \"90f4affc-fea0-424c-a7a7-c69aec7bbdc8\",\n    \"idsSalesChannel\" : [ \"1\" ],\n    \"isActive\" : false,\n    \"isArchived\" : true,\n    \"isTax\" : true,\n    \"lastModifiedUtc\" : \"2022-05-16T19:43:06.1801742Z\",\n    \"maxUsage\" : 0,\n    \"name\" : \"Test Tax\",\n    \"percentualTax\" : 10,\n    \"scope\" : {\n      \"allCatalog\" : false,\n      \"brands\" : 1,\n      \"brandsAreInclusive\" : true,\n      \"categories\" : 1,\n      \"categoriesAreInclusive\" : true,\n      \"collections\" : 1,\n      \"collectionsAreInclusive\" : true,\n      \"products\" : 1,\n      \"productsAreInclusive\" : true,\n      \"sellers\" : 0,\n      \"sellersAreInclusive\" : false,\n      \"skus\" : 1,\n      \"skusAreInclusive\" : true\n    },\n    \"status\" : \"inactive\",\n    \"type\" : \"tax\",\n    \"utmCampain\" : \"\",\n    \"utmSource\" : \"\",\n    \"utmiCampaign\" : \"\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03143d8c-2ebc-4b13-bd96-57a969b225f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.692709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetArchivedTaxes",
          "schema" : {
            "description" : "Response object.",
            "properties" : {
              "items" : {
                "$ref" : "#/components/schemas/GetTaxes"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b685731e-0812-479b-aa31-114d1dd6e0b2",
    "name" : "Archive coupon by coupon code",
    "request" : {
      "urlPath" : "/api/rnb/pvt/archive/coupon/nf1rhd2w2u1crromy96sdxjcq02xkl9qmdqmg8tc29e7wg9fzqh2k7nefjsscl6hdg4qzlol0ga02tvmv63osxxncq2bivamiunvq9m5sikjh52lqy96yj1tsv53yfpb",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "promo10",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b685731e-0812-479b-aa31-114d1dd6e0b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.692665Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Archivebycouponcode",
          "schema" : {
            "description" : "Coupon code of the archived coupon.",
            "title" : "couponCode",
            "type" : "string"
          }
        }
      }
    }
  }, {
    "id" : "3ac08807-50d1-4d98-b3e0-84d212f1ac3b",
    "name" : "Get archived coupon by coupon code",
    "request" : {
      "urlPath" : "/api/rnb/pvt/archive/coupon/ubsucy4vogo6y7bfwazukgqba91audb2mrz10ez5vw16zjgoqmwgc8nw3wwk8pe1hkbgkkzieegb2jjdp44l9p0qqygedyj59tgskdeyad0qyv",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"couponCode\" : \"test\",\n  \"expirationIntervalPerUse\" : \"00:00:00\",\n  \"isArchived\" : true,\n  \"lastModifiedUtc\" : \"2021-11-10T14:24:39.3683694Z\",\n  \"maxItemsPerClient\" : 10,\n  \"utmSource\" : \"coupon3\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ac08807-50d1-4d98-b3e0-84d212f1ac3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.692614Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Getarchivedbycouponcode",
          "schema" : {
            "properties" : {
              "couponCode" : {
                "description" : "Coupon code.",
                "type" : "string"
              },
              "expirationIntervalPerUse" : {
                "description" : "Coupon expiration interval per use.",
                "type" : "string"
              },
              "isArchived" : {
                "description" : "Defines if the coupon is archived (`true`) or not (`false`).",
                "type" : "boolean"
              },
              "lastModifiedUtc" : {
                "description" : "Date and time of the last update of the coupon in UTC format.",
                "type" : "string"
              },
              "maxItemsPerClient" : {
                "description" : "Maximum items per client that the coupon can be applied.",
                "type" : "integer"
              },
              "utmCampaign" : {
                "description" : "UTM campaign code.",
                "type" : "string"
              },
              "utmSource" : {
                "description" : "UTM source code.",
                "type" : "string"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3412ab5c-fad5-44db-831c-39d3744ceaac",
    "name" : "Archive Promotion or Tax - 204",
    "request" : {
      "urlPath" : "/api/rnb/pvt/archive/calculatorConfiguration/dtfxwbyzubomrqykyu0jnrjfumnnscptrhxh5602e6t4r42usuqspdhpmtga8x",
      "method" : "POST"
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "3412ab5c-fad5-44db-831c-39d3744ceaac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.692492Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "ArchivePromotion"
        }
      }
    }
  }, {
    "id" : "f751106f-68a3-41a8-8022-21b982991ed6",
    "name" : "List Archived Promotions",
    "request" : {
      "urlPath" : "/api/rnb/pvt/archive/benefits/calculatorConfiguration",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"items\" : [ {\n    \"Campaigns\" : [ ],\n    \"activateGiftsMultiplier\" : false,\n    \"areSalesChannelIdsExclusive\" : false,\n    \"beginDate\" : \"2021-04-15T03:00:00Z\",\n    \"description\" : \"\",\n    \"endDate\" : \"2021-04-16T02:30:00Z\",\n    \"hasMaxPricePerItem\" : false,\n    \"idCalculatorConfiguration\" : \"05558233-b415-4f2e-9822-ebdb3918623b\",\n    \"idsSalesChannel\" : [ ],\n    \"isActive\" : false,\n    \"isArchived\" : true,\n    \"isTax\" : false,\n    \"lastModifiedUtc\" : \"2021-04-30T17:56:29.7157634Z\",\n    \"maxUsage\" : 0,\n    \"name\" : \"Promoção Progressiva\",\n    \"percentualTax\" : 0,\n    \"scope\" : {\n      \"allCatalog\" : true,\n      \"brands\" : 0,\n      \"brandsAreInclusive\" : true,\n      \"categories\" : 0,\n      \"categoriesAreInclusive\" : true,\n      \"collections\" : 0,\n      \"collectionsAreInclusive\" : true,\n      \"products\" : 0,\n      \"productsAreInclusive\" : true,\n      \"sellers\" : 0,\n      \"sellersAreInclusive\" : true,\n      \"skus\" : 0,\n      \"skusAreInclusive\" : true\n    },\n    \"status\" : \"inactive\",\n    \"type\" : \"progressive\",\n    \"utmCampain\" : \"\",\n    \"utmSource\" : \"\",\n    \"utmiCampaign\" : \"\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f751106f-68a3-41a8-8022-21b982991ed6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.692437Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "GetArchivedPromotions",
          "schema" : {
            "description" : "Response object.",
            "properties" : {
              "items" : {
                "$ref" : "#/components/schemas/GetPromotions"
              }
            },
            "title" : "",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec60781b-25dd-4b24-bf26-1282ffb6ecfe",
    "name" : "Usage notification - 200",
    "request" : {
      "urlPath" : "/api/rnb/pub/notifications",
      "method" : "POST"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "ec60781b-25dd-4b24-bf26-1282ffb6ecfe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:19.692364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Usagenotification"
        }
      }
    }
  } ]
}