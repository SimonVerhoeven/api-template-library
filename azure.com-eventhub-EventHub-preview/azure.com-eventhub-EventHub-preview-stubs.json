{
  "mappings" : [ {
    "id" : "bd6bb1b6-e3a6-4d51-b98d-2c70e33d2704",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/r0yh/resourceGroups/Lanny+Jones/providers/Microsoft.EventHub/namespaces/Wilton+Glover/virtualnetworkrules/Evan+Schmeler",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "powdq4mgmcwhkuzo7hffgd501z47xbpcppabngfglmwe0tasvfxmk4mev27afmcvimlxskair8elpypn7rlsfa8cmcdehlont6skhssqkbhakc4xzp"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "bd6bb1b6-e3a6-4d51-b98d-2c70e33d2704",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.607932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    }
  }, {
    "id" : "2f8d5c5a-517d-4c6e-9e16-525c17350c05",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/6elk/resourceGroups/Simon+Rodriguez+MD/providers/Microsoft.EventHub/namespaces/Stanton+Hayes/virtualnetworkrules/Kirby+Leannon",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "avyhbfkhcvscnn47dgrtx22w3rzblahxq8cp71jh4hg2ztzew4vptyjaw4c2zjg3wwvv3xi7qprvcyfopsfdand14midcuiu6pw568dzdpc9hjc92o98shlvdkj4v3rxu96dh9808gryv4iklcwmxb78hc281g76zzh"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "2f8d5c5a-517d-4c6e-9e16-525c17350c05",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.607701Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    }
  }, {
    "id" : "f876599b-b202-4203-b31a-31f588965863",
    "name" : "Creates or updates an VirtualNetworkRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/0t51/resourceGroups/Evia+McLaughlin/providers/Microsoft.EventHub/namespaces/Carrol+Nitzsche+I/virtualnetworkrules/Owen+Predovic+III",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2msrz010xbt6j4e1lhgqaxoraqkt240ke491e0tbom6h94"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dong Schaden\",\n  \"id\" : \"r838\",\n  \"type\" : \"wooy86g7jvse6lpqvt3cnr5wdp8z0ngdqjzthcjpukrpgy6prrj3jct012bzwqtrw071kpq134s3nqbzlssm0avwgzgujscy07gb00wvm30audi\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"1bfi\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f876599b-b202-4203-b31a-31f588965863",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.607449Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "ARM ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "9bc1bac1-01f9-43c5-af13-f5ff00e53466",
    "name" : "Gets an VirtualNetworkRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/5743/resourceGroups/Dr.+Micki+Howe/providers/Microsoft.EventHub/namespaces/Apryl+Kohler/virtualnetworkrules/Miss+Ignacia+Aufderhar",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6fj4ufdh3e0qrmjyjdcdqh5b9r7cod317q68favwkc8jx0xi6pfzz0te1zneua1eaww0tuuiwcuektkpqq3bla6xft9ruz5hcxj99jp4x5kzb4ac83k6hrktjhko50vmhst7x1r860t928wkypscr3e3dxkwvt2p6d1epcbk63epjapftbd0i22amwm8bi"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Altha Schuster\",\n  \"id\" : \"0054\",\n  \"type\" : \"dzfel1o36ve2mbeghx46ljj1voognx5tg3jr5bu6kjzlm5\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"23dg\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9bc1bac1-01f9-43c5-af13-f5ff00e53466",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.607002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "ARM ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "d61965e5-685b-43f9-b0a9-2a154b5d28e0",
    "name" : "Gets a list of VirtualNetwork rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/4jb6/resourceGroups/Porter+Harris/providers/Microsoft.EventHub/namespaces/Felton+Ruecker/virtualnetworkrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mmsn2rt6qu3omu6lpgy840ru8xbdehzkai15j5hq66yaia94pthrmz1kryfhdjd3ey06rz1581sdensk8orrpxolp93nq0qg4kiei2pwg2zbqt78hscntpl6nfrmm0lz5bm04ckplfwxa87wo6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Thi Gleason IV\",\n    \"id\" : \"99c4\",\n    \"type\" : \"g5k9fvtbybs6069cyhc7ec24pnmmcv8gaggi5b49u41xjm8vsav49eqp4uvv6l2vpuuqaseas188xn864f8bdio7yqo1rrkz8xwwywwyoegfox02zjku2wja422d977nk2z5hpyl1l35n40edvcag0ffdwf\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"14e5\"\n    }\n  }, {\n    \"name\" : \"Leon Koss\",\n    \"id\" : \"jbjp\",\n    \"type\" : \"pagp94jlb229xzfgiccv9g326rlbrrzu5jcpnh60zk5qczyonac5qiqv0gj0ufcas2cnsi6so09tvtw1dvu4sjjqkp2yv6opnvx2swn0dgynv7gntwyuwqckbrcec9sc91msl9tpahywxneve5qgy4o9c696nbsyepwrtzcqciy8245sod7u6rznb9qjg\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"ve9q\"\n    }\n  }, {\n    \"name\" : \"Stan Casper IV\",\n    \"id\" : \"7v56\",\n    \"type\" : \"v5oh5ko97dnrhcm99c00x2e9pcpn98sa0xfat7vzjow5w2hh6t0vite0v9h7kfoz1ss4oszv0znh7npsmqu9hofmdzsc97gd442ogzepflowof9etrkbehpljq09x5385vl4np2h5ys110brzx2g\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"246n\"\n    }\n  }, {\n    \"name\" : \"Louis Koss\",\n    \"id\" : \"08cr\",\n    \"type\" : \"jq4\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"zj0v\"\n    }\n  }, {\n    \"name\" : \"Alden Berge\",\n    \"id\" : \"0hf1\",\n    \"type\" : \"3z9ungmh0vaaxqebvxxkcgmwyiv2vqpd6gt1kgd2xq4pupito4o3qk9\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"8pjs\"\n    }\n  }, {\n    \"name\" : \"Olivia Herman\",\n    \"id\" : \"p17u\",\n    \"type\" : \"hrb2sko25ttio4vwgjevgccsehg7k7gwnu8c1vokqeug8feioz3udhkzckj3phpbadvia79risq00tnq47hjgu27zfgeazapjt07kdmzxcw06c5rvkua997qagp4ydb2uly1l3v2md5l4hx5i0jnggmvumzx0vy6nmvi7b5aasqegpa15jga\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"d36h\"\n    }\n  }, {\n    \"name\" : \"Deon Spencer\",\n    \"id\" : \"k507\",\n    \"type\" : \"u391knrsvsjkqrb59scbt092udjd\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"1076\"\n    }\n  }, {\n    \"name\" : \"Santana Nienow Jr.\",\n    \"id\" : \"9820\",\n    \"type\" : \"51i1sabnp4eaz60xqoee8wq58revasnuz8vgj9scdh9ck6wp9v0hoe7731c\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"u6o1\"\n    }\n  } ],\n  \"nextLink\" : \"wt15nw0mqnva2yxcqewzwhu23w96yj8wrguwxey6rx4bqlq4bbjfuf7onv5obc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d61965e5-685b-43f9-b0a9-2a154b5d28e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.606508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListVirtualNetworkRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of VirtualNetwork Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List VirtualNetwork Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "51d75550-d9d7-49a5-a7e2-e1d3511c477d",
    "name" : "Create or update NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/x54b/resourceGroups/Brooks+Yundt/providers/Microsoft.EventHub/namespaces/Pablo+Kreiger+V/networkRuleSets/default",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9f4vgryvusal85c2gk4zxskmch4ir4noie28fusxoo0evis60d3n3k50q588gkjzbj7"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Dorinda Wisozk\",\n  \"id\" : \"kum2\",\n  \"type\" : \"ajap12zfsres858xvjsjaxww401nxagonlf9z444cfwo5vb4s583bxsn25hpnkdlkh6vcz999eqhl5nzibbwoezuvmlhbbe\",\n  \"properties\" : {\n    \"defaultAction\" : \"Allow\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"iohy82ue64ex4vgm5\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"9srxyhchzcxx1la38f14wm0qrzcibw5euef17v2auaychf9vzdn9vudvrliaarazwosnkqj1005ap9tmqpzwghak85q7peslc64ya5il9oltblgntuhz0dopepmbnoxn2kh5090rdchjr7ern5ihq975ob5fl5b1aye2r94vri73gd926qg6yme5wkbniam54r78q1\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"i1uqzhvksn8pbg5\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"ndfudfrrovw30cafdaa5xbwjh2s25vlmzknbr4ba1pduf26m17wvzijwoapeexyrdsnzxcd9n6jwfyhd60ze3r6pjsxb29gl9uuprlqigclxhx3sp8s549143pvu9572eh1yx0w7v29u34crsz64szskjz4q36sc4\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"7bnld1ui9p0tl441hh114uwvo1vfdephgarmfubuy6za9l80txlruxo7lkhuoabpzp8m608qp0pwnkxcosx7icro3ewoaddrv9fntc9abvqvm60erixlcto46c4dvx15ttcb0oj3fgtju5ox\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"7a4g\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51d75550-d9d7-49a5-a7e2-e1d3511c477d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.604684Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "d5d2f9e6-44b8-4a96-94f8-b3e6b784b7d4",
    "name" : "Gets NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/74cn/resourceGroups/Dr.+Carlton+Friesen/providers/Microsoft.EventHub/namespaces/Marlena+Williamson/networkRuleSets/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "pyeeys1f8frmx9luxxh4naljun3hibyj562c6lkwpqlc3ngxe9rh2y777w1rvpmrnrqxmdegitbnk2zlapnz0bmt1d2cw1h5bz313k71a7ge"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Florentino Lueilwitz II\",\n  \"id\" : \"2n6j\",\n  \"type\" : \"j8b631lxmn04h5gwos3kb8ogr0zbuagh25a9xmh6jmv0g5ty54eexxmphplfxcea9lar5cqymf2s35wc7o5qorfmt7dsxrni5i9tc5sulz4k6wtmkjxikk\",\n  \"properties\" : {\n    \"defaultAction\" : \"Allow\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"c0392slrhfaxbmjrplkc5v38y1mzuamvy7l8u0v8hr1kydhstvmbve3k4byhv371hy0pozf7vkmznsg7ow2jimrunhpd9d22au2pwho24vhue728uf0s7n5gye77j56oredzp2hf67ssomp78xh9clel42pfio56lik07ib5ethexh15c503pnypry201\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"uar6\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5d2f9e6-44b8-4a96-94f8-b3e6b784b7d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.604124Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a756abfb-6f20-4bde-b660-40d3b81655e8",
    "name" : "Deletes an IpFilterRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/yd66/resourceGroups/Julian+Sipes/providers/Microsoft.EventHub/namespaces/Miss+Alix+Paucek/ipfilterrules/Mohammad+Shields",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "phpvzm0uwrjrcselm913lk4p33fj5c0h7l3te3o1nnwsilews1p26oghorha58761q6eqcxzs90u9psf34t68xfzko8vz5h8094i5mbx"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a756abfb-6f20-4bde-b660-40d3b81655e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.603565Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    }
  }, {
    "id" : "a059454b-15e2-4e42-8285-148f689e144a",
    "name" : "Deletes an IpFilterRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/2744/resourceGroups/Malvina+Harvey/providers/Microsoft.EventHub/namespaces/Oswaldo+Renner+I/ipfilterrules/Ms.+Kieth+Glover",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "c94nsdaw512azoh68hrquuxuu6nsg7ij3ozhqr385jrthqlhmqarnmgydc4kldo549jb6tduzn2b6lku0ngqzbjj"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a059454b-15e2-4e42-8285-148f689e144a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.603332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    }
  }, {
    "id" : "5dbd1b2b-2533-43b1-aa2b-aacf88eb1d77",
    "name" : "Creates or updates an IpFilterRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/p8g7/resourceGroups/Miss+Gregorio+Rolfson/providers/Microsoft.EventHub/namespaces/Mamie+Wintheiser/ipfilterrules/Alfonzo+Lynch+DVM",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1fc52y7kwxi62i9e91oasj6vpmkac2kzkud06e5jrkj12cs4irkgdly7pzrrushprfpnq2rtxmehysbv74khwd2c3l4byz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Miss Freeda Pouros\",\n  \"id\" : \"g104\",\n  \"type\" : \"6phof3jma78ymcoiw8vjjgp4lqxvk3s0jhc7svvas9b13j7rqck6g1f\",\n  \"properties\" : {\n    \"filterName\" : \"Lacy Rowe IV\",\n    \"ipMask\" : \"ndgt82k8kcw6k4of8kwzbbpl50wm6ncpbi575x1nzpe2q6f63ng6w3p40eqywu9l4d1go3sezp5bmafdiihvolqje5v5rs5wxphx32ij599e8008b1hq8myb0t3guqssf8djj2oqpf92w6qfuoefudh3q6ti4by6lkxscufh\",\n    \"action\" : \"Reject\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5dbd1b2b-2533-43b1-aa2b-aacf88eb1d77",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.603069Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "9b5defef-23e6-48e2-9d06-fe6ba7dfcd88",
    "name" : "Gets an IpFilterRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/90j6/resourceGroups/Summer+Kulas/providers/Microsoft.EventHub/namespaces/Cornelius+Legros/ipfilterrules/Reed+Haley",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "e9jo9rkh9k58choexroq801fwg99nwhb4un8k8db78fen93ckqmni3s688d26d601jzvzbj8ldqobp8xf9ttyix89mf97nbd07fphzdqf6euyixw8enk015jkqd7ymfsmivir5z2puuse7xvdgr1yfgx59igrl34jor4b5fwyz4ruyus7ro4mp98wtee"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Emma Satterfield\",\n  \"id\" : \"m4gj\",\n  \"type\" : \"nf4umsxb09rwbeib5yb5bupqd9njp3t8480hkg599yyy7ec8c0hwgbi9laxo6ysh3ltyu7ju1gw70u5m09jgukir2ubdkroxcqtpu8jhlf0i916awjonyejrp9nkw1yegb625gyowjj5mftf9v63ux\",\n  \"properties\" : {\n    \"filterName\" : \"Alvin Turner\",\n    \"ipMask\" : \"i4x15dcw8kfsi9obuogsva78ytdzrxwiqr1wldaj0yrj4deu9t406oprfcvg7v414z2qpyaq6wh3fbdazhfi8km5orqo22crg7egdw967wqnvzq4h7ft3opoq1mqgonx98jqdbxu7ut1cpgb6vza5\",\n    \"action\" : \"Accept\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b5defef-23e6-48e2-9d06-fe6ba7dfcd88",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.602557Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ecd1435c-e05c-43b6-81eb-0cbef8946bb9",
    "name" : "Gets a list of IP Filter rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/hv0h/resourceGroups/Roger+Renner/providers/Microsoft.EventHub/namespaces/Nakita+Welch/ipfilterrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1c30e"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Fleta Mohr\",\n    \"id\" : \"530p\",\n    \"type\" : \"nzte2344npvqdt1ehy06rxx538injlrpp1ew1ncwnisk3hqtyjyle3sqzz8852f42fdw4kvo0c5ealst5q\",\n    \"properties\" : {\n      \"filterName\" : \"Erna Kub\",\n      \"ipMask\" : \"srrhpdzofayt4gz1vqshaqvkfkjj7oigf2vyc3aet3innmnc90suasxq028hm9jbmlm2tu4o4yhsukuskkthh5fte3f3lrdprcp9bm7lo5l66lghxbfmv40dz2huhvsunbo0764ez6\",\n      \"action\" : \"Accept\"\n    }\n  }, {\n    \"name\" : \"Deangelo Lakin\",\n    \"id\" : \"4pxi\",\n    \"type\" : \"dc8amvs5gfbzp5oo431iszf0digj9kwlk8e16416z2bwxv91x5h5kgh0s9thgx98ouwymd1x79d\",\n    \"properties\" : {\n      \"filterName\" : \"Dolores Fisher\",\n      \"ipMask\" : \"6fqcgekj64py675ummb5us9frn5t0y32naq3yfm3krg0uruiyf9tf1jxlmj2sp9e4c01y5ykyvay2ad349ji922agsqtpmr5774ta6p57zammpw11hdur\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Dr. Shannan McGlynn\",\n    \"id\" : \"y0py\",\n    \"type\" : \"8c1atonle5aknd759sgolcd6ge9gpmo36xt9rqdbl6vsa57hz7yqr7r8wzol9pcutzlv6vwqedd6oxdzl49x1n8d08ynha9cyka4raom550xo0009rkguc0hks3zehhw3zvbu1ob3203b0am0d0s75qgvokk7ucj5xkx67uq2hqdc79rvh7lj4f3frwbx1syl8d6orc\",\n    \"properties\" : {\n      \"filterName\" : \"Miss Wade Kirlin\",\n      \"ipMask\" : \"l0667mc8mou7j9t4ybntp8xjlg2lccg8512kuyof84y7siugwydu0gdwmc9etijravwgifjydz9nffuc40gae1wvnh1kmftqnugh3q8dvj0w85xurlm5\",\n      \"action\" : \"Accept\"\n    }\n  }, {\n    \"name\" : \"Brad Kozey\",\n    \"id\" : \"tmsk\",\n    \"type\" : \"hiof2b8ju4ct4it3hvkxm2mb2jsyb6ungyccgz9g1d478t8n2h3ydzz4m3alahkgj37fptb2u4ogftpa19vvtaz50l11jkux68k84fyrwbvc3vkz2fjgt06uyvllyu8ozl12rqimn06ie2eka4k8jl8r0sn6a42gr2\",\n    \"properties\" : {\n      \"filterName\" : \"Maria Krajcik\",\n      \"ipMask\" : \"ts3rnixl928c96nlklnygh0bxx5qa6avz8uiquiareamd4546aj3y0j7pt3bfeexu9sm3bx2agzj0n67egcfsxenwx61uiddl7dj82kfyz5brs18ldtjsx37iwbfn951ck86jgdfnn2tb6ydykfyo04bofp694czo6ar1k7cexfmivisdeqxtis7x1d6\",\n      \"action\" : \"Accept\"\n    }\n  }, {\n    \"name\" : \"Leah Dooley\",\n    \"id\" : \"e868\",\n    \"type\" : \"2k82bad7oj30g4ygenacfluc6uag15rq1sdqptk70mk35rcu9yfpspe2w4l17eg63ai6hznf8tvvcfq5vta4sicaj08lod\",\n    \"properties\" : {\n      \"filterName\" : \"Annamaria Rau I\",\n      \"ipMask\" : \"lqv84t3oixqkr6f10eex7xklmmsul2tl5uz1rbyjkq94bforsltpczdls3n6q8a1vvh66qd66w2psauesb3b3gsk6r4ptx3kjctah6tuig7z7bquw46f00li97en0bfbk9v2\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Antwan Ullrich\",\n    \"id\" : \"269x\",\n    \"type\" : \"orzas20yr0t2durmtgnvxeajbey0qn294ympdeyaimoa5mretqnia9nlluaufldps0gtrc8fewcj3m3z6atdarrm7wml7ko8sehv24h4y3s0ypkh2nbv8qogggncinx6wfur96elci0f3eeso1vdh02hkrzkek484beopucyvtwp2b9c3dw7\",\n    \"properties\" : {\n      \"filterName\" : \"Armand Kulas\",\n      \"ipMask\" : \"5d7smradiq1lm3n35xuu7u3uey53d0835cr6gdggys1\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Latosha McCullough DDS\",\n    \"id\" : \"s8dv\",\n    \"type\" : \"hdbd0vv2onsirr0\",\n    \"properties\" : {\n      \"filterName\" : \"Arthur Hansen\",\n      \"ipMask\" : \"9806abk40lhoexntv54nye319hmxx3hz4boairocytd95bos9braw9csnr3vmob7qs49ioqzhhbako7qcdlbypnzvjbo41k8rhkgdyvbzaug7j3vjdwpmcs90\",\n      \"action\" : \"Reject\"\n    }\n  } ],\n  \"nextLink\" : \"vyfocppte7o4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecd1435c-e05c-43b6-81eb-0cbef8946bb9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.60196Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListIPFilterRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List IpFilter Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/IpFilterRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    }
  }, {
    "id" : "c0670eba-ec45-4502-9d30-83bf234d838d",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... - 202",
    "request" : {
      "urlPath" : "/subscriptions/2720/resourceGroups/Dewitt+Pagac/providers/Microsoft.EventHub/namespaces/Miss+Clay+Metz",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "lxehqmwhpxkzz5ikpwybvsutewx4ludrv22v15dzfjcpmmop8hdxcxhphkocanczsixt8kytxdmwtxiv8xcdq0whb0jodphqtspreh5lv2c19q34uij3ljwni787z"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "c0670eba-ec45-4502-9d30-83bf234d838d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.600126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update"
        }
      }
    }
  }, {
    "id" : "da993d9f-007f-49b7-8173-a165634f012c",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/298m/resourceGroups/Charise+Jones/providers/Microsoft.EventHub/namespaces/Refugio+Kuhic",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rmpgspv9wah9m3k2onvqo1z3i6jcv8gkj54x7nyvriqw6czrhltd4ug51tdxzbz6yfzr6vhl68io874nbupoozod53c17cr4k5sznybhsca28ew51"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"l1ls2yie4qrov5gp74pxucdpi4jo6jt3cppf1e7g56ghns87o8nf036hhzyv0wifkr5l2ig13hiigomw3pyvg09h7ro52ouak8940uitznsxk1eo1efa8sidqncqxgdik61nnnv0gvrx1oelqy2e7b2br9jy734zi5syy0h1rb7m980wp\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 18\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"66l6\",\n    \"createdAt\" : \"2023-02-25T11:26:26.599Z\",\n    \"maximumThroughputUnits\" : 1,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/984654\",\n        \"keyName\" : \"Karl Koch I\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"801f\",\n    \"serviceBusEndpoint\" : \"c5ip5x7d75w9t6gldvcepd80bqnf8ra9o44mkk\",\n    \"isAutoInflateEnabled\" : false,\n    \"identity\" : {\n      \"tenantId\" : \"t0pa\",\n      \"principalId\" : \"b6nb\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Illinois\",\n    \"updatedAt\" : \"2022-09-01T06:19:58.599Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "da993d9f-007f-49b7-8173-a165634f012c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.599918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "87b1e135-4d38-4fbf-ac9a-46244e764931",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/t760/resourceGroups/Shirley+Cassin/providers/Microsoft.EventHub/namespaces/Annie+Schmitt",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "c4gbzi02iqc3yha95kj3enqyjd9n56425oedp729b8f6r19ytkds9t"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"0jojon5qmzf2p6v3e\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 0\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"hwpu\",\n    \"createdAt\" : \"2022-11-17T15:38:47.598Z\",\n    \"maximumThroughputUnits\" : 3,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/962185\",\n        \"keyName\" : \"Amos Welch\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"lxfh\",\n    \"serviceBusEndpoint\" : \"f57tjz0cyzrvl6etnde9t05tct29q3npolyxpxen1h6elho5e6on5jkn9r4x9kr0dw828lrxdfkwyajvj4ngwq9o9vg5q2d6ji\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"g1ne\",\n      \"principalId\" : \"fd11\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Vermont\",\n    \"updatedAt\" : \"2023-12-04T12:10:48.598Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87b1e135-4d38-4fbf-ac9a-46244e764931",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.599082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "a44e27c3-d5aa-4ac6-a60e-242720273b14",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/gd61/resourceGroups/Un+Hoppe/providers/Microsoft.EventHub/namespaces/Marlin+Osinski+III",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "k9ft8m23q0oygm7n9dsm731t8h3hs2tggog51aoemszs4qzo228waxeksxke8he1y7fe30omzfal7lfv3ewc84qyxovz95sib1ajq4tze09r78ck9127"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "a44e27c3-d5aa-4ac6-a60e-242720273b14",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.598241Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "f56b1b2d-f1c3-44e8-ba48-dab819816de6",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/81ag/resourceGroups/Olga+Metz/providers/Microsoft.EventHub/namespaces/Miss+Neida+Herzog",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "28gy3rdrgvj616b11pdr87mxn4z7bvtpqup27fywxkao3zp17g28e7hmp65xefjhc8j0"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "f56b1b2d-f1c3-44e8-ba48-dab819816de6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.598049Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "370c822b-5286-47bc-a8b6-58cb2ce8bcf3",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/504g/resourceGroups/Elroy+Marquardt/providers/Microsoft.EventHub/namespaces/Eddie+Hodkiewicz+MD",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hrf48enkvwuy3wfje3yzs79bzsej4jybl1sgfgokth4i7mt1hunlokypo9hzhf1homzgepvg7fg8s01sesfpf6v8otz3ao8hooi51xzj92vj2dkvdvvfw8v0v4myjfkr3ve6xbgl1m3f12uhlhdscjfskf9te38b99owt8091oxdezicf1nbh7amh8cnxxpl"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "370c822b-5286-47bc-a8b6-58cb2ce8bcf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.597865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    }
  }, {
    "id" : "509c13d3-d875-4212-b72f-a467a2b981fb",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... - 202",
    "request" : {
      "urlPath" : "/subscriptions/4iod/resourceGroups/Andrea+Friesen/providers/Microsoft.EventHub/namespaces/Dr.+Rudy+McCullough",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hw7sbfy01rx7nj3ysoach3icyunhp2mw5jzyug0e03k2mln32zr8nkiq2jbmdxh0pgzp0ve9dd6m86vtydry1hmz44zmf4ncmt7vgvqlz68beh0087pisxjvishamwfpfgc67pt2"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "509c13d3-d875-4212-b72f-a467a2b981fb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.597664Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate"
        }
      }
    }
  }, {
    "id" : "bc88c0dd-15fe-4ace-a38b-98cc316bb171",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/qq77/resourceGroups/Ms.+Jackelyn+Zulauf/providers/Microsoft.EventHub/namespaces/Eldon+Reichert",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6ubwn8429kmo3v062uu"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"c4jyz1oi22mvd2yr85x6rumxxwd8oqcubxgkkd2nj00jresoww056k9819qtug1jr16h4ijmujvjlvludzi05r9p1vsge98f8ds8jif1r64ujpsdiojsxt3vo4e9ntmxt1sqmmno\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 12\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"0tuk\",\n    \"createdAt\" : \"2024-02-13T07:55:18.596Z\",\n    \"maximumThroughputUnits\" : 3,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/818696\",\n        \"keyName\" : \"Filiberto Abbott\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"5crf\",\n    \"serviceBusEndpoint\" : \"4k67mtcvcx4xoqyiqcz3ac00xzb3e9c8g3g6rsyp8j8fz2l3kmpdybx75thwexkyhp0s6jvy2hpapy8nlyuzvr7s5k7ckzirnbco1\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"3r2b\",\n      \"principalId\" : \"5649\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Nevada\",\n    \"updatedAt\" : \"2022-03-13T09:26:01.597Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc88c0dd-15fe-4ace-a38b-98cc316bb171",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.597457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "cfa9f34a-7ec9-455c-abe0-1ff2fdb8df07",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/n521/resourceGroups/Harlan+Raynor+MD/providers/Microsoft.EventHub/namespaces/Tina+Trantow",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "uthxnx76prxxw5xot3aialhyxtjsqtry9p61gut89u6z0n3vhr1m1rlljd96"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"14pyb062m19p98rot4pmny2mjruxcvob1\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 11\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"3zu1\",\n    \"createdAt\" : \"2022-08-26T03:26:46.595Z\",\n    \"maximumThroughputUnits\" : 15,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/177528\",\n        \"keyName\" : \"Guadalupe Leannon\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"59x8\",\n    \"serviceBusEndpoint\" : \"mnyaxfn760qkxaosy7ehsni6qiq4xno1ux36a7h986ex6m0e0xuyporeowwzlintusxe1a38fxhj1ruij5sejnrytoy21asixh1yuli8ufjsw9ckbtr08ju4k3ohfah2wann9gxpxv72tv4sdjxpeee11033l85nuuz9ijgvtiutu2py0mb0je891vvg1\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"mc6n\",\n      \"principalId\" : \"q62m\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Maine\",\n    \"updatedAt\" : \"2023-05-31T23:41:43.596Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cfa9f34a-7ec9-455c-abe0-1ff2fdb8df07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.596623Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "629e9101-323f-4cf4-b5af-024c1929fb8c",
    "name" : "Gets the description of the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/7l7q/resourceGroups/Pamella+Hauck+Jr./providers/Microsoft.EventHub/namespaces/Julius+Kohler",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zbwiytleynydix7f0qy"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"5yb54rw38muof0cwmwp22m7mq9weh2\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 9\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"5l0h\",\n    \"createdAt\" : \"2023-02-09T14:23:41.594Z\",\n    \"maximumThroughputUnits\" : 12,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/686922\",\n        \"keyName\" : \"Miss Carlie Morissette\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"ht48\",\n    \"serviceBusEndpoint\" : \"d3fenb3n1gakxbl8k6ty3u2uyqof14l17avsjf5t7rlxtx0r5x1y4rlta3xsravk85qqq9zm0s97pg9fa2k06x7h0c44mqvyjh82bblu0u5f1q737ukyo3vajla1jsv\",\n    \"isAutoInflateEnabled\" : false,\n    \"identity\" : {\n      \"tenantId\" : \"uzsy\",\n      \"principalId\" : \"6g71\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Kansas\",\n    \"updatedAt\" : \"2023-11-15T20:56:08.595Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "629e9101-323f-4cf4-b5af-024c1929fb8c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.595564Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "4cf84344-0267-4e79-a305-309fe3b406dd",
    "name" : "Gets the description of the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/l56o/resourceGroups/Fabiola+O%27Keefe/providers/Microsoft.EventHub/namespaces/Fidel+McKenzie",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "57mcj6n6te48qjzm1vh3qf8o343lbw3w8032knwiam3pz4545eylcw5xce"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"7krrktlmqr7rwfvv0z8gnq7nnlbv4yocbzunkza5itx1rqpcemyg1755qay96y3qcfdtp8zy8y17d1o83gbhqg3adfsctszc73sqnvhsc3adurllkg9vv7yqkq9t0ouaagr6fmc7b647t2bor3nmcn\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 9\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"02o6\",\n    \"createdAt\" : \"2022-08-18T17:24:21.593Z\",\n    \"maximumThroughputUnits\" : 3,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/381175\",\n        \"keyName\" : \"Carolyn Rempel\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"096r\",\n    \"serviceBusEndpoint\" : \"73rslkpnfke5xd1wmtiqdst2kxikze0uaq4wds9896gnfwaju3j16ro2492rm2gfn5qr4ajdmdeg8uvbi8o88yv5okqzrzu873mbe7gynxy8q7nhqqtnrdznm6zpuxpk5a8mbercv1h0ro6cv6lvvpezy65fu5is5ggzrjg7vzfy80h2l05ystaxj6wndub41jma2z03\",\n    \"isAutoInflateEnabled\" : false,\n    \"identity\" : {\n      \"tenantId\" : \"6m9x\",\n      \"principalId\" : \"n9wf\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Kansas\",\n    \"updatedAt\" : \"2023-02-20T17:19:44.594Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cf84344-0267-4e79-a305-309fe3b406dd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.59476Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "2647889e-f8bc-4be6-80d3-e86c58043ca1",
    "name" : "Lists the available Namespaces within a resource group.",
    "request" : {
      "urlPath" : "/subscriptions/2jli/resourceGroups/Gregorio+Hand+PhD/providers/Microsoft.EventHub/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8c0oiut96r2wygxt7hh3l7r6xhku4ys1yzgjoxg7itdbw4ll4oeshobmokzjsg8os6gjc10noxc0fxjfoccdzr7ymav16udgqyhpsp14gfb8phslagjlmquysb9gub28l664z6fsldd246quy5iglzgml"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"xj7ang49pzxoxt5jf0rwmu11ia95p1x6xw5mbrvzunn56xdjr7ht10pc2gy5tisx65safi1iygvkc7l9jrd5vd284cxc3mqzaueb\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 16\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"be1s\",\n      \"createdAt\" : \"2022-11-17T04:42:53.592Z\",\n      \"maximumThroughputUnits\" : 15,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/724921\",\n          \"keyName\" : \"Shane Adams\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"24w8\",\n      \"serviceBusEndpoint\" : \"9himu3w52emgu7ful\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"k0f3\",\n        \"principalId\" : \"564g\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Kentucky\",\n      \"updatedAt\" : \"2022-07-01T11:11:51.592Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"lu5xuy83seqiywznk03ckiupkpm2bkr9kyaq9yj3ewoqinfv4z9caa2nm413uxhly1aqz2djqh2aunw1niswcdsfm0neqtd69xohuo3hdl8twg55j9sla637m53eo1sa54ix0yo3vgms2fvzugd3oifpmn4cfhizok754g1foi5pwspn1vudfklecfwfwkuj47322st\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 10\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"979p\",\n      \"createdAt\" : \"2023-11-02T02:35:36.592Z\",\n      \"maximumThroughputUnits\" : 5,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/217082\",\n          \"keyName\" : \"Matt Koch PhD\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"m6k8\",\n      \"serviceBusEndpoint\" : \"r3jhkyijynrlhq027pxa7c6243fubhhppj9i1u5o3zq9qjpks3ch8e2m1m53i9ogio0brv2da0wt1ncs13ypnfo5v7x3phfm0h2nwhem0\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"6683\",\n        \"principalId\" : \"c211\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Illinois\",\n      \"updatedAt\" : \"2022-08-18T02:19:42.593Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"0zb56b7mc49dgjlb3yh7m1ed99b111zwjbx64hvtw0rh7qfdq8lz53ek91gjh75oa385wdk5te4lp1zs8ojvv6aqx542y48o7g33h8e6t1hhtj1uszbz464kl1vff\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2647889e-f8bc-4be6-80d3-e86c58043ca1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.593825Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation"
          }
        }
      }
    }
  }, {
    "id" : "e26c633a-3419-4d88-aaf2-cd17b15e03aa",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... - 202",
    "request" : {
      "urlPath" : "/subscriptions/0zdl/resourceGroups/Mrs.+Matt+Lemke/providers/Microsoft.EventHub/clusters/Dr.+Catherin+Russel/quotaConfiguration/default",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rz0i8oati4xkqpe0jczui105hnj0m7clpfphhc43bducsbqdjpvaj1u0biqhw9e3j71e8xivff27zr8y897l283e"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "e26c633a-3419-4d88-aaf2-cd17b15e03aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.591819Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Configuration_Patch"
        }
      }
    }
  }, {
    "id" : "2c0d60f2-4f77-4c99-9d4d-ea68e1b4023e",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/qndg/resourceGroups/Annis+Mann+IV/providers/Microsoft.EventHub/clusters/Clarence+Greenholt/quotaConfiguration/default",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "dmbl9cy72lbej6drxtav0tecutrxiwhi79p6mgcnmlqfbxwqhtv9wu7mx60nsc5z2zaopzsgadtv70q3ftu2fbrtja4defmi44chugvkf1qmlfjle6zajydf8rndefsjxum3phca1887v3wtboe7va6uspo1rawwfor3fpj7v3ynkq8hiub3zno56hlmh3"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c0d60f2-4f77-4c99-9d4d-ea68e1b4023e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.591364Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Configuration_Patch",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    }
  }, {
    "id" : "315e3b86-af68-4b79-a79f-9b7552a9e006",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/671l/resourceGroups/Leroy+Abernathy/providers/Microsoft.EventHub/clusters/Jeromy+Crooks/quotaConfiguration/default",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "61i4ngzx2tte5ods30bpljp2irhcogserk659nej1ljiy6xssdt2587udj6yoz7y9b8eorgauybf"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "315e3b86-af68-4b79-a79f-9b7552a9e006",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.591059Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Configuration_Patch",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    }
  }, {
    "id" : "895b3152-bd47-4ef7-8943-2328996c6b54",
    "name" : "Get all Event Hubs Cluster settings - a collection of key/value pairs which repr...",
    "request" : {
      "urlPath" : "/subscriptions/r9jg/resourceGroups/Epifania+Harvey/providers/Microsoft.EventHub/clusters/Carol+Ritchie/quotaConfiguration/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8ofpgavwt7oysyt8lhpt8sp4ne3nxnet8n2p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "895b3152-bd47-4ef7-8943-2328996c6b54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.590694Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Configuration_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    }
  }, {
    "id" : "7dfa1079-cec4-45c1-808d-4019366eb71b",
    "name" : "List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster.",
    "request" : {
      "urlPath" : "/subscriptions/j50o/resourceGroups/Rachel+Jacobson/providers/Microsoft.EventHub/clusters/Chi+Hartmann/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "p1u5dv9c20r1fdi2fei"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"id\" : \"l1rk\"\n  }, {\n    \"id\" : \"4192\"\n  }, {\n    \"id\" : \"d38b\"\n  }, {\n    \"id\" : \"b6uh\"\n  }, {\n    \"id\" : \"gr5i\"\n  }, {\n    \"id\" : \"6dni\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dfa1079-cec4-45c1-808d-4019366eb71b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.590423Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_ListNamespaces",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace IDs operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespaceIdContainer"
                }
              }
            },
            "description" : "The response of the List Namespace IDs operation"
          }
        }
      }
    }
  }, {
    "id" : "0410302f-6e81-4e9b-8595-0653f5a18aac",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... - 202",
    "request" : {
      "urlPath" : "/subscriptions/86ug/resourceGroups/Elijah+Blanda+III/providers/Microsoft.EventHub/clusters/Orval+Beahan",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3dw08s0jrgtfsr9t35jefals2vreu53py3s45zhyrcisx3z94oenn5jdazb6f8l675e6ar5u4h6cj6"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "0410302f-6e81-4e9b-8595-0653f5a18aac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.58971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Patch"
        }
      }
    }
  }, {
    "id" : "6c5fc2ab-ddfe-446f-8ca7-ed5d924fb00c",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/020g/resourceGroups/Elton+Mitchell/providers/Microsoft.EventHub/clusters/Dr.+Daphne+Towne",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "51ppht0cwdk2cjy008fljhn0eq1wr41xi9efsx59cwjc6fl7whap770yl4gplb4m5nqwiu6jfda2ucasrlz"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"vx88l579albbl7cqve\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 5\n  },\n  \"properties\" : {\n    \"metricId\" : \"5u4m\",\n    \"created\" : \"bc0r03hrv7d14lihpfhssp9jsbrq2s\",\n    \"updated\" : \"2022-06-12T13:03:01.589253Z\",\n    \"status\" : \"2h8fplduiyo1ovfbgfnq86nb8worfzl2ck06cxq1jabhq2k2j55d4g9sb5q5wqwlptxqyyao8\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c5fc2ab-ddfe-446f-8ca7-ed5d924fb00c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.5895Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Patch",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "e31c1d62-5ac1-49ce-9012-ea4365de1b91",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/43fy/resourceGroups/George+Lemke+II/providers/Microsoft.EventHub/clusters/Dr.+William+Kilback",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "07dmmt90iogtvet71741b2v2jv16xxyxzo5p495zbju7vr1ld4g0mctpca1pcotcqjtmwehcwxq4ma5fv5m7h5ppfim5v43xjirgmpxf1g08bky3tckemy6tfaqqn50r7uhhhthe6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"pfhzqxblk4vkn73f8ubbd3zkrfme140ryuuilsr6ytruyz9p3cvzi0dfqfjjy5zqw8nw52p5tcdk32\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 2\n  },\n  \"properties\" : {\n    \"metricId\" : \"b0n0\",\n    \"created\" : \"ppqmoj7j3dyplig8prhb1wh4235bygkbdx6nawwc2vn0b0czzrxyrelvj867wh43par1lsq61862uudchactb9l0xx70h6khk0t9bl4rsvz7pqxed15kcg8vyzga4pgkmlzvs1\",\n    \"updated\" : \"2022-11-21T13:44:01.588844Z\",\n    \"status\" : \"r9i4ktui5djnypueq0y8qrq5q58r60uly96isaht0v0wu3a2tc2q0lxg19yy3m6s1r3tuv5gwa3wnuhkbgq32x1wc1dfe3l\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e31c1d62-5ac1-49ce-9012-ea4365de1b91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.589113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Patch",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "ebd03cad-c840-4502-ad9a-eab1a699beda",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 204",
    "request" : {
      "urlPath" : "/subscriptions/9o9j/resourceGroups/Blythe+Cartwright+Jr./providers/Microsoft.EventHub/clusters/Ozzie+Runolfsson",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "at09guon9nzvmtuh71iwc9tsw4ude77ntp8mvnfry466bodghi993c22qjejmk3ziob3mxibixhd24q2rkp9wdy8ln0ft3y1d2x5313lx6vyf8dxpyxe8jkzpa7kwl55"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "ebd03cad-c840-4502-ad9a-eab1a699beda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.588704Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    }
  }, {
    "id" : "6b2765a3-684c-4b99-ad67-498b07f36ee8",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 202",
    "request" : {
      "urlPath" : "/subscriptions/4k37/resourceGroups/Theo+Effertz/providers/Microsoft.EventHub/clusters/Fredia+Fadel",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2l1jri6hqss810iimuiiqjdpkmhjirlae95u00x6kupk"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "6b2765a3-684c-4b99-ad67-498b07f36ee8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.58852Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    }
  }, {
    "id" : "60f4d1c2-cc47-4dc4-85c8-ed327129cdb0",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 200",
    "request" : {
      "urlPath" : "/subscriptions/t62u/resourceGroups/Lyn+Wuckert/providers/Microsoft.EventHub/clusters/Therese+Lindgren",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nd0bn45xntjmpbkgy3mgekzjk4oy3cgy5zlqxw1dwed8kxs4dngglhaqj164lljvue4cvfpnqwp197wqdiqdzvz4oefr9hx4e"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "60f4d1c2-cc47-4dc4-85c8-ed327129cdb0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.588335Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    }
  }, {
    "id" : "1b8c2026-3b0e-45ac-9c05-20eae3b1381e",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. - 202",
    "request" : {
      "urlPath" : "/subscriptions/7884/resourceGroups/Lucrecia+Little/providers/Microsoft.EventHub/clusters/Gracia+Bernier",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1l2md5dfo3ktvc4s3cixk4618o0ddrpx0zu3wo0zkt3mcdovhtr63njkzukwyyz1pes01bq6uz9f4uliqq4liysr6eqttxf37g5mnzvfvm7lqqls22dq1dmveeiaoyleiaxfb18f2a5xfxm1dvrsn8pouv650pl3v0eoly354jq1bzyibu2le35"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "1b8c2026-3b0e-45ac-9c05-20eae3b1381e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.588144Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Put"
        }
      }
    }
  }, {
    "id" : "e76c88a8-690b-40a1-bbc3-3a4fe1d81097",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/glru/resourceGroups/Olen+Predovic/providers/Microsoft.EventHub/clusters/Murray+Waters",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y6quv4j74zmm075bq81pxeyar"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"lji140wxr1bgbide8oticszhamktfxjr9uqzrosshjxatul3wf9e9lb8rthu565de385iktomg9iwlym3n94zfdjg5enmoq3sab95xuixs81wo8dmu4ufip\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 2\n  },\n  \"properties\" : {\n    \"metricId\" : \"04p0\",\n    \"created\" : \"a806uh643zz4orhj6jcv0ky4zy9ex3vl7i59jn1s83dctq9eyq8lumsla1c975is5ke876qfonar9k3x3icn4g8khrfhhj9hs0\",\n    \"updated\" : \"2022-10-21T11:24:01.587689Z\",\n    \"status\" : \"equmb6rseaj7neprunws99p8g1pe78fq0mth5d97h\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e76c88a8-690b-40a1-bbc3-3a4fe1d81097",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.587943Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Put",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "25e7a96c-5299-436c-b314-a8ad3df2ead6",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/w268/resourceGroups/Maxine+Johnson+V/providers/Microsoft.EventHub/clusters/Elbert+Considine",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "a4hffjla39vu4kyh87qoee07wnmshkl6j8qbvbasdjn53wpk212yc0rlhcfah3dizy5pc5knqrzadcbid3jny6dy8xqzdzp3ud8jvxcv3fzxhazislw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"ug6c3kdsr111eu0w97j6vi6bkihhu7mfrpgkh7nah0nvgykj1fbub9edaldlp1ksfrv68bqcch\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 17\n  },\n  \"properties\" : {\n    \"metricId\" : \"q9g7\",\n    \"created\" : \"15voed\",\n    \"updated\" : \"2022-11-21T10:58:01.587278Z\",\n    \"status\" : \"waj8r229lxceumjmkbb2tllb2v47m5f1yi73plhtvdx7ysp46i2mojwk6bpn9n98r4s6o8t4197fpaj1ldujyzz10ftnq6bhd55sy6l0p0ipgkkah8kro87ypqoxvojvq42r3e6z92dj6e4a4hwbz6341mpfuw5aqim9xyaot8mrf4oqwpemesoi0ba\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25e7a96c-5299-436c-b314-a8ad3df2ead6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.587551Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Put",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "6b003d84-743b-45bf-83a7-4a133075fa54",
    "name" : "Gets the resource description of the specified Event Hubs Cluster.",
    "request" : {
      "urlPath" : "/subscriptions/5568/resourceGroups/Benedict+Hauck/providers/Microsoft.EventHub/clusters/Asa+Grant",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "o2h8q4qmkwigqt3hjub106tz6an6h7t7omt"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"bxnsae3wclw7tbfz4pimv1e9155o4jj8mr29uso5c3w3tvuhsu9cbh3pit4eb67nmu7ib3x66z8sr5y94hddh8aofhxm1oflvitbg7jbz0292pb6kmkb6ist11m167juea64xpul77v\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 7\n  },\n  \"properties\" : {\n    \"metricId\" : \"99mq\",\n    \"created\" : \"lbb4nha6dovmwl1jm5y4jk1yjud6zjg2y7b9strns5gna5yiwhud1sfyhbusd0rfyjdset2z1uhsy71wb2bf7lfybtw7k76nguud0gxd1kpv89txxow1jrewnqr4mwt4gw99njlm5hxyfvk7svmn6v8ab14izwkrehq7i1yagugcgqkc2nk\",\n    \"updated\" : \"2022-09-23T13:31:01.586818Z\",\n    \"status\" : \"c0vy1t9c0od2o8tvt51\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6b003d84-743b-45bf-83a7-4a133075fa54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.587103Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    }
  }, {
    "id" : "bbedb761-e97d-4dee-b8e4-8a4568eef480",
    "name" : "Lists the available Event Hubs Clusters within an ARM resource group.",
    "request" : {
      "urlPath" : "/subscriptions/0098/resourceGroups/Aracelis+Sanford/providers/Microsoft.EventHub/clusters",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "oqmivcjbrz9vxzaegfzz84bbf5mlheuj7qcms75mx4jpzq0fszvgmxj904khfmrvc5ythynslurvi1q3uul2uzztw5y2zazxlnafp9bqvshydiho"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"2hbn87y8i53aeon0vo8bb6egyqgnle17zut4\",\n    \"sku\" : {\n      \"name\" : \"Dedicated\",\n      \"capacity\" : 8\n    },\n    \"properties\" : {\n      \"metricId\" : \"dq7a\",\n      \"created\" : \"ifcke519v3pmgofixshd5m1owmpclwzapxn81jjlu76fsl4awvy6vw51h12nzfhrhcvnjizxzej816xqvqo40iiob5t7k35nf4y02gtczrlha20il892u0a4p\",\n      \"updated\" : \"2022-05-09T14:17:01.585942Z\",\n      \"status\" : \"vob6d4l7yvf2fl061z7orw0hjyi3ldb7amwf7w3x3ifwhlzwnvakdjbcusxb6oavthmerjf5plbxfazpwkznk3qnk90ppm3fvcjzpxu8f491citaute6yc2y9ah4d60l9ox5uafxzmr3wvbytvzllr6p02\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"fmywyyttxmblq0ixriv4ep9omjb5c7r6by6ww0uzuin4d3p9udz1l0ygg66icry899e3at9eix9ofhl6ps5430p2by0mc1gl62zm9984\",\n    \"sku\" : {\n      \"name\" : \"Dedicated\",\n      \"capacity\" : 17\n    },\n    \"properties\" : {\n      \"metricId\" : \"i84z\",\n      \"created\" : \"f6rh9zf8xe9f40lqxxd1pwo8pr0kheekersi8zj5i70da9d5of827zb8xubmlmcrzbe43xz22c4wea1q4matl2crjuh72c8ebxt5jedz1gxrku275ou9dm2rxrvii0qftxsdx2fcgo1v3u7myfh6tu5dp2lw29\",\n      \"updated\" : \"2022-10-19T12:46:01.586096Z\",\n      \"status\" : \"hgfrzi74omqtjjb4vi1egvzf5kb2bbilxr5qav04r3jhm4ugau3qugbi89u3eewznd1p99xvf402a6hsuzal68tmyma7ctk\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"mb1st4dtsjf8ccju79tuu73l857g8fl98a54cgci8imbv6f52paigbkjabhpgafdc94mr65yis9qaaew8d9klr9799qrbutvxu7jmlsdfsdki2dyi995bnn\",\n    \"sku\" : {\n      \"name\" : \"Dedicated\",\n      \"capacity\" : 23\n    },\n    \"properties\" : {\n      \"metricId\" : \"0347\",\n      \"created\" : \"cm6ly4z79kyvjeg1ow4xz2az6it6gzaurqdbdw1ub7k34bd5o9fnyv\",\n      \"updated\" : \"2022-06-24T12:34:01.586246Z\",\n      \"status\" : \"w4k94n68apv8tdouclxbnqxol6ggl5yw80qg0pr07zytq39yhd0b5lzcal88nn34gtsvu5gxtkwsjn2j9oy28ffjasonc6208ja7jyzns7m48pwr3aazo1\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"cg4ptiv4u906463j8c4g7q86f8vktmwj9qjkwinmhr7dk64rlwqlstd569agusxzvw2sz2pr1l02tiwzgt7s32oxjtmbv\",\n    \"sku\" : {\n      \"name\" : \"Dedicated\",\n      \"capacity\" : 14\n    },\n    \"properties\" : {\n      \"metricId\" : \"b02b\",\n      \"created\" : \"ogtfohnkhvj9fm6wxq5it5h1q2vxlyf2knjlkj39dnpac9vdc5wmywku43rhaey4cx79v8rjrbpi10l8bpamhbmufm0xlkcyusw1unr3nxwrvmoexdv0t71je5m5z7ltx9vjdwadt61z6oj7a9cik76j9dryoxxxxkjiv\",\n      \"updated\" : \"2022-09-23T10:57:01.586397Z\",\n      \"status\" : \"qhl1mny7sqcpz5rs83edr7s0o1jnsoywj0yg9pismq1t74ig74u5u8\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"4p59qqjkpbie775s7nk5hm8j9lyd2s1q41d4v9isvuur9qzb035h0z06kincbyr3if4d15vbs4lmdyk7rve332bzfg10n8sycugb5wavyfbzr6wfh2b5sfjyx2wolgm57u3umng6pdo3kzhl290319gizsvoiblaiw4fce5xncrtrtgr5ue4aplhlfkh4\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbedb761-e97d-4dee-b8e4-8a4568eef480",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.586676Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters."
              },
              "value" : {
                "type" : "array",
                "description" : "The Event Hubs Clusters present in the List Event Hubs operation results.",
                "items" : {
                  "$ref" : "#/components/schemas/Cluster"
                }
              }
            },
            "description" : "The response of the List Event Hubs Clusters operation."
          }
        }
      }
    }
  }, {
    "id" : "a5e413d6-ef5a-4763-af6d-6fdb5dad55aa",
    "name" : "Lists all the available Namespaces within a subscription, irrespective of the re...",
    "request" : {
      "urlPath" : "/subscriptions/6w53/providers/Microsoft.EventHub/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "v2vw3amfcnor6w4tcq7xs1nno6ov9xhlv45l5foo34eoqn693er0cyoucdqaa15l2z0nkx1nyu1nsg42b8u3zarqu847bcznfqkrwxaksnzmtfj9j2opu2bei3r89g8awf56y9vtidvb8l7t1iisk0xvohlj7ho3n04alnbzd5l4qdsgbl3r1zpls0km"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"2zzs7bqzwhm1o93tdvszmzf8f48cxhr8g37v7tniqjbdpyxywnisy3pl1adxa7jbqr7j4bhmcxyt6kcdp8j078c9528unlavfaa4ctnnr44g124ebm0v7f114kfzudo7rcqpmipymjlszhp1upg3bwpf1kmv5slaz6sb9gzpue41k93ybikbjvzgw36ndiayyjn5vtu\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 11\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"16w8\",\n      \"createdAt\" : \"2022-09-16T02:19:35.581Z\",\n      \"maximumThroughputUnits\" : 1,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/262775\",\n          \"keyName\" : \"Ed Haag\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"s22b\",\n      \"serviceBusEndpoint\" : \"ut9z70w98voy58587hstxszelt9vvj9et70eakdgtuxwdyxqbfo8kjheah9y6vp9vm1yu9hpufx9blxbgfyoeww\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"cbfd\",\n        \"principalId\" : \"2016\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Utah\",\n      \"updatedAt\" : \"2023-08-14T19:05:42.581Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"1z1oiojb8j8eh6xy289t5zsq2b4ldkx4lqwmpy5t4\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 6\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"wcwm\",\n      \"createdAt\" : \"2022-03-28T15:08:48.581Z\",\n      \"maximumThroughputUnits\" : 1,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/115784\",\n          \"keyName\" : \"Karena Stoltenberg\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"1a91\",\n      \"serviceBusEndpoint\" : \"7mkmcpu540sjhhnzk9pnp4ae5xhjkzt9di8oxbrptqszha52qkutvqj9p7joojy4e1inehsg5gfmvn1i94bfglydif45cqix0qf5syzqpul8mlb9xhlx0pdxc41wksmnxnqp7fajz575nv3842m\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"4uns\",\n        \"principalId\" : \"0l90\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Nebraska\",\n      \"updatedAt\" : \"2023-08-28T12:06:24.582Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"fk74um241gx656ktlp760pscgb84xh19fgra2f5gcpjz5xnuiv9z2ow9jqiotq3knrbij4uw7wuwvp4bwaolk5fpkd6vea2ldr2m2udor3li7\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 6\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"e0ug\",\n      \"createdAt\" : \"2024-02-24T12:50:40.582Z\",\n      \"maximumThroughputUnits\" : 10,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/079982\",\n          \"keyName\" : \"Wendi Brakus\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"1uo8\",\n      \"serviceBusEndpoint\" : \"9dfw0jkn487t1bwuzowbh5ojnx766cua4tl8p8gf0vbskbki00julb5jzdzbx89efb35wiuvh4gsq5vzuo1q9fj12pmgv62qrppm6q8pgw7a7enybaqduw9qxxhwm4x1qksrbww33tb59aeneccqjo4\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"k3qe\",\n        \"principalId\" : \"1opk\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Vermont\",\n      \"updatedAt\" : \"2022-06-02T11:13:11.582Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"i08yqzaiich5b2ddgw8wtechzupf16c11q9d6rj961newupntnbvvcqxude4n8a1002cbbb96rdbczvimor3184ww82fahx315j62b4zj7c\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 18\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"3l24\",\n      \"createdAt\" : \"2023-03-01T04:34:41.582Z\",\n      \"maximumThroughputUnits\" : 17,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/238151\",\n          \"keyName\" : \"Wendie Strosin Jr.\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"5473\",\n      \"serviceBusEndpoint\" : \"ogaclqrf1kh3b1q5cnfu3bg3k6ylir123fiwtp4zurfjoa003k5lx5akl9qojh0rbpbjdshry0x7mpl0y9f6wiedeoev3yuvq8rrlcm85d5w56ixtgh962x3zuv8uow\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"69p4\",\n        \"principalId\" : \"4496\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Alaska\",\n      \"updatedAt\" : \"2024-01-08T18:04:38.583Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"w3gdr8tsu875l7vcmzjcs2twsvbeccu89qm9xcwk1bdsanbdjcdczwayhsrpg247y6ddppadun8962jve01ym9d26t2s9936sac2ggbegaskhe6jru0etvp1ee9vwx88egcb9pm8zr6jd2uxn0q8m7tg1cbl\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 13\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"0mm8\",\n      \"createdAt\" : \"2022-05-25T03:05:06.583Z\",\n      \"maximumThroughputUnits\" : 11,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/198583\",\n          \"keyName\" : \"Annie Osinski\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"j50m\",\n      \"serviceBusEndpoint\" : \"jfl28wnn7laq2e3modksp9wr7g7swk2x5m795dofbb4gdz0gaup1f4yrtfifevaj3u3oe34\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"r3hn\",\n        \"principalId\" : \"3swp\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"New Jersey\",\n      \"updatedAt\" : \"2022-07-31T22:17:33.583Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"5rwviado262l42vojfh2ai0raxj0qlpoxed6ycx3gdl8ire4l96y5at5ybyzcr6cud7w0kyt92xszonhai9240e6f41smr7c5oks0cn\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 6\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"arpy\",\n      \"createdAt\" : \"2023-07-14T19:16:01.583Z\",\n      \"maximumThroughputUnits\" : 14,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/061027\",\n          \"keyName\" : \"Erin Gleason Jr.\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"8u3b\",\n      \"serviceBusEndpoint\" : \"0d8u1yuhrk2uhbkjsga7immevv2uj4qx2ezjs6vjqc8ur52w0yiv19g2kf6o1nhelf9v5ljfjt7yjmgznyeht0rvalj88j3h\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"5ld8\",\n        \"principalId\" : \"zl8g\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Louisiana\",\n      \"updatedAt\" : \"2022-08-22T08:13:33.584Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"2u8am0uim0e85pk87je4kw09rd7wgc51vsfhb5feempgd5e2sct3lrrpzzdu7fjz6e7qtzkce1nzc3pmvlfz5l36t8zgrp4vo5gdga9lemu51f9uyopydj4gcy1fap7wmpnjpv1gesc2lu96q9dekc8yqffza49z6y6aspd2qxwzy36xj\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 15\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"450k\",\n      \"createdAt\" : \"2022-05-29T00:34:49.584Z\",\n      \"maximumThroughputUnits\" : 11,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/928896\",\n          \"keyName\" : \"Ms. Arla Altenwerth\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"bke8\",\n      \"serviceBusEndpoint\" : \"e90xkdbd46uf12458ueni1s8clbz4k0myi0qna0lmzthfq1m41qcw2srr2pc2l5xco1817ogfh52p5kop308qg28gmn1xo56svwz5vpfr\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"mpc0\",\n        \"principalId\" : \"7l3v\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Ohio\",\n      \"updatedAt\" : \"2022-09-22T21:20:01.585Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"nbhmwfi0gdxla62q5sx1vvein5fz9sx5at6lvvlwmpdgbt9f2add31pq8gb9fkfhidv7gkx5i99ybyzafxfu\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 16\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"2nw1\",\n      \"createdAt\" : \"2024-01-03T07:37:41.585Z\",\n      \"maximumThroughputUnits\" : 13,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/331549\",\n          \"keyName\" : \"Rhett Klocko\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"94c4\",\n      \"serviceBusEndpoint\" : \"mfqqrzj8w8tsqymi7eilg3ngfec4qjl77co51wrae92o7gy3xiseo9k8hvmhijmgzbgulrn96cbz00mpa94w5pfvhuyf0cu9ccv6wyi\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"2zn1\",\n        \"principalId\" : \"dhgo\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Maryland\",\n      \"updatedAt\" : \"2023-06-09T14:28:55.585Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"ddf1phnlfaklv8e0mg3x4r9a20ptf5jafxaw3zsjsmnvsyguqu1q7dtx1grbp10khyv479wpuwiqjtt59wq21ce38s3uicjx1haelavam4j1ote5mhcmrx\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5e413d6-ef5a-4763-af6d-6fdb5dad55aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.585763Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation"
          }
        }
      }
    }
  }, {
    "id" : "4095acbb-1c90-453a-b05f-f70e31fc309d",
    "name" : "List the quantity of available pre-provisioned Event Hubs Clusters, indexed by A...",
    "request" : {
      "urlPath" : "/subscriptions/h32b/providers/Microsoft.EventHub/availableClusterRegions",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "o8t9dbn7wkgx1v2hnabnnp1gx8nuzpcdj0cgc1xi9xwda52p49jp3nmq2"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"zcma1wsoxdu4m7sx8i75k023n5x56cmkwbli4id4fp9amc6thdawnque5khjikwx1g6wjx1fiwg23c49\"\n  }, {\n    \"location\" : \"byqx7jcghdo83nty5vuo5pphhedf2xuv37994k1q1aggvtwlh01stw3mpie9dsibo1mizd17b6jxe8u0gcgck8qwm7nzpskn1sspjynki39lbccxlcnnaet1mzaq\"\n  }, {\n    \"location\" : \"si8pfd2z6yicy3k9hufomi89gs83mb3bwyy8r9edfzvnisfglldm3peju7rnbml8aux2aokcfinhpspcmbewhchgma6o6hl47e61dxdrnx239kjucbrqp8sjnryzbil0aewrykjnv9cj93stikhw1gz\"\n  }, {\n    \"location\" : \"vh48tszif2v5wblalik5met3hp19bkl7wu74qcsljyiho33pia9dq0do9nq87uvuqiqlfmoh46ikp\"\n  }, {\n    \"location\" : \"azo55bao1hwbx5iy7u84k5zipt3kpg85w77g9hapgaqf6bhtepsfy2ui35zsqi1jtbde\"\n  }, {\n    \"location\" : \"12tqafsc78qz833s4fxqzff9b6y3wzhl0pg182p5d94c7iilcz\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4095acbb-1c90-453a-b05f-f70e31fc309d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.581139Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_ListAvailableClusters",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "description" : "The count of readily available and pre-provisioned Event Hubs Clusters per region.",
                "items" : {
                  "$ref" : "#/components/schemas/AvailableCluster"
                }
              }
            },
            "description" : "The response of the List Available Clusters operation."
          }
        }
      }
    }
  }, {
    "id" : "69f31304-1a56-451c-8b67-e1247f0dd89f",
    "name" : "Lists all of the available Event Hub REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.EventHub/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "c6z5mu829eo7kde0jpzi5r40a5apduhqjcxrkxptuwhqo8n1njedpxl1r"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"qym97s3obc3jlz1qx5wlv1rnj8y0ayzl915zu3g5kkt38o1fufbvpmn5skvjuzcw1sglnd8xeop2beexmb418at1p1vgwa09u2l1w3kt2dn2i5yyws1gw4ch5a0319axfvj4wd7ngmztdkrtevgshnkv5xckfb76pthikf91j0t0cdlbdcblzlemdiorocmj8hgu2l\",\n      \"resource\" : \"ivt9kou463l41g1na1by5dctdsqajfv3l4ni276pwg37ps7hy7xktliobuqn0d7s8oqlmdcs6clhwc9vwy9yyy9c8looa44ieusmwh\",\n      \"operation\" : \"3o5rmf2edxzoqnlflae6jd43xl4xbun2j0bnk37xzllxpjpb1kd2m14zo0ux75ayk3i98pac8hdgzp0j8i9a8hz1wqcpg091e5ic2hqaspm90umxr5tlqh914p2lm75i3qbkip44ut2hcd\"\n    },\n    \"name\" : \"Mr. Dante Herman\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"mcl48pg9zr7nbco8s8fmb642tj8kdgmcxiy95f6okd15v061kvhr0fhoheiikf1i3jvq7o7a83d82bo\",\n      \"resource\" : \"cfody8gsvu1gb2vtoc7wt0xzbyyugajia6b5y1j97ufdn\",\n      \"operation\" : \"vpdx1om4iizxwjzns9essgmyqbjyzhxfwjwh4tsecebjoacwsd99bslgscoo24phimz31nztnqy7c6znp7c5skmuh07vgf84018rlt07fs19s0ga98chpi3pe4jugigs3oocwomfhbwis8b4wzhcjznf2316h43x6saiio1\"\n    },\n    \"name\" : \"Jayna Hills\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"vneii9fd4h2ddeklckllh24t01ougqcik1enp5au07aq8618r238giop48h11vo1wsa4v6ws5w89jmetffrw2t5lnox0zp2ca03hg9dqzj3gpzv7izm3uorfpv8m3sqib15\",\n      \"resource\" : \"97w5cc7yidrrp\",\n      \"operation\" : \"ksbuae5dtmns1mazsbh\"\n    },\n    \"name\" : \"Shonna Krajcik\"\n  } ],\n  \"nextLink\" : \"kcefsvrdmkz7thhllnwmcw7uk9fmdsuyzzb8mclirgzodvqhhh6wu3igk1d3g9woxaysuarewypw8fltiua6wpsqm2z6rdgf26l1r154paciw93102h5yzf53qi9yqeoynqdy2r9efe\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69f31304-1a56-451c-8b67-e1247f0dd89f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:01.58082Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    }
  } ]
}