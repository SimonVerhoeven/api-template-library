{
  "mappings" : [ {
    "id" : "fdcc1748-ddaf-4e43-86b5-0db425e219d1",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/uvgs/resourceGroups/Bradly+Hansen+Sr./providers/Microsoft.EventHub/namespaces/Ardelle+Hilpert+PhD/virtualnetworkrules/Adrienne+Feil",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "m9hm400"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "fdcc1748-ddaf-4e43-86b5-0db425e219d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.33398Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "4e630fb2-2047-41fc-9507-6801752c04f5",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/u0rc/resourceGroups/Arron+Smith/providers/Microsoft.EventHub/namespaces/Hortensia+Ebert/virtualnetworkrules/Thanh+Mertz+III",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mdddizv18jll1g2u8e81h0k2p43ylcyb1jshc87uhnvhsx7zezhb8so8w8g2jgn9fr3abolp23h5pmgne0r9a9hx211npnd9h2nix3mu1mlnawgbcuoec7q7m0kwh4gqvkunhl9ygtt51d0ubgasjqgm1wuqm35rdo5yw2ynnn"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "4e630fb2-2047-41fc-9507-6801752c04f5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.333786Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "ff8419b8-9d13-42e5-854f-818b5ea57afd",
    "name" : "Creates or updates an VirtualNetworkRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/k9s6/resourceGroups/Torri+Braun/providers/Microsoft.EventHub/namespaces/Ramiro+Cronin+MD/virtualnetworkrules/Ms.+Hector+Goldner",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "a9koqhjh4w4ejt3u3sueafoth6zha525y8uewubntn72vhugk389lpk60nvojkiqye97j14pf2w29srlsl2htyrvmdbdbbywbn2mz5b9it09pc8t61rqhmrnnogwjuo6kytxkv83i739iff3bp430az7ki1tj"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Manuel Bogan\",\n  \"id\" : \"7ett\",\n  \"type\" : \"h6w91kear3savn48yl1ngig76sqzbf93umedkhn1jwtx0a08taef\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"1jzx\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff8419b8-9d13-42e5-854f-818b5ea57afd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.333561Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "ARM ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "355d545d-efdb-46fe-b690-8bdfa5e01c99",
    "name" : "Gets an VirtualNetworkRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/x987/resourceGroups/Terra+Howe/providers/Microsoft.EventHub/namespaces/Bruno+Mayert/virtualnetworkrules/Elane+Ziemann",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "us8x3a71sdqjy3d7nf02xa5j965sendd1jyzug61glefhkun2cfvag25r72y9a0p6r3nenui0tpbwq89dpf0bdtixd9twka6gqra1ztwyftza2qizvcxgc96k"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Chris Labadie\",\n  \"id\" : \"9zik\",\n  \"type\" : \"f3yuh024mznrrx0k1icmo5ud3h8g5i28wxz5j9jz82fbs8hy95wff0d1ad9f4z8zqpqieq\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"37vq\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "355d545d-efdb-46fe-b690-8bdfa5e01c99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.333145Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "ARM ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "3197ad0f-ec9a-4d12-8974-826750f351c6",
    "name" : "Gets a list of VirtualNetwork rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/f798/resourceGroups/Particia+Stroman+III/providers/Microsoft.EventHub/namespaces/Wilmer+Feil/virtualnetworkrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "grvqe1q0zkhnxnk4lnphvhl5wganm2xqb3768xsh1609enp1g0n7ly32erfekqeavnogz0ijt9cutq0hagfnbknvhw3nurg6cg0xklpv369zfitvbb9nkfafz6z1s61j"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Dr. German Von\",\n    \"id\" : \"l266\",\n    \"type\" : \"jjhnftbvqxrfvwm3ih9s8k3w2d4whvji\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"5qkz\"\n    }\n  }, {\n    \"name\" : \"Sandy Kohler\",\n    \"id\" : \"9r0l\",\n    \"type\" : \"fzhjkgq0obk6vht0hq2e9vtkkl4hff7nqwkyleof1761oahevuibg8\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"n557\"\n    }\n  }, {\n    \"name\" : \"Mrs. Juliane Koss\",\n    \"id\" : \"qe2r\",\n    \"type\" : \"78xh8347ue72s7qpkzhhrkug184y1eys0k0bvg2hwo0wk1ey7s2w7sf06ctq0or8qfo1yk2\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"gyjj\"\n    }\n  }, {\n    \"name\" : \"Monte Waters\",\n    \"id\" : \"01zo\",\n    \"type\" : \"2fqkkt12llwbmdfsqjho1eyvsdte3ivm7dbo3cnja7b2nti5dlmr2sl3u8archtzd0df6lj7qbcv1ckfzz9jk1wwceau8ts6l9d8pb6i\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"0311\"\n    }\n  }, {\n    \"name\" : \"Kelvin Pfannerstill\",\n    \"id\" : \"tw30\",\n    \"type\" : \"ha8j65qb7ujvrasvncrf7mt93e9qcs7tzinv4v46p533mtkapidmeiamtlgclki0l9peaml1gg182j4j4f2lkmbeytusxd6gbbvflnvfk698oj2\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"b2i5\"\n    }\n  }, {\n    \"name\" : \"Elnora Lockman V\",\n    \"id\" : \"k8s0\",\n    \"type\" : \"cbp6osrcd0nl9qxteiyelgfs7dwq23u8x10jidn48e985jujwxqpw9menh5a2sv0ma3sj6pop9jcp0ob2tc65b4z2atuwr1op2\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"950f\"\n    }\n  }, {\n    \"name\" : \"Tomiko Schowalter\",\n    \"id\" : \"jq13\",\n    \"type\" : \"xzn25d7hvhr59ssvi0bha0c76mizngqspmj2s57qec1ln7boy8ymtnw24ve1z7ooak37boyxkgov6n546i7ju8y5rbt8624xmmnhnc3ph1s33db2ltzzpss8vtzm\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"f08g\"\n    }\n  }, {\n    \"name\" : \"Vern Monahan\",\n    \"id\" : \"v1rw\",\n    \"type\" : \"bfsdcgut52rtogxe5ulth4esbf72ajlv1ezlnu23w61bsnqcbysztvijlcgrxzwygrnulqb301m8chpl0tboei0hqiylbdvudaxdzh8tjbmg97t1lp9cq1s4wtc7gwhr7\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"7wpj\"\n    }\n  } ],\n  \"nextLink\" : \"ibocqf3hbdrlxpr465z1nzzk3267is0cy97yag0n3k833n1rav8v95gdfok83mzpbltyjlj1xmswkqzjtl4929a105r9wastxuxb1t5vwhrj0dzozawvbfg2wzbbq5qo4szio9p5yf1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3197ad0f-ec9a-4d12-8974-826750f351c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.332711Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListVirtualNetworkRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of VirtualNetwork Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List VirtualNetwork Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "38e99a15-ead1-473d-886c-8f08a59166a7",
    "name" : "Create or update NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/7pgn/resourceGroups/Sona+Pagac/providers/Microsoft.EventHub/namespaces/Micheal+Abshire/networkRuleSets/default",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hh8b7csaigg7lv6a6ob8y897jvcickmpmwds6lq0zkneahk1xfrc6ng11jp9xskvzhak8vylrhzi3hyw36u5ghy3vv9uo96zr3a"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Moses Quigley\",\n  \"id\" : \"s3hq\",\n  \"type\" : \"pppdsftqz13wqpyjsatcelwan4sst22pych20qsmdysom2i7n1bmnzdoa215g2\",\n  \"properties\" : {\n    \"defaultAction\" : \"Deny\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"mkkmj1dkhegbwrhjt7vdxwep7emrrvu2eal332atlequ4zkeyinaew493kby3dq2kis6l61h7c726oq\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"msthadeuyafcvj19lnszui94crtfm0hae74zcrfrkag76z6g3eixzqbzy7o9cwe68li4m0tetjjq5u296k08yd4ywe0o8555xn5avfrx3x1bg5xnabx8dty6todljnav0sp3q5e5\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"13a55zjm5wodap75ghp3plvwk5e3dvinxlmnk5koz49g593sy9zqyc4c5h1xz64qnzbohqzih9s2c57xp2l5lrhu08ekgj7dcdybi645izm7rkzs9l60tzzjo6\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"rjw5\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"z759\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"79qj\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "38e99a15-ead1-473d-886c-8f08a59166a7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.330959Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "7492413d-3636-44a2-8cf8-aa7393b2890e",
    "name" : "Gets NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/43q1/resourceGroups/Teri+Graham/providers/Microsoft.EventHub/namespaces/Rory+Friesen/networkRuleSets/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "p2q3xx042bfq9vpskc44qdqp9vqcmlon97n0b1usq45lg7ujo4qbjpaijy4gyib8mykcsbdbfnkf3ie2wufhedqsd2hh2v"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Myong Hirthe\",\n  \"id\" : \"6537\",\n  \"type\" : \"m4y88vuw56fjm7bwf3eb77c2av1ro2kxsnf16ur0ja4mzzd7e0u8gfee223uv2ds7os2jgupqlt7paxgfnfmf0rtmns5oyi3zsrzply30depj2wevypfn6seqizf8z7m8v\",\n  \"properties\" : {\n    \"defaultAction\" : \"Deny\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"hqp0gviq45l\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"rsoxryn7in2ty2n8gxafsgywmrzrlnztc33cy0fq02yfdehu1ezwejerxfxeae59ebblepkewvsdj2dt1hfihb5pzuzj3vr5pnvp8554mdr7why7kvhgvga72scq4udtdnkb7nj6y578\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"l598\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"u4n0\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"tm90\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"p7b6\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"3v5z\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"6798\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7492413d-3636-44a2-8cf8-aa7393b2890e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.330276Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "f32c1f4a-42f9-4a61-972b-0490760a0ae5",
    "name" : "Deletes an IpFilterRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/y01v/resourceGroups/Eveline+Ryan/providers/Microsoft.EventHub/namespaces/Derek+Jacobi+Jr./ipfilterrules/Maranda+O%27Reilly",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "svadcr4ypvz121qlbuiuqyxp69tr11rm4w8ff2xkbx2mnle3uykimpwrt3im"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f32c1f4a-42f9-4a61-972b-0490760a0ae5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.329286Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "3b591c7f-52a4-483f-998e-8a9ebb1e091f",
    "name" : "Deletes an IpFilterRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/y5wa/resourceGroups/Damion+Schaefer/providers/Microsoft.EventHub/namespaces/Ryan+Vandervort/ipfilterrules/Ms.+Boyce+Fritsch",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "vuvyesum1lfkvo1j2fq8yavojqjk3f9mjfzdsqfmlmd9f3bjwxq5hm8btc8kjh6esh0ayt61k5x2k98vpl7kvyinytneurww7h8u374vpyh2ilpcm937y2548oxu83ksbdftlif4925a0h4ojzo"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3b591c7f-52a4-483f-998e-8a9ebb1e091f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.329072Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "9f1f42cd-c6f9-4495-b748-1ccdbec1012c",
    "name" : "Creates or updates an IpFilterRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/av41/resourceGroups/Marcel+Batz/providers/Microsoft.EventHub/namespaces/Mr.+Michale+Bashirian/ipfilterrules/Elliot+White+II",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "48hs19zto0lewwevyqqn8ftii60t5ew23l31281qvrckzlhbgnco1egrwvr56ibbmmlym4xatnonaxqj7lw6s5xekylocint72catipbbv5atcpx34xd43s29naomf6461mxjm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Terrilyn Weimann\",\n  \"id\" : \"1145\",\n  \"type\" : \"dzss0pkes47f7fp1ps213214w27llfplvensmtt856jot1srxc4rjnr5wcjvlkaexgd5dclm4ts00ecvqxf9x0fpmpmucuyx39agccphz5xihmd36802u51rcgqhg\",\n  \"properties\" : {\n    \"filterName\" : \"Trent Stokes\",\n    \"ipMask\" : \"kfrcpzwahg6xuf5wv\",\n    \"action\" : \"Accept\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f1f42cd-c6f9-4495-b748-1ccdbec1012c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.328839Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "478c8c94-2a2b-4b0d-8810-81f0c54e3b91",
    "name" : "Gets an IpFilterRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/c32v/resourceGroups/Daren+Rau/providers/Microsoft.EventHub/namespaces/Phillip+Dickinson/ipfilterrules/Keiko+Vandervort",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "5y3nqbmkpuamo9jqpb94c9oacikp83q"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Ariane Cronin\",\n  \"id\" : \"by36\",\n  \"type\" : \"zi35nejc9gc4bv1s4oove5lb0l5rbyp2in24ctsr6qkjfh5ibxmcxk6upsg6y7dvegpc6a1wt8sr6yh8e\",\n  \"properties\" : {\n    \"filterName\" : \"Reuben Hansen\",\n    \"ipMask\" : \"ovythwlpy0lufaz95ksa4q8ybyfrugr6cmu83j2r6kkmhp5sombuqt031j4wn7udvsmv386mya32r1uxkucrcnjrcjzo92ywqj9sslrbitrm2r26msam1o742ehpo871z5nhzu6xuanm\",\n    \"action\" : \"Accept\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "478c8c94-2a2b-4b0d-8810-81f0c54e3b91",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.32837Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_GetIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "682172c5-4674-4092-be49-70633d4ecda5",
    "name" : "Gets a list of IP Filter rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/ug94/resourceGroups/Florence+Jast/providers/Microsoft.EventHub/namespaces/Darrel+Aufderhar/ipfilterrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "qf8vnxkaef9np7r1owf906u4ledwlo3xr80c9ivqrpi8eb10mr10ryw"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Soo Lynch DDS\",\n    \"id\" : \"2eyx\",\n    \"type\" : \"zzyexw7\",\n    \"properties\" : {\n      \"filterName\" : \"Mr. Veda Reichel\",\n      \"ipMask\" : \"gpb620lrftx3svrnj1crsbvwxf\",\n      \"action\" : \"Accept\"\n    }\n  } ],\n  \"nextLink\" : \"radzgffe2rvjkroea67y8k6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "682172c5-4674-4092-be49-70633d4ecda5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.327864Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListIPFilterRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List IpFilter Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/IpFilterRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "ee844169-10fe-4779-a245-44f6c6f112cd",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... - 202",
    "request" : {
      "urlPath" : "/subscriptions/c5ni/resourceGroups/Ava+Harber/providers/Microsoft.EventHub/namespaces/Monserrate+Aufderhar+MD",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6kpznfifzycm99man8hkivrom8slr6uh1fsgwlbr12adqd0it6snc1l5wsgedz"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "ee844169-10fe-4779-a245-44f6c6f112cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.327312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "dc692d6a-7674-43a6-abf3-1f369938d253",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/532i/resourceGroups/Miss+Berta+Heidenreich/providers/Microsoft.EventHub/namespaces/Katharine+Morar",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "phks945dw2kq9lk343v9e0dq7k70ndeb9ezguisnv6tprds37uajnxswa7vdvk0jwvzgvx7x808td7poav5am8pc6hr1932u8xisddrsn3a1hb8r0eor"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"u8q3mdvfa8aqq3zc\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 4\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"6fbs\",\n    \"createdAt\" : \"2022-09-22T04:03:51.326Z\",\n    \"maximumThroughputUnits\" : 11,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/050083\",\n        \"keyName\" : \"Lupe Dach\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"i32k\",\n    \"serviceBusEndpoint\" : \"l3xcbjk0r5ihlrfwximmabulasacv76cegth5k7nkjzyc63cji0p\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"al1z\",\n      \"principalId\" : \"g9cn\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Virginia\",\n    \"updatedAt\" : \"2023-02-10T02:32:25.326Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc692d6a-7674-43a6-abf3-1f369938d253",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.327007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "f056c779-bfb1-4893-ad48-0efa7e6e93fc",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/8g6p/resourceGroups/Deon+Corwin/providers/Microsoft.EventHub/namespaces/Piedad+Dare",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "8a5pkjqk4160qpddurqiomzcbvkjxezs3tv7p97w4y32fj478tlcsuic6d6fi02ukxf1lnuae6ydl6nl6t735jlc58ny4dlskj9fo1yub1fo524abd9ruqcp9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"bnj\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 5\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"9k8v\",\n    \"createdAt\" : \"2023-04-01T13:12:49.325Z\",\n    \"maximumThroughputUnits\" : 7,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/778182\",\n        \"keyName\" : \"Ms. Bianca Purdy\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"u310\",\n    \"serviceBusEndpoint\" : \"en05pynh2dupeoi20ur793rqvtmcs7gh5xkqwnj478ma2yt775opv20\",\n    \"isAutoInflateEnabled\" : false,\n    \"identity\" : {\n      \"tenantId\" : \"79o7\",\n      \"principalId\" : \"9s27\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Georgia\",\n    \"updatedAt\" : \"2022-08-16T11:05:25.325Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f056c779-bfb1-4893-ad48-0efa7e6e93fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.326164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "6d2e20e7-7865-4b01-8cc7-8b2d66554b95",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/i035/resourceGroups/Giovanni+Leannon/providers/Microsoft.EventHub/namespaces/Melodee+Dooley",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "98ak2vb0f8z90gejwlofsa3i9a93e75uu8xy79u09vgabgle3clf3cri703yvxcig4hhn8hsx3ng50kbwn4psig0tnk9oj8q69dgllxmixb4762iv46ddzml2qoacam130dra41owx5dpql79o6o3kddqow3lpmhxr2yy48"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6d2e20e7-7865-4b01-8cc7-8b2d66554b95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.325321Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "8c391b3d-8bdb-47f4-b12a-85620fd4ddba",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/7wy3/resourceGroups/Donnell+Gorczany/providers/Microsoft.EventHub/namespaces/Roy+Morissette+Jr.",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "rq84v5cyjm682i2q061yztti4exkhi9g0ecr4shdrwvgdvv4wcocdu6jfe4k79jg0swttkxhp9idz2rcuymg52r3xrjjnxq0tfxg8ylaw3mst8vyryba86lmysxqgiwk6227h5bvgsbz"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "8c391b3d-8bdb-47f4-b12a-85620fd4ddba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.325151Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "e7a665fd-659f-4df1-9689-049e54d31f9d",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/po77/resourceGroups/Coleman+Rohan/providers/Microsoft.EventHub/namespaces/Fonda+Pollich",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bkj7foo3bf66wqdo2i4j09oil3yh1pqnhksca2"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e7a665fd-659f-4df1-9689-049e54d31f9d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.324979Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "4f9c89ed-e193-4896-a813-d524fafe6974",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... - 202",
    "request" : {
      "urlPath" : "/subscriptions/866i/resourceGroups/Zulma+Bosco/providers/Microsoft.EventHub/namespaces/Dominic+Mante",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wodfx86s0bzqatnta1gr1uouiriyfuggzecn92a4pm55vmysdye7usmsmeml4bv185izp1ndqqvy55m48jog6tbs7cm7ctxp20qudtspwkj"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "4f9c89ed-e193-4896-a813-d524fafe6974",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.32479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "280872de-e81d-4ec5-87a9-d9937028d86e",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/3qv6/resourceGroups/Richie+Ankunding/providers/Microsoft.EventHub/namespaces/Ressie+Brekke",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "a7tdn"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"m6xdfj710v0rpgk79wenkd080vxgyizje51zy5kqcpmp0kw8153xwzuofu8wkpm5phtn9fxc8m\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 7\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"o85k\",\n    \"createdAt\" : \"2023-04-26T08:23:03.323Z\",\n    \"maximumThroughputUnits\" : 3,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/564500\",\n        \"keyName\" : \"Audie Wisoky\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"9b3k\",\n    \"serviceBusEndpoint\" : \"hwhnp4294p7let68e1av4vzzmm4fvn3u5g0qnsguqpo55y1zbc361pbqik45uc5fc3xlornp5ukyh3gf1d\",\n    \"isAutoInflateEnabled\" : false,\n    \"identity\" : {\n      \"tenantId\" : \"6y61\",\n      \"principalId\" : \"896c\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Iowa\",\n    \"updatedAt\" : \"2024-01-17T14:48:11.324Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "280872de-e81d-4ec5-87a9-d9937028d86e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.324602Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "49187964-c54b-40f4-81ed-5a1490a97c35",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/8am4/resourceGroups/Nidia+Labadie/providers/Microsoft.EventHub/namespaces/Stephine+Renner",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0rfaf6z7een9bs26v3lu3s032gktzrn8pn7qpak6136j48rn65tver7k6n7cjnxz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"8uj338e4l7lm5q4sys5hefoq8yalw2v85xo9lq19s51hi8w5n5msub2d57kg5ax0qw5\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 9\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"l9ra\",\n    \"createdAt\" : \"2023-01-17T11:15:58.323Z\",\n    \"maximumThroughputUnits\" : 16,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/568649\",\n        \"keyName\" : \"Kenny Koelpin V\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"05jw\",\n    \"serviceBusEndpoint\" : \"icr75c6pw1mp57m27f4g8c1zvzv5f6q59w3fyb1mi89a1kpzplt7jzkyn1uofc79zhr2cck1o1qh6c1osyaax2g60y9ln6ergrwic9m\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"pv83\",\n      \"principalId\" : \"w66p\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"New Hampshire\",\n    \"updatedAt\" : \"2023-04-01T09:15:59.323Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49187964-c54b-40f4-81ed-5a1490a97c35",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.323806Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "4dd1d69f-6b31-40d9-9fd0-6f6276334bf5",
    "name" : "Gets the description of the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/f949/resourceGroups/Ned+Skiles/providers/Microsoft.EventHub/namespaces/Mrs.+Jenifer+Braun",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3a4fzt87d9ds88p4vd6jjgoi19bjjugplc9"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"dip9m7bkiwnwd7dewsgiezxkzkpfytyti6n0nklnc47drdovwh5rao1d2rqr1fjx6undjvukybdqw4gv8txxpl4z7xr95d33hbwob723c225be5zyw8bs5g1avkv00euztieto31dc\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 12\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"7793\",\n    \"createdAt\" : \"2023-09-11T01:14:57.322Z\",\n    \"maximumThroughputUnits\" : 5,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/814879\",\n        \"keyName\" : \"Barrett Simonis I\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"10o3\",\n    \"serviceBusEndpoint\" : \"gp6vd09ps5owhxzg3y9z50bno0fwocjtlq6lhkzn512z62s4c12mqrdt8plc543lrt16asv5uqs1h7wsp67h60iv1r79q3nm0cj1njz5xnluywx7uk1dpa6mwoo\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"1kri\",\n      \"principalId\" : \"qj89\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"New Hampshire\",\n    \"updatedAt\" : \"2023-10-04T05:07:44.322Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4dd1d69f-6b31-40d9-9fd0-6f6276334bf5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.323005Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "7a8ef45e-2f29-4f88-b5ae-03cb29e32680",
    "name" : "Gets the description of the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/bhxs/resourceGroups/Stephane+Rau+PhD/providers/Microsoft.EventHub/namespaces/Dana+Nolan",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "l1qja8jc79mpmkdubs1f5y1r9mj1cozys0e900bp0rx5hb066fe5dn2suegkp7ocg0tdrsy6va3nenfb8p3j8f323exajxi59ld2fjfavwt8dclx1q0o279awyf9wh5tm3nkceujybp6e5v70"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"hhm6d1i3ufgghdpl293d6exbhaf6l1ufytxmz378rid79f9nm1hac65cl83tab2nazmcjqs5nrqa16drey7qn53v6f6dhwfnswbop6on68vcbnp0y33o67y1j7uet6sjfuvbuzjyj9g6deikmkvtazf25kt56nezobhsxs2mnstr2qgh\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 13\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"4zg6\",\n    \"createdAt\" : \"2023-06-30T20:14:27.321Z\",\n    \"maximumThroughputUnits\" : 15,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/342109\",\n        \"keyName\" : \"Omer VonRueden\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"0z07\",\n    \"serviceBusEndpoint\" : \"o51llye3d21uqanpi4mnkgs7qcbbxv19jgvbve39cq8xr73vz93njwmdn82r5f7lj73ahrxo4qcrur7bnj97dov5bmb8koktfy4b47diiyj0j29von8m1bt3fmimbyf06kn6r4q\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"6wb1\",\n      \"principalId\" : \"4tgl\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Mississippi\",\n    \"updatedAt\" : \"2022-12-27T01:01:22.321Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a8ef45e-2f29-4f88-b5ae-03cb29e32680",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.322202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "8b76375e-af1c-4172-a77f-9feec3ca3c03",
    "name" : "Lists the available Namespaces within a resource group.",
    "request" : {
      "urlPath" : "/subscriptions/18z5/resourceGroups/Frankie+Kshlerin/providers/Microsoft.EventHub/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "88j8y5tao2uejybiywdzlxwx79ufb6zfvxoc4cs6x977m0238a4fgu9sa6o66nm0qiia9jod31vdtgiplresl"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"7jqvc4xhapkda0te3twzsh0t0b9sl991455cr5bzdrv0c1j5k1ye04hh1bt8jpdq5o90pc39xq2e1lh1r8w4lbykhg536x7\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 1\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"i371\",\n      \"createdAt\" : \"2023-11-24T14:37:22.317Z\",\n      \"maximumThroughputUnits\" : 18,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/937767\",\n          \"keyName\" : \"Penni Jacobi\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"6iv2\",\n      \"serviceBusEndpoint\" : \"yfx3ywfy4rylyquhab3lpvdlgbsd12wdjksa7lqkr32qpfscl3xf4mxp13vgqsb0\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"vg6w\",\n        \"principalId\" : \"sn37\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Mississippi\",\n      \"updatedAt\" : \"2022-06-05T19:21:03.317Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"oiw6kh1o9neov9jebyozb87s5ag8s\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 2\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"7z10\",\n      \"createdAt\" : \"2022-06-22T04:25:23.318Z\",\n      \"maximumThroughputUnits\" : 13,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/447213\",\n          \"keyName\" : \"Dr. Connie Blick\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"58zu\",\n      \"serviceBusEndpoint\" : \"tc9m0ff2ronxptg90mto7fxr7yeidwlv3w4arbcyh0yifcuqcecoiljwdq7ox97m89g4qwxtfej6bld8c5m1o2f2oj5n2znrg75s8u1bh1btq44t9zvldmhcibnvgtatzqnm2qlfqvw37xwpjvva2i8jh614a3gdx9yxzfl20ug8j\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"1501\",\n        \"principalId\" : \"9pie\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Maine\",\n      \"updatedAt\" : \"2023-01-07T18:21:48.318Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"rccsrw8inbij7gkr0mgoh3xtpp8raubalkfqiv4x1fdizvfaj4qaka74b16l7oty9gqqf3\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 10\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"ts0q\",\n      \"createdAt\" : \"2022-06-01T06:11:03.318Z\",\n      \"maximumThroughputUnits\" : 17,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/955432\",\n          \"keyName\" : \"Franklyn Kovacek\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"25ht\",\n      \"serviceBusEndpoint\" : \"9ybg4g8btx5oijsofai09yrh1236s34koi4bynf80f7vz58c19b60pmovednqrtxidxtsrwb2lmfotq6s1hapkcgqjef7o9ivbbz1i84cjp4h4t80a2ubf57sfqp6e5xu9cf9imr6xa1nli48ldc298ar9klgs8otxtc0v3bkc021hdj9c\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"2vy5\",\n        \"principalId\" : \"6lev\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Wisconsin\",\n      \"updatedAt\" : \"2022-05-02T20:55:59.318Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"6onv2e\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 17\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"qamg\",\n      \"createdAt\" : \"2022-05-26T12:58:59.319Z\",\n      \"maximumThroughputUnits\" : 1,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/028049\",\n          \"keyName\" : \"Howard Parisian II\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"tjrg\",\n      \"serviceBusEndpoint\" : \"frj3yc1eq1664ttud3u990cbikptwzpanq0xx7loj64su92o3n8092633ur82vvi8zwzvyivta22d22forna6agt4in3fym56r8hg3\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"he13\",\n        \"principalId\" : \"29fg\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Alaska\",\n      \"updatedAt\" : \"2023-10-01T08:58:17.319Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"rws8e6vjtn082dnrxur1pue5meb1vjgk\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 5\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"ms8u\",\n      \"createdAt\" : \"2023-08-03T15:55:26.319Z\",\n      \"maximumThroughputUnits\" : 11,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/835563\",\n          \"keyName\" : \"Greg Marquardt\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"1jm9\",\n      \"serviceBusEndpoint\" : \"u90s0zcdpfr6gocdcr2vtkkoyx8vswfymk6fjw9dwwsevh7tbf4nrtkf16fkzr144u6aquiowhx7jfq534zmntyvfvz0pmhz6i4ic5pmotibg0s9rxls80kc2jl75tnhblsjp9nk08\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"53i1\",\n        \"principalId\" : \"9re5\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"South Carolina\",\n      \"updatedAt\" : \"2024-01-30T16:03:33.32Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"rbg1pnxuup2e2wsz7o6b93m335lg9zsm6ojwjsqp5ebphl43jwmniyjlpaxkt4vibshluw43gkbvibijatqf80q8dtu68jhrq3p\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 10\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"6206\",\n      \"createdAt\" : \"2023-03-22T13:54:12.32Z\",\n      \"maximumThroughputUnits\" : 15,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/078529\",\n          \"keyName\" : \"Cassaundra McClure III\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"39s7\",\n      \"serviceBusEndpoint\" : \"6v645q2srub41ll6gey6axe0xnkmt4prgcbykutlc8q6f9f7i8fmltqceeiahcmvku4tbarkhfqx7ax78tx5ybrm792jh3lvibptfbvsou03ksi5njuelfkxxyd306e4pf7er4fx2ua3asjtpntvru2rxv0rb\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"f7hq\",\n        \"principalId\" : \"f030\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Ohio\",\n      \"updatedAt\" : \"2022-08-02T05:51:06.32Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"zxrz8kxjd7tgsosfukzs6dvc98b7vc8kvdlqveolzcpepz3wjfxj2l8bmy26mtyvy5kiolv2hvkf5k29xebqdx\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 19\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"zhqf\",\n      \"createdAt\" : \"2023-08-31T22:53:03.32Z\",\n      \"maximumThroughputUnits\" : 11,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/718056\",\n          \"keyName\" : \"Ivory Marks DDS\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"1381\",\n      \"serviceBusEndpoint\" : \"o7tlre6zp1oj199wxf6sfyuwejsztafpy8kutsmmsg95fsr5p2n0drxk32ktj3xndmcww1w1dshdvwp7k8g2qe0vod9ny3sed17kc6pkjas31dr6ta2cfy87tc3edqpppdc5ab9fz7ynq7vuhajprg11uf2x937vemf8t3rltyve5l0389\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"y8v5\",\n        \"principalId\" : \"1jfl\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Connecticut\",\n      \"updatedAt\" : \"2023-01-26T01:28:10.321Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"gwyeg5p19y1y6bpjq8vnthtfhw0fc03zev1qg0m1tq0958ejk56582giv8z48kouhpqw40dzbrvm4c1jtd6zo2rt5nzmno2653dky\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b76375e-af1c-4172-a77f-9feec3ca3c03",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.321311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "fc1cf0e3-029d-4343-8194-6c3c3071a939",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... - 202",
    "request" : {
      "urlPath" : "/subscriptions/t2na/resourceGroups/Dr.+Monserrate+Rippin/providers/Microsoft.EventHub/clusters/Mrs.+Shana+Donnelly/quotaConfiguration/default",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "30as248l5dmzb02zyzuvyihc1kv8ms8m9526n0uljcwlw1vdf6qlpkylrsy0eo8oi8gpycazl344wqaf8pew53eal9wrsc9z4kqy0srbx7j88odgdnlx2tmn9q45jmnf01ukk0qu5ewkkvm4uxn8j4pki4f1kn"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "fc1cf0e3-029d-4343-8194-6c3c3071a939",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.317294Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Configuration_Patch"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "4d78396e-b437-4421-852c-48a3d408a555",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/4454/resourceGroups/Jaimie+Murazik/providers/Microsoft.EventHub/clusters/Rodolfo+Jacobson/quotaConfiguration/default",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "j8q8yv3t043lo2kjn66cqsuppzbn9ce99lujq9uh80zgtlb3sogjimhbj4iqks8nugevvdyvsnz5j33pe5y9l9o56yoy4xx1icgol3wmslcsobn91iaucrp2nso0rzroly6idm"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d78396e-b437-4421-852c-48a3d408a555",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.317112Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Configuration_Patch",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "155c9d5a-bd70-4c20-b2b5-421de98a123b",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/sd6w/resourceGroups/Mr.+Cristopher+Glover/providers/Microsoft.EventHub/clusters/Calista+Baumbach/quotaConfiguration/default",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1ruq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "155c9d5a-bd70-4c20-b2b5-421de98a123b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.316908Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Configuration_Patch",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "04e573f3-419d-44bd-96b7-251d88400c4d",
    "name" : "Get all Event Hubs Cluster settings - a collection of key/value pairs which repr...",
    "request" : {
      "urlPath" : "/subscriptions/y720/resourceGroups/Wanita+Nolan/providers/Microsoft.EventHub/clusters/Ms.+Columbus+Ullrich/quotaConfiguration/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "i7qrvjn7gwxbj0npw5zwwdqrgesu"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04e573f3-419d-44bd-96b7-251d88400c4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.316699Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Configuration_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "0f13923e-1381-41e6-85ad-fa00e7c43fc7",
    "name" : "List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster.",
    "request" : {
      "urlPath" : "/subscriptions/sfmf/resourceGroups/Mrs.+Louie+Gibson/providers/Microsoft.EventHub/clusters/Jana+Lueilwitz+II/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kbuppqar0nvqtne22nqic583ff5wc0ra5ohxgz6dxxd72po9u0j6px1yew4jrky4je0r0c7hn6bd94gwvlt9hsfm"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"id\" : \"vw94\"\n  }, {\n    \"id\" : \"3u36\"\n  }, {\n    \"id\" : \"56vw\"\n  }, {\n    \"id\" : \"1d90\"\n  }, {\n    \"id\" : \"vmvt\"\n  }, {\n    \"id\" : \"01x5\"\n  }, {\n    \"id\" : \"90z1\"\n  }, {\n    \"id\" : \"r872\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0f13923e-1381-41e6-85ad-fa00e7c43fc7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.316447Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_ListNamespaces",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace IDs operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespaceIdContainer"
                }
              }
            },
            "description" : "The response of the List Namespace IDs operation"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "b4d03532-9f1f-4d2c-95b4-11eec5b7f084",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... - 202",
    "request" : {
      "urlPath" : "/subscriptions/7v9l/resourceGroups/Mrs.+Stefanie+McGlynn/providers/Microsoft.EventHub/clusters/Ms.+Betsy+Larkin",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ctwfz6a4r7erc24ibata2npoj4glyk15w2mq2rrlczrib74xeikwcxwdj9las"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "b4d03532-9f1f-4d2c-95b4-11eec5b7f084",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.315661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Patch"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "76a4da3f-6bd0-4817-8722-cfd363aaea5a",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/o194/resourceGroups/Augustus+Champlin+DDS/providers/Microsoft.EventHub/clusters/Broderick+Beatty",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "hzgh8m2ie58zxcv04ifzs51yvsug1b6yup8za9qxnnd7khdov2zm101xnc4m5e2xb5erk5vtmkgyd4fjgsv1ph9nmgjrsmmw9hp33d2yvibh81bojuj6469tobhyvmoovq51e7otwqn0s1nfxxm7qmduq7l2226cp342n63ib33fy2u5o48xqdtf7ott5qmlf64usu"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"dl33xypbrexo3fnxxtnseec5hg042rbrxxpkgcb46wa54j7um5ut34iifdvc9x38xf36of9jjogozn7b2yghrcag0is6p6uj2r10xqw120yk4e2\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 14\n  },\n  \"properties\" : {\n    \"metricId\" : \"6bf7\",\n    \"created\" : \"pew2wh2s4lg7a4k203r0a9ni6utah7yrot70ibkd8qphnnxi60scfp5\",\n    \"updated\" : \"2022-06-12T11:51:27.315221Z\",\n    \"status\" : \"fqe6zogatcia6pzrd7l2mpljuhcj25n0aohellwb6sw21yww74ykx1hhdllvs5g28sk3c96e74qmirhkr\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "76a4da3f-6bd0-4817-8722-cfd363aaea5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.315475Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Patch",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "becdfc64-e616-4d1f-89ae-6a64a38fccb2",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/7pih/resourceGroups/Miss+Woodrow+Trantow/providers/Microsoft.EventHub/clusters/Noreen+Torp",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "6f2mjdnvay8ehtnk7xnonwy0miedmoexr4aiq78"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"51tmutn3ndpxuda72a2td0naoiidics2su4uobv09draszi491jncfffjrpjso5mtkfg43wm6een8k0gs752qe63mqc83zpv3zq1uumtt9i4u90t\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 26\n  },\n  \"properties\" : {\n    \"metricId\" : \"005r\",\n    \"created\" : \"i4qsu6kch3j107m81nkz2w0we955q5sbz9bi8w9f3ubdtuo2gp0x4vgo52lot5ena22v7dv9wtasvynff5wvtblduo0xkp4762c3fm6ux0l77iww6pwtct2jj133anem54wcvmua0b2d97b9e3l7ikuum0clcb7qieq8kl2kbywisgg6xqitn91du\",\n    \"updated\" : \"2023-02-26T10:41:27.314823Z\",\n    \"status\" : \"tsl0eclxvhwwm80br2j5fz2nsy0v1ellijpbex5l1p4fhq3nhc\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "becdfc64-e616-4d1f-89ae-6a64a38fccb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.315081Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Patch",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "64dc4550-df2b-43de-a027-06dac599bdac",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 204",
    "request" : {
      "urlPath" : "/subscriptions/r177/resourceGroups/Mrs.+Faith+Klocko/providers/Microsoft.EventHub/clusters/Ms.+Oren+Hintz",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "c9416byo"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "64dc4550-df2b-43de-a027-06dac599bdac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.314678Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "48e49075-65a2-4f59-861a-3948cf7a1956",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 202",
    "request" : {
      "urlPath" : "/subscriptions/c1kk/resourceGroups/Magen+Welch/providers/Microsoft.EventHub/clusters/Kieth+Cummings",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "h5zj9maezamtshm1r3iz8j60chtomu3y9l03migsl29nvijzhfrcqrahwtycdnkw8x1ad2n6f3zi5wyp9wxmalu0xcwenzngqols94hw19vtug50zbhl7uqdpqx6jzqr7wp27xtxzwiopuiglwi6jdnc2spdv7qtb7sni"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "48e49075-65a2-4f59-861a-3948cf7a1956",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.314502Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "74feacc5-36b9-433c-bd12-0ee708ecac8a",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 200",
    "request" : {
      "urlPath" : "/subscriptions/66h4/resourceGroups/Heath+Zulauf/providers/Microsoft.EventHub/clusters/Nia+Stroman",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "g9op82x8297vycmwyvapqkzxwqcvi3b8u1l"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "74feacc5-36b9-433c-bd12-0ee708ecac8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.314317Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "b34e9b14-07c8-41ab-9e9e-470e328990ad",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. - 202",
    "request" : {
      "urlPath" : "/subscriptions/5xb9/resourceGroups/Lynnette+Goodwin/providers/Microsoft.EventHub/clusters/Mrs.+Stefania+Welch",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4weub6suvp4yqswg2dqapja5u6s82f879t36dyfmqszebjkooo7nlo9g029l0w9aahx4gp9hx"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "b34e9b14-07c8-41ab-9e9e-470e328990ad",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.314126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Put"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "2b1cded5-4dac-4bd8-87c1-79424550194e",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/0h1r/resourceGroups/Mrs.+Charlie+Kuhlman/providers/Microsoft.EventHub/clusters/Aubrey+Upton",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "zip66ugoionxtykn5elqv1e2ekqnaid5dogyk6mxj87cexp23jyvxg5xk25e03bglzwdcm63b5azid4jm1fikujxzwnbsndtbvmk6ekcqlebqrm"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"ntq5ltblm55\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 21\n  },\n  \"properties\" : {\n    \"metricId\" : \"865c\",\n    \"created\" : \"o63z0om71phxbnxrqb9jlk5nqlqn7qeibuz4e2b8jaaas6re0jadlk7wx307b9d2aj9j90etv0i\",\n    \"updated\" : \"2022-12-22T11:29:27.313661Z\",\n    \"status\" : \"0450541svmogf7atbk7jbd9ckdj64ul7ynt7i730m6ab6ic2mmwiybzqd4gvj9pzyyo1dleac9723ibydui7sq35gi31mbs5p7hx7rm3x9o0tace8e7blzf1ptfkhfkoh\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2b1cded5-4dac-4bd8-87c1-79424550194e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.313932Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Put",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "114a0b8a-99ec-45be-acca-6cc5b2cc5eef",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/jdxk/resourceGroups/Cinthia+Cruickshank/providers/Microsoft.EventHub/clusters/Myra+Beahan",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "mib5taogrtt8czbvj646paugju1m5son1rsoy6wpjq0oz4t4udjjm7v0dglvcsmflo1rpunegfhsbr4t0ht4hae6jqs75iee600g42uujtgoiur6t25a4"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"6yybsh59qzqqm1jpb8kcniem3suosfh98uecerldh0fdnq8unpll8e0edot3bmngqvznoel37imiixfi4o8bpd4ndlczb6zzbp6w8qp0qtnazuqm6hb09r1tzh8hn6l5\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 5\n  },\n  \"properties\" : {\n    \"metricId\" : \"7a32\",\n    \"created\" : \"32bgyghznkg69g3hn7cd7cecyvd2vcpxvbkhvfznez43h71w0\",\n    \"updated\" : \"2022-08-20T10:01:27.313117Z\",\n    \"status\" : \"poecj9ywytx1hqejojrs1jg5pgxpy3y1ehimuqfv8mn0bh7mu\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "114a0b8a-99ec-45be-acca-6cc5b2cc5eef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.313493Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Put",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "1b46747a-e38f-449c-9fa0-4ccd1a78efb4",
    "name" : "Gets the resource description of the specified Event Hubs Cluster.",
    "request" : {
      "urlPath" : "/subscriptions/483q/resourceGroups/Naoma+Daugherty/providers/Microsoft.EventHub/clusters/Darci+Stehr+PhD",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "jkj4mh1sz5t0m0hrfv17kjeoi39p4x1l844tcl61xlvs2rvorb171iphb53r0hkug1s1apbvqqmt3ud4o2q0tjduz63wkke"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"mf2gp3me0kluanz6rg4g8os2r7zjkvma7c29q0erz35rnveph9k0q4w6e7l7m7c8kbu5br4r4lqsq60gb21p7btb2b6denb93bmbsgoqfc48x40kwys1t2556gd5pjz03s9gtzvkx3q4ttl7w943alqwj9syzx4l9fwbefrpxfx8q4\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 28\n  },\n  \"properties\" : {\n    \"metricId\" : \"770b\",\n    \"created\" : \"m9u6ezyf8vz1jt8cmx2pp6pl56otlxnld50sr3v5a1xe3vgqkjotf5e8w8mqzpon8h369ud2mj8fk57s075jpkbkxdfictty3q75brx22j1rfu4q79q\",\n    \"updated\" : \"2023-02-06T10:24:27.312649Z\",\n    \"status\" : \"4ao0xdt77z5bmcpkarln4k1835kvifxsufmuyvacvkognfikul8dv6xetupqpv5c57kxj7roc4zitigz0r1x0rcg6rcckq9ggoqg\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b46747a-e38f-449c-9fa0-4ccd1a78efb4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.312955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "499484e4-1146-4f6c-a448-361de6de0082",
    "name" : "Lists the available Event Hubs Clusters within an ARM resource group.",
    "request" : {
      "urlPath" : "/subscriptions/u9z3/resourceGroups/Latasha+Gorczany/providers/Microsoft.EventHub/clusters",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3jio2b4a9llkdav88z6xnhvrw6v9zl8xd84p9rhlnit6ib5f66lzvypdtkb01g6zo9amjudf7jqfodxm6msu4lp8hpspovjvv1h10yth50uhjlxl63lenui16hgn"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"phprni0iqawf80esmqxozr438qw3gxdvfswdiqesyr7x4gli1o82a8vgt5m6z7phhq0nqhoyn2h8oo6dfm3kit6ngp2q4q0ynln3eqzbxszbfcklmjuwe37zmeudme295xwr75jvktfmxaw5jgmp2hqpbwctyoxn\",\n    \"sku\" : {\n      \"name\" : \"Dedicated\",\n      \"capacity\" : 25\n    },\n    \"properties\" : {\n      \"metricId\" : \"0zj0\",\n      \"created\" : \"89l66agutw0wgoraneh4zmosc7pqhh97c1vqs1a4lfzl7exw04hl8x47r1shugoy221cedyqf4ievsi2c\",\n      \"updated\" : \"2022-12-09T10:10:27.311942Z\",\n      \"status\" : \"t8iaobfcwy0p1ilajer0hccaui6huy2yv9lexbvvzhoj2dgslrefyianr9tb8zqgymeceg4rctfwea9yp2vdca7o1fig44yup8b4elq1zzes3s52kwgjqe3k5lwjeduy1u2t04xe7ehqj8vi1r2dmgzply426a3q14vva32sw6cbryn81\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"3uvsscr0tbek9gjxpbaz7f4be0guafdhecw9b6uivtn0ypu6285imov6y\",\n    \"sku\" : {\n      \"name\" : \"Dedicated\",\n      \"capacity\" : 5\n    },\n    \"properties\" : {\n      \"metricId\" : \"072z\",\n      \"created\" : \"esr09lepg10mvpm2sv40ugh73tquolz53yqakidhl9cj3u7hdei104rh2gia4z\",\n      \"updated\" : \"2022-05-09T12:16:27.312105Z\",\n      \"status\" : \"v9tvxk2cq1snf7suyxf45vc6gm6f12o3u3t8sc2hqdz8euleyuzn0e4eu721wsalosa1c4oisg8yn8lwkjiqqklyheu84a5cj7xtdykxovgoecc0wx9ffad5ymatzhxvh0xrfwupwhupnyej7zgtz7i4jo332g2uhpj1qcyzi3ju938wsnir9z2yjzxcdmcm04iltl8u\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"k1j7p1t3agpsl6w1uava54832np82jbji3icg8nbp7wlntppcc6axg8fa41ipcgqqinrh8rwk0rtwfdzgb6q12likwqpmt18dcq9lryietkpm1hzbl5aa0mbjkwylwsqumbhkdmskvjjg\",\n    \"sku\" : {\n      \"name\" : \"Dedicated\",\n      \"capacity\" : 27\n    },\n    \"properties\" : {\n      \"metricId\" : \"bty8\",\n      \"created\" : \"60xw9ezkj2nmjyzgchtl3p2yh5ylh1ns7xsrct71uo091fqxkmc41ysxvhvgqj0xm24w9uo8k8z4hs686px0iwospdogz41zt0f0w7egv9er35xxsegxzrsuzh7eo36\",\n      \"updated\" : \"2022-06-29T09:30:27.31226Z\",\n      \"status\" : \"xebyda0ksv0fdkd8xa5\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"ukcxkitqzks1nbq5qc7z2nngskda9pk0ynxg1ko\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "499484e4-1146-4f6c-a448-361de6de0082",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.312508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters."
              },
              "value" : {
                "type" : "array",
                "description" : "The Event Hubs Clusters present in the List Event Hubs operation results.",
                "items" : {
                  "$ref" : "#/components/schemas/Cluster"
                }
              }
            },
            "description" : "The response of the List Event Hubs Clusters operation."
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "812eef14-25ae-4e44-a7f4-dacc594266a0",
    "name" : "Lists all the available Namespaces within a subscription, irrespective of the re...",
    "request" : {
      "urlPath" : "/subscriptions/qrab/providers/Microsoft.EventHub/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4ple6f41x8nbxyx5ldjnfz3n6nhz1sadccxxj1xw73g0y313z1kait8zqpkrwnjue9l86zm2rwl21e79scjfpyik3jdpwa6h0cokta3rtlvibay68n4quc79zndb"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"fuhhwb3fscfi6ggbfkonpwmrr8c9ssw5c23oukf48jqo199fqk5514xyrfs249fruj5mu87mu2um13mcs25rvqizk9duc5t7ou4y2dyaezsfkbgdg1g6ey\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 19\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"z73s\",\n      \"createdAt\" : \"2022-12-22T13:38:52.307Z\",\n      \"maximumThroughputUnits\" : 1,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/998856\",\n          \"keyName\" : \"Clark Swaniawski\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"6k0n\",\n      \"serviceBusEndpoint\" : \"u8uvci25o8kb9hwtu0k90ozskzfpxx1g\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"6h66\",\n        \"principalId\" : \"rna4\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Wisconsin\",\n      \"updatedAt\" : \"2022-11-20T23:37:09.307Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"uvi68ajpcr54ck6uqi2p1rc1ia7dz14icl3gtygovy54jf5\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 11\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"wkwt\",\n      \"createdAt\" : \"2022-12-08T02:17:20.307Z\",\n      \"maximumThroughputUnits\" : 10,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/992945\",\n          \"keyName\" : \"Angie Will\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"72i0\",\n      \"serviceBusEndpoint\" : \"cg8525h1oeguvnzqpx52zdnnyo039dz5qo4wrqga5zly00o3h3pczg2qxiv5eauvpc2upl5t8ad33jq8sna8ofmq\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"sq93\",\n        \"principalId\" : \"pqi6\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Vermont\",\n      \"updatedAt\" : \"2022-09-22T22:33:50.308Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"9vkcht58sfhu8nh8vqqfnhz13g5saal41zvn5dmiry7htrboe5u9muq5w3q6d9oj1jtw09sik247jt4zx7uume5i9l5dhnjc279iry7gugl0g0jptuoz40qepvt0o1y1jn42g7c0dfyq1ywrsoxr2en3013kk\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 1\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"8cf0\",\n      \"createdAt\" : \"2023-12-19T01:52:49.308Z\",\n      \"maximumThroughputUnits\" : 10,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/715296\",\n          \"keyName\" : \"Arlie Hegmann II\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"3l94\",\n      \"serviceBusEndpoint\" : \"uggg07pzxti4fa2av8pj7n5txeahu00ibanc7wb9r5quvxr3bo8g6v0rjjbjtn44p1micaqwqx92v9ye8yzsbrp9gfqyvyfvbcfmk83iinck73b98vzoopaot3qx7xr3in7nnztm0u\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"a7fm\",\n        \"principalId\" : \"3j29\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Alaska\",\n      \"updatedAt\" : \"2023-04-15T11:47:43.308Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"vbueot4b5a7fwm4cjxx1ssinyr72522q69htfyxmapqj9kng11adcphqifo9cef5\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 3\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"gk5p\",\n      \"createdAt\" : \"2023-06-24T09:35:32.308Z\",\n      \"maximumThroughputUnits\" : 16,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/940342\",\n          \"keyName\" : \"Mike Mante\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"x6m9\",\n      \"serviceBusEndpoint\" : \"iql3cvs1ye3lsxb9sssy2jmta587p1f9l4bqcblxgm5qxy9o8ov1js7smp8kgu4dgyofn5rzbscgjsq3e6j2um9d021vqxv2uqcov3juz4mdmqczdosw35xvey10z7tgvqroyhvzj6832w6j2gha6yqge66sv49yowsnaii5ru51vbhdcso7f4klgjq16uj5dio\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"bhyi\",\n        \"principalId\" : \"0unr\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Louisiana\",\n      \"updatedAt\" : \"2023-02-08T07:47:46.309Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"oc4ij43f5p296gmzrjx9hp727djqifkuuxyw111w8979ybrl8rup7gblh681f3jx53bj8rfyk7tilkh7sidfk\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 1\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"381x\",\n      \"createdAt\" : \"2023-02-16T17:50:17.309Z\",\n      \"maximumThroughputUnits\" : 10,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/361931\",\n          \"keyName\" : \"Johana Shields\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"5rxc\",\n      \"serviceBusEndpoint\" : \"p5x29x0fxpvdtgoqoxwp2yu6t81vjysv6g\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"0g1x\",\n        \"principalId\" : \"o24f\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Rhode Island\",\n      \"updatedAt\" : \"2022-08-18T08:19:13.309Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"aixfb0pll56jqfjiwnznkb2bd2xndeq6m9bnnxily3ytmnqn273g4lxcs7adteb26rwezf7ob1v3eme2k4cnp4edsfnhecgqg0y5anh44r4p6nwcb2k\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 3\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"4qh0\",\n      \"createdAt\" : \"2022-04-03T07:15:44.31Z\",\n      \"maximumThroughputUnits\" : 17,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/946814\",\n          \"keyName\" : \"Charlie Hickle Jr.\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"8y86\",\n      \"serviceBusEndpoint\" : \"hhankglmayk5s1cgkz8akd7p2b6ac0ee0c949lynz220m9ioy9bcn8irc2me2lv8lqxs6eizga5f11c1w3h4lr5f0v1tsovt52pgdlpb896eqcqb26ddu89p29pea9tlvkrg5j\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"n53w\",\n        \"principalId\" : \"946u\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Mississippi\",\n      \"updatedAt\" : \"2022-09-16T04:21:50.31Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"o8m8skzabc0wnbtlymdbjn8km1o41roxus1matoo7a9kixw3bx1ceb2esalmrwfkne\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 19\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"j48e\",\n      \"createdAt\" : \"2022-07-31T00:59:24.31Z\",\n      \"maximumThroughputUnits\" : 9,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/723713\",\n          \"keyName\" : \"Daniele Friesen\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"rm2x\",\n      \"serviceBusEndpoint\" : \"rjlzyma1irt2wu689pks524r86xfjq5eg1mq4y7mzkys0v68o918szziyvgwokov10a02dachmjy8e6zol8hmas5wcgvh0mxel4d0w9vvrf8usmka3frtd2f3tmx46mjympdqqo911oetnnwdkr773y\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"736a\",\n        \"principalId\" : \"6xo1\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"New Hampshire\",\n      \"updatedAt\" : \"2022-05-30T00:17:51.31Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"f9ojya72j6bvhma4y2st2xlfwu5p7rn7jt6ou2xcqvlkrag8lx5y0enwxmhmbx0b3f464tg6yrjtenuif88aso5we4vqyxfv4cwg2rq8s05od329swff1z7qzsqsuflja437st97p8wz8g4qk5sfggl7kxky1chm0viddq1r3w2soe1422t8keefcdg3bz91wk03x\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 1\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"i8om\",\n      \"createdAt\" : \"2022-08-08T08:58:51.311Z\",\n      \"maximumThroughputUnits\" : 1,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/067188\",\n          \"keyName\" : \"Candance Nienow\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"49g0\",\n      \"serviceBusEndpoint\" : \"0dd5gylezl22sxufr\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"m0oz\",\n        \"principalId\" : \"4482\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Maryland\",\n      \"updatedAt\" : \"2022-08-19T13:59:26.311Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"qftd3o860lgwvm7kauiyghob2wtoscom6jzarkkntadvlccu64l3pzo2bmfi2n4saltcdxd1vqnl0adaoo68wtyz3i05zn7avrikq51e2jod8qjrkuco9ji6dhfkos93jtayl21gy1y0zo5xp044mdvgzyxgwm5b3mm985du370mau1dt85wo6z3l1cxs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "812eef14-25ae-4e44-a7f4-dacc594266a0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.311751Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "cd81012f-2bd8-4895-9d80-8c24fcc76f27",
    "name" : "List the quantity of available pre-provisioned Event Hubs Clusters, indexed by A...",
    "request" : {
      "urlPath" : "/subscriptions/3d1j/providers/Microsoft.EventHub/availableClusterRegions",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wbnw9mmsgqmwajpyyfc33"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"b5aihcpsyal1vn8qmc56x73augh3d62zbus7xlctl6sx1qd6kkknr91s9hovosw0x79tm3u0enwrtj6piylasq4u50q8y5sqg3bkvg2t6l5bqmivg6xpm5j6uhn8w1ucl\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cd81012f-2bd8-4895-9d80-8c24fcc76f27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.307105Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Clusters_ListAvailableClusters",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "description" : "The count of readily available and pre-provisioned Event Hubs Clusters per region.",
                "items" : {
                  "$ref" : "#/components/schemas/AvailableCluster"
                }
              }
            },
            "description" : "The response of the List Available Clusters operation."
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "0d7e3397-b6e2-44ff-a316-90953a3449c8",
    "name" : "Lists all of the available Event Hub REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.EventHub/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9j4khs707fu6xgfoi0p1w7v8f6x56gjufglb3yoawjuqibx7xvqsdf4hh2tsqs920amu7at3o164yqk25c4lmlj3on"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"vlc30n9awx5max8ugtskik0jdcy92g4\",\n      \"resource\" : \"ks9k1q300grzynlasefoxg2mjh4bv80efhgq5bx1962otddr5zmgi323xl5es7cmdqt2rvdz9e81cmqayp1xwbibw4hdj82ha3kwxo79xqpt4m5v3l8azozttifv8d4kt8cd\",\n      \"operation\" : \"y0ox\"\n    },\n    \"name\" : \"Royal Wilkinson\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"7f0k805ljnj0r9yytuadgqi5u7n8o4egkw8fovvr62bs33v15v1z6vwq2e9fdpifua8lofnno30vkb2lrzqqhwi72iqs8r78ilvpwqxic2tuqb5lhi5xfl55r51qipsrzq6kwu9dbkgktpbg25ih6xw1daf9mkrl\",\n      \"resource\" : \"xua2ibzltz00xfetbi7d60mcag40fcp5iv5zurvj14732un13z80z1ko27so\",\n      \"operation\" : \"7l233p2i8ud9sf3i51i4dijlc45f8louaw7shj1hvhmagcuysp9lq7qp35ex9\"\n    },\n    \"name\" : \"Dr. Jeannette Mertz\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"0afy2o4s34ugy4ffhgo9iluwiz0hriqy1fruxcrrlqzxhhfpm27564dvzieddug4zfoqeyimynbi2iv7zsvalz9cyjsof5fgc6e54vg1rrgopfz3pj3waziy\",\n      \"resource\" : \"adlcgmklypkgqz5yyf6u2xdr4exav5ohh\",\n      \"operation\" : \"ky6r9lrn9qtoj13vszt29xxp3nx3ya1znlfgz34hy1pfpwixwhsxk5tkwmj1br5b2cayoh4r0lss64\"\n    },\n    \"name\" : \"Claud Marquardt\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"tkeu5znunk15tpqlqz1zlwwrjsueft2wrd34dzdje1xak8q1i14ufxa1cdtyo4jswpyp8xggbe86en0z0d0xn2wjf8lbwgw076q7e2660l6ecuiut27o83amwep5iibgkydordmpdgzwm88zwyuzmp5xqgjpyhovkyxrq2csugy2kh4qa0\",\n      \"resource\" : \"rlxz16nudxatyut09qa0wauk766c31n2ee4d3l49qsssp2330xjszsv8e4si4xdvd9ctbkeu1azz36ci19et2cgksz5h7qj54qcve9fi7krbkddg79vl94etdos9b5zcbuzfi2j4zd87459heeax\",\n      \"operation\" : \"h0s06e9eia95b2bi2hcegkdcdvzbfy41yq5ia81t6l7i9988za4xx8vdin64xdbh0fm8kq9ecvjswh6yj7ev06rbm8ng33m2vxeeyx66fwzviqa8\"\n    },\n    \"name\" : \"Christeen Little\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"a9b5p5xs7hlwfkoem6s2mek8aat6olju4bdixq236rf87ulhngdk6t178fa81v0v4qhu3b\",\n      \"resource\" : \"vy50r5ksmd4w0vfaa1un9w2i89oqvugk5gxamqg06eqmb4fo115i9\",\n      \"operation\" : \"lax3ualsgjqtxw8yqol7kx59uhnyr7bavcm3l8lt5nevv49ax5vrcyxhq5nt5jfmw4h1wt2pxfrgbl4a8exckdb6kyg1jqyvnojl0arztnaxgy5qzprptlpry5vblju2ce00djup36ddn43hz0y66zpx67vyyjxvvwy97ytppqww4bcdqt68tutw7qlijpo\"\n    },\n    \"name\" : \"Sook Prosacco\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"atf2vwmsy0w3iowndsgs28okjo665ws3ychcl6nkek7o92o5lgpmm9134s817jws8jrrqjgndhqbwsg5mfgy463kqnhtw9qvo2\",\n      \"resource\" : \"mizqeul6r6xwo3urapsjayo774y0kfuyln5j9ion7b7g0mo7bmjjoxy5usyethxis2jxybrjeifk13gfm7g20\",\n      \"operation\" : \"g1bx6etckl5jfd5wqcz37tcxrhuwoo9fddjurt2tjev9slcrji9u2cs1b456moummldk0ubhx0resi0fwiv58f\"\n    },\n    \"name\" : \"Gale Upton\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"sad1g\",\n      \"resource\" : \"1k5orq625f0fhlzba9n9a7qgmuq61s2mlsldv7rhbzjxxvze39uc71cmjqbrcfw454f66cpytjyq0tovpec\",\n      \"operation\" : \"1rrqn0et7al2arnxz03ph0ubh1dmbe67bz26bffkcslhbqf91d1z690pbslvzvqwmjji6uzj\"\n    },\n    \"name\" : \"Mrs. Maia Fisher\"\n  } ],\n  \"nextLink\" : \"3hnwhs0zipa2xfhq7o82egjxl4dqmcfphilntx6rc5yjqicif9unz8zw817u0xu44vq0wgblks7ot3bqql95yvqnzy8csnli0ysw79eb3xcssfcdg8qk7f2k20j7vuy52btuz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0d7e3397-b6e2-44ff-a316-90953a3449c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:27.306854Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 42
  } ]
}