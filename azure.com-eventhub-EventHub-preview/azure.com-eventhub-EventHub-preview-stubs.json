{
  "mappings" : [ {
    "id" : "54c0c99d-80c0-371b-b4fe-3367e9e275a4",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/3v29/resourceGroups/Emanuel+Gutmann+PhD/providers/Microsoft.EventHub/namespaces/Tom+Lubowitz+V/virtualnetworkrules/Luigi+Rowe+Jr.",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "wow2gi0ouibp9ne50ar1yls6amwn7303mpx31g2yrph0pv3suoqvez2tumr8nqrzoto4ohhv9re70ad8dh5fa57xfjcqibqza5scy11gkgbq351gaucjm3ejo1lbdd4dsgfmeqpccw2l8nj11nc9rh8qoocqaju1d488o2yfg2to2s2uysn8w"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "54c0c99d-80c0-371b-b4fe-3367e9e275a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "202f4e00-6de2-3cfa-9e07-3e28c17aff00",
    "name" : "Deletes an VirtualNetworkRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/30j8/resourceGroups/Mrs.+Cesar+Klein/providers/Microsoft.EventHub/namespaces/Velda+Borer/virtualnetworkrules/Liz+Hodkiewicz",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kvyufzcqlb8ktljt8ul"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "202f4e00-6de2-3cfa-9e07-3e28c17aff00",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteVirtualNetworkRule"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "a03aaa21-f4b8-3a35-9211-b39988048211",
    "name" : "Creates or updates an VirtualNetworkRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/985w/resourceGroups/Hae+Gibson+II/providers/Microsoft.EventHub/namespaces/Timika+Hills/virtualnetworkrules/Krysten+Robel",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "uxz"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mrs. Erwin Moore\",\n  \"id\" : \"urjm\",\n  \"type\" : \"qrvtvynt15d4ksve8sdril52t733swxpna19dzs8tz46ylish7wwtc96hnb3aisr15v4d5lnyuzahptjwmptu6kxsxmkfdqwm7rcdpmuk8a89gig5bnhyp4yuynq4p6g0s3mlsuuj4tykantkaq\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"1x8w\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a03aaa21-f4b8-3a35-9211-b39988048211",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "ARM ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "8b839fbc-d785-36c4-b351-ca3ae9548cc0",
    "name" : "Gets an VirtualNetworkRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/063k/resourceGroups/Douglass+Schroeder+I/providers/Microsoft.EventHub/namespaces/Enriqueta+Jenkins+PhD/virtualnetworkrules/Hermelinda+Shields",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ol5s8z46ecik6fjjbcno8l3l593oql57kzzb4sugupln2fp9zg7w0y0nhv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Pearle Reilly\",\n  \"id\" : \"ek5w\",\n  \"type\" : \"v3y2hw66qudmc7ph82by7mvtjdz5y0t0jmmooljpw8qgjfx1kxfpz04gc8sq4prxsf0e308x9524a6mlr0b4d2ub5gh75w4wa6be5ihsfd9flpkvusvtts2te1e90cknhz03s2xkswm85c6czvpbrfwck3oyje6jqi6xdg6tne9n2amsgfjfa786xeio\",\n  \"properties\" : {\n    \"virtualNetworkSubnetId\" : \"8e1q\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b839fbc-d785-36c4-b351-ca3ae9548cc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_GetVirtualNetworkRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "virtualNetworkSubnetId" : {
                    "type" : "string",
                    "description" : "ARM ID of Virtual Network Subnet"
                  }
                },
                "description" : "Properties supplied to create or update VirtualNetworkRules"
              }
            },
            "description" : "Single item in a List or Get VirtualNetworkRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "0405d05e-9e0c-3717-a912-9e6119794816",
    "name" : "Gets a list of VirtualNetwork rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/a4vm/resourceGroups/Adrian+Littel+III/providers/Microsoft.EventHub/namespaces/Julianna+Treutel/virtualnetworkrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w9kujkvi67ip7zj8kb5dpr3rozcdwk0fzy5gmo43o6eoy4e8a5pe7vloq5gy7jhd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Mitchell Dickinson\",\n    \"id\" : \"65m1\",\n    \"type\" : \"qhfzqf2ntubgbsiriu0xebea6m2d98a8kq8ohjoycmcxqw1cvpgfuyce1esu39el1rlh4yw5gsfvbjfyuagw91acja6bc8i4a986jfl2hndbuqfvj1ijflka09g34wzdsrv8fnsa7js859es1fks265hvb62wa5fsoke3h0x14uqqfnlaa80gn116g043uv4\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"d06b\"\n    }\n  }, {\n    \"name\" : \"Edwin Thiel\",\n    \"id\" : \"6or6\",\n    \"type\" : \"0jy5vxr4vqw5shdgwl4dxfkg9\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"781u\"\n    }\n  }, {\n    \"name\" : \"Mr. Marco Block\",\n    \"id\" : \"303d\",\n    \"type\" : \"ejpci6wah2t72czs735azwxnrc6wwon\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"3u80\"\n    }\n  }, {\n    \"name\" : \"Dr. Sabina Thiel\",\n    \"id\" : \"1904\",\n    \"type\" : \"ong2avmo5hh95zrtft7ns5hykmmxtwmypxeiqy9wa8v0vyodctovz7flydgfakzrrb8ruck3akuykdzs2br6rv4i9w959rku8rptkpn3xfa9qg30gs3ggzqgez5i6804oylgpye5gjyr3cndxg9putf4f9681nys1bhwxm1v9hf28v96oiollz1pyjzq54cf1g5hr0s\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"426i\"\n    }\n  }, {\n    \"name\" : \"Andreas Gorczany\",\n    \"id\" : \"8z79\",\n    \"type\" : \"zh69j5cgq0\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"ls47\"\n    }\n  }, {\n    \"name\" : \"Mr. Freda Schamberger\",\n    \"id\" : \"pumk\",\n    \"type\" : \"hog6k2p858lcchnewxr0o8fl0hic59vwt6ynqywuyluk08kzmwekmv3dou4qmo5u7ja4x1ryqimp3htb8pxv46gvplkfvttx28hd3ykhg0fjk6d7t3ljeyn81qmnemz6i8\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"3u4e\"\n    }\n  }, {\n    \"name\" : \"Alfonso Walker\",\n    \"id\" : \"e9a7\",\n    \"type\" : \"kle9q9pqq1lcj3udf95w7i7fbij2pq18of0ixwjwhc1tl2z3bdyfukuzy2h5hclaacych68snjycw9z8zeipb0t4d5m\",\n    \"properties\" : {\n      \"virtualNetworkSubnetId\" : \"z29r\"\n    }\n  } ],\n  \"nextLink\" : \"olumm4p3584855ml8lsb4rkk6cqh34uqwd5dmmvnfzi\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0405d05e-9e0c-3717-a912-9e6119794816",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListVirtualNetworkRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of VirtualNetwork Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List VirtualNetwork Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/VirtualNetworkRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "394f7047-5d82-36d1-ad3a-7b53ad54859f",
    "name" : "Create or update NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/nt4u/resourceGroups/Dana+Mraz/providers/Microsoft.EventHub/namespaces/Tanner+Macejkovic/networkRuleSets/default",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "9mz1s5lbhl94q27d1pcba2clks"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Joshua Ondricka Sr.\",\n  \"id\" : \"9evj\",\n  \"type\" : \"urqv7zolj9urpfeq48lfr66566gpc5twd6vycs6831pz75v5v161wtcasd419vwtxmhxfqwocohlkvx19duhr4mep00l7t9xljfg5m0duhurpryuwg8ge2e5xnkoswc5loefuw839vxwqdgemh0dxcmr4y7i6jw127g72j2hy0t9\",\n  \"properties\" : {\n    \"defaultAction\" : \"Deny\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"nhwdi8s3z285o3ceysu9qr6ccamb7yf8l205p7chycc8i3yh0vs9wl8iiqmsfzuoowlnnr6ts0sno6zsulsf8b3i53gat9a3dv5tlgeh8qthok6j3eihhyxqondaifv3zs5kr8k\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"463qjhzdwmomr6d4wujv1nzhtmw9x85lq2ma83bayni0edx8atp6xyzitzgjqlo1axjdv9pz5g4bu4h5f1zkejzql5tcib5o2jrx2qlqrxq3i730s5qnk9j456dp4gpc7wn11uyk6ix9qn30bff\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"ttzxtbi1edzryk0clbn262eapmp3qcvd5hwj37bjei8gm6ne5g1uxwzt\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"gytd\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"98hw\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "394f7047-5d82-36d1-ad3a-7b53ad54859f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "f1e92470-9428-38cf-81cc-66a351809969",
    "name" : "Gets NetworkRuleSet for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/pwya/resourceGroups/Roger+Wiegand/providers/Microsoft.EventHub/namespaces/Catheryn+Greenfelder/networkRuleSets/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "25z1xlvqh77unlq77ese06o5jeauq0nq88627p8p9j6x3bhhjuv2ikr9wj5ndw2e4xsh2m3sc37md6tykbhp7rqyub66f6knz69zhli1qn8f9pyrtkgm6wz05pw5hvalrm3adkv5f8l3ip6p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Dr. Burton Strosin\",\n  \"id\" : \"1153\",\n  \"type\" : \"etx3y83x406nhbcwbnfrsippdjzwkiddrs3ro5anj3zz30dztrzk0osaae6443eejspu7ppv6044iqmuxzfmeswmoumi7a4fb85g19ndyntperwfe5otqhpqupwi9gm5bxd58x5827xeguyjt3jlgnj92w0dqgdfqgj9avxt2utv29ctevpnkfv5sba6juna9jr8\",\n  \"properties\" : {\n    \"defaultAction\" : \"Allow\",\n    \"ipRules\" : [ {\n      \"ipMask\" : \"fi5g03lb5hajdiculyu200im2j8ku2bfe3tvoomleax9u6b0hapzel9ajp4y7mb6rc8dcxskbpbcxf0e0pofit25lylvwm5hu1kftk9oylog87eifuzt4whun\",\n      \"action\" : \"Allow\"\n    }, {\n      \"ipMask\" : \"o3fesxl3xnc9fzy6w0t10tg\",\n      \"action\" : \"Allow\"\n    } ],\n    \"virtualNetworkRules\" : [ {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"y96a\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : false,\n      \"subnet\" : {\n        \"id\" : \"7206\"\n      }\n    }, {\n      \"ignoreMissingVnetServiceEndpoint\" : true,\n      \"subnet\" : {\n        \"id\" : \"q5f1\"\n      }\n    } ]\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f1e92470-9428-38cf-81cc-66a351809969",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_GetNetworkRuleSet",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "defaultAction" : {
                    "type" : "string",
                    "description" : "Default Action for Network Rule Set",
                    "enum" : [ "Allow", "Deny" ]
                  },
                  "ipRules" : {
                    "type" : "array",
                    "description" : "List of IpRules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetIpRules"
                    }
                  },
                  "virtualNetworkRules" : {
                    "type" : "array",
                    "description" : "List VirtualNetwork Rules",
                    "items" : {
                      "$ref" : "#/components/schemas/NWRuleSetVirtualNetworkRules"
                    }
                  }
                },
                "description" : "NetworkRuleSet properties"
              }
            },
            "description" : "Description of topic resource.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "f65c556d-8eb6-3b4c-9069-74edba692407",
    "name" : "Deletes an IpFilterRule for a Namespace. - 204",
    "request" : {
      "urlPath" : "/subscriptions/1166/resourceGroups/Kenton+Huel/providers/Microsoft.EventHub/namespaces/Alecia+Watsica+DDS/ipfilterrules/Billie+Effertz",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "kcckjf3f5bsrq04s70hw6fkfarnsomubr4hybk4zomfpr7o3xidnosia8jdxm7d4m28zuu5fvd8awczvhxnprs4w9oi3c4jg4pudqsn76a7yqijdear471swbijyj8istemtt6"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "f65c556d-8eb6-3b4c-9069-74edba692407",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "6ddd616d-cac0-3da0-85ac-130d88bb410b",
    "name" : "Deletes an IpFilterRule for a Namespace. - 200",
    "request" : {
      "urlPath" : "/subscriptions/62f5/resourceGroups/Mrs.+Argentina+Weissnat/providers/Microsoft.EventHub/namespaces/Merrill+Ruecker/ipfilterrules/Debbra+Runolfsdottir",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "cdmzoam4e8ezkyocqp2vopjk46dno6qax42dbafih4o7tm8lxgrzd9esxds2srl8nob7zqhdyy4q9xa4j1lb2147yj1ncyjqeo0rho8pchd9zl2eg5q86f1dkk2dpzx8t4milakmtmfkzk7mn3hu6ppuh969iifa2tcv22g9oc2umjjoioikl0vj61ivo"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "6ddd616d-cac0-3da0-85ac-130d88bb410b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_DeleteIpFilterRule"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "5f03ffb1-631a-30b0-b650-6d1e144d4b9a",
    "name" : "Creates or updates an IpFilterRule for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/bx9h/resourceGroups/Maurice+Collins/providers/Microsoft.EventHub/namespaces/Dylan+Rath/ipfilterrules/Tisa+Jacobs",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3w06y60wdvj4kznld0ptfx89dtl4urytfucns40xgcxzbwokyhictyveikkgfma3e32rohuan92hu5s5wkaw1w2hxqsxp540nt2ssoatiwmy1t4s2t786e1zpidnyrqtfq08r65o4n1ek9nssvz8sgsoqq76tp3qubk15mmf2wragc"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Kory Becker III\",\n  \"id\" : \"gl5n\",\n  \"type\" : \"8s01zcmj90h02o2cf5llid6fqvtmtpvjvqndrtr2ms77kxopf9ur0uxlpsaulor6iohyow820hx2whv0um9xws5nn6andp59hxue9dd6yarytcqc71af3msa3v5pone3k62nvwqaqweiz9m95kfs57sz721rvlq0bamxxlymzex072n3iiu\",\n  \"properties\" : {\n    \"filterName\" : \"Amado Lesch\",\n    \"ipMask\" : \"xqn\",\n    \"action\" : \"Reject\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5f03ffb1-631a-30b0-b650-6d1e144d4b9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdateIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "7b5a2526-31c6-3e29-8af0-3908d540bfb2",
    "name" : "Gets an IpFilterRule for a Namespace by rule name.",
    "request" : {
      "urlPath" : "/subscriptions/ortx/resourceGroups/Lawerence+McLaughlin/providers/Microsoft.EventHub/namespaces/Manual+Pacocha/ipfilterrules/Madalyn+Von",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "11yxj0imwpzvqvon5qqefignlprhbnmartbgn7kolrowswd0tjcete5w5jpf7k39s"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Hollis Little\",\n  \"id\" : \"rta1\",\n  \"type\" : \"1r53ns51cwbkmfhr15h8l3yd302uihkw157gizeqe48dkko1d15sucf9sxlvsz070xiyyz1ucozb6ohi36cyblgnepsgftgxrfmiphkbkvf07ih5lwt0sxof96vymkol1prf5o5fi7y0a6fw3ue1doj88tugf7xs8a0gowoiz6m5x5rr421\",\n  \"properties\" : {\n    \"filterName\" : \"Lucile Daniel\",\n    \"ipMask\" : \"xmh\",\n    \"action\" : \"Reject\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7b5a2526-31c6-3e29-8af0-3908d540bfb2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_GetIpFilterRule",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "action" : {
                    "type" : "string",
                    "description" : "The IP Filter Action",
                    "enum" : [ "Accept", "Reject" ]
                  },
                  "filterName" : {
                    "type" : "string",
                    "description" : "IP Filter name"
                  },
                  "ipMask" : {
                    "type" : "string",
                    "description" : "IP Mask"
                  }
                },
                "description" : "Properties supplied to create or update IpFilterRules"
              }
            },
            "description" : "Single item in a List or Get IpFilterRules operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/Resource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "e79a0416-82d4-3f2f-ab2e-7fe72d3c571d",
    "name" : "Gets a list of IP Filter rules for a Namespace.",
    "request" : {
      "urlPath" : "/subscriptions/l39r/resourceGroups/Andrew+Keebler+Jr./providers/Microsoft.EventHub/namespaces/Mr.+Almeda+Hauck/ipfilterrules",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ihtpejc2s5modwg5vmeoo9v32wx4ydhha44cmepjhmehuhb7z"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"name\" : \"Brittany Sauer\",\n    \"id\" : \"cgyn\",\n    \"type\" : \"i4ocxbxsbnnmuisawbbhrcq8pdko0akoasmytoguq9it24rw0lfgqp2r7imarcxodwi6r2q0848ju9exb8sbhuahbnh5sav23js4kbqbech026wv85cqto224n\",\n    \"properties\" : {\n      \"filterName\" : \"Ms. Merrill Volkman\",\n      \"ipMask\" : \"r24rinonxh810ql2n47g7axkzusxbq6t8hr7nknjdnejxbf2sxw7l14o4kk81ft4uhf2nduoji1xosrh8tz3qo9rw9ouj9r7xqikwgy6fvhqi59qfbxjbkhtluq0li5aq6qwqmjixd3fautopvo1s9w2xuspp5j2387r235elkqs5jy9byuqkjd3ym9z\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Darline Beahan\",\n    \"id\" : \"t0ni\",\n    \"type\" : \"2q7lu5u1fz8ne8xzy64jtvfkoj4httc7a7mkvry8t1kvfz9qzoseusubkashgji5kb9u1zhs9qqjtu5qr2kli1ihquwiqbdr8ti48ybkhi1b\",\n    \"properties\" : {\n      \"filterName\" : \"Franklin Yundt\",\n      \"ipMask\" : \"qbmalo696axl0zge2ojtqrzbq4wac41kfylvcu2hvsmsypqllgcbck9492n8r7lyvo5cr\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Jack McCullough\",\n    \"id\" : \"v05i\",\n    \"type\" : \"p5zua0sdtgmn13elf9bq8dndqlnx9xvzwvz793gcmueodz6rrdh992q4z21lqdce6qtp57ifguq7wrdgjt8a9bfqabgsz1pmyrqnemwdxxak0tj7d4g6w0wru4mg5jjx1pe2he1fxie3vri0an91j9dk87l3yy297lpakxujmm6o8c4gd5n7wywc89y2f9xqje2m5\",\n    \"properties\" : {\n      \"filterName\" : \"Burl Adams\",\n      \"ipMask\" : \"pkz5gq9314w0jdmnxfb2x5ibt00kqnznpn4oson9efklt14chnbje3grearpdk5dy8ncznzdiwziai8t9y19rvu4lcm0hx19yenrgykzs7w4rckhlgwy998s9uiuvdh6rmsh8gjrqd\",\n      \"action\" : \"Reject\"\n    }\n  }, {\n    \"name\" : \"Larita Bode\",\n    \"id\" : \"9299\",\n    \"type\" : \"tv28xlt3njc8hfsbm1q6t00we4um77d5tkycy60rzlz074we7n28mfrm04pz6wpl0byejfc3wh30n1ebdoguko9p427t7naw7w71o51f1kk6\",\n    \"properties\" : {\n      \"filterName\" : \"Coleman Schuppe\",\n      \"ipMask\" : \"8a13ogi0j65v6ld4l35nw7emqi\",\n      \"action\" : \"Reject\"\n    }\n  } ],\n  \"nextLink\" : \"wk7xfc6osxvxijavkp42ykcem4fhmurzkopu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e79a0416-82d4-3f2f-ab2e-7fe72d3c571d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListIPFilterRules",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains an incomplete list of IpFilter Rules"
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List IpFilter Rules operation.",
                "items" : {
                  "$ref" : "#/components/schemas/IpFilterRule"
                }
              }
            },
            "description" : "The response from the List namespace operation."
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "ffd7bca1-9e1c-3424-bfe1-0888cdd50240",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... - 202",
    "request" : {
      "urlPath" : "/subscriptions/e83i/resourceGroups/Ingeborg+Tromp/providers/Microsoft.EventHub/namespaces/Kindra+Koch",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "uq755b0azjrxf2rcy49jffukofeji23qxnaoeekbe2xo00cnskfzpphwkjlwi8l1vghth538xz4703k67brjlawz3mwajmkbgmvix9rd4ljqv83bjcwpayqb3kcbk7w387w93yp1b8aldipkdjyw6kl5ix3avjxq41d9m31u7ly5t6ya70q"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "ffd7bca1-9e1c-3424-bfe1-0888cdd50240",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Update"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "2ae872c0-528f-3988-801c-d8dddcc15996",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/n8qz/resourceGroups/Miss+Jay+Dooley/providers/Microsoft.EventHub/namespaces/Mrs.+Lucio+Ullrich",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ghkv0i7c4o446s4zgahk4zfb2gbrqqbruxlc14bxofluhxnhvhymxb8byv06qrwfhvfd3jns1w7ln3v7njlz4qwn50o7yc8kdfgaufvyjpi1bbgprud2br6n01ifewbbdtpoaz8qz823hk6mhccn9ve5aj8vfzm8y0ylun55ti2l8jqrqy0aitp7k7"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"ymlyxvzm78cpa7gnxz1a5pghz8hxe4ac13bston4uli6347xfu505n78wb1ela5ozk75uc1d0ujzxszwl2etgi0olf9gsf01vohw4szppn8ghaaxj3ejlvcsrmzn26n1wvp5y\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 2\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"q813\",\n    \"createdAt\" : \"2023-07-12T21:18:00.109Z\",\n    \"maximumThroughputUnits\" : 12,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/134922\",\n        \"keyName\" : \"Ms. Janae Hermann\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"6f8u\",\n    \"serviceBusEndpoint\" : \"i2xydpds6xxd8yyj11dnjfkx25q474mw8e7d9r1xrznfj4vv8waa66t672dzssq879cdpkjv3khf3va0140n7ntl31f\",\n    \"isAutoInflateEnabled\" : false,\n    \"identity\" : {\n      \"tenantId\" : \"7877\",\n      \"principalId\" : \"ncc4\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Maryland\",\n    \"updatedAt\" : \"2024-01-21T01:43:32.11Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2ae872c0-528f-3988-801c-d8dddcc15996",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "25a2fa30-6c67-389f-82d2-9d68f1191e52",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/42w0/resourceGroups/Miss+Carlton+Stanton/providers/Microsoft.EventHub/namespaces/Neil+Considine",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "899ni4kl66xwf4hjh3i9saxdyjiq6xujwng4p"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"cl3q86pg68vyrjr3nf3vo4otiy0q0bce0rmanihxco1dzjb5qj788mmlmkfug0odw5dhpmtuz1qz7swkwcqq5debige0plz5hr57z691wio2kxens38d4jytdjoo5pkkic1s7icsnvcsk0g6k3wto7s5ckzhjv8o8tbzbmiivhiuhgaqxxgx9owvj85tch2w\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 19\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"viv7\",\n    \"createdAt\" : \"2023-03-27T10:05:05.108Z\",\n    \"maximumThroughputUnits\" : 10,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/170973\",\n        \"keyName\" : \"Alonzo Carter\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"g8et\",\n    \"serviceBusEndpoint\" : \"15r62u0tcpkcjyqq2homv4wymwl7y5ma0j8zivrx1bbmk3y9g5llk8cgylbl5zrweub9my7p2y7ly31bgr6jwk7m5mi7fj1o58ys3dejwpuexfyxp7x3eq1tjapc5ka1zn3iwadk6yyoujeft6c53rn6v584pb9912t65hj4q403420daqh2yasnfrrzpoommhfx2\",\n    \"isAutoInflateEnabled\" : false,\n    \"identity\" : {\n      \"tenantId\" : \"y634\",\n      \"principalId\" : \"1p8m\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Massachusetts\",\n    \"updatedAt\" : \"2023-10-05T16:53:05.109Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "25a2fa30-6c67-389f-82d2-9d68f1191e52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Update",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "d6607c0e-6554-31bc-be55-fdd7ea78de18",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 204",
    "request" : {
      "urlPath" : "/subscriptions/3k73/resourceGroups/Mr.+Cortez+Senger/providers/Microsoft.EventHub/namespaces/Ms.+Ignacio+Bosco",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "tby1z0z9vm32qkiaj5hkqn1az9blyafotb3oxz877x30qe5y9217q6baus22mwnhrqy9u4f9m1l9m8n10pcrcu17jf24bvpuwhestswkhj7lmx55o5vf66v4hg2neb0vz052090jklzsie6a44pnujx75ov3k94jpbdx1quvekiaiq6yc4snm4wxujds"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "d6607c0e-6554-31bc-be55-fdd7ea78de18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "818d9171-fb73-33e9-8b1b-3907597279ed",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 202",
    "request" : {
      "urlPath" : "/subscriptions/9xrj/resourceGroups/Isobel+Powlowski+IV/providers/Microsoft.EventHub/namespaces/Noelle+Bins",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "y7ihk6uppy2fm3gg8xooy3wrk7q3lfr5uxqqagpmhy383qs0t7mf1kd2gs6qmeg8attfbdtbq1h5hybzpuw7efqnsjxvqzqyac0obizhxtecs6kr"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "818d9171-fb73-33e9-8b1b-3907597279ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "aa0c581d-921b-3640-9db6-3fa00a228a50",
    "name" : "Deletes an existing namespace. This operation also removes all associated resour... - 200",
    "request" : {
      "urlPath" : "/subscriptions/i7l4/resourceGroups/Wilbur+Barrows/providers/Microsoft.EventHub/namespaces/Natividad+Zulauf+Sr.",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ukepfobjoiciq6rlea4vw2o4fvx94x20x1tnpbi82remib2zelyl0xfkh9hl9r5l0pnqt94kkjp4w3bw8ny2lapgq5ku7iu8icqfvqwpsfgxrb8pc6s0ec0odutcqo84k0cm0tzxsyl10zhxlash73k070yza"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "aa0c581d-921b-3640-9db6-3fa00a228a50",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Delete"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "e30f82cc-52dd-3718-aef5-b644e254b265",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... - 202",
    "request" : {
      "urlPath" : "/subscriptions/k8uu/resourceGroups/Birgit+Schiller+DVM/providers/Microsoft.EventHub/namespaces/Randee+Durgan",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "e9ruot6aeq5xyr4grlt9253soc8nsqizear3rkzfg4s2a7ow4x1b2y165z953wekp702s7sml40dexd4igoply1045"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "e30f82cc-52dd-3718-aef5-b644e254b265",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "2436f248-2330-36c4-9870-2d00c6d3d721",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/vnw3/resourceGroups/Thuy+Schuppe+DDS/providers/Microsoft.EventHub/namespaces/Nicolette+Hudson+II",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "l45yxtb5ssdh34bzayk3mvy7pbecv8r7nxjtf7q6hhcpqgutxt9pqr70p7qjz3z1w7smqur5pczngagplcf11fshfvhqz2oofng7ej1l56esz8w3tia8jro6mbhtvb1qh871n7wz"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"r1oy70gmkux6ecve17q0xenu2msg16b4qjl82c1sj0n1n95qqzx18zu6e999iz59asqai73vaioluajq9uuphkl75g6lnhnd9t1tmpvium2fa6mdijzvtbn9jybtbgya4v9fihh06mr2nix1oejczqlrfa10iylhrga7vkshb09z5ui0w4ij72mrvqavk9ki\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 10\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"4hg2\",\n    \"createdAt\" : \"2024-01-31T21:37:11.107Z\",\n    \"maximumThroughputUnits\" : 13,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/771644\",\n        \"keyName\" : \"William Kemmer\"\n      }\n    },\n    \"kafkaEnabled\" : false,\n    \"metricId\" : \"u536\",\n    \"serviceBusEndpoint\" : \"6el3mppb2ygt72civck45lumrk7kgpzeu56tk0nqus90iikpzov4h2223pvk1uapq359rdj5r2huqt7y5phyf3yay0v127ph74xoae9f9vj4catdp6s0pimlt9k5zgy5cze3jtgltsfu1lq7kwarhhncyfpi3awm59ykcpuxytbcyaqo\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"wx2g\",\n      \"principalId\" : \"8vp1\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Georgia\",\n    \"updatedAt\" : \"2023-07-14T14:31:47.107Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2436f248-2330-36c4-9870-2d00c6d3d721",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "b4029210-ceb7-3c2a-a15b-b836fa1c87e6",
    "name" : "Creates or updates a namespace. Once created, this namespace's resource manifest... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/745u/resourceGroups/Maureen+Fisher/providers/Microsoft.EventHub/namespaces/Dylan+Grimes",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ii47wnm7zdnnyxfudkn82nv57kakqze9945nlpt5ljdvrvtsq35kcfvl0mdb0ye1150qg9bxxmrhr3sa2kj95jw643q4bd"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"akq0dowtfqpafm03n4e1zvhmw3jo8e1a9ck15bblmqvo86x4ozqwiul538prpjt0pcragwdl24b7fppbzi0xah\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 14\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"q222\",\n    \"createdAt\" : \"2022-04-08T08:52:18.106Z\",\n    \"maximumThroughputUnits\" : 8,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/721973\",\n        \"keyName\" : \"Lon Koepp I\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"93k2\",\n    \"serviceBusEndpoint\" : \"phgetqcisp00fy6kflop0riz3o2ax3s02coxn8rsgsfbptqgck261f6ba697ip97o73hwc6cmsyw4ngek14run27ss9p0z236a1v3sndexlczq4oicar19d76izcc1331myeqhh17svetnfti6aq5unn73b722odkq9nzvsmtzl\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"gkby\",\n      \"principalId\" : \"17ig\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"North Dakota\",\n    \"updatedAt\" : \"2023-03-24T01:24:44.107Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b4029210-ceb7-3c2a-a15b-b836fa1c87e6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_CreateOrUpdate",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "80ba3e5f-d1a0-3d0e-a0a7-e37eb3611dc8",
    "name" : "Gets the description of the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/p9iu/resourceGroups/Danial+Schuppe/providers/Microsoft.EventHub/namespaces/Beau+Sawayn",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "3dr7efgygaj9na83f0ttvts47s8c2chkbkwpfcdket4dqw3mtlmhr3wqkw6po6qpgkqufkl43z31hkscb9m0vfw1a0bxs4hcgy9es1q7if09vplllt540pssx9d81hwce8imtllnx1vfhi8djggx51vrsqb5"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"ki38qglyh37dbspeik917n4jsgx347mt0vvfabvi6o5940jljumhfyjhz4ifyd89vbsyk7zjnkqy06rzgwz00j5jjtou9f4mwr218a9zfqlsk87\",\n  \"sku\" : {\n    \"tier\" : \"Basic\",\n    \"name\" : \"Basic\",\n    \"capacity\" : 7\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"82r0\",\n    \"createdAt\" : \"2023-11-18T02:59:53.105Z\",\n    \"maximumThroughputUnits\" : 0,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/306911\",\n        \"keyName\" : \"Mrs. Sherika Kovacek\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"ks27\",\n    \"serviceBusEndpoint\" : \"tajhu8wmz5zzm8mxxm7to4kgbtmwzui21k7pzetj0wwzwzcct71ktvwhcgddu59c6s706emx35ezdbkh8ie8238xdf08q6z6bbwmjupw3yiq1qeddnc8z36o61dky1y86vh6h4fsuqfxrymi6zh1zlqenv\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"vv9c\",\n      \"principalId\" : \"93jd\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : true,\n    \"provisioningState\" : \"Georgia\",\n    \"updatedAt\" : \"2022-12-18T06:31:08.106Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80ba3e5f-d1a0-3d0e-a0a7-e37eb3611dc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "15d8e758-d9a0-3128-b29d-c1fd48de51a5",
    "name" : "Gets the description of the specified namespace.",
    "request" : {
      "urlPath" : "/subscriptions/fuk0/resourceGroups/Terrilyn+Hilll/providers/Microsoft.EventHub/namespaces/Britt+Batz",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "v99lrlexsd9wxn2s79wz3n0gnidb61hf6lxmctukl70cr"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"q9svwhwfsk6g6ymc66s5ynpn47j4l36t15l7o9lher0ip31ztv7ytaxejmjn8wn2g4bams2ylhh7e0dz10eg39krqb7jxxc2380gv8fbph2cwgjn7xir7di940gykgggt63dibucq8tilfikfx5bu0q1pe7n4tg14mo9bxs0jiwb1e8mt1p8344uwdqedqc8q\",\n  \"sku\" : {\n    \"tier\" : \"Standard\",\n    \"name\" : \"Standard\",\n    \"capacity\" : 4\n  },\n  \"properties\" : {\n    \"clusterArmId\" : \"362u\",\n    \"createdAt\" : \"2022-10-22T18:07:54.105Z\",\n    \"maximumThroughputUnits\" : 15,\n    \"encryption\" : {\n      \"keySource\" : \"Microsoft.KeyVault\",\n      \"keyVaultProperties\" : {\n        \"keyVaultUri\" : \"https://web.example.mocklab.io/998575\",\n        \"keyName\" : \"Willie Carroll\"\n      }\n    },\n    \"kafkaEnabled\" : true,\n    \"metricId\" : \"u474\",\n    \"serviceBusEndpoint\" : \"ogtwl1fkfksir3evri9shvtna9kpcx6yelpmkilfol027tre0s19uuga10z697z2si7xe2m7lzj4609k7vtts8io2yj2f3gycti8t9hcblxcgn58fkh8qrhh6y0ai3n750\",\n    \"isAutoInflateEnabled\" : true,\n    \"identity\" : {\n      \"tenantId\" : \"g18q\",\n      \"principalId\" : \"h31y\",\n      \"type\" : \"SystemAssigned\"\n    },\n    \"zoneRedundant\" : false,\n    \"provisioningState\" : \"Oklahoma\",\n    \"updatedAt\" : \"2023-01-19T20:47:26.105Z\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15d8e758-d9a0-3128-b29d-c1fd48de51a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "clusterArmId" : {
                    "type" : "string",
                    "description" : "Cluster ARM ID of the Namespace."
                  },
                  "createdAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was created.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "encryption" : {
                    "$ref" : "#/components/schemas/Encryption"
                  },
                  "identity" : {
                    "$ref" : "#/components/schemas/Identity"
                  },
                  "isAutoInflateEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether AutoInflate is enabled for eventhub namespace."
                  },
                  "kafkaEnabled" : {
                    "type" : "boolean",
                    "description" : "Value that indicates whether Kafka is enabled for eventhub namespace."
                  },
                  "maximumThroughputUnits" : {
                    "maximum" : 20,
                    "minimum" : 0,
                    "type" : "integer",
                    "description" : "Upper limit of throughput units when AutoInflate is enabled, value should be within 0 to 20 throughput units. ( '0' if AutoInflateEnabled = true)",
                    "format" : "int32"
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "Identifier for Azure Insights metrics.",
                    "readOnly" : true
                  },
                  "provisioningState" : {
                    "type" : "string",
                    "description" : "Provisioning state of the Namespace.",
                    "readOnly" : true
                  },
                  "serviceBusEndpoint" : {
                    "type" : "string",
                    "description" : "Endpoint you can use to perform Service Bus operations.",
                    "readOnly" : true
                  },
                  "updatedAt" : {
                    "type" : "string",
                    "description" : "The time the Namespace was updated.",
                    "format" : "date-time",
                    "readOnly" : true
                  },
                  "zoneRedundant" : {
                    "type" : "boolean",
                    "description" : "Enabling this property creates a Standard Event Hubs Namespace in regions supported availability zones."
                  }
                },
                "description" : "Namespace properties supplied for create namespace operation."
              },
              "sku" : {
                "$ref" : "#/components/schemas/Sku"
              }
            },
            "description" : "Single Namespace item in List or Get Operation",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "7171ef5a-f973-3e15-aa74-75fb18a3bd2d",
    "name" : "Lists the available Namespaces within a resource group.",
    "request" : {
      "urlPath" : "/subscriptions/x708/resourceGroups/Mrs.+Leone+Kirlin/providers/Microsoft.EventHub/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "i49hgnmijlb98vrtvclm1n2iy4r8kifhpszbkq3n3n52tpk8j5viqa5vo54xwbeacfcq42soopbhcjupi0d9y94td1ckjiw2aat3c9kxqwlk1r9euwtk8gq6tkef6h9mpo5hux"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"p6hf5kbddyd5t68iqskn6kl2kie6zuwq5wknoxqpbw1r6ctli5sr5tyh03ki447q02jwr46sqw82cx8f5xsa2g2wre71xufc74vtr349x0cebqpqhfivqj25gwejgzf856dafcb2t5\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 13\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"6z9r\",\n      \"createdAt\" : \"2022-05-02T11:20:49.1Z\",\n      \"maximumThroughputUnits\" : 12,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/586072\",\n          \"keyName\" : \"Bok Keeling\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"3744\",\n      \"serviceBusEndpoint\" : \"wfnsj6xr4n3c1hwdth12hy5zzfsvhvoh6wr8ussa7ss2sfx2ubnwed31zb1tduayjpcvysq4y0vgq3igc4gjf6ns56r32l7cnjqfjpspg0goum4820cumr4npqpa6c3s1ypxm798brkzxrmtavvxq8mrzhzvjkduntd972iexvyadnxxf09g4j7cn3\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"3079\",\n        \"principalId\" : \"ug7g\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Iowa\",\n      \"updatedAt\" : \"2023-06-04T04:41:34.101Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"ypu56togu2\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 17\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"fm0g\",\n      \"createdAt\" : \"2022-05-16T06:43:41.101Z\",\n      \"maximumThroughputUnits\" : 9,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/598137\",\n          \"keyName\" : \"Yolanda Hoppe\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"u2l1\",\n      \"serviceBusEndpoint\" : \"31ty1bfqdbcm1o4i3p1p7h1p56p49j\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"8wg7\",\n        \"principalId\" : \"tpq9\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Texas\",\n      \"updatedAt\" : \"2023-12-12T11:27:02.101Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"6hrf8dqurcfikfa0psz47fjvsgslo86hzd7yo24fmgrn\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 2\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"433e\",\n      \"createdAt\" : \"2023-03-07T19:50:54.101Z\",\n      \"maximumThroughputUnits\" : 5,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/102753\",\n          \"keyName\" : \"Long Greenfelder\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"hv2v\",\n      \"serviceBusEndpoint\" : \"rc9k966qzdgmvbq8lr2c07lm9wharmm7v7x0vxyf38ee\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"x1n0\",\n        \"principalId\" : \"b6p7\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"Arizona\",\n      \"updatedAt\" : \"2022-09-30T07:41:31.102Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"vwrqosaukn61i2vnwk5fm19m0zfhu7lcf6hvxs54yysrn8w8aqjfm4r4aiwnh6cvcglamv70pqwxtni2rp10wx7k0j0e6bm1iuplqrsk262n64l8\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 14\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"v0lm\",\n      \"createdAt\" : \"2022-03-14T00:01:51.102Z\",\n      \"maximumThroughputUnits\" : 18,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/941776\",\n          \"keyName\" : \"Mr. Felipe Leuschke\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"rv75\",\n      \"serviceBusEndpoint\" : \"6xw2x6ry4pxwkqyr0w3h8l5y6iq6pcfz87d8ybxk3dmn0s5o9l5nk0baispn5zyld0pk\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"502z\",\n        \"principalId\" : \"9j9i\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Virginia\",\n      \"updatedAt\" : \"2024-02-21T22:14:38.102Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"nvuba6s1k71rwrdixjybf0p11jg5mgys6jfkee4jc2rmq13qexmhzgtnfzuvkcum6c5kirxb9dnghplopkej5z9x01l3x5y569sab95k0rx3yk2g7vmnatpylx0d3qscyopcd872w56p1kivr\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 8\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"bz46\",\n      \"createdAt\" : \"2022-12-01T22:52:21.102Z\",\n      \"maximumThroughputUnits\" : 6,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/213747\",\n          \"keyName\" : \"Wes Mertz\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"1237\",\n      \"serviceBusEndpoint\" : \"z777ktjigq53yf8ohw1xgw7dt1nr4gnn1a4vicr5rxh692zju1h4njfv4hqo4y6fawgy7gsan3hdszne80z8gtxg\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"3068\",\n        \"principalId\" : \"d4rq\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"New Hampshire\",\n      \"updatedAt\" : \"2023-12-06T08:40:45.103Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"9onfyx3rku6g12xvzuku23bces9g4mh4hicp7ipa143fw8kxrt3vswkg364c4nl8ir5bz5m30j65964prr72ta4qp3rlof4tteyn0jl4ln6zxsbnx6igf16si3igt8b5swoxu\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 11\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"l67f\",\n      \"createdAt\" : \"2024-02-03T00:40:06.103Z\",\n      \"maximumThroughputUnits\" : 13,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/304337\",\n          \"keyName\" : \"Deane Lemke Jr.\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"9c9c\",\n      \"serviceBusEndpoint\" : \"8bxut339uoy9u7w0sxpdgregtsy7dh4ag745x4bywxaqd8qsmpchp3ck8tw63zzmmzb34tcyib7vj30tavk6he2qil9zt9jx4s5s4jguziktfggv7zlwlwkldr7ic5k3t4\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"5w42\",\n        \"principalId\" : \"8sa2\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Colorado\",\n      \"updatedAt\" : \"2023-03-15T17:19:19.103Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"fhm5wdhb2d9wr12egm2tlcfvdaj2c9zvfu9c1fpjchb7ofmxrfxramvpkadt9gpse9278yrtmzs350gmy8pl3bbqocwf6s\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 9\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"1401\",\n      \"createdAt\" : \"2023-04-28T00:46:39.103Z\",\n      \"maximumThroughputUnits\" : 4,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/464801\",\n          \"keyName\" : \"Ms. Tifany Hoppe\"\n        }\n      },\n      \"kafkaEnabled\" : true,\n      \"metricId\" : \"k781\",\n      \"serviceBusEndpoint\" : \"ly72vjxv9b2l573q46l6yrjfq32s5qj1yllir3rkv8qhvck3fps12xm9fysi83y61w78pb15w37oomr4j2ymrgvx5t4bkr9pisw2pqfh\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"35bl\",\n        \"principalId\" : \"gb97\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Nevada\",\n      \"updatedAt\" : \"2023-11-05T08:30:25.104Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"wm4skhbw42d6si295jnun0a3bftjd8ycpcc4dc1oj07qrxa3n\",\n    \"sku\" : {\n      \"tier\" : \"Standard\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 11\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"5q11\",\n      \"createdAt\" : \"2022-06-11T13:01:39.104Z\",\n      \"maximumThroughputUnits\" : 3,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/181937\",\n          \"keyName\" : \"Mr. Caridad Gutmann\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"4a49\",\n      \"serviceBusEndpoint\" : \"80qdcxkujjdexzxo2a12dcdxhvp3sji5qk9p69z5gts7fkigybhomttb2p0mgpipsy32jf5oe0n9psfezuz00ly0zna0xohuasaqjzy8iq1k723mnlgm3lo0u5begfdmt423qru5mhnhs3or9brrygbvpj439qbq3t9dzaxvorj7xylf9j8uiefcrp83rfzamuq\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"3tr0\",\n        \"principalId\" : \"99w7\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"New Mexico\",\n      \"updatedAt\" : \"2023-11-22T01:57:10.104Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"3unga85q2ffj78dq5pmt3lbk0wpmcxy25iydpjg6t6vnw7tzf0v1x83wu68g9xbm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7171ef5a-f973-3e15-aa74-75fb18a3bd2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "ff48448b-79ac-38a8-a6ae-ec5b58bb05c8",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... - 202",
    "request" : {
      "urlPath" : "/subscriptions/8e8b/resourceGroups/Andree+Will/providers/Microsoft.EventHub/clusters/Bernie+Collier+Sr./quotaConfiguration/default",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "w73znr"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "ff48448b-79ac-38a8-a6ae-ec5b58bb05c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Configuration_Patch"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "66bb481e-bd89-3f1d-bf60-db2712a13492",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/lyud/resourceGroups/Mr.+Stacie+Collins/providers/Microsoft.EventHub/clusters/Mr.+Estell+Dicki/quotaConfiguration/default",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "0m4szx95sxzzrm5xg4w4g25wwlaubdwy99jetdmm"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66bb481e-bd89-3f1d-bf60-db2712a13492",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Configuration_Patch",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "ec2292cf-7ffc-38d9-b938-90cc95264c9e",
    "name" : "Replace all specified Event Hubs Cluster settings with those contained in the re... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/2so7/resourceGroups/Mirtha+Corwin/providers/Microsoft.EventHub/clusters/Mrs.+James+O%27Conner/quotaConfiguration/default",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ii7m1k6o3de7bu4urrdl0ra3kyi7fguimsa2b1u19wngxjgrzmhnvpmsz2mtl1uef2507237auy9d0dna8w25thgail6o0yyl49tcdxylgeynalp8kxej178e4z0rp6a0fo03bv"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec2292cf-7ffc-38d9-b938-90cc95264c9e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Configuration_Patch",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "aaf5d198-3f32-314a-9d6a-783cd4b0a13b",
    "name" : "Get all Event Hubs Cluster settings - a collection of key/value pairs which repr...",
    "request" : {
      "urlPath" : "/subscriptions/f1mg/resourceGroups/Lauren+McKenzie+I/providers/Microsoft.EventHub/clusters/Robbie+Terry/quotaConfiguration/default",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "2hkit3u38pstv5bfz6l8uanc3ux1lwy4i3o1byyejo98xio8cwc039squhauklvxep6r4f1pnpjorx268w5egcukswbn1mmqh9f2nd26"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"settings\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aaf5d198-3f32-314a-9d6a-783cd4b0a13b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Configuration_Get",
          "schema" : {
            "type" : "object",
            "properties" : {
              "settings" : {
                "type" : "object",
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "All possible Cluster settings - a collection of key/value paired settings which apply to quotas and configurations imposed on the cluster."
              }
            },
            "description" : "Contains all settings for the cluster."
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "bc82eb2d-0f7f-368c-ac89-0f016e6a1d8e",
    "name" : "List all Event Hubs Namespace IDs in an Event Hubs Dedicated Cluster.",
    "request" : {
      "urlPath" : "/subscriptions/28f4/resourceGroups/Buster+Fritsch/providers/Microsoft.EventHub/clusters/Monique+Kuphal/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "b5s1cysqd2l8fjgfc6ajwb09jo8idiwj1yp8re6wauuiegxowc6lm0id6zt9gs2kw9duyfdq4slzyncd9"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"id\" : \"463l\"\n  }, {\n    \"id\" : \"5472\"\n  }, {\n    \"id\" : \"74an\"\n  }, {\n    \"id\" : \"3fng\"\n  }, {\n    \"id\" : \"820y\"\n  }, {\n    \"id\" : \"441c\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bc82eb2d-0f7f-368c-ac89-0f016e6a1d8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_ListNamespaces",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace IDs operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespaceIdContainer"
                }
              }
            },
            "description" : "The response of the List Namespace IDs operation"
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "24726a78-d4e5-334d-9831-ec058c6b5bd9",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... - 202",
    "request" : {
      "urlPath" : "/subscriptions/xva5/resourceGroups/Jamel+Pacocha/providers/Microsoft.EventHub/clusters/Alonso+Nader",
      "method" : "PATCH",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nuucow5vrj2wb7kpcse72mndsh8d0lx7j9t5nwtji74qan0l6qrjg5o4fobwlpa2b76meb1tjqc3erdnywon5gsu3sdnt2dptjkx1"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "24726a78-d4e5-334d-9831-ec058c6b5bd9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Patch"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "96ed82a5-06e9-3868-b0d4-2358e570585b",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/3m8s/resourceGroups/Una+Armstrong+DDS/providers/Microsoft.EventHub/clusters/Ashley+Nader",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "53rrq5fjypprfib87al21iyv7c6ptcjfwnelk4aaokpnreibgoqhjhk3rv51l5euvznzz70o3t7yxut2jtwo0xqpvf0ai1ercx2b72wu8xga5zwu9p9j04y42zw86wgbldfpxh"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"yatm8h00ofkc3w64otlrnbj0aezw00pzc7njbn3tmpag6tnofkqkk79llg57jjud5wgw0wqlg0t\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 28\n  },\n  \"properties\" : {\n    \"metricId\" : \"nfvq\",\n    \"created\" : \"z3ep885myim10ncz8bulcglygm9gkj524s9zab8t91zk8uhh5dlcwuihoa9kyhu5tndrqhkp7pn1vprxnk35kqpzyti4o6qj1rvqjosuisl0pca7m8yk47u07ezrn9d99tivqmggigeg696v3mjnkfus2611n4r4rvscofs3as626ev1hopnswkvsf4fjlcmi\",\n    \"updated\" : \"2022-06-23T14:14:19.098676Z\",\n    \"status\" : \"l45isd4ok0od3zb6\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "96ed82a5-06e9-3868-b0d4-2358e570585b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Patch",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "c701532d-fe8b-3229-974b-928fbe95e848",
    "name" : "Modifies mutable properties on the Event Hubs Cluster. This operation is idempot... (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/po4v/resourceGroups/Marguerite+Ziemann/providers/Microsoft.EventHub/clusters/Mack+Predovic",
      "method" : "PATCH",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "xicj78h7vv2w191vpansxfuepkny9lu0lyxgkq5h7r4hmd4g056tk4fjo04ed7cslgibd81fvidclyqmhnzi4nw3qmcuf8u28oc3me3qcv6ucg1q7hvva1zles"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"zzhidzkgoli2t4qz98tgyqiy87i51vtn0w5zfjzj06kpg8wu0cneo9us50dtxe7wqw6xa9hcrbgrbkgjic8m3c4hut854z92a2odnawnzbzazbku3hgmxscn30fuuq5de1kmh5i0yq8ssmu5kp0i0otnkcby3akcnr9pyk0aj\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 6\n  },\n  \"properties\" : {\n    \"metricId\" : \"f112\",\n    \"created\" : \"ez0mw4683kulko1nxekj4ejy9wa1chr9wlfon6ecv6m9e203hrrungi16a03ccuhhe6dvw8n617\",\n    \"updated\" : \"2022-10-07T15:33:19.098301Z\",\n    \"status\" : \"skmyd6clqo89cd8oluybdycehxurrlx74up5izfgrq2yvxbsqc5ixxnrzmdk9t1ekoaffdf8jnipqn5xxtfknmxvg3rjnd92i5ar3uolga8fbddvwa0ubhuty15qjrpsc3ssw4i1ycjpodrrpz3gheelfg62ahq2ljts8phej0fhaavhv3omh5kkivnz82qkl\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c701532d-fe8b-3229-974b-928fbe95e848",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Patch",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "6c40647e-56eb-3533-b8e0-aa1be80eb589",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 204",
    "request" : {
      "urlPath" : "/subscriptions/hoqg/resourceGroups/Santiago+Labadie/providers/Microsoft.EventHub/clusters/Bennie+Paucek",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "ivx1rwt2lyl5n59oicc0cu8549cfgfvlb0hyylyxl3zqf0erajy91ezdgu8iuw6abv2w95o1uevhkklv7vfagx562coib8dqasw4gqf2eks3l1xtdqaacpu7fn3zr3dy5muj37zz053303445g3r6gu1lnqlp5kqnm8zqdss"
        }
      }
    },
    "response" : {
      "status" : 204
    },
    "uuid" : "6c40647e-56eb-3533-b8e0-aa1be80eb589",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "fcec0628-df59-314c-8429-fc7ecfdcab5c",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 202",
    "request" : {
      "urlPath" : "/subscriptions/70t4/resourceGroups/Lila+Effertz/providers/Microsoft.EventHub/clusters/Shelly+Greenfelder",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "bf6a969xs0hjp783zs4bbbpnc90jw6zt97u8rrnx7t"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "fcec0628-df59-314c-8429-fc7ecfdcab5c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "8c2850f3-5f78-3879-aae9-de92d105f8c7",
    "name" : "Deletes an existing Event Hubs Cluster. This operation is idempotent. - 200",
    "request" : {
      "urlPath" : "/subscriptions/6z2c/resourceGroups/Emmie+Hilpert/providers/Microsoft.EventHub/clusters/Mrs.+Florencia+Greenfelder",
      "method" : "DELETE",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "4xnymuyua82l5spytpw9okkxwuimemgjy0nkc1g6hhkvtk369sxdbvfv1te8zmbyp0fy5ihab8m7131qya4neg018d"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8c2850f3-5f78-3879-aae9-de92d105f8c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Delete"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "dd5e8cbb-4cbb-37c0-9334-7e723e37d784",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. - 202",
    "request" : {
      "urlPath" : "/subscriptions/6tzd/resourceGroups/Hannelore+Grant/providers/Microsoft.EventHub/clusters/Yon+Parker",
      "method" : "PUT",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "a6e1yfdewzgg0adi23854cmmndgslwuokua1j7gofsd8way3akjtvhg37kedrhj0qhdy6biwjl2agml83xot6smo04o21426ky1xvpnfsux42hssa7i8mjd1huwcdqexl2guun1o6poso1n3ranw1gtjkpo3"
        }
      }
    },
    "response" : {
      "status" : 202
    },
    "uuid" : "dd5e8cbb-4cbb-37c0-9334-7e723e37d784",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Put"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "160f8fa2-66c4-3be9-9de6-5965ccfa3a3d",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/7qvt/resourceGroups/Mr.+Tarra+Ward/providers/Microsoft.EventHub/clusters/Karoline+Lynch",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "22zxchhcpgzowhi2z8hqq4qw55xj9pnaplas6xw2c8dv8n47g5ug50tbhnkoonnkthr0jy42dynlc3bjzhozdnjh0x5lddr7h5bqnniszdlqvs9qtrqlq0dkm682gn7rl2dxltoor9ihbn1ghnm20wd2sih4pk8kyi6mz40ezmrba4b179qn"
        }
      }
    },
    "response" : {
      "status" : 201,
      "body" : "{\n  \"location\" : \"hbhljmr9nov7g5uplxylkk84w5lvqusqtq23qlyf7x5pimr37p8k0iyspcuzcuq6inb5of8u9dzrhyvywx0ith3i2zyap0cmkf6n9\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 14\n  },\n  \"properties\" : {\n    \"metricId\" : \"521c\",\n    \"created\" : \"oa9d0ivut1y7ev7jflvpdw3k8rqw67ws6u0qog6j9g2cu34q9mohp3u1o7cicbyvtp79d9aeitqwiv2066ephjsujq59mhv1hl6r4py5posocnz433fyo9x5vpxq0gfjvq24c0kiuogbwv9aygfjmnokbzd1shge1vqzyi2ohpo2z\",\n    \"updated\" : \"2022-11-16T15:33:19.097237Z\",\n    \"status\" : \"o0qji5si\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "160f8fa2-66c4-3be9-9de6-5965ccfa3a3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Put",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "92cdf7ba-496a-3b2c-9f75-a0408ac2aaf3",
    "name" : "Creates or updates an instance of an Event Hubs Cluster. (application/json)",
    "request" : {
      "urlPath" : "/subscriptions/pj4v/resourceGroups/Joesph+Jacobi/providers/Microsoft.EventHub/clusters/Rachele+Harris",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "80hdvvczw2182stzzvsnnwpt54xdtit7ou3wzsi6vritmp2ub34a4lz4htkw6qr5p5i6qnw6wdwuhxxbvy659o"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"62aw6omu9tks7g1fpgwosktqazcexaa2uwfuz591q8s7q6zhfc87e0oqr46yghexjb2i365yws8pdzm7nicphn2uvhxms86eg1g7acumz6g5g8c4umsapxkqykyjeebc9gsiwb14jwbgvkcrr52g\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 9\n  },\n  \"properties\" : {\n    \"metricId\" : \"i8i8\",\n    \"created\" : \"sbkvnpqev\",\n    \"updated\" : \"2022-08-22T17:02:19.096859Z\",\n    \"status\" : \"mocv9ul9r00b4zo8f5l3gmroovdpg77hjya8i64dp418gz0zzwwboykw3yhv5bfxv7h49mfbzdoym3toowah3fis5m1rzp69eoje2yfl5\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92cdf7ba-496a-3b2c-9f75-a0408ac2aaf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Put",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "f56c3c49-683d-3290-8261-061d8ea7728e",
    "name" : "Gets the resource description of the specified Event Hubs Cluster.",
    "request" : {
      "urlPath" : "/subscriptions/k421/resourceGroups/Boyce+Wisoky+V/providers/Microsoft.EventHub/clusters/Tena+Huels",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "nrrwwhmwhy4725izl1jezdvvood3uvzy1scodierrzxhxxp0as06afww8zw72pxtpr9qrtdv96sg62civw30g9mv10na6pqgg9opujfnf19c6j6q05x8l011sy2sdjkht8imlkgewj313bpeml2hl0p8wpdgl7ptkn28q84msk6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"location\" : \"sz03bsk4lfoefs407kqttz5j3rrd1l0q3trtcob6dqjr72egx\",\n  \"sku\" : {\n    \"name\" : \"Dedicated\",\n    \"capacity\" : 16\n  },\n  \"properties\" : {\n    \"metricId\" : \"ipo2\",\n    \"created\" : \"s7wfy\",\n    \"updated\" : \"2023-02-22T15:11:19.096459Z\",\n    \"status\" : \"tpsevgtu7xd8lm7ya611att6q4811vp8eu7sdyzi79x9042id2w2yi\"\n  },\n  \"tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f56c3c49-683d-3290-8261-061d8ea7728e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_Get",
          "schema" : {
            "properties" : {
              "properties" : {
                "type" : "object",
                "properties" : {
                  "created" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was created.",
                    "readOnly" : true
                  },
                  "metricId" : {
                    "type" : "string",
                    "description" : "The metric ID of the cluster resource. Provided by the service and not modifiable by the user.",
                    "readOnly" : true
                  },
                  "status" : {
                    "type" : "string",
                    "description" : "Status of the Cluster resource",
                    "readOnly" : true
                  },
                  "updated" : {
                    "type" : "string",
                    "description" : "The UTC time when the Event Hubs Cluster was last updated.",
                    "readOnly" : true
                  }
                },
                "description" : "Event Hubs Cluster properties supplied in responses in List or Get operations."
              },
              "sku" : {
                "$ref" : "#/components/schemas/ClusterSku"
              }
            },
            "description" : "Single Event Hubs Cluster resource in List or Get operations.",
            "allOf" : [ {
              "$ref" : "#/components/schemas/TrackedResource"
            } ]
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "3d9cef40-fca3-31b2-a5c4-295c0f14b7c7",
    "name" : "Lists the available Event Hubs Clusters within an ARM resource group.",
    "request" : {
      "urlPath" : "/subscriptions/2i0j/resourceGroups/Dana+Kreiger/providers/Microsoft.EventHub/clusters",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "1xmkbmv6mjq6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"7obgbq6hikdbg8nagdop3486gzxphjgqinridd5qt85q38ltqu3yeti\",\n    \"sku\" : {\n      \"name\" : \"Dedicated\",\n      \"capacity\" : 31\n    },\n    \"properties\" : {\n      \"metricId\" : \"2099\",\n      \"created\" : \"uaginq77wwmztr05ftqhjmjr1cg0unshiylwowjz3qbkdqkfu1ausai6nubs8sqzqluq56orvk1tadybll0tzbasowckxrytojmoqz37e1nk0tf8i6m3a9tc55z6cg2zm8smeojwjys3lprfyzay3p8\",\n      \"updated\" : \"2022-12-25T14:40:19.09611Z\",\n      \"status\" : \"szw97mm\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"m9ytpbxlwwe7e7waxq5rh5mz2ta32aghe2ucn9e9o1s8aymeroxgclbuczfbu4thjwbd1gl0b8w930r2scmbexpaxse1pyrfe0ndqan2wxkdpkkb586ep5wbjfkdja3v2g64shujsx05bk7vuqb16dux5l\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3d9cef40-fca3-31b2-a5c4-295c0f14b7c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_ListByResourceGroup",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Empty unless the value parameter contains an incomplete list of Event Hubs Clusters."
              },
              "value" : {
                "type" : "array",
                "description" : "The Event Hubs Clusters present in the List Event Hubs operation results.",
                "items" : {
                  "$ref" : "#/components/schemas/Cluster"
                }
              }
            },
            "description" : "The response of the List Event Hubs Clusters operation."
          }
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "e2d8425a-1f18-370d-8f1b-ee3bc5284759",
    "name" : "Lists all the available Namespaces within a subscription, irrespective of the re...",
    "request" : {
      "urlPath" : "/subscriptions/23z6/providers/Microsoft.EventHub/namespaces",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "gzggnolscf1uliyj7h7m6l404nbsh3zp9npd88gdulafu0p4ldoupgpwcf9iom000cz9xrdisz17b82mrn528gvft9n5k53nescvcwxw1b7f84z62atepkypsvum2bb57gy7akbiy7wt9s34dkx"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"tkymb36gq9i4fzbtrxdpzg0338ran1j5oqzrkzq4ycc2cvqub7u8tska2r0hlphu5kx7xbqql71j4o0veuz6edjl2r2pnseskduhemc03iyc5ir4iy5p5fh2ruevwyzsitxml1b802avv0n0ma3cfb1e1mgmxmdyl3vpcbab4p9y8b60y01kgcwwkpmy6wu1f1nm3t74\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Standard\",\n      \"capacity\" : 0\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"ny8i\",\n      \"createdAt\" : \"2023-06-04T18:55:59.094Z\",\n      \"maximumThroughputUnits\" : 15,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/388754\",\n          \"keyName\" : \"Duncan Senger IV\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"c39k\",\n      \"serviceBusEndpoint\" : \"nye35zwa2e1r8he53cpbmo34yfx8jp6cyinyw2aac29j4nzmyd9b6771h3qfkydkyp4f19ha85gdjf60xzpyi4mbksfta\",\n      \"isAutoInflateEnabled\" : false,\n      \"identity\" : {\n        \"tenantId\" : \"1k7m\",\n        \"principalId\" : \"dh36\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : true,\n      \"provisioningState\" : \"Michigan\",\n      \"updatedAt\" : \"2022-11-18T22:31:29.095Z\"\n    },\n    \"tags\" : { }\n  }, {\n    \"location\" : \"gh1zxzcbom517iaxe0gisl6ce9hy358cu\",\n    \"sku\" : {\n      \"tier\" : \"Basic\",\n      \"name\" : \"Basic\",\n      \"capacity\" : 13\n    },\n    \"properties\" : {\n      \"clusterArmId\" : \"0yg7\",\n      \"createdAt\" : \"2024-02-16T06:43:22.095Z\",\n      \"maximumThroughputUnits\" : 12,\n      \"encryption\" : {\n        \"keySource\" : \"Microsoft.KeyVault\",\n        \"keyVaultProperties\" : {\n          \"keyVaultUri\" : \"https://web.example.mocklab.io/777487\",\n          \"keyName\" : \"Nick D'Amore Sr.\"\n        }\n      },\n      \"kafkaEnabled\" : false,\n      \"metricId\" : \"n89j\",\n      \"serviceBusEndpoint\" : \"v3a65vbwqo382nou7kvyqxdv84mo17mjmxskzc9usmj11tzs6t81okowuwuxo5eyqtftmbr73csj6xy5b182iih5c1l5ov2z2n9rf\",\n      \"isAutoInflateEnabled\" : true,\n      \"identity\" : {\n        \"tenantId\" : \"6483\",\n        \"principalId\" : \"1zt5\",\n        \"type\" : \"SystemAssigned\"\n      },\n      \"zoneRedundant\" : false,\n      \"provisioningState\" : \"West Virginia\",\n      \"updatedAt\" : \"2023-06-28T08:23:05.095Z\"\n    },\n    \"tags\" : { }\n  } ],\n  \"nextLink\" : \"kjt28sk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e2d8425a-1f18-370d-8f1b-ee3bc5284759",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Namespaces_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "Link to the next set of results. Not empty if Value contains incomplete list of namespaces."
              },
              "value" : {
                "type" : "array",
                "description" : "Result of the List Namespace operation",
                "items" : {
                  "$ref" : "#/components/schemas/EHNamespace"
                }
              }
            },
            "description" : "The response of the List Namespace operation"
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "73b79f02-1f4d-3f25-8aa3-8cbd1c105817",
    "name" : "List the quantity of available pre-provisioned Event Hubs Clusters, indexed by A...",
    "request" : {
      "urlPath" : "/subscriptions/w4fa/providers/Microsoft.EventHub/availableClusterRegions",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "d0nrzmg13eo5xb4kbwdv01sp9mav056jlu30j3myrud2h3nsgmc4j3s1tyh99em39m361uy1pc3xcq5bbmmdh5thpwujbpnjghziy0pzz7ub5aqa3d5p04vxb4zmeq6xr368kiubqc6s3e70pq6yfh89n5jaqu2w1zyz1athdme0bq"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"location\" : \"u3gb327bug7p8fx1m0k2fhfr6a1sllqo78nlg8rvjrht7txbn4e9bf2h73igfeat94dfwfmyiyialqu\"\n  }, {\n    \"location\" : \"8zrzgjfozt84zi4emnij8dkei3gmxpjvhwdqa5m6g3ycrsralga0ticvyzq34lnls1suypwo0ivbupx\"\n  }, {\n    \"location\" : \"ay3otrwosqdu1koqg95c85b4axaaa94kpsg2soyme4645gduf5a6hezw1vrbccgz2iapqmm8f3d9t3pevh6ftiz5x7so2rppxmotmurerdick87udj\"\n  }, {\n    \"location\" : \"0gbdtycvlyet0zvwkx81ektka3su95\"\n  }, {\n    \"location\" : \"ajzux42vm8bg2icag4z6q7erby6p1czvdcnzgu6s9795asmtybnfonxwlednsm55zmcfqo7ugsteaq0\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73b79f02-1f4d-3f25-8aa3-8cbd1c105817",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Clusters_ListAvailableClusters",
          "schema" : {
            "type" : "object",
            "properties" : {
              "value" : {
                "type" : "array",
                "description" : "The count of readily available and pre-provisioned Event Hubs Clusters per region.",
                "items" : {
                  "$ref" : "#/components/schemas/AvailableCluster"
                }
              }
            },
            "description" : "The response of the List Available Clusters operation."
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "f8e5dc40-fcfa-3d44-9c91-9cb83494f6be",
    "name" : "Lists all of the available Event Hub REST API operations.",
    "request" : {
      "urlPath" : "/providers/Microsoft.EventHub/operations",
      "method" : "GET",
      "queryParameters" : {
        "api-version" : {
          "equalTo" : "k3c2cf5jso71ps2vi5gnfueryw1zrqhar44l4x6q3ckrv109ials28w5uxr3ev9diic8rcb9xunadg9d061b2yci158bclwztlwsppytbicqy2arph7w6ngufi9hmsde4i5cx88yuc2kzzfzsrngw8hl9y1z3brgvfups0hcv5pr0q445t6qxkrb2jlkt3gqv5zpyp"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"value\" : [ {\n    \"display\" : {\n      \"provider\" : \"ldfocyqmucmgxjqab5a2s38n4bvr5cvnxu19sa13yia34afkuyhek80u22q9edec41uua1212nej2hecin81oli5xyz0c7l4m6uk1qstxrhh5fzuu8t3fucq1ay6qite6c8ntkzus5kpbkbfjs2wuoi70jjl8eq7lrhb7dwkfhsuy0pmpwpgjlzgcctefenhm0y7lo6j\",\n      \"resource\" : \"wxkh9ob0vzm9oinfrqx5z1t0xq6xddkhshlpuowgn80kcatxn5isfaasz318i784yrmqur7kgp1o83lhvk7uosoit56q6fuuwl1yt2bp45a1okg7plqqbsd7f5lqkmc8fxwawc27mygvhti6ium0j91qt3ai4va1fg6jy9ywly2\",\n      \"operation\" : \"ctw5u5p73rtrmcp5fr6q2vn6pzd4ntjf87rj0e1hou0cf4nvyjv94gisdpjjql63gqec6pgpf3ndxmhaxid0vyl05e87s2uafztrka1\"\n    },\n    \"name\" : \"Hipolito Boyle\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"29z5yb4hi3mvwpno7qo1hkbjcrp04tx7q1ksj1jshg\",\n      \"resource\" : \"ly62ohy1o3675ci9n8ip2aolsbskmekmt7hpvt50mp9oppfxmlgvx5jsmzuv6pjlz84bz0n0wxcai68t2csz62\",\n      \"operation\" : \"y150fpymdgh0\"\n    },\n    \"name\" : \"Ms. Leigha Wunsch\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"w3826g86v5ux27y4yxgdwexol4ddknzf4ywrlw596fwwsbq5igls17lvmv56m1kdhumiozxxqkg0\",\n      \"resource\" : \"cvpm1kuc\",\n      \"operation\" : \"1fw9scnvveuwbsutppzltzk5zghvgjd9ss9a3j5t25ru1yehzj1eymkec8gdny5p18p00xcjixuldyv3iubtrez7f04yerk2rz2qjg7e6l7ici57br17cwge595cini2kydsv2iejdg43\"\n    },\n    \"name\" : \"Stephenie Smitham\"\n  }, {\n    \"display\" : {\n      \"provider\" : \"t5ljp6g60vwab8g24jaye4e2sffa9llynj3ah8rkcjt8zkp1nztqmi3uadkpuxnz2zcje0ct10eu7ud58nqis09i9brizf5jrk2jidsdacpj4woh9qd63izj7adou\",\n      \"resource\" : \"w3f7shr7133xyts2guqbqz7r395f7r0rem7e5cpiu80mx56xybcwju8cj92azbvwcib4m16puw1awbj0rzfpl25ufm9d6sb75fyhvsczw2oao3jggajuuxmhrfbi01csqqps0cg8kzra1nuj8dpokkfh0cslx\",\n      \"operation\" : \"u7i0\"\n    },\n    \"name\" : \"Rodrigo Breitenberg\"\n  } ],\n  \"nextLink\" : \"bmi7r993wchiisv62l4e4kbrhy3pnlnij61026zjwy5x5nn9hw234nw93qlcmi9fn3jmgc4j9eu9548tnpze091e8n2j7ox4z2ncgn3tb18qg38k3m6zh381lcf0iyn9chmqv06vbdo9fxpop5jbzs3vstfpa\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8e5dc40-fcfa-3d44-9c91-9cb83494f6be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "Operations_List",
          "schema" : {
            "type" : "object",
            "properties" : {
              "nextLink" : {
                "type" : "string",
                "description" : "URL to get the next set of operation list results if there are any.",
                "readOnly" : true
              },
              "value" : {
                "type" : "array",
                "description" : "List of Event Hub operations supported by the Microsoft.EventHub resource provider.",
                "readOnly" : true,
                "items" : {
                  "$ref" : "#/components/schemas/Operation"
                }
              }
            },
            "description" : "Result of the request to list Event Hub operations. It contains a list of operations and a URL link to get the next set of results."
          }
        }
      }
    },
    "insertionIndex" : 42
  } ]
}