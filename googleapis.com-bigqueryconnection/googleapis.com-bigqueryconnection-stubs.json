{
  "mappings" : [ {
    "id" : "4786c19c-f22a-4916-90d9-55fca18557e0",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1beta1/n5rp15r1irjkajmykv49ocg0cm6ygu2vuffqlqpvrfwk2dx3bes35h4kydckhjnpj7r1c841q6ra1ie67h2f6doi7pqvvklpmqt41jdvrp52r56ty1bbstjdisc9uiws64f5kor:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"o4x3w4n1d9ntqkgeiom7reqrzxh7owl5yf7crnuj23mnjolcc7b3sacn0iqer1t8g07c7v8ato\", \"juex3nsaratt4ajo\", \"6gz9g4nwncf1ak1w3wiiz67dlmp1k2oqg8llr6erotml9yl3prb5aig79jt4lo6jyzvqm865ecfmjyeqlyqhokrmx6fjdezc1zd7v3ptdjk0artovcb7x41dxt49hzcocwysd6a0isqjcldmgmm8sv514247l3otkknx0xyalxcfwx6ozlyjj4j\", \"hbeu3a5kdkl3a9bgroeng8vx77bvdi3piw1qo6ifxk8f655j8g3n8e7mz5oydwd4go4b1cmfa886nlwnz\", \"k44uckqgluo9rkv45l4c62bs8faki28i775zp6yttjre4t67ifnirzuq75ceooddzw0pw8tpy256f68yi0b4ka9ihircatdagxdcrliearq3wvhzpjimv\", \"8fu42ttihoug5ltt7h4cqcvhxkx3xit0fzjmm3rcvhl2y7siqc\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4786c19c-f22a-4916-90d9-55fca18557e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:24.852719Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryconnection.projects.locations.connections.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a7a826e6-6823-4653-b7f7-a224f8dd02f8",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1beta1/xpz3sdteptcuupig36tpb2yybma0m1mc13rkhd3s3c8hgu6yysta4c9xxc1h4gws8njlbcc1eur532jimqtozt9g9ej8ugsdyzdqc:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"jlj4ml03d1qyj7r6bsp95tp7araia3zbomfht8nors915sshrf8s0qtrwnp1tdijaobftkpw2q659r6zzm2xmho\",\n      \"description\" : \"Maiores suscipit minima est et doloremque dolorum nihil. Voluptatibus est animi. Quam rerum consequatur esse molestiae corrupti laboriosam.\",\n      \"location\" : \"3e9tjl0w02vgiktg43btsgqhxxl5vcr62suqwzbgdkkgxekypiyge9vr3pd211frumzcshkmwv5soj\",\n      \"title\" : \"Tempore quam dolores odit voluptatem.\"\n    },\n    \"role\" : \"ds3z8satvm046ckx\",\n    \"members\" : [ \"k15ugqhls8nvhygmbcmshcq6dwz2lhvfwhrjnlnd6s5x3c6lv2795e17hqkipc6eafwp5ls41hdsufcsdmwpmi4946qpbawiokvfaiz6g050h92rztdflxhhcbdwg73x8z42nc1brrgfcwfq71vk93idflp33lceghnmofaoayvb4x4ycq\", \"xjosrsnh8bdaia55rhqv5ns846qkw7tnp1id0c4gxf3hsj9\", \"4m9pnkq7\", \"pmf7i8ypxyxeq8bnq5050oym9cg6zuf3m5c58ryhnvps9lwh3j8xaid9d2uasj1or3hz71oktl2k9sw797hqcqraq2qde4fof6oggp5vbdqv1o6ho5ksqtq1mmpudcnj3581vlbqlt8vzlcd5ix3jn5xbw6qkwsg5cygbt29nbt344w9aov847jbrqd3w7\", \"boqxrzphrywuiwnxoc8obxm52rhrjy42bj5ht8hn792at11tw6c8u8pyupx0i7dllpfn3gtnrs6udadwhx1p4qbz76f3tuadieffmzh7rcys04cf6x5ipwj2txe7c82cxiaa1mr5p7div6k54angtor1huyg243k61nby4y26ng01dyw9skxb2yhp9\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lbwnyphx132naioxk5e343h3lqh2wnbysr4781q8tabtvmyota3dd1r6it5swb3cfrs6cfghpli04gu5247jmvgiqyz83no2g50lcaeopxtz140usk0otcw5ehpz0xsmg7ocryowksuu3sflrhblqiy4l2\",\n      \"description\" : \"Aut et eaque tempore. Sint quibusdam earum et laboriosam accusamus omnis modi. Fugiat sit nulla et quae id labore quasi. Animi voluptatem saepe laudantium. Quia qui ut aut omnis occaecati.\",\n      \"location\" : \"35myq4kudc63ft8yy614ke1nvyp0kjfr5njrxb9s9zoyc9w0vweizx220dh083k56qojluxbo7f1ca0noswx52edgf07p66e9g82b2y58s2sa4qzvq7l8y9jdopk69hu1i3g6yyrk2m\",\n      \"title\" : \"In dolor quasi perferendis consequatur minus similique provident.\"\n    },\n    \"role\" : \"v68q48n50jdjyr6moi4ust05f8k1xg8j0f63m83zqu02nsej2slnr5hsaanff0\",\n    \"members\" : [ \"m78mgtwvbdaqck4talm8wtzua2a9fanrexev92j14zlz7bltutedevhkshrsbswi3cdrlibs3z54gin09bcin2jp930gj59th30mph3ssoflkw7w3s97cybl30g2jrakga4wn3smrma9e3prkzo9g6ytwxzds76g8ebw7bq8z67x65po0gx\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"qgz5d6ygdexkl3l25gyhn5ss4po4trpjr7h2fhcm4134uxj6b0hnisnm1gc6lo4bcd7shoz3b36tlpjrcsu28xfi573w4kh95987wwyex1es2mwvg0dw182a0vpso32w0m5dowmkstjz20unmsl82ynrc8t08dyl6l60ex1d40c0bcheec321i6\",\n      \"description\" : \"Ab omnis rem consequatur et. Aut fugiat incidunt asperiores consequatur molestiae. Fuga illum voluptas ducimus ducimus delectus iusto maxime.\",\n      \"location\" : \"qsd26\",\n      \"title\" : \"Provident voluptate voluptatem maiores magni placeat excepturi.\"\n    },\n    \"role\" : \"zr2wqbqswf5ei7r5uolkc8py13kr0l8lxzartw2r0h2v5pmik8963mtr3k9t3qsv9syvlg7jsy8ftcuh4nrrcukyzi5g17z453vqo19v4is624dpqyfrbwa8l8t8yni0pw8qzyocl854s9erwtfo3l78hjw112\",\n    \"members\" : [ \"q2vagip86gmy7mw\", \"jzmwep1j0kl\", \"v7nw9sm5296sqibq1uglicsi5jdafxai0etb8tmdbd35y\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"vbj0hyuo509ppkhpt9sw4urczwelhk0y51xaot5uvkx0lis4970b05ldq1w5z2xptbqol1uzcuivf17onabcbfqsbw1srs6fdx2xwmkpuc0atikperefaff1qr8eb9gocnyqsjlefox25pxnhv\",\n      \"description\" : \"Neque et nesciunt magnam. Magni id vel et. Et officia aut reiciendis vero. Sit fuga nihil voluptas fuga minima aut voluptate. Laborum vel et dicta quo est.\",\n      \"location\" : \"oljsyhm9j4e7j1kjfgsmprq44msc9x1d83bdt20nblicbiuvl3c5996z5lzrr3m7t6wegy65uow2ifojrs3tkwv9betw88e4h41qsw87\",\n      \"title\" : \"Asperiores sed voluptate autem animi.\"\n    },\n    \"role\" : \"dwoiwv7oke46uzwdx78kkl7pe4q7i3t5fx6u745jlbre9b0pyq5amvmm9ea6z1xe4mftfsfeuo59ufupn1miku13tf3ytxddulq5c7u3\",\n    \"members\" : [ \"f0gztdv40xwxojlu5drg5md7g45rrq4n265tdivdisdxwoginy39wq2h219t3htp1otusmnow5ldx2z47fc3tblqa2f8m3ocjg4zj5yczg9dytbd5edbjalmc8aijz5sdc1eegsq2lxpt82kogcbsqmvtlo28tcwq1a5tixuqj96x76uoynhv7dvpujoomihbkxa\" ]\n  } ],\n  \"etag\" : \"quisquam\",\n  \"version\" : 1381116393,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"fc49zkpur2mdltuc5a85wtz8yys4k7475z5t8ekmzxpnxla6xj5bcayz\", \"v6ndmvkiv11qkcc9ftcznb6aysuc7fdnsecpdoowag8m0e2pkoaahepqczk4d\", \"obaaukry1wct2fha5xv67gl76uqlsz9uu4xi3e2joygfcwnue44cnl0z2v3iqll80al098qjn27xwgm1huxn621sx758lbrhgd6chwtlm4zxa19wk78p8uwl9fa745t37dpmrpgel364zxhas77wllo28fnozk06hxwnaf6a4kb6q8ps19wji\", \"or8ffnhw6d07khwy1dyvfooy7tcsd3qx1nt3mubq9u8gfkgqsncw44eugy28md5yrom1hckxds30v3jklp7lv10a0bxm2u3zvb97gi1zhlf9kaglzhfgjksiik6idazskqjk0bluqf22iv4ovw002l99m1gpv49bc\", \"gysowp0fixt05oqu0m59wh6jb648z3gzcsvpgt27x9u49qa09kky03gt8pkib19lz73hsmc0407vlptszdpitos2u5kwlqygqosjcb05jyjd7tpabn6u564pvdnbz6rhgbtu8ksrmybvtawlw4g6if2qebrbfykmdvmvzdehaxqvss0tjkq659c2vkx02g\", \"exck4bxlax6kfntqypxgevj6ekeks6zrc207etyckcy37i09x8087w7phj6lrayrpkvcn7q8283sewwwwhg29jte29kzs0wivbhh3fjy66cnhvus76u88flbcgtsy0tncufgt3noa11g8qs87dhkbsz77d4pybhjfy5rifkhaqzn21bcmjm7fi777b6f\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9hsdiuqqtoewz0b1dvliuod220w3qdrbjgw0veo0vz9re9rz77g24a4ov1r4ixi893y53ulqf3puy075kdxy3p5jnce2bv0cte8yuy2fdr0pycs37t50zz2fr2d279kulgf99uu7x7sjjo1mln4y92mcz2wgwefjumvb2mxnqsul3uqpihi1zg6\", \"x7p1i2wa8i95zik6drx258u8etm7vz7j168ep9qfsn11tv72nz9xkfi6egxhdsfdm0ef69pgqx9rcp94k8mx9fdcr1rzlvggnsbv87dau291bj5g3lo344kzj7ib4cpm2gfossg4su9tjlw9iss3wvf9kf\", \"6wtfeh6sverob\" ]\n    } ],\n    \"service\" : \"dn3c0gfo3nq1mybfts0ipfaet3xz6hs1gelu9u137ez6fxurw7oifyewtiv6aequxpsikcig4dvsagqgxa894nhwrmyoy5yoartaxtrhlgm8hcg7zjzf\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"lwrvbtxhhq6rvf3738svx7mxahmbxg4c9axzzg2y5afkp6rzmwaolcilv0q59d38k646n4s68kjd5bp51npnywh7cmcmgbls7deawppn9fufhasrz4nce7v06o66qde7dplxsbndtwgt\", \"dgv99cvwg7pq7t2hxqjgtibu16psp3coh1wadhdslcumadkvw66gtini76\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"qlxsqcq81ajofg9onu5xj4kht4wasdwvqkcbzc404g643kd074hkg31zr4ww9zbvyiq7tqapg2exhgxl44zv891cteonhyeiycblomfa0tee8rmng15pqom62y5e4hfsuhwd3goz6oql5ksai7dzzuo3q9he0amyqtcar0e8xz6v85ji9bq5v0th5i7nybhuz9zpjq\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"27h6g981iyhprb0hhgnlfrxr84i023zmiwkfx6j43ssfocj38e5zhpmqc9luhhumbzunon9bvdg1l7qb\", \"rm0zl5euvql29lem40pm8j0w28g0bh5ik4cf6h1jwf3p51eskvsfem555o6j7tq334uxize9jj1cni443uwo4v481a2fd9934r0ycpg742rz519qipdhan53eszxwl2f6g1xsn0y1hihuaoq9tyz95bcvbfk5c2zjbpm2f1rwugq3dajsolhg\", \"6181iyfxtic2iak6ckvqx54g6zacihxvpvd4pchg8egu65lsew05zd0gkwqi5sp02qcg3y0p60mi14k1fz5iijk4btbu51da56o6z5lpnca3b5rtx1y8dzgw7ug0f5yd2zyx2bwmnf0whur0675ogkbwgkhm\", \"h8rplrwofrtz6k73hnxihfsvfykggnpf5mjt5vsjetkjnbjj5qcl\", \"mt8j0zhe3yx2l2z8gp9lcp9kg48dqpslt7bz3kwp1gicakr61q25bza7ogrxjywlpl2cvocw3fovo5qpkq1ocd6bjg5k39s7cnjxi6pmvkcr8asngfb9bw\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"9yv8yjn8tumllsoe8pvnk3gf7kdw7m2522meg5rv7lyf9j2ws69k3mk2q8z8jq090p6jkef3j2k1bzlvox82l2i4cnphonu1z9aj2lhg1ore37qt\", \"d1vwrfe8aygqkuyy2hv4bxikrf\", \"euf\", \"bvl90k2sa6ofkkc3cnlydxtqtlwy42u2kmvwsh383f9s9yttxt1bnjxrv0nc4benuwskl13u6osbt062h5v2t56ww6000i5d52rzcneb7rgejwbmxrga38olaenvuh64qwgay34ibiv280taseflhqn3ttbhgihxgiwp0tlzdhh383\", \"ng5dxhhs6vj3n0zr1tg420ogjun33m22jlnm5mrsn3d0pwrqwqvxmgjz396mlv7iohoryu8anfyx922gdejst4jmvcyvw9djbpssdgov8wvf0816i3fgxx053o\", \"sh7rploqope8nm6lu4rzwbm62ay6a1bbiekyu\", \"h8se96e2qa4qmgnxwj6mo3mc9p4n8hbuk90w1o4x9652mwq5j0xceiehjmyjvxh0szeemkm9\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"5exhspuzqqhec69tq0a3csdmuhfw9cww0le7vpj3gzousoyckmzqxkf3hxddmwtpqr8xwrju5j5ateksjkj7mapqmpapy1ptubi2txuqiinq5\", \"omc5fgftma58ebq93rw5gvs8rr0z1onxt6u077rz1idh608pr13toh8in1fmwg7pdanaogsyz7kjckbzb9qv6lvbsizglkb9en5tk\", \"lhee798tm3q9k90gpae41t3ioqg4o7albd9v85yldmvbn5biu39tw1adlu8mgq9vdw1pqxb158jiph2ex2r8umvcss04lxim26vf3t5mtvpjm6nwppl\", \"o8hh4cd20r0wpte4thca2ghngqu04hzvig6xgevdj4zl7hnvpx1bpgxcidpw87rul1c3duqd97stga6n3f08aacggwwmqvull6yk0q2m98ihnmjq1om2vg23u7upj91sy7lgx0vta55twauairelw4q1px36q98zvxn73198mkhcsza92xs0k86r7u7t02bbi\", \"mloqnv6p5nta71zb68ce6fxu1ccq8n0ysfynprn7hrqn68aflep8890o10o2x7i4ffrv1grq1m6rxx5k1ovqjeqclwq3vmc98k39n9uuj9nrbsd38uephhs4miqii5n3vseh335m86faxcu0kxq4gelns\", \"3flzo1eoswknq59mq1n34j5dxvoh27k4gf3q6qsawj21gukdx5hog7tl04qy2yt4t4tx\", \"4b5734chwbf8lyq1wa6v9zlc3vmwprykpiggtm64qyw2y2q4h7mqxmc63w082wqyzt7dzovq9anbgmbr11qd1zxi33p5hwwnu740zhk4r1wtlcwes485r3jf2pika0dy5\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"x72dnvdpqdul23z7ed1gkl3ypz82w0y6lrug43olrx6mphltwnhkl57qdc1mcx93ihzetgtf202bhuil4ygxhk2yfir52upnj2yjwjg6yezjf06szy3q32a\", \"8ynrigeo6uv64koxykwme0kogzcocppwum2o2bvon6m1g82798v38u8fw1jvsief0z6f0lpqq7jwr4fvnyld3ha972mrz662zki\", \"i8lxzh5vch1wzwutqn27p8pcg1h9wzle9\", \"vn9xmd48id5u30wppaxnixrvgxr7m4uuvr4n0e58rtuz8gtk936w2va1ukreicmpn55g43bmqttkv2phys3uht5m36vuhtjdnyvcc20hx9j5c2o42tkt3u94zp4h4e4to5qvh6zh30wizde6wcb5ouwsedptn7zm8bz1ezobdv3rv13q1v\", \"rqvdolbwf63e46hxsf9yfeo0f6pxev0t0ar08lz75\", \"0en3tykskt3k5hy9qshrnnqhoq4q4dhfgz0xlak0wh3u2ipucmncl2irrw9egx48hjlaeqpzdb7liw0zckb3mwh59bt9djm2eh5gkvmlcgc8gc5jny5cm1q7ur8id9vu48qmncwilcax05r4dsx\", \"388h2go6yvayrzjswrhzud152y1ql6kw7qq7cgzw72l3topr0o4olbnbdv9ghzd99snbx2wkkemge4fser34tyhpxvl0ir0iu1ph2fo8kbao0zc3zdltzqfxelypdbnre\" ]\n    } ],\n    \"service\" : \"qf4gxega129y0izoaad68hyrc6c2hlvg2mzvevyr7nxsivxizy61rek0e1mkqrgnqo0s7m5zjtx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7a826e6-6823-4653-b7f7-a224f8dd02f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:24.852608Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryconnection.projects.locations.connections.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1ccc5b57-685b-46c8-9819-ae0e3b0397c7",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1beta1/7cr32a7q16drr8segozn4dlqx9huajta7qxum91wbt021vvimlhtt9xwyj7d7r4pziu05nvnevlm6mfp150sbp7432qu6xv7mcgqybqw6c7arc9:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"k4bkyl246v935djpii25j03xg4oi4i4kv7ti4n9i58jwdpiiiblc2ch155oy9eam6ipwqxsl0vde59l\",\n      \"description\" : \"Quae eaque qui eius eum velit animi praesentium. Consequatur minus tenetur placeat dolore quia et. Rem esse enim eveniet qui delectus facere.\",\n      \"location\" : \"nsj04ti5tvc2a9t7hncdcdlinzd691v0zo5cdg5jm2z6zhqd3gcvqf2u4bvotpsdoz6tpupaskjr\",\n      \"title\" : \"Enim error est dolorum.\"\n    },\n    \"role\" : \"qjhivbjvjxj3mv1kr72ee1z26hxu2l8sz4f24jm4tw4is6wl1w6zypajh5ujywayc62e\",\n    \"members\" : [ \"94ofiin06jv7c12ohaxtx9cfk51cex5bn7zg6m1aocpvtyhy26c8yq6pgmyjfsruxh4759ki38yebo2jr67jlg23c14baxnxplm7wn3bi2ints0uyatxtukt1lyegzj2669sbipqe04afkrchu7r71krud5m5eev4uayl14v\", \"sotu15qhup99e533763rbhpv8qwkwb93ew0r75u51ne5mteducl46jud9pwa9nd4fxq0xt9t1ly1mvwvuurbnbvwo6l75j6fb22zuza48294yvp5n9edx798dgzs7oddzkkamp2qcqjs4xjfytpi15ddokeokoywxp0xv\", \"ovoge1qxzmg7tunttw2\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"uunmzvc63epkrq2yhq2t9zccnv2oel5oe1mku35yt4fsyu31jiam63t1v9ian7mf7ygeyovdwizlfux0f1ka6d43r36wkcevg5mc3l4a5ykcdpo6y47gdhd9my08qga\",\n      \"description\" : \"Deserunt maiores perferendis. Mollitia praesentium consequuntur. Ducimus autem ipsam a aut ad. Itaque voluptatibus officiis. Excepturi qui voluptatem ullam.\",\n      \"location\" : \"4vphjna33542po8h3rpnomfezuk52mxig8j9d565utek83sgt61l6kiagr98uusppinmz08wr0n516snq4puu7dwi8jru6tmbtogzqxq90iwhib42h1muhl8bp2ujjc7mpk747hkq7xtbjil4thmhoha8b2irc4yxrmhbdvj4krc3\",\n      \"title\" : \"Repellat voluptatem architecto.\"\n    },\n    \"role\" : \"b5p3ubr3uzmo1cw41wkjlv9lx7ha7bs6vieozk\",\n    \"members\" : [ \"jcrwtp7svbdaunfzugysmq35a06hjkhah3vovab28f746uadz52e1yo0rk1zaglnqfr8xt1be54kw08ba4om7mcgio49kxi3z6thbvtmwripnuw52ta0n3811ynaxdrcoaciq8eh07f4b83208z119fq6cmjh55rga4gg00vogaf45\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"07j2bjfvkc2j6tea6y06pjvwg7cign2uybyztb9onox7txqda1bs4veicu978sqamq6\",\n      \"description\" : \"Laudantium dolores error. Officiis dignissimos rerum consequuntur. Dignissimos doloribus ea et rerum ratione veritatis.\",\n      \"location\" : \"e6h5wqk2kj67pi6b7jjjzq2q364m1smqep7tfh2swbelufzcr8l2r7n2a56gxblensbttiwzuirfd2o3pcu44wppvs04i\",\n      \"title\" : \"Ut accusamus rerum.\"\n    },\n    \"role\" : \"maw5lerfke2qpdofmbp3mwx6xztg9pijz2vp9cvor57tow\",\n    \"members\" : [ \"7te47ypgrvacv8yap5cwrqbyabqh4ckfo3vwbm0he9xzjcgo62crsm5eh31l2nulls4fif7chjme43fp\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"bn3f9qhjgw2ys3qdvoylgirirq1jpib2ydv8vya23pypiu4w0jjktvz812vr4cgrbeqndnp0iouadsiz3nke4abv2j2isqflsdnmyh3ip7qslvbbvfi38ksbgdm8oo82svima00i8as09cpqrckzyhq1ppobl26div027ow\",\n      \"description\" : \"Reprehenderit tenetur odio. Veniam aspernatur hic dolorem. Repellat vitae dignissimos enim et.\",\n      \"location\" : \"ut5l35me0gc6vt89ljnzzswq1wjb0raoo4j3jh4hysc1elrutv2wnx1s8dmm9bjkstghwcu7jroia7dtbyegqiy5wewqfxp7rvkkfkrpfwcp1dsq81v7pzzqmtrlwc8fxbvkujohkg\",\n      \"title\" : \"Voluptas velit rerum perspiciatis ipsum asperiores minima fugiat.\"\n    },\n    \"role\" : \"yfq977xk7u4ofik08nochim7dxhzgr4ec5c34infllpam5d1mrtr68r1wpuruodt4joi5ditqmk6ph2rttbcbnf4tgynzr16qf5bsm82jtifskh5oamk1ch1ant8hggqz7gcffar7dqnu8lorqro06l3humbtvatp7ki0jt327ek00ezipaq452iho\",\n    \"members\" : [ \"2q23xi9ldr0cygus8yhhrgbyqvzb8a8qjmdqlpjpxp0tg0s27qla0qedted4wfnu1603qub9p6x8cqdxaih3arf7prfihoehhs08lc0cqb4lwv8kzv36k01hdisz05qima1nn0iwapccmadsh6j9i392iidpkbeq5qfjmxqapmvtgv9ha9j7\", \"3kfhyo1dy290iwtwwy4snt0ude8kwa0nfm75akx0s43k2llucoe8awb4ala0221hedc1r2sb99ipr64cy7vt1zrpol37z18p74m00n2iulvnm3os39bbb7wncqhxl9ypikofzsfd2tat7bs\", \"lb07fb478rh32896gpetj648i6drjy4op9xs78uuzfsddzlj77anvi5g77pusvea5pl87jchvmabgsekgdy6uut1bo20qi0boumboxyf8vv6jhhtbrnivmrtauc8dilukh6545i827kc4xq7lk7jbro5n58m6rq4ge46vf9lki779d8p39kytwss09ly82e078k\" ]\n  } ],\n  \"etag\" : \"ipsam\",\n  \"version\" : 32884342,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"jvd2jmcm9ymxkauiacs1ud31b574g4evkrih9lk9a2kk35hx294rg6x5hf29clxcj7dzsw526dd9f8q8m\", \"syzlagqbpdgybnxty6x9q713l63ylmno8ay3jc1js1uneihhg0q8y0dhcyou0ghkmaar8q64wamqytmi2bjekc8yk596t4436uwdjqtluoel27tpqw8hqpgharboohpepy1plwj3tb4bpg4ldww0568ji8q3xvvlrhqfjq2a6i1s9\", \"a2vll4ayxiimhvjunj8rpy7eccol6u7w195k3j2ndrkt0y33q4oud43vgqlvvj6636ecbpv0vab9mar7ut7lm0uhq3i0z9dqmvva9bkglrqos90kb4bikke058pp9euds5bcbzoj6pu82wemndkueeo9t4ed8xm2d0f7ff1ir0ufjcuggufpqtsjjcmyd\", \"hz6xwxcji034ex9hx8p92p\", \"5p7s49etp7ence9bq25uvo45rdtpjr7qa49kvd2rjwug87hhpg4uni3viheayy11t3a9ia9yv5sjo1di98ldyqr8pwqzd9ct6tcm6beivzzn6d41g69n3k3hampgnqoxtbixqw3gh27qlqrzsaiv35spfz\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6w45hn55shdj6pg1sx2mduwv27oxitu213qyeiu7veep1x7w8p2ww0sbwyf5fg8ths98gifxkaoo9fekwgozye7kgr5gcqaqxnzmim4lmw7s4jby6csl6u39ko6zdvbomo90679o5afmhn1pizx8\", \"etexhyu0wdiw74sug04791ewss3ytl3s77dttuo4f8zuatptwyzj1eb78y1yfm1bzdwfq88z6c8o7c8hma7px9jsjkm8h0ncir3xxxe6dl1y7lvu4v1cx6j60t1wb0el1q5i2cax5qv15fc7znc9s6j33duen9joa067lyzsst502ic9095ijd0p8sinj8c3n6nz\", \"39efhlba8er027fhfywxmnismsyjenzt3hh6qlsgyd87pxj3jmxuh9xv35gbvbta2ywa6g9949eddehhb5s28z5f9ui7uefm8k7bpjqhk3k0kv0bbir93f8592qu37wgbehpzx3h0vr1vtjuv39y0j40m\", \"yoi3swbv9062rfj1yofu13h6dre7wg\", \"4rr8bbpvrdh9b5b4rcpigl50tm7gqu2rvfe1pp4lxpvu2s4suglec16kdyckyfn9ewwcdj8txetyw9rbba9saw2w19b8z4x928ochjmy2l6cyjkpiqj7k164poktbla6ud31bn1a\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ft4ll0fsffo6qs76xx306execvonpr50p0r6y3i31dqnujkyrjxs5b\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"sdinxqkfpfsfqfm4qcg5tygonqlxt8o41e84dz1llyau1x7ohxy9st1o4r4m8vlo\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"8x3ptjtpl8b97u60y5kht55d753qhzpsxuye239wulqt7s8spi9gb9edq07t7tdocoh0dm8qxchqg3ilx1badndyzgilj9z7eiznbskv0hhtkaxfhfub0eallakl5v1415xb8xwg6fdihwe064bucut5o9cc0glbk02cghokrfeh1svf3batgrjqwrv\", \"9hxvs2n5b2ycrwuls27ql014hsec3s8inwqoiy4w81j75d6ad9oatrv0s17km587dqcdde9hmdfk2j70cb9l1wgrx8svql7oa7p2bxaisommuyep05m6hvj4t6dhjcxdqozou9c5m84ilutvqhmmd3g53xs7lqf2msm7vol1ht4ze7astyms8qfln7b1ci\", \"cwiex2uhddgqpq8ix42bxdmjrizfn32jqg3p724zr5avhma2xq9cystwr4rkjw1lxa0dvgcwbd9\", \"vef6cbj4zrxj7fp8uwjfir1w6vuyez5o2l6lc172s8obtssmfpy7xi1xl6gom7eqapi0sjjoh2h7k3g\", \"n9t4n6\", \"jlsfa0ru1xdlct6ethuqwdeh361egl2isiqpxkel4oonsqrmzt8jkm77ejnbsbfx8uyxffmnwlxpd21mvhb1og7b0mqvpqwvdzkdzhreh5q0ge9a9smzx21c19ukcjs4d2x4p0k3q0yuvwjw14lrqcbjc9n8840bmirqyyqwtqusq2yle3cgvy6cu9dyqbk46h\", \"low2upkvlotw91\", \"qlbhbv8oi8sw1z7glfotkx07wc\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"xdtvermkmtr4lm3o8bdcnz9v94cbb987eja0r5td0m8f240ku4t49nwijhp1s5va6zlnbfkjovz968ia9qwin4gfosk\", \"gr2ru5zzo287ngjlth6m9vjwlzphxqp1t6v5fw5lfhjr0qdu4h5ngthj6mlgoact24tvhwo2rb6pfxxfspynjm2r290hwulfg8m95fr5wtpvke6fcth8gu9vqx29wxummd3j5wfr792qnhwvy5qokjy4tm7pnoa3cxsimo2sfkkf4\", \"23mxbptlwyr30md4b65xv1ktfwm5rsu39fh56tfcsm5qw32bp5vcflvuzpoes8kbvjgggfjpongsrmx2bigw56g389pgnw9p7djypverozosfo2jjvnhfev4bz19h1evqbrsmsbsf0hzkp4vz28\", \"tjcq9g6v6bqlb12reqx30ru6e3pup6ioswjj0tzncdez7wowzrem3\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"89iqalduvkqbe9avlznej7n4hm9m67xr1ynu9c8qxf8oar4umzn12dtixodfw\", \"x2d1fl6qobua76p5qj2prnx9ddap7f\", \"m6ro9fybqgfw6mfhempk9s8uvm0vp2lq2xgg95hx6b3mbzvs3t3iy0p04uwm8wxcts4mkt6rhm5ao83yhxglsub4upyx5kxinb1i2opiw6ye2f19rwebjb17qf0iw1j7nagwzav6mbyxbq0myknay9sk04n4cr39lhckf9w6o51z4p\", \"lnfgmsanzuyba8carzkhcs2p6rpwml1s9a77smsggi26h9n8nqw5y675jryoc8jrlyd2itkdl9xs0oq9wt90tm4zq7s0dc\", \"p5uuvydw7a3uwb5ywoyitoj8sd8jchjmh1qfrl4mdsqs6ybfife37ul0ps37dknbd9zakf9lget4eg3yjtl196dbprlq6e8trekw34use2q992l7n2q472wcld2do1kbinu0g0wlyfk1fwty68lvj7ehhf2nin0tq48fmfuvgu8x7p6g0efv4\", \"wsqp6o5kqxqgvsr66x4l9rnkanodxz91tk4rfxaggj69vpb6n9qo3eqx0darfzdeotuz7zy3bz0q05jpawfico1ff89rdsv0zbuije2kpdglww8zdaqp9yb5tm77wpc38ivm9nmc7kuwz8adpap0pmynt42lruk\", \"awu8gemo86zqif4v5cpdsqwnzhyej1e6lude7hdpxe8mtskjd0oakm2dgg00zphh7bdkcea9l6u3ev77cw56gh6kzilebl5n2n1bn80d3ajjit40ct2infbp5xhhci84myvowwvcfylh\", \"lr86q4466vq3uxm6vshnhfr52gxq7zmsapw07k9eht5z0ohfuf3iri5aq34klq7g0ewmjvn1v\" ]\n    } ],\n    \"service\" : \"3hfxg6gdwggl050j8rib52vv3nfpv3erdgffy6mxv2mxlmahkwf4b6kf2otosa8e8x\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ccc5b57-685b-46c8-9819-ae0e3b0397c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:24.851538Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryconnection.projects.locations.connections.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6a51e176-fcb1-4a58-ab34-3694d8332bf2",
    "name" : "Creates a new connection.",
    "request" : {
      "urlPath" : "/v1beta1/d7zgyib90yxd4llp9jfefeqwkf9idx2x40bx7oojtlgkth0uz0mif4kr90n3afv4y755328y7u3mrx4led17ljvwwxvdjuicjanwgggrpct629jnbgde9bjyymlmaoosduqiwwumc5cde2bzxemxnh1bm7x/connections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastModifiedTime\" : \"2022-08-22T17:09:24.850064Z\",\n  \"creationTime\" : \"2022-10-27T17:04:24.850094Z\",\n  \"cloudSql\" : {\n    \"serviceAccountId\" : \"oj7t\",\n    \"database\" : \"v3jh5ldx\",\n    \"instanceId\" : \"3jct\",\n    \"credential\" : {\n      \"password\" : \"peakejsy0zzpm3gh2lhpk78u7zj4xqvq92o3ffuor9vu20s4ie5qsu61dy0fzq9baccqbxlxvy93t8xn8i27xomxlye35v72qoqnhps11ercwg1rf6v6mfhalid1halgqpzsd349vc0d66249uc9bqqyj0hq36ysq5l3g441u9kugcg\",\n      \"username\" : \"may.osinski\"\n    },\n    \"type\" : \"POSTGRES\"\n  },\n  \"name\" : \"Miss Morgan Bartoletti\",\n  \"description\" : \"Voluptas accusantium ut voluptates natus maxime. Maiores eos enim voluptate rerum nisi asperiores. Aut reprehenderit voluptate voluptatem id. Dolorum voluptatem assumenda dolorem non doloribus facilis\",\n  \"hasCredential\" : true,\n  \"friendlyName\" : \"Essie Robel\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a51e176-fcb1-4a58-ab34-3694d8332bf2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:24.850516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryconnection.projects.locations.connections.create",
          "schema" : {
            "description" : "Configuration parameters to establish connection with an external data source, except the credential attributes.",
            "properties" : {
              "cloudSql" : {
                "$ref" : "#/components/schemas/CloudSqlProperties"
              },
              "creationTime" : {
                "description" : "Output only. The creation timestamp of the connection.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "User provided description.",
                "type" : "string"
              },
              "friendlyName" : {
                "description" : "User provided display name for the connection.",
                "type" : "string"
              },
              "hasCredential" : {
                "description" : "Output only. True, if credential is configured for this connection.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "lastModifiedTime" : {
                "description" : "Output only. The last update timestamp of the connection.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the connection in the form of: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "57ec499b-c61f-427a-92c5-22200db567ef",
    "name" : "Returns a list of connections in the given project.",
    "request" : {
      "urlPath" : "/v1beta1/4cgev9s6jo1udbrbfm7h3zhie421joj56ftv5tt72pc7wbbvkrott8kb0ya82gyfrz7ork0tzd5dj82p5zkf7zkcq0ixpbmrl1bkrgoa4jdf19gj7z8jyx7qmn6dvdzwiwgchsvmkc6/connections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"yc0autjs18pa476lbj2owwc3ht18irnu25p20ysrtau71grws9m9cfc9do46smtz9wdl8rns6\",\n  \"connections\" : [ {\n    \"lastModifiedTime\" : \"2022-04-15T17:16:24.848335Z\",\n    \"creationTime\" : \"2022-08-04T18:00:24.848365Z\",\n    \"cloudSql\" : {\n      \"serviceAccountId\" : \"8utc\",\n      \"database\" : \"o0qcia4flquhs3twm7kxx5wot9zsoz6gj5plwmpb8wqbs1370iemgt5az5vcucpfd5oadsboyz6a9uv0jn6g89x82kp7n6r3icz26jag8m45ei4sq11b60bibwr7dkkltyie2zxlddnd00bnap94p7w467ofif5nb3p152wdfkq5adrpf5gymiju38f067m\",\n      \"instanceId\" : \"0iuc\",\n      \"credential\" : {\n        \"password\" : \"c7h70ts6vl9ckyh1tv0jwjvidl1h4zlmzj913kyxgx9r67u5mmg42e57axc30gw737rt02wg6a79pi8t5aotdasdes2vyheb3u5w912yuwzwrhb2k9q7whdomxoom8a5xkcqxw78fpsmuux3lovxd5zdmda45bcyq\",\n        \"username\" : \"everett.blick\"\n      },\n      \"type\" : \"MYSQL\"\n    },\n    \"name\" : \"Josefa Bernhard\",\n    \"description\" : \"Eaque omnis hic laudantium vel consequuntur. In molestiae amet. Tempora consectetur eum.\",\n    \"hasCredential\" : true,\n    \"friendlyName\" : \"Mr. Margarito Dooley\"\n  }, {\n    \"lastModifiedTime\" : \"2022-09-11T18:04:24.848736Z\",\n    \"creationTime\" : \"2022-09-14T17:24:24.848766Z\",\n    \"cloudSql\" : {\n      \"serviceAccountId\" : \"2b4e\",\n      \"database\" : \"voefgneh06km6nejfw3tbz5121bx2wb9t33jtsph8qdkhhjjpivyscu5k52x1je12a77j3aigf0jjt48zzo\",\n      \"instanceId\" : \"6802\",\n      \"credential\" : {\n        \"password\" : \"byakzivqjibhml3gveu2lv2suxoqf1eemu2mvubg1wbzggskg593a4ic7g8z3w7ov11n6lrcu64a32i0u5ulslgp2qwptz3iznx3khd2swviy3a6iaxtj5p1z\",\n        \"username\" : \"masako.hickle\"\n      },\n      \"type\" : \"MYSQL\"\n    },\n    \"name\" : \"Amado Ortiz\",\n    \"description\" : \"Omnis cum vitae dolorem commodi. Aspernatur eos vero non voluptates nesciunt temporibus. Eos possimus et. Necessitatibus animi aut quia deleniti praesentium.\",\n    \"hasCredential\" : false,\n    \"friendlyName\" : \"Marni Stiedemann\"\n  }, {\n    \"lastModifiedTime\" : \"2022-11-20T17:28:24.849133Z\",\n    \"creationTime\" : \"2022-09-10T17:12:24.84916Z\",\n    \"cloudSql\" : {\n      \"serviceAccountId\" : \"g9ct\",\n      \"database\" : \"c68ag68dgi73o8dqxwmn00b9oqsa6ibmmnyko35p1ez4h5nwmvqpa1k9t4d4yfzo5heow8jrboykdn7o013zlhhqq63zoc3g17pdbvnrze5uqfknu49h0zory3gmotscl5zfsyfa8mza6pgi168xhovs1rh1qx4ehkz3wu52vch\",\n      \"instanceId\" : \"e678\",\n      \"credential\" : {\n        \"password\" : \"di269o8qbp6hb00h3ijlmdm3ywkjbw2m\",\n        \"username\" : \"juliette.jones\"\n      },\n      \"type\" : \"POSTGRES\"\n    },\n    \"name\" : \"Truman Dach\",\n    \"description\" : \"Non distinctio placeat veniam aut velit sequi. Illo ex est et vitae ratione ut. Voluptates deserunt iure. Praesentium necessitatibus maxime incidunt cupiditate quibusdam.\",\n    \"hasCredential\" : true,\n    \"friendlyName\" : \"Chad Pagac\"\n  }, {\n    \"lastModifiedTime\" : \"2022-03-22T17:27:24.84954Z\",\n    \"creationTime\" : \"2022-10-06T14:48:24.84957Z\",\n    \"cloudSql\" : {\n      \"serviceAccountId\" : \"8035\",\n      \"database\" : \"0xkpumy7aqgtidy5op7tdfsn800ircn0tetg2ird4lva7ci2ssoke2wvzlxfjtonfbb4t\",\n      \"instanceId\" : \"455b\",\n      \"credential\" : {\n        \"password\" : \"k9luissgtbd6do6ju51fa7moelbiwl7vezgm53mv22gwdxhqwisyrnb76lb60y5q7n4uhe2ke4p3lqbddezv45fz7dz11pzuud299snvh\",\n        \"username\" : \"mickey.hand\"\n      },\n      \"type\" : \"POSTGRES\"\n    },\n    \"name\" : \"Bonita Pouros\",\n    \"description\" : \"Perferendis nobis tempora facere esse repellat sed vel. Ut consequatur excepturi qui. Quaerat tenetur necessitatibus nisi. Doloribus et aut qui error quos. Quisquam quis culpa iure.\",\n    \"hasCredential\" : true,\n    \"friendlyName\" : \"Maurita Block\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57ec499b-c61f-427a-92c5-22200db567ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:24.850019Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryconnection.projects.locations.connections.list",
          "schema" : {
            "description" : "The response for ConnectionService.ListConnections.",
            "properties" : {
              "connections" : {
                "description" : "List of connections.",
                "items" : {
                  "$ref" : "#/components/schemas/Connection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "Next page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9907610-b10a-4d7a-9cac-d8c8229d3dd4",
    "name" : "Sets the credential for the specified connection.",
    "request" : {
      "urlPath" : "/v1beta1/June+Marvin",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9907610-b10a-4d7a-9cac-d8c8229d3dd4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:24.848277Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryconnection.projects.locations.connections.updateCredential",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "786bf00a-fc0b-4683-8e42-30d4f2e34983",
    "name" : "Returns specified connection.",
    "request" : {
      "urlPath" : "/v1beta1/Miss+Milagro+Lesch",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"lastModifiedTime\" : \"2022-10-08T16:38:24.84767Z\",\n  \"creationTime\" : \"2022-06-11T16:41:24.847699Z\",\n  \"cloudSql\" : {\n    \"serviceAccountId\" : \"pa0l\",\n    \"database\" : \"9e1ehqqcicpkzcpdmt9zv8ntica0yi80dtnmwx96rvdcepab7zlhl1yvyz54gcp8az68xit0zg825dxuo2rr66oa3lnl4ebv8odagzeqxycamnap1q5owquzosyd0td0g4q2iz57yk6kukmehnl02hbdalxq9hbsmv3r5vgoyae9mng2tg0j78\",\n    \"instanceId\" : \"sz68\",\n    \"credential\" : {\n      \"password\" : \"45gopr4ufr0zhmzriru88pioko6n4sof8qfa5uwtz253ewyy0fb8ukzzcg4lrrras7b7rb6txf1pi5tvbnidx7go4clrf38toa7yf9vlgf14b8gx0l8x4y69kkegxjqj0t0s2lbr5wjgbavt4r1rg0p0uc2ggvim86lj4aqlycuh26y3i3b7lpdmjwpg9g1wooyq\",\n      \"username\" : \"alex.pollich\"\n    },\n    \"type\" : \"MYSQL\"\n  },\n  \"name\" : \"Slyvia Ondricka\",\n  \"description\" : \"Dicta voluptatem incidunt tempora necessitatibus reprehenderit voluptas eos. Iure voluptas id facere. Explicabo quam ut quis in in soluta ullam.\",\n  \"hasCredential\" : true,\n  \"friendlyName\" : \"See Nader\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "786bf00a-fc0b-4683-8e42-30d4f2e34983",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:24.848197Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryconnection.projects.locations.connections.get",
          "schema" : {
            "description" : "Configuration parameters to establish connection with an external data source, except the credential attributes.",
            "properties" : {
              "cloudSql" : {
                "$ref" : "#/components/schemas/CloudSqlProperties"
              },
              "creationTime" : {
                "description" : "Output only. The creation timestamp of the connection.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "description" : {
                "description" : "User provided description.",
                "type" : "string"
              },
              "friendlyName" : {
                "description" : "User provided display name for the connection.",
                "type" : "string"
              },
              "hasCredential" : {
                "description" : "Output only. True, if credential is configured for this connection.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "lastModifiedTime" : {
                "description" : "Output only. The last update timestamp of the connection.",
                "format" : "int64",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the connection in the form of: `projects/{project_id}/locations/{location_id}/connections/{connection_id}`",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "85973e3c-b6a8-4645-80aa-2018aaf15932",
    "name" : "Deletes connection and associated credential.",
    "request" : {
      "urlPath" : "/v1beta1/Deloras+Hickle",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "85973e3c-b6a8-4645-80aa-2018aaf15932",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:24.847609Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "bigqueryconnection.projects.locations.connections.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    }
  } ]
}