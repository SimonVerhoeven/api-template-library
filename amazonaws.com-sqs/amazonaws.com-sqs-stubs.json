{
  "mappings" : [ {
    "id" : "71169c97-932c-3516-8b49-fb483d296451",
    "name" : "<p>Remove cost allocation tags from the specified Amazon SQS queue. For an overv... - 200",
    "request" : {
      "urlPath" : "/#Action=UntagQueue",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "UntagQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "71169c97-932c-3516-8b49-fb483d296451",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_UntagQueue"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "f3bb5345-5fbb-38b8-af3a-92f2974c3b98",
    "name" : "<p>Remove cost allocation tags from the specified Amazon SQS queue. For an overv... - 200",
    "request" : {
      "urlPath" : "/7675753685965782541/Jude+Mills/#Action=UntagQueue",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "UntagQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "TagKeys" : {
          "equalTo" : "kxr6a642lffgxad02s19qrj1uyv21rc94wkmm1nys3q14pbggr4q6ravglwqbww85zdef3v33els2h6283e26hkghuxdq8jisa12e9ftu2agn6i58ossu4fgk2ff6u1ofveb0zf4yaim7nfvy3e02dxf2rt1mcvntsdg70rc7u09yxenm3f4t45l"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f3bb5345-5fbb-38b8-af3a-92f2974c3b98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_UntagQueue"
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "f26f4f59-d788-3532-9c69-ad139510aa70",
    "name" : "<p>Add cost allocation tags to the specified Amazon SQS queue. For an overview, ... - 200",
    "request" : {
      "urlPath" : "/#Action=TagQueue",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "TagQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f26f4f59-d788-3532-9c69-ad139510aa70",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_TagQueue"
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "d3d4f503-7f9e-3284-895a-9db8cee96b31",
    "name" : "<p>Add cost allocation tags to the specified Amazon SQS queue. For an overview, ... - 200",
    "request" : {
      "urlPath" : "/2719214522182930007/Dusty+Nolan/#Action=TagQueue",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "TagQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Tags" : {
          "equalTo" : "uar8f2bg1v7ys00hu4idpitl9fvzuh7h98t4ana4jx3w8qkcfdat8s6gtfern2vxouhpurmbmcd37fvu6hpzpuy3wi1ivoerv8tmid7omg2naslpmjwsgpmcl4sxf9znq7v02q256lwxrdlfwnp3ihhtle3r27oth951itjcbocchh8qw1elahg8"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "d3d4f503-7f9e-3284-895a-9db8cee96b31",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_TagQueue"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "cd076531-b84a-3477-858d-fcf7099e7c8e",
    "name" : "<p>Sets the value of one or more queue attributes. When you change a queue's att... (text/xml)",
    "request" : {
      "urlPath" : "/#Action=SetQueueAttributes",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SetQueueAttributes"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "cd076531-b84a-3477-858d-fcf7099e7c8e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SetQueueAttributes"
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "8b276f3b-a032-3fc4-a788-6096183ad730",
    "name" : "<p>Sets the value of one or more queue attributes. When you change a queue's att... - 200",
    "request" : {
      "urlPath" : "/#Action=SetQueueAttributes",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SetQueueAttributes"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8b276f3b-a032-3fc4-a788-6096183ad730",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SetQueueAttributes"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "e16d2cfe-05c1-31ca-8b65-2af7f4b48252",
    "name" : "<p>Sets the value of one or more queue attributes. When you change a queue's att... (text/xml)",
    "request" : {
      "urlPath" : "/8678424501682387557/Mrs.+Deangelo+Johnson/#Action=SetQueueAttributes",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SetQueueAttributes"
        },
        "Attribute" : {
          "equalTo" : "mwxxn6p5k9scq66wp0otmzhfjov1rja4uuwss6tsurr8lwzvskrr6tb7kf6jqxmfc54is6ru"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "e16d2cfe-05c1-31ca-8b65-2af7f4b48252",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SetQueueAttributes"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "9901b365-dbde-3680-ae06-6823d183acaf",
    "name" : "<p>Sets the value of one or more queue attributes. When you change a queue's att... - 200",
    "request" : {
      "urlPath" : "/3186980133703775995/Miss+Dena+Cronin/#Action=SetQueueAttributes",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SetQueueAttributes"
        },
        "Attribute" : {
          "equalTo" : "f61ksgr77l350op938qpnz8fzj858oh5uabm5pii4f8xhr6bx0fir44n88of5kcl4wwnamgnqrtx4e8b00hgprqewc7m5rmnmvjj3bmath6xb5uumnbfyy51ql3wt8xcvut78rrevlaez1wo04u4swx3etxs7gj7o3"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "9901b365-dbde-3680-ae06-6823d183acaf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SetQueueAttributes"
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "7c3fd745-2738-3c25-852c-0b6985a5e1a5",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/#Action=SendMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "7c3fd745-2738-3c25-852c-0b6985a5e1a5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "bd48e700-152a-358d-857c-67b0340b06f1",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/#Action=SendMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "bd48e700-152a-358d-857c-67b0340b06f1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "d459d62c-dbf0-314c-a42c-92b8f17a6d52",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/#Action=SendMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "d459d62c-dbf0-314c-a42c-92b8f17a6d52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "4f94d48f-8889-34c2-89c9-2a48dd8de1cf",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/#Action=SendMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "4f94d48f-8889-34c2-89c9-2a48dd8de1cf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "2352aa43-efbf-3136-ac7f-8c01342ad748",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/#Action=SendMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "2352aa43-efbf-3136-ac7f-8c01342ad748",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "e2206098-ffd4-3ff8-8651-b6e6d6e79eba",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/#Action=SendMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "e2206098-ffd4-3ff8-8651-b6e6d6e79eba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "46fda25a-1931-3fd7-8501-4df9dbf382be",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/#Action=SendMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Failed\" : { },\n  \"Successful\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "46fda25a-1931-3fd7-8501-4df9dbf382be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessageBatch",
          "schema" : {
            "type" : "object",
            "required" : [ "Successful", "Failed" ],
            "properties" : {
              "Successful" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SendMessageBatchResultEntryList"
                }, {
                  "description" : "A list of <code> <a>SendMessageBatchResultEntry</a> </code> items."
                } ]
              },
              "Failed" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchResultErrorEntryList"
                }, {
                  "description" : "A list of <code> <a>BatchResultErrorEntry</a> </code> items with error details about each message that can't be enqueued."
                } ]
              }
            },
            "description" : "For each message in the batch, the response contains a <code> <a>SendMessageBatchResultEntry</a> </code> tag if the message succeeds or a <code> <a>BatchResultErrorEntry</a> </code> tag if the message fails."
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "200d6a1b-4d44-31df-a798-841988a7686e",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/7859914031815370721/Norah+Cartwright/#Action=SendMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "4frrhrh585zydpy1rxn1rm8p2ib7jmxrkqrzbc15ae9lgxotnz8nz45bpgu35chbe0rdj61ejizvzzr489fzc39c1f4k1u7gus6a29d83a1c42qccvva1q2kakbbarsdz2j92xor2g7hhmm68y7yur83z2hn8wjeni0v5tiyn6pid96ao416kv8wqcwg3t5a4k4"
        }
      }
    },
    "response" : {
      "status" : 485,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "200d6a1b-4d44-31df-a798-841988a7686e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "3062da9d-5464-3181-9b2b-8957f1c035b3",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/4852145404876209618/Stuart+Klein+Jr./#Action=SendMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "c0eswytd0bbvo99xcrmx2apv6p2zfx1n4og9ggf2vkf1toh2t8yyvzqkotovb65sguijwv9xo9t3lle4h0naf46np6einvozw10t5pwj2"
        }
      }
    },
    "response" : {
      "status" : 484,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "3062da9d-5464-3181-9b2b-8957f1c035b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "74e6dc2c-c537-30d0-90cf-67d7133b5a65",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/5632005012515085224/Ken+Goodwin/#Action=SendMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "8djibbmzhomh5ybe7mchfrjriy5xb5qirgu9a3caz74lmmlv8ygibykdhab4o4xq01c4pft7zm7fkaym5e1g17d1vcbhr"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "74e6dc2c-c537-30d0-90cf-67d7133b5a65",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "bd9ae9ed-e4ee-3879-890c-62b68bb3cd20",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/11021312333163147/Yuki+Ziemann/#Action=SendMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "igpongvn1rb48drdnl0gc4v68f8uhv4p0z"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "bd9ae9ed-e4ee-3879-890c-62b68bb3cd20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "761d68b3-25a5-3318-805f-4e617394fb9a",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/2020636305921337286/Mr.+Isa+Mayert/#Action=SendMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "c9sl2jbnwgajc5degjiesaox32mobn8hp2ze217dvgzl33fm94t2pl34hve5xmp"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "761d68b3-25a5-3318-805f-4e617394fb9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "f640f7ea-db8e-3df1-994d-9a5fb9e111a6",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/7199212461507192338/Leonore+Jakubowski/#Action=SendMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "cikqoh5n1fi4fy28i9ei55k1cs3yb7v62y23niq8r2jyxn67cnliu5hjz0dhwiduijfr3jqtgstk6x38mp"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f640f7ea-db8e-3df1-994d-9a5fb9e111a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessageBatch"
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "cee3cc14-1976-3a5b-8ec1-73d31953b422",
    "name" : "<p>Delivers up to ten messages to the specified queue. This is a batch version o...",
    "request" : {
      "urlPath" : "/7030188030023356099/Dylan+Ebert/#Action=SendMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "w71hgx7wl1cysuw2j504"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Failed\" : { },\n  \"Successful\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "cee3cc14-1976-3a5b-8ec1-73d31953b422",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessageBatch",
          "schema" : {
            "type" : "object",
            "required" : [ "Successful", "Failed" ],
            "properties" : {
              "Successful" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/SendMessageBatchResultEntryList"
                }, {
                  "description" : "A list of <code> <a>SendMessageBatchResultEntry</a> </code> items."
                } ]
              },
              "Failed" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchResultErrorEntryList"
                }, {
                  "description" : "A list of <code> <a>BatchResultErrorEntry</a> </code> items with error details about each message that can't be enqueued."
                } ]
              }
            },
            "description" : "For each message in the batch, the response contains a <code> <a>SendMessageBatchResultEntry</a> </code> tag if the message succeeds or a <code> <a>BatchResultErrorEntry</a> </code> tag if the message fails."
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "56ca3faf-0c01-38d1-9aab-be789ca6200d",
    "name" : "<p>Delivers a message to the specified queue.</p> <important> <p>A message can i...",
    "request" : {
      "urlPath" : "/#Action=SendMessage",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "56ca3faf-0c01-38d1-9aab-be789ca6200d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessage"
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "2f5cd9d1-1f95-358e-9509-cc2619331692",
    "name" : "<p>Delivers a message to the specified queue.</p> <important> <p>A message can i...",
    "request" : {
      "urlPath" : "/#Action=SendMessage",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "2f5cd9d1-1f95-358e-9509-cc2619331692",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessage"
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "f6be7654-e9e0-3e34-aa51-2afc2d804e0c",
    "name" : "<p>Delivers a message to the specified queue.</p> <important> <p>A message can i...",
    "request" : {
      "urlPath" : "/#Action=SendMessage",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"MD5OfMessageBody\" : { },\n  \"MD5OfMessageAttributes\" : { },\n  \"MD5OfMessageSystemAttributes\" : { },\n  \"SequenceNumber\" : { },\n  \"MessageId\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f6be7654-e9e0-3e34-aa51-2afc2d804e0c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_SendMessage",
          "schema" : {
            "type" : "object",
            "properties" : {
              "MD5OfMessageBody" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An MD5 digest of the non-URL-encoded message body string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see <a href=\"https://www.ietf.org/rfc/rfc1321.txt\">RFC1321</a>."
                } ]
              },
              "MD5OfMessageAttributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An MD5 digest of the non-URL-encoded message attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see <a href=\"https://www.ietf.org/rfc/rfc1321.txt\">RFC1321</a>."
                } ]
              },
              "MD5OfMessageSystemAttributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An MD5 digest of the non-URL-encoded message system attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest."
                } ]
              },
              "MessageId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An attribute containing the <code>MessageId</code> of the message sent to the queue. For more information, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html\">Queue and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>. "
                } ]
              },
              "SequenceNumber" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "<p>This parameter applies only to FIFO (first-in-first-out) queues.</p> <p>The large, non-consecutive number that Amazon SQS assigns to each message.</p> <p>The length of <code>SequenceNumber</code> is 128 bits. <code>SequenceNumber</code> continues to increase for a particular <code>MessageGroupId</code>.</p>"
                } ]
              }
            },
            "description" : "The <code>MD5OfMessageBody</code> and <code>MessageId</code> elements."
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "fbfb8660-06e4-381a-87ca-3a243074f6db",
    "name" : "<p>Delivers a message to the specified queue.</p> <important> <p>A message can i...",
    "request" : {
      "urlPath" : "/413455789365645471/Brant+Kozey/#Action=SendMessage",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "MessageBody" : {
          "equalTo" : "Qui+iusto+voluptatem.+Pariatur+omnis+saepe.+Qui+dolore+minus+aut+deleniti+est+cumque+sed.+Aut+optio+aliquam+rerum+est.+Officiis+odit+accusamus."
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "fbfb8660-06e4-381a-87ca-3a243074f6db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessage"
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "05090c6d-b6b6-39cd-b1f8-ac36ad18ba94",
    "name" : "<p>Delivers a message to the specified queue.</p> <important> <p>A message can i...",
    "request" : {
      "urlPath" : "/6147135626621091154/Emerson+Shanahan/#Action=SendMessage",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "MessageBody" : {
          "equalTo" : "Totam+nisi+suscipit+doloribus+nihil.+Architecto+et+expedita+nesciunt.+Occaecati+ullam+sint+vel."
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "05090c6d-b6b6-39cd-b1f8-ac36ad18ba94",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessage"
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "0c63ff35-ed45-3aa3-b73c-486eebac3357",
    "name" : "<p>Delivers a message to the specified queue.</p> <important> <p>A message can i...",
    "request" : {
      "urlPath" : "/8390127474464445311/Carolann+Marvin/#Action=SendMessage",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "SendMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "MessageBody" : {
          "equalTo" : "Ut+voluptates+rerum+vero+laboriosam+velit+tenetur.+Fuga+sed+qui+nihil+sint.+Modi+fugit+est+deserunt+sunt+sed.+Dolor+quia+qui+ut."
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"MD5OfMessageBody\" : { },\n  \"MD5OfMessageAttributes\" : { },\n  \"MD5OfMessageSystemAttributes\" : { },\n  \"SequenceNumber\" : { },\n  \"MessageId\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "0c63ff35-ed45-3aa3-b73c-486eebac3357",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_SendMessage",
          "schema" : {
            "type" : "object",
            "properties" : {
              "MD5OfMessageBody" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An MD5 digest of the non-URL-encoded message body string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see <a href=\"https://www.ietf.org/rfc/rfc1321.txt\">RFC1321</a>."
                } ]
              },
              "MD5OfMessageAttributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An MD5 digest of the non-URL-encoded message attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest. For information about MD5, see <a href=\"https://www.ietf.org/rfc/rfc1321.txt\">RFC1321</a>."
                } ]
              },
              "MD5OfMessageSystemAttributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An MD5 digest of the non-URL-encoded message system attribute string. You can use this attribute to verify that Amazon SQS received the message correctly. Amazon SQS URL-decodes the message before creating the MD5 digest."
                } ]
              },
              "MessageId" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "An attribute containing the <code>MessageId</code> of the message sent to the queue. For more information, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-queue-message-identifiers.html\">Queue and Message Identifiers</a> in the <i>Amazon SQS Developer Guide</i>. "
                } ]
              },
              "SequenceNumber" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "<p>This parameter applies only to FIFO (first-in-first-out) queues.</p> <p>The large, non-consecutive number that Amazon SQS assigns to each message.</p> <p>The length of <code>SequenceNumber</code> is 128 bits. <code>SequenceNumber</code> continues to increase for a particular <code>MessageGroupId</code>.</p>"
                } ]
              }
            },
            "description" : "The <code>MD5OfMessageBody</code> and <code>MessageId</code> elements."
          }
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "8dc95533-9474-3b48-a06f-68a8d0202736",
    "name" : "<p>Revokes any permissions in the queue policy that matches the specified <code>... - 200",
    "request" : {
      "urlPath" : "/#Action=RemovePermission",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "RemovePermission"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8dc95533-9474-3b48-a06f-68a8d0202736",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_RemovePermission"
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "f3bd9f0b-f2f2-3e5f-a36c-f8425c86aa8b",
    "name" : "<p>Revokes any permissions in the queue policy that matches the specified <code>... - 200",
    "request" : {
      "urlPath" : "/7258472188358265246/Mr.+Beau+Bergnaum/#Action=RemovePermission",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "RemovePermission"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Label" : {
          "equalTo" : "corrupti"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "f3bd9f0b-f2f2-3e5f-a36c-f8425c86aa8b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_RemovePermission"
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "112526ff-c87c-3f69-a668-dae978dee4e5",
    "name" : "<p>Retrieves one or more messages (up to 10), from the specified queue. Using th...",
    "request" : {
      "urlPath" : "/#Action=ReceiveMessage",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ReceiveMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "112526ff-c87c-3f69-a668-dae978dee4e5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ReceiveMessage"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "cd5d3c98-ce1b-3ec6-a351-642bb5e0867c",
    "name" : "<p>Retrieves one or more messages (up to 10), from the specified queue. Using th...",
    "request" : {
      "urlPath" : "/#Action=ReceiveMessage",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ReceiveMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Messages\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "cd5d3c98-ce1b-3ec6-a351-642bb5e0867c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ReceiveMessage",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Messages" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MessageList"
                }, {
                  "description" : "A list of messages."
                } ]
              }
            },
            "description" : "A list of received messages."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "b05cab94-7c36-382c-a18d-8267aba0bb84",
    "name" : "<p>Retrieves one or more messages (up to 10), from the specified queue. Using th...",
    "request" : {
      "urlPath" : "/8266022896723539179/Brenda+Lueilwitz+IV/#Action=ReceiveMessage",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ReceiveMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "b05cab94-7c36-382c-a18d-8267aba0bb84",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ReceiveMessage"
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "8979db9d-b5af-3f5d-84e0-922b80b3f948",
    "name" : "<p>Retrieves one or more messages (up to 10), from the specified queue. Using th...",
    "request" : {
      "urlPath" : "/5674720534381367879/Bernardo+Haley/#Action=ReceiveMessage",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ReceiveMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Messages\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "8979db9d-b5af-3f5d-84e0-922b80b3f948",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ReceiveMessage",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Messages" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/MessageList"
                }, {
                  "description" : "A list of messages."
                } ]
              }
            },
            "description" : "A list of received messages."
          }
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "ef00e247-aef0-3607-8b98-3bfde9687754",
    "name" : "<p>Deletes the messages in a queue specified by the <code>QueueURL</code> parame... (text/xml)",
    "request" : {
      "urlPath" : "/#Action=PurgeQueue",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "PurgeQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "ef00e247-aef0-3607-8b98-3bfde9687754",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_PurgeQueue"
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "9d3816af-45c1-3ac5-9394-75dc1dc3b712",
    "name" : "<p>Deletes the messages in a queue specified by the <code>QueueURL</code> parame... (text/xml)",
    "request" : {
      "urlPath" : "/#Action=PurgeQueue",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "PurgeQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "9d3816af-45c1-3ac5-9394-75dc1dc3b712",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_PurgeQueue"
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "88cc7a43-6da3-3cb3-b35f-024cbcd7a892",
    "name" : "<p>Deletes the messages in a queue specified by the <code>QueueURL</code> parame... - 200",
    "request" : {
      "urlPath" : "/#Action=PurgeQueue",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "PurgeQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "88cc7a43-6da3-3cb3-b35f-024cbcd7a892",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_PurgeQueue"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "f75ad77f-86ed-3b65-8394-5b3971ac9111",
    "name" : "<p>Deletes the messages in a queue specified by the <code>QueueURL</code> parame... (text/xml)",
    "request" : {
      "urlPath" : "/976387564127144756/Ms.+Lawanda+Rohan/#Action=PurgeQueue",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "PurgeQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f75ad77f-86ed-3b65-8394-5b3971ac9111",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_PurgeQueue"
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "cc4dfb4d-7985-3333-ac46-ffd7acd64767",
    "name" : "<p>Deletes the messages in a queue specified by the <code>QueueURL</code> parame... (text/xml)",
    "request" : {
      "urlPath" : "/4886598891294403190/Rupert+Thiel/#Action=PurgeQueue",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "PurgeQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "cc4dfb4d-7985-3333-ac46-ffd7acd64767",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_PurgeQueue"
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "67ef582c-44a1-3d78-bb0d-8be41df2a827",
    "name" : "<p>Deletes the messages in a queue specified by the <code>QueueURL</code> parame... - 200",
    "request" : {
      "urlPath" : "/2566000693845861834/Wilmer+Glover/#Action=PurgeQueue",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "PurgeQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "67ef582c-44a1-3d78-bb0d-8be41df2a827",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_PurgeQueue"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "c8357f2c-225e-3931-8034-39232a19c158",
    "name" : "<p>Returns a list of your queues in the current region. The response includes a ...",
    "request" : {
      "urlPath" : "/#Action=ListQueues",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ListQueues"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"QueueUrls\" : { },\n  \"NextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "c8357f2c-225e-3931-8034-39232a19c158",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ListQueues",
          "schema" : {
            "type" : "object",
            "properties" : {
              "QueueUrls" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QueueUrlList"
                }, {
                  "description" : "A list of queue URLs, up to 1,000 entries, or the value of MaxResults that you sent in the request."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : "Pagination token to include in the next request. Token value is <code>null</code> if there are no additional results to request, or if you did not set <code>MaxResults</code> in the request."
                } ]
              }
            },
            "description" : "A list of your queues."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "c7946b40-d51a-3a7d-947a-12141b6355cd",
    "name" : "<p>Returns a list of your queues in the current region. The response includes a ...",
    "request" : {
      "urlPath" : "/#Action=ListQueues",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ListQueues"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"QueueUrls\" : { },\n  \"NextToken\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "c7946b40-d51a-3a7d-947a-12141b6355cd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ListQueues",
          "schema" : {
            "type" : "object",
            "properties" : {
              "QueueUrls" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QueueUrlList"
                }, {
                  "description" : "A list of queue URLs, up to 1,000 entries, or the value of MaxResults that you sent in the request."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : "Pagination token to include in the next request. Token value is <code>null</code> if there are no additional results to request, or if you did not set <code>MaxResults</code> in the request."
                } ]
              }
            },
            "description" : "A list of your queues."
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "f920a1d6-6dd6-342e-936a-8b6d5e98a727",
    "name" : "<p>List all cost allocation tags added to the specified Amazon SQS queue. For an...",
    "request" : {
      "urlPath" : "/#Action=ListQueueTags",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ListQueueTags"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f920a1d6-6dd6-342e-936a-8b6d5e98a727",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ListQueueTags",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagMap"
                }, {
                  "xml" : {
                    "name" : "Tag"
                  },
                  "description" : "The list of all tags added to the specified queue."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "836ae08d-37ed-33e7-8352-0a5b05d1c917",
    "name" : "<p>List all cost allocation tags added to the specified Amazon SQS queue. For an...",
    "request" : {
      "urlPath" : "/2647737124049652887/Graig+Nader/#Action=ListQueueTags",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ListQueueTags"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Tags\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "836ae08d-37ed-33e7-8352-0a5b05d1c917",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ListQueueTags",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Tags" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/TagMap"
                }, {
                  "xml" : {
                    "name" : "Tag"
                  },
                  "description" : "The list of all tags added to the specified queue."
                } ]
              }
            }
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "4bffd8ca-0e01-3d38-a86d-f7814567e1f6",
    "name" : "<p>Returns a list of your queues that have the <code>RedrivePolicy</code> queue ...",
    "request" : {
      "urlPath" : "/#Action=ListDeadLetterSourceQueues",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ListDeadLetterSourceQueues"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "4bffd8ca-0e01-3d38-a86d-f7814567e1f6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ListDeadLetterSourceQueues"
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "69bbfe81-78b1-37a1-bb33-af5ecc3c7835",
    "name" : "<p>Returns a list of your queues that have the <code>RedrivePolicy</code> queue ...",
    "request" : {
      "urlPath" : "/#Action=ListDeadLetterSourceQueues",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ListDeadLetterSourceQueues"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"queueUrls\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "69bbfe81-78b1-37a1-bb33-af5ecc3c7835",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ListDeadLetterSourceQueues",
          "schema" : {
            "type" : "object",
            "required" : [ "queueUrls" ],
            "properties" : {
              "queueUrls" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QueueUrlList"
                }, {
                  "description" : "A list of source queue URLs that have the <code>RedrivePolicy</code> queue attribute configured with a dead-letter queue."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : "Pagination token to include in the next request. Token value is <code>null</code> if there are no additional results to request, or if you did not set <code>MaxResults</code> in the request."
                } ]
              }
            },
            "description" : "A list of your dead letter source queues."
          }
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "de8e425f-3c30-314f-9b6c-84ea54dd7813",
    "name" : "<p>Returns a list of your queues that have the <code>RedrivePolicy</code> queue ...",
    "request" : {
      "urlPath" : "/7901842524024889373/Miss+Kori+Rau/#Action=ListDeadLetterSourceQueues",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ListDeadLetterSourceQueues"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "de8e425f-3c30-314f-9b6c-84ea54dd7813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ListDeadLetterSourceQueues"
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "90562286-b8a9-3d47-a438-3715ebd1a991",
    "name" : "<p>Returns a list of your queues that have the <code>RedrivePolicy</code> queue ...",
    "request" : {
      "urlPath" : "/5190196459225513631/Tyrone+Mann/#Action=ListDeadLetterSourceQueues",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ListDeadLetterSourceQueues"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"NextToken\" : { },\n  \"queueUrls\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "90562286-b8a9-3d47-a438-3715ebd1a991",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ListDeadLetterSourceQueues",
          "schema" : {
            "type" : "object",
            "required" : [ "queueUrls" ],
            "properties" : {
              "queueUrls" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QueueUrlList"
                }, {
                  "description" : "A list of source queue URLs that have the <code>RedrivePolicy</code> queue attribute configured with a dead-letter queue."
                } ]
              },
              "NextToken" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/Token"
                }, {
                  "description" : "Pagination token to include in the next request. Token value is <code>null</code> if there are no additional results to request, or if you did not set <code>MaxResults</code> in the request."
                } ]
              }
            },
            "description" : "A list of your dead letter source queues."
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "eb340f93-7edf-3c84-9b4a-05efe79fbb61",
    "name" : "<p>Returns the URL of an existing Amazon SQS queue.</p> <p>To access a queue tha...",
    "request" : {
      "urlPath" : "/#Action=GetQueueUrl",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "GetQueueUrl"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "eb340f93-7edf-3c84-9b4a-05efe79fbb61",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_GetQueueUrl"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "6100f9e0-a427-3e3e-bce6-29da85d0a394",
    "name" : "<p>Returns the URL of an existing Amazon SQS queue.</p> <p>To access a queue tha...",
    "request" : {
      "urlPath" : "/#Action=GetQueueUrl",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "GetQueueUrl"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"QueueUrl\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "6100f9e0-a427-3e3e-bce6-29da85d0a394",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_GetQueueUrl",
          "schema" : {
            "type" : "object",
            "properties" : {
              "QueueUrl" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The URL of the queue."
                } ]
              }
            },
            "description" : "For more information, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-api-responses.html\">Interpreting Responses</a> in the <i>Amazon SQS Developer Guide</i>."
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "4447514c-ebea-34c6-a851-fabaa8cf5f06",
    "name" : "<p>Returns the URL of an existing Amazon SQS queue.</p> <p>To access a queue tha...",
    "request" : {
      "urlPath" : "/#Action=GetQueueUrl",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "GetQueueUrl"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "QueueName" : {
          "equalTo" : "Ricki+Dickinson"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "4447514c-ebea-34c6-a851-fabaa8cf5f06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_GetQueueUrl"
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "e2352573-90a6-35bd-a95a-9018225ac5ec",
    "name" : "<p>Returns the URL of an existing Amazon SQS queue.</p> <p>To access a queue tha...",
    "request" : {
      "urlPath" : "/#Action=GetQueueUrl",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "GetQueueUrl"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "QueueName" : {
          "equalTo" : "Moises+Hermiston"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"QueueUrl\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "e2352573-90a6-35bd-a95a-9018225ac5ec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_GetQueueUrl",
          "schema" : {
            "type" : "object",
            "properties" : {
              "QueueUrl" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The URL of the queue."
                } ]
              }
            },
            "description" : "For more information, see <a href=\"https://docs.aws.amazon.com/AWSSimpleQueueService/latest/SQSDeveloperGuide/sqs-api-responses.html\">Interpreting Responses</a> in the <i>Amazon SQS Developer Guide</i>."
          }
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "f88676c2-5cc6-3cdf-b1f2-667aab9738a2",
    "name" : "<p>Gets attributes for the specified queue.</p> <note> <p>To determine whether a...",
    "request" : {
      "urlPath" : "/#Action=GetQueueAttributes",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "GetQueueAttributes"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "f88676c2-5cc6-3cdf-b1f2-667aab9738a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_GetQueueAttributes"
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "57b4e1de-334e-3975-b82b-7ec42369b9ce",
    "name" : "<p>Gets attributes for the specified queue.</p> <note> <p>To determine whether a...",
    "request" : {
      "urlPath" : "/#Action=GetQueueAttributes",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "GetQueueAttributes"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Attributes\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "57b4e1de-334e-3975-b82b-7ec42369b9ce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_GetQueueAttributes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Attributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QueueAttributeMap"
                }, {
                  "xml" : {
                    "name" : "Attribute"
                  },
                  "description" : "A map of attributes to their respective values."
                } ]
              }
            },
            "description" : "A list of returned queue attributes."
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "408f3b5f-9d35-36c8-bc31-6fd2586acdb7",
    "name" : "<p>Gets attributes for the specified queue.</p> <note> <p>To determine whether a...",
    "request" : {
      "urlPath" : "/705753432012159419/Krissy+Christiansen/#Action=GetQueueAttributes",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "GetQueueAttributes"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "408f3b5f-9d35-36c8-bc31-6fd2586acdb7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_GetQueueAttributes"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "32ee1188-c728-3bb5-90b8-12ca4d16de1d",
    "name" : "<p>Gets attributes for the specified queue.</p> <note> <p>To determine whether a...",
    "request" : {
      "urlPath" : "/8936006678752370510/Misti+Greenholt+DVM/#Action=GetQueueAttributes",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "GetQueueAttributes"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Attributes\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "32ee1188-c728-3bb5-90b8-12ca4d16de1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_GetQueueAttributes",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Attributes" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/QueueAttributeMap"
                }, {
                  "xml" : {
                    "name" : "Attribute"
                  },
                  "description" : "A map of attributes to their respective values."
                } ]
              }
            },
            "description" : "A list of returned queue attributes."
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "84ea07ee-d738-3680-8c68-90d839453563",
    "name" : "<p>Deletes the queue specified by the <code>QueueUrl</code>, regardless of the q... - 200",
    "request" : {
      "urlPath" : "/#Action=DeleteQueue",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "84ea07ee-d738-3680-8c68-90d839453563",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteQueue"
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "69df68a6-aab7-3db5-94be-7f4ceaf30778",
    "name" : "<p>Deletes the queue specified by the <code>QueueUrl</code>, regardless of the q... - 200",
    "request" : {
      "urlPath" : "/7926829119915717272/Leonarda+Hamill/#Action=DeleteQueue",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "69df68a6-aab7-3db5-94be-7f4ceaf30778",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteQueue"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "e8832fdd-3324-3227-9cd9-e813a355f69b",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=DeleteMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "e8832fdd-3324-3227-9cd9-e813a355f69b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteMessageBatch"
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "53c4806a-fa79-30c6-883f-8878a325a40d",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=DeleteMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "53c4806a-fa79-30c6-883f-8878a325a40d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteMessageBatch"
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "49ac2485-6253-3984-a5f4-9697e158dbce",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=DeleteMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "49ac2485-6253-3984-a5f4-9697e158dbce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteMessageBatch"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "bd54dc1a-ea87-32e2-b718-9ad91280e724",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=DeleteMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "bd54dc1a-ea87-32e2-b718-9ad91280e724",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteMessageBatch"
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "c958c36b-9101-3253-b6a1-e31342b478cc",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=DeleteMessageBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Failed\" : { },\n  \"Successful\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "c958c36b-9101-3253-b6a1-e31342b478cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteMessageBatch",
          "schema" : {
            "type" : "object",
            "required" : [ "Successful", "Failed" ],
            "properties" : {
              "Successful" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DeleteMessageBatchResultEntryList"
                }, {
                  "description" : "A list of <code> <a>DeleteMessageBatchResultEntry</a> </code> items."
                } ]
              },
              "Failed" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchResultErrorEntryList"
                }, {
                  "description" : "A list of <code> <a>BatchResultErrorEntry</a> </code> items."
                } ]
              }
            },
            "description" : "For each message in the batch, the response contains a <code> <a>DeleteMessageBatchResultEntry</a> </code> tag if the message is deleted or a <code> <a>BatchResultErrorEntry</a> </code> tag if the message can't be deleted."
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "03c7b91e-57f0-3564-89ea-673b72195d68",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/7933151244788765263/Dannie+Considine/#Action=DeleteMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "9n57"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "03c7b91e-57f0-3564-89ea-673b72195d68",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteMessageBatch"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "2856d0d8-e025-325e-85fe-0bd018047769",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/3617534545166178244/Mr.+Bennett+Thiel/#Action=DeleteMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "njnf2gpzbb18n3vtz4pmes346q0lw7a21mivej5lcpi89ealzk07i1qqe7"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "2856d0d8-e025-325e-85fe-0bd018047769",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteMessageBatch"
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "25db1030-b6ba-3d5c-b2de-f07c56ea25b4",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/8638787899369889240/Reynaldo+Schmeler/#Action=DeleteMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "3trohdt04n8d6ius7ouh5uwgfenv6cwk47d15wnfhhsnf4l7ch3ckyflybkervofkqz8lnnmilavaw2vjzfg99or3081blomvithov7hcl5apkihwcpnbb5d6y3ty6"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "25db1030-b6ba-3d5c-b2de-f07c56ea25b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteMessageBatch"
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "abd088c0-c852-3dfd-abb6-7dec6da074be",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/4843902841194953740/Gus+Miller/#Action=DeleteMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "dkev1ec5q8txbrpxhh5gzsdtsq67kpogqns4t7mj50fc57b5cpwidwthgiz0y4f68le1pnxiuzogckvyxed30"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "abd088c0-c852-3dfd-abb6-7dec6da074be",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteMessageBatch"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "abe54350-a861-34ee-be7d-54c9ed0cdde0",
    "name" : "<p>Deletes up to ten messages from the specified queue. This is a batch version ...",
    "request" : {
      "urlPath" : "/2005343000787059125/Blaine+Prosacco/#Action=DeleteMessageBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessageBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "jejawvanw3wrl8c1ht4wm4h1j"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Failed\" : { },\n  \"Successful\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "abe54350-a861-34ee-be7d-54c9ed0cdde0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteMessageBatch",
          "schema" : {
            "type" : "object",
            "required" : [ "Successful", "Failed" ],
            "properties" : {
              "Successful" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/DeleteMessageBatchResultEntryList"
                }, {
                  "description" : "A list of <code> <a>DeleteMessageBatchResultEntry</a> </code> items."
                } ]
              },
              "Failed" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchResultErrorEntryList"
                }, {
                  "description" : "A list of <code> <a>BatchResultErrorEntry</a> </code> items."
                } ]
              }
            },
            "description" : "For each message in the batch, the response contains a <code> <a>DeleteMessageBatchResultEntry</a> </code> tag if the message is deleted or a <code> <a>BatchResultErrorEntry</a> </code> tag if the message can't be deleted."
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "820dc81e-c4e4-3ebd-a8ca-283be5f7b0b4",
    "name" : "<p>Deletes the specified message from the specified queue. To select the message... (text/xml)",
    "request" : {
      "urlPath" : "/#Action=DeleteMessage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "820dc81e-c4e4-3ebd-a8ca-283be5f7b0b4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteMessage"
        }
      }
    },
    "insertionIndex" : 68
  }, {
    "id" : "a3e6b51b-6369-3d66-babc-60e86236bf01",
    "name" : "<p>Deletes the specified message from the specified queue. To select the message... (text/xml)",
    "request" : {
      "urlPath" : "/#Action=DeleteMessage",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "a3e6b51b-6369-3d66-babc-60e86236bf01",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteMessage"
        }
      }
    },
    "insertionIndex" : 69
  }, {
    "id" : "8256a2d2-e472-3622-8484-571a47f60ff2",
    "name" : "<p>Deletes the specified message from the specified queue. To select the message... - 200",
    "request" : {
      "urlPath" : "/#Action=DeleteMessage",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "8256a2d2-e472-3622-8484-571a47f60ff2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_DeleteMessage"
        }
      }
    },
    "insertionIndex" : 70
  }, {
    "id" : "82e2338f-50f0-364d-88fc-1d4502556518",
    "name" : "<p>Deletes the specified message from the specified queue. To select the message... (text/xml)",
    "request" : {
      "urlPath" : "/7544754876092034134/Amado+Fisher/#Action=DeleteMessage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "ReceiptHandle" : {
          "equalTo" : "7g31crwlvynoa0jm8zmsx95c28x9lt4mc2f8oga3d0spxwmm4njowxz3t0tx6ryva5gv770ifswoqmycf9fehs37tkyfbd6ircsp7r3impcv0u8j1q7akq926b8kvsqip85wywuxlnmbbf7fvum7t3ejjqbviemw4oxuuq5dusfv37s15cart3hrxk7uwc961t"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "82e2338f-50f0-364d-88fc-1d4502556518",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteMessage"
        }
      }
    },
    "insertionIndex" : 71
  }, {
    "id" : "eaa3b604-5aa8-3021-a384-34b0bc700b1a",
    "name" : "<p>Deletes the specified message from the specified queue. To select the message... (text/xml)",
    "request" : {
      "urlPath" : "/8926332641227555444/Jarod+Koch/#Action=DeleteMessage",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "ReceiptHandle" : {
          "equalTo" : "hxpaylzqqu4yuvd2sga361mfc2hy"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "eaa3b604-5aa8-3021-a384-34b0bc700b1a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteMessage"
        }
      }
    },
    "insertionIndex" : 72
  }, {
    "id" : "51f21580-0eaa-3c0a-aa82-751aa2d7d939",
    "name" : "<p>Deletes the specified message from the specified queue. To select the message... - 200",
    "request" : {
      "urlPath" : "/3922249435315879647/Julienne+Hickle/#Action=DeleteMessage",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "DeleteMessage"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "ReceiptHandle" : {
          "equalTo" : "1ww6ldcjuw3f1y0l2h2vmbraiv0rea8g0dsqwdo"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "51f21580-0eaa-3c0a-aa82-751aa2d7d939",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_DeleteMessage"
        }
      }
    },
    "insertionIndex" : 73
  }, {
    "id" : "212d1be1-35a8-3b02-be96-946f3aee3290",
    "name" : "<p>Creates a new standard or FIFO queue. You can pass one or more attributes in ...",
    "request" : {
      "urlPath" : "/#Action=CreateQueue",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "CreateQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "212d1be1-35a8-3b02-be96-946f3aee3290",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_CreateQueue"
        }
      }
    },
    "insertionIndex" : 74
  }, {
    "id" : "5fc89f5c-bda8-35ed-8297-2f4eab7917aa",
    "name" : "<p>Creates a new standard or FIFO queue. You can pass one or more attributes in ...",
    "request" : {
      "urlPath" : "/#Action=CreateQueue",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "CreateQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "5fc89f5c-bda8-35ed-8297-2f4eab7917aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_CreateQueue"
        }
      }
    },
    "insertionIndex" : 75
  }, {
    "id" : "82280125-a661-366b-974e-48932e09664d",
    "name" : "<p>Creates a new standard or FIFO queue. You can pass one or more attributes in ...",
    "request" : {
      "urlPath" : "/#Action=CreateQueue",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "CreateQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"QueueUrl\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "82280125-a661-366b-974e-48932e09664d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_CreateQueue",
          "schema" : {
            "type" : "object",
            "properties" : {
              "QueueUrl" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The URL of the created Amazon SQS queue."
                } ]
              }
            },
            "description" : "Returns the <code>QueueUrl</code> attribute of the created queue."
          }
        }
      }
    },
    "insertionIndex" : 76
  }, {
    "id" : "d2e53782-6820-3d85-b18d-213abbc14f85",
    "name" : "<p>Creates a new standard or FIFO queue. You can pass one or more attributes in ...",
    "request" : {
      "urlPath" : "/#Action=CreateQueue",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "CreateQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "QueueName" : {
          "equalTo" : "Mr.+Ilda+Heller"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "d2e53782-6820-3d85-b18d-213abbc14f85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_CreateQueue"
        }
      }
    },
    "insertionIndex" : 77
  }, {
    "id" : "c00cb175-03b1-37e8-a937-6656c5b1bdf3",
    "name" : "<p>Creates a new standard or FIFO queue. You can pass one or more attributes in ...",
    "request" : {
      "urlPath" : "/#Action=CreateQueue",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "CreateQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "QueueName" : {
          "equalTo" : "Mrs.+Magnolia+Larson"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "c00cb175-03b1-37e8-a937-6656c5b1bdf3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_CreateQueue"
        }
      }
    },
    "insertionIndex" : 78
  }, {
    "id" : "68b460b5-0840-33b8-bc14-c1e6c98e8ad4",
    "name" : "<p>Creates a new standard or FIFO queue. You can pass one or more attributes in ...",
    "request" : {
      "urlPath" : "/#Action=CreateQueue",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "CreateQueue"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "QueueName" : {
          "equalTo" : "Mafalda+Murphy"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"QueueUrl\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "68b460b5-0840-33b8-bc14-c1e6c98e8ad4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_CreateQueue",
          "schema" : {
            "type" : "object",
            "properties" : {
              "QueueUrl" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/String"
                }, {
                  "description" : "The URL of the created Amazon SQS queue."
                } ]
              }
            },
            "description" : "Returns the <code>QueueUrl</code> attribute of the created queue."
          }
        }
      }
    },
    "insertionIndex" : 79
  }, {
    "id" : "316aeec6-2331-349e-b7bf-ab58b1e02b3b",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=ChangeMessageVisibilityBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "316aeec6-2331-349e-b7bf-ab58b1e02b3b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ChangeMessageVisibilityBatch"
        }
      }
    },
    "insertionIndex" : 80
  }, {
    "id" : "0a002e81-a134-327f-9b76-f040345b6259",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=ChangeMessageVisibilityBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "0a002e81-a134-327f-9b76-f040345b6259",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ChangeMessageVisibilityBatch"
        }
      }
    },
    "insertionIndex" : 81
  }, {
    "id" : "38e9cfbb-28ea-36b4-8f9c-13e8464b5d58",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=ChangeMessageVisibilityBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "38e9cfbb-28ea-36b4-8f9c-13e8464b5d58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ChangeMessageVisibilityBatch"
        }
      }
    },
    "insertionIndex" : 82
  }, {
    "id" : "4947a40b-52e7-3b9d-89b7-f3ae39e51c4a",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=ChangeMessageVisibilityBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "4947a40b-52e7-3b9d-89b7-f3ae39e51c4a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ChangeMessageVisibilityBatch"
        }
      }
    },
    "insertionIndex" : 83
  }, {
    "id" : "249a8a14-400f-36d9-a444-f037fb915947",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/#Action=ChangeMessageVisibilityBatch",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Failed\" : { },\n  \"Successful\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "249a8a14-400f-36d9-a444-f037fb915947",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ChangeMessageVisibilityBatch",
          "schema" : {
            "type" : "object",
            "required" : [ "Successful", "Failed" ],
            "properties" : {
              "Successful" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChangeMessageVisibilityBatchResultEntryList"
                }, {
                  "description" : "A list of <code> <a>ChangeMessageVisibilityBatchResultEntry</a> </code> items."
                } ]
              },
              "Failed" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchResultErrorEntryList"
                }, {
                  "description" : "A list of <code> <a>BatchResultErrorEntry</a> </code> items."
                } ]
              }
            },
            "description" : "For each message in the batch, the response contains a <code> <a>ChangeMessageVisibilityBatchResultEntry</a> </code> tag if the message succeeds or a <code> <a>BatchResultErrorEntry</a> </code> tag if the message fails."
          }
        }
      }
    },
    "insertionIndex" : 84
  }, {
    "id" : "11079f6a-3272-3af1-99a2-f8cfdcbcbe5a",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/8125445159681660577/Rita+Reichel/#Action=ChangeMessageVisibilityBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "5gqejh337gfyxgs7czx17l00705uy5rjuu7ivruon4xqg0x3k91r07vhnmb0bsf96sswq620v9fzjju6o4sjaosdo3fdlobfcl97l3bajy7wmle8i841im5hktb460qqi1e0r685"
        }
      }
    },
    "response" : {
      "status" : 483,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "11079f6a-3272-3af1-99a2-f8cfdcbcbe5a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ChangeMessageVisibilityBatch"
        }
      }
    },
    "insertionIndex" : 85
  }, {
    "id" : "29d5de20-c0e4-3299-888e-33312903a9ab",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/1037497952159496065/Noriko+Runolfsdottir/#Action=ChangeMessageVisibilityBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "tx184wwl18oepohkrxk"
        }
      }
    },
    "response" : {
      "status" : 482,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "29d5de20-c0e4-3299-888e-33312903a9ab",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ChangeMessageVisibilityBatch"
        }
      }
    },
    "insertionIndex" : 86
  }, {
    "id" : "39c02353-8278-3df5-a575-3d83e300d6fe",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/837605457219731937/Carroll+Bradtke/#Action=ChangeMessageVisibilityBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "3b0r98kxh7mpw4nlrstgwt70nzd5wma623lk52cplyzrc1i8qe2a1hpf7amfo33l5k75f54ci7lb1ruaz853hktjaruskkvv4womehkykkk79v3ja39tcxv4hsch9g22hutvq51fsn78r8xo4tv6hdflnzuwhf8qyid1z"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "39c02353-8278-3df5-a575-3d83e300d6fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ChangeMessageVisibilityBatch"
        }
      }
    },
    "insertionIndex" : 87
  }, {
    "id" : "d5effd04-0ed2-3c33-8837-f75348a784dc",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/1298079951428447620/Maile+Schaefer+DDS/#Action=ChangeMessageVisibilityBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "gofufuixmksme86r6b2xqmpcdb1ved607t8yxh6xbz67tfu806tdpzyn8rau"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "d5effd04-0ed2-3c33-8837-f75348a784dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ChangeMessageVisibilityBatch"
        }
      }
    },
    "insertionIndex" : 88
  }, {
    "id" : "19c31293-6d9a-3190-baf6-42b926472d5b",
    "name" : "<p>Changes the visibility timeout of multiple messages. This is a batch version ...",
    "request" : {
      "urlPath" : "/6061936357694349371/Tyrell+Kuvalis/#Action=ChangeMessageVisibilityBatch",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibilityBatch"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Entries" : {
          "equalTo" : "yx4dhb2f3uc4e2w8qsh7vvonell6xhx6i59howuovyw8axebqk7dk77785jm2yk4bhon2vso8ujjd5iqldlw7d5fuzwhpmrshhavbyjl7g5ddmcrqx0l36qmm9ymr6u8v6"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Failed\" : { },\n  \"Successful\" : { }\n}",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "19c31293-6d9a-3190-baf6-42b926472d5b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ChangeMessageVisibilityBatch",
          "schema" : {
            "type" : "object",
            "required" : [ "Successful", "Failed" ],
            "properties" : {
              "Successful" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/ChangeMessageVisibilityBatchResultEntryList"
                }, {
                  "description" : "A list of <code> <a>ChangeMessageVisibilityBatchResultEntry</a> </code> items."
                } ]
              },
              "Failed" : {
                "allOf" : [ {
                  "$ref" : "#/components/schemas/BatchResultErrorEntryList"
                }, {
                  "description" : "A list of <code> <a>BatchResultErrorEntry</a> </code> items."
                } ]
              }
            },
            "description" : "For each message in the batch, the response contains a <code> <a>ChangeMessageVisibilityBatchResultEntry</a> </code> tag if the message succeeds or a <code> <a>BatchResultErrorEntry</a> </code> tag if the message fails."
          }
        }
      }
    },
    "insertionIndex" : 89
  }, {
    "id" : "188e414c-cce1-33f4-8f8b-64826792fe1b",
    "name" : "<p>Changes the visibility timeout of a specified message in a queue to a new val... (text/xml)",
    "request" : {
      "urlPath" : "/#Action=ChangeMessageVisibility",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibility"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "188e414c-cce1-33f4-8f8b-64826792fe1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ChangeMessageVisibility"
        }
      }
    },
    "insertionIndex" : 90
  }, {
    "id" : "38a97a33-4430-388b-82c4-63a8340f5499",
    "name" : "<p>Changes the visibility timeout of a specified message in a queue to a new val... (text/xml)",
    "request" : {
      "urlPath" : "/#Action=ChangeMessageVisibility",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibility"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "38a97a33-4430-388b-82c4-63a8340f5499",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ChangeMessageVisibility"
        }
      }
    },
    "insertionIndex" : 91
  }, {
    "id" : "a954912b-98e9-377f-a1bf-c7f9d5e04e45",
    "name" : "<p>Changes the visibility timeout of a specified message in a queue to a new val... - 200",
    "request" : {
      "urlPath" : "/#Action=ChangeMessageVisibility",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibility"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "a954912b-98e9-377f-a1bf-c7f9d5e04e45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_ChangeMessageVisibility"
        }
      }
    },
    "insertionIndex" : 92
  }, {
    "id" : "9fd5f88f-04fa-360d-920c-fd4c8985ea37",
    "name" : "<p>Changes the visibility timeout of a specified message in a queue to a new val... (text/xml)",
    "request" : {
      "urlPath" : "/3021071395857755406/Allan+Crona/#Action=ChangeMessageVisibility",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibility"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "ReceiptHandle" : {
          "equalTo" : "bra0dbtyyge7o0jdaz9kwjf1c32t398m9mwqzqzj9y1obnb4u0ym4kiktlwwl1do77v1hicgd7fqsgnruama1ftop9zu1wpcvfigejz1"
        },
        "VisibilityTimeout" : {
          "equalTo" : "3272014614189593123"
        }
      }
    },
    "response" : {
      "status" : 481,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "9fd5f88f-04fa-360d-920c-fd4c8985ea37",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ChangeMessageVisibility"
        }
      }
    },
    "insertionIndex" : 93
  }, {
    "id" : "a73769de-b215-3a0a-b119-42ed628f2026",
    "name" : "<p>Changes the visibility timeout of a specified message in a queue to a new val... (text/xml)",
    "request" : {
      "urlPath" : "/5538077939511601196/Mr.+Chong+Daniel/#Action=ChangeMessageVisibility",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibility"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "ReceiptHandle" : {
          "equalTo" : "e7wigo916gpqv4t9t3plbxq15l4w5nkvcgidqu87n942rc9ikmab3xfr1ssid1kloe32p9g6fcfl8nb6ztwf6lbcng35tp4f0unflb2qzeixkkr887jy197cyd34m99eirm1be177ihmqtalcg3o21vwfqam6vzte68g90eietsuupv3qtk5rhei"
        },
        "VisibilityTimeout" : {
          "equalTo" : "5427905936633586521"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "a73769de-b215-3a0a-b119-42ed628f2026",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ChangeMessageVisibility"
        }
      }
    },
    "insertionIndex" : 94
  }, {
    "id" : "3df2390f-133a-3b23-9576-b6a9394e9b0d",
    "name" : "<p>Changes the visibility timeout of a specified message in a queue to a new val... - 200",
    "request" : {
      "urlPath" : "/416998583581390290/Nyla+Sawayn/#Action=ChangeMessageVisibility",
      "method" : "GET",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "ChangeMessageVisibility"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "ReceiptHandle" : {
          "equalTo" : "8903tou9hwa4veopvxgivrzp8bj8bj0mie0nurbxvgmbtdmjpdqswca08we67h30ynssaa5wzqde73flu89u9jk3zw3lcv6v15e79vs001ka1mih5t0n7plu67xtwodu5"
        },
        "VisibilityTimeout" : {
          "equalTo" : "1352716899256820076"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "3df2390f-133a-3b23-9576-b6a9394e9b0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_ChangeMessageVisibility"
        }
      }
    },
    "insertionIndex" : 95
  }, {
    "id" : "6224b830-03e6-3184-be0b-fb285d6d08a1",
    "name" : "<p>Adds a permission to a queue for a specific <a href=\"https://docs.aws.amazon.... (text/xml)",
    "request" : {
      "urlPath" : "/#Action=AddPermission",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "Action" : {
          "equalTo" : "AddPermission"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "6224b830-03e6-3184-be0b-fb285d6d08a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_AddPermission"
        }
      }
    },
    "insertionIndex" : 96
  }, {
    "id" : "60b9b558-1fc0-37f7-a7d3-4b0c58535260",
    "name" : "<p>Adds a permission to a queue for a specific <a href=\"https://docs.aws.amazon.... - 200",
    "request" : {
      "urlPath" : "/#Action=AddPermission",
      "method" : "POST",
      "queryParameters" : {
        "Action" : {
          "equalTo" : "AddPermission"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "60b9b558-1fc0-37f7-a7d3-4b0c58535260",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "POST_AddPermission"
        }
      }
    },
    "insertionIndex" : 97
  }, {
    "id" : "e931cf3a-7858-3e0c-b97d-4ff37706556d",
    "name" : "<p>Adds a permission to a queue for a specific <a href=\"https://docs.aws.amazon.... (text/xml)",
    "request" : {
      "urlPath" : "/844768805743604424/Michael+Klocko+PhD/#Action=AddPermission",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "text/xml"
        }
      },
      "queryParameters" : {
        "AWSAccountIds" : {
          "equalTo" : "stg6rzebqqz41zh3cia7ddj9w2lwhsa6qehn2u4dypsd2kzsh1pimkgquwv4oahz6k4qbnds3735fwxlqrcq7bayautha8nh2q0r9xifz2tsxeke4bq5362fk3nnmzw5sxpqx5ycnn4y2nvaom417jchbhliamra51gzemqbruqg2ezeon846o8z1q7r"
        },
        "Action" : {
          "equalTo" : "AddPermission"
        },
        "Actions" : {
          "equalTo" : "2l9os90ia8dj281uyr51ha7oi7xwgowiz9kurw1mtfbrriz9vbdyy0qhfcnd6393ht1zmlkrwrf3sf4dhkw786igicibzrvk7wghzlphn4a5xv0nvbo8agy19fq3953sjg8qsrtfdxgrvrof"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Label" : {
          "equalTo" : "ducimus"
        }
      }
    },
    "response" : {
      "status" : 480,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "text/xml"
      }
    },
    "uuid" : "e931cf3a-7858-3e0c-b97d-4ff37706556d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_AddPermission"
        }
      }
    },
    "insertionIndex" : 98
  }, {
    "id" : "5ee11c20-e744-371c-9144-8429a37ffb45",
    "name" : "<p>Adds a permission to a queue for a specific <a href=\"https://docs.aws.amazon.... - 200",
    "request" : {
      "urlPath" : "/5135874738509681336/Janis+Abshire/#Action=AddPermission",
      "method" : "GET",
      "queryParameters" : {
        "AWSAccountIds" : {
          "equalTo" : "sivlqjik9kwp0210zcqa7sqglpha936n7qa2904aq7z8uyt5y32j8"
        },
        "Action" : {
          "equalTo" : "AddPermission"
        },
        "Actions" : {
          "equalTo" : "tnhshn7iwtndx9pp8it8cc9870g1zj7gsxy8x1w49fh9rp0u0ep2edl7prttg6atp6qsmsogtxyvtwkf"
        },
        "Version" : {
          "equalTo" : "2012-11-05"
        },
        "Label" : {
          "equalTo" : "consequatur"
        }
      }
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "5ee11c20-e744-371c-9144-8429a37ffb45",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "GET_AddPermission"
        }
      }
    },
    "insertionIndex" : 99
  } ]
}