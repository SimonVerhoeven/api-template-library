{
  "mappings" : [ {
    "id" : "901f1ed8-5b95-3184-8572-03fa1305c1d1",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/3hfvhyalgb1em7ww7brvpzh36holnso19wo1z9y1yqfyylwdy8czoy2nuxvlo4l53q37j2wm:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"g3jl2nqyv0x0sz1jqrmju6121oonoufm\", \"t6mokz8yp1rw39zhkr5q6cml91l3chkouyf6r1v0kkyyum8rois7fslj36r5qe6ld2w27cc6lsjy01sm2rxq4k\", \"hbh6wey6jv592fq29375oe4ub1tfngq9w596fb2dxaj5nxsbq1pnycbwr2hdrmjkr0ahqg8u4mr3hbhpklaxvgda92qrbtl4in0pi\", \"ls2y15kxn05qum121t788ar57wow2nu8clokgkjfhxzx2h4agbd2s6h1xh6qvsfvk17k9lkd5mrutylu2euzrcujsf9b6q9xao3gw7f7oih5r98b4l68ze7mg77hlsri\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "901f1ed8-5b95-3184-8572-03fa1305c1d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.groups.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "9f4d86f2-92f3-321f-a4e0-48fd8a7c9381",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/q5pxqrlwzarv8urz39oobuj5fk5ng15h3ft1dimq8r0pn6w1n714kcdsbvl592h4y5q39rnk36mvctv:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"wurrai5\",\n      \"description\" : \"Id repudiandae aut est. Dignissimos eos libero iure magni voluptas. Cumque repudiandae consectetur facilis dolor beatae fugit ullam. Et at velit quae at recusandae molestiae.\",\n      \"location\" : \"c2yt61vjsd9wh0ruxek87v4wqx69laqc0fcznpw35jp\",\n      \"title\" : \"Eos optio sequi mollitia neque suscipit.\"\n    },\n    \"role\" : \"500cy1n\",\n    \"members\" : [ \"fvik3lh597zf6g37wa\", \"3c16yb9ntca4tjs5qk4zq1ofrhvtp0kj2iumayz67d9u63mt5m8hkh1q3cxbtb2q6cy24rgjd2ohu6lwb5coeon6mllshvqfcmk677cuggmog437tu5l0deay1ncnk41n8p2sk3jii8x25p2utftt12qvrmbli0k39oxfolvqyezaewraq9un9bf78\", \"vn5q434dninrydoae3gpxrko269xg04njki9saexwiij9vf4xlmc46rjgbstcnja6c1pu9s1x1p1b\", \"kywnzs0yjt5p4ats501c77afvumhjs1435gxaajksknu8yre7egd0a1v3eh7lunz1z3a9zz78fv7o8n2i5ifq16n1cmk4x5jigfr3tzkpi7l9ko6mhtb53mmop2sas276k374hgjhxg7afixy7epxd5\", \"v5mpk6j8ja9mur5dbenzl6zmvt1nb88uq2x4q5sbxyb0vbnxci1mx0ajgfwlju4uprc5lj5raff5wjigzdmn8vzftx27gp7wmxvdmpctcq8muvr4m250bvbm66\", \"b7hrz9x6hb3iazv15qw9ieepq8d3vjnh61yrexz8nfj4glgqwjhejxcox45xfr8a5o86dkqsjwtzn3rnwpqai9ejebiyy469o7rj5ubf3udw8cd0e290n\", \"3nk3658ftas7lnfeq4jlts01ctqikdailtiwsfes7xcl7hx2fr52lo4699zpawf0xzeh51yjwrifxgto32rsb9xcna8fpx0gybrx438w8gjp60s6fo8wd5t9x3h09tlxuklulp0n7qe1vxh3wy9pbq57twzvsw0z4jclinp1xks8krivsbcti1d9mql0na360rt\", \"3ljl7ocuuf95u311mqhmw2mllpj8khpsy68wu4adu2rz8rcj2hq59v7f5l3b8md5s7t8jjbeix2g2qz1b84bmy5kzz6rgd33ihx9axvpnz58qat9qfcew5vasefoym677fx5zu17cg2ny9qtzntwpti43nshh5fg1ueieuprehrgh\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ngg0mh28f8qfi3hrelil9capug0fg6uesesagind65z\",\n      \"description\" : \"Quo dolor voluptas voluptas aut id magni similique. Aut et corporis totam facere. Sint laudantium nihil. Ad beatae laudantium recusandae voluptas. Modi consequatur et.\",\n      \"location\" : \"pr4n22t7hao6yf1vktwxiza8cu2gw6pf0s5xa6rogn25dlxdlab9tohhvc8htwd6wu70ok9t3jtddl9yf6czwoh442hh7brprkpves9rc\",\n      \"title\" : \"Dicta nulla voluptates accusamus possimus.\"\n    },\n    \"role\" : \"ubngqtrrgnn63ixjnhvsrosk11crsmrqy7qhgx3tv9tao71dt70s7p4zsxdwbae2eolmv1quj1vz9yc9w76antxgmlx\",\n    \"members\" : [ \"rkthvuie3kb3pu4og480s0ih5t62inyp62umzi5f3cbg02d2v8dcejvlbcb9ui8gbyytz0ikiez2hxxbfkmqytghkvn\", \"l9c88fswm7j013r2diohwixezfwungeirqlm7lsm23zosmxo6a72osuk1is86er9tvv74nr6vb46zpitysca0jz7mzeoan5lfmp54cwk5a2gd4ndj973jahmad88ba5ncze1lv3ov1kkez7xpr4fnvjdst9956j9dv7rli1r2jwfazu\", \"c6s654407o6wn8dinqr0vppxzbd0y24tg640pnprxqdw82yvnpj25qzn5fli5gqk871wu1lqw6uy3xm29cr4389niku1pcufd1554fogp\", \"ustwhv8fy2kqc2je44k6qfsmr4d8eetpk20irc3wis\", \"xhgx505eh9ugw0o9exzf\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"4ieriklmmr48u64rsucaismucl6fpkszkge70nbisnb3lwkbjf2w62x1evvbujpt2d60w0w15sjpqkwg1obpb\",\n      \"description\" : \"Et quis pariatur. Sit commodi ratione. Ut quidem debitis. Aut quia tenetur vel voluptas fugit aliquid et. Vero aperiam ut laboriosam excepturi.\",\n      \"location\" : \"1bo4csm2ag7687786b8z8mzfy24zvmz1frjxu4uvlq0mf7dhxdigj8kx71w4tbm289p6zox7lncu7pvn5k874gl0qe4ywzcu9phx062q8oz1ct5x3fjd6nscvcv3j3bv8ff4182\",\n      \"title\" : \"Itaque soluta tenetur autem voluptatibus quas provident ut.\"\n    },\n    \"role\" : \"cqq6e501w99ty3xbcxfhk8iuzlpgcjsc6v27bibc1gqmcqtfz9db5blzobmfmwavyjjlmfjkjzlo6yuqvbi5fv73w75uswvme7hz777hdibcajor05fl44ma6mgsojndimiui3jqohkaqpn1f6wr2g47ezrqs1mglocli7cpqd0tsjgmffwgfpkwo\",\n    \"members\" : [ \"5bufy6o6qbx1ca3puzdv12q3cx3ncljgj3lrgymlmpq13e6vyu8uu6k7l3\", \"othlj173gyouw18rav4gxfo4im3iic63k0iq2hlcvwxt4ellcit6u5135tdigck4vazhvhinqmmv4wu2q7s7orur6bavjx4eze4eavx8mc98jmqvnw08dvwzahjtiwxqd99o8liv7c4vhgh71pj5bjafliy3zabu8ar4fy2dttwieezak3na\", \"fbpvnki5ldudwrbnv18qd9e3z6\", \"0zzwwsbutpzu3rw6qdxkr6xqg8bct3cw0kgwdi1wpehftna0kkle1z5gqk6s7q7q\", \"b3m2aswhtc\", \"uhli07bvaq3f6rm41t7djepo605ya1i8qhwn4jx2b7frunvg28vtt8is96xznn3at0ep0lhvg45yajk93pqgbn36p8bujms\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"0yk2m1tw8a5q8q8qtuozwc2dh1se6vppl2oc9ml28by3gae8bskgmirypr74ti408z71rdgeqgjn700dp2yhgmtpybgs645jq7wgywbqvcg3q76wippv6xlvh024815agaxt8j\",\n      \"description\" : \"Recusandae at quas quis. Laudantium vel fugiat velit dolorem explicabo corporis quaerat. Iure ea mollitia unde omnis at placeat. Nobis veniam ut quia et sunt. Tempora provident iusto eius est deleniti\",\n      \"location\" : \"ci0pt7803voaecirg7prckv3lgyhz00hpfey68cjd9005gmx70nl0chfi8uuhdyw38sm5ze6ig0ebfzl9n2g60yvn0kyozgyiiedt9875hygv2m3u84w1dae0zqie0h1uwtv72bxy4dxm56fq4wofb9wuikpqqqkv30buue4djm6rrl2d6b18y7p\",\n      \"title\" : \"Voluptatibus magnam nam labore et debitis.\"\n    },\n    \"role\" : \"9dogwyn7g1b\",\n    \"members\" : [ \"tsclhe2oy53lx3eyfn8rbfiirnq\", \"p0kjov5qoo5z96zjxejhdwmxb95uqqlx99ws6b9uwiysqgz0sx45zirsub0ugmmwg6i0lc0xixfa7jq061dz0otv8sv4f0\", \"vpnl\", \"q9bdmcxo1ly9our2m812aqrevnm6skbyqv4fxg56yv2goj70zqhxadnjx8gh2bvh1jvpjc6r7s1gktpd850m3vzwhtwbxh15td7ezwi\", \"qt3mm29y4p5bpgkkn0xbwm48mfzq6jk6l28n1\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"9wpw96wf5encyxbrr5p0fabpwloye1v63w1z7rep12rckry1o91gp1oz7kpidst2n69outo1vackp3ht5mh0nqqhi5rjdb62pubssft18k5wl1gax2vci2fl67vdy557h8xq1etj02amw8gy\",\n      \"description\" : \"Facere dicta nihil est. Dolor enim ut assumenda corporis aut et nam. Laborum et cumque voluptatibus. Vel facere officiis et aut et ab et.\",\n      \"location\" : \"nxm96k4kpraj1wlodymoqo9fw3hp5dkgore16zn84irt8pernknegwdskbt0qyo7x27m8o9mejk7vs\",\n      \"title\" : \"Accusamus et praesentium corrupti.\"\n    },\n    \"role\" : \"vxqhnxuyyarnw\",\n    \"members\" : [ \"636q9ohe1nzebsj6kc9lwaybuxdszue\", \"dpd7\", \"75kcwbe06kbfllmu2yf5cq1qpbpbe4denxy7l1a2znqlfzbltruhmm6tze1iybmt2kyyzhk6tqzyy83x6yfwroakbzpw98x22gqpcsb2wnz3ah1whfcliq5xxohe474xl4glayoo0h8qg663d37sw5omfotba3j50fzlcjixogs7iy9acoiqkkjojndo3078u3u\", \"5mq1npoc7jd1zer12tb5ay37poqds0fhx3ymmcxjvoxm80hl9y258p2a53aspcqf49830vy84ftkvzvfqrsik5p63ioktb06bgo2v9haxvxlmui8oqstu2aosprj5ogqdxwddzdami92iuowj0owmh1r0c403vqb7qmeccr4hq5cfibyw5atclwhyjf0ckz8gnfbvsh0\", \"tvxcrk7xwrzmg7gg345uxpn75inp3hibygonebna31ptj\", \"ftk9ec42ux8fl5d6e6k94vvngjbacafr8g8jnnlu88k2otu1f2bdmmcm3xxxcgtsnx69c2g1l5tmei2cc1pldyi57f8nyxceonaae9dh\", \"kgcmc9cjp7k6e1iqa11hmlm7yma8hrgwxccysanm2sew89yd71e9yvu4cjfby\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ph0h4kym2oxoctqrpzjkb9rjas26ok0y9wq3zktwnfsonju9z3sjyzyt67sdkikujaf8k5g3zqqj1vvkl3inq5ay6jvum8ma29bfs33ztp0ir4j2rf5rawzq0hpct57a7n68iutnuqr94r1h8jprjfnxe\",\n      \"description\" : \"Cumque officiis qui voluptates. Nostrum enim maxime est neque consequatur. Culpa aut expedita. Beatae facere quod nobis consequatur optio reiciendis blanditiis. Est eius odio ea delectus et beatae.\",\n      \"location\" : \"bdtxzc3lwyekqofpma33vwwxl3j08guyzkvygfn7tbv42ogqvuihlb7wj\",\n      \"title\" : \"Rerum ipsa sed.\"\n    },\n    \"role\" : \"dbceba1a4f4h6p3q4qz2qz4de9sotdtkkoq6f3umz4mlw5l2ufze2b3elgj6oe5jyye1vs3kfy1hsegy2fgubljq7f3xhvrjohpnf88v8a09p3mnryan7w5ub2kvu6bwmpvs70701l2xu1dsu41uwd31up\",\n    \"members\" : [ \"a1dd3dat7pogze52a6zpriymlq5prhyz8n0qw5fnm8d73inrvmguc6vpqo5s7vtkkt81xml\", \"8q2igelq3j3mq5q3yween2rakckrqlqjggoiuhb675jf97lh7ugxpk7iknlyzcgsfrsoyj7elfukks7xkann5ifwy6z9d9b4o1mkunh78q0w3x0jqvdq9lcl2ziqh3bwcnp302ehmqpnm51exb\", \"xvcuo664xeui5ahnoeke6tqq0i6zynalz4eq19gmwrpv1s0rsvmerqatq4zp9blm9ihkbh6nm693w0c24j3inir\", \"fvlmlhvgee4q8mjzgfl2erc9w76ck4j8t84oy647lgt2rvw51d76lnojnwa66e767oloohjoutpyx3xt938sehzgqi32og8th23cqhg\", \"63yqsdw2zf2o140n9vha6vlzjzgdzs\", \"6vmillk2xd2eo83s5vy8jmrzk8249ky653giyibk3f8gsjz0so9d9ay07cuaq6kvudagpe08sn5vkkfrrosrzh9lj57bd2iad8avzrur4q3vf69lznqzxhjywztuhmxx2krhvwucbf8fppqzei30032ne4ewvp9ml21jmcsjxqcsbtqr6cfwcvc5ti8laey\", \"vv4bvkqi3wzfmpnm8z1f10t76qrf33umuejbztwxzqqces7a367yyvtkyv5yym9n63g6nbxij0s14kaw0fguiui9we4ycd9rysiow2fg5poizfxccgor5vfxe7npqo2pzn6tt7nbk2zbhgyfua5tiont7t7dcolmb8gpk8dg0y5083i8io84zvwkgcrrizwowpfgv\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"2g63er389hezq6varamm8t52dcah6p1g3530xmi1cthziaum53jhtozdlg7tc5uecidbzmv6id12v3iauxf9opehtmcl4k95dqcp0d8ioa02c9mv19qegz2uwa58nirwwug5ochdpv050o6snass5889b6qh\",\n      \"description\" : \"Nihil et similique possimus porro aut. Vel rerum ipsum dignissimos velit dignissimos. Consectetur sequi quam architecto est. Deserunt rerum ut aperiam ipsum vitae.\",\n      \"location\" : \"2x49ed4pnesqq779aryf1xq3qy9qd67i0yifdebuxys83n63vb0kbdypgcota8rnxgb4sagu\",\n      \"title\" : \"Sint doloribus debitis pariatur ducimus qui ipsa est.\"\n    },\n    \"role\" : \"0nbvkigl3ejrf1qb7tsvb7m6q0s0d2jk4wk8j0qrr2tb7azuif4vrrb53mjrbqkkapwr3e682vyisw9o9etb0fataigc9jdijsq10fyk077gf7q34uxbta4yx8qti0q226e95gfv287inac9fgmb8a5gqsxcrrjjbrxm3cxdmxn4au1\",\n    \"members\" : [ \"rgfecui65b4cp7yh0j22gyxycdjiwhfgq4umjeglp3q7lwnwmqgx\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lcq5jh0fpyf9w60loaz4k5f4qfjlz8qac5vjyo0ct8hpthec2huna5qr7juc8guoq\",\n      \"description\" : \"Blanditiis vel quod quas iure laboriosam. Voluptatem qui assumenda molestiae. Non aut qui reprehenderit.\",\n      \"location\" : \"1to02os223lnavk8cvmdf30j456g62wk7mx5jb5ni7a5u7bprru78w0efskclo4ogq45pi5d2g1x1rzwf0l4hzrcdrmolx9v01wnmpy0z1gav5459nwvinzp5zpgm44i48z1cwfgsi01cbyw02bp2lit0a0mvfqyrmbz87dlx3cp3bitlfp9vhjotz59ac4ler\",\n      \"title\" : \"Soluta voluptate eum totam nostrum aut.\"\n    },\n    \"role\" : \"0aeue616jzbetf7m19hnsj6njl15dxaqkk9ve3r3eg5aufcw2wi3w7wjirf0xt086sonwvtwpfh9erl2uflxrs3eep9\",\n    \"members\" : [ \"1upo7h1cb60wfftqgxxqe31az9ng0m6io1hsot9skpabyw3k5o63uy0dcem3f2gl9esoxijzljwrn7emowngw53t7anil5ouyi8dlfoau91dzgscoxgubu23bedhaxmuycjrod3jjip59u67l66s4vv9u8dzhwhsdsld8dmsxihrmv4x73ccfyshvkld6na8f\", \"mtm53btsrveewocipf5b7vi2wa93cyjvi6uzv9ycm988umv2xu9r5gr3zpxslj15orujuv415zndeoi0mqbfb01xq418lcpw4ruvitao6igznsgt\", \"0ywchff4kq412z31dulv8dd67n9tvivl3dl3tlropigr7ejrpmvqexzam6\" ]\n  } ],\n  \"etag\" : \"est\",\n  \"version\" : 1813995247\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f4d86f2-92f3-321f-a4e0-48fd8a7c9381",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.groups.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "7bc8dbcd-c39b-3926-87b0-52314dcf24ef",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/6jkzwqz:getIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"8m1uvz9pyax86n1oz1xm0ohwmgwustqbrvj8iitz2n6ooxf1ivt5jrmg9lwt1qtpmovchage9d2gmf8spn1r6a7j6hdu5dauvwsmz5cl4whaooh5spxyzygwhsr3qx0nupoa8n\",\n      \"description\" : \"In nam ipsum. Et fugiat rerum reprehenderit qui odit. Architecto occaecati rerum amet ducimus sapiente cum et. Qui omnis eligendi quo. Quia nemo ad omnis voluptas qui debitis ab.\",\n      \"location\" : \"ze6kxyezvh2ovhw4lqocdodvtof006gdvlfuxr8tufn3c\",\n      \"title\" : \"Voluptates non dolorum ipsa quisquam inventore repellendus officia.\"\n    },\n    \"role\" : \"z1z3cthborqusnbtro6xevpw3rz81utglbqba5kxu9nfu18q53fyawhlby5i2yq5fcmicpqq23bjjz5fmnjn7gu3c3b65pk8blv3luo3nlo3h3mhh6imlihq7klzzvu2qmhwxmdar8vvjkwrmxopg297re33e81mzhwrpu1hjfxn6vnurbw2p\",\n    \"members\" : [ \"xsjo77t1zwvlfwb4xwd9azqinnekqg4v10ufeku404wx169vdp6q2xjwekwx3gedvz998sl6i8v4bdc5kk2zotabt8l8nbe9oiamap4oqccvmtrk6ckkezvsgi75pxh3rpfev5jt413ml2jza6ufujwmmz4bmyi8y3yw7qdd8ro970brx9aejp\", \"maaks9ohmznn0cevopp24z6icqc53my0rr0x96n6ex7d7o3pbn3qd4xydxvk9zi9texqj14lhm218zq97sr25pgk8d0iv\", \"0ov3cch8c6nrrdeoqbiaicbxqqu1e7pfu5bb61ty9etrqd0yr0nxbcrzhgz17fbffmy5vke80q12rv4pntif4vyqtwrqm8imc1rohwtqx6uq\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"2svqa7nx0jcays3ad6ay2etl19xgux0aqrv9ioe5rbsghdv89d3\",\n      \"description\" : \"Ut accusamus numquam ex nesciunt qui esse. Quia voluptas repudiandae iusto. Sit aliquid aut aut vitae temporibus cumque. Sapiente architecto odit cupiditate illo. Facilis voluptatem magnam repudiandae\",\n      \"location\" : \"dapx24nfwaunze4u0djvkprh1uyy3m9tcfemmzzaewi2fukjk8ac4vdin32extdy360wyl3qao4vc1t8sc5kl6wnagex6eozwrgrqhbogf8ea4zvqcvonpdjgyn1dgm9qetst0ng0erfo66dows7ctto7ilpjfvs1w\",\n      \"title\" : \"Officiis amet est quo perspiciatis.\"\n    },\n    \"role\" : \"40nsecgntqp39lcw0h0znjy5wocwuuwou3svc3y4ixrjlqz2zi00o5y25h3ruq760rsrw11fjuhp02bp3ixl4ntz4v8x7ry80gjs94q7k9ft8qmrw\",\n    \"members\" : [ \"vnf5r311bcyb1myn7z1xyklbuamvv360a48shg77wj7qjsofl9g\", \"k3w3aqlm7vhteeaxowj1lyoku6\", \"mxmb1s18yk0h69ghiplbw5hlzqod8n8vfdhtp6fk7r0m1vumyhj0g27i8gr0nenz\", \"xdleiznn9du5vg7xtmonjkrr7mmrl3gvi2ynlsw3y14pmnd1gkj571xdx6gdwaa6f5vzk1ys90vy5uijaa7ldmzau9821ne\", \"alixb8m6o4nw0bwzl0hzjxb5k02s28xy9l4t92ecj4b400lu7oizk2wnrmd5fbwkfetoi0ec3mu9auuvmnwbnxbxs8qp691eddpug5tlfxh9wsvf71mxxyff4i\", \"4um5xppt38isu6sywmxsa2k1ppm12j7zy7lqc3nsp4g\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"0le2ns3onggwnpv494v8prphqgilnbpdnx99je8mld86msb4q7uukvq5m42kaidiuppem\",\n      \"description\" : \"Quaerat earum asperiores et inventore quia laborum aspernatur. Odio quidem nam. Voluptates beatae nisi repellendus qui quia nemo maxime.\",\n      \"location\" : \"6w3sot2dqls76ienx2j3ztp9veo6pc3\",\n      \"title\" : \"Nemo doloremque in et quae minus et reprehenderit.\"\n    },\n    \"role\" : \"ahut5ie1ptj5rqvfn1zo5gjtzbmp12rybkj5lv6glc6fn4xi5qrfv1vvpu5g04u3viwne5gma\",\n    \"members\" : [ \"bjpyb1ta3lxdb3fq6\", \"5q02w3bgc1xjjmab6zqaodthg7czbwywkp23v06rhwxfqhy8nt1oi4b8dx79kd04k1acmqd2rhkjmyr6j00wbuk0zy6t9ftcqe45lh815n10zp1tniue67371azkc0ij270tsd851vmamyhtznxmbz018apaz6i6zce1smkdg8qtu\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"7klmv4kw8ye1lo5wmcrgnbyipelw\",\n      \"description\" : \"Pariatur expedita nisi fugiat fugiat nesciunt ipsum suscipit. Necessitatibus blanditiis quo tempore fugiat. Saepe recusandae quis iusto aut.\",\n      \"location\" : \"ao47ts6sc95pssckvv5qkp7x5flr6jfwnwqt6rx23hj99j7xlbcbv0p021eupf1g0qrv8qv3qr2342mmen13ihp4epd75vra51xhkuemwwat9fjyyvb03k8ctdifd63xwnmn42\",\n      \"title\" : \"Ipsum saepe eos id.\"\n    },\n    \"role\" : \"1s51xkl0krv5mnmryubm7sr09x6av69jjei3qimew6xj3e2vsml7v3s3x82xpg5ajtwgf6gmtykg327iylap7e8l531qvxcujdxzyu7eo8oxltpw66hv6771l80w6kv2dw35jo3kyb9uq0q3q6j1xk4tdyt85smin1p6plgbtfcy97sw1sfpo\",\n    \"members\" : [ \"kus2wr7xxpf6sj7rs58j0ji29ybftpqui548v9xygoee21o605tn8hmhpvllx70jsrjr2j4kmomv3zge62zxm\", \"i5koa818m3iud131xui6org6v8zli7vgme30fnb6lnqkrc927pmelwve3s1wiads7wr1x0kq67y09vruwsj203cb7tvzgtap9tg8u898emgz89v9db6t0dnnvjmu1j57xwv4ar3k00wk0jr34ftv6xbbn6wa4e\", \"tb6gb07yxbz85f8z0zm0uq5rw2dqdo6ju2qdzbzv4fe5t3iumgj7ads8qogoqmx7tuttk\", \"hc5xg55ndyadv025pjo4rh5x59o9hgvixu0yegsizugc8k1eka64llxogmzyv6f8wgx25xk\", \"u7q8mxhlb11848mwgwa4231aodz4bqtehtyk6catxd6932r7y1usjqdt27br0bmqjaqfehbr3x4yyjydpsrkiyw3mz34q0b2g7mmtsxfm22o12qpcjre6d1qnlus7uc4vrao7wbxbniep8o9pgxyzfh8idv2i9075qaqw6dx1vzxxx80uu\", \"q3wh87w\", \"omkvxc35zi0aah5h59xp8ylpt2ii8uv9828nveeianrjafu9r5gh2pml64fq0vyztbqjea6zqhbm7x1xaflrrkm6yaodf3mfl4s85x8uzgqu1r3ds7mkp7mo5z9b2wjw11wpkabokce3hkjhraury4q4mv2tgiwckm0bfjopr5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"slmltvxwb15ih568nfek4cx36qikpmpoib1710u1uu3o4wdukogb43crd4wqwl38dnb0qy7kaiaklw6cl8sojs1f8mpccks2shqdg7pqfwmowyhmr56vtb8kuihgze1pj5on35nnfav6pq8kl1h825quvbo0a8gm3zyk7cl7cm014\",\n      \"description\" : \"Qui fuga quasi et culpa repudiandae placeat saepe. Similique quidem reprehenderit sed maiores. Voluptates molestiae quidem tenetur sed quo. Porro sapiente quia animi quia eos et vel.\",\n      \"location\" : \"jrwuyvi8v1kwkixh4eqis1igmqw0l3bphoilsd3mr3yhz2nb8ikh84iu5xbb3eoixf907uimmfvb2zghxxqxgp5l50axotu1rrenicnsh2dylovm5o6fts0ziv1h1idtflkpvph0ufa1rj6ai2ie79fukn5wtbw2tovnayl3evt50mvl67aoxb5\",\n      \"title\" : \"Rerum harum laboriosam non nihil recusandae illo laudantium.\"\n    },\n    \"role\" : \"1b4j4i0c2ugaj3himmzxezpbg7\",\n    \"members\" : [ \"jwtek8gy04wgaw1um4dxswmyugtc17os77f27qikot7m7lbc5icvubzuk9bl42z16uzooxedyj9\", \"ucol9elck9f8w3msk974hnq7n6ux8z15na06dd8tc0olczjzund63f6gfhfs50qkkloabfuyphqnqqgfvg1jqanoz0jjz6cipdxg0hb9v8xzhc4pmgfteto2\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"2ilzchl33bfm83907fck4at1iing6kjxf626ochw9opdw71l0sredb9e4synsjwtqc78plwanbth1maa2d8p0d5xr3ssiwkcj1tqbg6jom6pt\",\n      \"description\" : \"Dolorem quo et quas. Et vel magni. Sint architecto sint voluptatem iure vel quisquam.\",\n      \"location\" : \"1hsovkb5vqju6ddwlkbz\",\n      \"title\" : \"Quis et explicabo quo et aut repudiandae voluptatem.\"\n    },\n    \"role\" : \"x7kr2axlmy0nki2fzo2e0qs7k3jo3s3whjhg06ooqtc1rd244dwmsvvkkxnyvia3r7xg7iciiit4dz5ythv7g46hmp6q3865wj50c36tqfnjh6jx72ky7e89etb1t13ed3r6vdqnnq86oaw5rqm2y4rm4k2yz14h172\",\n    \"members\" : [ \"05r14z7xe4uhrtclwiais5kbwoi708jun9gixvpyd3xshkil0m8aulcgktjbw1hg2twu1r8szvg\", \"ioqqy3dilo0rvn3yr3yxmf3yzlfkossh90ri7moxy9w0lsz5dxymh7n3dltudeb622h943ywe2ti\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dxmaak34ex9rpvetqt65p60zx2gppp82p6f1im4pebrsrn9fru7tl99s\",\n      \"description\" : \"Molestiae molestias eos ipsum molestiae facere maxime ipsa. Iste voluptas voluptatem repellendus. Voluptatem voluptate neque perspiciatis. Quos porro nisi voluptates in fuga aut amet. Omnis sed sed.\",\n      \"location\" : \"vj2h77hdd3yojhqhx4np6e3dcwe96olfpnq9v5mmw25z4f277aqrbb94nl4h5hli69q0rwss86gaycz3hagg21s8842sa6xpyjlquhm5vt15rnif4vb1beivb16hdccet8xw5\",\n      \"title\" : \"Accusantium illum repudiandae.\"\n    },\n    \"role\" : \"7ygcrgxs3\",\n    \"members\" : [ \"hygjijp1p633cxz1y9qppp3345y0yekbfrypgvaltm0sfmvttqjzq6ri0a1hvuhfvnk5gqxiiy6230edh5eebp2c2tz3xrvwkl1631iroh9khqwdjnr4sk2jsun60ee78lv282uxu44tioxja7uxdw7i00f9twnjcs8brnkucapkf6yp3jvz3ygxysll\", \"zowr15zgj7zbd1f535515yetiu1pj5p9pr6stkp3pyzvorfs86xfgt8ywlh7t6a02q1v9lc38\", \"c821nz9423wdt4h5jadp5749uzn0uqi85f9zjfah7ia2t9u5x0sqmjvp3830hpfra5isuhsp1b2zp780uegdrsdi779ymq38ng1oftb1svy\" ]\n  } ],\n  \"etag\" : \"aaaad\",\n  \"version\" : 399038414\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7bc8dbcd-c39b-3926-87b0-52314dcf24ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.groups.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b98a66a6-3a07-3066-b889-e95ea51eba55",
    "name" : "Deletes the association between the device and the gateway.",
    "request" : {
      "urlPath" : "/v1/m0w5wlxyzb5x3dxph8npw4rbdcn02r8tf3vgfo:unbindDeviceFromGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b98a66a6-3a07-3066-b889-e95ea51eba55",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.unbindDeviceFromGateway",
          "schema" : {
            "description" : "Response for `UnbindDeviceFromGateway`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "44d3a19f-368e-3327-9ba2-4047ba43c87d",
    "name" : "Associates the device with the gateway.",
    "request" : {
      "urlPath" : "/v1/ngu3in3of4qr1hf8jm0p4wd1df9bkvlc2rt3jz5aus7ipqbm6lgtvd460lr6vg6xa7rl5a6sn9j0jnrmwkgpqso5oze8mbl9vtrw1til2pu1rt2fh91g7g1qbiugc5xz14dol353vg4kes8sd6hiom2xu9rb85r50jpivuhstwt53farjuy4c93y9wlzz8b5rgr:bindDeviceToGateway",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44d3a19f-368e-3327-9ba2-4047ba43c87d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.bindDeviceToGateway",
          "schema" : {
            "description" : "Response for `BindDeviceToGateway`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "06688614-2373-37d6-bfed-a2a115144c87",
    "name" : "Creates a device registry that contains devices.",
    "request" : {
      "urlPath" : "/v1/x9h9qai5p48slpd7qymsi5qt44ma92n5g8sh3izw43b3qb0k4xe68mpym9a5ckonmcqqf/registries",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"httpConfig\" : {\n    \"httpEnabledState\" : \"HTTP_STATE_UNSPECIFIED\"\n  },\n  \"logLevel\" : \"INFO\",\n  \"credentials\" : [ {\n    \"publicKeyCertificate\" : {\n      \"certificate\" : \"w4h3a1liu0x3qcnhnz3soynfvxjpse89opfvr4u\",\n      \"format\" : \"UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT\",\n      \"x509Details\" : {\n        \"subject\" : \"me9qhvc991b4exgy8nzo3xvxzo7ixr9tt7xs0s\",\n        \"expiryTime\" : \"2023-01-08T13:21:48.470713Z\",\n        \"startTime\" : \"2022-06-26T16:52:48.47075Z\",\n        \"issuer\" : \"vu6dxrm44n2njzqbcyvqei0q9snpnz6dn0rggm8gr9zwm2uf7pbnsf8fpwqmk03ztam0\",\n        \"signatureAlgorithm\" : \"mwynutdmf01ptqrfyf4k0krhbhcy0362xo9yw2oscpp6703s2c3r75ko161df\",\n        \"publicKeyType\" : \"eq6ih74hvdwfljat7vnse8uhij5\"\n      }\n    }\n  }, {\n    \"publicKeyCertificate\" : {\n      \"certificate\" : \"xqrw8x1qqh1r162uq4fwmp59mk12hr8tzcmy\",\n      \"format\" : \"UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT\",\n      \"x509Details\" : {\n        \"subject\" : \"5itbom3jmclxj6l2jcs7qkam71jmmlu75yvey2p\",\n        \"expiryTime\" : \"2022-08-08T15:13:48.470879Z\",\n        \"startTime\" : \"2022-06-24T17:03:48.47091Z\",\n        \"issuer\" : \"rsmcue7rsh7ncezivlh847vk6kh7qmk6sth699xkzqjcdfrpplmiwswxqcahza27ql4lgl729jozke7wgn5jz3blijp2w5eoeqnxwwre5x74kv3kmrmvhwm1o14cwgrp\",\n        \"signatureAlgorithm\" : \"ptsxsqo3avxik0ps8hcw9l6vmggk9hfy0syziok2895l0cme4ovost5imsh4j78qezm34cmyqg0rksmth8t89iwovv39ealhy6s453afs8md4k1uamgl70vxep6c070p5kk8kw1cdp\",\n        \"publicKeyType\" : \"rdbr0xu6jgjggp7t1e9i6hgorm0j9su2xstca7i1ib7zlcwlete1q36v6zqp9nzuttnvwcl4714yu7kdxhhpk7vfucvxhygoq0kdz6uqn2x08gcupn6qvc07bk63\"\n      }\n    }\n  }, {\n    \"publicKeyCertificate\" : {\n      \"certificate\" : \"rjlc4icstkkif25q\",\n      \"format\" : \"X509_CERTIFICATE_PEM\",\n      \"x509Details\" : {\n        \"subject\" : \"0d8jo927lmk4j6lmizv3uhc2f18edgv18iaeld54x57\",\n        \"expiryTime\" : \"2022-09-08T15:24:48.471028Z\",\n        \"startTime\" : \"2022-03-23T15:32:48.47106Z\",\n        \"issuer\" : \"k8tb8dn2zem\",\n        \"signatureAlgorithm\" : \"rjqey4qg4lkxcjbw2fveef4ncqnwbknmeyl8i7w9p4nloazkzh46nr011zjw561puaobkuq6ak7bk8r0c2u5stemng7l0q2alivjy40y2bzn83dsae2viotzu1l9qt\",\n        \"publicKeyType\" : \"sj3g41xk1u9fxh7i7rhklox2j1oct3gwnuwx11mtmbicq0i1hmmoz6zyxnj020n3gzlltaq5bbg1bt59mpxhub1fkdpn1zf4ydmox9fwt9b26tsc64hy053x8wqbzy579pf8hmjnqirylkhwa93o46t9v3do5dj0ay3s9h\"\n      }\n    }\n  }, {\n    \"publicKeyCertificate\" : {\n      \"certificate\" : \"h7e0u43kp7vaev5aqsale2is521l7gevupv5jt4r5juahqxlh5yslxnpd2198o7mipo0osfilwk7tc8d77lmd5oenx8dh9k3loe6d2zs3z3qvyx8a0kmga41cw04h0u6lvqpmrhkx7cmyb44z7d5o7oc064m4dkncvudo\",\n      \"format\" : \"X509_CERTIFICATE_PEM\",\n      \"x509Details\" : {\n        \"subject\" : \"2o3fei0\",\n        \"expiryTime\" : \"2022-06-29T16:52:48.471179Z\",\n        \"startTime\" : \"2022-09-03T15:52:48.47121Z\",\n        \"issuer\" : \"9qbv0ogjtqi9l2aj1x7qpy6tlherxdz1d\",\n        \"signatureAlgorithm\" : \"q7korz1h5tvl42ovud5vmwdh9ku542plkw2g6sxf3grz5kg4pp7dnuckw5qzfjg10xro70bgc4nrwl3zqjs0xo34rk807pp20piw9ewk287nde3abeeyez7wqmzo3to4ylw0uawe71i4yxulzfddzt0kazfvh9iwm4hs8k8y\",\n        \"publicKeyType\" : \"vlfkbsdl8w6huwrw\"\n      }\n    }\n  }, {\n    \"publicKeyCertificate\" : {\n      \"certificate\" : \"x28y31txjh5bq1xlocv8nz5tba9n9j494ff4ni1fa81ozhncq1bauzptz997l3cjxysj70mzt4h6gvyqsqbbx0dalhvzaxcyxmpjxoddvr1dexsurzczzlwls5jkq3t5c040sv17w1mzid5t3jye0eyg5l\",\n      \"format\" : \"UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT\",\n      \"x509Details\" : {\n        \"subject\" : \"89jsl56eob76pm5e4vfedf8io3z61vx4f59tq9uxye8db88bvdix34e8\",\n        \"expiryTime\" : \"2022-08-29T16:15:48.471418Z\",\n        \"startTime\" : \"2022-09-15T15:37:48.471451Z\",\n        \"issuer\" : \"l8cgpirvyrn5sboue1d7nbcillf1np69udmknpdtrkfswil90tofz82yu262nr2bxpeq6qvmcyabphso56v\",\n        \"signatureAlgorithm\" : \"cwniyar79bk0uerual\",\n        \"publicKeyType\" : \"yk024lq3kklp3k9jwjvvikv6myikwy4ymgbfk4bkjhxcia3xmzj0angy342n59c7wxtw9xgrms2wa3bhxms4x240h1ktzpd4oc2z7skf9hjn9j9cxd2q32jqtotcw62uski63x4w360ryyqplotvllyc2b3edd4726lqn0qi18c0xcu\"\n      }\n    }\n  } ],\n  \"eventNotificationConfigs\" : [ {\n    \"subfolderMatches\" : \"ql1k9c35t3nif58qi6ric8qd8cppzbxnm2mrok9352zai32tw3qct3yoiq15f6cg3fkvwp13sxpskd7rqpz20v8uscx2mk50nf9w024l36r0idwcwp6j292orsj61iba84jq5ruw8n3tu2o7arznz\",\n    \"pubsubTopicName\" : \"Ms. Vance Lind\"\n  }, {\n    \"subfolderMatches\" : \"9pgentlei6it2nm9ad1a\",\n    \"pubsubTopicName\" : \"Dario Veum\"\n  }, {\n    \"subfolderMatches\" : \"2umwdxamarvli012ty2su8al0s2qhn5sddq2uhytr8t2s14wpu66ri35oubnaqsnghcdwedrdned9g3yvkmo8f6mz3hifaxdp6r2gokrejqwk1r3145yw3a3kkrtt6d71sb2xgjiv6z\",\n    \"pubsubTopicName\" : \"Edmund Pollich\"\n  }, {\n    \"subfolderMatches\" : \"uhdrhf6zvvt0hslq3qq4ofvsalm135cmacwqv585a2nzj5svkfj4k7y3b2zgfa8blx5v28dnqx0t63esuhxm66ewekxa\",\n    \"pubsubTopicName\" : \"Colin Wiegand PhD\"\n  }, {\n    \"subfolderMatches\" : \"qz9nl1iuuqls2ampz6kl7llng92lkfvomvxp94n4203p9z6x6jr80xy9nejlktby1djg8ql7wiohcmzmpfamqvcin9v7d66cxpsvxy5nyu6tlr0m7\",\n    \"pubsubTopicName\" : \"Fausto Von\"\n  } ],\n  \"stateNotificationConfig\" : {\n    \"pubsubTopicName\" : \"Nicolas Bartoletti\"\n  },\n  \"name\" : \"Salome Hyatt\",\n  \"id\" : \"qdht\",\n  \"mqttConfig\" : {\n    \"mqttEnabledState\" : \"MQTT_ENABLED\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "06688614-2373-37d6-bfed-a2a115144c87",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.create",
          "schema" : {
            "description" : "A container for a group of devices.",
            "properties" : {
              "credentials" : {
                "description" : "The credentials used to verify the device credentials. No more than 10 credentials can be bound to a single registry at a time. The verification process occurs at the time of device creation or update. If this field is empty, no verification is performed. Otherwise, the credentials of a newly created device or added credentials of an updated device should be signed with one of these registry credentials. Note, however, that existing devices will never be affected by modifications to this list of credentials: after a device has been successfully created in a registry, it should be able to connect even if its registry credentials are revoked, deleted, or modified.",
                "items" : {
                  "$ref" : "#/components/schemas/RegistryCredential"
                },
                "type" : "array"
              },
              "eventNotificationConfigs" : {
                "description" : "The configuration for notification of telemetry events received from the device. All telemetry events that were successfully published by the device and acknowledged by Cloud IoT Core are guaranteed to be delivered to Cloud Pub/Sub. If multiple configurations match a message, only the first matching configuration is used. If you try to publish a device telemetry event using MQTT without specifying a Cloud Pub/Sub topic for the device's registry, the connection closes automatically. If you try to do so using an HTTP connection, an error is returned. Up to 10 configurations may be provided.",
                "items" : {
                  "$ref" : "#/components/schemas/EventNotificationConfig"
                },
                "type" : "array"
              },
              "httpConfig" : {
                "$ref" : "#/components/schemas/HttpConfig"
              },
              "id" : {
                "description" : "The identifier of this device registry. For example, `myRegistry`.",
                "type" : "string"
              },
              "logLevel" : {
                "description" : "**Beta Feature** The default logging verbosity for activity from devices in this registry. The verbosity level can be overridden by Device.log_level.",
                "enum" : [ "LOG_LEVEL_UNSPECIFIED", "NONE", "ERROR", "INFO", "DEBUG" ],
                "type" : "string"
              },
              "mqttConfig" : {
                "$ref" : "#/components/schemas/MqttConfig"
              },
              "name" : {
                "description" : "The resource path name. For example, `projects/example-project/locations/us-central1/registries/my-registry`.",
                "type" : "string"
              },
              "stateNotificationConfig" : {
                "$ref" : "#/components/schemas/StateNotificationConfig"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "3e9420c3-3377-3644-8cbe-778182c4102a",
    "name" : "Lists device registries.",
    "request" : {
      "urlPath" : "/v1/mqrlfa7p27lmbu5p84i3nhjcu5ep47vibgd3lyswk2fx4fgv3ffpnt8vc1p5kygdaqi6z/registries",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deviceRegistries\" : [ {\n    \"httpConfig\" : {\n      \"httpEnabledState\" : \"HTTP_DISABLED\"\n    },\n    \"logLevel\" : \"ERROR\",\n    \"credentials\" : [ {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"h0jk6pcr6h2xuxr3yb3mm1cvrgt\",\n        \"format\" : \"UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT\",\n        \"x509Details\" : { }\n      }\n    }, {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"kiggdwg8kc5fqrtpu2mtvvj3erjcimsdp5b46f3nessph0rolnwtte73kd7eswhwgxtu6cwdpdn9777qj6ia0smn5a1l8eu5i5ehwlul685z6girg0ux71gzjb9garrrlplmqnd\",\n        \"format\" : \"X509_CERTIFICATE_PEM\",\n        \"x509Details\" : { }\n      }\n    } ],\n    \"eventNotificationConfigs\" : [ {\n      \"subfolderMatches\" : \"kq3zsv0s7nj5ab21bv0ef01gj1end50ye9ca6uy5w92ch79hst9nw9e49wo19n5sr\",\n      \"pubsubTopicName\" : \"Ms. Marlana Hoppe\"\n    }, {\n      \"subfolderMatches\" : \"qpgnmw6r23gmvmbc2gyzlfokdam9bv2chodykow3128lllz46pz0njiy788qrv17zvnxjgkknb4dsiry23urvp90qk1\",\n      \"pubsubTopicName\" : \"Christene Crona Sr.\"\n    }, {\n      \"subfolderMatches\" : \"tpps4c0rtxkkzf040exqgw4t08yi7dipkd7s4ises38jrhyl8oi4a9eszlwjnjhmi3k8enlyk05rcye8czbdf57qgb8sjdgg6fni4xjcn0puwz16phu4fifsitulzxoadkywfhv3yiyyuae1jmiarff1fsipblc4f7b7woovwfq4u9avermn9\",\n      \"pubsubTopicName\" : \"Siu Bosco II\"\n    }, {\n      \"subfolderMatches\" : \"k6lfoa4kp83ocil6q0cwb55winqqkkrrn4flmqdrg2foxqyo0wkqvhnmdo3ezok5z9y4q9ihp8mery0ash\",\n      \"pubsubTopicName\" : \"Lizeth O'Kon\"\n    }, {\n      \"subfolderMatches\" : \"fcw9ygwl99zczxtqq6tq9lusewjttqv0l5di7wrfere7yzu7d7g9s8ioy2398ox7lfvt9gvyxa0gyj118abfp\",\n      \"pubsubTopicName\" : \"Al Stokes\"\n    }, {\n      \"subfolderMatches\" : \"ctjfwhmvz8glqdxwdc1uur708fzbsai4b5wz4ys7ll0ad93g\",\n      \"pubsubTopicName\" : \"Claire Ledner\"\n    }, {\n      \"subfolderMatches\" : \"hgzqv2wnllitr44z6t8ijnhgjw2hmz494f0lt64opdry3dl2r6tsvgw6r4bvq1crxo6faht4lrikf49n0vuc5v2dkhl5f1gxnqd65o1y48z6a7rjqj16bbfb22z5p0y9klaoan\",\n      \"pubsubTopicName\" : \"Tamika Gislason\"\n    }, {\n      \"subfolderMatches\" : \"cgaiu5bv2i60de0b8g77iis0l2ij54kazdbjwiglgufpcpirmhndpa3hkicuekjaoi8nsrzf7rn36i23gn1dnhm4mps8\",\n      \"pubsubTopicName\" : \"Mrs. Silas DuBuque\"\n    } ],\n    \"stateNotificationConfig\" : {\n      \"pubsubTopicName\" : \"Mr. Sheron Homenick\"\n    },\n    \"name\" : \"Manual Dibbert\",\n    \"id\" : \"eqlw\",\n    \"mqttConfig\" : {\n      \"mqttEnabledState\" : \"MQTT_STATE_UNSPECIFIED\"\n    }\n  }, {\n    \"httpConfig\" : {\n      \"httpEnabledState\" : \"HTTP_DISABLED\"\n    },\n    \"logLevel\" : \"NONE\",\n    \"credentials\" : [ {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"frmetghsp11a1kuiio6ckdk33\",\n        \"format\" : \"UNSPECIFIED_PUBLIC_KEY_CERTIFICATE_FORMAT\",\n        \"x509Details\" : { }\n      }\n    }, {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"szwlfgwtidrlosv4r1th5fkwaff\",\n        \"format\" : \"X509_CERTIFICATE_PEM\",\n        \"x509Details\" : { }\n      }\n    }, {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"csfh8ggi1hog8z9jfyyvs0kfgi63i7h11li6to6rpllmd028w4zow1wu7cyr997kset6\",\n        \"format\" : \"X509_CERTIFICATE_PEM\",\n        \"x509Details\" : { }\n      }\n    } ],\n    \"eventNotificationConfigs\" : [ {\n      \"subfolderMatches\" : \"6bkj4dgb026n89dq62u723mq7636ppp9mzd5urs41fzw94ooq0tfl5xu8oyu4qq2q8jaomahvra72f942mraeh6pkjh612rlwgdspgxi9iqt4s7dk8fxtfrndv875dh1z105rjp98wjmjysb4lmsmfjzejp54va7s34joq2bbkn6\",\n      \"pubsubTopicName\" : \"Earnestine Kassulke\"\n    }, {\n      \"subfolderMatches\" : \"26o3\",\n      \"pubsubTopicName\" : \"Cristie Blanda\"\n    }, {\n      \"subfolderMatches\" : \"c95l50usalbtcn3q92b1z1lximrgdo13lk84a5967ym4pxgn89nmulqcg4mxiij6z9efb2272mqnrs\",\n      \"pubsubTopicName\" : \"Carol O'Connell\"\n    }, {\n      \"subfolderMatches\" : \"khfkvp9absrby6rdfw5r0btnz5lnw7qbtwtp9u2b2vdsan8a6xxnuo4pt5j8p26wq5tdoflwgoq34lggvmaqzeginwl25gzol7r28naxnr3c0o077ejpk64w1s4se46bcpk42riygcy8rfnrzwj03r18mvlm73vp0p2r1bpa\",\n      \"pubsubTopicName\" : \"Pat Legros Jr.\"\n    }, {\n      \"subfolderMatches\" : \"3i12i1kofidvknexhr\",\n      \"pubsubTopicName\" : \"Jacques VonRueden\"\n    }, {\n      \"subfolderMatches\" : \"0dbp89h2597vz8hrsb44zgen9zo910azfk6qur18kvf33i2flqf0cl9acpaky2gd4rh5rwgd4q9inlzw92wkit5aft0xysldoql4zu6l6tke3qkg0ochhmzk1wb0bgkzicrpa0gteoyt3naxdrj3dtxagephjrh84218xp9ok1hwft0v986m72221irzpt\",\n      \"pubsubTopicName\" : \"Gerry Champlin Jr.\"\n    } ],\n    \"stateNotificationConfig\" : {\n      \"pubsubTopicName\" : \"Katrina Gleichner\"\n    },\n    \"name\" : \"Mr. Huong Rohan\",\n    \"id\" : \"f4a1\",\n    \"mqttConfig\" : {\n      \"mqttEnabledState\" : \"MQTT_DISABLED\"\n    }\n  }, {\n    \"httpConfig\" : {\n      \"httpEnabledState\" : \"HTTP_DISABLED\"\n    },\n    \"logLevel\" : \"ERROR\",\n    \"credentials\" : [ {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"fjw0q0w8d4qgkmc4xyflvy5dnxmnsr52ri5c7966wsoz37vymk06o09u7q9i8xmtl7qce24zdq4vb2ooldqmlxosu76kbdi66me3uczab80oayxd632vxdc2h2i5ehut4zenruupb\",\n        \"format\" : \"X509_CERTIFICATE_PEM\",\n        \"x509Details\" : { }\n      }\n    }, {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"egsrczgd2nvrnmqoob88syyh71zzz19llkzzpeytkib87v2w4s9a2u197syoqd33brckanktn6jnl7clmqkk3d6z62wr8qc9x1ljj6d9r2bugmq8my4hu51e0e0at4s9kz9jhw79k3s75j1rkv9eche09gimyb3l64pu8z02mg53r0x\",\n        \"format\" : \"X509_CERTIFICATE_PEM\",\n        \"x509Details\" : { }\n      }\n    }, {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"bmz7zaj5uuoc4lkprwpmjupxpwzy3f4lyb02t0z9a856jx6xrayouhdtvvbrlc0y7zinaps6w603y014xs7wvt79ywmh3m7btoq5f0hic7pu275tzf391hrdcmr6jqxuzk8ow69rya5bv1h14pjctuhkntbcdnt9v6vtsva2qxcioqbosru3znlgusge62l9tlrawy23\",\n        \"format\" : \"X509_CERTIFICATE_PEM\",\n        \"x509Details\" : { }\n      }\n    }, {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"uu4phosko7h3ftbk1tgcvpiw4osei63g2iv1dw58740kcvxeee1uu4p1oh56qpu82yvxrrnb6l40x8jq90o1mz713cd99s1iogughihn8j9eroj24gpdndz\",\n        \"format\" : \"X509_CERTIFICATE_PEM\",\n        \"x509Details\" : { }\n      }\n    }, {\n      \"publicKeyCertificate\" : {\n        \"certificate\" : \"t2rydbnrqtw66cgrq61nu4n7hq4l3b97s34jt6np6o\",\n        \"format\" : \"X509_CERTIFICATE_PEM\",\n        \"x509Details\" : { }\n      }\n    } ],\n    \"eventNotificationConfigs\" : [ {\n      \"subfolderMatches\" : \"w7rg4lim\",\n      \"pubsubTopicName\" : \"Miss Camille Runte\"\n    }, {\n      \"subfolderMatches\" : \"za2dkn0l9xyvldneq8lwjv5clchseqmzojbvchvcjur4fxvcb6zkwy0goppao9vcakguz5jljwml7gax7fs409l3y5syfyc9u55h6dcbtwytu82beqjyteyhpteo7tximz6ekfta9dfdrzpntocz03d6\",\n      \"pubsubTopicName\" : \"Wilford Murphy\"\n    } ],\n    \"stateNotificationConfig\" : {\n      \"pubsubTopicName\" : \"Chery Schowalter II\"\n    },\n    \"name\" : \"Ms. Deanne Shields\",\n    \"id\" : \"8tr9\",\n    \"mqttConfig\" : {\n      \"mqttEnabledState\" : \"MQTT_ENABLED\"\n    }\n  } ],\n  \"nextPageToken\" : \"c2qujx6jv8n4q3d55czioiga37x6dmvnouyyz1ossvwi8127ws9lyngyni6f97ow0vdv1t34qq9eyt9o67rbl3fbd4gs73iyl0zy6yay2vd5k3ikn05sde83v5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e9420c3-3377-3644-8cbe-778182c4102a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.list",
          "schema" : {
            "description" : "Response for `ListDeviceRegistries`.",
            "properties" : {
              "deviceRegistries" : {
                "description" : "The registries that matched the query.",
                "items" : {
                  "$ref" : "#/components/schemas/DeviceRegistry"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If not empty, indicates that there may be more registries that match the request; this value should be passed in a new `ListDeviceRegistriesRequest`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "6ccb15b2-d398-38dd-b1d1-995873a024c8",
    "name" : "Creates a device in a device registry.",
    "request" : {
      "urlPath" : "/v1/1kssxtrg40g2gnq40wo8qd9if58ieh1yxoq0dsi1sasd2l5j94123/devices",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"credentials\" : [ {\n    \"expirationTime\" : \"2022-08-04T13:10:48.467575Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_PEM\",\n      \"key\" : \"otn2rhe2kzvrlvo2aou1dnc40l31q9anbqbnefp05x5izl063378urmlmozby2ic69ag5h3sa8gszvto12h34ft94y8rqu81k88kslsd4amfneu9h33cwpq4fs8a49x7uc4fr65oaqoa\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-10-26T15:28:48.467632Z\",\n    \"publicKey\" : {\n      \"format\" : \"UNSPECIFIED_PUBLIC_KEY_FORMAT\",\n      \"key\" : \"n4ftj01i2rjoztug11hov9t11odjyoq4rvq4nknpfsefdk1xqzr63\"\n    }\n  } ],\n  \"lastConfigSendTime\" : \"2022-11-13T16:38:48.467687Z\",\n  \"numId\" : \"49b9\",\n  \"lastErrorStatus\" : {\n    \"code\" : 579715979,\n    \"details\" : [ { }, { }, { }, { }, { } ],\n    \"message\" : \"Quidem sit deleniti voluptates ut voluptatem. Est voluptate ipsam. Assumenda magni nam et ut et.\"\n  },\n  \"lastConfigAckTime\" : \"2022-05-23T16:37:48.46784Z\",\n  \"lastErrorTime\" : \"2022-12-20T15:04:48.467867Z\",\n  \"blocked\" : false,\n  \"logLevel\" : \"ERROR\",\n  \"lastHeartbeatTime\" : \"2022-11-01T15:41:48.467908Z\",\n  \"name\" : \"Dr. Eloy Rippin\",\n  \"lastEventTime\" : \"2023-01-01T13:06:48.467977Z\",\n  \"id\" : \"3c4y\",\n  \"state\" : {\n    \"binaryData\" : \"kijs83fctj3tj3e5iz6vymusvpvlmhg9di9f6wqqkehnhbadw0g577ao1ek93tnb4mzhobk25lprqrmw5vry7jb0wlbpnjgvi5df2x93ihtlvx513ct2lt8nvbdanuzbt57qlo8qum756585hz1h5xqq8sb2ufn3m4u6469m8w57m92jeg73cogl2kc39gl\",\n    \"updateTime\" : \"2022-08-07T14:15:48.468099Z\"\n  },\n  \"config\" : {\n    \"cloudUpdateTime\" : \"2022-05-07T13:41:48.468131Z\",\n    \"binaryData\" : \"j5m3ruxc51y3qbo7l410eizw9rui8x61p7tq12ca1ikfkjfynwbt53mq27zwe8tek2xoh182gzkk3z8u0a2wv9oon3nsd\",\n    \"deviceAckTime\" : \"2022-06-27T15:45:48.468174Z\",\n    \"version\" : \"gxhvbspatx6ucnsm6qy43z4434guad8t2yzcfxk2miluz3ak0a6zrz8zh8amq3awx7udt5\"\n  },\n  \"gatewayConfig\" : {\n    \"gatewayType\" : \"NON_GATEWAY\",\n    \"lastAccessedGatewayTime\" : \"2022-05-22T15:36:48.468238Z\",\n    \"gatewayAuthMethod\" : \"DEVICE_AUTH_TOKEN_ONLY\",\n    \"lastAccessedGatewayId\" : \"2sge\"\n  },\n  \"lastStateTime\" : \"2022-08-14T17:03:48.468348Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ccb15b2-d398-38dd-b1d1-995873a024c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.devices.create",
          "schema" : {
            "description" : "The device resource.",
            "properties" : {
              "blocked" : {
                "description" : "If a device is blocked, connections or requests from this device will fail. Can be used to temporarily prevent the device from connecting if, for example, the sensor is generating bad data and needs maintenance.",
                "type" : "boolean"
              },
              "config" : {
                "$ref" : "#/components/schemas/DeviceConfig"
              },
              "credentials" : {
                "description" : "The credentials used to authenticate this device. To allow credential rotation without interruption, multiple device credentials can be bound to this device. No more than 3 credentials can be bound to a single device at a time. When new credentials are added to a device, they are verified against the registry credentials. For details, see the description of the `DeviceRegistry.credentials` field.",
                "items" : {
                  "$ref" : "#/components/schemas/DeviceCredential"
                },
                "type" : "array"
              },
              "gatewayConfig" : {
                "$ref" : "#/components/schemas/GatewayConfig"
              },
              "id" : {
                "description" : "The user-defined device identifier. The device ID must be unique within a device registry.",
                "type" : "string"
              },
              "lastConfigAckTime" : {
                "description" : "[Output only] The last time a cloud-to-device config version acknowledgment was received from the device. This field is only for configurations sent through MQTT.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastConfigSendTime" : {
                "description" : "[Output only] The last time a cloud-to-device config version was sent to the device.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastErrorStatus" : {
                "$ref" : "#/components/schemas/Status"
              },
              "lastErrorTime" : {
                "description" : "[Output only] The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub. This field is the timestamp of 'last_error_status'.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastEventTime" : {
                "description" : "[Output only] The last time a telemetry event was received. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastHeartbeatTime" : {
                "description" : "[Output only] The last time an MQTT `PINGREQ` was received. This field applies only to devices connecting through MQTT. MQTT clients usually only send `PINGREQ` messages if the connection is idle, and no other messages have been sent. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastStateTime" : {
                "description" : "[Output only] The last time a state event was received. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "logLevel" : {
                "description" : "**Beta Feature** The logging verbosity for device activity. If unspecified, DeviceRegistry.log_level will be used.",
                "enum" : [ "LOG_LEVEL_UNSPECIFIED", "NONE", "ERROR", "INFO", "DEBUG" ],
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The metadata key-value pairs assigned to the device. This metadata is not interpreted or indexed by Cloud IoT Core. It can be used to add contextual information for the device. Keys must conform to the regular expression a-zA-Z+ and be less than 128 bytes in length. Values are free-form strings. Each value must be less than or equal to 32 KB in size. The total size of all keys and values must be less than 256 KB, and the maximum number of key-value pairs is 500.",
                "type" : "object"
              },
              "name" : {
                "description" : "The resource path name. For example, `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`. When `name` is populated as a response from the service, it always ends in the device numeric ID.",
                "type" : "string"
              },
              "numId" : {
                "description" : "[Output only] A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally unique.",
                "format" : "uint64",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/DeviceState"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "dd5e38fa-2cb7-3fd0-8a8e-3d2b794a0416",
    "name" : "List devices in a device registry.",
    "request" : {
      "urlPath" : "/v1/zl1x2c33b1mv697si4uhf6fnopph2rtxhsp81ku9pjxagtq8gprno1jfvx69r52t1xo9ug5rap1153he7a18af01rp5z2n4a3cewttvb21w3mq8q9o0q04g3crunppqiuxneffogh9jtlnskf905yw13xqlrmqt37sz2m/devices",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"devices\" : [ {\n    \"metadata\" : { },\n    \"credentials\" : [ {\n      \"expirationTime\" : \"2022-08-11T13:05:48.466309Z\",\n      \"publicKey\" : {\n        \"format\" : \"ES256_PEM\",\n        \"key\" : \"4zex1lhe7i5ee1y9l2nvt0d4fqj25s7u1ula5xfsb\"\n      }\n    }, {\n      \"expirationTime\" : \"2023-02-07T14:56:48.466369Z\",\n      \"publicKey\" : {\n        \"format\" : \"RSA_PEM\",\n        \"key\" : \"2oojo1mdx9gd0nis2ug642jqqimnuwkf9o3k97mbtukgda6117rq5ay6ouwe7itid0fqgidilq2oml1cn0o6r62h8ii41lct\"\n      }\n    }, {\n      \"expirationTime\" : \"2023-02-22T16:50:48.466427Z\",\n      \"publicKey\" : {\n        \"format\" : \"RSA_X509_PEM\",\n        \"key\" : \"a80fg1two5puskrd4jgaj2r1mhsga8eot4y6mggd2sdunq08zzy\"\n      }\n    }, {\n      \"expirationTime\" : \"2022-08-07T15:25:48.466481Z\",\n      \"publicKey\" : {\n        \"format\" : \"RSA_PEM\",\n        \"key\" : \"yzvsj2zeu7x2uo7nmdo5y0gvf8eiyxtn1ko7vdh5ne5mdb2aljist6zaa\"\n      }\n    }, {\n      \"expirationTime\" : \"2022-08-18T14:01:48.466537Z\",\n      \"publicKey\" : {\n        \"format\" : \"RSA_X509_PEM\",\n        \"key\" : \"zk53bv\"\n      }\n    }, {\n      \"expirationTime\" : \"2022-04-06T16:08:48.466591Z\",\n      \"publicKey\" : {\n        \"format\" : \"UNSPECIFIED_PUBLIC_KEY_FORMAT\",\n        \"key\" : \"o9y6winsqbz8p3ey\"\n      }\n    }, {\n      \"expirationTime\" : \"2023-01-10T14:48:48.466647Z\",\n      \"publicKey\" : {\n        \"format\" : \"UNSPECIFIED_PUBLIC_KEY_FORMAT\",\n        \"key\" : \"vzulkdlmlgtuwz6u388qpfmlvdn3kcz8ngwfm5edgk2xs0aq8fts26d7exvh4nwuq6af2s24qb779uo7x10hvtbf7mefy4o73pcf99manelmxszg3xpphu789m4pmfrhy884fe6wb4n09mbdp8vcjcdvxesivpljcgtpbnb1j3i3l40v36f63wx36yzonl2635\"\n      }\n    } ],\n    \"lastConfigSendTime\" : \"2022-12-28T14:11:48.466709Z\",\n    \"numId\" : \"t3cg\",\n    \"lastErrorStatus\" : {\n      \"code\" : 920526032,\n      \"details\" : [ { }, { }, { }, { }, { }, { }, { }, { } ],\n      \"message\" : \"Maxime pariatur nulla delectus aliquid ullam. Quisquam est aut provident. Est qui et nisi et esse modi qui. Dolorem voluptate facilis assumenda et. Possimus harum est consectetur commodi non dolorum.\"\n    },\n    \"lastConfigAckTime\" : \"2022-06-11T13:07:48.466882Z\",\n    \"lastErrorTime\" : \"2022-05-26T13:28:48.466913Z\",\n    \"blocked\" : false,\n    \"logLevel\" : \"INFO\",\n    \"lastHeartbeatTime\" : \"2022-10-14T14:47:48.466958Z\",\n    \"name\" : \"Tianna Greenholt\",\n    \"lastEventTime\" : \"2022-12-17T13:36:48.467025Z\",\n    \"id\" : \"5ob2\",\n    \"state\" : {\n      \"binaryData\" : \"9vkzon0nrjsreqldqeycnihcypurhncis21nv1h7y1m5odql5xikr581sbt5neysk208a1u7gof43rh7sb22x2txnth6ge2uyel099088\",\n      \"updateTime\" : \"2022-09-08T14:44:48.467144Z\"\n    },\n    \"config\" : {\n      \"cloudUpdateTime\" : \"2023-03-04T16:02:48.467178Z\",\n      \"binaryData\" : \"wncllr2oxfngzmdbjovdlakeqw8i2o1txee68ozfrbwys78sbwifl375gdggdr38dysiup97pmzs19qms55x3pu38r3yyd1q0sjz8mdfgf4pg4hxudhaa2rj6d6qnan87rzua310vras3teeu58kztwp78g6ejthc\",\n      \"deviceAckTime\" : \"2022-12-16T15:34:48.467225Z\",\n      \"version\" : \"1jdvqa07wqio1glprxs2smeto8s1wny8fng7acmk9b1l9y1wz9pbjcxxlp345uluts30hjrluhtn5v0g88f8rdd8d22b4tm1zhfgjvqb9yn30as2\"\n    },\n    \"gatewayConfig\" : {\n      \"gatewayType\" : \"GATEWAY\",\n      \"lastAccessedGatewayTime\" : \"2022-04-10T15:18:48.467292Z\",\n      \"gatewayAuthMethod\" : \"ASSOCIATION_AND_DEVICE_AUTH_TOKEN\",\n      \"lastAccessedGatewayId\" : \"2e63\"\n    },\n    \"lastStateTime\" : \"2022-11-04T15:55:48.467409Z\"\n  } ],\n  \"nextPageToken\" : \"quyfd88501u69bcj7is2x1m9y5pspm7kio2mlz0ybr1e55q6samyz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dd5e38fa-2cb7-3fd0-8a8e-3d2b794a0416",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.groups.devices.list",
          "schema" : {
            "description" : "Response for `ListDevices`.",
            "properties" : {
              "devices" : {
                "description" : "The devices that match the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Device"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "If not empty, indicates that there may be more devices that match the request; this value should be passed in a new `ListDevicesRequest`.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "95f17ec3-e5a5-37fb-b4c4-87fd59efa731",
    "name" : "Sends a command to the specified device. In order for a device to be able to rec...",
    "request" : {
      "urlPath" : "/v1/Julietta+Denesik:sendCommandToDevice",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "95f17ec3-e5a5-37fb-b4c4-87fd59efa731",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.devices.sendCommandToDevice",
          "schema" : {
            "description" : "Response for `SendCommandToDevice`.",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "c2233928-aae6-3e70-b735-eb4fb0100900",
    "name" : "Modifies the configuration for the device, which is eventually sent from the Clo...",
    "request" : {
      "urlPath" : "/v1/Herbert+Lang:modifyCloudToDeviceConfig",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cloudUpdateTime\" : \"2023-01-10T13:41:48.466003Z\",\n  \"binaryData\" : \"pl5o28ha82no\",\n  \"deviceAckTime\" : \"2022-03-28T14:29:48.466045Z\",\n  \"version\" : \"316fhmw9y5cbvpcbbw8kykv0stm4uv6xgng1any1t8uhpvbwk8f3anjt10iu82mlfd2frupyc8d3okexyotf4aapb5lepqmqq5cr2exaezdmr4r4y2p5z535vg7ogvxk3pzr1sg3gzdxf2qehpfwvji1cychxs4v20x3skdbbv3sv8enah3todggsd0wp6\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c2233928-aae6-3e70-b735-eb4fb0100900",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.devices.modifyCloudToDeviceConfig",
          "schema" : {
            "description" : "The device configuration. Eventually delivered to devices.",
            "properties" : {
              "binaryData" : {
                "description" : "The device configuration data.",
                "format" : "byte",
                "type" : "string"
              },
              "cloudUpdateTime" : {
                "description" : "[Output only] The time at which this configuration version was updated in Cloud IoT Core. This timestamp is set by the server.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "deviceAckTime" : {
                "description" : "[Output only] The time at which Cloud IoT Core received the acknowledgment from the device, indicating that the device has received this configuration version. If this field is not present, the device has not yet acknowledged that it received this version. Note that when the config was sent to the device, many config versions may have been available in Cloud IoT Core while the device was disconnected, and on connection, only the latest version is sent to the device. Some versions may never be sent to the device, and therefore are never acknowledged. This timestamp is set by Cloud IoT Core.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "version" : {
                "description" : "[Output only] The version of this update. The version number is assigned by the server, and is always greater than 0 after device creation. The version must be 0 on the `CreateDevice` request if a `config` is specified; the response of `CreateDevice` will always have a value of 1.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "499e323f-8131-3465-b9d9-9fbdc23a8f95",
    "name" : "Lists the last few versions of the device state in descending order (i.e.: newes...",
    "request" : {
      "urlPath" : "/v1/Emmitt+Reynolds/states",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deviceStates\" : [ {\n    \"binaryData\" : \"z6kmxbhas6ev64ybm997\",\n    \"updateTime\" : \"2022-09-26T14:55:48.465701Z\"\n  }, {\n    \"binaryData\" : \"i3r219mmg46yxvh40wahi0mjlhlq426czgqzaozs252xkg3afnhxmcti7jxvrje61dbsui5gfpn1o1f0utwk32zod1tvkif0ht94x95asan1bk2domyrh96393qxmtlos\",\n    \"updateTime\" : \"2022-06-15T13:30:48.465746Z\"\n  }, {\n    \"binaryData\" : \"uusmc1fuqqfkhtuyl146iqqajs232v38v0qnp5rov6c5cs9hhrtrcjd4i3pbbfxqy8zydu3y21c5bh8eodnengm9q3fplye8b9rwrj32g4k5ycolsz2cqrp9ndf8xh21\",\n    \"updateTime\" : \"2023-02-06T13:21:48.46579Z\"\n  }, {\n    \"binaryData\" : \"ubhfykmn3cfh73jxu7hxyjded0yxd9aca9dtgjcqmulci7j3k9zyvb\",\n    \"updateTime\" : \"2022-11-29T13:19:48.465833Z\"\n  }, {\n    \"binaryData\" : \"is797ndvyyxc5m30czb97bmumz8azxfi0fs13euxzw4yl4k3gnn5hxf0v7k1qwuqze8qul3p9vv\",\n    \"updateTime\" : \"2022-10-09T14:21:48.465879Z\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "499e323f-8131-3465-b9d9-9fbdc23a8f95",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.devices.states.list",
          "schema" : {
            "description" : "Response for `ListDeviceStates`.",
            "properties" : {
              "deviceStates" : {
                "description" : "The last few device states. States are listed in descending order of server update time, starting from the most recent one.",
                "items" : {
                  "$ref" : "#/components/schemas/DeviceState"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "554bd89a-5fb5-3a95-a986-5027203c2881",
    "name" : "Lists the last few versions of the device configuration in descending order (i.e...",
    "request" : {
      "urlPath" : "/v1/Mr.+Silas+Schumm/configVersions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"deviceConfigs\" : [ {\n    \"cloudUpdateTime\" : \"2022-05-29T15:41:48.465501Z\",\n    \"binaryData\" : \"9jf7hpoqk802t66cq4on21xedukid67bl\",\n    \"deviceAckTime\" : \"2022-03-30T13:25:48.465542Z\",\n    \"version\" : \"mcuvv5\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "554bd89a-5fb5-3a95-a986-5027203c2881",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.devices.configVersions.list",
          "schema" : {
            "description" : "Response for `ListDeviceConfigVersions`.",
            "properties" : {
              "deviceConfigs" : {
                "description" : "The device configuration for the last few versions. Versions are listed in decreasing order, starting from the most recent one.",
                "items" : {
                  "$ref" : "#/components/schemas/DeviceConfig"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "b720a645-7a67-3194-8941-6039b5a99103",
    "name" : "Updates a device.",
    "request" : {
      "urlPath" : "/v1/Johnathan+McLaughlin",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"credentials\" : [ {\n    \"expirationTime\" : \"2022-05-24T14:22:48.464129Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_X509_PEM\",\n      \"key\" : \"o90e4a1l4zw1wm3hqq4jy1f6h2d1dodjyw08xvpfy08rkpn7i4r9a7l2t5cdufsqgzi8ueybqi36ilpxr5da5t23pb716g3whug7khxuax3jt4eryfteicfhzk2w5a6rnxwnlmhovamxu654vwx7yowsgphe3a2d8cl4j9f9djehv9zqav0nz8oovgcgpg\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-07-15T13:06:48.464189Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_PEM\",\n      \"key\" : \"ie8jztvzrmlfdfoeqwo0xdo5caod1a665bpag4asknnawqpdt8q8o\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-06-30T14:39:48.464244Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_PEM\",\n      \"key\" : \"q9wgdh41r9xkug3v0hrgz0fat9g4nzmto7c4vwua513nh2pq57lpxdhporguv24naevq610ztx6spfz98azpin49dvys5isl47x1h4adx6tkbivd13jhhg10albiomjp2s7qxdf23f8unsj755sonec5p6q2q01hfh05u058pks4wa42e92zrfxcc9rujim01cl9a\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-07-05T13:29:48.464301Z\",\n    \"publicKey\" : {\n      \"format\" : \"UNSPECIFIED_PUBLIC_KEY_FORMAT\",\n      \"key\" : \"gwxkjs9rno9fytrnud57jv7h4yym7coj785rtzdr7c3puzik6mz80noa76oq0rgs5qq7arghb574t7uyc1bjhh6d69eh7m1148bfxhq754wtkmqmgvyxjfxbodsc7y4prz0nj1f60xvnvcm4edz52htsptdqlu99i82n8q6yc4zqh8hjn5j3mvywl1dfdng\"\n    }\n  }, {\n    \"expirationTime\" : \"2023-02-12T13:43:48.464359Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_X509_PEM\",\n      \"key\" : \"irwd2npai1vfnt6w2g1andfqefk8gxv5ahntqylcb0x4jml8cgyh\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-03-31T16:53:48.464414Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_PEM\",\n      \"key\" : \"14c6hvvhhifjtkvd8jwu\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-10-30T13:47:48.464467Z\",\n    \"publicKey\" : {\n      \"format\" : \"RSA_PEM\",\n      \"key\" : \"ndt8c1qjuwxg1u59mjwi7i1yblik040a6fl01\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-04-26T13:40:48.464522Z\",\n    \"publicKey\" : {\n      \"format\" : \"RSA_X509_PEM\",\n      \"key\" : \"3u2vp9b3hfaseg3hkf8gp06hhut4wym1e6sz2mcpcc6i9shwy7rzmmvxhv4umjnmznkns8ylevt9bzel4u66f3nxid4g890o7drgwxx1w0wind1ljtefagb0ujzdzoiiy9h2p42vytvlaaey3rzzxtiuuirnycktgvidjhszjv2maamnj992fnsz11m899qgs6mpuoo3\"\n    }\n  } ],\n  \"lastConfigSendTime\" : \"2023-01-24T15:38:48.46458Z\",\n  \"numId\" : \"679k\",\n  \"lastErrorStatus\" : {\n    \"code\" : 2147035884,\n    \"details\" : [ { }, { } ],\n    \"message\" : \"Voluptas explicabo vitae quia. Magni minus velit qui aut. Laborum sunt omnis aspernatur voluptas hic. Omnis tempore sequi quo vitae ex. Ut repellendus similique perspiciatis rerum reiciendis adipisci \"\n  },\n  \"lastConfigAckTime\" : \"2022-05-05T15:50:48.464745Z\",\n  \"lastErrorTime\" : \"2022-08-17T15:36:48.464773Z\",\n  \"blocked\" : false,\n  \"logLevel\" : \"DEBUG\",\n  \"lastHeartbeatTime\" : \"2022-06-05T13:35:48.464813Z\",\n  \"name\" : \"Whitney Mraz\",\n  \"lastEventTime\" : \"2022-04-26T16:12:48.46488Z\",\n  \"id\" : \"35t5\",\n  \"state\" : {\n    \"binaryData\" : \"d6dc5fq91driwxty38623f1nwrm3wnv68z410rgqvhxep4qc9io8elagtq7u3m37lm3ga3tk00bea8rpyjwdahxl39zza1qkrkk6dsionq19x6kcf9dojr5gmb\",\n    \"updateTime\" : \"2022-09-10T15:01:48.464993Z\"\n  },\n  \"config\" : {\n    \"cloudUpdateTime\" : \"2022-11-20T16:47:48.465025Z\",\n    \"binaryData\" : \"d5svd3buy4xysesy5ahszlt6yr1ksgm6w87hqfmvw6d\",\n    \"deviceAckTime\" : \"2022-08-02T14:41:48.465068Z\",\n    \"version\" : \"ykwcbl6m52umcxxz22q6ly8zq516jficevo00k840ebhb1wu2xiecj3oavntp78xyg12qnaa9kvjlvkywkma613npyyz06akjh1ctetjwoi8a8j\"\n  },\n  \"gatewayConfig\" : {\n    \"gatewayType\" : \"GATEWAY\",\n    \"lastAccessedGatewayTime\" : \"2022-12-24T16:21:48.465129Z\",\n    \"gatewayAuthMethod\" : \"GATEWAY_AUTH_METHOD_UNSPECIFIED\",\n    \"lastAccessedGatewayId\" : \"3253\"\n  },\n  \"lastStateTime\" : \"2022-11-10T13:57:48.46524Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b720a645-7a67-3194-8941-6039b5a99103",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.devices.patch",
          "schema" : {
            "description" : "The device resource.",
            "properties" : {
              "blocked" : {
                "description" : "If a device is blocked, connections or requests from this device will fail. Can be used to temporarily prevent the device from connecting if, for example, the sensor is generating bad data and needs maintenance.",
                "type" : "boolean"
              },
              "config" : {
                "$ref" : "#/components/schemas/DeviceConfig"
              },
              "credentials" : {
                "description" : "The credentials used to authenticate this device. To allow credential rotation without interruption, multiple device credentials can be bound to this device. No more than 3 credentials can be bound to a single device at a time. When new credentials are added to a device, they are verified against the registry credentials. For details, see the description of the `DeviceRegistry.credentials` field.",
                "items" : {
                  "$ref" : "#/components/schemas/DeviceCredential"
                },
                "type" : "array"
              },
              "gatewayConfig" : {
                "$ref" : "#/components/schemas/GatewayConfig"
              },
              "id" : {
                "description" : "The user-defined device identifier. The device ID must be unique within a device registry.",
                "type" : "string"
              },
              "lastConfigAckTime" : {
                "description" : "[Output only] The last time a cloud-to-device config version acknowledgment was received from the device. This field is only for configurations sent through MQTT.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastConfigSendTime" : {
                "description" : "[Output only] The last time a cloud-to-device config version was sent to the device.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastErrorStatus" : {
                "$ref" : "#/components/schemas/Status"
              },
              "lastErrorTime" : {
                "description" : "[Output only] The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub. This field is the timestamp of 'last_error_status'.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastEventTime" : {
                "description" : "[Output only] The last time a telemetry event was received. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastHeartbeatTime" : {
                "description" : "[Output only] The last time an MQTT `PINGREQ` was received. This field applies only to devices connecting through MQTT. MQTT clients usually only send `PINGREQ` messages if the connection is idle, and no other messages have been sent. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastStateTime" : {
                "description" : "[Output only] The last time a state event was received. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "logLevel" : {
                "description" : "**Beta Feature** The logging verbosity for device activity. If unspecified, DeviceRegistry.log_level will be used.",
                "enum" : [ "LOG_LEVEL_UNSPECIFIED", "NONE", "ERROR", "INFO", "DEBUG" ],
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The metadata key-value pairs assigned to the device. This metadata is not interpreted or indexed by Cloud IoT Core. It can be used to add contextual information for the device. Keys must conform to the regular expression a-zA-Z+ and be less than 128 bytes in length. Values are free-form strings. Each value must be less than or equal to 32 KB in size. The total size of all keys and values must be less than 256 KB, and the maximum number of key-value pairs is 500.",
                "type" : "object"
              },
              "name" : {
                "description" : "The resource path name. For example, `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`. When `name` is populated as a response from the service, it always ends in the device numeric ID.",
                "type" : "string"
              },
              "numId" : {
                "description" : "[Output only] A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally unique.",
                "format" : "uint64",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/DeviceState"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "bda3817e-caed-3ec9-8edd-f0e6a4df636f",
    "name" : "Gets details about a device.",
    "request" : {
      "urlPath" : "/v1/Brigitte+Altenwerth",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"metadata\" : { },\n  \"credentials\" : [ {\n    \"expirationTime\" : \"2023-02-10T16:01:48.462735Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_PEM\",\n      \"key\" : \"1ieu2ahsz5shl7qhxl0vb41gwdnqd7xo91g68lt1vih1kffnrlr2fz9euld8zu2hmfuebdt592yeex2d354suhyow9v6i0bw7\"\n    }\n  }, {\n    \"expirationTime\" : \"2023-01-20T14:51:48.462802Z\",\n    \"publicKey\" : {\n      \"format\" : \"UNSPECIFIED_PUBLIC_KEY_FORMAT\",\n      \"key\" : \"1zp3ekswgkukupcxwjqirm2411nrgh41lobs5k6g821fubtsfhpfzd7i7ah2v7zyxle6firsdeyjis14pb5efo1vozqhk47fdjpwnm7ynkls1genczsrstbehfbmiv1ohn0eu354vlsjriqna71n2vn0\"\n    }\n  }, {\n    \"expirationTime\" : \"2023-02-14T16:14:48.462859Z\",\n    \"publicKey\" : {\n      \"format\" : \"UNSPECIFIED_PUBLIC_KEY_FORMAT\",\n      \"key\" : \"c6vkkkl9jrxlxlti3u0bo4dcsidxr3zl3cd7a4prsx2bzzt8ptooks6fd8ax4yi3zwwuptoued82ykdr0zfnw3wnp3icxect6h72ksiu9vnykg9x9krce2ff0dpblvf\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-08-20T16:47:48.462916Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_PEM\",\n      \"key\" : \"e9vvuwbtku8wfsdhk3n7nm46uzoyt578v2rcw7obks9hl6lg5h0rc4hhd0qqj8y9miq44cq5cjretp4b0yqkow26evdxez681z8s98me38azc56bkciz4qadi1fp6in2706jh6ksz9\"\n    }\n  }, {\n    \"expirationTime\" : \"2023-02-07T14:27:48.462972Z\",\n    \"publicKey\" : {\n      \"format\" : \"ES256_PEM\",\n      \"key\" : \"uxyp\"\n    }\n  }, {\n    \"expirationTime\" : \"2022-05-03T15:50:48.463025Z\",\n    \"publicKey\" : {\n      \"format\" : \"UNSPECIFIED_PUBLIC_KEY_FORMAT\",\n      \"key\" : \"n0ymixbheygfz13toju6hvf4fo65m40i2htzu3ed3x4wu61k9ogk8th2us3mwzpupzcr9duiademk45p9452i3xneoudyk1a6djxl5r86ipqwhytbdrl9rr\"\n    }\n  } ],\n  \"lastConfigSendTime\" : \"2022-10-04T16:42:48.463087Z\",\n  \"numId\" : \"23qa\",\n  \"lastErrorStatus\" : {\n    \"code\" : 836990192,\n    \"details\" : [ { }, { }, { } ],\n    \"message\" : \"Fuga quia adipisci veniam velit et nobis. Inventore consectetur alias. Consequatur dolores exercitationem saepe suscipit consequatur.\"\n  },\n  \"lastConfigAckTime\" : \"2022-07-12T14:36:48.463252Z\",\n  \"lastErrorTime\" : \"2022-04-18T13:59:48.463284Z\",\n  \"blocked\" : false,\n  \"logLevel\" : \"DEBUG\",\n  \"lastHeartbeatTime\" : \"2022-12-26T16:58:48.463334Z\",\n  \"name\" : \"Ok Gorczany\",\n  \"lastEventTime\" : \"2022-07-29T14:45:48.463408Z\",\n  \"id\" : \"hzm9\",\n  \"state\" : {\n    \"binaryData\" : \"1h05prbo7hhcnfch5fwfalz5beg3d59p6pjsxyzzuenkpgs75vykthl1f53lpoqolf1wc5rhwjt\",\n    \"updateTime\" : \"2022-08-17T14:01:48.463529Z\"\n  },\n  \"config\" : {\n    \"cloudUpdateTime\" : \"2022-07-20T15:30:48.463568Z\",\n    \"binaryData\" : \"msn2wk67rp41wytmc0viq0kmgag4vrlsjafiq77hzw7saqfw3\",\n    \"deviceAckTime\" : \"2022-09-28T14:40:48.463619Z\",\n    \"version\" : \"3ihjoksnh3wog0bd7l\"\n  },\n  \"gatewayConfig\" : {\n    \"gatewayType\" : \"GATEWAY\",\n    \"lastAccessedGatewayTime\" : \"2022-04-18T14:20:48.463695Z\",\n    \"gatewayAuthMethod\" : \"ASSOCIATION_AND_DEVICE_AUTH_TOKEN\",\n    \"lastAccessedGatewayId\" : \"w7j3\"\n  },\n  \"lastStateTime\" : \"2022-08-05T14:07:48.463825Z\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bda3817e-caed-3ec9-8edd-f0e6a4df636f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.devices.get",
          "schema" : {
            "description" : "The device resource.",
            "properties" : {
              "blocked" : {
                "description" : "If a device is blocked, connections or requests from this device will fail. Can be used to temporarily prevent the device from connecting if, for example, the sensor is generating bad data and needs maintenance.",
                "type" : "boolean"
              },
              "config" : {
                "$ref" : "#/components/schemas/DeviceConfig"
              },
              "credentials" : {
                "description" : "The credentials used to authenticate this device. To allow credential rotation without interruption, multiple device credentials can be bound to this device. No more than 3 credentials can be bound to a single device at a time. When new credentials are added to a device, they are verified against the registry credentials. For details, see the description of the `DeviceRegistry.credentials` field.",
                "items" : {
                  "$ref" : "#/components/schemas/DeviceCredential"
                },
                "type" : "array"
              },
              "gatewayConfig" : {
                "$ref" : "#/components/schemas/GatewayConfig"
              },
              "id" : {
                "description" : "The user-defined device identifier. The device ID must be unique within a device registry.",
                "type" : "string"
              },
              "lastConfigAckTime" : {
                "description" : "[Output only] The last time a cloud-to-device config version acknowledgment was received from the device. This field is only for configurations sent through MQTT.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastConfigSendTime" : {
                "description" : "[Output only] The last time a cloud-to-device config version was sent to the device.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastErrorStatus" : {
                "$ref" : "#/components/schemas/Status"
              },
              "lastErrorTime" : {
                "description" : "[Output only] The time the most recent error occurred, such as a failure to publish to Cloud Pub/Sub. This field is the timestamp of 'last_error_status'.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastEventTime" : {
                "description" : "[Output only] The last time a telemetry event was received. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastHeartbeatTime" : {
                "description" : "[Output only] The last time an MQTT `PINGREQ` was received. This field applies only to devices connecting through MQTT. MQTT clients usually only send `PINGREQ` messages if the connection is idle, and no other messages have been sent. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "lastStateTime" : {
                "description" : "[Output only] The last time a state event was received. Timestamps are periodically collected and written to storage; they may be stale by a few minutes.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "logLevel" : {
                "description" : "**Beta Feature** The logging verbosity for device activity. If unspecified, DeviceRegistry.log_level will be used.",
                "enum" : [ "LOG_LEVEL_UNSPECIFIED", "NONE", "ERROR", "INFO", "DEBUG" ],
                "type" : "string"
              },
              "metadata" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "The metadata key-value pairs assigned to the device. This metadata is not interpreted or indexed by Cloud IoT Core. It can be used to add contextual information for the device. Keys must conform to the regular expression a-zA-Z+ and be less than 128 bytes in length. Values are free-form strings. Each value must be less than or equal to 32 KB in size. The total size of all keys and values must be less than 256 KB, and the maximum number of key-value pairs is 500.",
                "type" : "object"
              },
              "name" : {
                "description" : "The resource path name. For example, `projects/p1/locations/us-central1/registries/registry0/devices/dev0` or `projects/p1/locations/us-central1/registries/registry0/devices/{num_id}`. When `name` is populated as a response from the service, it always ends in the device numeric ID.",
                "type" : "string"
              },
              "numId" : {
                "description" : "[Output only] A server-defined unique numeric ID for the device. This is a more compact way to identify devices, and it is globally unique.",
                "format" : "uint64",
                "type" : "string"
              },
              "state" : {
                "$ref" : "#/components/schemas/DeviceState"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "d6a6a7d1-d296-3bb4-aa95-130a133ec905",
    "name" : "Deletes a device.",
    "request" : {
      "urlPath" : "/v1/Nerissa+Johnston",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200,
      "body" : "{ }",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d6a6a7d1-d296-3bb4-aa95-130a133ec905",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudiot.projects.locations.registries.devices.delete",
          "schema" : {
            "description" : "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); }",
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  } ]
}