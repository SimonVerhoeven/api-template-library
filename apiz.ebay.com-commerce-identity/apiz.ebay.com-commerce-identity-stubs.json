{
  "mappings" : [ {
    "id" : "0e116889-df7d-48ec-9c5b-bf14e2b1b566",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 500",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "0e116889-df7d-48ec-9c5b-bf14e2b1b566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.307002Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    }
  }, {
    "id" : "807fc62b-f3b1-48c3-b61b-21ea252ea9de",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 404",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "807fc62b-f3b1-48c3-b61b-21ea252ea9de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.306982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    }
  }, {
    "id" : "7efa290c-28a2-4994-9269-68cfffd54353",
    "name" : "This method retrieves the account profile information for an authenticated user,... (application/json)",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountType\" : \"8gamnwwxhkp2m6iq60hd9h61s89mcfcispxpv111kvrb6mw2i409rhghqq2xwzdpq9\",\n  \"businessAccount\" : {\n    \"primaryPhone\" : {\n      \"number\" : \"1-935-915-7332\",\n      \"phoneType\" : \"95bazw2dbomu8b3zo7mmwk4ps7tkxa4embe5hirkylsjqjjm2ual8fugzmwbnetjgrs9wsyrb8ux3h75uousffghy257sapebbfbg1ozqmieub3lcsdm66zve22baw50f592thxqm5aqsuxmiclv727cc6droo82zo4as68d1e8049gle0tjofna7q5jv7vyo9esk6\",\n      \"countryCode\" : \"llllv\"\n    },\n    \"website\" : \"wqr7qlfls8vbxx64a25nqxw8hrxp1h471y3xvgal6rcm50q1sqnc8styudmw1yoakaxmwg66qbnprmjrhgiu\",\n    \"address\" : {\n      \"country\" : \"Switzerland\",\n      \"stateOrProvince\" : \"5rmu32xehjve3c5ijgtg9pks02sez9n2lewiyjwv0s0eb0iixvq6y0osrv7xajgquutoq55k5vulfj3mv2k54zvibdpuwfqft02tty5zklhcohvqsokdluvon3p0mslqyeaocc2iy503zliqdtahj9row65o6t5g4zee34u7nbg5i45u1199cbgdlce19rvnvk\",\n      \"city\" : \"Stepheniemouth\",\n      \"postalCode\" : \"40670\",\n      \"county\" : \"4xmggn\",\n      \"addressLine1\" : \"805 Gilma Grove\",\n      \"addressLine2\" : \"Apt. 458\"\n    },\n    \"doingBusinessAs\" : \"wgnhiii6y1skh7y4vilfqa3br7mrd\",\n    \"primaryContact\" : {\n      \"firstName\" : \"Lavada\",\n      \"lastName\" : \"Collins\"\n    },\n    \"name\" : \"Jamie Grant DVM\",\n    \"email\" : \"v3xb45ay2xgryqcu0sa3m46na77f35z3ir4ccag8xfffzaeclqa1rbwgvis6e1cat45gssy4goajyawhz0i4vb6c6tu8pz4qgitf88zi860nxi7cv43c4ljw8c2nbva6idtd0wn11jrbuj26gj9tgk8802wpj22qrhfvc0\",\n    \"secondaryPhone\" : {\n      \"number\" : \"1-684-502-2006 x9951\",\n      \"phoneType\" : \"8zs6fjs78a7ngn2xx24xvb7ns0jtjx5qxfe73ragwiws68wnaw8wd3\",\n      \"countryCode\" : \"mmmmh\"\n    }\n  },\n  \"individualAccount\" : {\n    \"firstName\" : \"Pamelia\",\n    \"lastName\" : \"Medhurst\",\n    \"primaryPhone\" : {\n      \"number\" : \"1-920-332-0266 x29290\",\n      \"phoneType\" : \"cwd1uvu7ows9ju89xga3loemdb8vy7shcoxxx7atf0xd6ks7wf37xc000v8db3udnycez\",\n      \"countryCode\" : \"mmmmv\"\n    },\n    \"registrationAddress\" : {\n      \"country\" : \"Costa Rica\",\n      \"stateOrProvince\" : \"q5pjkqn9rnxvpkhdm9a0rkhbg5fpjz9lnn5ip1e3y8bworhr624xpig9dwpghu40809flgn7u0j3ljx9wrjnjm80cmu8z7lh84hxelqemfnktfc1bm9\",\n      \"city\" : \"Port Geraldo\",\n      \"postalCode\" : \"23859\",\n      \"county\" : \"ab85h1p2dfniuyifwlmhu0u0vrmj6nngboqlsttcq4te9vzjvaivo8v7gptx2lk5qx51t7jcsw9kr7kh9msvis40wf3g\",\n      \"addressLine1\" : \"64449 Kirlin Trail\",\n      \"addressLine2\" : \"Apt. 513\"\n    },\n    \"email\" : \"95hddllcgkvo1ttnyxstlq8d9p510cf3anzcyolhwla8dmccg8p7ky1qouguvwf634okfx1imvar42f7h4gzpuktmyhcxx6o4shillkowy280wy6763cld9eeo1e77kilgo2g6nt84qd5unrkts87p71mlrhp1obuzwz316r9gfbw7od323ncg7ep0\",\n    \"secondaryPhone\" : {\n      \"number\" : \"048.237.7931\",\n      \"phoneType\" : \"hw0zzlr0s3e2nuh5waisohd3cnijrxhmtqumpku118vk1mlotf7pzsri1x2t1n0hfow2wptqb8fmuk9j82tk3wbhmdb5zfx1ax759cacgav6yehawj\",\n      \"countryCode\" : \"ccccf\"\n    }\n  },\n  \"registrationMarketplaceId\" : \"c4c2\",\n  \"userId\" : \"w00x\",\n  \"status\" : \"lolzj7hdym3239dbjwu1y5ae2hobqid5szl\",\n  \"username\" : \"monte.tromp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7efa290c-28a2-4994-9269-68cfffd54353",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:33.30693Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "description" : "The type that defines the fields for the getUser method.",
            "properties" : {
              "accountType" : {
                "description" : "Indicates the user account type. This is determined when the user registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in the following countries: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, EBAY_PL Valid Values: BUSINESS or INDIVIDUAL Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:AccountTypeEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "businessAccount" : {
                "$ref" : "#/components/schemas/BusinessAccount"
              },
              "individualAccount" : {
                "$ref" : "#/components/schemas/IndividualAccount"
              },
              "registrationMarketplaceId" : {
                "description" : "The eBay site on which the account is registered. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:MarketplaceIdEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "status" : {
                "description" : "Indicates the user's account status. Possible values: CONFIRMED, UNCONFIRMED, ACCOUNTONHOLD and UNDETERMINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:UserStatusEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "userId" : {
                "description" : "The eBay immutable user ID of the user's account and can always be used to identify the user.",
                "type" : "string"
              },
              "username" : {
                "description" : "The user name, which was specific by the user when they created the account. Note: This value can be changed by the user.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}