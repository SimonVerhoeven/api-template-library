{
  "mappings" : [ {
    "id" : "7310732e-e4fb-4fd2-98e2-97209b484fe8",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 500",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "7310732e-e4fb-4fd2-98e2-97209b484fe8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:16.043644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    }
  }, {
    "id" : "4598356d-f369-44c9-b7d2-6fbd24f74245",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 404",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "4598356d-f369-44c9-b7d2-6fbd24f74245",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:16.043626Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    }
  }, {
    "id" : "1b0d5df8-2af4-40cb-b671-175f0a16a23c",
    "name" : "This method retrieves the account profile information for an authenticated user,... (application/json)",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountType\" : \"g8eenav2zzyhn7iihg3tv\",\n  \"businessAccount\" : {\n    \"primaryPhone\" : {\n      \"number\" : \"1-088-036-5983\",\n      \"phoneType\" : \"vhrwughkpbvd38gtyflr9dw7p6fgsf885s0r0o8xnjoyglb1elssmzbg9kfdvgcesvlj1d8zvjr0bs3uto5hvwp3urq2oifi5gcc30dguro16x77cwtgoaqfste3qwrdn0nmw8z1bv7sg108fhs6tm6yec998iz3jrr6e6jpj24d4jof536oqimhg14es5rjk8br7\",\n      \"countryCode\" : \"ccccl\"\n    },\n    \"website\" : \"m4s1vv1x3bdd8d4qy7wj8isnvpf2qyox4ookbieyamsvqu3dyf0i9geqhskuhb49krirla7s89bm31532a265hdlb1u9geua5qzyk12pcddq60olding9mmlu8p\",\n    \"address\" : {\n      \"country\" : \"China\",\n      \"stateOrProvince\" : \"kx0lehzn0gukudtb7nqlz5aird9a92b96pryxsmyhiwh0gr\",\n      \"city\" : \"Ardellemouth\",\n      \"postalCode\" : \"83966-2111\",\n      \"county\" : \"rofl321k7apstc10s3u66uxyddjy8rjchohu7guxq3jly4okb5r7uwyo0cy4d89t4tzbdf49955xnmuoahajjeuya6wbrob0btr767rubkjngauqmfg3l9usjgja389ciuxjto0ylpks\",\n      \"addressLine1\" : \"7631 Coleman Common\",\n      \"addressLine2\" : \"Apt. 325\"\n    },\n    \"doingBusinessAs\" : \"mntr18ecie1cu7vnsy02fjebyasarxw1ni29bitnq\",\n    \"primaryContact\" : {\n      \"firstName\" : \"Adela\",\n      \"lastName\" : \"Greenfelder\"\n    },\n    \"name\" : \"Maurita Denesik\",\n    \"email\" : \"v4k68m36bbaq1f7s2939rg1m4f1nudb1o7gk0sckskhhh2b\",\n    \"secondaryPhone\" : {\n      \"number\" : \"769-104-0130 x7483\",\n      \"phoneType\" : \"ktm2trz2exbaldv1ozqri96oygx5fe82ijorp1mx5b1c33c6b3xndhm11g7b\",\n      \"countryCode\" : \"ccccy\"\n    }\n  },\n  \"individualAccount\" : {\n    \"firstName\" : \"Gabrielle\",\n    \"lastName\" : \"Fisher\",\n    \"primaryPhone\" : {\n      \"number\" : \"(776) 637-0994 x97209\",\n      \"phoneType\" : \"lrbubzjawkbgohc2jo7p1punbohe2e18wrce0pexfg0n9pfep4ghfewswrr8nv50uk58boyfbc83qgij5ravsvxc2evv4ofaohde8jlxyd1s1k7x5bhq1uqmvj61as90w5kzy39j1z7s61bjb96ydvupyzb2hgw0cmfs174s1rx570mzm1k45f3ygnnc4vj\",\n      \"countryCode\" : \"cccch\"\n    },\n    \"registrationAddress\" : {\n      \"country\" : \"Latvia\",\n      \"stateOrProvince\" : \"6vi962utbwhpejlu\",\n      \"city\" : \"New Maynard\",\n      \"postalCode\" : \"33304-5855\",\n      \"county\" : \"q56yno1l0wfdwbs72wcvb2h52irvze1o61u6yrcld12je2uljhr48wjuuaz8u8ob9186qsmr9xp8rpnusif91186w6dgxffmfo6n3jgmxfryyqaprecssv5dgrd547rq3vvpy806hwe5bunqeiyhfkdv9dvlstr21lycyvdw97\",\n      \"addressLine1\" : \"971 Okuneva Path\",\n      \"addressLine2\" : \"Apt. 471\"\n    },\n    \"email\" : \"fv999fzk41fva5zqtsar25qjaizjfof9g1tm5fy200i78tov0c1deumvy9madb6fvg06habtlohivgo24uwruzqdsblma75o56kgfb64l8jwuq0u92nywoi6frif0ha4h1ncdyg4gef6\",\n    \"secondaryPhone\" : {\n      \"number\" : \"(393) 835-6511\",\n      \"phoneType\" : \"9tkpxrlexwbt1rwaj632tj9rccffs7wcxgmuic92gwfyegue0yk1y0ayfdde7gpff2nskmb8b0zt3jkhcovvpz3wn1hql5onfk5z2scv58ti7ex2x80ovt8tfr9dzslvlaq70ajwhqg143eqppv\",\n      \"countryCode\" : \"lllls\"\n    }\n  },\n  \"registrationMarketplaceId\" : \"mzxz\",\n  \"userId\" : \"k4b5\",\n  \"status\" : \"xa54r2rwyqs3six7qf3pxli2dkfvz1nvolffpmkxyloqjrfjlb3n4y38p7cbkmut4g6860284icwe9ot4mupjj70265hx11opomdji04ojmieqq5tvjhtuhs7w10vy8nzgd\",\n  \"username\" : \"percy.mayer\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b0d5df8-2af4-40cb-b671-175f0a16a23c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:11:16.043567Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "description" : "The type that defines the fields for the getUser method.",
            "properties" : {
              "accountType" : {
                "description" : "Indicates the user account type. This is determined when the user registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in the following countries: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, EBAY_PL Valid Values: BUSINESS or INDIVIDUAL Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:AccountTypeEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "businessAccount" : {
                "$ref" : "#/components/schemas/BusinessAccount"
              },
              "individualAccount" : {
                "$ref" : "#/components/schemas/IndividualAccount"
              },
              "registrationMarketplaceId" : {
                "description" : "The eBay site on which the account is registered. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:MarketplaceIdEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "status" : {
                "description" : "Indicates the user's account status. Possible values: CONFIRMED, UNCONFIRMED, ACCOUNTONHOLD and UNDETERMINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:UserStatusEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "userId" : {
                "description" : "The eBay immutable user ID of the user's account and can always be used to identify the user.",
                "type" : "string"
              },
              "username" : {
                "description" : "The user name, which was specific by the user when they created the account. Note: This value can be changed by the user.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}