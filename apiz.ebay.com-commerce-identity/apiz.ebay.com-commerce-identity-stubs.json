{
  "mappings" : [ {
    "id" : "859fa385-c775-4b4d-b849-5975727789c9",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 500",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "859fa385-c775-4b4d-b849-5975727789c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.151872Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    }
  }, {
    "id" : "8cb4fa1c-082f-4791-b3fd-fab561909e56",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 404",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "8cb4fa1c-082f-4791-b3fd-fab561909e56",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.151807Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    }
  }, {
    "id" : "a7dc0892-f2d6-4e70-b657-e56a1b64e80b",
    "name" : "This method retrieves the account profile information for an authenticated user,... (application/json)",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountType\" : \"3yhzdhwdsm42oxopjznzmce3fqmzs2zxaryk\",\n  \"businessAccount\" : {\n    \"primaryPhone\" : {\n      \"number\" : \"1-154-207-4359\",\n      \"phoneType\" : \"5izarmfprq6ml15hg5i37p4n6j72f7h3c4b96cnfpaydfbnnnifjq18rg24keeclcqqu\",\n      \"countryCode\" : \"iiiis\"\n    },\n    \"website\" : \"lh3ecz789500d3c0f0wxsan6fy0qh8ro64fwat9eifik70n90sm1lr20l7oamv8dpivj71ip2pd18lft2o6bcznphnj1xutq6js8nrdfifpz68x05jwtvj37uk5qjmx7j7odzag2yxm18etygao5cuullsq6zy9qumwxy7jrxr\",\n    \"address\" : {\n      \"country\" : \"Thailand\",\n      \"stateOrProvince\" : \"c5u4s0su695nlyyyaizmyzl0etlsq8hlac00roeyt4mjzkfc3q2wds6vtc3bv8pd2adtm9\",\n      \"city\" : \"Baumbachton\",\n      \"postalCode\" : \"35641-1083\",\n      \"county\" : \"713vupsh0dm7bttfkag6ccxlt2vbcifiri3ey58xovgyo4i1lyqfom9b8cpo531zueplgitb8uoygwcaok9q4ibtj0wgie7oxeg1rmy9psfogh340eikgnzdnbkccl8dnxletqrpqwljm3vcta48sayhecgwnikih3c74xo20rh8jpk30j1b4nzozrp\",\n      \"addressLine1\" : \"708 Wiley Camp\",\n      \"addressLine2\" : \"Suite 621\"\n    },\n    \"doingBusinessAs\" : \"rwwxbp8knry2wxf9ufd7wvh1krap8ciqfcayawq0pr80izp4656ksd4mc9bp47l5x2fkcgvfccov9izzgl3s1lvon1586hr13jmi5hmhbnw3gst6qo8ywsk87y4zf668nifxe386qefirva9e8qzgex0ug8iiwz\",\n    \"primaryContact\" : {\n      \"firstName\" : \"Enrique\",\n      \"lastName\" : \"Larson\"\n    },\n    \"name\" : \"Alita Thompson\",\n    \"email\" : \"vgi4wnl53yvcyp4e6bh7cwg8aesg20xybgsxh3wp34frzmsbi6qikw6k2m8nrwozknt1cmanl2f70ufsersm7l1kno1lcth43yw60irnpp6ogxiksplkx3l5okoyzv00jlp7vxz5wl9ee\",\n    \"secondaryPhone\" : {\n      \"number\" : \"1-723-986-4913 x184\",\n      \"phoneType\" : \"hdqi9d4xgaern9tt9e\",\n      \"countryCode\" : \"iiiir\"\n    }\n  },\n  \"individualAccount\" : {\n    \"firstName\" : \"Phillis\",\n    \"lastName\" : \"Robel\",\n    \"primaryPhone\" : {\n      \"number\" : \"(229) 014-5155\",\n      \"phoneType\" : \"abc2l8k6d6l85d3lto7x4r6p2gthrxy8e8dwf7yvpz77n31315prqspzqml9ri83he8gbz7mkintvrox7tpykk69fv9y4mpwq5neocccorc25dkuycd8h3or\",\n      \"countryCode\" : \"nnnnr\"\n    },\n    \"registrationAddress\" : {\n      \"country\" : \"United States of America\",\n      \"stateOrProvince\" : \"9zwdhl58ckgh4hiutnpcne5abzbgvjiwg3kbmb9afzbt4ll39mmsghbbmeh769uwzhqwo4dkvpoxblasf4ualo3q88j1nb9j1savme7dr19xq0d9bq7tjvqucsr8prwgwycex\",\n      \"city\" : \"Lake Shanberg\",\n      \"postalCode\" : \"83091\",\n      \"county\" : \"m552qp4bkfcvkw77kvya1jrkkad9m9srygwmmpepkxyebi8ktxul1bf2owmvlvuvhpytfnkbxab0hbj5w2r9qg19baw7w0vr90637bzsbmsvzzw714fqekmeg1c9txocch41qpb9x97pguqest4cblush9lhbzcx44o1axce9bmgh\",\n      \"addressLine1\" : \"618 Schamberger Curve\",\n      \"addressLine2\" : \"Apt. 502\"\n    },\n    \"email\" : \"qhfj4pxo9v3464dhq5amtosrb1meb8t4ig\",\n    \"secondaryPhone\" : {\n      \"number\" : \"1-128-633-3995 x07936\",\n      \"phoneType\" : \"moicmznp7ftdhfo9nkw13gjrcyetpoxkrzmbrawsu612m8w3q0igzqb7x0tdhs6agkei6ope2newevic3319dai8xeqztvm9yj6u\",\n      \"countryCode\" : \"ssssz\"\n    }\n  },\n  \"registrationMarketplaceId\" : \"1s9t\",\n  \"userId\" : \"16c9\",\n  \"status\" : \"690tsbnfxu33en5oljf7kgf6gzk28r8ru3k8u3cy9b6jt2gsclncy733a00j9y3ux27\",\n  \"username\" : \"karena.ratke\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7dc0892-f2d6-4e70-b657-e56a1b64e80b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:54:06.151508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "description" : "The type that defines the fields for the getUser method.",
            "properties" : {
              "accountType" : {
                "description" : "Indicates the user account type. This is determined when the user registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in the following countries: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, EBAY_PL Valid Values: BUSINESS or INDIVIDUAL Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:AccountTypeEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "businessAccount" : {
                "$ref" : "#/components/schemas/BusinessAccount"
              },
              "individualAccount" : {
                "$ref" : "#/components/schemas/IndividualAccount"
              },
              "registrationMarketplaceId" : {
                "description" : "The eBay site on which the account is registered. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:MarketplaceIdEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "status" : {
                "description" : "Indicates the user's account status. Possible values: CONFIRMED, UNCONFIRMED, ACCOUNTONHOLD and UNDETERMINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:UserStatusEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "userId" : {
                "description" : "The eBay immutable user ID of the user's account and can always be used to identify the user.",
                "type" : "string"
              },
              "username" : {
                "description" : "The user name, which was specific by the user when they created the account. Note: This value can be changed by the user.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}