{
  "mappings" : [ {
    "id" : "b8fa288b-210a-4af2-8933-78cad5157348",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 500",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b8fa288b-210a-4af2-8933-78cad5157348",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:24.314479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    }
  }, {
    "id" : "0406c521-f23c-45f8-b884-7bc903539449",
    "name" : "This method retrieves the account profile information for an authenticated user,... - 404",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET"
    },
    "response" : {
      "status" : 404
    },
    "uuid" : "0406c521-f23c-45f8-b884-7bc903539449",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:24.314462Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser"
        }
      }
    }
  }, {
    "id" : "a4f6feb9-c74f-4d73-844b-a83638da1fc6",
    "name" : "This method retrieves the account profile information for an authenticated user,... (application/json)",
    "request" : {
      "urlPath" : "/user/",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"accountType\" : \"4gi6yjxi2cgajyl9krl1s6ogubiyd9c450a89xfq4wnn6tudg3dfwpyj0lopivledca\",\n  \"businessAccount\" : {\n    \"primaryPhone\" : {\n      \"number\" : \"810.354.0245 x287\",\n      \"phoneType\" : \"z02p393ae9b6juw2jd6\",\n      \"countryCode\" : \"rrrrw\"\n    },\n    \"website\" : \"r49hl66n7ch45pacnrinex1cr7lepr7x6olghmvj70yk9y3bej8macykmorezni8v2y2r08nvbx4q7c66sda\",\n    \"address\" : {\n      \"country\" : \"Tuvalu\",\n      \"stateOrProvince\" : \"n2kyu0rvcisj78gol3jfmknnvjzehdzd929l773ydpzg84slzj7k5g2bufpbpc7x8zsghopkdweqpckasl3mv4h80udfvp83cfyfloz1v4c10awik43aaomhzcuetugu5y6ubyrrzh9hmvcl454xcsk6yd5cj91zoep1amzdiuyumk08ekalyly4t4qdrc5hk1\",\n      \"city\" : \"Port Tonita\",\n      \"postalCode\" : \"77466-3186\",\n      \"county\" : \"2tdve2kwabgbiqenj318u64m9i3xjgck41h73ha2jxof181n0qwikiiet6378539sp5tzyxp001rll6exnqm8ti6bgr37e6bkbkzilk68yswpwkcrp\",\n      \"addressLine1\" : \"57082 Tuan Villages\",\n      \"addressLine2\" : \"Apt. 405\"\n    },\n    \"doingBusinessAs\" : \"4yvkt0sndc8amcii2xt1q6151q7j3woqhv0b4ks6642tcf0xh3p7or8wj3ygcpfisi8pa3lsq03qkutc1p1lt19tuuij0kucqty4epc45kn7ae3vlt1v01dmi80noe9kieqzivvbbcbc57ktpyuuemoofjw50u0ez39bblbd1cjf68u4u30h2pefm1wzjpa2j3q6\",\n    \"primaryContact\" : {\n      \"firstName\" : \"Linn\",\n      \"lastName\" : \"Wolff\"\n    },\n    \"name\" : \"Ms. Annice Kiehn\",\n    \"email\" : \"dsug19tffanmpud1qptcm12l7fujk6uud3h6uonrx7dcviq9vzczoqlyosqmplrqrm5nhowi698p08wcx\",\n    \"secondaryPhone\" : {\n      \"number\" : \"222.287.9988 x8397\",\n      \"phoneType\" : \"uuc86793rna4m1jbmm4dwoy9s9ch8t3ondu1c8on5kuwjegd7cwk4csd49ebmlhqqiq2rr9ca8mhqqxhihu17rd0f5aksig90\",\n      \"countryCode\" : \"ggggw\"\n    }\n  },\n  \"individualAccount\" : {\n    \"firstName\" : \"Andra\",\n    \"lastName\" : \"Bradtke\",\n    \"primaryPhone\" : {\n      \"number\" : \"(123) 606-8658 x2499\",\n      \"phoneType\" : \"18zepr4b4xjoq0n7vv2ybky7dgflk1mwz2u61ffxhckm9h6jz4ksaf6fxcif5fmh23rj4h4plmihqs0uvx46k1tpep4uoxah2q4q4w6e8oivzakvd472zyr1f1bwbf37kgyquh5ep2fw66i8431e6v0atbx\",\n      \"countryCode\" : \"ssssr\"\n    },\n    \"registrationAddress\" : {\n      \"country\" : \"Rwanda\",\n      \"stateOrProvince\" : \"zlh7t306ymjebfmjb9ynd2ei480a5m3vtwx243v5ayobq50yp3nt0n48etkqpfido3sbzj3ir8tr9tp4h0d10vs5zdyf7gh4jf5hx40luv19zr8hovf6ti3v4s947sc1ju5hemfyxwxemr1haou228y8o3qdhk42jusmtlrt7pctktscicaq5twi8kt7l4gcgq218d8\",\n      \"city\" : \"Blandaside\",\n      \"postalCode\" : \"14505-2887\",\n      \"county\" : \"0l0eyit8qgttz8a1b0eb73olkb5a8tphrp3y49rtn7czlkz5g0ztywh4dy0mdnv3plo7wwxi8fxiecswa40loa5h4kc96v1enoabpugtaggfhdb49q4n62byys8o9qlphmtxdh6wlcmdfvam2igh5\",\n      \"addressLine1\" : \"89460 Schoen Burg\",\n      \"addressLine2\" : \"Suite 652\"\n    },\n    \"email\" : \"cq76d5dzama143i7fah0nvzrp4j2z8yh0vfn4wquptqoadsi5yut3p8tvfim2x77vbulkrss3wlee8scmr3f7ik4v3bvw9jrw2nyoa6td08vrvm\",\n    \"secondaryPhone\" : {\n      \"number\" : \"513.539.9887\",\n      \"phoneType\" : \"aj26g6q24u6v7etg0bf15v6iodtte2kpfyr2bqhiqz06b9oqr9q3sp1b51jb2r5hk0tewek\",\n      \"countryCode\" : \"ffffi\"\n    }\n  },\n  \"registrationMarketplaceId\" : \"ze3p\",\n  \"userId\" : \"13v5\",\n  \"status\" : \"y500kc2kvxpibjz6jr9warmxnbs2lbpshmjpwawey4s2d35cc1dazygisqhh8mu6sbcd8zum50z2nzrdqeyd7nbef5nj\",\n  \"username\" : \"hal.dickens\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a4f6feb9-c74f-4d73-844b-a83638da1fc6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:24.314414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getUser",
          "schema" : {
            "description" : "The type that defines the fields for the getUser method.",
            "properties" : {
              "accountType" : {
                "description" : "Indicates the user account type. This is determined when the user registers with eBay. If they register for a business account, this value will be BUSINESS. If they register for a private account, this value will be INDIVIDUAL. This designation is required by the tax laws in the following countries: EBAY_AT, EBAY_BE, EBAY_CH, EBAY_DE, EBAY_ES, EBAY_FR, EBAY_GB, EBAY_IE, EBAY_IT, EBAY_PL Valid Values: BUSINESS or INDIVIDUAL Code so that your app gracefully handles any future changes to this list. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:AccountTypeEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "businessAccount" : {
                "$ref" : "#/components/schemas/BusinessAccount"
              },
              "individualAccount" : {
                "$ref" : "#/components/schemas/IndividualAccount"
              },
              "registrationMarketplaceId" : {
                "description" : "The eBay site on which the account is registered. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/bas:MarketplaceIdEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "status" : {
                "description" : "Indicates the user's account status. Possible values: CONFIRMED, UNCONFIRMED, ACCOUNTONHOLD and UNDETERMINED. For implementation help, refer to <a href='https://developer.ebay.com/api-docs/commerce/identity/types/api:UserStatusEnum'>eBay API documentation</a>",
                "type" : "string"
              },
              "userId" : {
                "description" : "The eBay immutable user ID of the user's account and can always be used to identify the user.",
                "type" : "string"
              },
              "username" : {
                "description" : "The user name, which was specific by the user when they created the account. Note: This value can be changed by the user.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}