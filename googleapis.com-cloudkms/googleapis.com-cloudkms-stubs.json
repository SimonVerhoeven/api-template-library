{
  "mappings" : [ {
    "id" : "8a333557-795a-4e26-9505-a912717912db",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/kfandmz931gy71kdxy5cpgirgaf2725f6e1y0awe29t6i7zwto7tcsqia7j3vhnfueyz3pjgkwqs26dhkg8qqph30gls2sy:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"zvojn1vjbqtz2f53w55p429kffmvjinyzvm2wjxetkdtoo12snky8g0tuyvudd8ht983k1fh21hau2t3se5o1tt1pyvmos8lcmwnaxs6lphuoq2a0meu9wsguz0fxqj8qcwsnxlko45porr301t1228djy7abk0c19e59uxm93s8sq9\", \"lojc5h1bmq30z47cpglc547311c7jlxyynqd3mss9ynbzn7uphpoy9vv02es2ybhc84dsraii6039o4hqe55e4h9ox9ylfc3gjtjq9wdfh413ae3bc318hc6t5j2io3lastz38dy6f44sibezmie5ac23lrghcsaq8wme3in7w1dgomgn\", \"nk3gcztral08yhhhe4htaa2sa0w6vzcpcy3bjqy9s6mpernq0q3aomgisdq65udvd9z6k23cjitgus8m9sz8a5ke17osklkt2a4549ujwby3mjefw095tj9y21hah11vkn5s\", \"mxpakogo3t9s3ojtwjnj5k7r2jfetoh3gm3y69zlyupdywtsuhlntz43uuhaz4d8a9fw9x1x8gldjgbxu677xbodtdjvlba1i9g312q23sc7zylv5mq2n\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a333557-795a-4e26-9505-a912717912db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.297553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5894a970-1e9e-479a-8615-30397d4a3d85",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/7mm3qw8tylpajvu9etbpfagsxotk2dfv2clnz6o5epfujrirwo5jgpt12h1csi4q7tj4do48i8lmrrc5acc2ruqet85hd60sml3w3ph198ep6nfbst7sd099t9w3ysgvog2e6popnf6n20l8ebqrqss0ionfmtowvvrvd5vg:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"utubphyiztlxrxhy8x0kvi3c2vyux42uwtv6hxoc0hlmpcnu1ue9tt0svc2h7jpgw8npxcd37dho7w8bgchkfdpilcgb74di8675bafaw15bqrnm2uikfilnm5f0abpj1e5serueyd9ih7mb0e8vhxt3fwl0npy0k97jbwnejcun9g6x8a6s\",\n      \"description\" : \"Odit deleniti voluptatum esse rem qui itaque et. Rerum error rerum. Aut vitae dolor porro iste cum deserunt. Nobis iure aperiam sint debitis molestiae occaecati voluptatem. Corporis dolores aspernatur\",\n      \"location\" : \"ojq3cay60eoe6sqbqpb9ja6gm96p7pelkhq5jaortoa1s35vx7umehe5n1b0tuzxp9tffimcivzzjfcvbsa1fa2pf5q63dthg5vrelj4o1k10zn9m5bk6hwkkxua3fi63afruwjpfs1spgrlacg1zwgwllp0ynaraozl6ev0qyy\",\n      \"title\" : \"Ducimus voluptatum dolores nam dignissimos id sed cum.\"\n    },\n    \"role\" : \"a3zl82coex40i55kbiw7c14vjpogi84o64pfpyjxmf9g7yx1nbxnmdivusf37mieknnm5gev9osvxntgugm2xuu8dovjveus2wbmpl8rett98jrel6yxqs84thb3iri6yzwo4wzk5ghwse923r5bdi8c1sbfwy8inc3f8epjq27u89xyo\",\n    \"members\" : [ \"mnpqssvts9nodjyq6zamgri6d2vx3rvg78g6q14qmxcem6w63idau9m4z1gmdk00ldcjikbmecjm6b1mfta0hp4sitl689am1s4xornvpz\", \"vi86a42g5gzs7kfxst9awif8y28937kupcd82n42ei8o2p7f73acbm4s3wiiu9ugeoew92pxj697bi8p4f4fu3lcmsjsnaqz7v7ty38fhabxw27iyi906xjxvuz2k\" ]\n  } ],\n  \"etag\" : \"rerum\",\n  \"version\" : 1246057125,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"pyytxpsuc88ik4uf6i1hc5sd8xy08x7rihoj0yea2g0gld4x001f9hawp0iztlrw27hjc6ytr4gyiv7ua3kuoyrwjifkp5fn4gdqkx2zsbnu2h1ftrtiat7db\", \"c6ld0vu6t06rx5cbgofygrn9wrlpdsw8hkftmbj0o65lfbz245t4xx1v8cet99pslf6584dyydntyfbzjrbb5qoecjxpsdtfym75miw0yb0ljklp2xdcb228evx7rpxt8ye811y7t9fiw\", \"bblo0v5i9fadcwr9us98r3aeav5bi2ljnnqhe81vbaddl26g1dzn9r9y0iakuasru15as597p9wyyqujt21ckf9fwuwgt7t2fuz0d8q6goyas3tmejr8wxy2\", \"jooom7ltka4ebqkykcek9fshq0jf2z99wv9nzrjygco56subt545sjipwgc8imdxkr3vashlw4mmo11s292avm5tjg5fndsnofpteaz7cl6vdv9s4r73l5utlgya8geimpaeraxzgdly8wx3zp30jrtu8kvbqvir3bfoavmes2xd5vymr1rx84xk2\", \"m0lysc2mslafjk495wcmkl5ldzizdcgkdzgp8y\", \"9dak5v4gc2i1tlhgkwxw6ij3h1ksmallstl1uamr1m8d1574q6kt74rgccwhpsc3z7gudgafjpnbgbhxfk5r\", \"hzok4n4n0bnxwaevqxjxsnq0cl556ts4uuvzflc3n89xl5r8jzcig\", \"7a12rgyoh0gmxozfw7ory04lm7qs4j3lqt3no72u3idc6fimr0szwkk4dwpceu27qo2zs9nm3hjr52jfpnqcx1qm7lkigqu4gs91ti47mdbxbh3enlm5n3zrye5ufo9qi906fiqtemwrojb\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ohqbyojxb0jeo8n9vjbo85cc3hcml6uayo11oizrf7v2eq7pz64t8b8ndn6omu2ho986k5vvggf7v1speimocnhqyiex79tibwzc58\", \"rklmgqvx0u61csqwj1680dpwt9z6m0b1v3xibq5g52ypd6uxjerjkn32rplnw2ngcg1pd63forc9cdjly6ny0hvwc8niqyrwm8puzw7khm3cmbvm4g4en97puvkmc3bc5d5m0qnewez3ulg5250rqd117ic477iwi2upeuk5dks1dz3newn5426xdz4cjdqkz\", \"0y4uap7qsumk144qh7vwswksadznwn1wk29sz9uspsz8i7kg8oxcc8pdmypbp1107dw3s6vtlljp5osqghzsufovvllrh7e9t6hj44wplyrkowkgdfd1elsqfh63gla9autosrz0abuxf1c2n1zyf18i1ygehuzv6cvlcndnu6k8rkbx2cipmx90h1fttg9j\", \"46531q5j5enri16vyq8yb5nn9eq00519ql2i0fmbd27s4b8hsj2e6u24bh23gk406xv3zlw2r4w23lp26g61in9\", \"ievii2tgpsfqn0pynfliaf2x1130f4spiv4488y3ddpk25a9mlx3brs02stgbi7feqzel0i7nsbujec2rxhumljyhncyxi19ltyyaphwk8119neum\" ]\n    } ],\n    \"service\" : \"q6r\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5894a970-1e9e-479a-8615-30397d4a3d85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.297441Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8ef13b30-8fdb-46e0-a971-95c62eb36207",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/6w0rbgn6twhgyc0if9:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"z8pwtjgyil7\",\n      \"description\" : \"Itaque sapiente aliquam tempore aperiam ratione. Libero rerum adipisci minus unde. Amet autem quasi qui ad unde inventore voluptas. Labore harum et.\",\n      \"location\" : \"taq42hzh4dn6v6sigx7mc96943y7nc\",\n      \"title\" : \"Error quia beatae sed consequuntur neque sed.\"\n    },\n    \"role\" : \"xzrkn6volvl00tq2sk9xsyf3gxlneyf434zr47\",\n    \"members\" : [ \"mh1getp2tyjahjwrulcpelz9bltnxo4zqsd1v1fki3j2lxloir58ejjtyix6312ref7s0dq7gx7spihd08xkjozhp2uca2xxujrs3zvg0p7w5gbocnfa5begfp14cjfrbn7m855r9puf5wg6vl99sdb80g1rvbye1rlu5o0807110mu4k98eced\", \"3kofd2cutnehxe5t0f3blzka4caewxe30u4rtqstgiqry0rfb0mu1rh9e9xy99p34dcyyrzuf7l9oq5751q2v0jlg36z5zz1nw6tuqd8zztjft4ebhj4b7en3d9r4bkzyhnyiyusovwifkb8sndexcrey29ym62pl6if7cni1y7904e4pd\", \"qshhuu9ib9fg5hliuw8qaq2azwbhc11ixd722cgwa816srhio56ngwke5uyp9hpvs2xryxvnss1hv2ytjje9zb5ygdgs4xcl4ewf5mf5e3m4v1t73msorxdeaul89zbckhi\", \"wqbrh7ae7okjy7a6vhj1mtv1875xu95l2se6gc7iwp6wuyqnu4udk038ly9bwl\", \"avaxnr7kvnr8r71vjz1ge15ooku2fxptt8vq4toc9e41we0i8j2azfnk8wn3wbpntwe6mdwtto6i2f1jgbjpetx3w2h99h1th7idw6db234re36721s1pqr93ifaib3s6gk0s4hnkd3o48pq63k6iv139n9ci5e3q4f484u5vfit008e0izsaivh7\", \"1m13v50pkxq4nwxuwp2f79vt09ehdi1v51yuif7eri8ncnibqekde8f1ugfgxei816uoj\", \"xwe357uzcln68w0zgm6ak7ct8x8wfit2v92gyqdiroq9fobp4kpax3xi8pldhk1qytugs8t1\", \"5fdgvuspnlzhfhzunchse9sxpvf1sok5fi87umjyv29ouizfjy0sda3j3ha3z0dtwol91wpxtzukm1jmokj97mbwh5doq00pjpbbe34e8bp78zxkc4y7vpr1qf1ax8sy90fr7sqkwn7uoibd684eyr3tyqqzrko7secahxxf5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"lwwqhgb1vwlszvnrgsa43a5fut3njshwo8wq0eojj5gc45lc0wmz623nw8jtb1weve5w6g7xw9s4pviou9xlq47sspavuqjcl\",\n      \"description\" : \"Ducimus animi porro qui molestias recusandae assumenda. Quis tempore qui sequi. Aut voluptas ad aliquid fugit veritatis. Deleniti aut tempore non voluptatem amet pariatur.\",\n      \"location\" : \"4jfur99m5yrg08sq6tb0znpq696xyed7vhacduilvf2t5fl4kaooyf7mv6ahaxxaqhi4a21gfxbhd7plzyvcddtvak49zemesjplk6zsbd5v438u180ghz74gs6viq5kpo9w980zoan4jbzuw2\",\n      \"title\" : \"Omnis nam at sed distinctio vitae sit vel.\"\n    },\n    \"role\" : \"v3dk04tgrw9askw2scckqw966sh5w0uumoxohf0cf7vifymsc5rif1v0164zmvzaw1fxo2flaufcg1a5qrln9781ynzt4afj6xz7k8hgiq2flgv75mfaer29dmv3gfe0wx0pj7cnm58kowlb5ag0jljxbcg4gf4c1frwc9wbn90rud9\",\n    \"members\" : [ \"g5l3asfy2nhl3li01ot4\", \"wtm4zhfyxbw0mtat5mxmbgdjslt1mg5a4kvpzrqxhhpp3kbytw35\", \"vbfbgw3wcvvlzvvrpoazqrtfc95el5e60ftij6kmfntvc8ucsrhf7ehqspb578ese7y6jtoexjx3f2k3i0apqx9f57lr0n4qjjo03f6vqp2tjm2x1jpirxi9\", \"k0shucxha5xp5bg6gcnaf2u44nshhgol1m4oflwzo6nqr56xk4ekqsp0yyussdyshe3iw0vnqki4xilukyzwtpilenbyqi8tvun\", \"awj3qc8zsj8hkwap5on24bvly4lqlyjebz6qvszmeooc1cmwhwfy3v9gj7diagfr31rcnu1x3gaa3aug6cvspfkwaxry9jl62pyoyoaf58kd92i3gpv24hnov0utfpcfgf4sxktsuz91\" ]\n  } ],\n  \"etag\" : \"veniam\",\n  \"version\" : 551748844,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"z180ov6tkfi6jl5sf0a63skjb0j57qug7mg04t2x36jzbzvclb6uyjjcyzhja0oacgdl6ufwerc9mut6j5y4c8lpprstjkjtfz49ys7tnzuzp1qv1qcro7qaxo3hdo6ulosl59c4gh3dz6tcrrqowggkr1u792\", \"2djn9cel8nqp86asbnmecv28s7f1i4t7sziizb10woxzhk6v8ml4vwo46nzzqprde9t5kigbtb8aqpes40m4vw3rbu7x42feok1ovgprngtrmlvvall3b3z18m62zs07zwlrdnhjrwrtubiw6if8kzgenig\", \"x43hquk1s7sn153qvvgy552bf75e7so44wftcfxifr5u4q73lgrljnx9vsbc3z0zura73koaxyyc875dba24wrv94jv7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"n7597j107mhgpu5r2hq0ryzo9wfntnuw4exgtyp0u2s3gco1kko76hapc4m602agjqnz4z205jh24sdp1iv38cewzo3vncsc8ezmmgkoyrujqjyq6exy81qanj1cwjirqntg83m09vpkkvywip0eyivq3erfxio11woq\", \"3t7t3dtwj43a30yjo0rub8tirpdveh14chxpc56obhkkqgcakfjm3heul2n6rjh2dr9hzw9g1e94qx868q9n470onw4wr7qtv14dba15oyf1jmvzan3juz5kuknx9qsqqxve1gc6azojn3h\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"2tekvxipoocsthzgcmub6osszioczt1gbqvhnc4kicmto3q7sfynhqwnkcte19uikki0jyf\" ]\n    } ],\n    \"service\" : \"rzjvqvf8mmkd15fg63zj6gspdovghnsdt2738xfuo8p8sth2qgk1h9fljbbef6qu\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"h68qd1ky4bceko0f82abrntm8volphkhleikykd3fygvfh5uh6nqpjaeboxhuwfyn6euxy6qrwve9jvb7bf4m5\", \"wuzsjgdcpaew3rcobd3bxie7fjyufz5u3eoj4xye8jxej7mz1l5mfrfnnod4to6g4vx8zs0lq2l1h2rwj8xhfgzfwiyesprpkh8\", \"ullb674giwmf9ha9481zhr8904druc77wrpiab5295ja2xygd0dvj3yw8wjr4ur4tvy9yx\", \"vhftuz57qvun11zjn5i89tmism8ak9qz37b0th4z1qa2ez2ad8rd092pkoo0refboderks9yzf6vsj7a\", \"apfbikm7h6eujtvbsu4xwfrpd8omgyi7mzjci4ha8ptx8r1x4gbhsrkdcufx9mykum3fvtovnexfitcxltn1q4yc\", \"8cwut7uxw9m5nuq3wgp1fo6h1m07qyw6c7jkbi79h41tzdop11xjzt7f1vaa3ch32atpuax45k8s5aioqca1z1kebvb48o4u0lbe8u2s21r9mku4x059bjh3zenwlhf8pxsmfjw7vj\", \"b47aoqtjoqwjkux72ndjmbo87lsm1weo7fhtgd423dzmfeydimciepigv1g4k43lgmyp9uvs3wygnx3k\", \"84xloxdwoaiydpgpl9a40pj9hhw2vtt77ztyrfegnemvk71y7r4olxctels3ahbx0d6fm56x6bby8via1z9vomo9og3p5hf0fnjdeklws1d4a8uom8ripqqgie5rbdhmst8t6zul1ktzmjqkscojl10veemx9bsq3ve1q\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"86qf41o9j7mkzj3jfs6cob2w4r84vopgnob1s9lnmoha0r2axr6hst06kirhuyxsx9nq9iafclm3qg7kb76\", \"qoowy\", \"2pi2py4hse7gvnoe4dwzoc5u5jd82y5fq\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"fo5ony00nat7neyc97w099io1m0uv7p5p74033w8nj\", \"ma0le8f2q363oqxaqrnadcze\", \"km2qxou97locidis75jw3ig6ebqled3lqb4buqrumj10jdtuinxc8dd0nbackes4dnomi71ajhhqdwh73w7qswoh4nurggrza8la9eabppsbca\", \"dpzxbru2fq9luot6l1ajc042kvhwvgnury42zr1tq7lnuf3ldhfm0siqrk7hlvf\", \"ieyvv2gb5ft3mlk85rvv4nftfpaxuc0pyykvfb79u2nxxw2zye5h5p0a55gy\", \"7llfb3ri49oeluxs7mfn3xutt910\", \"p7tc6pwy70i4znr4v7gdx3oee6ivxqyau8nhll8hlwjts5pxn66yg915870scoed4vtd5hw0s7xv49hfzm5uq5l0epkh6mbhxk2tb2lhp4cvme7nkl5sz38s7zf11fmskvre\", \"psgwmb12yviywa0t88mcq6fk3tfs3otsaytp1oid0vr91zk2c1qhyvzf1hj6ajy6amcojllpz\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"5motgx1r7fqu34iy3s9a67nni2p9q86g31fxhgrd\", \"uf4gxgvhsim6oaoyfr12c9hi6rvkjwdbpyz5147t13npbcmz9g2mso4od8r734e5e7rkyodl3azp5j0651397mz74uz6vfhy75ad0w6kj3lg6fp29t8nuxzse8huc1p5eof3gvl4577d8jiu3k6qfxv31i8\", \"0fhs7jbkljyuuckbpoz6bco86jr11yulxtczhhb6fo15izo55ab\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"xq0bv89o2zr06qd7706bpj1an77\", \"7llo3imvif8kdoy9wl59n31uxz02nm9l2jal98jlt084ei92vqc0\" ]\n    } ],\n    \"service\" : \"fp829lipqbtcgj51o2mie9pv1meajz9j4lvdm7s6ukbrtgt92649w75e0fak9tp9w1oomayrtbse4frnj8q9spjfjg1xy3d30bsf3r55ynoy4km9pl4\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"yknusq7x2md2wjl0o\", \"clajbm2tjuhmpcu6p18nfcw1dlgf64vowc1qjb7wt8w8r9zxaaadww4xa06a97rewg6whf37mpjhcykdfvza86c72r9pkte05152g3l540k071022ixf3qdvzu1l0dt1j0uysz2079k5co0gvhu3lf7pnu3t4jvoygpv6rpqdcbd0bgm0nw2rm5ljitx8tln2\", \"x0faeyaml8iak5omycu67ej091kzrhhfcelcbtw2787g2ltu3n\", \"ymvtk8x0yf0386dn8sn5dhdauq7pdw1gules23zyh9y2swa6hbt8skihmw67d95eoea4f0ibysfcad61403qvjdpm0lmnjpn7n6qpxzo2e9wbhbdolr0qd803afo1lxf0mjwdpto91lq0mflbcap0m6vdd\", \"j5dv1i295k5uo0ftcrx4ai1anuzcl2x268oxr447qhvfqe1iodonokf0602lzv9r4959lnrfk9ctlvru3jjjwp0et3xo1khzrl3p14szslzquq30\", \"yy75v8h6a4ajgypiog4w0ly3x37hctx4ahtq31qqopymallwvopo43kcpapf1hu7dcmi95z112ewbs8mf5ycr7d9pq1umkjxqp8oilp62qqxhn40qjsxd11snk9\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"z9qad0ppi6ic7lhmog87y309c5b7dbq37unfnxv7ht1nhyf9gbzf95vznspjw4hcokgufpr3edux57vuvks7rwcln7aon6jlydmolkv3h7tbs39p5nzw5notilnfiqdfh7054lnxeb0kxgh2mxxdj4ah2ma8aorhtau4hmdklj1mh4mh7x00k14g1ftnf3dyzxsu4\", \"5tvvrjxb56sjvcevbhgt05scgyhkwm7eihrqsvfzcpvsl7fuf5xpf77vafejd5uzznyjmrsvgfejpzopyxqb6ebwt1429v37hirpyykeu6c8jrxik4bdfy7fnrvi3\", \"28pd4swzs8u7z8dzn6h6g9w6xarngqvsmyb2xy3hwiu7jws2po6ur28sq8dqg46un117b3\", \"sifqnrcsnotcoqn3g2u7ai712vit4ddlc78cndtqfsgel17vzen4u6mzmw21540c6ym9e8jxaat4x1qyytv7t0llq5yzei4gizmbcm8jtr0cplrd1wvzeccnnba05m0q\", \"ompq7w66udk8la73ap8f0ofskbuyz8dwzwdm5wrp03sqlfng2wwcl4b651op0q28e15oh2nvmscfjojo03pk9ebp960h66spo8e4fw\", \"vmg781qstzspqxji2g0mrnpphoe\", \"g477kyb50xx5wvzkzbh3rp9x\", \"ccu6u83iyfqsgwxtkl7ex8p22a6i3t8moy5fppjrqwel203dswfw9cqd5hk5ki2t1r8y7nau46pac991uw\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"asu0ovc2euzbevxskjdk6wql8gwz5nmnahcgnbjtnojxnuqxofgsw9fl0s43sr35n0lulyombhp4mf5tk5d1wi4q4pnkifmxhjqmrunrs3jt9nstmnnu16mw5357ngqihouxd84vt817\", \"d09ipclgg5x1bp5dx9mlxwofanygvz0e2vt4gwpc8rawdiikub7jzqjc2m1yx01d4950g5c89wvtl908h\", \"71rapao6a75csub8qzgp3x3fkqe6zxfk1jlaoatpjrhse6y2p0ymq9\", \"iff3jgdfxhhc7l5sbnh1c1mtwjcj8o51uwbfyllupsjyisouazxl00x6643lju95dnzj70g9lphppymxfp8f4j0xjqiers319a8g34xu7cp5kmc6b6gjd6cbbvl2iwagp6eomixzv93rflzxg239e8\", \"0nbq1jlpezuzgvw6pf2u3gabvvfy5dq9tx930h97h1pop2jbyl971gc19mfb9w7u4pkkvabhzrer5pu500kdbik5wnarlcul17rhnxhbs79djjus679478kul4ded6zw5crskv5q5v55myt4p2x96faurv8r1miqgzk0rw98pu7xks\", \"inr5ra7hmrms\", \"oz50p503pq5dwwg3v3n7rna10i\", \"jyp8km1ldriex0fndjffdhg6g588judi1okw8q7ji7pkqz36zu82mv9sd3vjjka9cd84x8odf398eermmp0r5a7gbqhwrcqb7ktkjlofnmnozg2b15q6ryxxyugzn674s9a3mdn2ehqknmahxdv6ce6d37mqmxbc3owland49a8hg\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bh58\", \"tb2hc0kbn7dvls8hljkatvrwjnz0p48xteqrupxyikjchhrq7tgbqjok3ossbhk4dkgc7ya8f6jlpg2s7\" ]\n    } ],\n    \"service\" : \"cv7w6jonu6dn8qyzim9xuuvz5atf5lw744b7zh8ntkvtsta9igygmxvyybjsc4t69byvmbd3ng3irt2fltjmc6vsyj\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"ch44d0z9wm4o2hggby6mu1um9ln3reax\", \"v1l0cba3exsuchmns5qd63o67edjgwjiiva07fwsih43bao6r4n7w6ruiwc3dxhhegj4d3gopuqv4prddt10s0yi1tqj6uoc7yoqsznhi4isa5dqzw68bcqtqdnj3yanjf51gf5fnvqcqumh2cwfgangf\", \"bu48573zmh4wmz668kshzfijm1l04gzpq2sp6uvtsx690ymc3yx33qhzbr2f34llukskejyvt7k7ejtqm0005pggchmwahr28nopy17cgryrdgcxwhtv1c0huc0e\", \"hghpre\" ]\n    } ],\n    \"service\" : \"8cv5jjkhm1jkaf1f8rmse4fjsjcj0o9b3oi4fbdzt143c23tss5uue07hrqvyjoppy1wv7su51ndf2odmsev769asnnca2ro36pz\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"bygwnwc6o0hrsza1urda4h1dyqbu78zccg76xvqy5ifruzx2plvcs89jpi129m1um0yr5m5sgie0znueni340rw892rw6yac9btyfnhe53fs24h3paugo3i84dcvkrj6qw0oini5s\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ekq6wruvmowj1tl6ssbzjnfmvycb18q62tg0w8knjp13rojilabq9gat1mn2t8dfss7ek1dib\", \"9p8bsekpkysj5oend2s31uyo6na53zul1u21vfo95aevx5npn43wihulea7kgyi143nzjohcb4434nn899narqxodsje50jsfwbnha9zouqju76kw85m76d4yw5l4ihhc1jjxxqiuehna0wstc4jzwd7touzr8f2xyie\", \"nr0od8q4yf8pzsoot1gfnym1zh5vsgizwgr1wnue9ae2c20zrb58rsrceaejqk4ks8e9joogt1ob9p7eifzdrcwx0t21m3ofvxt9tkd9l\", \"rbtfvn4l0c4vc9s54qd24j6s16thkjfagoip5rdvn1dm9pdqns3vgrfjjer2w5hqygqzkgbfwp3zljnih2n2bqm\", \"mymz00kbr5yo6grxxtxiyk1ez18x575mb40i6lz8xkoi1\", \"3ni0jdhvak6b1su6wf4qk7gmox3kdf3zteihgr8yum53w2elakz3dwynvmg9gss5zaur6ud6srq23epjhg9ajvo743p10177azj04r1e66k5\", \"m43hp0l1iu34gsgu8a7ebi36uq9xlgkgrmda83ilcnojor95ct50czmlx6jvfbi105stc7ytt2rp7m9x4mnddy8n09m62kxtv62uiahpjfmlnaxbun26gi4nehyweomsa0e4hoqxze4zav95v70ic0jktl7ntihm9ronxv5lsjdozsww6mmyqjkffxx3t3dnarg8\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"a2xplolnq9hyww7odbnouomonev8qum8ywmugi7elr93268uty9zdqp852ln28v9gi5k3hj5beyy1qtj9bkh2r9t5lvvyuw6r7fjfwjrw6pr6e9n9uufp11otzjmhzgo9094nvdq5r46tc8wtiarjeunivri8vlnwlspkj16cotb0g0dhxs6rmjy4bhq\", \"l2qka3ipclyfwdwi3o4brlgf21l7ts34ebk2s2dr0q5e2zi1mxfgdj4fwnmkbnujxrlvzaa3740lytc\", \"ovndoch2c3u7ximyd99i1pxmijk6mfsjxi0tkz8o9huttbh60rndfte7okboalzry3rrn8oigitrtwxrwsxgtx6hwh3brw2m4u1xxvlbjuvdcffcrlj9vdomj00x1xkjtakdtpaz30sbfaby7ppyh5ibp7ech3mjtc6lnx\", \"5t7kb59yhgk1ozu0xksteih6muanefm8889sasxertspfphb05lb1o2zng85fqsu4ceq2z33cqx\", \"aiovuvqbin56t7kbaquljmoitwerx6yeuaazmr49cfbsskgg5tb60eov8ofvkjkvp9ni1j8y2kareqsi9i1wx01eqcxp7b6zfd30tpqss3qunmqmip13d193p6ax2cly1gbazyd566xpiwb9t2x4lgdi7b2gm7\", \"ds0l46ocsuvf1suzpli57frsc1yrd8nljt267fbfi9r1iniz0x\", \"mllpfzgtayy4lx21a40yh0k2yne13m4ylkj040sw88vwecnl\" ]\n    } ],\n    \"service\" : \"5jjgfxb7nv2spmsy4yq5zieob9uxgl2eb4fstcj8mc77bxwi5zp5ksmx0bfekrpwtbmuhm7wq3mq17e24kl3tqwl8melxabsyj4woqgkum5pykln\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"uz17p49ks716xj6o1zw7p0ltafknhrae5vkzemvcr8ck0ug\", \"keul2b9ub4kskh15rcn0o49nscknify2gl13rcarz2rjd\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"gg9petozotj2ygmrbpwbj7as1242ttix3z1x0t0txvacujdz3pdln64caaui54im6gse1x9j0et7yjfwr9wxr292s0fxnlr7iwe3uvkxo4gw7zwaxivftgvutkq7wd48k743e9047671k072a3fbgnj1i5zp\", \"5t6ib8nva57qu2r6m85grbjd4ksb6lc51g769xpljatg5q8but9tqe8snv0ukvmkb0cv9n2n5xckkbtdl5wbi5imxab4oqiaotdh9suyxt5pyrplichgq\", \"75g0myneyo434cimr5\", \"ifkkh1mvd3f36kxpffhz6ajptyu168zjbk01che07pgbizf0g2ii9o7f4k5vjip9uawl99rf44ug9tr2sgyf86uffu7b8iks9p9j3vxbecl0ejtf8clg3503m7h82va2mjisj8kg7rigqtgpje9m5qt2lbpcxrg5rvr40sz2120rw\", \"6y29yf7vn4kasu9xe9n8il1cqqh32kd73y7h6ewe868m7ag5hqa3k3ik122d3qki8so1sc9kmmt73f4hi3f9qwp0rkf\", \"8ejz9e2nxzu2h4xe58d8g515f5xt9tmhlcgnqzucj3422rh8gc5gkf2gteegy3bbnuzgyydy50t9o91wwp8c9on1htoclqqd5g4wts1w3ehs9q8a4\", \"al7hkrqhb632vqali082t36an5b2sjj3cia1gcn6ui5qco41eih69akictv8f23s87w61e66ff7zglette14gd3uan4h665nonoak69djkdwzxk8gwiso8b7ox3gqrc7ev7bp5bh8eavh0y\", \"ebu5fzvh529i2717hprfeym3nq37vt9lmpj2otc9b8dfraccl28ocsau82z2ia1nivs7c9dc9uujp0dgeh72vrp9goyejttyovxgvbnpixv1r4gczcsucozhpgsxvsb3hjjzmm1vsn6i\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"02wgit97z7rig17w8j9dhi6tdpdm55b6jl0of0gxe5mlu08rhv46fqrxj1at8j5c2esqtx5\" ]\n    } ],\n    \"service\" : \"yt49h62elb3417eznbhpd7a50wvqq9cx3zl1h7nnku6jk3p289h2pfvkhbwpabgd13cdf3ezy0yz78b85n4m35twqitzkc9qh8twc8zo8d1r2d72moa29huok1fvgb2tfe6no89w04v1b4z63589nbq9ccxyx2t0wm9uq5pawlbatnh9bt95e7z\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"cvlh812ulcf9vdc1ssororpc4syre118op3qqk4z2b8dby36db2m4fu6ghnlufteiu3rliu9husunanysq83i4hf3vwzk258c8wun63ayg3m01b9jl51h1efju1dpjokopa70xdsl94k\", \"lpfg510yz9adwth0m1kq4wuhgdnlcg5q2ieo2j6k6xngpxdzhnzsx8srzonqvag5ofakvi\", \"2gid3lqzb5c55ufbvxl6o41s5iv7ebhp022\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"sdpt16apn6tzqvsv7268b7f9f48sl427iki7vpgrwpt9dy0qs57x8401mf\", \"cckuoed9k0zfzbr1nyu7kx80i5xmpluqcdj2mcopu9i41jq56q929avp5aenwe2k6pj4ren4mnaov5wursf17azr3ivxyuoksdshzcherm1phkzmvf8dmf8ehgzp6styjtqxjy60axpd7fnrl00ybfq\", \"oifmbu7dqb7\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"e5p9pinsuqe0v0b6ei5tq84dbzlga26kmn0p5cn7e05b5czqpe5czdtg4x824mxmaobb6s6bnqt\", \"w5lt6fkk4lqd194mgqfjfe\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"9dj16j8\", \"su8t87skarkl0250qd7pvcywaibvkpdq7s6xhi4hb0as\", \"3c95xe\", \"qfhwa5znjhklldm30j6tzeraei8x4cv6bnjmoxs0oegsuaqu4uaxs9r6q1phnqs6qeu5l8l0oq921pc5n25w88zvrdztg\", \"uy1otxzayzlx5o41vielira5dur6bexnro3d60fga2ndjyw0o86b0o4ubfmr57tapoa56zr9zdnwd9x4o4p27a30caxpoqrzzxuvlqmti5x3vaujeqyxr2r49vfu6d02ucitvcxdixx22r0vvhra819wm09syungic01hvnnw27w4au\", \"auxgetjc6q104slducm34t8anl8oefrddlygm0grlmgqdkr156ywmttxmovuiuxgdru4c5lcuof5prqgs27ksdvl2hjjre11r5gnrhhfuaa53t0vtr8hih69idcqsrb7tn5zpnww3s8e9fuiiql841qx63chm6v61cwrw6bo3vln5b\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"g7coap8l1evwhydzuzu2xlajt9g13msxnxgc8kukoaglm2toldkfyjrc5muwdli5\", \"k2e4hz4m45hipcwgzqpe708jhp8y51q2k4noqzcfi86ddt66fqzq3cmgpmcengchybwtzoynylmjht3\", \"hi4ubd93hkyykjtb8r55y7bn9o6u0i0mz4oyxp6e7e68o018c6pxagnluyg9dcpeuwcopvhclmel2xsc6pyif1zsfys5q58jcolvzlk5p70h8xvjlxme040fygnm1vwxyp9l32cbwb2kditqbpwywfhuz35f5wldb654\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"7iuks6z1dkhji044\", \"905ry7yogb1w1qn15d4f7sd2y1wjmbfmvzu9xu3cv6fc983mo3abxsqmr5vfbsvqp0cvszdt35kwzox2mpbjyibu3fuojchew0tb8dh\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"v5f7owv56m8pxzamjo6jyx53uzw5cijmtvfhpertpx7a8koy5sgii75e01d5vj6qem11xqtjn8wau9djf22t2e6jvngavh6amwtj39yw9gx9l1y\", \"wko9glyg1ia3z7b3llk852tfd7ooysgq4ued4onxnp7o9ifujw76d88av\", \"5slinuzatcnmdj0ud1o7c6eer2icytesqelf03eksvrj7froaw7pk61q8dnihwo7ji07gay1bkm74vxqciioh5rbvtt6as5hswx22kai7ccg9drcxs9x157dx6do46a15sbkezo7gf1o1v4gwqhmrm6lqgt03hns61cahx1vig2t1oirw8g80mw6iqvb0poejk7q\", \"8qgw1ihjujzulq7bfstk01lp55d\", \"tnolgd4\", \"0l13elb7320km4ubnq6gnyho3asdvhqzum9wn1db6rht4tvxeeiieuawxedvxltg9ybfkpbn3km5sylv4bvr4rn5zd3jjgpsjl4wv4npse6x20ewy5slcqyirmiw12khvrjw23rrbf6k52465wewzq\", \"4jvlgx96tkmdw4hr3bddiqv1aeko9t4w7355iru5gyvc5gyq\", \"77xmqqpdbwvwng95d6jayd39nprvmrf8stunfa59fwjz3jt1pt\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"qoijuhqzyupzuzwnizhewol4bh7497jp45rg9ehideao1inxq43f3aptfy8tevw9gws2keyt0hfq37pcjhzypsw457bm4s3yiwvpyzlmqi4fi8l6sajxeuzz1d7aux52fq9g8zxwkmpxg4n\", \"2k4xl21s8xdriuhynbsd6x4mhx4xraxpw48ix3lxoi2595kejajzk9ek7ktnc3v53womrvjei0dixhpju75mq6g1m7madiw2rg4cu9xs6n57g9cr0j1dvs4qcomej32msd1u3bogs47w\", \"9xhuwwghdkekt8of63aeti0226jh3orqxn0my0ypxphnk5fkrlhn2l0rc56z4uwo9xtk7r4260uqd2f0whj52xmdqk5yer1yzrde4tzdecsc5r127fzv6m7h0awkdx14uqyq4uvkv941bwp9y85dq8v4evhzg5939arw12\", \"n8n0ldcjb0fzcw8npwzkgy8oezin9l1s2jy57luottsyctb9j49fol1fadovbme04wwyvgn\", \"j6yrj8jf519q9tf6azpc6rjdaipaz3pd5qsa1ajjevmx5b23j06g\", \"mcd6o6vqfth8jdil4mdliu8pt1089tfu1uv4nkudf2g954ctqczwzlkiwcxiscrdilky9q58ek0lmvcd394mkljc1iscp57betcdey0n5gc2cvlmxs57azb0e92tz02ffdgwyinx\", \"h5ourqn7wmzw133uexhj494oxt0qwwwpp22t2wprvq4v0i7cup9litl7axlodecamirirrppcrxtw3lpx7du5k5h45j683tgz3r8kfe5zexpbipdi0te4lv4gnft4wxrg1lsb3gnueegmeswh3iitq9io5stzp68qu6tapz7ff9lyw8yew\", \"ex8gxusao7ulkkq53y7mdgcepyrybhohvj9f52q0208fg1w6rglkpty2gsv\" ]\n    } ],\n    \"service\" : \"87m0it1922on3vy6dnbhaj4s770xc\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ef13b30-8fdb-46e0-a971-95c62eb36207",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.296987Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9b1ab133-437b-40de-b23b-4e6434f99741",
    "name" : "Create a new KeyRing in a given Project and Location.",
    "request" : {
      "urlPath" : "/v1/3krftnj0uo0kck7azfee674e903c0p74kgyp1sr0ygtawxqy28s62mjzf5opi0bl6gcil1lqtgkiyyfu5vqbg2gsp4nz0la8va5whpcco/keyRings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2023-02-25T14:32:53.295061Z\",\n  \"name\" : \"Jose Beer I\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9b1ab133-437b-40de-b23b-4e6434f99741",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.29516Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.create",
          "schema" : {
            "description" : "A KeyRing is a toplevel logical grouping of CryptoKeys.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this KeyRing was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for the KeyRing in the format `projects/*/locations/*/keyRings/*`.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b6dd4f37-3d87-46f1-98bf-91f19fe0238f",
    "name" : "Lists KeyRings.",
    "request" : {
      "urlPath" : "/v1/wk2cvt59s16gp7hz4262yucsm2ic3sqd3juq8zhs/keyRings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 1317007539,\n  \"keyRings\" : [ {\n    \"createTime\" : \"2022-07-23T13:57:53.294653Z\",\n    \"name\" : \"Ronny Dickinson MD\"\n  }, {\n    \"createTime\" : \"2022-08-29T15:25:53.294733Z\",\n    \"name\" : \"Cassaundra Hilpert\"\n  }, {\n    \"createTime\" : \"2022-11-25T16:21:53.294803Z\",\n    \"name\" : \"Aundrea Hahn V\"\n  }, {\n    \"createTime\" : \"2022-03-28T16:47:53.294882Z\",\n    \"name\" : \"Maranda Wuckert DVM\"\n  } ],\n  \"nextPageToken\" : \"9l5vyal9ls6ognj41x58x7r0z8uaiqvvaxjse6qvadf99xchhm93o1fsmuw51f2r2gj1tnbpls0upregn3tiwjmpt4sllmplv48s679b07nf5ku3vfyfwa4r2c0jmqr6n24n6dv45gmk14429k6wgkkwz36sdrllz6bwgduou3ol0n361sn3tnjpakp6luzqjnnt1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b6dd4f37-3d87-46f1-98bf-91f19fe0238f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.295025Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListKeyRings.",
            "properties" : {
              "keyRings" : {
                "description" : "The list of KeyRings.",
                "items" : {
                  "$ref" : "#/components/schemas/KeyRing"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListKeyRingsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of KeyRings that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ec46db17-15d0-4038-b51a-996051681160",
    "name" : "Create a new ImportJob within a KeyRing. ImportJob.import_method is required.",
    "request" : {
      "urlPath" : "/v1/u8qpswzywrp2uz5ic6czvi30hmeic90ig8xon8jnm688m1llg2gbx184tz5nqcv1st1ikc796jdl3yb5nkhs22siusg6t1lgc9hazmo009eb8vjsmwtpfz/importJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expireEventTime\" : \"2022-09-03T15:19:53.294115Z\",\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V2_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"1yyfptdk8w9fdi8sh12gkaaibfr001todqgy2sw08k3qzf8xk7da6t050rwtb1251e64sd7g71f4fnmd3qj9iaxs9q8eefq1nyt8c9n\" ],\n      \"caviumCerts\" : [ \"t8v29gk287yysmuyh6doxvv80cj9k1x22zbtvb\" ],\n      \"googlePartitionCerts\" : [ \"ceucrbgtrxh3f1x9smbvk0pzf3bzhksr8r84b9330u3on8vjtu0slzor4ndv8pkwnvoomvzvuzvfifprrzckd0\", \"znjld4q3xpv4t0jt40m40uhi6u9ywnjodkuu98ndntqru911wemok1qicihrf2iaw1oa2q35lac0y6rdkmzur3h\", \"5anfysbccdt55twryyze8f1qszagxenvwzg4gyn3ulp7wasepk4vg76d21rdnco71ejuspeidffcedbtww5r0h05w0x2tknm2mrl0f\", \"64juio432fop78xj4k4b369kgnk5h830kfw5bahbnoj1h6x7i\", \"e97h1e70fw0sanyynpdo5skhh08h0v1wylujrhz7tpn6nuwy8rld4w7rv432sg3w\", \"0ua9iik2g8wwlu4lco722vzuzdfv2g2phujlapapknjyyxhwvexuypawgfnl9v43gbhfzrnzjy9iktsylg49kkfmdn3gub5p3qs5j4l2nrxw2zgmbyx7rj6kvn8vmh01zn5xnrmnior1cqoxnci54rz5gldec1ml1rnqytgq3zc4swujjhbmvs2\", \"a4n2699o7u79ev42vccsbxus65awhbmcc8ivig7hpnp7qkx1i667zso2q7rrlhynqhv2eekiej1fz5elhociunazn5sl1rgp6s7apcgf00h573mue020spk5wrrgubzqazo3ky7kr4zqmqdg2fch14vh4ursvd4y3z0l9\", \"cl4zfhg1w1wqyizkfvfcdb8v6fw753czy7cgqw8\" ]\n    },\n    \"content\" : \"Et a illum blanditiis. Ut dolorem corrupti ea. Voluptatibus omnis ut reiciendis omnis repudiandae qui nihil. Dolorem ut fugiat possimus neque voluptatem quia dolorem.\"\n  },\n  \"expireTime\" : \"2022-05-06T16:52:53.294279Z\",\n  \"createTime\" : \"2023-02-13T15:48:53.294306Z\",\n  \"importMethod\" : \"RSA_OAEP_3072_SHA256\",\n  \"name\" : \"Verline Pfannerstill\",\n  \"publicKey\" : {\n    \"pem\" : \"4eifw6l3bxcbrugca5nhxgkyms6s5hhetn4tl41d2rund0sfbsbnf0ijbgx0a1pcvsb0pjtq7vq2vw9aek2muitp5rczqordicrfhagumqo1xs26hh4lr7tkmdebr7s1tkf53931bz447x0ytgoyslz5f1ga34r3hnptwwpwt46emcq6ttgr71i3ns\"\n  },\n  \"state\" : \"EXPIRED\",\n  \"generateTime\" : \"2022-03-10T15:33:53.294417Z\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ec46db17-15d0-4038-b51a-996051681160",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.294583Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.create",
          "schema" : {
            "description" : "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
            "properties" : {
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this ImportJob was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireEventTime" : {
                "description" : "Output only. The time this ImportJob expired. Only present if state is EXPIRED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generateTime" : {
                "description" : "Output only. The time this ImportJob's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importMethod" : {
                "description" : "Required. Immutable. The wrapping method to be used for incoming key material.",
                "enum" : [ "IMPORT_METHOD_UNSPECIFIED", "RSA_OAEP_3072_SHA1_AES_256", "RSA_OAEP_4096_SHA1_AES_256", "RSA_OAEP_3072_SHA256_AES_256", "RSA_OAEP_4096_SHA256_AES_256", "RSA_OAEP_3072_SHA256", "RSA_OAEP_4096_SHA256" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "publicKey" : {
                "$ref" : "#/components/schemas/WrappingPublicKey"
              },
              "state" : {
                "description" : "Output only. The current state of the ImportJob, indicating if it can be used.",
                "enum" : [ "IMPORT_JOB_STATE_UNSPECIFIED", "PENDING_GENERATION", "ACTIVE", "EXPIRED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1706f752-3aa8-4f8f-b688-4b7e2ca077b8",
    "name" : "Lists ImportJobs.",
    "request" : {
      "urlPath" : "/v1/gmpffm2e5ako106x/importJobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"importJobs\" : [ {\n    \"expireEventTime\" : \"2023-01-15T14:59:53.292324Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"dnk8iiysxfifvcivyr09hdogg7u1ihs\", \"3hgks2rhxm78uejfb8g3qjg8jl8uvmo9afude9oi\", \"2r7m3d8dnm0zn8420ndm4bx1s5peirock8yg6ruzqjaq6hp1wccbm9i0zq5cr0jc7h5o5tw4fih9mzfrnqxgx4dkve5liv9fuh9k2jxxm8rgl6qq0htfmeuqqd937mhbqxraveisu4bu9ycesmwi4egxo21nm4723117zkugo74lxjz96dyp3\", \"flr5hq4wg\", \"yf4kb1pvied61esre2wubdb3zwnyju6kqf43ea7i5wei22ixa4h2liort24w5zd8fgc4iovgvqg271n4tmkuyj18388aaxdy6eg09wypbpn95fzeg6tzhnmzui63ew36mubi85r\" ],\n        \"caviumCerts\" : [ \"lmkoztzq0anxbzoz5r8f6q0772v5wbraxippvkq38bb3nripsu78wq2kpnz40xe1bdbsfoj5kl1shr7auz81klv9grjzoajknkh78jy9fs0ewah99esciyqy86btz6usxjnk5ztv54he4lmqrmhifxx1wfhoimbgtu95jjmi9wq42uznygho3nd\", \"4yyrmzgutwemxzfct096hlb2orj04olda7awjof5qp2kpyngh75mhv5ebx4wziosatskb14fpp1f4mib6phjq8uywsdnc8wktpzs6arivzanrrshz3orvyfqdif161xltyzvbenststsl9t2wcqjhagynxct5pe378wi6z2r5iq5j702cd8mjshanx6wqv8v\", \"hdvcozed0iauxbq39f3e515i4gzshbzni7qrv1m8\", \"ngpg2jknibb0cyyvj8d2788vge35zzsjxepbc\", \"m9xuhkl2efd\", \"htfeyxe9moh1lzete5twk86swepkudq59tzhv8ljd9gnxiwjujddhut4y0m5l43xf145kfqizys8jl5jiib4bfiz5uq2aupm25p5iffjc8pq6726un\", \"ygbab6s945hqx9m7ayfqpumqb5xr6cc9obc0qhpqo2mq5s467j6t1agqt02h99pnhv1q4gmepoxrdopp26wym5s8i5gpih07w5o2pvief667px7owicr8y5mvx5ne4im3cbhpedpwd0f976zljokwwkis42iseyj6xcat9gfuwlbpphf9y6j\" ],\n        \"googlePartitionCerts\" : [ \"fagh2wk18mkubj3uho42h25k3iyi0gv2wii0d9xrtzg4cv8qrbdvhwpggb2q81txlpuv6my6r0qkbomwfr9xg8gfzujawunb9zzr9\", \"w43a7eox4dsyyd8qkx20ckfn4czdb8dxien97jxfcbbe16alc2vc5qzjxavltonpctenvrlytoi66n1r5lludp0yelg6t3wi6pclv6d7yu8j0osw4mkc65zy9w0q9\", \"c2xoa2p05i06k3g6x7eea7k3xc8ibyfslb3jvjbf66m5inz3twvmjvwyzznr7mup1o11mkifjyroaz8i2uerta8nwiomglq909amy9jz481o12wthv6ad34mbg0r6jfg26i34376e6k066ms4xche3n7c0evklp2w7iywu89fauwn3499q3eehz1vozxnrnm1kdilp\", \"hdh0neicj8je580o6qp8akkab3rlvd626piwlhf536ziyxo8e3b37f4tocwwhu8ahyoipl73e26xdo9ga4lxb5dp79konnabvffqmqfp9dazr1b0zfeouepdoada1hl6p5b8x5y14kpo7giba1ry9rt16y7w0\" ]\n      },\n      \"content\" : \"Odit totam commodi. Commodi in ab est velit odit quo ipsam. Magnam exercitationem deleniti alias voluptatem temporibus laborum dolores. Nam dolor corrupti saepe hic quo sapiente velit.\"\n    },\n    \"expireTime\" : \"2022-08-16T16:09:53.292569Z\",\n    \"createTime\" : \"2022-11-11T16:14:53.292601Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA256\",\n    \"name\" : \"Stanton Flatley\",\n    \"publicKey\" : {\n      \"pem\" : \"l81g0joxe39n1hga7xiusto4hpj1p5eprxpfl96jwekrim4ibglgibcf21syn3xpxo0konz5pjlxezkzibhqruukz9r7xwqzd8kfhpe6vzeupp30jx0ifv3bzkj1kr05x97f6avcnciqlvizzyrir6lc380jn2shivgkdjjphkxj8ig2u2uaa20mkdd1fe6xnq67t\"\n    },\n    \"state\" : \"ACTIVE\",\n    \"generateTime\" : \"2022-10-28T16:52:53.292723Z\",\n    \"protectionLevel\" : \"HSM\"\n  }, {\n    \"expireEventTime\" : \"2022-04-07T15:12:53.292774Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"ldhrutnud3u7sb428awrl8091mqirov185w5rdpup49bsxzb50us9a8hhrt02vs1ou4qc5cplvd37w4f6acnaln39h5g3g3f35hnad15n4g8ag823byjgnvov717ygy975zw0184tg6ix179gje1emilm9pw9fldm7r40sdliipk335\", \"70035v5taefber73cwf18lvcj08zzeyuadfa5xu2wc73rdkbhs1ai1gd8jzgfhsny9syyw535ed1fubvxdxx0ktvqhllp12vj4tvxcho1jlyz9lsxnw9i7d35kkijppm2xmdaaikbhq0xm\", \"gn1t0qgziyshwc8ckhgxsyqzr2mddjr8oh2s38gqkttn28c37u9waugilh7s6rnyb90guatmi6s1cl\" ],\n        \"caviumCerts\" : [ \"ddplu6yspb87ww1wkhf5dwk64rj5e5f5adiguo087oi8nxyss0dig4k9s48s6gx5j4i4h3beemrnqzh7bh360ebczxuocvndk4s2n2jq6t4gkgj6ol26sou7l0nocyt6hsxpbr1hwut83ebnbiyeu0vxnb99a8khr8ctr4g1n4\", \"ya6pla0\", \"kuz8gz015zflchl6uzf9kbuuv587ywsv8ugq0mr2vxx93tq0mbvdrr9sz62ld4qmu0ty3xafl3opvqex0jipoynp9gbn33wsgbzwm8nwfiw38l42r3kq6j0odfcjvqai2s1od8dy6lyshcs1gmcu7y46je4zejs7u3siwfg19umxrhhep9\", \"dlm2u2yywhshyp7df9foklqovd9wz86yn6m2luxyr4jr\", \"bj33dobt7jto15ll5fv55fmb32of5t23khy9r6lm8pw2m4awfvftm5hdpc0b9qxjnl4dfmyck5u4a1s5ss0mqau\", \"4zeqbux7uy\" ],\n        \"googlePartitionCerts\" : [ \"ee129ca1jpeq434fy3bixwusr6cz6ymmjuyly7ss4fklsqweb4vdckf2ogsnfuz7792mkhhiugu7ok6vjut8fls4kpaklcgyeuf911smht6zyik5wwpnqv67\", \"ch32b9ef3b7odz1910jhpsbn9xchapw7o74wd9q4z7y5te9kzauwkmmb1dcclqi4fxr2x1lrvjbg8t91tdleqdrdwn4z0tr2uunorld6g0zgtin8ptw68ebmgrd2grv31y64qg9uuke657flvznpnpsyntigmkutnqlrsc\", \"gs2fq61rkeavdbkedfti0otl2emog0q4ylaw7byqje1m743wkxyaufeaw0l3ibcobpgp5o5t1rl5gx8f0lzckv4k15ewa12iviixcumg8mxonl9e9srcib9o35uz96y7qbzcxgkefx1g468ajkrkglyuoxsci763gbknkmx9qhagdsinj69up1vaizkgf8\", \"mc58h3\", \"xweew34hfdrv0cqqjmnaoivju1tkac3c1u2lhc2a317qnl2z9uzi5dos23793sa5ad07bu7wln96cog6rto74jbzbpfho3cxxx4awxu6m6z32l89wysb5t5w4rskwned6dy8m2oktvjcskouiqdstd14f051fmbctlehgnzmfh329tb4ychvy8w254bth2r\" ]\n      },\n      \"content\" : \"Quia reiciendis provident et mollitia voluptas dolor. Facere dolorum illum ducimus quos. Consequatur dolor nisi dolore est.\"\n    },\n    \"expireTime\" : \"2022-05-23T14:58:53.292967Z\",\n    \"createTime\" : \"2022-12-11T14:36:53.292996Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA256\",\n    \"name\" : \"Erasmo Hilll\",\n    \"publicKey\" : {\n      \"pem\" : \"rjhe9onl79wadrn7jsvlmrk9l8chybmm1j5we377zlv9b7y86vtzeqbtvqdzl23kyvfvvoi7zmvmwebdedbcmbljkregj7p8n7tm9xhb9cxd5pa999jzf8nenkyhdp32s8hxzsaa3oy0c0sp9\"\n    },\n    \"state\" : \"ACTIVE\",\n    \"generateTime\" : \"2023-01-13T14:25:53.2931Z\",\n    \"protectionLevel\" : \"EXTERNAL\"\n  }, {\n    \"expireEventTime\" : \"2022-12-06T15:20:53.293147Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"cj4me7wvg5n88u5q4b965gzmm4i2u62ot8swe1mk6xi7xx8wekklte2rdew05fqv0lx1kn254ngfq5dg8shuj9cka1imxzyr15c6phobw03ny658p7u84q747tk6ue7shd4vpzwb7rhc6ngn3aalf9\", \"ja8i1by5859tjv6s5qe6d6llz3oe6yhl5fk11zsriiu42ymyb81b8lwioefg3xgmpzbdge0jzg1pqv\", \"3qcdfxclvs70dxpf6auuimilkrbwxtun4126niuigln5z7301l58mft\" ],\n        \"caviumCerts\" : [ \"6rty42bbukkz16bhcshso2l8ezj44fbfjgl01e2ozskzpb6r15je22eoib8g05ab9mqvl35j7dj4am2r6h0y221e\", \"5c0bmhh4s8k2u81eszm53q2lwz7e2uheqp8btpn6t7ui687qcyb85bwr\", \"hrugli0dfpyeihgfm1w47n4vbq64cepcs0cdti321jmoe46twgrsn9kakkbk9ms7de19rwox53hj1r8ag47mfgdqxtp73s2v\", \"5o6d39rdxjnmoilf53ubi\", \"oi4zgiui6hd9kf59u8jauzaoogx9makbqu2o95yctbbu31yo1pe1y7a0c4z7ps22wdyqmo7v8j6iqwt3i2bv1mhm7doabdj8cx2if7lljpqxrhikc23yd733g716vdlt0bqtbfolavhfwetjzqlhv90yj552qhai833lgaksq7wvm1uj3y27ba0f4wt4g\", \"hljgzdtj1m229pjft9sdtiiznx2hcgdbnc3ot97nj5dc9dzaitylmj1p8c0mnrymf7txygfk5l3q9xqb\" ],\n        \"googlePartitionCerts\" : [ \"hlmmkr8jzjak3ntmyal0948x963rg65jiuxr0\", \"tr342qs867uh0isc5cu7um6mokqkn3ukki81o4x6juy0yhvmtul2lmuh5b0ykgior1zndi1cxydxb5fp0uks7\", \"za8q9eb4ehnhvrx1\", \"ljqm6nd8rfnqh6gb91ey5zhg2qwn9hrcd9\", \"gj2055ql8b667pa7er1u5hgccj3s2olhba5n0sjam0q7w6kovlhzf4mv6157h893hkjkeoc06sbo31vkq7udxqpt2h97yw7p84\", \"6zy9yjvvl8oxml2habe7avuttbbyppnb4stob1smyzc11dhlwnb328v1pic46osxbqqub2p0wk0e1f2ujgw3zg23nab74r5ydytzh\", \"dokpy8gvqo9yxoi0sbdxhb9038jp6cqjuopirn1d0rhhcxianbzotquymfmr2i65ndyjmvc8jchzqezuj2wh1hhbzrd0z9c0hf4pw5fskn798gbge848mz1rce7p7w0u2am3xc1tisqp564f7liy309i8ugpb0i\" ]\n      },\n      \"content\" : \"Aperiam optio nemo. Ex non rem consequuntur sed qui et sed. Ipsum nisi atque doloribus cum ut.\"\n    },\n    \"expireTime\" : \"2022-07-08T17:06:53.293354Z\",\n    \"createTime\" : \"2022-10-30T17:23:53.29338Z\",\n    \"importMethod\" : \"IMPORT_METHOD_UNSPECIFIED\",\n    \"name\" : \"Myrl Roob\",\n    \"publicKey\" : {\n      \"pem\" : \"2oowmgv3m3zy2pmkdnvxos1zoojtqb0543h312fez3vfto8xrvvcemm6x7b4aw4ha\"\n    },\n    \"state\" : \"PENDING_GENERATION\",\n    \"generateTime\" : \"2022-06-07T14:36:53.293483Z\",\n    \"protectionLevel\" : \"SOFTWARE\"\n  }, {\n    \"expireEventTime\" : \"2022-08-16T16:49:53.293527Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"ugzom4g7y2qjxtc160gwn4j0wyjx9iwa\", \"t5u6cxjp631ngbxgt17iyyk16boszuqult1gxevcy18nsou8w498l2aqw1krgkfwmh5\", \"33xbpg4a4agpep1sd52ikb8rs0kxi3sy3c2wnfq5xn7w4veps6o6sr66lyyqbizgf7trx80ap2d561d56s5l5zt9p4crnr9m9lqnn0q87o13p2sg8i6r14nwl7yhidemjczwtrkwjxzlwnw9hr60dtyj\", \"zodj64hkc8zmsz9n1s1g2a1y1ze779je6csnh18hst184j3zqzkrpuf7tnes48bc57sy4yjl9l5p3b9x9nibd8yqlhni4z1pdutkey0cc37frwkuep3sicba82sftcd894aokba2d4n8jfz439uepfq0cmcl1xoi2it4w0igj3tkkqv6qq5k4vtmq4pevk9p08si\", \"rd8ugo68ckzhjk4nflq7ftq501o30lg1t6hiy37qph3s1ymvk9sa21hhc02ywyltyfd4r904i3cljci8yw47evi57a2l12czxgdmnzm0qnlfhrzgbqds2pdj6ht9s8rvmvsyh7n5q\" ],\n        \"caviumCerts\" : [ \"y5hsj10m20hnrnhs3ln2j5akg93ug7noodfd10860tbvuzro9ee6jt9kxk8\", \"v98fzuc9jhxpfh657zq2thflqad4wt4j32w0iyrv9m1odl7vc7ckwjm4z769enwnyndlzpyhknj8nb5avtay42jjwdu98smjdysr2tulrcr9nxtzf8vljb28y6kh844r4y9dmcl9mxudvw2b1k4b6yf9nmiw8jh768wst7tzangtdnsoo\", \"5qjdfz5tqxdnnigwhuxizxej8z5tja7kxzel27x72cs4s5pk466hbqzj3jwsz80i0z8s9kzaxjn5iygs07u9tpizwumdwui8yman7ko0060ydu1q96svwxngj2f84cag2cgd8xzkn1mk8cfsel0m40rort3hv434y66el312a5x2zhms96xjmfu4t2x\", \"zqew7nbwvtnt50n4dq9zonacs29k2zzwtpfk00kvcflz4cde2gc3jq67mljb15fu1sd1eqr7oel8c5b6eklqon6toesnoft5biizff1te6hre3hdbmsd3e370hhyufchbwoql92kkzzg673\", \"rtkl8yj0o0m2lgxrlmd3dca5rgibh8ibblj0jqwgv6qnnywodaujj4a28uspg9jerunb4dxnru9cw0cxupsh94p08pmukj436lu1wv6d0lstsomjm8pfvono3dd9y3onu1jh6al7aqlmok66v3j7mw3tttyp988h6gitr8opwjqz\", \"b9th816zbghzrjci5oq1jsnz3kjbxjxvrnghsfdggrsn14a6xqwiwa5oxw62ej66shyc5jbbkyzrj33e856k6p4q4jqs8gp7\", \"xy21qf0zuc9xtxpeit7xresetbs71fyrmwbw62gi8jlktoamcmdwcanrhekymqz5lw3litvvfog85ska7dspcc7871bjnz6f1g6qq65aeivkv7pbgfknhvtdwhcn2znu0pre6s329rqrt8o0mwwu0fsmjgqsxxjtyj8degw7hdt4\", \"a8dh8crtei9d71ffxemftbet85bvr5em5noovbfqfekom5461dycfe36elnl72bhfv7zcztwmc958fajjfp6e84eae5xh7ege5nq5p7zy\" ],\n        \"googlePartitionCerts\" : [ \"zoknookvnmjnypzb4e0k\", \"7p1fds1z3mkgzcgdkhzvn8g3iuyhyp4mh4jmq27blnki76sniyzkh1snslc9vawsh0fuw7lcbm15d4mn1asozxaffx8a41xr0uurjlh7pkhjxpflxqnn4a1dk6h1ts6m6dkw3mbvvw1yg09up224on6zrzh56t8a2yxe\", \"3ltvlv3f9x7qruys7kouihal8fmcbpb85i0ynn6igl23t5ay2m052x9\", \"cv6g0jeqnyt6buo51vmsfcixk09uc8wdlua6szybk2tt43f5swdmkfifhy2qthdmhpxuur86mfondaohcjsct5q5t\", \"5pemr5pgffsoe3ffph2i0ir7t8mu49i4k1dw51awe6vfvh1pr1gmb2opnhi236pb2doh3yotsg4psix2ai1d0esn2nl0r8rcb4v5nufp6jxd1mi6h4j8e5ml7zi5u6sl22ukjmaekywouwpppjg9dgjvz23\", \"vhbizsiixhi09d7xshthr4pg8y7hehgm8qozeom9p8dcsckxngoesop8s7fidtobjn7e5orruozb46\" ]\n      },\n      \"content\" : \"Perferendis vel molestias consectetur. Aut quidem molestiae in aut. Non deleniti perferendis et.\"\n    },\n    \"expireTime\" : \"2022-08-30T16:38:53.293748Z\",\n    \"createTime\" : \"2022-12-31T13:42:53.293778Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA256\",\n    \"name\" : \"Mrs. Antony Jaskolski\",\n    \"publicKey\" : {\n      \"pem\" : \"mhdlxzz8k2ywb3kkd7uw1auquxnuwscdw7klh2hqq0m6mxswyh9cxdda9lblq3im1qdxzroacmn2j6txoy22dlym6x9iv7w10bub6at7l6fv6ne56z3g0gv58t4khhvvj5xp2v\"\n    },\n    \"state\" : \"ACTIVE\",\n    \"generateTime\" : \"2022-07-29T16:47:53.293886Z\",\n    \"protectionLevel\" : \"EXTERNAL\"\n  } ],\n  \"totalSize\" : 1173786906,\n  \"nextPageToken\" : \"shxtfhh1v226l5wwjqdso0ogkpjr6dc2lub6b06p5rucsyq7o0mp0apw1r490pjp4hbjgybxzznv9mn3iaprj9b6kbslqmtnx73n2rc2srb6h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1706f752-3aa8-4f8f-b688-4b7e2ca077b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.294067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListImportJobs.",
            "properties" : {
              "importJobs" : {
                "description" : "The list of ImportJobs.",
                "items" : {
                  "$ref" : "#/components/schemas/ImportJob"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListImportJobsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of ImportJobs that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "5079cdb2-c218-43ee-863c-5956d810b62d",
    "name" : "Creates a new EkmConnection in a given Project and Location.",
    "request" : {
      "urlPath" : "/v1/sd8pltk0f10wz723et6ghs8cjp9l0soxmlc5e2wlwlirzfsvgapt2hhzsbp2mc/ekmConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"serviceResolvers\" : [ {\n    \"hostname\" : \"Tinisha Reichert\",\n    \"endpointFilter\" : \"rfq3lc53rnk07m0j0ekbkje7wg2j02tzurlio8kdn0ebzrqs07teb25u3eh03s9dpea240o5zhstv\",\n    \"serviceDirectoryService\" : \"vlxzzzamdutoafjtie8nz8zavqco341i38lex6uhx17xz0u4v6r5fn8xod1d38dv7igzfzpdt4wsenwljnrupj2apm0z2s8crcbhy1ggvs6ezh8bwqp3m6b2gley9de4vhdhiyjk10s6l7di377jxhpzz7qtsku3zqujikew59b2lvaq5ds7zwl7ok09aj1eja\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-06-15T13:37:53.285942Z\",\n      \"serialNumber\" : \"xfi467lupqmv29f4771uj3fgjwwjnd94bncxkilivzgv1xs4lcfaujq8w2ht2bws6eg024dz4whix1q6e1apzo449qydsqy26ea4b4x360wy1lx0myramxfwiicgw3z8fhd1c7dszqheasds5vs8yulzz42cjdnf21lbtkp7i0lfwya77s5wossvh\",\n      \"subject\" : \"hdfow21hkdsyvzuuduk89bvfyfi3wiox6xs9tgmabp2jkkvy249abj0q9qtsskbs4dru9n8zy92tvp05w4djgrohv9fdmga4xuyonecavbwpfhqst202zt8unj6s4y2fpnaqk7h9se02k1s\",\n      \"sha256Fingerprint\" : \"pti4rst9enhmy83kq4krw42qyja2v8awdwe8f157say9eq4gcpw58f6wxkv72txkegk5oi2hoabhkvr1m8o8q8wog1gvsycoi84p4t2gv822jh78\",\n      \"subjectAlternativeDnsNames\" : [ \"ets1psveh59p3u54xigvupx1qek07nsmofyonkwzxzmfd5wk4jp55tsj21yqtuvgc2ea499lhcyqd5htejd1249oikozn26l5p01lzn6bl425kb7oaajtj0kfeg7v949gkgnbep8k1iv\", \"ha5yvekubhts61tc7hfgikt8eglfxdx5v90tqd1u8t7o4t46fg83g71lyz9x9zw5tds1bc7ejh28rmknp3j9w0p3lc05xtegwozd0o4csryewmafueo8gveycdllduwkktudfgzcusexoe1olx2xmpupz72\", \"hfnox8nnmexw5hiztoomdhvt5hd1r0bvqy2wslne63ku4d7uqiwja5qz8m30nr3d1w4f9ascxou0dt680xkgi7xqto2pal617l7buedtvmf1fx\", \"6shd3vgnspv5hyfn2rtec0kock5i6f58uhu0aa27nehqromoc0up4siecebgnj333mth3sdpa24lfacb3shnrsvcqoji3\", \"znl7l193pjdpngiei7ii02ha9xzs0rw62eq525s8grgq7yfxteapq9thkwk590qp06lm2w53dmxsnenihg1y0xcpl8qck7hiboiv4ngoabkieuajti4g70zk6v4e11s4ojnglygc2rytdb03hz91bhiw5k2jnax7c3ek8hi101h80x829sauf3d4\", \"ek8i7a6b9qkm5q1rkyd4cefd1axive2gimsewq96bes15u0wylc64o7vx9x6k1bjj0j7nhj5q\", \"6obe79a6lwisvvm68s5ndtwmt0fjw6ww8wzyot\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"w132d1cl7x5m1ww58vjpxujn90jccbnflx128uxfx39b9906snhki09s8dcge79aausabjd19kh2rlg7jaenisr3aer04u4s\",\n      \"notAfterTime\" : \"2022-05-26T13:33:53.2861Z\",\n      \"rawDer\" : \"d8ug6iu6j6arl33id11i8kgbytcccs4py0gz2krvsgpkv99sp2vp7qtv4fnitehu5f96bkq2h4d27palmv3jappdo6of9desoa0rlqay1nonekpknfjzg39zey73qhkptg7wwuznx8f1ymb9pm\"\n    }, {\n      \"notBeforeTime\" : \"2022-11-19T14:20:53.286156Z\",\n      \"serialNumber\" : \"bp64k4rtxb29lo607utba2t6pht5go3lptrtuuy8k4u301pgnz2rv2rn2p1ovaqwvrddzg943rn8k4u1jj5v67ca8\",\n      \"subject\" : \"mvpw7aowbdxh5wmeed30crzei75j54yj3wu94d5izu9wlmad1zt7ukq5ayd0o5fx6f3yxuscljezwclu01xb2bx77ub79hxad12rl7c3tjugkajtxsth3n\",\n      \"sha256Fingerprint\" : \"s7b8chzyxzwn6u5w5o90qe6oqj16fpqsk29pkiwrvcpkoecefbq9i1itcg1eee556juwq4kxxxez9xge13x7riz1y9ryuyeytey9e6o8hsqetog1mqklcje02or58ue6i3aotyvcozjktu5hs24zd2i2ucqkya1zl6oexta0m1cy4tyf\",\n      \"subjectAlternativeDnsNames\" : [ \"4xkbphr4iwo5dq6pg3fmjlotf8qbln1i5tysrij4nlwgx360o63hoohlzevyppam4omrn0913i9xgvtfn\", \"hb5ynw1qg1foo38wjns365pfuvswa7sndt2u49ztyikwesrpifcwx1zro1u82aos1k8eqp7bg1whicdufmcwmxen86lw524ed7nvbos7rl5ci96y6qzf67\", \"lsxnz8i5lnefy1axuxk6rc7kd09d2bmr78hzw2a53xfkcu0av1hfwuqvf5vy7vjpkise51dpaqamfh522qe32u6crndqk2ulgzojik6o431eyyqvpobpiaa6hzxjyeu7nrnsetjejzfndsvk1mlmvkox9kmm4lo7i0cm2qmvxisymxzp2sy6q5at\", \"f87yg7j4tqyv9cnwbjnmbrb8lojq0ckcwkp7exxeyj96z25ffh231c6w0tw7yf7nvouh1efq09wenzrcpp6qn5jdrxeyicxk2sly65zktwaiygdln2p7470\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"qr2ny33bhm02uh\",\n      \"notAfterTime\" : \"2022-11-22T14:52:53.286267Z\",\n      \"rawDer\" : \"mid58wakf6fv58mi7d5n6y6c4u5yc12kjph2lqnw01m7ka4qs8570k7h8jbhe5zdl1i5uhkq44c6b1wt4kg213ypw1udve63o4plbs659i8fqecqw7zobqr5lgh1vh8hddtzfpjbt7iqrsd3midxu6lsxgg\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-28T13:55:53.286318Z\",\n      \"serialNumber\" : \"z8fem1srwnwv3m09awl2thkb5hxuqt2rai8queuz3f7vlqaxohhmkuznhw3olrmu0oh1avrpbahf1fthg9jqq3bzen3vy7ca2fovaj7c8qc3pkwvhkh7xv0rb6xl3a0787ux2qvh5kq7f9nvgev2bv76is4p3fj\",\n      \"subject\" : \"o9gdvraeq4m3u6efh2p7h7a7h3htq1rhrb8kdfq3ndpjd1m3ot9ag1ngnnij7wzfnj67k354t9o5ypx8mruj78gek3fepxd0c1iwwam8e6xttmj6vgbdudqm1ni1uht8in1b15tlsmacef5gy8ktzr40qfxlw0ee4axmocvpt4xl25m48c55k77rebmhvmpsrfrg8i\",\n      \"sha256Fingerprint\" : \"85ifuzsojt85kh5d3zbkqrzpd7obaidgq2tnh5rkbraq1lmxf9e6g7h9sgfyzy14qghi70d6hyrwq7qp34sbuaj2cnv4oqxc\",\n      \"subjectAlternativeDnsNames\" : [ \"fnn0f4oorvrfp6eqk0ex6v6fxct3f0wutz3ekzygoqabjnqwnj3t8l7mf5xgb3f7laiqd47d1936ioo4inwu72kpjstytivbwpmcwnyuh5owgorehm17v4liov7ptb43ex8pmcbo57jdvbkdp3d0saburspt7a6qtcor3\", \"amu7\", \"63da3ftubidya7bzl0at8o5srjvenhcf1s81wmlbwfe4jueobk4s3z103yxqrbrtnwfwdb\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"c0kgmtlehisn4kngajesdat5asmn2d62rcz5riwg3106sa1gufhbp0tpsaefrv9up6akwfoqwud5et9l3v2if8baufp5qx3p7dy1owlkqxsy05noti2lnno2di8vcdukve\",\n      \"notAfterTime\" : \"2022-05-22T15:09:53.286427Z\",\n      \"rawDer\" : \"eh2lluqoxbsqpiqoyubokemzim4urx4bxcg42ui2699rohe2r5z9k6opzshuo8za10rvp3xx88jmymyuqza3lxmi7m\"\n    }, {\n      \"notBeforeTime\" : \"2022-10-27T13:53:53.286476Z\",\n      \"serialNumber\" : \"byrd49zft5wo29ahsy0b3ltk3gz3nrswddne5fy094e3uk85hxo19zfg4ofc55q4exjdcdrg5lk64kcar5t45r05cesuckq62k3s8oe8ljuh5pcoyosg25t5e49bkxm06bijyn2whyl18omnf985uufyhhrjcnvs0ug8ir1\",\n      \"subject\" : \"jirpuc3bm9jt26ixaqv3omkn458yr6wulfb05kngulokvhdmtuigl2jhdggawn2ehj6bpq2v1j0h8rj2381eefkbz114h3qzrnfffjgdmxvevoa1wrl3ac5dxxw53b4e5mn27ux5mju4pp1s9cueb\",\n      \"sha256Fingerprint\" : \"iqimgjshz4i6dkf5tsywiedm71ft\",\n      \"subjectAlternativeDnsNames\" : [ \"zhrjq\", \"43ugt4e0e8zlb9to3dcxgqnt2thn8pw06hxthrjq046mjxoyjvk4e33oci06z1bn49bz1we0n0es3x1tpjldou66nepcybcywpwgk96eh0ufwehp7znkl2di9b1du7g\", \"f18wxnphlydih1jwmss7kqs5q2heum4rbznjp0wuupzpefdfevhgvhx31xqt3pd5p0enoq8mgsn5wcahj0rur4g1y1ij6dyg691hfis7h3veuoni5pwqhbizl48f09isl4gnp0s66zlncmbasgj3gpi\", \"sqdce62v8o1fykaj2r16q779i8tsz8cbro59pjfg0p4x84ozdjqeh3ypsinmy0an6qzmb31m5yi8tlg114rij1fp0fyve7gcw3\", \"4jk7aw9rd6gdhtu1tq7tla0tsisfqc97mklt\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"ymgfkdhup4kum3imz75f35aorclc45oe98v8vxpv4ncvz4boz585g220i5uvguu7lqff7dvolvrn\",\n      \"notAfterTime\" : \"2022-08-28T15:25:53.286591Z\",\n      \"rawDer\" : \"3vxxkmpugmufied0q9y2h1c342awrlmjvre0oio4h8zmpvsmm9zg6w2pm5pc4jg454x6rozj9ebw18znbatucjlm6sopkv0huw61xyzb5dqeln4k9qm0jz45spgwhodptgd3nhm7h54y87987bre87o7algnsq7\"\n    }, {\n      \"notBeforeTime\" : \"2023-03-01T13:53:53.286643Z\",\n      \"serialNumber\" : \"4d8n9dmtbsepew0p3hoeu2q0l26q0h1stvtj4reo34tdz1fx6vzf6e6fklktiy8fbqg1hpnkh7ggnwbzxtg8h4w07xs96n15ssbec8ekrl2j3wzzsoxq117x\",\n      \"subject\" : \"h0b5kfpk5u5egqwq5fe2zrwgo5q9bufubt7jcvmrx6rl5ru0ijs2n39zmgh6jycykmruzr97hdqetoo2ds3dhb7fehq9tpff1cnfnpaqugq2gt1gpi9p6thvdgq0fh75i2jqqfa4grfdbax0vgcozgnjq7pv30512qa3z8kv2phzxrtgz7p3hrmfbtyknw\",\n      \"sha256Fingerprint\" : \"fdqrx33bdkwu28yi2blruwpjw7zwwxdqjrm9fk5m4b\",\n      \"subjectAlternativeDnsNames\" : [ \"rm33tdj6hbmxwbg94p347f88l7qdvs36it4t85omy2cinhi3hesoy5tgqk3z05gsise7j6papi\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"p89gart9i42jokqv8uqh7mwma3jbamqmh17g6fljzhflkdxat60jo5345z97nxdzvpylx67acf88jdrm2gdxmstxwhsh68o08tfxg73usfftzppw\",\n      \"notAfterTime\" : \"2023-02-04T16:52:53.28674Z\",\n      \"rawDer\" : \"tff4398nk8nhhbco4awquqj1ofr76j6mzulcroj7stl045fx8ht5y6s416olhs4hmtco31kaoz5d5jhey2or7rm4xss2w3ytg8k17i6hpvfmigtw2ca8jkadk19em3y0ecpqnx2yef7uh5g4317rl6ic1a2xf6lcsr8sgqo2ld\"\n    }, {\n      \"notBeforeTime\" : \"2022-12-07T15:52:53.286795Z\",\n      \"serialNumber\" : \"ho3h8yvwdk8kiu30h2s532we7ut6l7tzf009j3alook3zn45nv020c0xdd8g2zkktozkw7ny3dby4nd757ffrz8v5occkh48cjc995zldrhghjdawc21fh8zbywc9wd0z3u8lixsvhpsfqcsnrxu45962bxqn1704eqi4x9cg1lskl2zukr\",\n      \"subject\" : \"hng7bq39b3u3aqmmvajdnk28vy1opn5m0n8u4z55tjv0dwiiolx4s9mj7k1210g3wys19q4cw8i1x54t3edx07qzepxgzujqna6tjw9fkts4jyw08p5gdm9hzh199ay2mu4phojokdj1qecv2fg61lr3gc9y2sm9ga0qg4j46l9iamxq6u1ujpha7q\",\n      \"sha256Fingerprint\" : \"sm791ahg1xmi2g1ojtja7xnk5jirdnjgpy3fkpb245rt6osesvhl3u0irq4wtqm207txn9jhavv9w4phadhzbf8j71c0prmkdxn8kbslxfvrs6c701d0dgjfx81pyser69r0xczyj7guu8rcwej8f0m2g0xxjvn2132tcyz0xwkgy5va3ilj81glu031fy8hmqgyw\",\n      \"subjectAlternativeDnsNames\" : [ \"xusn7iwon1fhj4i\", \"rt0mz1jvw6rbksuboa71mvf34airuti8afbhpypev9v3s5h4tv4i66qm2r4k1z6sbkq4w4ptorwlqwamywfuys4i8heh5hxl0vfduj380ez\", \"cz6x\", \"o2t17thfbase3wbh5x7tdvdyfhyg9o1mmx9f70hlsz573pz08yge7ja2os3pijgz8gbck3vw6t7txqisxte59q2f7uv\", \"l6aott2fnkty0279gksbuhwb0vd5r1en7ytk187yzb5uy8z40vhzw5ir5fg668fyxx6e53zf7x0\", \"avhwir8zknoj9hvqtmbdtk5r98t2aia6cpjab33wldy1\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"9w3pir4lui4560gfyovk1muaw9czltpuke4k\",\n      \"notAfterTime\" : \"2022-09-08T14:16:53.286916Z\",\n      \"rawDer\" : \"inhbgvq2gp96zut\"\n    }, {\n      \"notBeforeTime\" : \"2022-04-26T13:37:53.286965Z\",\n      \"serialNumber\" : \"2ej47r7o5orh8axv0wl0wdnicxbj7s5qqmbym7hfhr8x8u754623f1k6mv44i98i74fcxtqx2sqdiy8wnntgs2pvoh0bn7pgamngxpoquwtggk46usaoi62\",\n      \"subject\" : \"ameh4n2jc5hjnifu8db8fpv5h9e8payjlu10dyxlt7ds6hgd20dsd4oupwbkqvp8v8ehpdlmh3iridbhp2l3l0p9jzhp231cc8mwx0r0a3kure8ut8br2j4nvsiion58thodd35ffdl8os8lzaoa9kuf24uhq91bt9m80v56g5a06glhebsai\",\n      \"sha256Fingerprint\" : \"dquwz4hmzw2mlw5vov980b8gaw4bw1purw3szt8b774a79tpjfyrx1g562drdvx89cufuw30gg9ek1nzwfwfivvz11bxsb1kj50lr9rdad9n5l2isnmso9la7oixkv16t8fe31ctx0xnqsfl1it26fh0olbr\",\n      \"subjectAlternativeDnsNames\" : [ \"1567fwv2c2a3a3k702n5toeh1gtgxdgwmwlcbug88qefv6i8xwlnudqta1iwjs0bk9f9lqj8m9nwi62hg65jdscahmk71nkrq0i6vmxed31in8by67qyzdkzd92uz90c1t0vzugw24gtv4aaft2r1le505b3wne800xkfyz4orn6ctalaq\", \"jrbnx7ubbd0irpn382ye4yvotf1z0q23mso223u6jj6w7upamvnu6mx7f29mn3hl32\", \"2csa3dblx0y62mwbzb22gz3gzdahrfe7wlad8v4nxy8blu2y7rg80myzig5o2qflww9o84bbcakxwr3bwal1cj2lif86idpceoq6uuj165vnzw6w49\", \"99pudcffojzvc0b37eiwm14i287sdoe176xhdan1ok0emhjehspa620p\", \"56iz4ao651lzd2ro6svr92ve1c1a6x5lnz4oxkvuq2kzndocai18oc2urjaiw4eub8898e5rn0643ya7sxovzbshv0ttrz77ob2n80r5sqmeq3qg4ixx6og36c84vcql769dfhejag9eg17zl8v9lzzow2vigoxyz028ratv0qe86c9nv30f08r\", \"kf01q00d18t9c03ecntbb05zx2i2qm2xs8yx2l7rmtfrw2lsd31d831va6dhtzi\", \"8gxvsid6ips87016fb1d79pgsgheyxdtau2365m7usy0wttn9txickd6wtqtilwd15a25df\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"if33tlto8km8hlwap1so5c6jxqc254otmw6ilf3xqf1ltd7qy5z8rtz6vg219jpo8c7wynx80yumipjqaeb1cnjudp9dtyuhcjq4ssgqxqvapy99j8b1fyer541eci7j2pwq2o\",\n      \"notAfterTime\" : \"2022-05-26T14:10:53.287089Z\",\n      \"rawDer\" : \"8moilrkdc82oye59edaxvzjdv7uul4ke3owp8raeezavkpybbn9qnt1c18cgbejps38m2kupayn6f7qacpz8gg8lw1hcw0ghuck588tsxepjcjd58ueic5fvnaphg4a71yrwihpim1jh5ef8s6aitv6dbr7s3cygal2gkoo2huqijlcfn9l59d5tnhwkhhmy8p9\"\n    }, {\n      \"notBeforeTime\" : \"2023-02-04T14:07:53.287143Z\",\n      \"serialNumber\" : \"vwt5jd0lzoh4aoyuqdxg7ocgc5h0yl4y1y\",\n      \"subject\" : \"pskfoyhayfts4xxyr9qupot7q4yasbdoulqnr11zbawno4qhvpe1zb49awppna9ynta40igzdp82v3egvij9sbxror5272jlqkgxrtjpmhe3phjyehor57yqhx3r8vzeewmhsvo159xhi2s3826r\",\n      \"sha256Fingerprint\" : \"ubx51mopfpahp5ccu2rrztkqzk1dhs4shqb3zqzokwqpl489sxrzyqqc87cfs7vi0rr39qto5r8hvprd1xbgwz8gwrvy7z6pzfo2s8lu0t2hvslw32au5f71bpfslz3omh7confmkc5t51qc5zl\",\n      \"subjectAlternativeDnsNames\" : [ \"r1uw0e9yymnu83m9op4m3xj0h2j1\", \"j3p9akyg0n5oas4ij2u0zl962mam83lxalj6ekraxfsizip2k9uauqna\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"p03c6d9cn3csg1gwu3qsqfo393x1xvrvlwlcg65xcr7q7uclfb9jmdkdtue12mcvtrrn3giy7q2t3oudz0ukd0zo06dky0ntyn0n43vp4ge55ohta5x78280rmju3iew3lhvtqxaegfalpto356hpn39\",\n      \"notAfterTime\" : \"2022-05-13T15:23:53.287239Z\",\n      \"rawDer\" : \"2ouw34nit9muepof3tk19m8473atw30mm1iztae2ueazc7y7wzpzlou6ybgrx3uc6cut4t4dtijkc6ta0oobg5mwlgt5lusl6xd0wkffpodzuqecmi8tms1ysxwua1\"\n    } ]\n  }, {\n    \"hostname\" : \"Gayle Mills\",\n    \"endpointFilter\" : \"t33u4txbfwgfvkdjdv4dcb856iggtlend230t88zjq20y8qbfqomsye3y08\",\n    \"serviceDirectoryService\" : \"jngch7vjv1purhv35umoeb3yw7i1m6dzkexlhrz9bnoyqi2fq9wgdyuvrcm645ssdzovhrp63le1gw6e7tyquc25gr4a89wrh6tagwrab6o\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-10-11T16:46:53.287378Z\",\n      \"serialNumber\" : \"xvasdirj3m6ivcthhohq6iczzqura3tlgwkeqxi1a1xwydhx3c7qf1eztvt3nnhmeday2ldwt9s7ddegai7oar87dyz6hwoo3l1bd7pu7xh2kbp2m5d42yvzv3kin5n3rc7enyi9l9vpwktf2p5wcnpjung1qzmnlaxhd4vuvxupkwj7gyiuvhiivhbr\",\n      \"subject\" : \"lg3vhro5ggzb6elzmvh4sqe2gszeimgoftak0an8nqk3n5jzpcp1tg9biazkbllc\",\n      \"sha256Fingerprint\" : \"d6hmdlkfojy31nflswdhi\",\n      \"subjectAlternativeDnsNames\" : [ \"q3aqpynlmbzf2uo07dzawz9odi663dd3cn8ngmc088z3pzyj09ezepmqb9218looaskll2oug2tlx1cfpsdbqctq5kosp1hwyef871e8h2rq8o1ok203qhgzjbj7qb07mtndqknyct0qlruuvwbyqbni4\", \"qry5mytpwprtg2tv9r59111mxja26a7um25ujzb9njxvqrd782ac7pnyxtciinmnq1lcunkna5zjq5sy2llbwivrw4lfg9vpi2scoqv7uerv2ezwloah6bicpw8i7uskth86v3kyenc153hqlph48y6du6bp3dg\", \"dw8e2hijhalyxgw96krpjdhj1pualvcwj8pd68bjoy6mul34k95nzl63411bzfzx6x173asg000\", \"mqx5epxh76jkj2fx5f40px6dyuyh0n7labz4pubnzw4zomrmviom9ms3uygqtnmnylu4\", \"dpt23wmsp2kd8c1fa68s1rn28lsu9dlysc4yahftqetitnv70qaahxisu7mhx17rd6536th2una50t2fergoahogt7q6ds5vxvtj3149uz2gh5frt967zy1wykccw1iozbjlgs4387euklye78p9itotfsrondsavujxifsseklwk\", \"se49p55zb7vpxqlma9f88a1qyzegp98rl6o0q2v3fsw1umnfijb6wts561ouy3b9dqq64so6u3lmtm0whzg69141h93rwlwlpub13d4gwytjeseck8a01w5t9klqjl33qu6bpxb3vdce3mvkurs0pkby6t0tv201x\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"dukorn9t4kmouh530x39rxe1ne6bwjqssnm1adk9alw8wotlj9xeb6cfzuqch5fzfqpi0h1b89jiqp8so3d8k728pa5b026nz9o\",\n      \"notAfterTime\" : \"2022-09-26T16:49:53.287499Z\",\n      \"rawDer\" : \"qq1uqsopzfqrnlh30kbrikoo9a2gd3z6iyyojqne3k3jan36232\"\n    }, {\n      \"notBeforeTime\" : \"2022-07-06T15:10:53.287559Z\",\n      \"serialNumber\" : \"usv5p42gkv7oh4hcvtj3igays6oc1aqpwzp2i62wcz8znjcr4ovkvtgfrg09fj3q5j524462l9d7i3bgi2c16crbi3a0oyi8dsgid82le1d6uqjtebycn0f76medsfvfh5ih7p4yrzpafqjjnq57i1lyy48s07m7l4zik0ixhbl9dfvt6pg\",\n      \"subject\" : \"8dpka1ir7ykj7a9ndvlm01qxdf650k9ls62jox16du3hyk\",\n      \"sha256Fingerprint\" : \"y9r8zbqxwqegislz3fxk4py6j5xr4wkgv3rlq9k7hlvwcw4bg19t159o8yrygfpp\",\n      \"subjectAlternativeDnsNames\" : [ \"8nkm7suhlkz0vyd3j1ubp1v516d4ookcar8gl22rdz73qwpjzp6g1z3nnc3xxcgj0szlhpjrvdc4q32fihx3xb9\", \"cwfr42lx1cdx27zz11pihilqkvzimhiry5ooxv94y9di30as73aox73mankz8o8790hjz23n2yw28nn9lx5oqkxlhtpb3jyqrbrufx9q0ugcnobvit0oj8513kp3szsohwzrebd4kii8uo5hjdxu4zuvve2sdg3s9pqc\", \"uv0ymec9wvqxu7ijec4w8i51sq2y3x59oz26ulyclmkvm9ix1cj528f78t7lnjjm03ysrna689lk0jjozs25b0w5h9tafutayhod99qynspxb5f1im533dg9roon2wjnn3x0zv\", \"pusj7k61qiq79op83yrpz1d5iobloe2hqdbqqbwb8t30qx2nw8uwedo672l9ipik0shu210toc4xni5zs4d93yy3reys3am7m17po61wu2tnh0btmvukhd4hoc5m3drxa44\", \"38b8cloxli2lscyzo\", \"x8fqnzqhozi9jfnmu5m05271fpzm9cj7lcfvvb1dejywpocu5bakbj9e0yff2m2izx0wsyq7ntw4y72e3cpmaimy6ngisymbjvjtht1nf615ubs1essi9v7759ptwuy\", \"ek8zfrihk8tgunbugxc8m5hqs3k7ot2vd02cth846lm5p0mgn19gtokzsgy4bzu7lxb9btuwaonbdjn460yvrh6nhla35thvfjiysxg40wmty9m945rz6uy1mae9ar0azx2z2vyp9io4wcmfmtkdkps\", \"2xp9m52hflw23wy7w3h8iuk8npdgeurzjmpqkg\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"ntebi5acym6g0g1zwer5spo2kion5h1alqzer9ah5nnrm7tb9b6ykrjwt4lblqjgup55\",\n      \"notAfterTime\" : \"2022-03-10T14:42:53.287692Z\",\n      \"rawDer\" : \"svdaypvvjfco45r\"\n    } ]\n  }, {\n    \"hostname\" : \"Eugena Harvey Sr.\",\n    \"endpointFilter\" : \"fjte4wma\",\n    \"serviceDirectoryService\" : \"kfghhj7mu8lpctoh9pd3vfu3bge87ajddx74h1q1nznetpxi0g6b3u964xid8z6k688l8xxehvphbrojdnkqh7jh5d3mrvqwb2nftl7gp06mgj2fknjlsvcsdth9ggmpi1l76\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-10-10T16:02:53.287824Z\",\n      \"serialNumber\" : \"zxdvulaqsvacrxkjqx6xdddkpm3hnfvq3mbzel635705xqvyl9fn3qmbslr3pxm72xhgjol5iezihyen5szfgo1gr\",\n      \"subject\" : \"nbnon2naqce3436236t8aqm6q5u8tupy8jhyoshz98f44oyo78360qfxjo9icuij5kvc4iix92mugs982dvxn1hbrmgu\",\n      \"sha256Fingerprint\" : \"kppxy237w5s1p60f3unqlxsnzt2xjb9qctwxi7brcu4divbibouegagyo3azja8fiimzc87nrlwu7siq01ex\",\n      \"subjectAlternativeDnsNames\" : [ \"p35oi137kkl5khl6c65ayr3zxph83bvzqo6xc7a8rs\", \"q2umurmyqt4hoyqjn6knjhdnbfqipax4annty2k7r0bq3is4zo1yrcpaxqu9txj9vsikvqvlr3s1slld38hfbeonz3p1xowce3ohzjzqhfe2tysjq48crcj1u9o4r4aav9w3we176qvu4tua91ugbtd1y6bw1ski9\", \"yhnux0l0lv13d6xdlxue84g3z4fkhq44cmmlf8w1u4rdrdyw16msqlp94bfb5wfzpwsdzfb5zra0pwfb36jkib7ohvldugwwcah631ixfw52ynef44i7emwldmmal7xb9heo5v98m38t86qvutmtvmmbl95wewpl8hrfqbcudf02huu3osky1orbvj3\", \"ynp5384esfg21ir19bigq6v4f1521tstkrlrabp\", \"9valzorq2jq7hdlm37mh6tlpik3us596e8jbgkf71w7z4jaom5balbj286hcmzob\", \"hzdlt2boh3luwm8dv896dotb6y0e1uq2n0k7gpead613dgs0qokf3rlbfbpjd2g1vkub61show9f1r54g4pwe9u6twxvmlso9mue7u9dm9dypsu6awz5ha9k07abpdnmxqyjtj\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"0fshn3b\",\n      \"notAfterTime\" : \"2022-05-08T16:13:53.28795Z\",\n      \"rawDer\" : \"8elff88044idrjc\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-07T14:55:53.288002Z\",\n      \"serialNumber\" : \"ov1\",\n      \"subject\" : \"5rdjimxgto0ybhqjopklsqf0if85vftokf2uwi9g8zr8c21hf4oe4ptkpc8hcu8iphdy2suhvk6jzpidzm4quk3rd2vtaiw10wbaysxspfhkkj9jf4t4cawunwzl44ogjlgobn130d0z3xe49\",\n      \"sha256Fingerprint\" : \"t9q3rzd5d6n8o8iapuxdesl4mjmvnntvjjo1n9qcljdqwoiw6h42u7eyv1v5u3okovdckxwdkr7i2exl4zp7pay624zfsxf9z4102k7jo5pzvom4yg6urtqmfz8hso7e2f0wpckeji3epsttlp8\",\n      \"subjectAlternativeDnsNames\" : [ \"tcnwmuxkb06svnw4wt3kn7fdy6s6ku2gn3l2x08h\", \"hmkj7o3ds43tauvwqrdbib8v5za56z7kp41g5qx9l6kp6jvnpzdhbsmxhxh4qv88g2o4ip0a1pnsrrmk10o39zsxq9pw0p671jlae72vst9nzn4n5jciotflldqi441q1tcay8nh356ggiqntwfcohe2lgoleki8zi988q1nqfq98sip2\", \"8z9n3e9ycnnkukxc9toans5sxhbvkpqv9earojmfo2rcw81yth0id9x16n0i3oacr835v6yb6ttrlj4oadviey49jz0encxc3otr0iyrnfd899ifyvd4jyzq89w54wdbccs32b4aeayzo5l\", \"5owkuzzdt\", \"3i35sz8lffhsl8exoh5sq38acruk9qxtrtuynsw04jaty5zollbnp642qmsbtzmcub9p6qo3sa52bz50j9svtfq5iu5i4z4b8id2g0675r\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"kiwvfu8oagxo452jeicm1j6da1616\",\n      \"notAfterTime\" : \"2022-06-15T14:10:53.288123Z\",\n      \"rawDer\" : \"7003tv7uxks1k1uynig7qbznhpjw31yg9wbvwdkzv25njeqmkcfsl4m6tzhnq4j7v2mcx209uvjfz1x8km02m8vog8nsnpehtdypd42862ic6bw8xjsnjx0d69t1pxrrjx37gng0bmva0w8ppryawszlwa2l9fal5ikkiccwixhd67b4nu3nrke38765b0yjgw\"\n    }, {\n      \"notBeforeTime\" : \"2023-01-08T17:14:53.288173Z\",\n      \"serialNumber\" : \"k835mhoz71nsg3imf7duvkty58n4pn4pe2w8qphal5kt50gxlyjvkwleytmcl94t0770tj6nacsxrcb7me877x0\",\n      \"subject\" : \"gwlebtzphjg2zol9g6wb\",\n      \"sha256Fingerprint\" : \"hy1vlc16r396h502vxda0inp8io9\",\n      \"subjectAlternativeDnsNames\" : [ \"0hm4n\", \"fmcygqpvb9n4wxku98sbi6006908pn54naes2rk8woeng12xf6ix8gry9h08uy4hfk1952hbyf7zengqb9g9h1jyfb0t2h5frsuplalbp9rnag0xdctyl5rn0j1g24ilwopjioekh7iybfs7t0unb5n2po65ib1rtx5hj2lbbdni\", \"6a9pi4wc6afjnuctvmauew1liq5oririxnmtyvchd1wipfkach7bfn8sf2j2y3ef8xlnxtb4kf4c3g71mntxil\", \"epy57q35nibm9sjw578nl102op3dp3xkibntmmwuxobjarfe7muwtszxn4j9mtzivn0plpfcde8a4u7j82y0jsi7ya1r6e\", \"vcqk602dzk43x8rvsnbwi8e2zwz5yeo83o4e957xxsjtdslwo9hgno7b1ze0kc39f8jhxsabf8gmzpih1lyze4xo92pi6ob825fs5m3sqe7jh5yrgja40lqykrt8i97sitokp7to6xz\", \"li0vydjlz173m2bfkvl56yz23sha3w16oiwlz91xevzlx2gyz68ruwtu7ewy99aadobk38fswn30bmq97j84mhtetw7uk8uu1mlkda6jm0kt\", \"rup9dr856ew0689u0mnylgn2tvor5ru38g9fkr0p4ub830vcsugkpb1yzgi2otejo7xsaz8mfgdvpt63dyhjbpalcwoqenmngoy2okqs2ksh0c8o4t3irhtumylnzjbevnwqy4xxpj4mfzfqw051ojk1rwhxuj\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"0108jz95z8yf5giw29bft4igv3cawsutx86f4u54g7032tvdxclr3t084fs38kvfhw4s32he9g8ehpougeayo9i5qil949uq8xomn\",\n      \"notAfterTime\" : \"2022-03-30T13:36:53.288302Z\",\n      \"rawDer\" : \"mls7ovx8mvltvrid8hxu1c1e8bmqz4wyl36hfhnvgkngzogna5mxks214wua4vp4i25ryh3po7km2eiz2ke8ifjzxacv\"\n    }, {\n      \"notBeforeTime\" : \"2022-08-20T16:46:53.288352Z\",\n      \"serialNumber\" : \"7li1up165k7kubu17q9vljtgiya6y0m0bejq90ktw0y3jh5uvmfvitq32g2mo3dcdrmpvbhhn58psr45ptkvjwwtkdq3oshcm7i39f0pmrh2tkfai1lj5jyp058xy3qnuwxuha1izdcbths0ljm3lacg5ji5rext009wdbdwphamehxc42qs9y6dw\",\n      \"subject\" : \"bae5qs21pvt20fug8gwh1mdb2mrmtgrajdwuik9sl0app11l8gxgcm4c6djj7u29c3ycx52g9ap9j1pwzq8mx55wuj6sdsreaek7du6e8hawuhs6biqj566p84wynl52zk\",\n      \"sha256Fingerprint\" : \"ktavvwa2qclnhnbzaxnuqatled9gk6mffljgvw9tzjyxis6l45xj2rpj4oyeklb0habz9qy23ojo54r57t8j2ngjskkcb01td1auou4nb8bxu43n6k07xoev1lw5rwo6sqs2c9servk45ylwqrcgbd4ig2m6\",\n      \"subjectAlternativeDnsNames\" : [ \"z2m9x9921m7kdimrrm85i699mmhqo113m4isa4036o6w41myb3mcmpjxd6y1n41o0m8ojtte0vru71u6t3case35otwbxdt\", \"hzua3xcxcoez2fror4b7k6ix0zckk0cjqy07sspivokxu3tmxlh76io9zu9p6kedj2zk82azv217cu5ciu39hulblh39evogwotv32wzojdte0ybciqskvhqatmaveu7twd2jxfqyf\", \"u2rz5fm75jgcx\", \"r7ad7f2cl0hqdo96ft2mj30hibxi0z7ver3nodho70w58a30kxuwwmqzaqzj7843lre9pt6adit604vuu30kn4fetrd8x3c8oslnr3lb5wtbxp1gb39a04oeu0q8bcivj8hmttpbpkmzomm9hhmb8\", \"the57mmx0l7xkl7ztkpqct4t52kv5qlho8rsls2451zi3sxprvhl2v9sqtve8751243bwpxsm833s7sky51sra3qqccjyqkhkh50reza1gbdpfyn3q3tt\", \"lkonhyyro88rfovy72r75zgf21mr8typfs5hski5wvie8u9slbspn1f68l7mr3wn6by0hq4d0twb1o8j0e0iw4jb80hdyfe5ja6gkwt9\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"hiy675bwy0\",\n      \"notAfterTime\" : \"2022-07-24T15:49:53.288476Z\",\n      \"rawDer\" : \"2lxti4dil30hrwua049a71bhh2fu2pv25wq6hpwjx52n2pczoxv750d\"\n    }, {\n      \"notBeforeTime\" : \"2022-03-16T13:52:53.288526Z\",\n      \"serialNumber\" : \"30d63cwamu0lcjcd4w7ez34zln45xfwh6hsw7im5xeh90jy3uskb4lkdrsokjitp1303itp37twl\",\n      \"subject\" : \"45zvnn7nkoz0yebnbv0fdnnom2t5ankpvkkl9xjpgpzd3hu7j4oml4if5ieow48654svgmdd39uzrekxz1hw09g9auhuaz0j1emmgtoyinh6833a8papqmd94vecsv0kwefedd505314gb1t6dc8szqeook2j45y97oukg37v\",\n      \"sha256Fingerprint\" : \"oab21pt06qn639c46fra6pjkwnztnpxvgkhv503urhhtn043lqapd949o6acjy\",\n      \"subjectAlternativeDnsNames\" : [ \"igk7qk9brxx2efisyejwgb9phxrxjlq22zelc9l8h5avt4jochc9btnmghbngd9875rht9mqsyb41gt147mxgziqv0zf5uf1ra0noaysogxnjvgj1h91wpkn5xkfls4xfnb6zl66pubdb9ba\", \"hcorsbxq699gdbz0yya16xqb5v058j84rhl6gd6fnahpfstyyvt8dwnnv67j4qt8ujmp410e4r8rf82na3kqgm4xnl7ol1fexrdqqzo6ctb4lf9igz5mm9nrlpqo2x9fickntb1r8rn2mm7zxjit33n50t75rqz5pz1xudcdfry24rru0ygj\", \"et02q3hyyk88iapo8ydtwv3uluyl1jr3t4fpc0xz5gqkyer1oaxb9qgo9h1i00pont7itub0l3ymi4qjpdiooz7pswabu0btk\", \"euh\", \"y7y93kvcr62iu8pwralb6iuefu5nzulztp38erteixeqzxwjg8wqfdv2o4f0aak2ts5zmjffaznitrxeox5fnzf9gr05povmliazeg8fowpwu7y8xf0m1n46crgxcqk86d3u09f1jcwewwpyupo7rag3kgmvfzuf7ykefe1i\", \"3ldmugcmwa8bhlua9bx8tnmi68uowgabf2yf6piw2kf9mi76tf17nxjal5aatjk3z5tars0gw5ozca0i1h0age377qlpiddc2cha5oej9j74xsp\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"l7wy8jc8pto2399ydyvdht1zwdiqfk8jgd3ilz8lzmo4oxkw9h6jyido3k3oc87h713ryqt1dqmxhbckvjck8hwpldv8gsy\",\n      \"notAfterTime\" : \"2022-03-18T15:16:53.288646Z\",\n      \"rawDer\" : \"h01945ffq2cc6nmzqk2q2ima5gt7or9wz3kjfe1oqi3\"\n    } ]\n  }, {\n    \"hostname\" : \"Dan Hegmann V\",\n    \"endpointFilter\" : \"pldtl08i3w5h20y43d34yfstvru1o7eaw6o87nupxdldd65qgsxty5gwljcj44dmvci0el1xjh1ru7ycxfctto3a03r5rm59skvwqx67pbt2iz1r3x7fba2sxwwj8pt1k6j6jr0izg97nu6x57wlck9lkqcc8hhii1aoh3zior86ngu9dxi9572htk\",\n    \"serviceDirectoryService\" : \"not1hmi11x6d7sbmw45wwkll4dtflkdpbsuite7fhweznflqjf139fok1nn383gdzkmbqu1ilg6qead7oprzdpf8hd3xg1b01024eaix5ozskwsx9421satez629dr62e4qzbv0ndu5vhmmkz6v880c5fxb0a0jbv0x2ut49i9n74resrlxrz6b7d069\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2023-02-05T14:57:53.288786Z\",\n      \"serialNumber\" : \"bivs397mhypb65idmi9ww4djxsmty6rslplcvuvx6pi4ec78arzet2uzvv9s66j51t0rk9ihmcku4vks3s40604qa64mfwq5kc8uy8ckdac1h2lh1t78qkc727q2sc78llk8dhyo4ztsjgqfi7h2xowuouslkuqisg9mk9unq4cbju4\",\n      \"subject\" : \"0klc7gu695zmmhjpv2up1kg8p4v31ajj8fqwmoxos28agzio6vegbcihd09nc8s0zn0fopwlj6jxhbueizcm0farvk2nr7zs5zczn33ku7c0h17bnp25tmgxwwogbii9eo5hnv9uw2j\",\n      \"sha256Fingerprint\" : \"q5mcct6qq6citojpfu6heptx51lqy8zqsjco1xw8dbbh1n\",\n      \"subjectAlternativeDnsNames\" : [ \"hrc3c1yy7b5gdwg8zx00avbbu1y1hy6jc0xzqgzz6opmi3ipmg35cwphfl7ve23n1lrjfpsv1xthc\", \"cbkspl6825euba2tkiic82pwj5pmlcroqvl4npa3xuynynjwhkk6bhl8o20yngfokhiykdkk6fmbwz8r0a1petegh8ej3ux29xz\", \"1bdlp2tyvzyydau6b3vtd1qqazrh\", \"ueh5l4lar86t8fc0q484ps1q6685wzk8vsippqfnofcp77ifhhg2mmyyb98nu9s68tphcb5a67h2skkxovby3rtcyas9gi60kut6pc6lvjxh4tso9v250yqig6pefesy7mz0rxciyfg10\", \"1j9ur3sx2kd1scg4z3kyxz4cy1vn0dl4be3sy0ydon540dipt9g92bezjknzcahhawclh0qkevtp6zhj74s4x4fr6tw4cd10wuc4h8udy20medf8p18orbjotk2ewzho8aa9mvjiqunevcydcqw7\", \"tfr602mt0drwuoyjx396p9uwrxgaouulni1f9g9gcm4qoir27dme7fi65e1cl8qth4kuslq4l46zx1rneg8x156yyw5671wybpjjaebjrglftcbo\", \"mp14fp68sjaznu9ziy8feg40jfnc3ykhyyj3ls0aey\", \"tdlrp5hdmf2vgyj3wq9lmzhp18ifr71f412j90gnqd8nfs2fcz268b7dl63oj2yev4vqaxpemmkv1qqjeshvejdhwjmzw0ozl9om1mps02c1eok\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"0cm61xhx0ec8gk7wi2v1dk2cpwwapy9dyximjd21vquoaf1bf531ybogii1b8x2l8y7agh2mv\",\n      \"notAfterTime\" : \"2022-04-21T15:53:53.288913Z\",\n      \"rawDer\" : \"qe4k08g3oldhcrt10\"\n    } ]\n  }, {\n    \"hostname\" : \"Georgiana Barton\",\n    \"endpointFilter\" : \"o1x7750ci0n630daewz8o1m5tfk1ioe4alaq2wctt1a850u685ozjckz1co99jew1f5abwdteucg6yiq5ml2eqafojrqdqyu500oqds19rb22bzja08sy03ox3vn2uqngscjaoc13wcytbz5ify41djneiy7w23yr39715dkkhudbxdjmf7w4yijritkrm3oghjgq\",\n    \"serviceDirectoryService\" : \"bxw5vspa772d3skz2bwezjbf57vtih1moh7d8h4ez98fn1igohodixx3h57xvhcdaxvgclnbt475vfuqo085rsq26zeiqs6wx5zq85j19w8q9w0rbutl45is7vplkd97hm76zrsxnad3pxcd1j1rx6tmjgv5rbjrvf75jgedza44s2tqyibslk3ukrc7z7d21l83cwc\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-05-06T15:00:53.28904Z\",\n      \"serialNumber\" : \"xqg3e2d6y6agtfz08g2vt8du7hbx0lyrw62ra1v8i2pq9c9pi1zk2hufut9e2akihog5914i1mv3p2zkzx\",\n      \"subject\" : \"sgn4j11yf9nm9n0dw76jmzjthkh9k8umbhw7mj5typ3dqxv8evbbk72c5q0ev8stdwnt9bxd4hmt557d7l0xdigt1zgqdxcwfubvwnepo8smgohn8phhwddtmwld32t6sx65f0b1nk6otshapg6yle07cs7mz\",\n      \"sha256Fingerprint\" : \"fir\",\n      \"subjectAlternativeDnsNames\" : [ \"lna7dmyj1vopo\", \"ib1vc8obxjx1jcqatye59\", \"ib1ldkawop21dvkvyuezev2f2dw6ex9k7ti9pt7f2ir5gmc3dchn5gd1q0gstsw6k4w2w8d54b6uh5vz9oceznzo0av5o9g50vocdy8tvukd3o1qrnhfn1hg9bve\", \"ty2c3jm1apbb\", \"iuxce1irte2nbit7ifle2r4ekgkng9frlrsqfrh75zj55ku4ee4gd8z1g4k1uz8n7ehth45hdwfex369rv8eq7k08ixt1449bdlzrxhqgd2qj345bcldzzps2rozbro152rcy52m961p6as58buwqlo0thc1hx4iaf7e25ko2iz8fnd15y7vzouedai1et8y\", \"wllc5qfbnttaijsnkuphhwxhw9l52byhq6omgqx3q0po1ddxkypbcln6xt4roqy76sf9wx0sdagzze1apnfgvidzzu0t2tyst3skqulyknfxilnpfedrs46gnfr7xa7yiw4x45j9\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"vk0p4dzfv2e88b8kni7fbnkigw1a9rde72cqh49l41jlzp0r1z1sb9rquzmf90dscep91ufhckpwudl4ebjw9zci0jgdw6sfmzo0xqpmxmzmaqbpq7gs8i8aysxfqmq2lng9lhz5pb6xfu2o1wsf9yp9kyslivmm\",\n      \"notAfterTime\" : \"2022-08-27T15:23:53.289162Z\",\n      \"rawDer\" : \"vzn89z9g8aje7kcp71vsndf0xbt25b30yp4fz690t1k0qj8i9ve9ua3osob1\"\n    }, {\n      \"notBeforeTime\" : \"2022-10-14T14:07:53.289214Z\",\n      \"serialNumber\" : \"06kqhbmstwpxlhgq9b0h7m1t0zgu2ve\",\n      \"subject\" : \"sxi6ik8qp1idpl\",\n      \"sha256Fingerprint\" : \"56qm6vwn0wrdckg9gz4q3u8yzj3fqk08636ngn2fsrc3og99ued10vmyvk3zo134s4xke88zfjj55l4mlfqx80und53dtf2bo29x8xmjotl4flssnzz\",\n      \"subjectAlternativeDnsNames\" : [ \"xudypds36v7q2epokminihon2zbppqw2eq8cmqhkgru0w98j9fq4jrxkd\", \"wasj8vhfuqrutl35bscmtnm228hfrc2nct83spvwi6rjj9o1duvq35\", \"wmv8gseijllr2isrj2f7p3w8szg\", \"vt3skhqrogxistgb4vfjdql3apnjqn2xlhtbpsu2vg40zgcah30jyowhjq0y9670i9bdfft5buoy1xmu70b9zxv26x3vjt8t2d8zbi\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"4agvc2kgj9m9ke2phxlxpq4alf20rkejh4vem1pse56ksz5e01qxjgy40ifb1l57b4c6nfa6n8oegcpqae7b9ujmv7fnlr7k3qmcs772dygpq1yhryj12mqobshg0b0uf29b968jaw3njlgyo7j601im2qaomgwshhu7m8x2580omh7b48qjwhkg26gt6\",\n      \"notAfterTime\" : \"2022-03-20T13:57:53.28932Z\",\n      \"rawDer\" : \"5lqf1i9x7yhev5ea2w61f726ip0m0lo2e80gz2f5haf5kaduecua77dlgyssboydisyb53l5rxiiyhfkb9wckmsm80bbpa8vtmx0z019y6mvxgqc1dx1catmim\"\n    }, {\n      \"notBeforeTime\" : \"2023-01-31T16:31:53.289369Z\",\n      \"serialNumber\" : \"8loczd4c9gpspfnfkd34agds9h2cgtehlbl517u7ik0bv1pvxlmaij20ymtbdvvhnok207rlxob7lvsst4u6q2sg7ygwvynyqwu2axq1qsdnpcmr4s34hsnt9\",\n      \"subject\" : \"y59zoft1xueyqtkb8n5vywgn6m0va535qzr0waku64zq0g08qi3rrx6m9uforikxt5xxuq1rxva8i5f0f9rqfugvgaq4mgjdg98uao\",\n      \"sha256Fingerprint\" : \"d9j2qrdpl71xk2bat5xctuwd5avljvo6yieo3kh3svpqnsclodu2gp8wm7fsskj1zd3fkqrtn2o9uv2g8lkfk394053jzqcubbivd5wx6c79asrgw5i6q0v6d911l\",\n      \"subjectAlternativeDnsNames\" : [ \"xk7sygw1v2y4xugpezhftd204od7lmr1vc2sfr1xz2kokoj28gkbb4xyx0ku9312msmpnz3tanhbqxhk1je2hebpzxwdq9sium3v55yw07ofvo1jmifwjgoi\", \"cmveabgvzdnxzb99w27bl1ammxmunnhw1e63xsj2osov8u98aict0ltommf185tm4s5cuyg9kzbplvafe8owpu20lldaupvvqf2bug1i5zg2ag3q08upqp85luytv1kqa9vxq22wgra4cz0yxd3l1\", \"v0plucj20ws0ke66ac0ad9qjcuxvrbvn962r4e22xd45zge0vd6pmgwe7b8nv7o1rjqmqsaggw85qchhnxhkt2ggakpku0xbq9kamjf4cwboheaqe2o3sn3zg8s5joiq10t4d2aehdagcphdzugt8eq26z475o\", \"bid2omsnx9mpj7sel4fa1xfkw7b66hu1x2mk4rn3n7stygnbgon0auc99q66tbqs4at2oljf8whue8gseefb6q707py\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"jmn8tqzd4i5f85wnsxvffdsale41wf3ki7gf70ld\",\n      \"notAfterTime\" : \"2022-12-31T16:25:53.28948Z\",\n      \"rawDer\" : \"d6syy41kflhrgop0mlij1ng92gg6xlijxc5mctloqxg3q\"\n    }, {\n      \"notBeforeTime\" : \"2022-12-28T17:12:53.289528Z\",\n      \"serialNumber\" : \"167p9s0hr00qob0gg6nk73xqg9gftzp3adz14sfozzbz827fpb7g3n2exoc3ua6udkn2i5b6ivp9vc33uoxr2jzz657644zotu5tt81kneom2o2cijqqyen64cn9wzs1r\",\n      \"subject\" : \"dn8m6i4z0q0s3f2uwrdissf97cj18t035o2a10f2q1vw2v5uap9qe2iq40xonfpkkl2r78sdw2d0aqbw6y1z9tqmfy7dgbqstqfv4rom9v1q1glzypdfl824o7rqix1cw72504t3apwckx2d29k4e0utyv7lrcogmoj9jz5o38e5o7qsncv97o78py0hmk63fxu\",\n      \"sha256Fingerprint\" : \"wijysafp9743aoskxk2zoia6xcviscx2z4mwxveskf6e42xr0iurbibf9wwapfdtzkd83qv4cvfkof9ktlqpts57nl2ghqyejr7stdepyva7df0oloa7p22618o0pekmjopa1qrwhigh1ou2icdrtbglacydd2nr3gi8dk6c5pcbaf0jq5gzzn1gye1loig0k\",\n      \"subjectAlternativeDnsNames\" : [ \"2cxwvp529hvsh386p696it56el4k2cwpixsno6j8n9o72gsmtnwronutj2byq2f6vl9zhppsvwvdufud4tzjcxpncwvl5tdbp2j8hb6ia7llwft2bj9ey4qxxc3ve9tek1av18g5rwdwqm0zo57p535qms0qqo9px63ax75itlzc1wtywroz2jiczeh\", \"ue49tw6s4nuflcgvg3jv47jinx0rgk8nw7d8hq9co8ei1j2358oqkxqctegurwlh5iwkyid2szvfww7pz6zgf0gys3ape5r7lvqptnvxg4vlgd\", \"swjrh3vrq6ffr4gku4sdgctd75uj0n0tu4828mwejkrx2mv3t923nq9b8guwit8ki2lgnvgx8m83wsi4cubr41qwip6gs1ebkzry3k3gwe7hg65x33jgk48u1ndmm6jsp2l8onpjomkw98soastzvx3bi60r0le9djo\", \"zxkqzh18kx5\", \"rygkngtg6rr931fqazxa0z4v73zl5mbae8re49s78fxnhnykjrpiebqoeq265p7jjyny2363d2twv4pvap178nedr9xpxl6nc14892ofyio0aft0ljog6brglscsh8wgvqipdu153osnwdutd7z0qx\", \"v2syhe\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"f4hy6mh19lyp29w5i3i99xkbsrt\",\n      \"notAfterTime\" : \"2022-05-11T14:20:53.289654Z\",\n      \"rawDer\" : \"emfkrnhm7wy8\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-06T17:04:53.2897Z\",\n      \"serialNumber\" : \"ff3zmkpgz94alu6ez6yf1lmq68nw6zw1scq6y98c1o1gpinwgp7ofcvmne6g6fu\",\n      \"subject\" : \"i980xrgcjzodslnwdgpgvbju9fsp2mtcut34p02lzg8l26w4h2jiqf39otvnjr1oox9chdzrqdir3klgmhjrberk\",\n      \"sha256Fingerprint\" : \"9ikoyn1jnme1k9pqw3czd44z\",\n      \"subjectAlternativeDnsNames\" : [ \"gx564hkssgrz6u3l2h0pnbobqf64ip8j94fm0ushszluhuix9ip6agl5ivv2494bgk4sbdnegwdwni4et0aniu22rhk14m93x7qdl7gssxch2ehdptj0g9ou2ieuagknd6ezu3cejf2pxkaelgnl27687vx7\", \"xgks8gum2vhm67g0ov7jmiuy6gcd6fnxz8cukd4nnxiua8a9w5j13pxhx92338q3ylelek1u2zvjh7bintkhr8h1t5ant3rrmxjn6hxzv67gvi96xu6vjsith4vr87al8su2wg97bem7gcmljt4br7l9x1yqj733vb0cn9bux\", \"6y54tsx5dm7xjclr5oomuf598cvc4enanrijkx4ya06h7rlhj1r1f8jqb6w2n6rztunb87zl4q6iefnepfrv7cnd2ocbm2jhzvb3t5ij0af83opjlowmu6m0w4fvh6yiaibjmk9gaqp3dnew3u88nerf201y4\", \"k0byrpwuyrd5a2rntyyi4jkwaoh5irlswq04zc0pfi212otf0onubqzbarupecqt4dizu07k80envwqawi118k\", \"ob0txqzmeamrupeq2szw2h68x0pjhwvgv7e4f062tqco8awes2odf0bpoipkqvht8vmt6tqlnnqls43u6d93k1zrxlf2mdbdv29clqr7gnoyamgykxvobfehjnx6eld7l4q19f5jk7xy1l8qii9z5fcxrzd610fex9xtxz\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"e94l4m6vpb3xl01nndekygphgisg6lfx38n4bf0j9pl4g8tub8r14\",\n      \"notAfterTime\" : \"2022-04-23T13:36:53.289813Z\",\n      \"rawDer\" : \"y7wvdh2mc5ytcr65oy171egiziqjm0kqux39lrf\"\n    }, {\n      \"notBeforeTime\" : \"2022-11-22T15:59:53.289867Z\",\n      \"serialNumber\" : \"0nrfpx0s0va156t3\",\n      \"subject\" : \"808ge10jlw35ugpn9b8nqoxk8snz03ps9mcyh7vzdtyzi9v42q79lp29wxqolrqc3awkqajujybwoo3yip1mkbiwl31tfv28\",\n      \"sha256Fingerprint\" : \"l5snjymqqysz2m7os1be47jtk77og0vrmqs360vd6im3fgewj7nn4uvg3v1bil2uoictjyvx8d16jymmqxvo3l8aaf2suawshsuym1b9iv4pj3ymtftubmkmfckpyz433zsms1af253r65jwzunok58mgf8dknb9npsvg1d1ltm8oxocmhvagcmwmb\",\n      \"subjectAlternativeDnsNames\" : [ \"9gd8yejhe9n8ii7pm1s1qlkwbcx8mtjfmc3ppmbn8y7ssy3eeqpxscy5ubklaqy5fenw2cl3siivl03ldjtp0yxwodf0vjmbl\", \"2ybg8e1h0h9xlf2v94adu40acw56rvq4h3bj2jnqom1piq74l0q73sa4w9fu6dxjcccxrrl2ihqx02xqsr0hth4442\", \"kc0k6ymjcwq81hk9sdicvjg40jhg9vap1w8nmioaagzcg3c2rziwh3eui93dvuoob9w76fimhqvfe3qrd7uub235jkmuf87zil2m0dqx2mj8ghmmptvdf0j4kh4wpqi4huz154npkib8qokxzxdfnpyfw2nfccodg\", \"q00jqt08mloy5d4wgxhho4ri0ywnul5z5662lnuzu8q\", \"dsjpcc67lwoc42d1m96n32x99ndw2k8138u03ppo7kni73tszl1vteq8204l0yr42kiygc9ub8gjxkvwibiveiqje9zwjzxnmd662mq51qe05t33csitm7h07txsu\", \"i1acxzmftyqr1wmdzcho4hl4i90m70wuutitqbimr\", \"smx9naq928gms5esyx9yj5o8ucg1gzxndu\", \"a6a6xiak4m4gqjdtf5qwutmibp5aq3vf0r0wunzrjdl4ncy5eknbagagdnfx33w45h5nkhiul3meegkwpnx6sbe2t23whg9pxm96r6jk0j2um71liuz357wbjldaee3jfrr6chxmyizcpl58y0fjai3wicpo3t99775uau45fv78rnm68lk9uq0s7gvmt2f\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"o9fyp50t6v4bsoc989udev3a1ldm8ch9yioabamo8p59y2iemtzg8hp9uvoo8757iixlyfx3cbyssceuk9tdroy2y3eeh5vwn0xtfzmjetclaeqisbkk0d7qzgdqmd9h8yg00yosqzqadh41wt4hig89b7mxgz8uaaeccohhkd4wtjppi\",\n      \"notAfterTime\" : \"2023-01-13T13:55:53.289999Z\",\n      \"rawDer\" : \"ltpk90thcsqxp50fi7e9pzyydr1zj35mbarnum9ifvh2lvg4pkfnnpw87ylw729lkfkqfxyrdwbwr4iusng4w6gxy6ajqut8al2xwhr8mnoqxzh6e1kimq7ku93l1h4aevi8hqkd13btc8anklpy3l4pmvu3e1b7w\"\n    }, {\n      \"notBeforeTime\" : \"2022-03-28T14:25:53.290054Z\",\n      \"serialNumber\" : \"467n2fdbxj2m7z9q91o946u2lz03nx9kjnv7bvaq98e5mzs8fnfiknv74075mpk21r\",\n      \"subject\" : \"n012yssztizsnq8hcurc4dl5cslii43g\",\n      \"sha256Fingerprint\" : \"bkxvygx8wd6kbl01jazpba7fb4lg8ou9ihyfyl9yrxavbk9pw7jeyblclieqr3hdea7mg5y6tnkheqc252mgwk6bfw5iy5dq4oknzh8a8e7vw8060byemempolgve1smiipfg3fz\",\n      \"subjectAlternativeDnsNames\" : [ \"5pgulsdiygkyjr3sb\", \"d3ydyh8tzn1myhcu865qrf6vu0uvi3n7q5zab9hxioqz87oxpojf88b1bumguhy5noysdrjb1vrh4nbbaqtqppjj98vtzpyz2hde94358arylb9mkbtcktzjtbb5jpu1fkylhqo9v6bomlskmoht3ur4z31tkj2k7\", \"dnd8rro2tf9vkix9u2buobleeka98flcda0ic84se5g2u4epx75jf8a14mx8w2f2gqjxppu0olyet1qomq79s6948k53z3e78dwlz4dw3a1s5uc71j76fc1xyxdw1xdyfhptdy2ibnnfj796\", \"hff9vsstpotxg2sg2hric9b58za9fmco3allpoaem0tej0md3icz4muffmc8etuvjfzgwye0qsmg4dtv48oqbr64e76ehiit232vooyxenqai7gqmzj22linnlo281o6otqm189ax1jl2g2u05djfsc01\", \"c47ldyp68ppo2upli36nphhqeyjhrm5mpexpwo9tssetwfwp1y1btib2rekdonppk3no7lb4uuc7pdeaciuejw9hzkvnfmi74bort6u3ihpbg7ryafvvrgbugkschkgk4ljf7inbob3but27mgmy4h46c1jsxgy12r6icdhc84xkxggd96mo\", \"22x3aef9xoik4088krwe81xaa7uz4l00401zr9s1\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"1b556qn3w2j1t2kfs9q62983yx4lsv22hxlqncy5ln6z72c3s6udbaypsdpc0nvaxas7phjs90axzzn0dyuxwict04se9jslc4nzegyiqmdn\",\n      \"notAfterTime\" : \"2022-12-29T16:42:53.290185Z\",\n      \"rawDer\" : \"7o35ooq1c97k\"\n    }, {\n      \"notBeforeTime\" : \"2023-02-08T15:43:53.290233Z\",\n      \"serialNumber\" : \"7a0e3luvme6txivoghtoep2caa46csvwenvwg7475zkl0\",\n      \"subject\" : \"sh8qaje2t2x0i4jsqg5ltdtf5x3r1338vm17mupcfdiwqm6467rg1ihxlao4drpnoo64kqbea5lofyd0gk8zf5i7dyusvvqttw4r2xhrz5pk7rhcs24bpy5bokmgjq6tep3l74ibmmgn0txk8ibghtqdckzvl4c789nhb87un34e1gl5mn9i\",\n      \"sha256Fingerprint\" : \"mguya8ge38g0cmhn9ki47f5rmbgqlb2um4avjkezttgjnqe57dvfxuuhx5zj4u8aq4ehg3u4htrznpatznig1f9m\",\n      \"subjectAlternativeDnsNames\" : [ \"2e17esg0lppj8fjy4iwlk104fk4yoprsb41hlcpvonh7thlh0m9rpu0c2fx442df2uzj6nog7vkc5jrnrpdmvpzrxuaki7fucziha21zoaxhdnvpjj0aiei7ulwwti\", \"y5kr0uoiqqnhwet7zuf2wfrs1g9u4hryv4xxnl32hvwv6afybd1py7bu5ehlx28rmwp1ue\", \"i6iawxalojxlcpexvg46x1bllfvucubcb9hpn99z1er1ewlg12yttjr4xd475b3tncg286bfemw8v5ivwbgkvksbrkapjptmi0px259iafnensflf31sppranezktvmezxmyl0enjboroh8ug6crv0kil05\", \"t9odonr5232ndkzxfn8agbnbr712juxkaadej6ohpnie8aqs47l\", \"gjolgc9oktwjc8hax3fvgia3z91kmmbk3br0xjvj7r1r9tt86tklp4jfhrt834mtjojhbhbqlnltcjla6i96xgsujxyhh2v9v7iz6oip\", \"jj6vz7dfbypxgssisit1cuahtiud08egctci245k8qe0gxg13q83a4kixu35btleycs981\", \"kb8oxmfn5a2vyfpu8y3d145a7rmbzerga8icol4rix3xr6y7mdekvcjmxfxfyllm82srobuw925v7httrq4oixf8e6nsoh6xcw3t6s5ih9cousipracgkzd6z856c4vo9m1t9kwhkoxhrbkom0bh9yvgti5uww0vbh50djx1xprdb9048l\", \"05f4xvij2dyxczxh8a1pyon9nkqrij74j6cxks67k8otk914geuxwkdulz2bsgtgiudpqdc7jsb1lva6vstt7vh9rxyollqfqu3nrezi0d9pqvnex7r7zzr\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"7kb0f0tklsxcfjxx87z51u632pb2kk9e7zfj3udxlky57boaukeyb98w8x0zmaiqc794klqqt96cl5gdpalrk7ojdjmx05vtcpnaen7gjdk1kedxf66wv1q8lbrkt2if0ggivu72a6xaku7tb8dgsu20waifi3j8d900u8z020rt6xacdmg\",\n      \"notAfterTime\" : \"2022-11-05T16:57:53.290367Z\",\n      \"rawDer\" : \"asqb5hhzxlnadphg0zszzl9vu5bdn8h8nfwb\"\n    } ]\n  }, {\n    \"hostname\" : \"Mitzi Hartmann III\",\n    \"endpointFilter\" : \"pjr1fb3sra9ql9by53sbcu1jibfjloi15yglgbxmcqg1ouscs2tg9m2d5vvbzpvycil8vr10ir7zionqsrz268acqv1pi1tnm6mrvdv9s6mar09htyva3hm5axa6yt16j1p01iava9ihyqmhf70unwibomysixlrsl0d4g8gtdqs8xetjaeg7yiwca4hngi8fof5x\",\n    \"serviceDirectoryService\" : \"o7oc4jb69vlo9nm91oyrhb2zvqnv32zx4eg3hhyo2itr2hgcqinkbrf5evwnhycprcmhxlqfo6sdq4t8wt72u0o1vvmkh0itdd6wkwye93de2xq5jzv4yeqx12k\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2023-01-03T15:02:53.29052Z\",\n      \"serialNumber\" : \"dvrbc9qid0mkh00o69no10gbveoaaiuxj5udm370q8wxfff12m6fveqdenevsca2uqrxo6mww1o7ubkhochz7og79zmmah2qp6dpbevkwwz4ze97hzj32oaoboq7fukv91hz40njx01lmng8srtcwo4083autsixk2qhgjwq37dz3i7blfj79ndwc7j2queusa5d6\",\n      \"subject\" : \"8iuk85nnwun70anz8uvkmw9kvop14z67j\",\n      \"sha256Fingerprint\" : \"4nrv8mazxn5aqc6qsp00rfulkfeumax5bklj4cm1xknr2y103b5x3rqtxf6i0mxr8nt660il8kjoblzti45kcu5u3ji6cxaf7oreah\",\n      \"subjectAlternativeDnsNames\" : [ \"5s0qxnw02\", \"42uwju8yozkrrr3zjb2ay3cz9tbxiwa1s8gn68ts52ydjd99d9mtl9oclhhbh6injbvuqd49wpxra3ksmfsl7zdfyjnn840k9drtjtb23f6ie4zggiqqolfwoy42f5x4cpjf9khk2l4ixlyhb1qac\", \"04xhba948jtnsxgc9fwjzthwaiyyzt416olhi3n41206e2yhdp3by67gjbphwr17d40y7lrlnemfc9b5slv2vik4gf38o8amxo\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"nkv7fqkj0964c7j6xvj1rekhu6v2unfwpgomoj9a2xfh61bzw5jlhym0gs5fo9hr7pgbnggepv3zp1x4qx407pz7tf1lgc4edxid62owy7f0rypvanpmivyausebt6ezkuvovg\",\n      \"notAfterTime\" : \"2022-10-17T15:11:53.290628Z\",\n      \"rawDer\" : \"wkm0v02qb76mqwi\"\n    } ]\n  }, {\n    \"hostname\" : \"Johnathan Homenick\",\n    \"endpointFilter\" : \"96esoo3ef9y2gdq8jbut9xk6158n52zy8tfngo2loqsbqdvou0uwq0m5ubkf5sv8cmycjjjoe9rmdli9mxc7x5ayuxrv4dye6styebow73scg30coyhjd069bri8y5yno8gzxvjom8i2hm3hby0ijuov7j92i064xukl8zv9cfm2inlv\",\n    \"serviceDirectoryService\" : \"30lvt38kdb9pjdtlg8ivqi9mffzykdo5le8h6399sgrb1y7e2ffeka6urbkkbgejxdkylmgp2k3jf0rzpob3az8q8ost0p97fe9n7y5vz3lfk7yr7ivhomd3qlxhaix4jt47jt4vzgyrk6b9umpx32uzpm7jm\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-05-16T17:03:53.290756Z\",\n      \"serialNumber\" : \"53qv6kfisfn8jxf0kmvcdedjpwalt1ei2q30r27r4vsnh0mng5j4abb4oe2in5vovy0hkzj10d0ik31gyvtpkluonlwxooiyrvzs\",\n      \"subject\" : \"cdd8a2ox1xgps2qzcruyusdtxrpiy1vro9j4x2ydwpqv5esgalrwxf6vinqg06l4svrdtpvm0ewssvf5ne8lf4o7r7csaj1rexhbv4vuzu82xo4w66dygya58ngbo9a2kwuj939r70kwpyen1y5yx6llon8ni3hrf50kl9yz90ufbcjgu02dpwsz\",\n      \"sha256Fingerprint\" : \"nel9bi5fi219xey2htszd7hgrqicafzne07ov93whfz65hdc6ytyrhp25poldk42imud9qum2137k0loyman9vokajt8o29dj8tp86lhp9j4x3cr5sogip2u3dqks62kh3kw4cidymlllegrvwd5fdei9yiek87fcurlz6b7t541z8qmcnkjw25hyvhxpsnrs\",\n      \"subjectAlternativeDnsNames\" : [ \"5xzgdwix2vcs2tzo1psdjb34tx1dtmn6v646q17u1i6ro87nns9a9ynjtql5uggg6j57qzmr4v5ca9a87pcu493cdglo966pk23ax7kdlxeqzapn5udk4\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"qdbih0a2qrnvbya1is35rbszjb13h6v0zrhy9tjnxbqq2aejy\",\n      \"notAfterTime\" : \"2022-11-27T14:06:53.290851Z\",\n      \"rawDer\" : \"tw6uf1783dmbk96o1jt67e3bi8fypc4vt5fyi1o4gx135mm8w188n6ps22cmfcymz48y\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-18T16:29:53.290901Z\",\n      \"serialNumber\" : \"ynoqqp1mqw6uqhwh6q2d1jjwsjxtt2m47eejp\",\n      \"subject\" : \"hte5svtn22ijwachtnnsvuh0jq0ky6weamxhdblat1cx3bia9usq0eojzr3tcl6cp3hjzmfn68st4l1m122dz12fo5ju5rfs33lk58yzg7op3j53tv8k2pmon\",\n      \"sha256Fingerprint\" : \"0l1lt2y40u0i8ey3v9ya6s1l46s1oc38gvsl4h62w3sh00sdagsthwgzwdpjeg2zqk2zg0bm3cfjdj0ywsm3blxiiufubndwvoav8tpg12hc3zbv3dk2v8llxx3ek8ku17kh1vw6ejjx3yv86rnlt93iy54gcn3yyhoyjw8i64\",\n      \"subjectAlternativeDnsNames\" : [ \"ej6ng9g2eoqsbj8ypf4owb2pv72zhvuqybbqvlnksp52l5k68tdcft94dagjq317sgydaqmkk7icdx602qjfry25csm92wfnsq3o9wqnrqbra31vkpw3tuug8pyv1s0ud81z4nir9baohzq0tb51exop5f2fvd1x4i\", \"kvpm04b2qiaj772ybxzyzitzq7cjt2ezxte77suzy2tpdtbsfkvctt4d7wbf4rpbpm5rp6l3m56725qb93av84dh0i4klo0l50elpjljf8fyjxyictu7ubdifq6sfnr2ts17z62exlf8jsca685k1bnhx19iybxyl9u4svbhgwum72435yle\", \"i18bjke3t995yq1ndfv8vhglhxoua86u4e2lsi6ib5elowr7ban5s3jkmmxevdpqcewmxo9mcc46gqgc6wt8jlnd8k2ofojx70z27kr5oqxni83u5n1vpccgn4fhrpq7gx7rzz95wcqg959xpud5yozx4kfpv08djjfi3ddczdem\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"ylcu5dcnohep8xvnd7wzmpt215381nkw2c9ly\",\n      \"notAfterTime\" : \"2022-11-15T17:16:53.291007Z\",\n      \"rawDer\" : \"fr518qr05ubnqf35awhom4o6win6hm1m9bqvj4qc9eokm79da4z6vysl68c4micnt1950y5oymxeck8306ky4u7ob39wfx1k2bqd69spzmcqlex\"\n    }, {\n      \"notBeforeTime\" : \"2022-04-20T14:18:53.291055Z\",\n      \"serialNumber\" : \"dyl4vx709bpdbirlcve6e9wi0ank0jivnbhsqosuq2d1t9vacairtfow6glinpwlicb79husujz9nfxunzepu8b4hgtjyzmyb3jux3w3t5k76\",\n      \"subject\" : \"cwkxjzjw6vtv4b7n62ow1x9bec5avvfqimzwd55s1ie6offe2za3txogsmihiti15kihhlz8jez927d3p3rzpyqdmya1\",\n      \"sha256Fingerprint\" : \"i9bw64p6vc8t1zvhtdpod4159huj2apc9ttc7bzx8zoo2e5\",\n      \"subjectAlternativeDnsNames\" : [ \"bnz41z4b3nngyvg4hhbnrhal9mgdwsokju6hmk5dnnl6omndmmc5pi706sroazm78pzr2mzpwg7jrf5pq0yd82rqpx9re6wyc46z9dqgnqoqeystxq8e4tqlppj7gp2qucp56deg0i58kuqj65jyoe\", \"l65y6ntscpzvp14s69hmh7d8hir75i95serl9yk6zlsi81rzw01t1nfztrhox3ma51ydglujmrfc5t9mth7vkilmrzikzgsb84gqg0b0vu34i77urjwg13\", \"uwggg55gf4vfsjw1i6ouu8hlw59wp0ync6ybuegz7ovhih6nd0yurrtdf2w7epo6w5hkowfguienv5d1plrewhndka7ogtpbgpds4bp0e22frnpih942kunm7aqleqgunlah2zvnmz9y\", \"sdu5qfikd89dgax0xogr5mc\", \"qloa7iy42gibruwlsjwhv38x4iwoyc0cxe9gac4sw0cykt7lwadxwn5tdm01brk4nwenmg09a4v2zwojwta3sbtosaqi1ngtrc1v4epnzu5hgiova7g94kwbh3hri7ky2i7f6h4rsrvhb3q2kh0picboj9njg187gpoo2jkkgelbcnibyiw84\", \"mgpc4kytx99e0ozzpqpjbjvnonoat5h7td8l907rynd3zdtyxlp3ok6xwwr7b3olf8elkqolrs09s41aiwtoel3\", \"w6jplmsqyfto1q8hrf9o0k329pqc0b9ef848jpit0w0gqxuha3wxfz9u4u41u5rlkfptj\", \"89synbmy8c1eatjyjvwwkwsr2l1utzecdzetb01ey72v7j16ylccib1bt0vf6fm5098q4ebzqg1al7stlse23po60vvomzwrgbrcxgzmdh5q8van49you8j94k3laxndzc2r7yyuvz95t1nnrwopz2ur9kyvx3ocn9sbldb3gi7uwgshqdx5rezdjikcnln7ii\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"x8xlk4q2yy156i62dbroodwm6efpvggyjl0wixxz49x0yx91hrct7sr5g04y9eiztmcwei0tzswo4q5ui59lq4bz01hf9q2l6uu8\",\n      \"notAfterTime\" : \"2022-04-27T15:06:53.291194Z\",\n      \"rawDer\" : \"2r323d57dyrnjnvt8ki0v0l98go8cm5haxipz1h01tghux1m8gs816d7v0utqdslazacof9vqqwr76mfqeuk26suyu8qu1jwqqm0t40iwgtrlzpb5mjloqauk4q2rkske0k5zo08\"\n    }, {\n      \"notBeforeTime\" : \"2022-10-07T16:36:53.291246Z\",\n      \"serialNumber\" : \"7c2thy5t51df7webondvyt5wzt4ufvg6vl7p8838luzz7pqtz5t2p8poo37p17i6u1v54i2xl24u4j5omp2qr9hkab4ae0zgu0pm\",\n      \"subject\" : \"y5cr946jo38m5xyjbs9wvj1qykacsao36th2pm5siydn7r1c8qcxznf1y0iiyuqduewlerf6qgtv3hnz4sw9va12bw24e4e97w4vx03bwzzcig263gfxiuck7oc61lvp5sj550dwodlw38j3xri44431fo7xlca73ow6v9it9py3uc18p6puusfoqlv8l63cm6n\",\n      \"sha256Fingerprint\" : \"9glzt0oo7j3v6bsp1bitgt1c9t3hiqdfcexhf4cvhdhhpc9h072hmgyy00qbekw449202m495x84ejqf6b4gs16hpcq\",\n      \"subjectAlternativeDnsNames\" : [ \"zxpl1ms3araqreu3p1ny485w4j69rs5qx8r292oh9ub6d72p5c5yt689fn40pg3n8kultw1yergdcj108bwyh8g7vn98qcwrxhw8o\", \"41modyrbh6kg0faqo3kr8huv9p07kz8h7h24yrxdbkspxjvj53n2jpgwf7i72zc1rqij4nt6ejploqejhys6c56iq538z3s3podca8uq4dmks08s5of6vc8l8s2bioyrozk03iah96cn1du0spz2\", \"v4r5x0qdm74auyhkchuv3e9c340vco76efktoz8xaxsjh034apn7oe8s4t0zyhpkd8ea86h\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"cmuqs9n3ejluzy0e0qu4w42h6iesy7h8nffae4qeus3jvku71iz4uops54lc63c7fe6k9lf6b8gh4bzh1qdtaqgaicdjy3kf3g7dsjybe80qnen623yreo3\",\n      \"notAfterTime\" : \"2022-07-08T15:14:53.291356Z\",\n      \"rawDer\" : \"r7moczr5n4veu3yk82gra8pmufx2eej9m8tffftp06vuzeav2r2bcbck2nyyyjdhrhjdh2ba8htqc045exm8abuua2xz0p3ehem684qhhebdvjwlm2tprneumxklplxyjce54opw\"\n    }, {\n      \"notBeforeTime\" : \"2022-03-11T17:10:53.291404Z\",\n      \"serialNumber\" : \"dfha3el1hg2mgs12e8qt7vi62cd8maynhdu8k2avtg6junrlfug70yacwpx835n2jwrmp5ypsr4ga3ix0sd27ybo9mxzz2p30ahjsfunutjukemui6166mxlexxxz02g7i\",\n      \"subject\" : \"168oakaokacd3eiq22dzecmqgeipca42l98petq7qla4zlbuka11mri077mm3rkum5t1vem9upmwp1xbih2thcg46gka94yl\",\n      \"sha256Fingerprint\" : \"dmlab9vlwnajvgmhrghiih9necdalr2uls667wh3fi4860hdw13kti7tk04zi69o6dzvpw95xhrrvh56afhxsbp8bm8pkvcdg\",\n      \"subjectAlternativeDnsNames\" : [ \"r2gqirgxm\", \"nw8vs770vl7ts0ox5rd0mzx62kpkutzt97umcx68lhvcjr6pt34bk20fby4eqrsbr1rdqfu0b7bb2gvbuekyz4fimk9zkc9cwsfrheovo9j23vilsym3s9p3gcui51ogozjc\", \"7el4az9hnhvoqy63ubnmjv9qz5iyyk4cqdujzlc1asfbpa28feh0m9bndcv4k2tkql7upk7s7j3r6nsx3tllst0ld0zkxv16vrkhk7n11xoctmft9j30dorni5qvngk5orgwh7q5dumnetg1eintdqk2\", \"u328mqr1y7eoafdxwfx5izz23cj6pf1r9ky0qnrz5ri3m1699kpa0jt7p23lw3orx5z7cowvykfmxvhedfwvuw62esj4zo\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"c1bea0dl18m9x8dkxmctbo685tjgcfp1jt5w8x78bni78i8t09itjr6hakah8zhx7cx8c3do3kqzae1ptq5pp9kqm\",\n      \"notAfterTime\" : \"2022-08-19T15:10:53.291518Z\",\n      \"rawDer\" : \"2s7neqf2zsg340hy7suumwxf56vz9ylvvg6gljhy2wk7y8g9cnwbz2qcccqjalsxhwkfl3xor9roysg0swjzc9zowxqq3ap5lj9bvd8saaeuljwm3j64s8hhscs09cw\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-23T14:50:53.291567Z\",\n      \"serialNumber\" : \"776c0s40rtub1mm34y9wjafhfaidtzvzp8zfkr5t5a6hi8vmdyrvfn38y1n17qcaekwbxre7dke9x0x6p3aii\",\n      \"subject\" : \"dsfobhh4qqmz51kk088rczx0elvj3ud5l55wgq68sxgran8z6xnuy7gzy9yg99wbt22vky1w98eyewng80xlt3k038em5idhr7vzrcewa42h796f680kiwohdrnx3cjaz4b6lk\",\n      \"sha256Fingerprint\" : \"jvfk6avzl9vt3lku6fjici5ys373hn511\",\n      \"subjectAlternativeDnsNames\" : [ \"7bi6vzb1ygi2jvf6fqmh0hd2mgzzhwu9p42omxcfgvdsxs1wauhulmghmz6zhq51v8le191xp08jd3r9bjguvhftnkl30ne83udtf9ct3dewhs424g7hf47nyqmu6ld5vvk453e55uzz1r5cztq6o98qcilpq6m4t6qwftnkfa3zqsnu6\", \"mjkbbxhbz0w2c9x6m4faakw4h7ajwm655da0pvd3yhywt5eg9lseai8yb5pvnhv8sf7sg2ag1tayrccdw0zcvc7sst6tlsc01v50db37w6619hgxggpnaxspyv2u4901lfj4ep90yrj9fte35xsgq2rnu7m16d0zw6orq1bo4oaopoh5vv1ybq5t7aw66v3h\", \"m3r65m7mckxsj1oyy0o7ksq13yd9q80eoxfwrkjpavv23d58iu6jif2r1xoh12bayr9zz9oe9jbh6ifo745t9g90a2zd4fdyzvsexf9gorzuncu59kjiv69rhivs57m2j7uydoibb00pofa58tg2xfkqy0kzyd\", \"sk8wccznsqsv843c077bl1lqv3jqyzlcwgglee5ngm4yoqt0fpdibuifdram6zmvaleb44ybh7jwlon1kys8ghkm2s22u112\", \"g7jgxpq3ih53ccugmq4uh8n7kfcbiwgj959zimcufdtxjkmcg48orgkqfgt1ssazlpfdpiqqzd83w56gqom0zt2id7mlxmlxesqs0h6xvgkmm9mmonfx3b6h3byzam7vqhuxt754iqm13dilfrm49t6mw53of\", \"vnhf3ynotpfs1h86zzgrvb05h891pzqee7ad2spqg1rdtgdqb08awms239rjykjdlufy2xp6rovs43koxan55ydvkvs1gvml70f8xlvpmjp2ifgedhrsabqt743ksojyqgcoeck6q9cwkafv7cla7dg25d2g4n5sn342dioxzv8b0q\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"i855exo40mm01h7np7h4g4daitr8yeu711nvfz7uzi06jfku89qx38zvms8022mz9d3wdd02f2lh3wc39kinlus7o1mqfdf7pksrstn3h1knx7bj58x5mcuuak8amht\",\n      \"notAfterTime\" : \"2022-09-13T16:17:53.291692Z\",\n      \"rawDer\" : \"58cbrhvgjfptahe3mc1\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-03T14:05:53.291742Z\",\n      \"serialNumber\" : \"m4oowh9l70iv2rrcfbg6ksnvpnuuwtw\",\n      \"subject\" : \"177otskur2d19yh6tutcz5hsgfikxksgey55ewb9feor0a03gglfbfofvdb7bx3ncoj29dgkqy8bb9imm7nxmsro3svq738tfsa1jcy3g1uaceqow34qit1ybpnl7owikk6qq4\",\n      \"sha256Fingerprint\" : \"dje3dwqkgce7io3v6684sqvly9eq1ucjvvqtvh7iygw1tp1yw794to6syhv41ywxq4s11yuxguqa08qhox5xkyh0p56dklzhtac79sxaxhbm4l5un6v1j6yk7838ltn5wnzuxjyqih4kfo67s51gck749367s07bwdpvf30\",\n      \"subjectAlternativeDnsNames\" : [ \"oh7wcmvam7rxnvrkz1nrlffotuse5c8u8l672o92d\", \"um77w87jia6ftzvvvk5cst4vfxgqgnd2majrjokxvxfh7ekl6gey76sbewhukomrezvdd4nlegkq96nqs7c8eqjrluvk98op3wo4fp6qil19j8o2wwbhq9pz7jzadhq40yth3f7ubvtrdr3lfbmirru017l0ytood88fuuagmr9b35dfw1ef5f2\", \"onx1hcfy5vn1vvxy4iuv5h3l311obkvr5hrewfz6f4ofsj2qqrakmjngmstt\", \"wjjo99u4rp8g6hsg119ow3rpgvdoyjzbg09jd0sskxzc9wo2g3y3n5nd203w212uzszfb7asd02h7vonpjrx5edjb7i4mfc1y8\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"azddc110d8fpzxt2qsb5qaotxj4oxijhqk6npzvdq7res8rprzvl13liygd3ysp996u\",\n      \"notAfterTime\" : \"2022-04-18T15:21:53.291849Z\",\n      \"rawDer\" : \"kzimzi3u3rtaagquwh2p9346htz77rz1ygam9gy7pobys8xdp2o6jk5mpyv187fnk2gxk26bv96reivk46w0tceknyihrrs4\"\n    } ]\n  } ],\n  \"createTime\" : \"2022-10-04T15:21:53.291946Z\",\n  \"name\" : \"Mrs. Korey Prosacco\",\n  \"etag\" : \"quae\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5079cdb2-c218-43ee-863c-5956d810b62d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.292249Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.ekmConnections.create",
          "schema" : {
            "description" : "An EkmConnection represents an individual EKM connection. It can be used for creating CryptoKeys and CryptoKeyVersions with a ProtectionLevel of EXTERNAL_VPC, as well as performing cryptographic operations using keys created within the EkmConnection.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which the EkmConnection was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. Etag of the currently stored EkmConnection.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for the EkmConnection in the format `projects/*/locations/*/ekmConnections/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "serviceResolvers" : {
                "description" : "A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.",
                "items" : {
                  "$ref" : "#/components/schemas/ServiceResolver"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "15ceac2f-782e-45ec-9f26-09bdb382c330",
    "name" : "Lists EkmConnections.",
    "request" : {
      "urlPath" : "/v1/h1u313n4ovgz2p26z33y8h1sz97bmts3xvor85383otf9vcush52rvm44jpydyj5d1w6f5ua6w5z2g1c8jzwtlns4ew0cs/ekmConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ekmConnections\" : [ {\n    \"serviceResolvers\" : [ {\n      \"hostname\" : \"Jose Gleichner\",\n      \"endpointFilter\" : \"s96v7hu0kwfim0nkvcl2b5tszo3gl7hagqn553cw1hfnr5bvevd8wf3ynyfspzmy30bli2flh8u2vdiwewpmyq1nsfnovhwp8io62kd\",\n      \"serviceDirectoryService\" : \"5vghryac9b71ta1etmtze95skjzt1qvl4gxsmiakfmxj3tr09c07ewt7j0zr9fiolnvjge8y5b12h9g1196pephi8qj4ee2k43yh4hzb573mny451ljp7s9d\",\n      \"serverCertificates\" : [ { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Leta Monahan\",\n      \"endpointFilter\" : \"l4qa2q6b18zud4ywph1kn1qi3dio4gp0vb6zzx4e2gpkui8sulup82hfv1p49oodzup0miqgad63moenensv9waifklgcde8fgq1uma83ym7kioaxbicmukgntb2rgh3uum6owau7o6dx664jsg2uomjg9i73bb5l0groj57\",\n      \"serviceDirectoryService\" : \"c1v2dbd18xkqwekl4hbn3n2oeb7umfc6f1ubu8fcn9yviqkxbe9syk2gaullyyn6kk19e9iz85ezw13hnoyc8kd26g4tvpy93mtrkxmlvxool9cnqvmnarfeevy1twu6n3xwstoryh77ttotkjgp9mlvb8c5cw26d3r5i869yg0t4uujuohav0iaov5m053wo2dn\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Adelaida Schmitt\",\n      \"endpointFilter\" : \"2rmch8e25avgd4vmnyclrasd5teannzlly1r0bx1y8vn4nzz2indjg7yu6ftkoj2twxerd1kczhbxtlxe4xsy2y3937oteg1sr6pyyzi63txevqed829fqoy0n425tm\",\n      \"serviceDirectoryService\" : \"3e2iqshxrh2n7um1k96be8zby7f5tyx1dti2n5wiev6ccoxl2kctjsma9giz8h5yc54yud5wsc7eaer5sa6s16\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Gus Connelly\",\n      \"endpointFilter\" : \"wyo7woirsqgy6kkohnj1t62h5sypvv0o1zgu1cfl6gt9udli9ns2zrkc35xlwkf10gj6l34qnx2flqeogyuaiahkxa65jbs5mxxr8ptysbcmx89a842dupfipqu9nktvd0j9aja2c6374x9958\",\n      \"serviceDirectoryService\" : \"uxh9ek19dii0nj6y65036diqgcq30fkxujb7p4j6t9ixy6noa2mxpkvsxwbzoa1vq4n3k6w330icv39fgoari66pdb7vbn5lip3sw6lsm0r250bv3k3od4vs80lbeo0d7xvb40uxyvbi17r9t5qib7p05w6hcup9z8h\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Loni Balistreri\",\n      \"endpointFilter\" : \"cu704pvodtrkef1vcq6afhv05xt504tnqkianf7qkwoouolud3u7ti3vcezrc61mkdbpm73xn01ansif1qi562ldm5wrf9khiawletbbggejlb8oiisipj8xu2vnddabsegw6qrm6k4npl\",\n      \"serviceDirectoryService\" : \"t7evcxamrv8pt8hvhbsiogo8a1wl2t07amlre1a9os2kd0mnepu45kwsckd8lcp3dokkiv2ugefvv4yzbph0eccsn90ps\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Renna Conroy\",\n      \"endpointFilter\" : \"no0dovpfh6557d794rxn0bl05n629ig1l1p0ktc9a5qcrgaq0bvf01j5oz8cxz8sg4lmsxg88gxjodle6o0g27ymflad5xlsfnqjlymkoy7d3wyvzl26nodndc1bw701ugkrb\",\n      \"serviceDirectoryService\" : \"yzvwfog2aiqlscmiu6qx7vvgrslukcuk0ntek2ddo935g3lfkj7tfsg03se8d6ryq2as3qmjemma0edjvw5mjl3yx8dcvm0rkydd9d8tp6tuy4cd1kanwilpix9h73tiq8alyy32xtv64d7fwpsaxohd2b29k1pbor28tturyjwb25dx11iejuo4hiwf\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Rashida Mueller\",\n      \"endpointFilter\" : \"bqqpwgq7a7h36alz5563euwik5uxb2qmmhna61djd2fep5zk67j4n3jqq05rq7gapaq9k31t27os6vzltkkjfvaa35kf1pk3ddakmyz0s93f56yvaf476ql1v0kxwz4sg0kim\",\n      \"serviceDirectoryService\" : \"7vflbu9na2hxwar7xifcq77m\",\n      \"serverCertificates\" : [ { }, { }, { } ]\n    } ],\n    \"createTime\" : \"2022-10-19T14:31:53.284324Z\",\n    \"name\" : \"Werner Adams\",\n    \"etag\" : \"rerum\"\n  }, {\n    \"serviceResolvers\" : [ {\n      \"hostname\" : \"Edmundo Baumbach\",\n      \"endpointFilter\" : \"qakqj4ww4ieyjk3w8emhae6yfsjxgec3sr86isiwkz3irc6h9xaf6dc6i5xaqf4wd5mreehess7dwb4awuu4ts6nkkbi3m573i41dsfkpn4oqqwkthg\",\n      \"serviceDirectoryService\" : \"gbtwhohc7b3ek6buftkbfz9rwr9\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Roselle Cassin\",\n      \"endpointFilter\" : \"o4dhva5nn9wqec7bcpy2zstfirxobwhfyh6ue7i26rmlqiwu1nmcfaxeo4quoaz\",\n      \"serviceDirectoryService\" : \"7y5e9ya1urk1awjxk670vi7ku62knd0dzo3muj5e7uaf8c8o1aj869ayamsiyzomjveehwtehtuxx23700dl\",\n      \"serverCertificates\" : [ { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Joetta Donnelly\",\n      \"endpointFilter\" : \"9yqlsuzxl5qpgqc4g7wghoav4mj19jw4216tr2046mcw3fxsut32209bud8s3foc5go2vvjte82jyymw\",\n      \"serviceDirectoryService\" : \"400bfu3\",\n      \"serverCertificates\" : [ { }, { } ]\n    }, {\n      \"hostname\" : \"Dr. Mitsue Wiegand\",\n      \"endpointFilter\" : \"i64jdphj33nyocbjpdjtfnj8btoop29qukyjkq6j8hszqtqzqavfypv\",\n      \"serviceDirectoryService\" : \"j2myny9rg93engrwdi3q2uoshjp769h50c9u0jaav3kem37ldq3xzfve4gg7tadzk1b75pxkid9j3fvu953phvbxxbgmr7xzr82tqgrs5y16062uzl4xoig18fhqogsude9r143gxys3ty972ih3dke21pwljchmyytu513k\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Honey MacGyver MD\",\n      \"endpointFilter\" : \"wpk6yqxhze0br69z99l4wnr604z20l5ckax\",\n      \"serviceDirectoryService\" : \"0p48iyvrfxp7in5sp42ccxylwsf3axqunwmp1f2igyymyeohkw7j7ph60r3wx316obzj5ojmzg9f854ogm\",\n      \"serverCertificates\" : [ { }, { } ]\n    }, {\n      \"hostname\" : \"Molly White\",\n      \"endpointFilter\" : \"ybq1w7usgk3ha1lxf093y096ohnnhb698swdx8dk33xox6oo\",\n      \"serviceDirectoryService\" : \"0pt2s9hhqqf52n2\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { } ]\n    } ],\n    \"createTime\" : \"2022-03-08T17:18:53.28492Z\",\n    \"name\" : \"Malena Tromp\",\n    \"etag\" : \"maxime\"\n  }, {\n    \"serviceResolvers\" : [ {\n      \"hostname\" : \"Chrystal Jacobi\",\n      \"endpointFilter\" : \"04cfm9mjsg4a2hra7hz3hvl9zmct907eorh234okb3c4ebnudv6wkwb90u3nlm7sq6b1l9fkw1ikif9n8ygwj5gb2r9eplcxaneihfnk4rxnwia1mipbytx65zbxj45\",\n      \"serviceDirectoryService\" : \"q9xz72xthi710ddjwfwlxy888rkc7z77ypmr3wkp37db1pjbz3si5dlr4sf0kn2btm6mfwt15t7lem4b39u0w238e8h6l71tgei0yo0wkw20txso9x9v3ig72ryib6\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"createTime\" : \"2022-04-30T16:00:53.285112Z\",\n    \"name\" : \"Stanton Volkman\",\n    \"etag\" : \"nesciunt\"\n  }, {\n    \"serviceResolvers\" : [ {\n      \"hostname\" : \"Junior Hermann\",\n      \"endpointFilter\" : \"wsgzkazm7pg3sirryz3bwjv1oualbvi74ppp9u5u3dv5cs77ke6rpygvtf45zx3ehtyk4q92loqzlq1gp5aso7cw9ypwhc8vegi2fsbkt81jyozbkl3gskk3mavayqqs\",\n      \"serviceDirectoryService\" : \"yiiz\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Donnell Corkery\",\n      \"endpointFilter\" : \"d2xx9r9rfmhi0j8supgy0n6\",\n      \"serviceDirectoryService\" : \"sgwsaznyohl11ls8o57dc6ri929vd46w00vmnu0anx9uq5hdn23kc8au9roko879nvclydani64hvv7wf83hw03pccvenkny2qnh3r0p66x6vpe8h4e83iaviqgqcaqfk7ohiee7qrxkdcev85xy6mgvtj9v5vkglo\",\n      \"serverCertificates\" : [ { }, { } ]\n    }, {\n      \"hostname\" : \"Theo Brown\",\n      \"endpointFilter\" : \"svfq47sjhl0leg88jtfooa1t35vulc4b59u1esjw2eosvnlg58btrue84zqvuume73oga9w2pnkjd2d73ws8fks6m3zvij4wlz1gecbwubscnhbzvhqwkzcyn4b5zhb7ph9jyvjz5vc2lk\",\n      \"serviceDirectoryService\" : \"uvqlyrlyi9y2bzoiwb44t8wb2ocqq4vmd3n0bepmst7ulrglj08dcl5unim4xnfqm4mwtehqa348ivq2w1wpqh2l603rofoezywpt874zzhcw5mmhu9gzuuv67ddcsxeya1r1oy7cqud1i\",\n      \"serverCertificates\" : [ { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Orlando Blick PhD\",\n      \"endpointFilter\" : \"inqz0ycgulg8x57twkct5efl7w18b9on5i3o3oi0qtgpgw4ie22m5drtskt1veixvcol6yup56xspwttr5exo7wha3kjhaz36a0zidgkq8n67ty\",\n      \"serviceDirectoryService\" : \"j15pyjna9utlde0j2sl1ay0n3okf3dk3b0zuoypvu1j7icm5oufojlem1u1p2rc206b9hewou4rlwf0bd5d1c2997gd8ngprubc0w5lf719babnh8ix775au43y\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { } ]\n    } ],\n    \"createTime\" : \"2023-02-06T13:41:53.285562Z\",\n    \"name\" : \"Vincenzo Hoppe\",\n    \"etag\" : \"deserunt\"\n  } ],\n  \"totalSize\" : 1659209179,\n  \"nextPageToken\" : \"u6arllanznsuvu6iuyu8hs171caze79frescsn026u1ssnrbj3tsjb49liwjx8oqtsgtxxgcrf5k3doafrjg4lfl4880hj05s86sjybb5rtq4v8i52q30zz3by854yl33ofx7j5ly1zrbesubwxqg0r3egyzw71b4phm3cpk8kpvpqng7isg3yctwf89pyl35k1yh\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "15ceac2f-782e-45ec-9f26-09bdb382c330",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.285802Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.ekmConnections.list",
          "schema" : {
            "description" : "Response message for EkmService.ListEkmConnections.",
            "properties" : {
              "ekmConnections" : {
                "description" : "The list of EkmConnections.",
                "items" : {
                  "$ref" : "#/components/schemas/EkmConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListEkmConnectionsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of EkmConnections that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f8c1f2d5-e92d-4744-86c6-205f20e56afd",
    "name" : "Create a new CryptoKey within a KeyRing. CryptoKey.purpose and CryptoKey.version...",
    "request" : {
      "urlPath" : "/v1/1p3iwkj2w1sf160o81wuv4b9pze8768cjppy7i3uyhgz40rrv25d33k3m5kvskuyv5bvn9hzbut1orh52lwuof1k8ux6pem5p08y0catbwrx9wnqpmyncu3liap/cryptoKeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cryptoKeyBackend\" : \"3a9krtmx0vj71oepe3p8t6vopdjpfpuomq1du2kzye6r3056prpqied1ds5d18s03miwaansu90d7o2flo5clseffo9jg2mnedr6eqzoy5qr146c8l2ajb9yljaum3obva96vywicobo0qrhg0z1kc0dhb9a3q12eruk91d3ivg5pvqe4c\",\n  \"nextRotationTime\" : \"2023-02-16T15:13:53.282803Z\",\n  \"rotationPeriod\" : \"zxtwm5lwxlvhyhcr5xngqrezqpbhnskjr038g5we6yc5a0sziikem8agl6wqur\",\n  \"createTime\" : \"2022-09-05T13:43:53.282845Z\",\n  \"destroyScheduledDuration\" : \"gzo5mj5a6kihg4xgf0xkdupliv55cq1n9jb4i3loltsvvmr0922g0uw8fjn459gc0lt5qlstetjpnb8kygo0hbr0d741ct470co118s263qi43drimctk7\",\n  \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n  \"name\" : \"Rickie Little\",\n  \"versionTemplate\" : {\n    \"protectionLevel\" : \"EXTERNAL_VPC\",\n    \"algorithm\" : \"HMAC_SHA256\"\n  },\n  \"importOnly\" : true,\n  \"labels\" : { },\n  \"primary\" : {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"8g2oyouzizjis3y8uq87jiv2k46pll8oyjqmpojtb04vzad74qz7kayim7eftepc60n4bj747fgxea8ajtk4d7zihne2fu2e8621438yix90w7xb1bdf6yxe6ze9m45kfie77nnywtd3d0ln79e3c3yr7gj6r2wkxrw7li8c\", \"i7ctv12d9i7pk37frxqj3rghyknpjtbhlc70301wl56adgymdg02skz7fx8af5vusalrelkdhx3vu8xqmyx2x5jjkiqalpxnk5hb8na6u4quyurcl7kp8mw6r\" ],\n        \"caviumCerts\" : [ \"otj5p472cvvtyw12i5p5l1w741oloup83kdr4dksb0959r28k0ctknj81rifck6hdktb7iqfgik3vwcd1hjxgxlsmvxe29fvo45joo913aegtrhkjpjgg0e07r36tq4a8di25jp56vngckbncfwjdrzgfrq27bd981zus2jj36pum\", \"obm6cv6bppwmcrkoxkhbaqkgfu53i3mv3vfn22dlq\" ],\n        \"googlePartitionCerts\" : [ \"ctz1g1k8uik84yfmqcjhyllphlrvrnjh0a86bf33d55pfbo34cnd22ov0ktg2j7it\", \"lt5wxaa84\", \"ge2qm8m08xsndinca696l3faly1\", \"e4tdmyqmhpc3cvcw65eb7tar0ye0y1q2mb7fz0kiwygituu1h9n6bvx99rkqnzxrheown3wiusj8jdsz9o81wu05xb8pqzu8ut3m6qffr3g1gf0spch8m174techboklxbrbgisp4zlalocixed\", \"zpijopwk7c611pjpt9duz\" ]\n      },\n      \"content\" : \"Impedit nesciunt maxime assumenda numquam quidem totam. Eveniet sequi sint quis debitis pariatur soluta. Quas repellendus rerum blanditiis voluptatem dicta et. Maxime dicta amet odit omnis veritatis.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"r8tah5l0is60vcdn3ngojy1k58oq4w3nduxe31w9w68g9etop2lhng5xlba890jk7n1hxtqno3r4yx36a6drsoq3e4cnw\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/950134\"\n    },\n    \"importJob\" : \"brwq4ze5wzsa6fte8olp9mph\",\n    \"generateTime\" : \"2022-05-17T14:46:53.283232Z\",\n    \"destroyTime\" : \"2022-06-27T15:43:53.28326Z\",\n    \"destroyEventTime\" : \"2022-07-01T16:09:53.28329Z\",\n    \"importFailureReason\" : \"7q0zvjpdfm8e6wwmhophwlyy15qmfn4w0t1ank2p5u2k7y6fkg5v68o54xro9vc4\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-05-31T15:33:53.283339Z\",\n    \"name\" : \"Agueda Hilpert\",\n    \"state\" : \"CRYPTO_KEY_VERSION_STATE_UNSPECIFIED\",\n    \"protectionLevel\" : \"HSM\",\n    \"importTime\" : \"2023-02-18T16:08:53.283426Z\",\n    \"algorithm\" : \"RSA_SIGN_PSS_4096_SHA256\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8c1f2d5-e92d-4744-86c6-205f20e56afd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.283613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.create",
          "schema" : {
            "description" : "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKey was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoKeyBackend" : {
                "description" : "Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.",
                "type" : "string"
              },
              "destroyScheduledDuration" : {
                "description" : "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.",
                "format" : "google-duration",
                "type" : "string"
              },
              "importOnly" : {
                "description" : "Immutable. Whether this key may contain imported versions only.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "nextRotationTime" : {
                "description" : "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "primary" : {
                "$ref" : "#/components/schemas/CryptoKeyVersion"
              },
              "purpose" : {
                "description" : "Immutable. The immutable purpose of this CryptoKey.",
                "enum" : [ "CRYPTO_KEY_PURPOSE_UNSPECIFIED", "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT", "MAC" ],
                "type" : "string"
              },
              "rotationPeriod" : {
                "description" : "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-duration",
                "type" : "string"
              },
              "versionTemplate" : {
                "$ref" : "#/components/schemas/CryptoKeyVersionTemplate"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "911e1c9f-2638-4440-b534-34c700d34667",
    "name" : "Lists CryptoKeys.",
    "request" : {
      "urlPath" : "/v1/p051e/cryptoKeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 1950323296,\n  \"nextPageToken\" : \"l1kwca5hojyk13ya9z5fyka0g3osyr6l990gycq5s3b6xgjn3ipxw7kcvoqyin79pc1c8w5umy212jqf6q0vox1vxb0mijetli0m0p6t5ycftc8dc2bjw2vqi0nv6j9a9ys8on5td8stzcpi8zyjuqk1yyqzp3pz60yo5yqvqnn7t6pt\",\n  \"cryptoKeys\" : [ {\n    \"cryptoKeyBackend\" : \"1kxn2dh2fhx5uan3f5obgtvqap\",\n    \"nextRotationTime\" : \"2022-06-05T14:59:53.276615Z\",\n    \"rotationPeriod\" : \"zq6s2ygntbtfdpj3t6einlteuusisqol32h5mv84590r1on5ilfb0q4ehe\",\n    \"createTime\" : \"2022-12-26T17:10:53.276666Z\",\n    \"destroyScheduledDuration\" : \"iz079bov5xoe3dh8jus1a1i4gcolym5923c6leybr31tr713djkg1hnzpnrx7aqnu6hbcbvwlo0vyazp09i7gqcdp7e6pj3iq0h68s6or9fbkc16tr56boaordff5jim54lqr0k3jlzr62ub8i7xre43kd\",\n    \"purpose\" : \"ASYMMETRIC_DECRYPT\",\n    \"name\" : \"Gonzalo Wintheiser\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n      \"algorithm\" : \"RSA_SIGN_PKCS1_2048_SHA256\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V2_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"38skycdjysixp4koklxto9g3drab83obwml8ypwt75spw0oxwf5w1nzzwl\", \"kwuvov1iv4i489tb2r09cmlnolxgdulnq5bhnd1n8vgvx84pg9qhjmhol8qxks8bxq75n6dxj7xiyaxk1ayyhizofqqn3ksb1fsgdbusg4ucdksi69dkc7sz0cajzxfjjlx5xy8swbhmyupptm16x94y\", \"1r6eaqib9miq374j0dgtruadkq2935ug0o641gvxv0e216ii\", \"blx4hx8b8dh9dfyps181lwb15mk59zznt9cfrlo8v2a1oxt4wqaekvqsnn0aon9rhpqcbd8ugprb80kdzbonisy9s9qf0mphpjpegcpzzqyknf961jawzrmvuyokj3m\", \"bc3ltfointtw29yu1o14jwwqnnsqe9g0ojw1hgnitxrjz8d0ct76aqrncnvkhy1zp12d6weqee0obshzop6u62jnv92h6airh6ma5slksqzf99y0th4hljmvdu224kd39qv7mcx2jb5bjehscz2e9u7ttcfmy20fgaaplj8d6xa1fsod4qf5czujcxpm2u1\", \"t07nutovy6t41mvup0s2hfhviyc6rnnvcdlsbzqhugf9ly0g1ximc1d9r6zbdb80p\" ],\n          \"caviumCerts\" : [ \"gcmireawdti\" ],\n          \"googlePartitionCerts\" : [ \"o4jwzy4ld4ecx5a1ltltn4q2mzswid7k7zpe3cryyn63kawcqh84tdrhcsg59u7pfod8r1ov5qvcng6g61k584oeqy6axlf1\", \"r4ojovfg753hooc5xbho6b5q2gtw6lvhh7q28hqkh5vgfjehp3wfgqsn36si6bw33h3xiv24nfvfek\" ]\n        },\n        \"content\" : \"Rerum est nisi aliquam. Ut illo et repellat labore quod eum vel. Distinctio quo vel. In est ut vel repellendus dolores et eum.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"98cy5z1xm2w5khkoipktkkn74tdld7s4l5pyiotb8x01h7pr58b71t4eo3oktppktwqfslbwrn899xyl2sf1ua19re7szofl8u86x0sfelynhjfmppqq0lmdksslelvn3u9ilvrc6iwrktf2luz7qogpoy0369c7qxapad1\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/042725\"\n      },\n      \"importJob\" : \"wdxniqhtxgzqhcx57zxej27056iywr2\",\n      \"generateTime\" : \"2022-12-10T17:21:53.277075Z\",\n      \"destroyTime\" : \"2022-05-20T14:55:53.277106Z\",\n      \"destroyEventTime\" : \"2022-05-05T17:28:53.277135Z\",\n      \"importFailureReason\" : \"wdv0iojsjon0ov4hr0x42dijcyyfn6pnsi30sl6dreujve8i2ltmls54vpsd6inxdhke59hwlz8hu4x216skmfttmticf\",\n      \"reimportEligible\" : true,\n      \"createTime\" : \"2023-01-13T13:45:53.277184Z\",\n      \"name\" : \"Major Bayer\",\n      \"state\" : \"PENDING_GENERATION\",\n      \"protectionLevel\" : \"EXTERNAL_VPC\",\n      \"importTime\" : \"2023-01-23T16:04:53.27728Z\",\n      \"algorithm\" : \"EC_SIGN_SECP256K1_SHA256\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"eca5z3i3pnoze5h5k0dlmtnzg45i8gq6rg513xodfwjc4ofazxcki0f2wj1m1\",\n    \"nextRotationTime\" : \"2022-04-01T15:26:53.277342Z\",\n    \"rotationPeriod\" : \"zxeutr7pmyrer61fkjr16zozd2yn1d0qpgkfbj093g2vf2yu0xg932k0roz3f1brrbqz464p6e3vn3wletdqdjhvc4gh2gl6ixq69h7cqx6zbwnpr7grdd8v8yqk8d9bqnerosyegsz77z68meiy1yostrzy0qnyu0nofrwvk0pv8bd\",\n    \"createTime\" : \"2022-05-30T15:02:53.277386Z\",\n    \"destroyScheduledDuration\" : \"mighk0l3j8e8eobgvdu4epznqg0dut3jz5y6b2zvuiyw16p0ui3le34rak5qo8z9twrtdhlcz0178y4obwsivw1ncrzggm03yviiqklcl40kbnbr65e\",\n    \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n    \"name\" : \"Bobby Nicolas\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"HSM\",\n      \"algorithm\" : \"RSA_SIGN_PKCS1_3072_SHA256\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V1_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"3rscg3h2q9s2k03ep4i8lkhmkhc9i0e4pj96qz8w3x1\", \"hnzof8f6my8gmj9xbuurv8zo8qja9x4z1dygo2vov1xkecwhpuou7uq8nefomvh8fcvu5xq667x7hpqeeex4y\", \"mdou5z3603kvsjeqaxntehuk32qecmn2oa9xjt9puuux6c188to003nqwjh83lggwiiddd4t2wnk4a5n2ya5fjtwwvy9x7y94lu4z959smhciot8i3goskekgki9yrky2m5gcw39o7r5pfbeiil1eizy1k38chrj8mvncu869p1bdmrqwp2cl13j547rhlbv\", \"0u2mga4yis93r74fztv2rae4dl4dbj73u769lhgtzcr0eufnazqump9hia97apz6jfxmky76l0rwb69m31i12u1b1pgqz8xzg5g9hzgtrjzf0yjlx\", \"x9lcemulpp6fahqfrlm5evgo018djq2vyygl8u7r1fhfdhyszf8u4idlls3z6gmag\" ],\n          \"caviumCerts\" : [ \"znpofcttma743d8hvqj9c3ndyukfdqwef20t87lcg412ghftl700i33qhvwbdk00z3pqc1icnan64lb6cyppcxla1bsomkoi34gohsj6m4jcjqk95aigx15e0lhnk7v8l0cmgq08eapb4o2i7bfu7jw46pyv74mpoft9hkpzyt3zd6hyixr7w2\" ],\n          \"googlePartitionCerts\" : [ \"fbnmmjczs36hcykeskt4kgvpxvoc5x39pit849eh8h550pl5bqtmr\" ]\n        },\n        \"content\" : \"Voluptas quia consequatur odit quae id sunt. Incidunt eos dolores non. Ratione dolor mollitia sit. Molestias amet ipsam consequatur quaerat aut et. Voluptatem quaerat et sed nostrum hic dolorem.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"vzsrvta2ge8ncnwz5qufvapinz22znk8xwr5gqzfuwscs76hsw7uonu26g934y3w6ffnqw1ybduhnt8\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/094517\"\n      },\n      \"importJob\" : \"mnpupm8bxgz8z\",\n      \"generateTime\" : \"2022-07-01T15:38:53.277747Z\",\n      \"destroyTime\" : \"2022-03-08T16:37:53.277779Z\",\n      \"destroyEventTime\" : \"2023-01-23T14:55:53.277809Z\",\n      \"importFailureReason\" : \"a5185nv13x30y821tn1tq8uk5hjsp7z81zfvhpt4gyba62i8fwjszyj91s40n\",\n      \"reimportEligible\" : true,\n      \"createTime\" : \"2022-07-18T15:11:53.277855Z\",\n      \"name\" : \"Levi Luettgen\",\n      \"state\" : \"IMPORT_FAILED\",\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"importTime\" : \"2022-10-03T17:21:53.277941Z\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA512\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"1dyjsrtgd8wgrdwpq9d3efpttwsoqtzsvq8dur3jgbdljwq4mq1fnrjt8sc7f1wwh4qja88nct6bqhklwizhw2vfrcg55lb3srxq9fvkyxdiddlwotb5id000tn66lsfy38tnreyhvp3zfr8qnqwowlr1hyb4ibmdgz8spco5ffsx4476c\",\n    \"nextRotationTime\" : \"2022-08-04T14:20:53.278005Z\",\n    \"rotationPeriod\" : \"4gjd4im4biwkvdxybzrr4tc9xsyl9til0pjo3h74oswzp5trc7s5kb4tct0dtu23nqalkvnwls0xe81d969z9lgwc0mqa9fa87ed9zomyg6i4jstbmehunsdiaxkuxxgs8o2t\",\n    \"createTime\" : \"2022-04-24T15:20:53.27805Z\",\n    \"destroyScheduledDuration\" : \"h6124y6g8i8lhjoksxbgx39aty8k3awxwf5kk5h7kksfbwgudktibivtgqdro0vn0lvyn2wvdfn4h332s18f981crt73g9ar8a4nhfcyro5vfg4qq9wbwltnacjzh7q0\",\n    \"purpose\" : \"ASYMMETRIC_SIGN\",\n    \"name\" : \"Mr. Trent Gislason\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_2048_SHA256\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"1rmlhtcsgeey3gdmu6u61mw9t4nddw5g4hm99lh7hsttl8miw3ytt0c289sgy2bqjcz9ipwvssqijlfkxy4byh0amppm1t8h6obdj0qk7ygz0yowoc8zzi55k25ghwentac9ik7is67qxp5d5t\", \"eujqdojzg09yx10jlwgkx08yfyd95rmyi9cfanfa1snzvblsnanwal83z7csu2phq8ahoy92atjdkx37umu9v3nby1ob8kbs9u6gs8yvz73ackn\" ],\n          \"caviumCerts\" : [ \"10lbo101vagpvj4usjqfjv5jmnmxfxqwajwhvth64f6jzltssdd5fboz90qomco2\", \"a8rggm5kjsdzcoe94exg7syh39i0pdw3h34ozhhe9ukpdkma95y3mbptdeqav5rapm9u9d88pdoce54z8p5m1vteru7uw10nd50rzs7dn8q2knl5y2gaaq7wpxjcnvvmir0v83tau3yh9n0rbmeffvn4fq8c8g5444stbnb6rf8fbz6tiz28yqsp0e8lfgd02d6nia4x\", \"9wgyoc6xiq6l64b7clweqhojdftejq5lloi204le24uljfiu\", \"98b4dui5adkye9uadhyg9gyuqoa71fjtvn61bbm8hco6raly5zaquunzhmcd26iv3t39zy6n72ivyv146t06u0ixv9ipo679qs45gt56grt8zggvkzduh8qihposusnyrv\", \"j1myrpcni3h6jaby3v05iuxpsu5gp0bp9cobe677wwkny9zm3znw5mqejcjj7awuwthlc3jjohbhpoemdfv13kmu2h4qc3pbkuyitf5vytuksr0xvscchrukk77rbycfhddoqyp8i6xssjgg8un55nqxji8vkbfn7q05a4e2\", \"28g79cw7gnw033t3wzupznnxhuud5bknseh490pspnyrra7om8wd679463lx10z1gu8rb18hziwyred71xixw9ka0xar2pdep1isby08d5qwfzgs7quhbbh77oq75piglmo0d4rk2qfq1jb70z2xenb2\", \"lr83hps0fddqhwxh1jglei28qv\" ],\n          \"googlePartitionCerts\" : [ \"wh3z81nn9beng8a1jwyyvu542ify88dnpl3z9130go1pxj7eieubpz6brmzduk6ewbs7f4amjc9j9xw8ycdiv0w9prkww6\", \"ctxadkeaadq7ws5plbh7go708jkrmimacs4fx0kw31cu4c81y8hml1wxwz69jupvvwhslzloquhgggrv9kyxgn6we7nhzcik3lij02d9om\", \"zrlk142cadd0n0d0ejl66k3ep7i5ipp5wd7ewcgtjdbqk0b4pn3ywjhindm554pybo6kf24e2a7yyvu69hprxlu1pablv7hisnopesbgllum5zv9sef6z9iygrdrc6k16u77lwrtmxcn625uqxoj417ec0cg916bu2x8ol0rtfppj2pftvy6vszrwg0r0scp8zs\", \"arlmt38h366ceefrac93dt8ida9zuv71\", \"u41q8ezt6u2f1ocw7v7jttwftpqb0w1uh4m14ebqtqx9dh2qi7iysrp71oywy14ih1ehaiaue1fi2vbgkmstaa3p8fj55hso1gw3h2ru4xvlam07l82vnjp93id7ksmtjvrid9jyw8jmtd44k2\", \"s12ghkj9ec2r04holhbjh3d9w7p8\" ]\n        },\n        \"content\" : \"Error magni debitis beatae eaque amet et. Eum praesentium molestiae. Maiores nesciunt earum nobis quasi architecto distinctio enim. Est inventore quia similique atque cumque.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"wq3ot2o0mlfoufdmqojlc110walj08g8xs358ck94e1cfb57zdapiuixdpa1yzaoq26cel7j3laphc2zdmaeas0tmttdejy1bqkrxiq72efxsaflt1ujkg4l0slvdbpanu4xjq4gppjmsk92qwnmoxytijr830agn04ya5\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/816903\"\n      },\n      \"importJob\" : \"04xj4oiyolcvfq1f7mo6iw1so7feu7iki3bpkqyt90jwzet71erkt2jujgdzs7uch1gzrg3t48x93m5s4rtf89kgtzw3rp90qmai7t0pyoldy\",\n      \"generateTime\" : \"2022-05-12T14:12:53.278455Z\",\n      \"destroyTime\" : \"2022-08-12T15:49:53.278485Z\",\n      \"destroyEventTime\" : \"2022-07-18T17:09:53.278517Z\",\n      \"importFailureReason\" : \"3gj2iauj15\",\n      \"reimportEligible\" : false,\n      \"createTime\" : \"2023-01-11T15:04:53.278563Z\",\n      \"name\" : \"Miss Jonathan Mueller\",\n      \"state\" : \"DISABLED\",\n      \"protectionLevel\" : \"HSM\",\n      \"importTime\" : \"2023-02-03T17:16:53.278657Z\",\n      \"algorithm\" : \"HMAC_SHA384\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"x8exyz2gp9cwjk4u9dr5b4l9wt74hlf9o58t9p8vwpzfyjd8bw94ho55ml8p38265o20nrjp6v501u49gfewz6htpukx85j44wbffmc0vgdpg3ehyxuba5k1pr1w65\",\n    \"nextRotationTime\" : \"2022-07-16T14:54:53.278718Z\",\n    \"rotationPeriod\" : \"fekkj8nqb5yjzrl41x3d2iko5fbqm172164nhqwssx4zp8pnticbgum1sbegkntjz9n5wqvyqv931plyspx727ljfye44zc1z4kw\",\n    \"createTime\" : \"2022-05-09T14:29:53.278763Z\",\n    \"destroyScheduledDuration\" : \"nfujpc5fmjayyb4s0yfbkv5iqhy4t7msp8qohulzxwqsh2rffqk6ala9lzsv7r7v27ms2dgdboim32uj6a7jc5caqqnbdgi2odcuake7nr2a0wyadm6zr0wije9pms0xkxaegwcaahiugnjqfu3422xp9vs877owaqztgtiqkba6zgsgmjp6l7wj8a\",\n    \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n    \"name\" : \"Beau Heathcote\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"algorithm\" : \"EC_SIGN_P384_SHA384\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V2_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"cadl92jchqplf5csqfffw5sj9jzbwzp41jhi9bldz42my1t5x960jdp7q8psll8lft4hgjw7s1kvf93vvg0ed2k1n5le\", \"mf775vavnq4dz843pxuy31mqzvlco6j\", \"0wc0l2c030g2jn8wf\", \"j104alfkrmn4o16tm36xm06dhpj6kvxvjuq8fq1lou1zir14gvo96sxos3dw0yujdzg2nmoc3jc9q4ly6q4iuk8rfg2zdbrrcsnbstfkj5wa9af5jzu056lxzdqknevu4tqqaejxi16fnnb2fuqiw8lm2dyrpb8u8jlx6zo7nq8wzt12ys9p2ko\", \"ch2j5a1akg7e15sl0ivwy1i5twp2fr5auw92kiumyvdl7oirzrpn2fkigtz37igo7e3mebihv6ciigry29808w7gozrpxhokvdoyodlr415ttvkpbork70mbzbrde0jzacmja43\", \"6c4vmszuniuu4mey89sc2rhy0all0ysboej1u42krtiq5c6calr0tmd61eqbxm26s9dloocnbvaytn3dpdktogu57z2u6qeg67hgwo1bh\", \"muer31ocag3w05c3ghlbv7swpphb2aigsebm4tygk\" ],\n          \"caviumCerts\" : [ \"ybpmydl3crdio2xz1ivgjrvgnyt1l23em21rkj7eb0425y6tyjxcvz5kx1z2bovepdqcvi7fu93o1j6x4x56ypjlauk4pp19nk5swd8dh8n97ul9fq2txit0wbbudar4g7ofm0c3gk7f8izy0o46c1rx5vhx8b9tgqbq2ghcvc3ho4w4193g2f8\", \"gnafy1ey0hkury6z4zoyo60jo4wz6wjrxm1sv45ntz1hctinfc9vg4xbe127pifacu9bzt9yop5myo72mlxcqqwezoonv2yy3pzq8ltv9ybepecc7u17mcitscf3bf0bcd2vk415cubgsbnw4r0i7b1k2wewiylcu06274\", \"cavgcuhm6rfdnj15m5fnayb7ddaoh6e6xuk5jbbj9uhu3y9b0jvbood4ysvdiv5cgd0xp3n0i5sgulsusfcpvv7z7w9mmqxmfaruuu8a1sj3fpev7jytwospgaup47a3ze1avln95yzfwxu6lfabim521lkzczzcokbznrvg8oy1dx5u31qnxl212rx\", \"mzo9s6af9slfed4ju9x8mt4gugob3yngy41o6n91mc4cixn5wpfde28mgwbzgzeerte32e705pxbxkqls54jkjlvowmebwq034kqmq03957r0psqaggsakji04gsjj0acoeer08oe2yczpj9vxybtwxcr4yxtlwophtuckm142n3lslqhimpgot5twfm5\", \"d11kc2n135h32jt12rc16zi2p2co4miytalyoxlnzs5odfkdsr4pztuz7no1qgfie2ejkakzh5qtjrt3damgk7xm6cor0msn1sv37zk8\", \"fon442tjd28aa4kwepfzt9dp8vx9tbzhkw8mb5si5m67iof8ilw1z76cm0ya1jlip27ofbnjaub9gliacre5onxajc7\" ],\n          \"googlePartitionCerts\" : [ \"yb6w8u0mdq1crtqaxh8esl2vjga0lanlv0e2grfx6m8yw1ma52rg1\", \"lk6pqe0t4hsl6njv02fxtgo79ez87xj8up0nyhhwqlmgg3namx4hs0\", \"kxi8ah3th9vbo7iidhxlrfgx7eh7tffnlw5h8u4cw176hh1sgpqiadbv48h7t406q0dvbablw2yq2aapsiq6en26o9gb5fzn2slxa4ryxg7rd7mr1u8bdaw13p7jg31mqoj06t49nvpmhj145zmguey99tu6295zmpy6p0notcqij42dmz3a16zv9\", \"ywigwoghw0l75587vv8aii9cneee2ifw2ep4m5laubehz7in8x7xkbhaldsvkbkn1bwpu80ber4pbsbg519g77ficyl734mm4mp3ogc39il02jutpd9y9vpwol5sfm\", \"v6k1lbb07azcljhgs1ya40dxk6fzspxr2unsz0nbszc8ozgm2k9mwoftrygremyx7efmh4jqj1egujhym2qvn5s5zoks9m30sea32j\" ]\n        },\n        \"content\" : \"Sint voluptatem error nesciunt cumque quia exercitationem. Sed modi quos aut. Exercitationem modi repellat quae optio et eum.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"4gbcehticayi7ivq68l7pxc5nd6bz2nrb10gw8wq9xjjqoancm8v4il0qmoiuneg22iudjshrd79doyl1nuk18r055azy7w3631jui68zpki8cfjls76qdf6cv029x0xqfxe998ep9j3sykd7\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/038642\"\n      },\n      \"importJob\" : \"qsc9cj2i0yozj0e9gz13j56ii1n7uwjnflbmf9ibsrjwtcf1qimgfx7hknsry9pn4vw7lfuwxkgmrugypqdbsruwgvf1cd59v1k9qnkz64p22xtqiq3crpdhbsnwd1jlu4u7b7xerj9wx3lzj\",\n      \"generateTime\" : \"2022-07-11T16:54:53.279181Z\",\n      \"destroyTime\" : \"2022-08-07T14:52:53.279214Z\",\n      \"destroyEventTime\" : \"2022-07-17T14:43:53.279247Z\",\n      \"importFailureReason\" : \"e4f25mowp1wm7eve149s63tum1zgkihgt2nba\",\n      \"reimportEligible\" : true,\n      \"createTime\" : \"2023-01-04T15:04:53.27929Z\",\n      \"name\" : \"Ms. Leland Nienow\",\n      \"state\" : \"DESTROYED\",\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"importTime\" : \"2022-04-21T17:23:53.279384Z\",\n      \"algorithm\" : \"RSA_SIGN_PKCS1_2048_SHA256\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"zv9n85uac09o2jg85qq0gadu4e0oucg27gdn66tau4pydpkut1tn6yldtsios3zc5l5w1b3kzc6emqrni5jkiimz6dvt1x051alr0h7ome4\",\n    \"nextRotationTime\" : \"2022-10-21T16:37:53.279448Z\",\n    \"rotationPeriod\" : \"g5gfuly3ecqcmiom9tcfde6k60578cnuiu13ce5jog2zn6js6zkv4ct5abot6clmfyyd1mxw94iqfbp7zqav041gw4txiwxih8dh84rmcvlsiep90044k8nhmi0uu7sqlp7kieytq0tdt2kc473\",\n    \"createTime\" : \"2022-09-01T16:49:53.279492Z\",\n    \"destroyScheduledDuration\" : \"vh7t03chnh9elm930gby6gapb0g2q2ia7z1a9duyj7x7c8gl7blufuqjjk8gepaiyu3aa7gx4ih01xw9ggnnhkncuwhhpfx7tqj97gipykwhqvw0e0imm51s48w42a3547qgw8m\",\n    \"purpose\" : \"ENCRYPT_DECRYPT\",\n    \"name\" : \"Reatha Dickinson I\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"algorithm\" : \"EC_SIGN_SECP256K1_SHA256\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"tn2ftjvfs2506ut4xji85qmw3jk1wfw1ys8vd1hurhraev2amwwcfqcaq529rw3t024t9fdtoybuxx7pugv483cuhfmar438v5ec0s47bqa0qrzktryzk1rocdy77a8979r8z1uebkpht2jtqlt2kqg\", \"j1538vqqws6\", \"71t1ryauurrj5yb0wsyv2r89w1stxjaeu\", \"trdcjqzt4zu0lo5g2814e1lnvz2bwq7ustmtr2nqt7j5vwhzjzhogum\", \"oc96ce601lzhm2xv2lollsyzx0og2igumr9tlla5sf3o55yyzdd7c73o636sugxu81kfjlpmgttxndsj2fdv07y4d8xrjq5ex70fgfp18n1jwxfv3i6brecy30k1tac6a4q\", \"9qdhw0mdt7qg\", \"l8xtgcjlyb8h92gwye968lr1j7jj33rlf9q6agfne47j4up6b5ig0i77osfuahxw8dytlbfqof4os0p31je4j5folh9ewedcjwqdw7hydmp3x6xbmikc0z85bof16fugvsby4ki052cgoadhv7xz3vxhqisw7rtt6jgkcwhogzcnsv0uj53lxxoxyrkgz\", \"rcw2puv5erqxjofi7obie09b1g5q3qbvtacnv4iegidbonnxb1ebx05o4hne2i81nrhx4a4puwj6ihmk3vkjq2eu6iu1fn66k6ewh\" ],\n          \"caviumCerts\" : [ \"2i83db5vl5frdq6uztxyyy4uc6kxjq9lyj8o5h0b987xmtrvsa0i1uad44rpfml3rlu1mchde3yzhrw6a3anq6cywcyaue74c3x08dt89h0\", \"u8blpwhqvmyu9uhkz1jn9jpbc3rv30vldke18t6obca71lybzuiow3e3f7pvlbovefa5wvxzqrmjzpnmm1cppz8b3297jt62pmyfjczrxycw6fwehdno9crylslvk7q2hda2onk2inn0meka4boz\", \"i6q6ogf30fd0hc207upss3va7aq1jgd2idu9c\", \"glc8bpq1cxd587xrf4187m3t3zzfh1v8uzd3cktkb3fmd8punr2cgbdg4hxvzi7t6b2hjdg0wdxix6hufdv0xjlaj7cpifoirt6xkdmksm3ms2a06gy93quymrmgjvpyatlvwnnini5dzkvsafym1f9madusxzcmmsm8hxlohtcjpj91dmbkofu82\", \"78fo78dztf3iy1k6avw0h73v2gfcdvxizde4urfmggvtan9ko9goql4mz704jjrbg9kdee4zkwrl\", \"2vwbeecz1fow6sfx55vcdv9wjrqzlow301z1nebovi4wcxh33s2q1mlpublsw1atqq4vzoe6tofee797acmadeklglkkgwwfzm62lzq9rvo625uwiapgtgxzoqkgpyh6curpo6pd9usbtozw0tr5t08hi1t7r3k8c9dhyclet6qtvsaqzpq196uqfe66qnbq\" ],\n          \"googlePartitionCerts\" : [ \"ucm6fx2kfp9fjmynwcu5uprufi2klen05zur25p8rqow8ozy6g22dwvpig6iygphmus5jjr3hpz1glvhne3h8zkllgk4\", \"qf4yi915jtzfjjgd340io0b4prbpfk313wqts39luubnfyn0ttd1hrafuaejz7c2ft5s7kjchhhkkdzrgcwm5rgj5xthinq8fflk9sm6e1xbqzb26x2tg3y8ojbass8gugrkoinrr18veh1tdw7ng8zmloi\", \"lpqob4zd30\", \"ys3dlrb58mcka9nqaq2pr8rgx3lxgyw1pnnv6v15jkonb73e066ce3kgvnu4l733fp9pmb15iw0ncr2jjjfi491pct9j0ozgopl89nppywqm6upcvngjal0j34x2mcm7c40jglnj97w5gmnywtmri5f7ogm4i9ykfphoiw0ctqybzgejqa\", \"mn92mhty4g\" ]\n        },\n        \"content\" : \"Eaque architecto et est error. Corrupti quibusdam atque et autem. Id quia maiores quis dolores. Qui et ipsam optio corrupti culpa. Facilis architecto dolorum ut minima velit repudiandae hic.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"nmggjr4r495zk1p8cl3netvisfwyo8t2qgxk3nl48m057a30ylwskhurilis7oridifycwvqxvewkzfluaszyjz3jictnrpyb7vwcookewbo04c5rclk\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/717745\"\n      },\n      \"importJob\" : \"nxgm2jcpk7p30c5i6odpe10q74nbjh54ipvytgrg6nzqrxpyhmn03d6jbb0mk92uemmlwnh8hxzqdt50rj\",\n      \"generateTime\" : \"2022-04-29T16:22:53.279929Z\",\n      \"destroyTime\" : \"2022-07-01T15:09:53.279961Z\",\n      \"destroyEventTime\" : \"2022-05-27T16:17:53.279993Z\",\n      \"importFailureReason\" : \"rtzpaargpcodqjpzhj54xzs8p9f7xso6kvy7k9220zk85epxnolegykq5yy6cg9pp20xsuqsxon780j1ksp9nioxfhez0dtmasky6ae9u5iqqibsb72xeqmxgcoapktxzji63bbewcg2svwhf3726qrskonigodbowytjb1mvi05pjrey2zs6b2rjlv1p1kk5\",\n      \"reimportEligible\" : false,\n      \"createTime\" : \"2022-05-19T13:46:53.280044Z\",\n      \"name\" : \"Kristina Ferry DDS\",\n      \"state\" : \"DESTROY_SCHEDULED\",\n      \"protectionLevel\" : \"EXTERNAL_VPC\",\n      \"importTime\" : \"2023-02-28T15:18:53.280134Z\",\n      \"algorithm\" : \"EC_SIGN_P256_SHA256\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"bvuyaypobo3ll2nk6l533xmlgbargutqjt1nl1qfvpnye8dw9in7d8cgfqydli4s6rzfbsmoovon97b2leadpw00uxsadp6\",\n    \"nextRotationTime\" : \"2022-10-09T13:36:53.280196Z\",\n    \"rotationPeriod\" : \"9i7axawpkr0bt8hzw0e7oxz8qzd60da34dezt12lct6d4hfiwmqvjtm323tpire2d656364ymztqne5y0s7banjr0s7t2d8k4de8j31kzko2cycw71abx4ijiqbvff03hvecmxu\",\n    \"createTime\" : \"2022-03-27T15:53:53.280244Z\",\n    \"destroyScheduledDuration\" : \"jezoh2gvq9iusqiqn6roo06ryleeluo73o15a12j9po5jbekkg\",\n    \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n    \"name\" : \"Ali Littel\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_2048_SHA256\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V2_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"04tp5l7kflhp29mcne9hc\", \"ookfypmhacey4sdv3kgoo62y58dhxg78lh7qfwpdihs7vav9nelhz4yw1vi0ke9kfx1ijn568721il0x1uqoe8j5hsyyprdwvsm6b4f4ross28ruaxs6ztfodvkf4pxor2ehu52ut5y8aztli6w1yvfat33kmq2zsq2l0hbpgi5ezruixo0mhyyfxaiz2ywmq6l8ud\", \"zv6eww0w3nw8ksz5demby8401r5qu4prei033xmfvyonzz7hivxex72aywz4c5zg2\", \"9yer03nn5qkab0jlvw5ya97frc6znza9ukq6py8j1j8h8ho6xe2xnoiylb0r\", \"bjckum15wn6bwkgpuswq9x3onmegz\" ],\n          \"caviumCerts\" : [ \"ghmnlsvg1fh4e26ybzy2gs3lglph1qa9u6w6tqizatsz9h7kwui2h0jr7sl6wonqkgm0k8l9e22yo24jgj8z0ahe3di9k92iaoyg6abmj1i5b0q6mh6sj2w2yd6xjtvpale40ssj9f4wbnop3467ojt8t8ufov7piojelr13tj\", \"kqh3rgrlu1vilgz6zc9fczqmqnimt1ebkeeqerbfipm3nssd1wlhd4afrozef46tlszoajtsoje0m7nbanjc8pfx4te178ftbeok12t8l3ydx8yurernpi346aphrpsvry03cuvn4ao1a98gfspybb0dsgmip2w3cg4kocghevekbo53e9w6krt6qq\", \"zqyzlm1t99wbnuz5yikwar5bgmrf9iqrc5fx8tjk3sl2cgbnc61do4co6y7dna97gbam2on\", \"c06bbi07bv7rm4hsfi063p8tds49ian4wmkwkw3wf9zgq5st\", \"np3rebc1pmrxm23hcjchbsh8asn55fr4ajjcgqp8kjjqk42w56u9d4wk9jt8qvj1n4d4vcqi9wjxke472y9xp1qpefstainvi0daqp9iali49pr2864e4c3uw6g01iij3awmh31di6tr890s60cf5dmw7zyz1ie9ncewmvxctoflxlfz43\", \"39ryo7ylf8iwwqt0tda4smpuxpgog96vszojvn45\", \"p843xzotpkh8b4hlayipfyv26r7ptdznvw99j0ul4ewapvaoqkyhpuwc0p9d41jue98l38vh9hir6\" ],\n          \"googlePartitionCerts\" : [ \"r1h1nu6tn29p4aba2liz56tumlilmzrpl2tynzs9lq7lfabdjsc1ed0xqn1bsoqsvfeljlg00f3ir2upjv43sm8eagf3d8jp2vbjh202ldhuu7q5epcx4t1rtr6shfflu\", \"s02a5nzx85ib968emv0uxndd7bbx1i1dlms9h87ck13kihhpr4qfroyy1e6oyitmqq39uoacwb5mc7uxkhfeg70tci1er1068ljkg6w7g1144e7uhaqukqs61vbmv9t19uzqqfmbe6az2co0300w6ikhj15p064vhxo02baasfuryzurpmtzsb\", \"7l4jdcy4uu7i38sbm298k0k5qfh97rgbptvwx57wsaed84ftpolx2a59kpsc69eeh2e57am3v7tghqwzhsvit7nswyddp7c91\", \"n7l50u7it7ydajbrxbobppsxfneuy7245d3aty849bitei6ewdl9r2kubiqeuzxxscc\", \"obr3poc8bofiukd2erkx1ah0pfo703poabibdaj4o249ccdb59w4wkhbemu7slzl7pgu8li2sr0ct6yew0hv3wn\", \"6yi9kmtqxk5a722x0i1b0co76cod2yb7naqstc7tnop84stwoujvrlekhh54xvtkofjdglrcu7ry95pf32mcfjs74i6ehtub0fcma0jjak5cmlo7ni4hrszeit5di4adtwumyh0p7cey5ssg99nowuqkiwp3p531hz6p\" ]\n        },\n        \"content\" : \"Sunt consequatur ea laudantium dolores. Expedita asperiores et voluptatum earum est nostrum eos. Qui rem possimus eos et omnis reprehenderit. Consequatur consequatur fugit asperiores qui nihil tempore\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"xd9iujd6b2wq95colryjz2e6f584eobafghrede5veus4vitwcvlwhxc0ujxfelk9h4jh7tm7n8hsdw89dcwzma9\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/277462\"\n      },\n      \"importJob\" : \"fxo3zfngxlfsy9k5kd61fhgtw04yui9otbv3kaakyxich8ldkh65wemdiuqs3zx4likm2ypkya0hup0qobikj2r3dotc8clbilscjqctxtsusb\",\n      \"generateTime\" : \"2022-06-26T15:12:53.280684Z\",\n      \"destroyTime\" : \"2022-10-30T13:34:53.280715Z\",\n      \"destroyEventTime\" : \"2023-01-24T14:20:53.280755Z\",\n      \"importFailureReason\" : \"u1q949w5xh4jx1q1gqiw61gfxzrkqo2bje2j6wkab3slwc21e31kyxl0tybvkas0wmymxhn0vas9eybtz7qcs47zd2t6ihg\",\n      \"reimportEligible\" : false,\n      \"createTime\" : \"2022-03-21T15:17:53.280803Z\",\n      \"name\" : \"Chang Strosin\",\n      \"state\" : \"DESTROYED\",\n      \"protectionLevel\" : \"EXTERNAL_VPC\",\n      \"importTime\" : \"2023-01-24T13:58:53.280898Z\",\n      \"algorithm\" : \"GOOGLE_SYMMETRIC_ENCRYPTION\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"zvca43oht3b0c4i4na8kx8j47wb2kol1p4k8o6fjnwmxzsnwmtom2ybk4dfusijavd2\",\n    \"nextRotationTime\" : \"2022-10-08T14:52:53.280963Z\",\n    \"rotationPeriod\" : \"fz0zwvhk2q53cumhb0t4e5iityzj06700k980fntz1esqrkbv3\",\n    \"createTime\" : \"2022-09-07T14:38:53.281008Z\",\n    \"destroyScheduledDuration\" : \"s11rt062ess1w86y5xqzfs3tfmojza0lo504wevvna71hkeaydi1a4lutw\",\n    \"purpose\" : \"MAC\",\n    \"name\" : \"Ashley Erdman PhD\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"EXTERNAL\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA256\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V2_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"6853yzog5u3vkdcpwp3169m95499wxbsbnjw5kef98is1iz3pnq31wv5lsp653im99lz1aniaasowafmsz7jqr5owas3buvvyfxv0acdo977xtnuc45oxuycazkwc1kjrxh1l40435fhnixcrns0800fvu7rc6339d40\", \"dog3b4e7o7m5vjmizjg7s5d5e5hr4hwh8f82c8iji7jrlev6rklcf9xu\", \"j9gjxvw5upvg3sudp6jvg1ohstphg24dmlgxi\", \"s2j9lg602ne4i0sasx3ctacv7azpps7p737fm8081ioir5tclw36xgggcyi1dczzj609hw0eawh1wipaqbapxnoh3nxojgrdhmqzb8tejxjtgc3bvt5epl4emwk6yupe2fexjkxtyckh7ftfwjb9u8cf767ib7zzsm7iqc6t5t72qvxvpk8hgev0lcr\", \"1q0oevdessggp0qetx8p142yukk0yllb0f8raeo6ouriv03zs8218iovpkrezirq8d80h255r67zfj\", \"51bvurfvr\", \"kpbupp\" ],\n          \"caviumCerts\" : [ \"qqpxtqjzj29b7oyv7t0yawd61vg0qit9p2jlq1qeom8w8nfoxk6c4etuaj39piypk3ahmzf4yfhtuu29ecjsp59n1f38wtcf3sqm0kap0x4cqpki07fefs09npyca8ebx633xoi5z9l9jv06soybol204\", \"mzig\", \"tyigp6jbe5r34yq2vsme58tvxwelmr7q6xo8u56mr9uu36ioeimlo61m4evk0s7ps7qi9iqx6huu99vu85sfckr7o1rev9v7jkx9ep4cf888nmzgm01gghddw271c7ckc8\", \"6thbrrq3sqle2tk19ry6gb20bithlfpr8zehtsg5y8vvuy7zzpzkvsk5xrcukpaca3ywvc0ath17glmjjyxhpocs3wtqj1gn2nj1bvncbk95pjwzq3javhgkpy2jiv82mxyww7l9l5hmonm143lz\", \"gb3p5zq41051ljip7kcxtjbbqdl4fi7dtgmvw2wjcsz4mpcsjmku96dtzmsywk4v8tx07jmd7pzygojvzc8blxwryoa\" ],\n          \"googlePartitionCerts\" : [ \"77anh39eh0m96zvljp30pp1s4s56rujwgqptwyznrx6vhmelap5nziuf62upb6rw93nuqts6q4qdf81li1liank7zxbic\", \"dw79c5s5tm1ldr5e6985h9cf3c1soru14jsg3rmlxdar\", \"vpb3y4skzw2uu1s4rf7zrtwjjo9hicrh442hkgpdtw0n7to7dsenvrc8h79g8409zohkciwz63fl7dqcf06peaf07rj7uotsehf70zpr3dp6pbjne02voh2owrny8iz\" ]\n        },\n        \"content\" : \"Quos laborum eveniet quia corrupti. Voluptatem eum cupiditate veniam. Voluptatibus sint eaque in et. Ratione optio et ullam nesciunt.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"x86tw7ww8b0dx7ztnjyx6zj8m7xyqo57ced180vhq6r9b16sbrv15i0ele2t3bqd2\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/703275\"\n      },\n      \"importJob\" : \"d5m5rl80r10sho1u502r29srolgekm4su4vbq97wk6oe39uil8ogv5mkzxiyclp8ligx6l6anjghqjoe38h0g77kfq72g0l5jdd4o1umn22mbf0ezsvur7me54ulby08vjyaq6iu9nckqw8t20nvpuwswb8urrfo2maxxkms14nfj3ig0fhxrfo3tnh\",\n      \"generateTime\" : \"2022-04-22T16:33:53.281428Z\",\n      \"destroyTime\" : \"2022-09-21T14:39:53.281458Z\",\n      \"destroyEventTime\" : \"2022-07-31T16:49:53.281488Z\",\n      \"importFailureReason\" : \"mbvef77iv9oagb1la02yljmhw0y2vwvbrd6zkjtq81ncuxx5ungmgdm89wkh3yqwopbjqc18\",\n      \"reimportEligible\" : false,\n      \"createTime\" : \"2022-06-03T14:00:53.281535Z\",\n      \"name\" : \"Enda Metz IV\",\n      \"state\" : \"IMPORT_FAILED\",\n      \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n      \"importTime\" : \"2022-10-01T15:01:53.281632Z\",\n      \"algorithm\" : \"RSA_SIGN_PSS_4096_SHA256\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"17i60dq7lm8pctfvpe6xz3zft2kb79yuq1nempedejdi\",\n    \"nextRotationTime\" : \"2023-01-17T14:16:53.281705Z\",\n    \"rotationPeriod\" : \"usjri1dxd8zcxniuvkl5uuo8uke072c0lv602whv7nnkzlkjkulakbnupm9\",\n    \"createTime\" : \"2022-11-16T14:52:53.281752Z\",\n    \"destroyScheduledDuration\" : \"b11ydzatf2idv4yjmf0m8z9pp7fm1yy7wutj0omaiceufm4fzquif8x7o1ikxf0e3s6mp7rtyfsm14sxss6uaj8vzbsjjnzoqnisj1l8g0c2fr25n40z0e276sd1phh3z1j1fbcpda42qt1guadp6q\",\n    \"purpose\" : \"ASYMMETRIC_SIGN\",\n    \"name\" : \"Victor Boehm\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"algorithm\" : \"HMAC_SHA224\"\n    },\n    \"importOnly\" : true,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V1_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"eg8214jyzm0zen4ro7xcoh918cmkxd7st4anbr9s6lou7t0uu4i8jxbzhch091sg1v3jh12qqlj8mp1xdrggpp0b65u5oa9kdmr8skjp4mj5b0qi2infm1mx5a5230420safnyr\", \"iwrc99e1kxsandueork02sxb7lyy45rlfammwidt1ho3vib1lmqp4wr92ciekrkl3plcqybz25txobac35f1bunhqzslms8rsgobvea2akyuokdvey50u41b3i5o9z4ookm3qwxndg48r69mkt02n05itx5evgafyk\", \"ldps1ml0wpvb6bvouxm9ddfkuxkwk6jbkvjlp4qvq8a3jnfwkltusuha1uyx2a3niew73einco4x3b81kub621hcf9t9pkp38fyyvkfraf44xp2tw9icteflczkdc9g7h0ptplct1obdbrdnvwolnxchmqc055h71s7p1e\", \"1fwhj12xc867b5t5mnuf9dekzvr3y0f00jev4ajsqlwmo44qmvmfe7w6ppi8p8157g\", \"bjqtf1r6kpujq7e3v4azbvt22mlh1ocozbuog\", \"nu7zwnfmlgnnlupdrjzcgd3tjhqpocver8x3qqdryxxi7p1g4txf9t50nglpt8kui7faws0txzudhe4d6z1yjb2l54rqpj6pkw2e9vcbv1fmbkhs90bh8bipdcdscxrw9m5h6eduata\", \"ky5qjettblfq9efvbznciij2a0vhwm6428dxbi9ulz4uxwwerlrnbrgg42lhzfzcb665xupaba20kcu075q2w8n37gsvio61gmwgt84opfyup7p5chgon0se9xfhyeg03abctf3tfi9m0486qzine7uhs7up6rhgxjvvo4qst72mu0j\", \"hg4efs9lu7kjp1wwc7zt5bpk0lmg7a0vj12n0ebt757j2texgitdsopvy4vwluaxn124ageqz69gnd8wmxockbz2utqvlce6otga7qkctgt\" ],\n          \"caviumCerts\" : [ \"ezjc9yp51tm8y37kg5lzze6tqgf6l530mkv02qmiudhsoxbhdmbo0eb9xb96lxcm9egje3omj8q2ibvxarofbkv1kbv9ij7dturicbo0uqavo35pbbdfengulf17ksmmzzn00rm8lxg6wfq8k6t0dlwiing7hda88q0mcviyufolh0at0ttg\", \"d7r72ltc542bze1cmfdb4410dxao\", \"77lmvbyio959v9c68jvzq5hvtrl5ju4ja5r9o15s1cik61biz21qiefdo1oj13aegm4uhax4yno6x8o9w2arwzqosyusa1biwf5w9gqrj2bm8hir5rdunzsv\", \"xb9orvarshsezoutbwgt8vus8tgnqj57vu57dm7enlf5z71rczegwvhpv53i5es05en236guqjo87zdi1g14qpid218f7li\", \"nh0c5o828ws2dzlkgzs2pns7frgatv6zitqgbdhpcu597oejkajqi6rdpf8j3bmbtdkohmreslc1e1h2vcu3m5uz56k4k\", \"o8hsxm8g5hdcfx8piizj7yqnzsty5s2cb3zv7l35zjlp2k0ipgbligxcv9tpb2yef6xwkq4fxhaks3oma75vx6hex0hlav6162n87jj4oq8e16btcbggcqxcqwaarp9e5u54fjt4sbj3qxugsvtp3u9m16zckig4nsjbmxd14vjn9cniqkwm3k2ozh7nb\", \"e032xhkj74bsa3h9fml15nf7dri1tv\" ],\n          \"googlePartitionCerts\" : [ \"7969fwg5tktokdihini5fx4233jlw4dozez6wxtkpfvp16zkbtamf4zr7fvuqab1iij8ga4d6g6hp74t6fwf7zi1acx5dyn4t0bwqlt98y5f9o8eua44fguww3fk2hxsfh8iu4prbjtc7tryjt60ohfucbfgg1jdlgcqc9n7qvz4lim6vpp\", \"1iavuvlqo06ne1zkrr0c4a86fu8716w222w5tj2ts9mp9o7wag3hvg6h2btwxqy409xvuo6ruy6lrzvc1jb4b61z1ecsag6v4wlcdktsmctico8ni78typ5nfk4m0bwn0i0au77j5jbbwpcpf99cxcayzc68bio\", \"galarvvdbl5mufuhpm0ki2o3q7y2kfu0611g9me71rkig6w53w91nasjlvbz1xa8uyox\", \"15qkl0dhxfo5c0cex80ndvr3wzaqhi5pc75p58dfrq7ceej004ohyi7uzi49dl8nv5x64aa5vuv06z9bwq6attrbw8j4pll32gnso356n3laqz91qa4t7lykg22273i4\", \"a3f7dt4avh2pp959lnkvog55rwz4pr4kujjpswnwz5q2554lf3gae69u9ijh7s5kz80fhh\", \"0hu16hpmlp92khzmdfr7ilo1phfkgveh8ia6d72vdvre91ta4k7otjjvqj6jrt60gpbl1iw3sxbc2m8zbj2p0sdf7q0\", \"f5vrgy4o91a1rc5u834025ksax0n255dcnz2b95rrdlwhwwax8p0lf83j433m25yyzscethljzpuokripsthhqp80upw1c\", \"qlpcih77popzpu7ytvzje1gmq487eetnywbnha413n\" ]\n        },\n        \"content\" : \"Officiis vel autem quisquam neque tempore labore ut. Quisquam dicta odit recusandae quo. Nulla cumque reprehenderit reiciendis est. Placeat eos alias.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"wxx7s3zuuk76nevpzqwf0jr7t3tvnu6lxol2w6h1xl1qnzo5ru77bn1s34meazxh0z7oq0pp8b597klb7duj2w03vcbyr5992eoj88fx2a0rzga6rp57n1mxw317norl6h9hpbn5v\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/930593\"\n      },\n      \"importJob\" : \"40kpmsac6y9agte28jdmu9g2hcd1sj2nx6qg8ib6wkjux84g6q2cpbbp26pxlb4koy2axp1gxbpjq9swnf6n645nn4y0l2u0tq0snlku00xthsoskn71u8ljdhvtfm330f4mlubpu7h3l1fnlpjw3nk9kmd2qlnt8\",\n      \"generateTime\" : \"2022-10-25T17:11:53.282236Z\",\n      \"destroyTime\" : \"2022-09-09T17:17:53.282273Z\",\n      \"destroyEventTime\" : \"2022-06-08T13:32:53.282306Z\",\n      \"importFailureReason\" : \"7fdzfwb2ac83rupy8xi9ip7qfpaq64r0p4wjwajy97xqwrec77ntoiovj2o5eumye0i8swlhqni8\",\n      \"reimportEligible\" : true,\n      \"createTime\" : \"2023-01-23T15:25:53.282355Z\",\n      \"name\" : \"Mr. Collin Homenick\",\n      \"state\" : \"ENABLED\",\n      \"protectionLevel\" : \"HSM\",\n      \"importTime\" : \"2022-07-03T16:01:53.28245Z\",\n      \"algorithm\" : \"HMAC_SHA384\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "911e1c9f-2638-4440-b534-34c700d34667",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.282723Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListCryptoKeys.",
            "properties" : {
              "cryptoKeys" : {
                "description" : "The list of CryptoKeys.",
                "items" : {
                  "$ref" : "#/components/schemas/CryptoKey"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListCryptoKeysRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of CryptoKeys that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "3bda0cf7-3fd2-4b30-9c27-d2b82b4df729",
    "name" : "Import wrapped key material into a CryptoKeyVersion. All requests must specify a...",
    "request" : {
      "urlPath" : "/v1/56sy2405nfksoge6epcxxhg7o55ryb4ddelo3rmjp/cryptoKeyVersions:import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"4514lblgnj9stojg7m3odr19vbjwbdmoblywlljy5nafektix7gpv5liy1v4c6r3l4k5m0h0bbdg5uvuc1\", \"dow6snj2vb6r1f4uk1g9jz5tji8w50leu0u7c8k9cbn1d5xww4r53ljupwfr0c0wof7ibj82ffdxcguc9wfgfhvbqmsr44kff0zndts01tq17ibaxr4gab4n5670i4kx1navwtwm\", \"8044tff4ddd2c584swwku7ef1ryc9wdbh5gauip240knim9991xbed5av7oi5zmuwrmezzbmeh9viprak1hpiqfdzyauijlerqygqtwdhrpbcahe0nsod6lpt1c2vuc75dmdnx573wf9xlwyo56nseq\", \"03zh3npmy5ydhgdwsxpo97t1wzmkiksm4wyxurwwgydv7gahx1b6kwzx23mc42fyj5sjvfoiuznvtatdw\", \"6oxtwk2kiukt128qt0nge2uc1hku3nqam12x7bl0jdssdjydmldou8ah2suiuijqgrh3o8ja12ii0xx33dppgsg2l3loq9swu65f9myju0\", \"i1gud071mh09ih5eyebucr0c9ke5l7ntazgzu7vgc9t9qx0l50u12m3n5wha00fk9ab39713ex6d0z6gd9q83c5f722xn8na75x75s5aln7p16a1qjs9r8o67s533zhqh8vq38f4vtp9tv2mdbbroqyi14zvbyzx2\" ],\n      \"caviumCerts\" : [ \"yssbhdczjde549y48cj8p1ifq20ypqsqxdz3og155o1eyf50d\", \"aros1m31amt5598g97mgd5za44xmadwvgdn1rmlo29x236um9y783cw5wctjq2zhhamtblbomej424s1l92dosvupptqi99n5xyhre7rt33y4dyqxdw8gt6xjfx4el93jq7wofb\", \"cigq1ns1q1mtiandiey09p10wkn7r2yx7n9hhw\" ],\n      \"googlePartitionCerts\" : [ \"0afyqn9yxf9vshnwryq4w174k4y8zmxqkqzq9b4n4q6twh4ubibqw0jugmroeemp1yuprh2rrg85nthbtaltknwonqwdu3gt17gl3fuljaj41lxbsfykkktvhrvvs3ri8gnyo7p\", \"ittspvrfdixsufzemel0cdwv8h6vkgm1jajsu8wa4mqns9zmqa6rv2dk6zusroq6sio8fimfynf62pp8bfl0nzgie8lvhtq42hur730v14x6p38etlva0bysnewkdiqykj496k7wr5lejkg7w4ypu4ndj3\", \"e7t4t27n8vuksxwkv5km6gf9izeogxi6zw7z0nbol4i3gd3b6hb8w7q2esjgbxcg63f2y35y1mlv37amqloky797ztdsnp8r3c8oik1rl3qrtmnvpn6xdpv91famhwk0xqa2t0fuff24zy70w6ecl9pad9s7clgmmhijq9rro8j\", \"6hypxfmslfo9p5ry\", \"gutso5tsysjg424zobkwvidqo97nrh7qftd4gmk6vx8psdv29b6thoptwi2bbbrp8jiuvaxksvrhgrhebpwxty0v\", \"w0cdvfyxwyt27yb02llrq4kiank8e1kihsdn85w9b5cdvvs2z53b7zdejf66pvfpbao34xq6lnpffz67o6033ap6mgbsb390fa8k7gs5okgybrpy7mg6k1qlgumm3shkbcuem9hqyoq0839glns42x5\", \"tjnvsuctumuuxlmczlf30ocbxhld39ab68zgaf4glf4kdjqnxqcuno4istmn8h7gyfzurreavytk8y1in71m7i8cdlzsqs91vv5\", \"wvc5nqdwc1wiyrlbvpwrxh0zbp1af4baaqogznb281ni2vgh3a8vbobz90hr01etmz\" ]\n    },\n    \"content\" : \"Et ad ex necessitatibus. Nesciunt saepe doloribus qui. Nam tempore est eum quis voluptas.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"s7obo5gotoh78g58d3sa0ez410n6djch7hww34k2ecj679duykkhghb4zvcawpoln2gxuyjhzeb50aa5wdis0qtizbk14eq8bdpl3mdjng4o7ub9m28yyn4u0o8qn0fqg6zwk92\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/459950\"\n  },\n  \"importJob\" : \"aayiimux4zknlpy6ph6ooi6ov4sfk7mx0qy3pv6apin0ut3gn3htvtpqdq9nxfc1v329q59kq0v6z14jr\",\n  \"generateTime\" : \"2022-05-17T14:07:53.276109Z\",\n  \"destroyTime\" : \"2022-10-30T13:57:53.27614Z\",\n  \"destroyEventTime\" : \"2022-06-05T16:32:53.276168Z\",\n  \"importFailureReason\" : \"4i4e2mg5dw0l0vgqoadzwg14ztvp5v1wrz8gv9ellf30tei6yv29qou4zzugygd1h8vronz2gar\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2023-02-07T13:43:53.27621Z\",\n  \"name\" : \"Dr. Elizabeth Will\",\n  \"state\" : \"PENDING_IMPORT\",\n  \"protectionLevel\" : \"SOFTWARE\",\n  \"importTime\" : \"2022-07-16T16:51:53.276305Z\",\n  \"algorithm\" : \"GOOGLE_SYMMETRIC_ENCRYPTION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3bda0cf7-3fd2-4b30-9c27-d2b82b4df729",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.276501Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "82a5e31d-12ff-4c8d-b430-fdee9bf5d9fa",
    "name" : "Create a new CryptoKeyVersion in a CryptoKey. The server will assign the next se...",
    "request" : {
      "urlPath" : "/v1/aacgco2xxb08f4fmhbxjpcnlypulc9ke06r1riorg4ah7m81aj1oaj7sy2owwyuus6tbwb4n2f8tptlzywv3a8ke2/cryptoKeyVersions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"7e6cocmu5i0em99qwrr65v2go63xthraln14l7oi2b54ehlauzdnfm2wurlhklpu74ssdb3evye7hmdqth56x8ah7spzslv48tmee8lq0dfi6ano1mb2i8u91z4sot2tom0c85gata0af24ea0ljrrae6marlsemof5alee5iomd2hwp8xy5wcq8w095nyb9esa2\", \"td3m24u5q23ahmnfhp1qqbv79koc624h8ebo6eae7nxkf429tj3xe3q0dcqlhjuabuqd4w6wz2rl5jha6ij1zxbgxohkaxvjl87shshml59amktgas0p939ubyr04iu7k8o5s4sijan2m29sin51ya9k91ehjycc6289dpmvjbpyxydaxqglkd61l9w\", \"wie1d34e71j67anqzf2b02j8vtkdy3d9aa1gu7pqzngtsipt6utnhdsgp4vc7m07o5py4\", \"mwk0i29igkwru0\", \"hsedfap1i3myjxgu15z1sb2wx6\" ],\n      \"caviumCerts\" : [ \"ij2npcm6s6bhzynpcc1d\" ],\n      \"googlePartitionCerts\" : [ \"cvxwtk02qbjjcy8ecd5pl4nt8iczstxi8n4kikmrd7slnjsdda3lx5357n3dk4zg7fe\", \"wb2j72sjurggymwdlxatdsr01oial2vyxbbgwfp52x047eh5vbkpwq2leugqybletobwpjo6bb70k94lqheuuhgnhskfwxl05zknft\", \"8jc7wrfm5qdgxrp97ye7fkdf649lmlmg2cf7ia9jesdj1zh9l39tqf1r4uwp1hnbo96n964bf621o1l2k91bfpl84uww9ldml642yfav8anxasbcc16jt5tjbazddpsb13605s5qxvx469w2xstcqc1sc9g4ik0j1c31\", \"nqkfkdl6py2xx0auuowx14we7l035c64ymb2jsc7mq1gw40xqv5hb38vttzgh9rw4a29owbthox1um95stkoi1ui5ma5v2\", \"q7td5dn9fy8qzj6n2w6xy17tefazznpm74k3aw8l1wpqvd23agmdy36gvum20\", \"gia07mq0cx0vtcew7q1muuaiu21y8m1fegokcq8ig331hnow0dzxkq8pg0vvr3wocxve4wvqe3\", \"7thsnmdj5arihxs50fe3jid0zi9r37m\", \"dzc5iux85936u2alnbxhsbdx871ctyyka57r\" ]\n    },\n    \"content\" : \"Dolore perspiciatis sunt laboriosam accusamus est earum dolorem. Dolorem odio dolorem magni laboriosam. Rerum tempora ut iure minus possimus.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"pahant2zs3x9ba74tbyh2jdz6sww4dxg8mehb2fvrrs\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/544476\"\n  },\n  \"importJob\" : \"1fbqwc9zi2aed0broxntyntlqxz7p98cb3c94aogc8lphrhi4bpzgr667frwh8pqa3u7j5pmolzw9u2o5s5rgpgz9zjj2hbm46ipgfcjgvasg3m9h0tkrd903ekho1ia4hbfr101r58tbc029o5zwre9n2w5o9qzpuiw14ziholqxqqplzbk0uvvwaloybm6h\",\n  \"generateTime\" : \"2022-04-30T15:42:53.275036Z\",\n  \"destroyTime\" : \"2022-11-28T14:51:53.275063Z\",\n  \"destroyEventTime\" : \"2022-06-07T14:13:53.275093Z\",\n  \"importFailureReason\" : \"2y4s00pumtfiazfefrif8d9q9fy3rmj6dvwkr57w014coksevpt9u7n\",\n  \"reimportEligible\" : false,\n  \"createTime\" : \"2022-09-16T14:05:53.275136Z\",\n  \"name\" : \"Emery Stark\",\n  \"state\" : \"DESTROYED\",\n  \"protectionLevel\" : \"EXTERNAL\",\n  \"importTime\" : \"2022-12-20T15:18:53.275217Z\",\n  \"algorithm\" : \"RSA_SIGN_PSS_4096_SHA512\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "82a5e31d-12ff-4c8d-b430-fdee9bf5d9fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.27575Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8163fc18-afcd-44e0-ad97-b31569bdfc42",
    "name" : "Lists CryptoKeyVersions.",
    "request" : {
      "urlPath" : "/v1/mxjr6ybrchl2irgz3mfldsy9893drjx2lzs95wngfyown52u981qwdhbntpueps310zacmr07zcpplr6dypj/cryptoKeyVersions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 622802563,\n  \"nextPageToken\" : \"i33j1dii6btmhj756hcgdx8uldeu8v5ikqvspymz3xtfjrzurajbrn09wovqjv3epl9jelyqgsbzs44zpxtbt4hicc8nbv4ldl8zdpewl136sgu3cnha64krvvs5zczo4iguiy9h23a8eaw78odp37csveh8zk1has1jrocob0qhqrzvdzd1uen2tlu48eec7e\",\n  \"cryptoKeyVersions\" : [ {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"aizud9aooiczmswzo0etqtja8npuv1xk6nnnitl2bkdi275oo7om49rqyp9eng9sx2rqj1u2t7l08rvdx32jpytrxya77xk6dssjx57q6i8p3bo96w85d9e65wpu\", \"mflrdec0dzbhbew36f6kccwz94sin4rqvoqd63bf04uy006diq0zhoe2gd1nydl13tannk1qkd5swgoj3s65jgw65r3sdtszezsakq58z940pqd5d0hevezj0nvgat568g9hcukmj5l6rt778c8tor3a\" ],\n        \"caviumCerts\" : [ \"jyh8j5e2v3na32opz9zrkmbak8tnvbpceqwl0o8uk05npcbjmatsb0izg5vw1dpoe7lrevtqs71tpz0nxweicqkj92uffbcs5lvr4wk2anorykfrb1zns20kuruip9nvozs8eti6gtavh0jilhclx2mcwnnr1nlt6te9s4dz8gfj45oh7o5ohsnjv6d7kpy\", \"dwebq35q3ck49bpp0szk3reuzpz5e1pyml19bte3ilm4lrvpsu91df93vsibkavni46umrlbhjbr6bqo0cfbx47ahy2bi2xh0i6d4s4pqd4phorrhragzu8uvhs53cn5074ug547f2s7ytnlhn12hik6rmn3opd7ekxm0x4nvczzxf88a9o8dknzc98v95nrvfwf\" ],\n        \"googlePartitionCerts\" : [ \"1y1h2d7qjuc2wwafwqiqu6nutkhmabe2cp0ewpu5u6tgwbv46lzncamfto2150x5tdfnyvmy0w3lqptqdocrprk0r9xk8t14q7g6yv8c3ps33e\", \"7do8a8q6jtobpsvvhu1vdu0gw5778114kpjtpm4vx43vrsqee1mbkvo2foz61c7khjygmudivcklco3ogspqso8495l6mqmaukhs5qdf9rxzostm07t14zgaarymepq52fsbjkfzpdzfjkhzy7sr0iwk9763u64xu5jjqy39xvqrxw9nys\", \"nyu4ucdkkfouoa2evt3t5i8048y1arsvnk2rbwaxmmyst6kr7e69a3r077oy87wxjgdeltg1uz4bx448cazbdfsd50cba3odgm1dw1xbjkrrj38\", \"qtfprb1iws10i38ih6ahjvd6iatqdrnc5krzvpueqceb7m4wxig5yzv2dy70erltnqkpysrsfk759zqdtocuia8zxn91lo8q8rd2kpposch\", \"u96m24szq895agiyj7rq25ooyly8zr4yzg9k23j273irl3498f96y0sp6vdg4qhw93wf63pniotvycpjph2l0ltf6nj9tdoau5747rpx4o81synfakxzspajr511p3oy0fi5wrgh5a8\", \"38kngzr160v5nvkmlbv37mltm7ze8z39d1gmy1x9r8pzy3fyux9bfsxp6c3rx60amf93cfl2sjspax4m8wtiwrh3h17id3trirq2eamiqtxdijy00us93xk7r3ydb8jgp9gi4owkk94wsvnwogukdpmq2qd187ob\", \"b8sw3tqsc681uh7637hp4qq1k360qb0fqqli58zo07itcf2o4g7byb5i78686gzmh0guh04csei3o7xy9lfawz1ksijhfkg3frv86pxhrf8oatd3cb7cxirbvjrz0t3lzzgoswyyiys8j2qnc9qbhdj6og4memadj7\", \"2blo12mzhf4sqpq84qfhg0yoahmib9i9ym85i\" ]\n      },\n      \"content\" : \"Et voluptatem sapiente. Libero voluptas recusandae. Ab nostrum non autem sequi veritatis sint. Commodi perferendis omnis qui dignissimos eligendi accusamus qui. Ratione beatae nihil qui magnam odio eo\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"hdyv80xf4zrvzmyx1m8hg38a2baxetbd43ysn69blrs72c9415g8p4p93cc1y6lfcrifvbnm4m9z7wze1jxkb1q119pignc7982gyhkoqbznkv8tlowkoa\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/725903\"\n    },\n    \"importJob\" : \"8c4muu6gcjy2fclybh9vawcwy2qyl7zeago606mqfyk7vg189\",\n    \"generateTime\" : \"2023-02-11T16:31:53.272502Z\",\n    \"destroyTime\" : \"2023-02-20T15:11:53.272532Z\",\n    \"destroyEventTime\" : \"2022-07-18T17:02:53.27256Z\",\n    \"importFailureReason\" : \"odii4v5at30v31km8fck89hya1grknhi6m5ksanqel0cao2sq7n2ntcapz9c9ci5xi1ifweumnsmiovcbofi4z10lic0w087t5zlmagzrl0dxcj66ld0ux7phwirp2jt2mwf\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-10-29T14:14:53.272606Z\",\n    \"name\" : \"Zelma Blanda\",\n    \"state\" : \"DISABLED\",\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"importTime\" : \"2022-08-04T15:21:53.272695Z\",\n    \"algorithm\" : \"HMAC_SHA512\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"rg3s7g757o1vfrudiz\", \"549pea6qdx3mfae03bumrs0bjuazbvv483dw5tzgohzopiniix59yw1mglspvkyqoosf4zh3hh468ertpj9l6a97pzw2abnfy93jvxk3j8cu3ixxe638cs56eui5blnk0c9aklh8c4d\", \"xyvemc5syav0bcm84f32g5sakaxhkyw1baj56lx7qgn1qi9u7ryrnbozdju3j7zu0bkxp1u7el1hu1y9rus4w3rehxm2pkissmk4pew77xpofl1xg\", \"aiyf683yiezig1zl5f6kcwa16eos1bnet8nx5g9svbuzbdipan620ndsn1s5n7tu4jjcvstcex8fq6vz616s56j60k6c4ri40i91kdhi2patchigzdfxjbwh1dtae68ett2gof7nby013afdrcxamfc09qiie1q15oywfe3l\", \"f824hdflckbisa1th40f4jj2kgl8dflzrlwkut8uvoosyrpf2mi7v4bi76d6puuki4vde0gmb7vgc1lx10mjnqgqlwj6mf1jt2tgvii4be28hqcuaqkr7ptnxppmce1nce3e6f7ocl6qpwqvohb23puo3rxrbf61nhi0c3iixz835\", \"kzdkdqi3ws8ja0m3iruoxo29zn2xzdejzp3vmpbz30vbrgwra2dufmlmjtguwsd13ykjbzx7wlef9lswqe5p\" ],\n        \"caviumCerts\" : [ \"25rjtn93kphzeebz4vblp5mp532evtwebfd26927j91l6kmxi\" ],\n        \"googlePartitionCerts\" : [ \"25939aatxe4xjq3jbip5e5d3px3vz57l\", \"uj7ni6ky1dqmku8cd6rr92i2rhb0q4hwh3b1jk4xu7dv5p8bhifkgfsc1gsvo00hrj4e8h3dq5s06vf4pgjd7owi4nhz9hsn7zrwj4ry5k5tvc1f2jiyw2napossrwtcy30\", \"wuj9np7o4nx1ianbf0mdtf3f0bbfnzoq8cwqaiv72at6ethuaiyypjl0dikc\", \"ey52r3mmcxpxq04xtpw0gvstwmen8p59ez417tf8lv0mi1mro9jdn27rfhprdse3pfxtv3mlu3gq52tdtb0ug8z0deubo202lpdbhq3o607r9m3adwxuyl1137s41cnyu6c3vd40u6tw4g2uzrmuskeubsoxwq\", \"pzyaq82ocrkqloodsq8i0ihz8952mq9gejpa2mz8wpls0v0jguirumnkekf9u8jsypbisih4let226ay3nsyabqgboerrk52\", \"3fdv75ys29fci5\", \"sdj8ym11uykp54uo3pe95eglku6lvumep4ilwsome4ym6ghinef5qs2tu6xy9zur9oaogs6bm43ruugcky3569iu9asr3redft3eiwgl5thycbls5weg6d3s1egt680196i9g222wgqds\" ]\n      },\n      \"content\" : \"Mollitia ad est ut eius culpa maiores. Et nobis in facilis ut consectetur sunt. Quos vel aliquid ut in porro aut fuga. Voluptatum laudantium rem laboriosam.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"u08xbujp8hmrlc7oc56s0h517krh162q9yx1ewa4zddqjg5h9uj8r3iziri7mnxvolc4yoi2bl085nlbb95sfi5y8g2vd1kuz3drmqfs4vava23dr1atjlof95\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/808801\"\n    },\n    \"importJob\" : \"khkq8y2hiictr2q5byymbz1z4xkvo8l42bfr\",\n    \"generateTime\" : \"2022-12-11T13:43:53.272983Z\",\n    \"destroyTime\" : \"2022-04-17T16:43:53.273011Z\",\n    \"destroyEventTime\" : \"2022-03-24T15:57:53.273038Z\",\n    \"importFailureReason\" : \"z0uw712gcs96ogoxokswuwhtv0y4lrr2emv76ndbj5zmcqnkvhyskj3tg886n6z269k0oc7qkhaic0qz9ozsoa9ehol9rftdcup032fzbmyi2wbhnrtxukoh7o8l388dnolzxipg12ep8fs0dlpj2nasqlnsdqjs0rh0fb9\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-05-07T15:38:53.273081Z\",\n    \"name\" : \"Jordan Shanahan\",\n    \"state\" : \"PENDING_GENERATION\",\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"importTime\" : \"2022-12-02T13:38:53.273166Z\",\n    \"algorithm\" : \"EC_SIGN_SECP256K1_SHA256\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"jovmy6c423zphvtnuiezsgb9u8409vv51hhd4xsykdd6kuvkjlmxhg6iisw0l7j5mbr20d4frluadna81j82lyfc0dbhtf2yxqn55vzqxnld1nqnjki8ogaakk3n57fxw60qcu680irzf4amzvrp7t7x6gnu6rcx5ai9sql8yz\", \"n2vs4zo2vdiqvz77xxn8bdks0x1xlnwme18ysd8m0aay6pkkri1q9l6kgerfyn4pl2tdxqxa1hws2n4jzn68t9bqvcti3xxorkmbuo3jirz1zr6fc85mvqna0\", \"5mwbv1i462fpj0z1u8zsh6t4\", \"4h88k91tensv2rbrekh56llkojly0ntefoq5ry0fa6srla60r5f7xonntwkfq13avgrau83zxjnrdrc\" ],\n        \"caviumCerts\" : [ \"86s145zf6dv0j68vzkcen37ia3rxonkxmdmkfp4urriez86halfysuurse65j4buof0f2wian0l6nxrmka7hq3466rrdlgjqv8o2hze646\", \"82olrs5mog11rf25shiawbts4awrdqtwhn2rnkmlaxb0yvz9k4iin5ua4t9eaecmdrsl611fvrwhjqfigxt0y249hy9u14yrmyspevuothmsknp8rjqq2302j52u9t5f8jwadnzuvyiqgymielef1zcp1e6iqnwxsolw2wi3zns1vwx1g9p0k6fhgd2m3eke2f\" ],\n        \"googlePartitionCerts\" : [ \"t9yli3ab0ofy2efdhm2vjpnsnv9dqiuz7z7nqcxdu6yjslpl8e8njiavsigpoz15xj31iau01fbnoj\" ]\n      },\n      \"content\" : \"Fugit voluptatem quod. Fugiat sed rem atque tempora autem vel. Dolores dolor ullam. Neque sunt repellendus ut.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"2dtjmnn8effwb3dbzfmhjmjdf8x9ps29cjzuzrq3ennie479\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/290779\"\n    },\n    \"importJob\" : \"etj5n6\",\n    \"generateTime\" : \"2022-07-26T14:23:53.273415Z\",\n    \"destroyTime\" : \"2022-06-27T14:42:53.273443Z\",\n    \"destroyEventTime\" : \"2023-01-11T16:26:53.273471Z\",\n    \"importFailureReason\" : \"8jtdl169fvdgsxf3ypz7rqb\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2023-02-11T13:55:53.273515Z\",\n    \"name\" : \"Miss Buddy Funk\",\n    \"state\" : \"DISABLED\",\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"importTime\" : \"2022-11-17T17:13:53.273603Z\",\n    \"algorithm\" : \"HMAC_SHA512\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"rz65pyp\", \"s2q6t5blpxo0hl966q8eu3ma7rxf4hydarceeo\", \"fmvqiw7lba9ge8cx4uvlvlmy5wboxtvss6b3sbdhf3whbnx5tgq8wwpw0jzn5zg6vmfh6zaarsbsu3aoez0qp5dy5467\", \"1m5i8ex8hs8b945rji75p175v9\", \"bmnlbrsqllng9rw5y4aw813znsqw12wybx3uegou5rn7jm1b3f2ezgh8zrtcyopdztgeuuw5i\", \"uzyk2gxy8k72fyq93dcf8qt8g8n14d1dglaxks5tiav7vq37\" ],\n        \"caviumCerts\" : [ \"fnxqhfrd5b9umwkgdp9bs94xs2oshtf0enpauv17zds0nj960vietauemshnjs0wqj5gt6jlbp0tuzceavmtf422t6pcthidrsmd2falpueuc6pwk1txkydyfrl23cvhxhb1g8y1x4g3o6gwwehx4\", \"a7yz25d4yzcnq9bv25kied530en3k8dr417xmmw0gqrf6e7ju6fstkqxqj6\", \"crmkk62dufu3x72nqcsysk4d072v6y0nm8p8lfucngsoi9fuavlmp8i3pzhm5n1td3u1qv36e4cwoa8vlvqxoc6p70g4nt43t4offtvxr02avyegvb7ccmgm1fnvolqyujwfcy3azmfrfuazkey5uzr0r67irzrqowd38xj41rn9juyw5mhqpltluiftt\", \"mfd4nzlu2kjtykqzaw1gbh8k4tukljxx7k4ajfu578rlccsz7dm01uwrqzm41fysu1p09x6hjoki\", \"pwv87ttikt8e3hl2opgbkd43j6r43pkuulnqo89\", \"66kptusprjl6ptxjejvcap3sahtwccdxqeydyzmr18yinq4lceh4ru9i3ker\", \"a92vkxomtxtpj8wu0t2u5tszclu172y9ea0o1owscll2gzp1u9rzb\" ],\n        \"googlePartitionCerts\" : [ \"hi2idp2rzhx8w1hdxbmbn4gox8\", \"5027iyhnp3ow1nl9paztqc07ff6es048cr9hdy83t5vkyklgji\", \"9fptag5rrg2fgimvyhq0oxk7pxhy5ob41lgcz12v2nvw62lcpzaf4ntpepiku90jj8fgsocsa1xzji5ft5sdk9xylud1ckejo1ox\", \"vko5iz4zk9nvku7i30\" ]\n      },\n      \"content\" : \"Odit provident ratione dolore et. Qui amet hic ducimus voluptatem voluptatem aspernatur. Sed maxime sed aspernatur consectetur deleniti necessitatibus in. Ipsam eum ea excepturi qui quis.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"ulubvesom6zjv0fts22q7e4xbex1pa1aubydjmtiy2z8pfq0gcpkvy8jmqppa5lotugzxplsxwgtdzh8t667vu5ze898q5k2h8ioj7o2gqvvbas1742jli7gcztqjkoblsgtj82ld\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/644165\"\n    },\n    \"importJob\" : \"ghwmnvbn71pn9jptuzv0mckf3ywgjzww4s7msal2psubqz2d1l13szidw6xdt5qdka2pgq48i3xq4tps11a8janzv9ug25fvafttzt8z86dqiu1e2dku85nk0aaqmsv23c0zud41hqlf7m7jc3lqpvwezl4a7p7yf\",\n    \"generateTime\" : \"2022-09-03T17:09:53.273899Z\",\n    \"destroyTime\" : \"2022-08-05T13:59:53.273925Z\",\n    \"destroyEventTime\" : \"2022-11-25T16:24:53.273953Z\",\n    \"importFailureReason\" : \"2lnaryxt72g9h5h0wimm5e20f08jzmi7khe7qzzzox3pw946om2w6rwxnr3rmdkkxd82y764kgafk16zfjeu9xp7lvyxs7lz40o4rf2k4nbl5lhojs3o44dagejwyovr5di0k3zu33pilai963czdpbl02ug86cikqbqd2tnx61\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-11-14T13:32:53.273996Z\",\n    \"name\" : \"Omer Fritsch DVM\",\n    \"state\" : \"CRYPTO_KEY_VERSION_STATE_UNSPECIFIED\",\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"importTime\" : \"2022-08-08T13:49:53.274085Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_3072_SHA256\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"z1mifyq9fkz7qx2odtlgluu59853do4y505xrpa5wh0k6cmpziaqe1ymb2t0x21pcs5e6mrqfwz0ob440tdgbetlwq0g6vlgw74a575xkws4t1o18erj34f02a7pgc2gp3g533c1bxlv0neo76a\", \"psosiqc17by1ofc8wpwff54no7yhccizgqa01idmfg39r2xhy7sk80huauw2k3qaa568q5arspw9i5nnfxpni4k2vi8a67t7d38jaqscx9vlkj4pxr13sfio\", \"wnhbguj707bkhhn8z50y4nhzph9tykn8jsu968b66c6tddjs9vpql9gk25tjei6e2otwzrtr3dw45ap5xu353u73xz6c84i6naisonvgp5qp39w21xgubyv2iq\", \"0g0vwep9nhjj3j5t58if5flwcr61yrbfqeothn17agh81ugrrxv2ee8nrjisg7a59jria5tcfjo44wxbwoek2tew9v81uklfcsi3tlcqgz76llesqkduwspfv0pqnmq8etkvno\" ],\n        \"caviumCerts\" : [ \"ithbu9inizh7e77x3srerwtaslj7q9o5puui50rpqozxsruw799pg8ojcs2snhszl4dapvcj7gses0sw1l675ifnjxy1c4ijyvi7zdn5yhk9emb6q4w94inpvljzt16es7leqfc0e5nijsg46m6i7ojgqhdhahr8j1\", \"l1s0hntpmf0cafhhz5a55cq1u0byjwyncy6ujvtqf4zbsnp47ztqbzd9efm8nscuyy7gjddfnlvmf8up7lrogyirfb8gbqodl8i0764ki5gl5giujc39paw0io2kfye6r4plg6501x8llw3x06qasbfiqr4hg\" ],\n        \"googlePartitionCerts\" : [ \"ajqv2mx6q0anlilyjzn231itr93j7bu87hj0q2kpjam4bpkwlh052\", \"lgla1pmk7ouxj9s1wr7893ad1\" ]\n      },\n      \"content\" : \"Omnis aut aut dicta non. Rerum nisi dolorem. Et placeat corrupti doloremque id et vel. Commodi eos fugiat eaque laudantium modi.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"x1ehy9n1r05nva5yxdcicnurd0b7b2grs8gzktovfskdpa2ixael0w9k3swp7qtgq9wo6dnjwm0grz0cf7p19b6o3lzlylg1wuzc54i9pmrzz4qi2m1zt3r8a98wc1qvpt1nz7kwzkeu0psdehatndn8g1b9pdea\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/130708\"\n    },\n    \"importJob\" : \"n9fhv4p2nxty6sboaazvokaaf2130nqtkb0gocuvdij20rfy9li\",\n    \"generateTime\" : \"2022-09-19T14:52:53.274341Z\",\n    \"destroyTime\" : \"2022-04-02T16:56:53.274369Z\",\n    \"destroyEventTime\" : \"2022-06-20T17:07:53.274398Z\",\n    \"importFailureReason\" : \"k6frni2l826imt68z11s2j2vinlnhbhuw5kfiq4o1bp0o20jnppcpr9fs40ocwa4df1szkubwsx1tqoa2u1zobsdqmb94hftgo0qenedelgbxxfht4vykrx5k6xqhylgocfhv43w\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-09-09T16:19:53.274475Z\",\n    \"name\" : \"Lorean Upton\",\n    \"state\" : \"DISABLED\",\n    \"protectionLevel\" : \"EXTERNAL_VPC\",\n    \"importTime\" : \"2022-07-12T15:03:53.274564Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_3072_SHA256\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8163fc18-afcd-44e0-ad97-b31569bdfc42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.274748Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListCryptoKeyVersions.",
            "properties" : {
              "cryptoKeyVersions" : {
                "description" : "The list of CryptoKeyVersions.",
                "items" : {
                  "$ref" : "#/components/schemas/CryptoKeyVersion"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListCryptoKeyVersionsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of CryptoKeyVersions that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "dba13976-64e2-4969-a646-5f8c636d4566",
    "name" : "Update the version of a CryptoKey that will be used in Encrypt. Returns an error...",
    "request" : {
      "urlPath" : "/v1/Yelena+Stoltenberg:updatePrimaryVersion",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cryptoKeyBackend\" : \"lwdu6brzpvrn3ezmaiht2z6qm4gukqd23t9loqkc9itxvsbma6jir2ji9we25tsb5mhpdbf6ybdwqkbtgp79s1pisog1w0uwwwe0o1907imtp37hko67rjgk6v9oh0\",\n  \"nextRotationTime\" : \"2023-01-20T13:48:53.271267Z\",\n  \"rotationPeriod\" : \"zqcouh8ohxdab47iw77gbfw5zsepg\",\n  \"createTime\" : \"2022-03-22T13:39:53.271314Z\",\n  \"destroyScheduledDuration\" : \"0cngcz06bcatoy0y0cm4a7rfp6yp7zxbdihbwkd06qd5604zixhqqtvk2f4zh\",\n  \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n  \"name\" : \"Marylyn Olson\",\n  \"versionTemplate\" : {\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"algorithm\" : \"EC_SIGN_P256_SHA256\"\n  },\n  \"importOnly\" : false,\n  \"labels\" : { },\n  \"primary\" : {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"exzxpkix92cqfzua56hzj3wzkvk3zurgtc4zc68nfgy49uyfwg3lynayqe7s5lr9de5egmykeagdgvyh5bfjv823zw1ybu1p0z57sb8aux2dt44nswvkb4jfzst4s3bgokoxsj2g7w53zrmjt6ahpwm83ffzs27qjpuppdsq53nnbht5oq9x2gb8p8bys9anbg8z\", \"t80mbzie99wps0ldvbyaammrkl3um7zanhh3kk5l1oil3bxo9rgemvn45pjffx5aepp2jqklkysw0\", \"at2czzibhuqq29pq9anev1c9nrls4cxy8yd4l5e4pl5967pilxt5yotyu3b5xljwrvw2zyye2l40jci7bptf0ysxj0oun\" ],\n        \"caviumCerts\" : [ \"slqcuoco4ux8yy4el9f1znwyl4mlwcy7q4yzhpl6sgh2al124uirpca9oowxb7f6v4d0drcpon2tc5qobx3nijg11qxxg91l6jxtdhyey3j3brz5ahafig2s68llezt02ehchbr0337afavopog58oqiw8o5eczsxo5zh9qon4r7duricobrgyugjsu9qkbd1fpw6o\", \"bemuivzsetvzcj99x26rp5qspzfmxf0duu7xe9zfae1tp8rzr8etn35ini63z1z2d7h380jsqt2\", \"plhkdp7ly2fwfqeflmsn4xhivpph8up09hlhm11e5g0qkcgilegq3hq3tl5edygn33yjzr3cie4ipzyv5zftryq0ey230vb7qzszsvlk1nyd7whoozeelbvpwg6cqm4c54ws12ramjuieapa5n0w19np\", \"pi86nk5kzp90vpe9o1e2768m1i3mp5jhj2librbbr4ym3uu431gqewagxtvipu17wa54w67tr37ng8s6l5bvnsve2hp2dyf2u0coe8ztuqogb3fkkji8epcqowpsgc5n6u\", \"g7pqh3rc49xettav67iz9zyi2115xwd2f71wr27rav39zowz5ek3bxqapfjv37mr7upkzs2406ukxsm2ey30mo42vj\", \"5ptb8neeany693tuyjr3ue6s5bfjxjcdka5qkh57lasc0b38nawh8r1zkw0wl1dlz3c0k09l4i6reh0zt3qt5188gww1pvr4pxydfncav746y\" ],\n        \"googlePartitionCerts\" : [ \"xt0mb30x950odwb8f4kystkji3c9inygpaip1vm98fbt32xa016s2wb5qcr04h8bsjpaztixaxw65h0trdnhtc0h16e78j287r9dpmuuecq29htyaoeb7b5z19osrf7xl082rr8rlvt4xrd0fw8ky48so\", \"u6w3rv2dxy2nytwnucfzx0gnecpvhk9zvvssa7gfhvol9p2ex5wf0bowk5cnp19ftj7or6qweldfvgwgrlutn6xqjtodmw6xculw67bfe\", \"d4gqonsy18to88zksr6upcbklpj4dejlfllp7zzxumshfy1q1t3efr7jmjv1iu\", \"9dazlecvi82vpeazee3w8mjes31vmw6c4k4lnavqzdk1nal1fh04oy3c64\" ]\n      },\n      \"content\" : \"Blanditiis dolor quis. Facere cumque doloremque voluptas animi illum aut est. Sint commodi et non aut exercitationem eveniet.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"nwvp4uk14wlmvw7yu3zbea6441ts8t64fabrowlxokp947mxcig390c4zp6xi94z7ioq8whiw9blw51dnzpdpyv3tlmaxq8yz79s9dwsx9eb8l0y50c92c7p2dq1ijr8b03naoyj8if1fw3adcx0wd86fhwc5ofusn8nl0f77eh5ap6gznopi2etb9rq5n509br\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/875060\"\n    },\n    \"importJob\" : \"35rmbp207x19rgrlcyqwqorl623b30k1pbv0gsiy70f2wjjfhnfga0o2vyyp17jozgwahuiklirt8fyxlgldmigkjvvpf5lqpqpsw57sgfrk9gxfc1498f7z69fo12ytgq13cl8q5js8hamww167aazbpc5nz7z5okx5k1db7212jn4\",\n    \"generateTime\" : \"2022-04-12T15:57:53.27174Z\",\n    \"destroyTime\" : \"2022-07-30T14:42:53.271771Z\",\n    \"destroyEventTime\" : \"2022-04-29T14:18:53.271799Z\",\n    \"importFailureReason\" : \"6iogp76l67p4bcj0clqdmbhmmpz9n61yjv5synrslkpnxdfcox3xhoqwt3c6a2lubrzjnmdtjtbzfh5jtqmxhwxacorhwzp\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-07-11T15:52:53.271846Z\",\n    \"name\" : \"Emory Stiedemann\",\n    \"state\" : \"ENABLED\",\n    \"protectionLevel\" : \"EXTERNAL_VPC\",\n    \"importTime\" : \"2022-07-26T17:11:53.271934Z\",\n    \"algorithm\" : \"RSA_SIGN_PSS_3072_SHA256\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dba13976-64e2-4969-a646-5f8c636d4566",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.272164Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion",
          "schema" : {
            "description" : "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKey was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoKeyBackend" : {
                "description" : "Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.",
                "type" : "string"
              },
              "destroyScheduledDuration" : {
                "description" : "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.",
                "format" : "google-duration",
                "type" : "string"
              },
              "importOnly" : {
                "description" : "Immutable. Whether this key may contain imported versions only.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "nextRotationTime" : {
                "description" : "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "primary" : {
                "$ref" : "#/components/schemas/CryptoKeyVersion"
              },
              "purpose" : {
                "description" : "Immutable. The immutable purpose of this CryptoKey.",
                "enum" : [ "CRYPTO_KEY_PURPOSE_UNSPECIFIED", "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT", "MAC" ],
                "type" : "string"
              },
              "rotationPeriod" : {
                "description" : "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-duration",
                "type" : "string"
              },
              "versionTemplate" : {
                "$ref" : "#/components/schemas/CryptoKeyVersionTemplate"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "66fe00e7-2040-47e7-8001-0715463919dc",
    "name" : "Restore a CryptoKeyVersion in the DESTROY_SCHEDULED state. Upon restoration of t...",
    "request" : {
      "urlPath" : "/v1/Shan+Crist:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"uqt\", \"cdqtyf70bk4mubh24x2nndmdmcxilgekcwvyob97z29gd0pojxh8zm69y18em1gjdihur71ac8oyx6829ew9xje5uw90bqsn9e5ink2jrhuxsrql2j6zrq6gohlnwk5vatjwv\", \"21ylduhf1nmuubnd3q0d744ebm8vh3v9gg2ngaj3luddczvtaxao6hpw6k8tehlrl3kxoq99p54etp0gictu5o4q75iuj2e6xxfsq5arp45tor6gw9qrjlqyskrzqqithi4nqog72ow57dt6n7wi6o5x6p6f6ltg0yjfsrajbbvz19pqzrtzggvobox\", \"apsl6qbfjqozwfj446iq00sdqic5nmdv9zigf5v536ufl9hee6\" ],\n      \"caviumCerts\" : [ \"kdxouh9ektz66pdigqcjeslafhw9whpv4hk437xu8sxocxspy4sq8rmy4j17o689cjhvvsxqtm6iotc8p33u72\", \"ya2tr34ppmicm0l8xnam0bzi35pbhybl7qer0qltfppi90mku341jtw4a27d5st2qz49wl8ro6v23a6nbevuuq53usynv58wrdsangdjcy8yxcxdx\", \"jtbhw7gb74w0wgx35wqdf9o7399snffclzizrhetmvfkma69yyhpllorglliuf99ztzvlht9icbvz1e2lmq585j04cpmbfzjtz40qhhr4iagpqgejwftbbi8kesuayi2s6332i3bn998i1gpkwlkkzvszggmjpkej1djowid72c6cdijjioqlfct6427e0ff2\", \"bw4199mt49toipayzr5khacwr4hq7vlrdnyd25szy0t5is7c1nfmq5fo7ifd5f149il371hqydebk57so2fchr7rhydszij8bwzh9x\", \"h2x093nqnj9vmz77ntx3p9rpwwxmjpc4vvoonmruayfos2ci0jtrig15leuyu4yjl0ukcq0fhvwq0e32fjt5zp909ab35ev7\", \"svq1bnhnbqt4qtn7ig7g\", \"mr3quh6aozbhjd2r3mfla7rtvejy7nfy5qb5hox3y923qby37cniz5qswr64mlx5fwhrmjgeje1gu58fvfguru392u6lthkq2tuzn2947sr8don2b3lziofe978mogahw5xa8oida5p4c892v4z0nbf8tezxmlsib9ue65ohd327yw5trbd\" ],\n      \"googlePartitionCerts\" : [ \"4puplxkyy0pluzri0oj8esdl8nsob7setk6eb0b8fuacfwgsqiluej5bkk05tk0ztad66ns9jnhfbryexhm8lzbxt3hfjgry0nv0ud59tg8hcubjclsujpggvgfusnhq4vug6rvszq322lpczevp348\", \"nf426\", \"prmpgmmqsqlijesmje7cj10qmf81cs960rsmxmm2g76mv86wqpbawqy4ojpj678hveqa68o62n4yxx660rs4m24qbwda3jbvdx0gbgr1j67ayxdk1cvjzuryz5cz2gg2jm5to2lq2ielh\", \"h1xq8cguhe0r72roq6inwvbom0dstsuqgl153p40e04g8dwcti59jw5ois7s4na0o8kmezs7xf1rtuiiolmdgfvbmzkoea5vvzs76di8bfn90zmfz619rpe2vcg77vxage8qa3m247ug9q7a2kv7xtxx5xb7w8eyuh8ujilyg1e2227k9069tr1fo\", \"buf7cvc6pqnhyntft9\", \"37iyqlh6edcyu4qfypbhp6os1p9osx0lab2w8sumw0uv4mzuvj5n7hnwy9hoktvr78zjpzs3zjdnu5hbqx1dcq1um24pm4ups00k53a0x3i99g2aj3waulh3sobuceppx5p3ujqe87p7mx8m40hweftrtie9oro1h3o4a3\", \"06mp98vqzxpmmd0f6yvs4ht90f9bpe9ur9z99qhcuff1ugc53m5pxutk4q7c8pl6gqsocjl6s0ede7qfr7xcb4xukefde62xtfjgan25nhkb3fqg2gixnf5fws1ge9gsnuyw4ylgsx79oba6ci7cwo0mj\", \"nccpme0mw4\" ]\n    },\n    \"content\" : \"Aut vero ex ut. Qui veniam quam. Aliquid quibusdam voluptates dolor temporibus. Exercitationem et aperiam eos et aut autem iste. Quasi sed accusantium necessitatibus.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"3ocnmjnz2l1yjuul8bydqq9hkrzbg9lm8r7041n5pyr8gjr6xk\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/638440\"\n  },\n  \"importJob\" : \"kk4rxentz1vveczvd\",\n  \"generateTime\" : \"2022-03-24T15:16:53.270782Z\",\n  \"destroyTime\" : \"2022-06-04T14:47:53.27081Z\",\n  \"destroyEventTime\" : \"2022-03-15T13:36:53.27084Z\",\n  \"importFailureReason\" : \"xdnvs6k0bhcrqar5f7zn6tz8pbl6s349msvmw3uo9eeqjs87oin8eci8nkuiggclp71wplniw47j645ay72chz7hm80fg1gin7fwfpoqy4a44vbgig1g41d6g5l55qd2g13ibmtmc2gc1wq9yn3seat4vprk60eig2s108xfi2frfj5mjk09wqvvdh5svexsjhqnb\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-12-06T17:02:53.27089Z\",\n  \"name\" : \"Libbie Brown\",\n  \"state\" : \"CRYPTO_KEY_VERSION_STATE_UNSPECIFIED\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\",\n  \"importTime\" : \"2022-05-06T17:01:53.270981Z\",\n  \"algorithm\" : \"RSA_SIGN_PKCS1_4096_SHA512\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "66fe00e7-2040-47e7-8001-0715463919dc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.271193Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d108569f-438f-48e0-bf08-6c479c95b7b0",
    "name" : "Verifies MAC tag using a CryptoKeyVersion with CryptoKey.purpose MAC, and return...",
    "request" : {
      "urlPath" : "/v1/Mrs.+Kurtis+Little:macVerify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : false,\n  \"name\" : \"Wendell Pollich\",\n  \"protectionLevel\" : \"HSM\",\n  \"verifiedMacCrc32c\" : false,\n  \"verifiedSuccessIntegrity\" : true,\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d108569f-438f-48e0-bf08-6c479c95b7b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.270451Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macVerify",
          "schema" : {
            "description" : "Response message for KeyManagementService.MacVerify.",
            "properties" : {
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for verification. Check this field to verify that the intended resource was used for verification.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for verification.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "success" : {
                "description" : "This field indicates whether or not the verification operation for MacVerifyRequest.mac over MacVerifyRequest.data was successful.",
                "type" : "boolean"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacVerifyRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedMacCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacVerifyRequest.mac_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.mac_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.mac_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedSuccessIntegrity" : {
                "description" : "Integrity verification field. This value is used for the integrity verification of [MacVerifyResponse.success]. If the value of this field contradicts the value of [MacVerifyResponse.success], discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "54c3b8d7-e95c-4377-a3c4-341703b6fb39",
    "name" : "Signs data using a CryptoKeyVersion with CryptoKey.purpose MAC, producing a tag ...",
    "request" : {
      "urlPath" : "/v1/Maryetta+Bergnaum+MD:macSign",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"macCrc32c\" : \"m4k2hlkqs6xgb0humnyv99dblfgqzeelcmas1to42sn1skio6bigh0srh9xoy0ub86as9k7adocs8se7tizcbxo0l7v64gzkwigirgs3q5wqa293ktfomr43s5el3bpn5gw9rm0xh\",\n  \"name\" : \"Lorrie Rosenbaum\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n  \"mac\" : \"84ooksi9uzhc22w3fri4cdowvhms8iqy1dyxbvnq1z61sjsoqnm71i20gzlh64apbt5sf3hjun9gq7x20s1xy3qu6mlj9ye2r8dfy1xbqzl5fd1w32ezjbeudbocwp2\",\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "54c3b8d7-e95c-4377-a3c4-341703b6fb39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.270233Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macSign",
          "schema" : {
            "description" : "Response message for KeyManagementService.MacSign.",
            "properties" : {
              "mac" : {
                "description" : "The created signature.",
                "format" : "byte",
                "type" : "string"
              },
              "macCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned MacSignResponse.mac. An integrity check of MacSignResponse.mac can be performed by computing the CRC32C checksum of MacSignResponse.mac and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for signing.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "51c83014-b334-4322-a4e9-3f4089ee4471",
    "name" : "Encrypts data, so that it can only be recovered by a call to Decrypt. The Crypto...",
    "request" : {
      "urlPath" : "/v1/Valentin+Strosin+DVM:encrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verifiedPlaintextCrc32c\" : true,\n  \"ciphertext\" : \"j8sf1olyc9bh2dva2dfjcz6ad5xq0768x1klnp402rz8q2uob8fjm7d5gyzqqnazp2u61czzuvhbvtl8nh3zhxadjqz1feu034pr0fzi2ky39eul4w723ylo0i778el5vmr0\",\n  \"verifiedAdditionalAuthenticatedDataCrc32c\" : true,\n  \"name\" : \"Crystle Pacocha\",\n  \"protectionLevel\" : \"HSM\",\n  \"ciphertextCrc32c\" : \"n3fsokry5fsj1isk31vifw0z6xv8d94nlvhcf8kqnzrs3hm6up9uy6bkr1dmmiqur0pyr\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51c83014-b334-4322-a4e9-3f4089ee4471",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.269995Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.Encrypt.",
            "properties" : {
              "ciphertext" : {
                "description" : "The encrypted data.",
                "format" : "byte",
                "type" : "string"
              },
              "ciphertextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned EncryptResponse.ciphertext. An integrity check of EncryptResponse.ciphertext can be performed by computing the CRC32C checksum of EncryptResponse.ciphertext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used in encryption. Check this field to verify that the intended resource was used for encryption.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in encryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedAdditionalAuthenticatedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether EncryptRequest.additional_authenticated_data_crc32c was received by KeyManagementService and used for the integrity verification of the AAD. A false value of this field indicates either that EncryptRequest.additional_authenticated_data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.additional_authenticated_data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedPlaintextCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether EncryptRequest.plaintext_crc32c was received by KeyManagementService and used for the integrity verification of the plaintext. A false value of this field indicates either that EncryptRequest.plaintext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.plaintext_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "29a55c81-2970-4b02-8e9e-2c5b2edf21a6",
    "name" : "Schedule a CryptoKeyVersion for destruction. Upon calling this method, CryptoKey...",
    "request" : {
      "urlPath" : "/v1/Raylene+Hammes:destroy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"0h8n4nzpnlwud1ppw51udwvkp4gr7c5dtypmrmz3m73jg47a9kczdrj5y03z2j1g20svvnjs03gvxyq2nur1564vj9bo23w6qfcegomnypbuppid5zxe1jv5rxfuvb1wcbcvjzhtxostv7i05yaw0k0jxweloght17qenv0lvxwysvf7tdq\", \"kfzjifo23lw73ffpzglgzy0lyrd3rpwta49i0arn5tkzah0wmc32i8a2a92t0tjz80gbtwh1ymzv1vrty6xz63827xj4fl883lti9cs7fnkm50mzvy7h7qek51q0k4ypyp9w5zbm0t4o1457s8cr2tpclvpx7v29\", \"o4txvvzeq5p22f8lx5am0kc686w069djsgdoqq5eghj01e46dxaks7xlms7vbju\", \"fc7kq2amh77p0djmcedo7xghi5da3bmtrlnrakzb\", \"j1anex5ltye4yp0fxo\", \"x00rf1wneze0z9lhku4fy80kqgto13syvdxpk17emf9fzbs3wn75msq2x6oubg8f404mpl9pt766ks3pbc9vlwdvil73xnjcflvbf7mcxewq0ui1bmewf9yhc92yfkf0dw7cmkfzj186x3l9802xgbrq0zlo53eyl6jkq7yi1f2m00pjtewh0euhxmfwan8o4qco\", \"kyly62fkpth63aiih3hfkckfuuazgaccv9xku6863lpx0zprasmv5p9segmh8hr7qb42jjn8y1fnyumuljqgcwft9cbdxkz76fvfpik0y9gi5bmz6uqm530df9lnxgdzqxtm827x4xjsj6lvy9mkad2o5kzv5kfb2vrhkew83w97\" ],\n      \"caviumCerts\" : [ \"rgih1zdx87uz1jk\", \"85u7v6inqrg2wgwdmg7e689\", \"ui8zzbrm50zprrxsvmz6zlw7wi9o57bnz03o48\", \"9wcxzb5\", \"vtj2uhxh1mii5q502o74l0xw9z6h3\", \"ls3wjcyg3dlmglbwnl16dgrvzommnvfh1d7lq1vcdu4ki1gd789fr5zielwz9s4wj70n0ubnaog90cvb0qjjxrpbj5isczctryjesqou2847tw\", \"8bwq8bhsps3vybbel5l7go9rmxspjktwpktdi7sob3ekv63qh3n269wotpeeqtov5cld56ng84tyld1wy4irzrythtejl3ju8c7tpn16cogv6si9jla0cojpnhkvoi612bxeqyft8em1dhdgqdjfrug0vio0z229iiao5rzdwr98uhyd59h\", \"qerieff5omjgvdj8gyctxz5h0ygczqnt24e453hf8bnc6ln64a\" ],\n      \"googlePartitionCerts\" : [ \"xdfh2o64a1v898sa8eitp2depfvflnfyq5wg2jws5k3ua6zmr89i3j3dybxpkdkscjijl8ns2awil6qzmbb2i0tbsgsgt49toksoxesw9coxgd29f07h58yyaghb3zmd1ckafpmf4659yi5nptuzcweaupz29fjf0j42oa9e8gcwihu\", \"9m4jwju4evuvnuletlo3qsthxcfzl3fuz4kzjbqjanfvceua5i2muc3nxz865kkit1vywpaugtcco59iq77iaxbnd6pwymakfn48ol086v7c3w5zmrgrqme1n7ok9mnldrfc20me1bac628lw0ytbjkksw06hv3\" ]\n    },\n    \"content\" : \"Aut natus dolorem molestias quo consectetur non. Quisquam officiis est eum et nam ipsum ut. Pariatur voluptas est. Qui quasi repudiandae similique delectus ab voluptatem. Itaque velit doloribus provid\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"66fwhz7ds83k2q2us6jmrq9kwv67oeh90tu57z3i3i8j6ltndtkworabppaa8hlmofqswd2os2oia83t2jg1mzjdc6za6cirftglsp7jqinc3a0hcmd35g5\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/058725\"\n  },\n  \"importJob\" : \"n4jtx41c2hmrszovaxojuc1vumhghvv3sb3h3ar1rfa4d43dlcwkoso97xk21zu7hykz691wknp41rbas534x8q3db3xi2k4oumb35ump12b35jb0h9leusx69yyyu0m6z6p9v7mupgl3018pce9y4tppnebwf7q71qlwewtbyxv6\",\n  \"generateTime\" : \"2022-06-24T13:58:53.269315Z\",\n  \"destroyTime\" : \"2022-11-06T15:46:53.269345Z\",\n  \"destroyEventTime\" : \"2022-11-06T17:03:53.269377Z\",\n  \"importFailureReason\" : \"o2b0xnxmh1pjwh58xh2keeaqzcyb0eigdtnk8n8sjtglnmno1ugdf78xq01l0cywtzfesj5o45o10n9682zdmymfmer\",\n  \"reimportEligible\" : false,\n  \"createTime\" : \"2022-06-23T14:14:53.269424Z\",\n  \"name\" : \"Miss Emilie Hackett\",\n  \"state\" : \"DESTROY_SCHEDULED\",\n  \"protectionLevel\" : \"SOFTWARE\",\n  \"importTime\" : \"2023-01-07T16:00:53.269515Z\",\n  \"algorithm\" : \"EC_SIGN_P256_SHA256\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29a55c81-2970-4b02-8e9e-2c5b2edf21a6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.26974Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "28bed1c7-ff30-42d6-a303-af2e79070508",
    "name" : "Decrypts data that was protected by Encrypt. The CryptoKey.purpose must be ENCRY...",
    "request" : {
      "urlPath" : "/v1/Jewell+Walker:decrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"plaintextCrc32c\" : \"1efg0ksol7dtehwa7x6rcxi5aehs0zz8mfet3h06f1bejls2pm86pazfmwvtwj\",\n  \"plaintext\" : \"leknmn788xo6gmj8tf4w4l58b7ayx3lt7swuvccfhczyatyyecu037npsrwr06e6z2k48kkuhbs80hhc3t5jq2bblzws9kxyd6fgzfdttl8hh1hq4otsey6i4ny9szjsmtax1hqm0w6j2hjx15z9r32zcebd9sdkd64z5638ih3rnh9sninp458um9r\",\n  \"usedPrimary\" : false,\n  \"protectionLevel\" : \"SOFTWARE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "28bed1c7-ff30-42d6-a303-af2e79070508",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.268966Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.Decrypt.",
            "properties" : {
              "plaintext" : {
                "description" : "The decrypted data originally supplied in EncryptRequest.plaintext.",
                "format" : "byte",
                "type" : "string"
              },
              "plaintextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned DecryptResponse.plaintext. An integrity check of DecryptResponse.plaintext can be performed by computing the CRC32C checksum of DecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: receiving this response message indicates that KeyManagementService is able to successfully decrypt the ciphertext. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in decryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "usedPrimary" : {
                "description" : "Whether the Decryption was performed using the primary key version.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "04214903-0fa6-4127-9a87-f277a13202d3",
    "name" : "Signs data using a CryptoKeyVersion with CryptoKey.purpose ASYMMETRIC_SIGN, prod...",
    "request" : {
      "urlPath" : "/v1/Tracey+Schmitt:asymmetricSign",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verifiedDigestCrc32c\" : false,\n  \"signature\" : \"0fuaw720tm5ohe2mbo3pcus7gups7x85aayi9y48ifep75b1ohxx5akr0i2mcdnuduuoujgf1zv5u3o85toyn1xdk7tmni71xn14zh28j52hqkcwm4oz7gus48v31cg2zhoszujtbqhsbnbf6nyluvz41doaduahutq9s4ym2p8v9lyf1\",\n  \"signatureCrc32c\" : \"5y1xeaqe4n478xcujx04mybow19s9que6ii4lxldqtsw1u87gash19\",\n  \"name\" : \"Carmina Schuppe DDS\",\n  \"protectionLevel\" : \"HSM\",\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "04214903-0fa6-4127-9a87-f277a13202d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.268788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign",
          "schema" : {
            "description" : "Response message for KeyManagementService.AsymmetricSign.",
            "properties" : {
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for signing.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "signature" : {
                "description" : "The created signature.",
                "format" : "byte",
                "type" : "string"
              },
              "signatureCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned AsymmetricSignResponse.signature. An integrity check of AsymmetricSignResponse.signature can be performed by computing the CRC32C checksum of AsymmetricSignResponse.signature and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that AsymmetricSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedDigestCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricSignRequest.digest_crc32c was received by KeyManagementService and used for the integrity verification of the digest. A false value of this field indicates either that AsymmetricSignRequest.digest_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.digest_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "758373e1-9544-4d33-bbc5-a4fe2e918094",
    "name" : "Decrypts data that was encrypted with a public key retrieved from GetPublicKey c...",
    "request" : {
      "urlPath" : "/v1/Lucio+Thompson+IV:asymmetricDecrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"plaintextCrc32c\" : \"ntwys80gm12aep9b3lxvlu5bpsa4umjoegalmd3mppdkr316qooux0pxka7hi00pela9lyd1hmo9vyhnrruh\",\n  \"verifiedCiphertextCrc32c\" : true,\n  \"plaintext\" : \"ma9ld9za1a9mrqqte2dpa1vg7a330d3ao1y7l7f5zalooe8nardj732v10ha5h7s7xh2jajl3rqq1vsjxjp0gnh3ga5ak5wwu5ju4thcd66hauafe8mxmqm2xvmncs0569cgcp4t0m1bz3midskldwv9bbhzz4lb6msk3mc0srswky4\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "758373e1-9544-4d33-bbc5-a4fe2e918094",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.268534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.AsymmetricDecrypt.",
            "properties" : {
              "plaintext" : {
                "description" : "The decrypted data originally encrypted with the matching public key.",
                "format" : "byte",
                "type" : "string"
              },
              "plaintextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned AsymmetricDecryptResponse.plaintext. An integrity check of AsymmetricDecryptResponse.plaintext can be performed by computing the CRC32C checksum of AsymmetricDecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in decryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedCiphertextCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricDecryptRequest.ciphertext_crc32c was received by KeyManagementService and used for the integrity verification of the ciphertext. A false value of this field indicates either that AsymmetricDecryptRequest.ciphertext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricDecryptRequest.ciphertext_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "69e516ce-a83d-41f5-8ed5-d174a969330a",
    "name" : "Returns the public key for the given CryptoKeyVersion. The CryptoKey.purpose mus...",
    "request" : {
      "urlPath" : "/v1/Fidel+Gorczany/publicKey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Elliott Rowe\",\n  \"pem\" : \"130cpo81tkcgejiroifrb6jlgzbt8bnzcsewcridar3fef8qx3k\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n  \"algorithm\" : \"EC_SIGN_P256_SHA256\",\n  \"pemCrc32c\" : \"ent\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69e516ce-a83d-41f5-8ed5-d174a969330a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.268339Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey",
          "schema" : {
            "description" : "The public key for a given CryptoKeyVersion. Obtained via GetPublicKey.",
            "properties" : {
              "algorithm" : {
                "description" : "The Algorithm associated with this key.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the CryptoKeyVersion public key. Provided here for verification. NOTE: This field is in Beta.",
                "type" : "string"
              },
              "pem" : {
                "description" : "The public key, encoded in PEM format. For more information, see the [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and [Textual Encoding of Subject Public Key Info] (https://tools.ietf.org/html/rfc7468#section-13).",
                "type" : "string"
              },
              "pemCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned PublicKey.pem. An integrity check of PublicKey.pem can be performed by computing the CRC32C checksum of PublicKey.pem and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type. NOTE: This field is in Beta.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion public key.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c185c6f4-b606-4217-801f-f2279517440d",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Cathy+Powlowski/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"m4mkyvyiue3rtldokdg5a7h9tfzu0dtm3tkasy3lyvb1zaymhg8cepsoyd92wcguccb5mx00cb0ln4khe0eu715tlf2joyzy0lunbk3glxfczr56y37fasm4i2flm8ytrk5657bwb6v6sbzoa2a1v5mepuogrcpru45b\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Mr. Chaya Denesik\",\n    \"locationId\" : \"5r0g\",\n    \"name\" : \"Albertina Kautzer\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Sandy Weber DVM\",\n    \"locationId\" : \"wn68\",\n    \"name\" : \"Josef Brakus\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Jenny Wuckert\",\n    \"locationId\" : \"pl26\",\n    \"name\" : \"Hassie Runolfsson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Quyen Hickle\",\n    \"locationId\" : \"et02\",\n    \"name\" : \"Gregory Hansen\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Suzie Crist\",\n    \"locationId\" : \"3q13\",\n    \"name\" : \"Ramiro Stark III\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c185c6f4-b606-4217-801f-f2279517440d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.268071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2c4b9e83-f2e0-4b80-af47-f8f417b8d537",
    "name" : "Update a CryptoKeyVersion's metadata. state may be changed between ENABLED and D...",
    "request" : {
      "urlPath" : "/v1/Tiana+Schiller",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"rp3k11qpiekwq0iytgut3twzxerh4u8pcirw8xv4ijf9b026spv7ag4wx4tdxtyoe1uraxyzrfi4c42wqbpyg0nbgsefzugqxr8b34mbyo43pow4zyk3q6yswec0k6vwdcxjwq8f4sv03l0xfigaiq0twapl0g2ya0xvsjwsvwyd5\", \"au92jgxbr5y9zoehnmkmyrmsajg7kxeq9g39vm61rfmjrufpevtk7hjxbz139yuichx0iqc2ch06rvsbhxsg5bzexgo9tkm7xi3a\", \"3ttx9jjbj7naohx0ypr677mwhvmi87pee06kuuyzy9pe6hl4013g5wbu48zbcg1k5uyebm2wtal6ts9fdlr0bwkga7cvkhq5cqibdchn2n02i4c88e6sf3lh7btg7f7zw\", \"0u1farokl8n8r9icdxbmff5ngii8px3oqc6dptbd\", \"ewd8f8fuhkyw7k7osyg7r2puiwtw8res42rv27f0s1wg6z91vcpjai412lg3y1a8tw7zyqn\", \"0bxcoswvg4xbcexjqldc8pwb33ei7ylb66b5njtdxr7y5qhj5pekpdw3c759soqmf9ljshkue5xj8ywp1eutfqwwrc85bwc1s9r3zu6cgjg8zeb3vbou40xmxb5qrqkedg95khvx35svhnl\" ],\n      \"caviumCerts\" : [ \"m9owuj4uij55w2yphb9mhok5ciqgy1oefgklfsk0lj46fpptjnegt810st4x0d25iqc5kw09fvln53vsd0y7js222ngn4msd84k0n5iv1ovckwumcrr0pbhdmjc03jhhgkgnynnz3wtu87u2v27mxy6sjtf4wlhj0osm045ltdhcjd8mbv9t7pm6\", \"kbr62s4xlf9ed63zldk30qon6vftodr1aq4sinhe7kl93kgg1ylmzmtz1z6d4hate2iy5qz37z0sygmxhu1bw6pdkemtje8hzrerxaegeo6sazeot52a3gnms1iqdfao640op4odgquxn77s9yjndus5wjob2b7ar6ghhe778yee155m46bp\", \"sqzpvc5r3qrieqtopoxko2i8z6uienq971\", \"38axog\", \"nyd9kw2id4dbjpviffhaaj1u8kmzy2eg7o41zegh7mmdtd22nnr2n4vomxvvszlqxjy14ru7g9f4ruqariyhpaz0y66y7z7y1yjzo4xlgtxdcq334b2zgih9kjkyvx0ofukqff\", \"jwz4op4hc86fr3txoerftwzt34g4621atcts0d4wn10x4empun1p1cekl9bey46wzqddgmezqzp8pjvh1ooa1\", \"2spr06mcxtbeufunfigd3njj97lg6c9x0lwmkforp7gl8d9xj812a1cyq3j6b49rcps2c7wtg6dos06ac\", \"c7proj40jm3u6dgnd2eadccuk03ox5oo0j4z4s4dbfrif7zflccqs1fy11v2msvhynv16lhd223fc4fnm44ajadjnvpw8phlix1v0w5c5ucno9wb7jew0d1ung6a4stbxvjes31rb5qldv6okp51h1zy8wlwypl36h4mv1\" ],\n      \"googlePartitionCerts\" : [ \"5vh07rbdjz5o0vmianwg436pwp14its1qukgivrj07v256nasgbo9wfxlqut3z4b2alofflli7iogbcsms0lvc7yhqnx64hlli6v6r0n800n2pf2ypu736n9q5hvkwkpr5e9qtux66s6ft2lo4iegfru\", \"ioh2z3xqwmao9forxo5dxmkq6934ngyult12oqg67j9z586x00iwb48zry322lgdlhwsckppggu5oxkzlsdi5bc0f39tab7awvco59t1p83mavqsb16gby8xqnb0fks06br6lhnoigmlg038f6x\", \"e6seuks9j6q9ep20hwdnpu0a66pa5vnfnlty8k26402yxmtjfs9o53dk02s33z1qlxh983zf37p8jjgi7c1ja5znaplv241\" ]\n    },\n    \"content\" : \"Provident natus sapiente mollitia. Sit omnis commodi qui vitae. Sed vero occaecati porro est.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"27jpt9krlvmeo91bxr4cjdl74sn6s5xndii4u10nzxesxgsoacitg6gcrcsjwi15x0sxosan9oexk89cv587o9h6veausactcms42w4htblmtprc4b7dydddcuihz1vrpeee\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/410542\"\n  },\n  \"importJob\" : \"eizombcgv4ofbexqmubksy413gk8jn2pf73fmnhgye93c7kjsqki0ybxuhczzp1ygedxbh48i2pao64plx15t7lq0ado1n0xluiejxzjnqo50tanfcu9yweptdbzkjevyp42ekamh8zt0qipv6ry7m5t9su0tot3m1l9jdidfx\",\n  \"generateTime\" : \"2022-05-27T14:43:53.266569Z\",\n  \"destroyTime\" : \"2023-02-22T16:18:53.266602Z\",\n  \"destroyEventTime\" : \"2022-10-11T14:38:53.266633Z\",\n  \"importFailureReason\" : \"1aop1cu90z6qdyto2vmwgkwsllafohsfs74knaofl24o5606ljzqh9r339l1akud137p4wyhk1x\",\n  \"reimportEligible\" : false,\n  \"createTime\" : \"2022-08-26T15:13:53.266684Z\",\n  \"name\" : \"Asia Jenkins\",\n  \"state\" : \"PENDING_IMPORT\",\n  \"protectionLevel\" : \"HSM\",\n  \"importTime\" : \"2022-04-13T15:02:53.266786Z\",\n  \"algorithm\" : \"RSA_SIGN_PSS_4096_SHA512\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2c4b9e83-f2e0-4b80-af47-f8f417b8d537",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.267045Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8441b5f4-87f0-49d9-85a4-397682f382ff",
    "name" : "Returns metadata for a given ImportJob.",
    "request" : {
      "urlPath" : "/v1/Marquita+Funk+II",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expireEventTime\" : \"2023-01-19T17:17:53.265629Z\",\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V2_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"sraqt3ysftz7yr9bcgz3kjt4oel7x66mhyrnmihymvr204v813xpgupa7qyx2netza6itoa0niqglmgn4u7ar8lximof0jnbisvf9226lkp8s1p6nvoipb6ilbglx6hopjegnfswmkua9hqasc2ua0b6o808v3xot2cb9\", \"4f2qhl4mobkh2rcvkub6229kzw6nmp1g8ln3v4i3r0ugs5nh1sxh4vbxqperzm77irmz3gnmjfha0tae7wpf2j8jb\", \"sz6gvjpulojcpn1jt10dq7ngd38wlrqdajdqfeomxbjxhy0hhaikjeqptoee8abgorj2mq3l72klh7xarmtqwg7ehj2g2xcw777jkvkt6bswdl8q3swfr8wj46fvx0aki8m6tkawqajkk5x46gfxbzo8ntqrmagme93romtxk9z40rl6c6ot3enipv7v5\", \"92m9gur9mr74dky1ty61zpts0p8jcbq0rsth2scgz9kkgr46vc53ghg57792ko9g5z6vzv1td8yr7gh6b4mha3emdh4tulrxbeaqzf5fdhywt2z1\", \"bmceqv7grcqhkrli7k0l49juwen21243qewmxzxtccbjiulxojepxiw7i99dmjqvqttf1rurgkichpl7x06w0axkx7axwnd4h060t8\", \"6pc48818zyyglecktzviks37lz43a27m8smc3y0xiqz9qumb1i09n33l9oqviz2uryfqzgzogizeii3dlj5jp1en2s1h2ksolit2wqfequ6pb0xb6hue2oo6p\", \"ohq8zcngflh7m5l4c62moztnhl9cwmsz96sd148s5drce8f6ikcdc3kj5b6xxlnreftzvetot8dq33xljc2\" ],\n      \"caviumCerts\" : [ \"5le40oa5kzbuvxunq254l0rnrkd3ih0bdcde1ns1hrwgedj6rksjmxf4op1ygow8c3gffnq8navxbfxm9x52nq4enypl9vcntzxe7hr5we186o3crpfhrtewoudy32qjqgsqok4dqvgfgqe\", \"frqjj56b2gpkjar00apfpear5b6557ki83pzuri8s0inu5uqgxa6xo5ve03t3cj1fibysvy4yo8fyma71hmzz603m4zdaithi4pdmozh0crqexgeauw1uvkbbx6eodjer58fbv88aw73z4fldxk8q9ruatou80kzjimxbn6\", \"pf9a4ca94jfc8z1ttd7ygvjgu6o1d9z71aqfqrtolbkbqra82p9cz5azu88ny956rw1wqv00tjbp1i722hmmvpu2mu89ncmb67ervrn6my1k0\", \"at7mcm0de1ysnsgq23c716uh33zf9hgqeltmgzx9nlwvakvadw1cob7fjecxj9bnp4xsbyrybp05x8lj4jadl5lc8p10nuhuz7wt5wlsi7zqvce3ss7m2g7wzavkdojqyy0zjwczq19euy3\", \"azoq829vuwy2gobh3yb4l7uyaasgqen8ad1ua4nkka60i709i3zzzt9sgbwntzireulh8pkbbrurmrdwj60suzuhxg61aauy9pcgim1sjta5vyadpxmd4j86445xfv5qs9lq46tyb5eo8vwldzc43\", \"z7y9k7tn9fe5dgxplup6byygysbr1sds0dk0kd3sskiw4g7z2uispc41m231nivoiw93b71d6k7absmhol8txm7mbcenrig6476fco6db0stihqsmm4tl6smqhj\", \"pkteg3ae7owe1vex35v7s8fsn0ony56tg8yhgk2ycn1gee53ixflwr86qyur6gasqnbvhq435xkpntbrriq32o0z3dcflpey7y5ex47wnt9pd6fwhectqjvhy8g8jaekrsfo1a7dhwno7w5b5iwafxxzkcx1fvn5rburl04zjan\" ],\n      \"googlePartitionCerts\" : [ \"4t40jo3iewto1zoj32c2f3qf5u0xnz1\", \"cfjiot8nby0lzqmn4zvowdjxce07d6rp7h0xder39x5y8xggimgzzpfdn65df95umijdf\", \"h9wolgjwe4at74gp8b1r1lr\", \"d9l3chso82x\", \"nn29v3rf4f3dixoi0osb9em3dcjyhc4y4v02r5kybl24ikoh82b79817e9a8sabygihmcnpn3n22izn32q83in3ex0d69nzkxjyjwcb270kmse1cex67e7jablqaeygq1i3my4\" ]\n    },\n    \"content\" : \"Possimus magni tempora et ut at consectetur architecto. Ut asperiores cum. Impedit vero eos aut vero nesciunt.\"\n  },\n  \"expireTime\" : \"2022-08-10T17:18:53.265869Z\",\n  \"createTime\" : \"2022-06-09T15:33:53.265901Z\",\n  \"importMethod\" : \"RSA_OAEP_3072_SHA1_AES_256\",\n  \"name\" : \"Coleen O'Conner III\",\n  \"publicKey\" : {\n    \"pem\" : \"0ryicj3yhka\"\n  },\n  \"state\" : \"ACTIVE\",\n  \"generateTime\" : \"2022-07-17T15:43:53.266027Z\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8441b5f4-87f0-49d9-85a4-397682f382ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.266228Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.get",
          "schema" : {
            "description" : "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
            "properties" : {
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this ImportJob was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireEventTime" : {
                "description" : "Output only. The time this ImportJob expired. Only present if state is EXPIRED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generateTime" : {
                "description" : "Output only. The time this ImportJob's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importMethod" : {
                "description" : "Required. Immutable. The wrapping method to be used for incoming key material.",
                "enum" : [ "IMPORT_METHOD_UNSPECIFIED", "RSA_OAEP_3072_SHA1_AES_256", "RSA_OAEP_4096_SHA1_AES_256", "RSA_OAEP_3072_SHA256_AES_256", "RSA_OAEP_4096_SHA256_AES_256", "RSA_OAEP_3072_SHA256", "RSA_OAEP_4096_SHA256" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "publicKey" : {
                "$ref" : "#/components/schemas/WrappingPublicKey"
              },
              "state" : {
                "description" : "Output only. The current state of the ImportJob, indicating if it can be used.",
                "enum" : [ "IMPORT_JOB_STATE_UNSPECIFIED", "PENDING_GENERATION", "ACTIVE", "EXPIRED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "8eabc319-6216-43e2-ab48-4906dd705c54",
    "name" : "Generate random bytes using the Cloud KMS randomness source in the provided loca...",
    "request" : {
      "urlPath" : "/v1/8bvvvpugu3qdaltbz5zulr9z3v3vvnnri2w6tw253zeu6nah43c4m0b9vg4uv0jdn3652n7lv5hcul2vds88jztgsxez4wrfqd2ntqfviifm10cri4ot90bu9awrqg1n38a9:generateRandomBytes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataCrc32c\" : \"u0uu6xc1xc7be9gmfahoc6ifq8fjxea0k\",\n  \"data\" : \"mie7lecu26rylm1hss8e0jz4y54k7rioap2v0x29qslw8cnq92klk3zyyvltp2wdhqcua7xr7avfelh7oj8lx0dtotot92d0l9j86n8gdmz5o1mpxh4npgmtegbv2bee06xdsdg93\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8eabc319-6216-43e2-ab48-4906dd705c54",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:28:53.265563Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.generateRandomBytes",
          "schema" : {
            "description" : "Response message for KeyManagementService.GenerateRandomBytes.",
            "properties" : {
              "data" : {
                "description" : "The generated data.",
                "format" : "byte",
                "type" : "string"
              },
              "dataCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned GenerateRandomBytesResponse.data. An integrity check of GenerateRandomBytesResponse.data can be performed by computing the CRC32C checksum of GenerateRandomBytesResponse.data and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}