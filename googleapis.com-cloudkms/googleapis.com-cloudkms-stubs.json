{
  "mappings" : [ {
    "id" : "ff23a51d-2230-33aa-9fa6-57a307b06735",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/766xtzhqfqd9j0qf7g77z2ewtfyvs21eud0bl5in8g23n1pccbvzm27lor9pkrthyomyfo417rhiu32rw7iit1z80xob8sk0422uzcsio9tkdg5mwj7c8cbt8xjyph4w:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"53bjat95hp00ym48583ub8jq9ruyzwfa1e4ph8f5muz4e5choii6gbkss5dp7kg7geupydpnzrb74asao21bd27icsgug4xl3v9vkvan8b2hgidz9siflk8l3qbvtswlsd2frqz2tdjn70z3fqbspd6xbkvpu5yegf3ecyrjmc6nowe\", \"qhsfc7812u8k2jhj97vo4gxuaz5ytat6d1kn8nyzxn7d8w51u75s23r43g2guh184b1s671rdj7jtzjgxvxekab3rtx2rkdfgq9xc4juffc6r\", \"cdnskiwcf\", \"a6k2mkvnffzma7r4wdd7xhhp\", \"k7dlerej2q10bgwjnne517nwnyxkvscye397zj1lf3y15gj99ut4is7pg0qp29uqhl8gucouhn4j59k3qdquz\", \"l05n0o2zkninpbjrp1dqkpfcelex3hf9cym2vufkj4a32is88nkawik7jl88x2py0ifwd3iee5bbep83fpu3dplztmu7ligtrn225dq48jb4emaayiv7yy2rjj0jy5rtoizo4zxz0ouqtgncl3f0odb7jtvfwyre6l0964l00ne08unh\", \"klgkbnbmfos2gi3s22dtc\", \"xgtckt5znm05onpgzwlll712trzmjptswohcqvbhofg2urxg34k04ezbv9wu4x088st736aycb1ah39p0zl4ueit63l711l6yu0gl7cny56lg131c5o81t0s8y8e16um\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff23a51d-2230-33aa-9fa6-57a307b06735",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "53631883-8c17-31f4-a743-e4c0e7ea7230",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/0iq72nhca335ewe5j963772omg3ze3lmpb8b2ounvocsybm5plpdclw5nfvk5c5ntmdm0nfkkfwu1q8r9w0plblgunhcy6dq6r7gt59h7hzwf8z:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"jls3h10wcjw0ziicnr750rangqhm6n9h9za18gn0qr8z7qh6h84kpeoja1katmjeg52q89tzik78lhczu01xauftlttd0psoonhs7kyogu3y6ej83dbkjeqa8d428iv0ao6h765nt0h4agakqrptz2\",\n      \"description\" : \"Animi eaque quas et. Optio quis provident veritatis molestiae labore quasi. Sunt odio corrupti similique sint ipsam.\",\n      \"location\" : \"fdm266ii1okcbu3s0v9iy2hfdklox073ufxa8l1w7d61ukppb9oaea41rfw0zema3y5yrgpaavj0r7mz9j7dp5goobf4g3e0cq85cndnbcqmfzfamryvohgquy482mohmsto9xntx71iobzqmzxphyxh3h2h9lfhwfrlk73bykbswga302ove6i6n5cefxgr7m\",\n      \"title\" : \"Voluptatem dolorem blanditiis repellendus doloremque quis.\"\n    },\n    \"role\" : \"ojaota8q3166njhhzquplqz2d4sndss29pw8nq2ikqqoxxm4pjp0gz7mm0vcuwqw6lrmkkxhqa9i2zxzmrz0ck2aqtow0wfp76tgvt4d854070mugf9g4lbd4655p64gjeyt000bcumm380b47k602rhe\",\n    \"members\" : [ \"e5n2cgbxsu2b0sxbgp5rkbrbaal1je785ajnfq8bwd3dmktbngip8uqoqi1faddywt40fcmk5z4c65mjwfc6m4\", \"wkwmba5ir6a5ohhm9f1yrj1mzw3iitw0bfgrnqp414auhq3qjp2iadgvbv9e1gr7xxnqnzjwv49u7hv1slwd7iprasq7mndnw\", \"cjgkjayh0nwd5zw96jl3xx9rvrhim417eduphvajfbvibzt66yusmj0kewa8xurjw2og6ut772oulfhuzqm57ingwfv25anwqhfghxyls9ld5fd96u0ysiv9x3qen88ezftztzx55f8mx39jfrgne6ny8c0idzmq4gfjg4z\", \"zxk1q6c70tvqecp93apgjpcey4ribzdsrhwqhkzar62a29q3gqckkjk3w87m3smwh6uns3\", \"ppzjpq11fidfqne2jf30mn4z9kho0z7721gk86ufywqtvk0ifojkoobqoziifzptdtgvg65wv5hry6o2iqcgavex5kdtjsf4q76pkd0z8rkcflei66pcebf2jbl59xqp5s3d1719osqc\", \"5geicon3vk3jgnts8nmw6inqj4p0qez46h9bnhcleixe2gvigz876tomsdagruf6301zxotsi6lg046njqd1r0d4c1qr6up3hkt4xwcv4rauty8dg0lmo7kawl1tbvh3mhlp9lqn3jdeyamhj134y0bqzx\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"6gvdffmqzzojtdc2d3wqugqbhfe46upcqamfaf9ijxuin5ftgkqnoba0mwt0ft0xslvxohvv2hqnnlzi6krssakmfeg0269bgfx1uma96phbjsb6z0ssdibvopnc4oa\",\n      \"description\" : \"Facere saepe rerum rerum nihil. Odit voluptatum et quia. Odio nesciunt occaecati sed veniam.\",\n      \"location\" : \"915ooid86lu70febblpe70olezsrxih28hr1aqrc7ovuxt1k2r64wu61sm45eh7hh5hwjdx8jsgmymkyq6wcy2\",\n      \"title\" : \"Dolorum vero qui ea sunt autem ut.\"\n    },\n    \"role\" : \"c0osd649g0o8tzwppy20c8qrimvda5d1\",\n    \"members\" : [ \"rmrtap0c6wagl8mie0cx68d6fmksbzu4qwl2xakq7ohdmpqrz\", \"it5p33mwzjahtypogo7myikjetosxazla1lrmnwdf\", \"dgv\", \"b0odlli0bxzgs\", \"x8pqyi6dcd3jac3ywkso3wm8mqyi0qkol07tuj4ui1a93b6pe525f3ft1r42awt3qkusz9u0mipn4wax0porxe3kocn1k92pd5sr3tlpwoubznkqhjik5n9d7dnqcvuqyujmo\", \"aljwxwjz4ppxfqw0dwdtbj8289nf4he0s6p105nzvrh7g34b29dcb81r2y1mjqwssnwjxgz2qgiul1tcnc6uzj16evlkflhazx135rj5k6bc5e38w2hf8rn9n4omtypuc47zsd0vhq5je8ipqiyr28\", \"moahgo12xgfvohy5n1mazn3wtrzh6z7zmpytiomh33wurdu5jvo7y55pugohtxrvfdnkfpivcy2sf6f92nxtnlwgzmlfuimt5ylmw15sqmrayptu4h9\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"fbhe7kgvf843v6j7sokm99ggrxso5b8pllodokfbmf0fz3qcp5de9ofe95q4wt3cqi34kyzi0995yvvixbgihmhfffjxkjqi4e0tt\",\n      \"description\" : \"Molestias voluptates est quidem quasi quia iure amet. Rerum nostrum sit perferendis ut. Deserunt mollitia doloribus.\",\n      \"location\" : \"qztpvdjtsh32jhvb6ij21qsf1o6yviw3plb8oyy0wqpqwooq52wl7xdczzbys8b4xlcmg44op4976mqaf2315oslw2f27iocdq6le8whfhiaviz32ph80qbjgpmh7hmctgtpvakbykdejkcfcnlpggw1zhl\",\n      \"title\" : \"Fugiat non dicta nobis dolorum et.\"\n    },\n    \"role\" : \"npbgwphmi4krfmndczuusxjt8tz7zf7aix9yguq7o9p3w2icmvyqhzu3pwvklr4xf7v48a7kpc4psqd0oab0kuqbkb5gp1n3zwl06qgc2c3817awysph73ws0dd4jl66pv5sjh9fqt2u1rz4xk6af9d\",\n    \"members\" : [ \"mxdq1e6gof9r02h12l9hw91s6i3vx7n4ymci7hhcsgdfbj4vpdibpjh9ommywzxfpu0k2v3nspl1v4y99x1yzy9mwk15gy80gkrokomn5dzihxzisuxg6p5fbcek2r9mbcmizz1m35dhe3weons2w22xgp\", \"p7q9xdkx8ktc3ahydhujrua3tzyfjjcca\", \"fcm5htohfxajw51merc9r4bjky411dwqk2eklzban7ma97wscms08ux9hgwfze1gvnfb3foau5gjdkpy1e7588al7nlt6nvh0b1gb8en8z4i47kqu712k6aqyo16el50quwq\", \"hac9nmpwcepamf1az6ic0vfa1rgwltl578gmsnoprgj4fzrblnlxkpe6qgn7ce12ptj8vw0tcx0g1vzy1klldh5obvp4xdevgd52f0mvm2mgf3dqwzeqvdj6kf4p5fn84j6clv6xjfsmyfu0a6sirgd999ug0z\", \"46h31h37ku6zhaifpaijl671f4fifok3ad6m7v350lgykrlu7ktq2pfihlflfmetl3yloxs2p3vrq0ulsq6agejuz92s5vfryr9805fxdtqhyd57si8478mgpy2xymyo3rnnv94wea57tu3dverdkrl5bx5mxj9lxp8mz868awcvtk4u5rwnezgs5\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"yp5fe9mzd22uomhnjeme5suk9gq2g0sfiv9xe7dci5ua0ia7v95gqos3cmlugibhz9dztiqqlv8zdc04e4i04fbl\",\n      \"description\" : \"Inventore sit facere mollitia assumenda expedita nobis pariatur. Qui sapiente assumenda. Ullam est repudiandae minus recusandae reiciendis. In eius sapiente at. Voluptatem similique sit ullam temporib\",\n      \"location\" : \"0q9lj7nannhvtbf9b7yyvfywtjt4ah4ctwkzm6egyb97nlhr8dyztvqsdfsftxah3yqifxl8eg49gwpwccejwjxx669qa0gbl42081dyveo32hyg2m8a358xlorimkeyknl2o2fe29u6kwqbe3utgqt1t5rfyb1qvizbqwhkf2xp5cl9phwwttmyjipw5qo\",\n      \"title\" : \"Dignissimos doloribus eveniet corrupti minus.\"\n    },\n    \"role\" : \"x2dhra0xswogs2mii6cjlv1u2uuw84sqq3uff60xhnirrc3xm2xwyn19ff8k89t2nzo0fg4bl6dqjmtvnso6mrvz91tvrwyzu7dt6gdzm6daqq84hmlaizwuw29ptr\",\n    \"members\" : [ \"twfuhqzap675ql7m17yxt9uk3nrfq8mzqbgwfqkf069jlxpwj4cmn9x4uecwsh4wr7c0ng5fg4al009m8xaj5qe2cd2s4bygk1pk5czsltnjiu6cuhkqcaapl5yhp\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"m4ehm3292f6q5ndlymynhlhwk0tf44n6wwjb6772q15a3ba78ytf8oc8e57y0lca3kc2do1yzj7su80sob8afxy0fmzpuyhky8b7ays0935p4ul4bjou4ow4zmsdmoerho1a3pc7h47\",\n      \"description\" : \"Quidem repellendus tempore. Repudiandae itaque voluptatum natus et qui. Adipisci earum rem quidem. Ipsum debitis velit aspernatur illo repellat.\",\n      \"location\" : \"ytxcu857ybp21lf68b9qu1ejf2nr787t3a7z3fy43gd5lijmtxhyhyxv2sckbjq15mutg6wgi8klmk3v1tg71hhgh11vpd4bziuuwys7rawwz7g4raegyufqs8a366w46ijabx4et4uu0zwhv\",\n      \"title\" : \"Quia quidem nam et laborum.\"\n    },\n    \"role\" : \"i9jd9d3thr0rnyi5mt6tazdx6scvi10x7jbzldly2529ha8e2rda1706m45b8mg5njqsdpznwsrngpjp70lsfo5aewkd5qjd6ngx0czj6m064mrv2wu4i67ecoo560sieo400r8wg11cqmqwujnwb6id0savlcvbomsjgdvbs66783i\",\n    \"members\" : [ \"ra0dxhbv9c3peec75ph8jvl0aadcbbe6icyyycu03subpz0vfu39de4l17wsbzqfohxbagp823aisf5buvrj0gtdsf6r2kph5s3npuh5gj3dndjd6atisn94e8\", \"8etwl1oufxzygtrcop62j4bodrh31afop1fakdps751eyzasscxje1xvw1kwh83b8ppqp02ezmr9pep0fii6qbpn0aytbt7dayeqtmuzlt6mjetlbm1orv7du3nyzw92p3brkozjzdxkphmi8hsxsbjlpgifwk6lnhr1lonmwr1xb054cjmdv1du1178j4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"jbu532cdoa10apkmkzjom8e37v6gproyb1m3wgzluvggnp4ghfwu5pg8xz9re130l6krw7wsif0rnuqkxrn8jn8jc9jztf6ht320mrdjozuwa2nktwd9pjkv3oq\",\n      \"description\" : \"Dolorum animi impedit nulla iusto ut nihil rerum. Aperiam in molestias sunt alias. Repellendus unde quidem vitae consequatur et totam doloremque. Atque illo sed. Aliquam neque dolor cumque.\",\n      \"location\" : \"v8xcc9cemo6y6\",\n      \"title\" : \"Omnis non ex iusto laudantium non id.\"\n    },\n    \"role\" : \"1n4db8cd2ua0h6wpf6y2bc9ubyu4ihtbggg1m5ke44cp0y5acirqka6otf736\",\n    \"members\" : [ \"dhb6m1znodtbs67olo1i1fd8wlbef1n2mntonz9upkgtki4ajzp2ic6hs8dx0vz7fhkic5vig8v5zncspe51ivkcr3t41k0ot15vra25lbogog8s1gtjl8ih7b1j37cb8t5cojww0tl9rnrc0kptza9rijz7pts9kfef9ghzk4wg9h\", \"ari2lttc4mtq837fl3\", \"b3yauw01o07lhrjdl10t9y94mrs0tjjsaqw67euodrba2dq5ymyqzp6ptrtckki5dmcqgjn8jda7kfeooyh88th1mn0jyw7z037wh3oqtsq8ahuhc9dwqjlembgoq675qxsqeboizp9y6c22teygzapu9\", \"c66w6nymwffg257szyu4igz4oc2lyd6bof79dggxr6ja4qh3fhd30mx2frw08aho5ogdtwb84r810vtcmu6sr9egrqpq30jlf6qr773hf5ubyrjf491wts6pu0utzwlrys87e88y80icsoakqvbauhlweq2yr\", \"a7vamvxqsfawiy4qiuz0syxl81ds5yfgep4q4jr61ufd3pl52gqykfruzlxhpbrvz772kp5kqd3eb728pf2ugbpqq0qsaiyj65hmalpkg1zcpc\", \"jupee9n6znokedij5dk56v0sisyojujq1of16ybxo5asgbf2g9knke6oat2viso2err2bcp601xfst2sw0y3ql8\", \"am95cdg667bhl1h2zgorkrcnkvcwc67dzbyxm4th8wct2oh3j44lkrz0ijv2xn3oizwahau55c32\", \"h985nuc7rc9c9867txtt8krj9j4oh2c3ghycd5encwv1usygtgejv012a6j82ne2jxbl5sdxio8wfkbmvhnrtudf5cf3f7wltcpqfr7vbwbx29qquz3uo2norkreaag7aax3u96vah6rxruln6b\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"bc1mlgh7624yp2u230wj0haexa5zl4w06wobbf1j33xblawd3oybip4p44t35f9ksods25\",\n      \"description\" : \"Doloribus ipsa iure voluptas rerum laudantium quis quibusdam. Explicabo sed temporibus inventore nulla distinctio sit. Sed tenetur beatae quia cumque et sit molestias. Numquam aut fugit aliquam.\",\n      \"location\" : \"jtuv0o7aqluahiahwc7qdx3mygsu30zy6qvrf902moade3tf4o4sh1zjdmqvx0vp0pzg6w2c2qm9ir\",\n      \"title\" : \"Repellat odit qui quod et accusantium magni velit.\"\n    },\n    \"role\" : \"bvebzyss1g5te9aq1jtu70xnalbz0fr94dgarc7kdvblzdrwg25u8ne45ij5auabn4nlm0a487ysr1p78amxa61vdzxay4gjsc81wj9v2p9lvpzhvixwgedbibybrgcp7smrki99vh\",\n    \"members\" : [ \"swlhr8g7r0acdcp06gepc\", \"eff6t\", \"qgrwkv4p3yep0uwc99fk203266oi5w9hmv52mxoi4ltpkreqebarsxjrtunp17wyu5texwpol4z52hfnamrrtercvd469a083eamdw8g1r3olm0zgi1bw3icswlddtqa7d1x9hlapthozsnldmmt7imos62qx941wrh2ust57my3u\", \"cx9t9peqr5xylza75e\", \"l05tpxdfosje8rd9m4ox57zkiuixv608bkam5yxrpg863amsmn27p44xi8lwh9wyo0b33hlj1y1ivl5yvx6tbb7gsaub0emiqd42srx615blzxkxhhsplu1g3want50tfm35c9kgsl6me45xm1n0kfg6z9s2zygifwrd7q8y78p99sa8gbgn\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"8doj362mtfooyjo85na7gfq4ce94vdx0jttdsddmffo6m6gxw1jt2xwhbwkmeqzrmaabwesz5se5ezkzteyl4tvm6n6rvpfey7w6e09cgkx6lb0osqzf0ewx31v06v8x5u\",\n      \"description\" : \"Et molestias voluptas nemo. Sequi quae quaerat nesciunt. Ratione iusto sint accusantium dolores voluptas dolores. Illum sit dolorum recusandae dolore.\",\n      \"location\" : \"ekduv0k3wzxh8oodr5535gfwmzs161ueftp0bdmgw08c8xhhmk75t0qkibvx49vtw3ruvdvnqcw69uz50rlda0qn3zfhlr7p301evfggyb0inq\",\n      \"title\" : \"Atque minus voluptate alias.\"\n    },\n    \"role\" : \"qhpm4nrjkshggp2beweqry3tnbjzh1kx60tmrfnfckcu76bfzcibzbepah5zgwyu\",\n    \"members\" : [ \"u7g97ncsaatozghd3i8n3pn64dcfsq1i6nd89oizdamkrbtlu0l57sstdxb1sqzgdg4\", \"8yk8npe0h57offocuscclcisgi4s1qjhbmlxzdyzsfxqfil4vdq6w88v3jzeyc0acchqzapugxi9p3ik2q4vte4bvqsg1ty2t5cwqzic7tu2qm23mczqbc4kqy19ururl9waxeapu52dgb27bimd7\", \"08xzid5z21n1s16gg04kla377y74rcrbnd7yh44kiv40wzm9hti1bzmxor44j2j06c2m78k9yznykz8f7ajual89owt9hscg08dlhnyqmefcif02mf6fgu5gaylnj450hy59rq0nfs84l92f2cnsftqticxif4db16hrdabh8gzmk86hwob9gfltpb4ie\", \"q5qb9j7gt6gj1agwkzu0r1bqmsvwelvtqls2sw98rondvwtqdw0\", \"xwsqw7o1w5ap5tng6kuiph0tlnaezeizmvrz8989n445gpsxbgaok3vl24jnrj4646ti7s6bfhqorbcm88k5cwxzc6ktekwzwr7jq9up2x9v7h8nv33s7moyple14e4lxdhz90gy4b5xotj\", \"kaejrhw4h0n21bj9dc9g7od165brkspgwq6xbrhu0ahm4g9gqm3estibsmewf5i0pvowulnqbvi24v1m6u6fatrqyu32gfqhpztp7wn0sgr7vwj8xoesco\" ]\n  } ],\n  \"etag\" : \"cumque\",\n  \"version\" : 556305149,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"muhnhdr4qddj6dj5o3rsoononkdi7hptk8g03yvgzolq5hdu61sryrmcfxxg1dk6z8hbyxzczjtp\", \"g6kpsl1flrx1p427w8h40yi8fsqmvqwb9\", \"33jhhhj1lqtp20lihw871u0gx0w7bkkl17cjtnn2he2959zilbe9fijov86sakbh00dpumm3wzto5olzt9upklrsdbrpwew5yk95r5wmfghkekmcpspl3xj7cgf6ikn\", \"6i7jefw6ux2ar5lndj917tmsb7vj7m0jpbnlvvml7tzumhq7ifknmbt4eond76mb43lw8jbc4hn7qqu8zf2n2vxeye4ri7eqtp1f91jy1rqbu2602ghu46mps6zp47wauy7q1vlvii1\", \"yjprejozdpafu5vao9leyz2lryif2qwbnm77e6e\", \"96talim1pbcikc20vhrblq5sd6d5vhjh8is0nvk0tkqulbqgp3bt7cesvdf3ytvvr\", \"g1avg6u517rmq4yk3fhqj571fgbxgo1yd8quhobw72jsba2ui3f9vfc54el58k2jjtlxcno6z79yn1k4bymax76q50arcnleo01tzax3l8bictf1r9b1r\", \"nv2g8ts4wmm9b8pkrk4mc71c79am166wboo3dbfeo7fcatsq6pguggw0aboigm4fq7ghhvinykryrx\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"3rnm0tm9iu1ngsuo5beuuenmgkxbnfg9e\", \"8tysdwetk75c1z46tw9ce0hhfotuvall7i9oc9gs0fjyo0ltrcvy\", \"fhbu9rnahnvbu75njkhezijcjafp9iv8kxd1lmtellilql0scotusslm7bcm2rwz7j9z068gc1jb9xjxh917q97dlgeuha5uw7xhe5x8p0veg5o1acfn43cvk1451k37qgfj2s\" ]\n    } ],\n    \"service\" : \"szze48saib7mac1nu93usikodk12e1osnauu67oxzz9hq1b3harftm600ryapvr6fr8s7zm7ye83007ksv1gop9lfy3gmtvy9gz152ugnbjh2ffotz01trsnfxq0ztgg0ocxeqhluiz7ms29fu5zfaber9gsep2gd8u2v\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"6jtbf8mwgg0zuhdyt4ba99unw4est2i61qbplb5aryk5sabop0nlp66w2ovkmxrf6ciaqfwk5heg1kslfei519w2k3np4v2emeyi7auc8d6qr7f3rh3e3ukil04p6k\", \"bzm3laptvcos9rx21qh29qa0qndal4ku2wff6i7ifswf04h6fgqq2slzdqvvhqdbvceglnl6m4kjqsgpsbgfveigo8q7qd05t40jtzlcftfcikw0wsr78drs0x2uj2thx\", \"7uojtohrteptm9495owk9z2s0t92xl32kxwoak2ygewvzu7mkhq8qq605ayp7cmz6xyat3693dxz6928m1p2n37nxbgj9n6chmemsq08lu1xo0dcn4v5i9wjp8rjvwwvgtd0dt9nh9oi8o30unqaipuy1aw6m7vp1dpew8teemvtehxxpdt74j4yw7tql68ei9nnjmn\", \"o0p9ie1muu9vwwl4b0532uxo1rw2dpobt3ccgno4xlygml2zywdw6gfpxmzipa0zyyljv83kwmr0tbfai82ts8z9cdrg4xr12ju11wdqrk4xmdtzbqfl8d9p1t5lujwr9ohi8n6dnt4yfrbr231dawz498dgb3kl\", \"kgm03o3kobmductzbb1bubhp44qgif58xo5nytfmd1gtlg2ifvfbt0ni2jy1gc77dw7ha31slp28rmq3o5joc0e9mhwo6o51g0ljki5i665owpks244miece8l4lyjxi\", \"z8o5pizoxf0i1ltw5hlmnbu5eyzio1663km2wkdcgdd9mylz9o3nzgcf8n8mqdc8laaxat0r1bmbh2aq6rpxh7djiblrvfat\", \"zmtv4xsl3hd9a03b8z4lp\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"47ndicxnhh3h7qfb4f4y1unp6vxb9hjzxh3gbvs9ga9ai9vx4o2vfw6fve7yjwii6yfhn2phsitlr97vylx5dwq668gm95vfqqjngrkk015ezxmvhorqfcamgfg6so1paw7c4n6d9l6f7c4oieimel7\", \"od765i0w2cf04l855g0izliuayfe7ja2iqb8yi3iunu707xqdzfiw4kmrptxsj32q4xbcxy8rn4ofxjbsh6ig48n5wrdt1ylyce4zsiau6gzw4k9rmxd7r7nrb3xzqa77gs2v36sbns97glsk38jljr88bo19msk1yhm15weu6mtl153ba3l3gkvxq\", \"n1omkd2jz7qgaed6t5vgbvv7r2zm0mtklfomajaqbumnfwp46qqvvxg6u4t8a60ezb3yqcsquhmmnr0sybmx9a80h41eecociu5eiwvf27i70qmh\", \"yyh89g19lqi837etm5bfomcwma9qkw2fdrt2mlrhtzyg6c18xc09kmi2h59e3o9suhdsljb18xv033sjydrsbj11uzn8s70jzm05xadpgkkdf7l0o4fg603yt4v8cpx9noqezp\" ]\n    } ],\n    \"service\" : \"17tif4wem72shiifgsey470ugmaomist23dc47c0ubon\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mj1vvls0j45nj95gflz33po19ekaai44m21p39pfu468awo2ukp19q0khdpntnpvc\", \"c2usf84dc58mm\", \"vsz3uf550upopf1nnpupjsd1kr4vuscntea541mcx5b7lh6qd0fdknuoafwvjklttfi5idrogajesi9nfy7uteam06wtozi7piaza0mhi5wgl3djwedbm2wni\", \"ne6kdy5ifp8l0fgvxkv67akgmnfiw9q7un5tw53fph65929eu2dv639mbiwu74qtbvgk2hguqsrdhr2anc51mb4u9m8jyj8yhkpx1exhxu50tx7hcu1zqt0lv35x71anyve9n0yt4fvjcw11h0bmjbqvzhl\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"swh1nvd22j9ofh41z0icm4y2aterfwh3xolh5z2pxssxnt9ue5req89uy7czj32unsfgj6l46wi441gw0nl174wt9b5pepkspy98pdpwtxtnedi7hyg6qaf799v6j5n2tre4hz44fp0kcdv8p6w96h53xlff6\", \"hn6wjbyxjffk6zlhae1ys902a3ku9otiu5av0tihvqqc0sjpun5mr5iwn5x03r20i985iraqid3531kp608olx\", \"9yzmrzgtzgqidf9bgom46vx93wymnj1ju77vpc24q9h91aaeqvl1mqq6\" ]\n    } ],\n    \"service\" : \"jnc135gkply2ykqxqep78ezjewwd16sdtqik7vp6gud0akldhvpocg3m3hndy7bu8e2bw4dllocpg5ou4clc4734omylq8bp38gk3q7znlith22hh7djqbc0907xn7d3zef32qo1j0rjb4ksta2y8al1ih9mhpc\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"8nv3eielf1yjcw6j\", \"jcztphz3zo12kw3wyhi84hjdru8oz26h2skllbbifqiojq5danjqm59ky4a9zowuc6heyo4ueri95zm0vutnv66iuauurmko0adskeewdfffksd6cz76gvfw1okrndrivzbqs26i49zwefadyp3sfordlbkzoaj816pd09vqiik26yyvomvh2tqhbq5zobgvx\", \"yvuu4idh6c0kg29h24uoe3gx6wk1ljarx5eybf912p06j65wr27b7fh2c5mpvy2log1mztqssp1po8mq9pe9r6f82yvc8429wuda82n17oravf5cfzahj08yc8r7mld7090yrtd5k3urp3tmv9dydwbx53d8cx3ao7fzyfy8nw52g9j8pq5fmyo4ynv5dpwe\", \"cxz\", \"kp247edgmovsnxtnumv7f5xqmpbqvhpf6gpry77sx5yavwtbgky9he40zz8ifbm7ddu90xtgwhm7vd5x6xb8nttcxyvy4oijrk2\", \"gki7v1w6nx5ipjzrscpuvd47ljxemzbf769b1qfqn09f2c9qfzdq5wme03l\", \"7bzzzz3squ976o7sijj6mbl9mj9fu9hp4xeaaeg51pvg0k8r6gls8kuhwh\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"mzynwkuazmbgo96uj4igbsacptmby9ar4e0l979ocnq4adtdw838br648x8hzhjv5osml8m30ocazd36i233ofajatqtaq4ugzxek4qfrjwsl5l1w6b7\", \"61egvn5xcr68j43wg0c0zriiv2cqrbfwcc\", \"3m4edwri2kbx66s15uzfcqye5p8z6b9beot2x39wp5avfqnt543cn9vx\", \"bec2737b81tw3zsgt7lgmvadt4n7p495utc2xwsl3f31t2en16y0g1p48bf1pmral4iv09kuusagkgt67wmglfh38y7c9sn8qht71c59x6r7ev81twd\", \"km1doc2q3aq5xjxwvyzs4oc8pt3iblxa1mw8q4amwhpojugd5ynjemiakeoi5kvsmrfo0z30e0t0lty9to74pbf6b91ipweofbk4qh2yqxfp9v3qjw54faku8op62ll5j4l49d2y6u03fd26jiv63xg\", \"6mz3rivid7ttttqkwzce7zzy7avyiknttqhgmwnaljj00g1s7np9u2qcjqyzow0oaru6bhrnusoxyvcmc5q7yzk1d1e0b7sm06opu7wl7l4byu9yz77nht82mpq52ledwlkwb8p8g63rezroyvja9unl1gfxjxsb8rd7t050u0scws6g803s0c77n9tx8kuy\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ogd3zk6uxr72u191l4igzcw\", \"4jr7zpxwmljo8wsxqo3kisswlqh0smr63jcz7mwd4efwrkmoeui4sb3tg8w39aji\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"og7p54i6gz5new4jt87g3ps1rd8x8nilibdmlnbqoyjxfrd7qs1drw8m0ji110t1kx0oeby5rp2lzcrp0dpmf3vtyfcms24tlucwaxechscf9s47kvpqvttp4x2uwo42rewlrh7blur3ruzu\", \"5y6ffv3hu14gpne2jd9jndw8h3l0imfh0wqzw1yxl90hmcq1isix7qtmwu3yfpbmfshkwsbvdg84sju9xfw51v3qhueb2cghozaecvn552nl6g1kym5ooe2nlv68hk2alcx04zi2d0e05m0s7mf2ckyluujphzrlc7j3jcrqdhjopf30y21b3y6wm\", \"jouj13p35p94die3k60rw0sed48zzwmk05poyt5749t\", \"x1kyayil0vefzu\", \"o18emexqb19vbqtm6k2knxh9s37zooyfnul4tdz12y4lhi0211o3slg7sjns88mwggo4tggbjm1qdn2qb1xicb7ngjfihrg9xjty6yqdej1x098bgwvs4rzcrj8vmcc4nr8pt8szrf0b87utgzstjlv8qjmdnk46tpdddmcth1\", \"9by2hundjh41ah02aivnphe0c3sjvc5vue3ovswq5la0kz6tk85vds2k0vkmnu7u2yeud50wc3hsvx1ic\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"3a7k83aayor9sty7g69gklmr2hr10f72wwckjd9skemoovarsmhn6jkwde3zhhtagej38krkpv3minvrg9c2osz5i2il2k2\", \"p35klo1zxd8mhtctrrje7l60e8dygjb4pp3vg4vpcex37owfvgip7c8iojmd7a5dc1vd3c7yeeeo3r\", \"rx178o19bxlutg4pu5klpds1ldr2ly71akeuqrz1tbe3xfe1zuk9bw0n9w049bkxmk9y5tr9tfnubfnqmbseh39qpfl62av77pvbao2gqaegzrkr9arhplyfprzwj4z584iazxb\", \"9b2tiitgca4qh4hzy45cm0ys7aoe2hcarzfqzedhb0unuur0uos7ondv2h6xfnulyxkk393n0ihljgv7297wf0rdtqinaetcbm0h7sidyvzk1qmbw78j0uslg5son40no6j26uzczhecvdn8temcadasnqggvkd0a\", \"99u9aeteqabsyu3y69axc1m8xws0k1muudirsz8zow4tzn1ig1fd64jgs0tiyzbpxadew5tcain9job5mjwta09r9af2jvqg3up80jtdzma9k0chh7x26oct8sfat4iyoi7c2ung0uvkd3wfps1ew8eds8mo5j\", \"cclktve1jcnqjqbqnzz1342voxdpzrguyc03jo5r1591e5gtjjjfv24b020itkc4pden\", \"xnjk2xyoboxqx2gei6vpo58mgt0bp2s842d21fd8r0te43hmlz2axjtw2m950xnghiai929pjsc2vp7okwub2gkx\", \"d7h977dpsc8s4qk7k06tfse0wlbzntjglqgqkxbvsn91jvorz48fl4ra7j4s3\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"7o9dbpm6lmqmokfbc6b5vyjj550hj0ye0ngb4aphabtx183702zuq79h6t0twfmz8lxqccn8sbnqf6j6xyz4sy0ldaeoj9vu31xi7mwq1np51mze\", \"90dpe7anq7thc6klvwfkawijuxo6lf79jquuads3ao9ays8q3rfq2hzuitvicqb8rvyh4l9wm4te3rhdryowr895bu8wl8u0kxun4l65lv5uk52uj2nf0y57ghfzqtfbzior3efoeu1lc8glqlmatjn36gprtn3iwd2qcnvzenczb5\", \"vmjf3pgy0u5ppliyiuvh9aima7uiiwzj164i2tonofqcy0wb52iauj583h2eme1f53qyivjjj4u53ejzrj1gnwde9mv4ohx02is1wf28geeeunxecqqdbtec2uytqdfbdagw8uvg4dpwkvchtjmc06wfgoup9n3fpd6finn39wf3p2r71ez8c3w2f1ghotic60r25uij\", \"gb73aa44wgrz44op6zowoaod1szpj8at2edaxgp5fv038cdl7ek8wyoe3rshb8\", \"sm8\", \"e00oyvcc9x0ong59ze0gqkzksi9xbr359anen7rhovntun792vkcnkmn9o505qsesf69u2nl4yfsdx4wmdjc5omtxc\", \"2gnbibbfxr03i3nkur8zp4jolri9gchcqqndfn5k7txkjrxd6f43ayekcjzvi0xbuqzcdvq4r3kbzdkhrchqdy3oy488ogcf70vj48kb4sfbxv99cc86c8qaox7w67z8w02m3d2cb37goof5vdthehgc9\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"e6inwng5rle0mgxhgviwoxphyo0x575o1v9a6vpjry6wtzt0tnqfhxeagv\", \"oos9k0mboq351dy8ddlx58u3o2sfywq1c26abdr\", \"x7klmwp8dvradd3tvljxxjl9jadq53f244ktv3myeuqxqtfiwr1dd0jfjn3uqwcam3u189yp4v5g49epsvouvnyd7oopiof2v2wgwq1iqqvffpqad6oc3kb7pxl5dioucm4bpn8dguq68m633tpflals1itcbew7dr2stna6f90dt7ae3uz0dl8p83r1hdudl\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"4mygef5ym70v7808zczpe6q30gv6okoksgm9e7d8em0rnbu0wp0s39i8wm26xhi1nbju9rml8zssaja392uccndtq0atj5xk7vlfqn10uvl\", \"3c8gp7fssy8jcu4ll6keehpjc247gahycc5hju8jgrtxv7xi7cyxb68bm2fobbwu5zqew69wbpivvmbu2arpabtvoxssopmv32n7p8zoa2ltrzjou5trlrpa5y1aczdtdfgvg4ml9whgrbcay6imizrefdx66iufa0qan5\", \"vvm8y75g3osix89u5y70t4fcwble5bhtayhc5yltqvee3vojtea20no0vk10\", \"cvj26f54bxa0y2ww7houex2zl70k3nvzuhru7nlwz6vk63j14zloj6nhk2shnokjmcqbr204d09jwozt18gxm9ussold5ice1ol4\" ]\n    } ],\n    \"service\" : \"j4ujlswgju8xhrrxos8lbb4w91yt1hf2zum5xf4aqg2fkysfwkfiohy459nn3v16rm1vw8ukd5uxvogbqc86uqyihar7zupbbel99fcbebj5lp5l22kc17yb7fagtuenkgugevcf8jybzgt5g46g\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"3xsnw2zyl869jwr0pagl57cbilwv09kx\", \"zvp55kmr42fwmr5wue5s4bxfexefsv3f6k6c2lmflht6yp8ruf6y46mx9zcrc1nezm8q6vcju7gzrlm7vf1k6nq9y9t3vn3416plq03xk4kzdamo5kqaxylk9xicxkftpf8ri6vi9viqnwon942fn4jla52edp8qt3f6i5w0sxasr00\", \"g6hso4gaq0ke9obidafiozef1or0pqhocioz19vaxavml7fp4tp9ap99c7ar299zf5nbxcf4g9gr1iounxhy6qbk4dlv1opkws91d13cj7ll93\", \"4g8rcb5vwmd8duoqqjegmagkz2ho5b1uole5mo4jpejvej5sj21xb4oh4wqj6idy7u7ere2um49zo5lrui948esv3264g9ipmj37ts1pg7nvq9kzp9jrchwwozs8qjwyn8v\", \"8yhyr58jrrjd0vx775kld5h9jvtdvmbzq8ftpifo9ehnu9ak182ik2cjrnda1hphsgnpat7fls5b66o0d6o2xohs8s2ay2ns0ebq3fm4vhv5q\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ebgqrn22p16wsc4u63u32uw8pljc6y1gpqeyk69fm4l1493yqb7n\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"8ihdfcakt1cc08hnu2uos5tjqykhkohqbkkooo85mciooddltfr3v95s3johmvsmu0r5d9rzj3y0wvv1prlfbf0b1w4tyxeyk2v06yfc5ofalynma3b6xfitv2k2eixiy9702nlb7oqsw6h8sevxpynpus7ls27sianfi4vix2v4e81kge90jzcn8ry805ane8s7r9\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"526mnvtiwbg7ohtpyyji6n6jish9lfmj9tht5snbj6mv7qhg3d4kj46jmptsog5f85ecm7ueljt1r7z7lyha6i6j1mp63ykuvhjkktvw9t2kk4niy291sx54u\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"226tkeguplbzs0cc1ruwzsbxftoq341f4h3vgchtgztllv71gz40wf1gbs0d0n4mw4l3aozktgw21r8gdqpusy5ln6n6rg0m4vqa5sqptpw77ej5ujc87jvqnci127b2mb\", \"0qlgko22uyrbwgw88k1hoqszmrqbwuhhlq7ms\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"w6of94g81s0kyv9hp7cp75xttvdo7ybpgsb8fbvjlqkyrm96ltrzh7itvl7rfrnzrzz2eg2lwm\", \"hupzi5roem190xku5d6hmci25ilwgni6z7a3oxrmlfyrmmk31miflatguipxsdruexmqpmila0ftg95f97u01my1wrgk9md232wbk79pan8i953o9goq0t81zdsdr6b6i9e7usoe119\", \"h8qxbsvw00c7ds2bwat8on2b5tq9zusbo378lvaqxk9s62j6tomqpzk58ljoivr95k536qkp\", \"tx5o8dhdxwkbklx12klkwq7nbquepjtelltf7m34jh9c0trq5g\", \"dmjzd8xhxdhdby6ci9uzdhw5ckq1c5bq5rka3k21axct43a8s7dkg536cqbpel6afq5zg3zhmbfnofokzzhxw3v8pgqxe37ojx5sgxo3a2na4oe5xmrowu2o4a4p\", \"yvmqnt2q7a1tekdbkl9vmqhrkstts7saekxknllddbkv9jfykxbjc3zrab0fylt8f4v6d0n3p485n5xojjmk2s6f1008gx1fhcgbk0l6f2rt7b6aab1voibs4o\", \"sc4yv2zrokmkuh8g65v1oe8f81xxtjcva47j1p9dimolorq4jo93qsdljjsdipgjjn1rc8tnbpq30qk8w5gbf6ttswu6ze412z6rdcrhtdtmg7gqvc9kcl1mj02upjantmrmwlzvrm80alg8ztvu9w2l5c1c8kcv3qkw0285t5bzn52rsg76qpmu1amho\", \"5h3vmk7zby9yldw2tgmp9hkxbe1tgrfn8g3umo8zvskv1cqvrkgx44k18abkak7gsf2c9hxzmgld9o127bce0tb7izpqaoziaqaidbik0upjfmanstty49djcicmuhumyz8rozsl854eeucs8x2jtpo1z2f5hmwyg3h14z7iz1h6eckfwzv\" ]\n    } ],\n    \"service\" : \"ofk5gxa9dy7hl0id3xbzgivp41psnv63o5eukc20wjvjc9x4k8tx56lchm17l77g4a0solnb8ln81stcj48811wg2afyeo753mec9wbqyb8b03x9ohdy8dmbdn76jdpcjt\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "53631883-8c17-31f4-a743-e4c0e7ea7230",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "4c3c2aa5-61fb-3828-bbdb-5ddd9fcc35ed",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/bubvx3n6z889m7:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"1uyu5\",\n      \"description\" : \"Voluptatem culpa laboriosam vel fuga repudiandae. Eum dolores ullam. Enim ut rerum in. Aut officia optio aliquam aut. Facere vitae neque repellat rerum esse fuga est.\",\n      \"location\" : \"udsuw0uywp0hgsx4zgjk4tdji33dlg2uwzbpdc0658s4pxpxq2wsklga7nerj6t3fub48d9h3ptdlohscgrv4hwg0y6gicfc9b7zisiun8z7hilw80t\",\n      \"title\" : \"Laudantium vero asperiores sint.\"\n    },\n    \"role\" : \"bgyejnvunji22ia91r5mm3oo9vx890w4jytnf2zw5moimv0d78q47hv4xre6xa6wkiawloa6bw4hoda28rcma9feoffsv0l7ii9fni840wjv1fs\",\n    \"members\" : [ \"a3khr9ez4nvlswuvc5no2vmvptj0c7dp95vwmdljo4gjho0n0j0xfce7pn4gezbi0gac0jrg2v62p23lzwbclcuupc9z143ek4i7snvu0v6ntyh5w489kkssr55ib\", \"f5mzecgvbl6oybfoojpga2tiuv966runpp5oc6mlquxchp9xi8mmjczdz89g2cfazz239vlvql7dzu1zp085wt3en6awz7r0tv6u3ikr\", \"3fawomdinn3bkoeacic2s0thbogsevza0mf2mlaqdyrefk4axqnmi6v8iq7vietmzrtwe0dga85ump492513d\", \"jtoca3jhlezrkv3ickb4qhcvj5coox40y0fkmr19mfz521qmragcw4yz42qv3rmfzym2mm5p3\", \"zjlmfi6fpbp3ip52toa4ix0u10tga4esp823pubti9b370kqfhyvloxbnl2k45ethipr15e1y6kc8zikutdf886gyjza08uz72dzcsqs5lf58fiys5fobb717dcfhfbivz2ndcckrfsf7lac7hwnzgjucfmnoo5yhht75n0r9nbpz7ske0xoo2fr2i45gwo7hd\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"4sw73fu8sb41hkru\",\n      \"description\" : \"Quo dolores alias commodi atque fugiat. Nostrum aut molestias sapiente. Odit recusandae iure est est repellat voluptatum. Tempora consequatur laudantium. Sed optio id.\",\n      \"location\" : \"av2q44k6pd2xutqg8ftwhrw31yg1mwyg0cm21zn4ajd5lgbpr4s0v2hj0l0ldf43l61yi87nebb1ogi\",\n      \"title\" : \"Placeat non enim deserunt modi minima ut delectus.\"\n    },\n    \"role\" : \"8o6pvlacy7y9fth6r4bwg8mzairt9wxgcl9gcx83xkilar7hrz9lnafe\",\n    \"members\" : [ \"9yzm0dd84fssudtrx\", \"519kkbirzzn88f1cflo9yhxcgadp9v92yqnmspoeoh1bup6n77zwmwqr53iqivwdt8zwpw2ubepfikce65imcjh4n7giyg639a1i13s1pgt7bm8ok50pchr327n8xg8tzlx3qwfl1jss5e9ijnjybao8xnuhrghhmgzx72yhh4dek3\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"gyws4ifjm2zq1ikegbp66z6dj9fr5jqtdey5forn55yz004kxkn02o2x50e8a37bm5pa1p8u8t61civ57fkx8thrbildjg5uzt98wsustel1ev9ab5ws5wgu735piqranxtq3my4h45jpsxchs22or656nsslz653h7sjjnbzzkdtpvx4\",\n      \"description\" : \"Reiciendis saepe est vel ratione consequatur et. Et et ipsum dolores et reiciendis. Eligendi voluptas explicabo quidem qui est autem voluptates. Officia debitis quia expedita necessitatibus cumque quo\",\n      \"location\" : \"q73x3xr3n8v2iff\",\n      \"title\" : \"Illum non non qui.\"\n    },\n    \"role\" : \"23mdnjvosquf5dsl8wta4v74xkpd3iq3thwrept60u5vpxslrk30nznn7i6ph9oqpgeibxl417d507gfw2rxr3otodjh\",\n    \"members\" : [ \"ult7gr6rjb9bdbigofoqy6afkn7kfk733cjppdo5x1vnhq0mqi9nhoe69hzcrb5c7krgfo6jis947zv6gj1fq9b0afvrf7j8n4lu988llpppuy8zdnx8p9c4hkdgme8fucdvztv0brxbeze1i1yvj92m4obc02kteqbtpcfv8z3zruysuaus6rn2nlqrm14\", \"ajckgh6posst4hkehvzzeaxc499ovljjxzfc1nqm8cb288or4csug8r6ux5p7p3a29rvuufza9d3hlmxbvhaplvrp9utykzl47xpbynce4qabbp9qhapn5eypkovhvurktt4k395awep6opyc5eh0cffdimc67t4pk\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"px0e8jqp4o5rlz4vy9886d8kqj02ws0m19vnpvjj8ec3lagdw4l126bc8ryc16vlktzkip9fhpxsb5fgeyx84n5qp7ric2n7zdkejr8anaszprciv2hd5ez\",\n      \"description\" : \"Expedita fugit maiores facilis necessitatibus est. Porro adipisci commodi nobis dolorem. Quia unde alias minima voluptas.\",\n      \"location\" : \"s7x7lfuxg7dj20igt7pjhs1dmbh2bep8nkps3sdv4f1grh8rbncul1lpkes1wt6qh8u5awbxvzr2tmusp7vmw0mmebiuxd6y5y\",\n      \"title\" : \"Sunt corrupti est inventore debitis.\"\n    },\n    \"role\" : \"z6ka3pdgnje45geq5btmqqk7d2evd6xrqcirdq10k81qzg04auuy5hpmnfis7ta9zgk339fyk37byyayv\",\n    \"members\" : [ \"qu36vmze5ykokr77ahyldbnkl2yamx7jvag5autc8670xn3s1kmt2uasmxoxl2axhx1fu23z1g2z4epcvdspjfkrnnyluloz81a74kub387yqmghg1t274d959nkeaid36bqb62os8p9zp69\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"o4wpno9cjmgp7g19ebn0cz2f5zl1vj81zwjgf5tavpvcqqfssimg6lj2mp3h2hmywq66sxwvyzsyefenis7mzbxaw4k8lm2es6a8qk6gk0qqko9ggz71rnsdckdxsld9yk3t9l76e93yd9cmfyy1unxq92mletqjbptq9uzzk9xu7lj6vtzs41a905e3pbsou8jj2h\",\n      \"description\" : \"Provident consectetur non eos sint neque. Molestiae quasi at asperiores quaerat. Veritatis numquam dolore. Blanditiis beatae quae. Dolorem accusantium ex quidem voluptas voluptate qui velit.\",\n      \"location\" : \"wag9ucmhdv3cuul1k59rwf4kbcd6x735ve882ase02otobcb1bszo0qrow14421vb3vocnqkgwk5wan11ob3o604g8qq38xj8ps5ygmp5b3r\",\n      \"title\" : \"Omnis ab praesentium et.\"\n    },\n    \"role\" : \"a3bkl7yckzu791yttpkt8xy3m2niq88ymmf861mza3h7voyl659fslcm259uowahm8nkm93n5zu8mqzo0yxat\",\n    \"members\" : [ \"8ek9484o9pjjbya7qvkpnbzp102jjghbaom\", \"g9rkfqy5t5ygm1lcuyihs9nk66188ot5rskaisucd355jphz65cgpnwkmgwzt51520hoz7qsm35bv\", \"m3bepar27hwqqbahkuljyps7jf6olbcqqdj0xpzikin7d6kc19vf9f6vpz3trz8dlm8bz6kff7eswozi6t8p1xirgmmf8nos2e90tlp7n8jeokofgaa0aihnlzppnsnsqyqtr1mwnhcsn32bggzk4ieyg5ec92xdx47q7jx86e3qbkqu3s1l\", \"pajw6fla9uwoqbj6\", \"5ewiac0eybpurzcwpasxia0gmxj4580ohuu3chvanvevi2nr9mx0npfi59qqhu22lfn8cvrqd9j3glwgua6f4wg93firbiz2pb9n7wg2h3gwqzr5quf8pv4esd7lxrgdl0midj9p5z353koi3dw6rfnogs66aqt6pbln\", \"sn46hc5eagw7aegbop5d3j7x5n0c7cinzo82xiucx41yyg1iuxtuxntdulgay8tn8dhpruzv65it5us06t8rb96ksjwypydv5fijmd04do1fnk1w1a0dpz2z5427utovrpb3fnnh2dll7ifh3u3cqadt3xhiyvv4ujphqcbodmi2twr6109svu2htt\", \"as4jmfygr6uyw72qtuy5wfo23hqh5wik5dgshvkn18064m3i9dc9e7cblgqfs448jfgwaj2khliasibo0gmegm5o98zqklx56nzu2dwe8txtqvk43v6nen07xtreq50deix7kfxo\", \"rlnamsisqz0f3y3n44qxuxmiazclq01isud143zdtmyxs3i020u140j4ooxglqhhzx7aiwrojzojv3cirf7l77ba65ht3krrclxe0u5mfx34qeyg41jm92zpwz4f8s1uhijxuyd31n2lufvtk2r70t0pvddfo4\" ]\n  } ],\n  \"etag\" : \"sequi\",\n  \"version\" : 1035600329,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mfvs1t45bgygd0abniwkac3lamu86wq9zsb3asfc1pdk8vjtchpu61na49twqll46dhpxo8rmfdhej37zpfqt4qcfvaniaqeqa3nxs350lpuyt1i8gmqwmtvlby8zun7wnxw4hkr3l5sh1fm9178z3hhkzsrpamuxhas06v\", \"s2puotovi17a0w59xzhq9t6bmy9serjqp2pf68c9l2dk5k4xlfzg9zyznt3r7u8g5z3b6d802nu680gpjnyri1t40wzt2mch6irhcd25c6mwnupjvu53zbefbgplegw0afyb9z8juntyis0kxd8085yk6hraovgxixfc\", \"fgvyff6x2oe43yrhcq9fiaf2w43kywbllzaya8bct8zvdjzijbjlfdiiuzyepzjzijknv2h80st0aapp2wmygowcqr33g0n1adh50f1ui6znt9dfjkaenrii8kbg060bsw8sz9ilki9jer7z8rv4y2zzj1o9jstutpjj7ahtup6tev4phigtoto74f7\", \"skusu2k99x0bp2yutqb5miypwsmq1i4wadvu0t45ocdvikirljeyjak45udtqbr6dul3tja4sh4twylff6wxf3awpexjmfruvgkxjwh112llo86omn5vo1cos6gpa3301akw6n2u2lc59\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"qlcxknpx48bmi7zogkrit36fnj41am2n0znbisiw5t5sj3zcdn1d4u69jf5v46mmt0icv13s2am1n1zmpqgkj41rs8oh7ao43fvz64ntlp4qq1kea940nkw0e3lx7qdbq0n0b73fegxu8q2supqcr2ef9rgitekl4vywz6bhvufxi58oip4s3go\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"rvxwo9uzwpkbf0wywotxjb3pj\", \"3lt5vv6v79ogj0zs57zuu2gl9cgd\", \"g262lkaiv4dveti3ovclps6xy1222cg8l7swy6khcv7ut3ju02m8x8gb76anegy7n1cmetxobc3y9jd6709an634pz0jy0190n7ob5kc5lfu5o8jpvwdc8lzcrjp1kieain9k1yc996b305m8uie2tttjz6qr\", \"2b7r4it70cfxu83txkefup638fnog02tse7w093f6zyi2crzz3enc2i1w6dfh61uvae3upyhdz41eugc8c0hbapzsod85wdkr5r32i\", \"8rq1d5s6bpe48qmg4dclcj0styntfhhzkqzk9lw68bey1mfknvb1q2fdcxhgd83okhaenwdaqcu01d1vppj6th68m9s\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"sw0m9tyg0kpvvvjakod3ptyj02z\", \"w03q82jwoyswveso8d488lpcnvuvo7ibcmpfx96mczlw8gmwdark2a5hn3u20\", \"iwybux959gam57b9dqdbxvq92rg59p2g3gukutpx1v0m1m4dkw4p1zmx2xkx0hxxal\", \"km8ss8a9a9koauh7widslhpkypksex2iex3i0ry12j07huxh6ym64vg30pke3dwwyuj44ldwlaa6qyagdtxhulootukboigt15f9lp0n7f2m4i6k897dwtaeu5ozh1\", \"uy0zuygpvl6vdqe2nfpiyt9acejmbioqsz2w1ffforc6xcs80an67eiw7yw1nx7l\", \"gdog5ry5urmo7r061\", \"i9vpk8d6qr470r1ncqwfbydrighvxk0kna779rw5xk5j7\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"vlywgs23kiww4s\", \"9lhr7plurfj1vfwezzr1egcn7qr9ziohxn\", \"yc2bqh58sv05x2eo3zsooosie1j2nbo\", \"xyvtq4j20eonobmn3y89r449u204xfo3ug4hmk57r84aw8fkgu14zk3odp8xvyd6fc5ox9cehpptxaudpccwebroh7bbn67dqk6vb0cvs3n5eonlv7gu5znvn2592zfq\", \"dt8pxxlzm7lgi1moom8wp633ak17nry3za4m9deab8l4irngaoc13i2lp78w0hv71mu9mpkip2wvc955kc0idj8ryhog2dvneyhgl9e7jw2yq5hho14oif3xt4dcxwnoetermlp9h2yn7dpfmzjhkohh3\", \"vd7yc5qd1kjhsxzd7o51roenj15lntskzid4lep9bsqv0jy5zd7lpyiwor58suc4642zl2vtsdtbfpxyyxjoo1pfig0uuiwjja6ibim8w4lhqzhf6j1djql4d5ypbre3zxen9cpbwculpx7x684y8779qeqvhzc7sphsltcdzu3bfcxn6ct\", \"ilns41n74d1qs18grfjjdup6lm332j12plqp79b8vljgz54jo5kj8dn9s12qjviwyyne27f64bjh3hpit8pz8w2b49gtjc10cqd59kj27xt044ff9ypeiw\", \"a0v5sr6auxm6pi88iq1h3wgnqbe0uxx1vtbqgn7pdfuvwub64vmh32jpu0r6rewujz1uzgtobnhk7i23qy65lcuer7pax84bmwwwo4q3lr6z6ph9qbm1one6ii3ei9lzjlm4tnywucz1t7egqthycaagjj289yonamxilwj5b\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"il7devw74rukfbm8pmqqyhlp5\", \"clcmztp2uwi2bbz5g3vud3ilc5lt3h6we89skr908l2e51jp2qfxo91oq5g8cjmzp7hlnfgkovhy27cw46cmsk1n\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"owei60741dsm6aogebn951of4z7t0\", \"o6qvmk3sifjc12b9vx51cw3u10njht77m2todxrxjy6p6b865uwp83mx3i809pdr1ilxmzqedw6jv69ytrus0hdup45c85lnnwdbmvjlvfrekgdjn7ydcw6ri6w00tjvmb61xcg4zlmuk1i67x0pmtwq2grixbj2tjrzyfb09di0wsmfm393czifd6mc4s5x0wol2kux\", \"6on23vafvy1zi484u5tkgdi7eyp5ipbnlu4z9ub34y6ubk1bgm55tl7ked3w16zykkw03w28oyjrl3iklse38m0yqu8vahs944st8di6pl8trb1r1j8ow4\", \"4e42qmlev3kpf1std9j65t88hnlxea1v22clyafwz3z2ufsn8zi1gycuswh0kov5lvs89pf11qlw8l2ts51d491xvmxi3pyoiqmfnt5bmnxfupj6gpjw4vt0gglj01qo96plnppvfyjrrii78eprl\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"fkt5grzylxl163o26ss58qmchaekttrv2pl0yql2ezvuyhu5p3avra3rywvbc44u9ib5cud\" ]\n    } ],\n    \"service\" : \"uderj6spbakvwrn58iukorwfhdibfmzipsz06ixp62cnorrs86mxqtxz6pv9nb4buv72c43agvi50esgc5vlhx0cbhmn163n6aic9qod2qkcg67p0m6jg29zy80uwo\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"hgjzns5vvjao5wo7vvhh39vwj768j3px8l298tkfbz0f5p4ymlhbr13sxwrfofsg3qjgk6q0cq9c8i1fhg8s2zdv\", \"hwvf2n8oi93z6zvy6snlccrh1z4vry7xmpqc64u4dsdnbkrqxm9qscydw4l81ttb6fkhj3jytg7y9ig33\", \"9vlaghj3cutwmecyydjyxxyoxg0bwi8p3ssehazw74eeovy9rsss9uxo5x1g2nk8120d4li02c474z0leq0bs72xsle6pxistpmx0dibpxxn24fzl34myb8ep9f6sonakho7lecgkto2fsbdprysra8ob9tir2ry25cvwo7zvul1rn0ru1s70k2\", \"5i7xdzst4yi15ip4pbfvoc6ty6prk4m5pykw\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"v7pfg5ql4c64rqmnbc9y9jmh21x7zdidv9m1i76jrsxog95k2k6y5naktga0aim6jrkvtj3g8wzh20amrtesz5t37uqzksmhe13efey0l6j0h\", \"vhcx2mzo6qytfepiu6avymju9pjpllv6nxrwy7omyqnub1swcv4o4817vpra8b4uk8y0rjx3zrg50wwfsxwxwi1ycni0xmhtorzuocq9tn1vjphupl9en4vr8fbzjm7iollyaw6vcs7r4h3n5zzelan2r2mmo75zx2x4p1ytv2o\", \"6qp2wcf\", \"tlg2kkhkw19wqtdrxjr\", \"s71xo7h6qszec\", \"5n3xlmyh7s4t1r60426y0jn666\", \"9lm7eo4tz10tx64nb2vtodxeo7n4sdasll4jkq5fppz64b5otym8g2udrurz18aw50mmbw5v00q1kt20lbbtb6k0ntuudvuxecfu4armgdqhekd33oywqwhcxyko6d5432ou91046afaiptjdwnezkcs8w9hve3xx21\" ]\n    } ],\n    \"service\" : \"mbk742zdcb0g7kj4df38kpm0kukfpydwdqslgu1jus52p79cpdh4pngc6e2bi7xa3o9g3v72dollujgd6gjul7oyfg9vsz18w64zrz15x9f260px010jygmk2poy7\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ka0w7vle7dbhzqfm5si2ffkyd953rxl467k705j6lg2udznfju8scjtiypt48lf9z6o5pq4v67fgtcr2boorjpzdkasr8gvamn9rctd4zgumflk5mmfsyn31cxvh58ttfrzg3zc9fhy1rhga28dj7673pxxqxmhgn9qtk0fuq5799ehfza5no658wy\", \"ge1aeuh0itdvkr6tibxbp7b6vwhx27xyi\", \"ozuhk85m77ahtzy2yufwtbfnhw9knzraundp2sgaxfzf5v41uihgo3hi8q\" ]\n    } ],\n    \"service\" : \"awvur74ba8pnluc8p5l2b3wkeorkffbkgosmfaqocsyf23unmim6dmwt6mvf9kovubu79csj6chnx\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"7utnp0goflehzwzul5djis9txzg5z1cz9a5x2sx1gvfrlq0slufdhx3sk442o5qly56t5ygejpb02r4sb11jyqwux0p0bwi8d02usbt1v0ld37oukuyh0b6ykragbv22mvbjeutkeo6tk7r1f0s4jlcdoio56k8bm6y1vz6bwei3a2la25dbjfjuanjvn2c4ppq\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"orjjbv6gnl7b5nji5rpzmu5yny38n6bh8ucv1juyv8rdoobbs49fvuumorj27yzpe2m4byb2uxl9nlxri1ber2yy4u8lyoyi5s6npgncyuqjq535ryahwqsq16pkbz07d50i60fzwdwczoaff\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"iovq26lxx3j3kh2nvv3fqbpyyxoe2tyd52vyyem4m9qaupnj10buuddzhe95rb4r4pke7y1cdtzvoicxefd0ve17zean2i9mfh828lrp8r58hn5dd1p8snyq93elmlbk6rpq7hkn1bsj2umqmyk927g85wavh1wd2xzfwuo1exd02nz\", \"ncfxa0xbhsff0t3hdsu6wpm0oo8ylxsqniw6t6fhgs2wrzrintiszr15x54qx9dqkv6yd40kostd8fqp7bjnpsxql8lkcijuwu11eg70d75imlkf5lv7icc7hs6tvfqix57jwlsmwqcj7qpz54y81vnjjfc7q4a3y9pkmwflopuglgl6w7lan6rqdbf3cxndn1tcpr\", \"00zgv3fj77cfv0t42o09xt9qqz1i1eiqj960i7oco3i8bzlnh5b4z7jqbdkqsdrz3zb93b7cit3gq7pvv1nnb21v5wo28bmb3fnfxf5szxjqzggc4p7ysn4n5yuib8zu9r83smtr\", \"2i2t9ig2rftgzpmqxs06wpigqqxjj51ecd\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"70y85ltoq4yqwljbyfja6hrsw8uw4c\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"k47rb00k7r1c308nat6\", \"y6h8sfnv0f19jln3vlh7ivmyc7cgmipa14j647p3k9qou77uu49yzldqiii0hyd15taf3cmix79y16cq8txm59mufgbypy3iiibzu4zdk1pd\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"9fb42hprheo1ikc5ykiek54rx8j7w3rpbkbhpjxj9w91na29q1hdvrniibhl0engcqe6q9za8b6unnvt8c19unhv60ulxxjrk3sbk43ecwz72p0yc9r7haraz\", \"qeo5azbnhrgrzm27liyvim3ruauwtk9ys\", \"l18sgxhpvms7m2gaawb3kwh3czriw2kh71u5h99cxrq3al77rscua4lesf9o7o77ls901tgxwb26igj0u4qx0kby6ofoop8iqakcu3h9z3rngn5jqcxo6eo2zv30djazrmyampg\", \"cyz6x8wyajlneucedx7bmv131qeqequkyrx32dy41y6nbbwawkc7521mfkg9nyvtz6q6805gjw72lfzdf7utga93nywbsf\", \"aby7iuux2fb5n\", \"7x7sl8jwubxdzegr37l71t6sdqs15ga4wcx3p7l5dotgiyi1l32hsjscp4onni4sfayqz8ryzzqtxb9g2tsuw1rqvd2pfytqgaz61h02po39z3pf07wi\", \"cat46s\", \"vel2hwi3y2ybhopl4qmi9suyei8uioal0fvj5pk4obq1letzoc7lm5dzeebt\" ]\n    } ],\n    \"service\" : \"0ax1x73ye2xe398xl7ekjjzuksmtxsbiikvy12j5w62e5ze9j1apfw9x9trtllru7gtzbza55h0ut8o6ikwv3fim3n0j6dwldqgw97cw93prmqqcu3gztmz5a6\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"htc12molahudz15yjuyldr\", \"9ouqls0hfznkk5vmf5\", \"sxtgmmad7py1qq3zyfzjumdbuqs637nx1ots\", \"dvusano44bx3pc07sifucl4nhn4o5hhfcraqi2qpyxuksol6lioi36bpwg1xw5\", \"h2k7imv2g29k5m2s57daicqeurspekcki1ltkmlhs6406b4z7yerqm5ns3x8ug1z3uexvw52wrkjb8yp5l8cctf2irk\", \"oz9ccks0kbe2xsup0mq9cfs63fhfnqb71bzn131kwrviiyiq0mht2j07rdwgp80xp\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"83i8p67c43k355s805vlt39gvk27opalqyf5dojxywk0go8txdig3dlo2w2f390dn1wfrazlrn24cqp2z54nd1uoyzvrn1hrztn49er3g0az0unq2qx32tx\", \"gkkhw776qndbnoe6o2p2oobkckka4uzq\", \"zdxtlj3xb27xbt0pfqhmbruiin6zoemrsjq2isqrmsbmddczo9zgfn5te2b5vpcu9f0mm7eh5li6ygdxn3ys33v6hq5pwuh8adlxgpnep9gnnb4gb2iowrb48b5o2brcoh0ok\", \"u1a9z48r435a74uo6\", \"pkf54ajoj0qdt6v78ls37d6aoqo0aovid1exel0qu937rh0gi0pnrbpqwiq6aax2ywderji28dr3pbn80s5zmd2bga4e8u17g4bxwnfk3bw2w2i3kvt26c8nkc6td355svh1sh8kx503cf3lbeoksf1ngjh5sijr082rlql5dq72wdwd2lemgjg2pfc\", \"lkj167luysc8s2z0ra4ptnlauve05lsz9lz7rjvazw8szi80vymiodgn04qyi62zjp1asz88\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"g8numzgvkxe38o5grmelm8h2t53db1r5th573fhsliitbf3p9z4cayelc1sga9pewznuo0b1matxr47wv3w0ljeiwm1sj\", \"5j86bj7u28ghrczmg258og79r5vik4ykth\", \"p234rjivxncpdt3yex30ustid0toq2g917txrr8ofn1qm7oolx9lw93la6y3ditrfq4bbh73g43rrmu552pcyyjh1aq0x62n95i3ule0d4f8k1ecxfffeqmwlgtjwo6f27\", \"d70l1ypnaauca7nxrwpq5s3uzw5vecty33bkk940bgvsjnlwk8fi66ms533plrtqpgcitn0sxpnxcf8n7gxvcw\", \"8zkh3h3tkbksyx1h94julzt1rqlo1w1vyxy8burhh1tm1eqeb198vf1r9ehmj0cr94t2ytniyl8ewm0db8lcsepsnz08bt9ib8gxwxqk5rgurkx1lagv7kzrjnv1hik5qlf98vzqdfec15y8tzdbauhmv4xxtroftrn8zmz2qd9rn9ww0jpveownn\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"8o03ga06pf9ldtfe7b7m680meoazygux75rz017tzqrakv6em1446731xfaxq21rki7p567qj6qvumafxygz6o84n21666g510r69znrugncyoov6263pd8pe08gbs7ooarx5uwq6zlc5ech37p8gs32d9ys0zxinc\" ]\n    } ],\n    \"service\" : \"u9rrma1mo5sf0krk6ga1779bst9d1bbj4xk1xrvy3bjb81caxvpo5gdv3dz9xgczw17uum70ral7ji2bj8\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"4ggng\", \"coa3ejz4oq7ejo2fb5ui0rbqjyc9hgcb0imbl9x4dgtyc6rs3mz3qk8hfsxamdsk6zw\", \"dzc6i5uffvqwu1lu1ukooojlt36ndo6w3e5b2b0j7ch\", \"ioeprs7y3jyqvr31g3pkth51au5e8rgg0o2omagfr12goi1g8oki426l16n\", \"anxb6a1jvpwugln7ew10dqqeum2yp3hsdudwlx4xi6bbrm3nci4a54wvqvf0ocavz1ps2oer1h\" ]\n    } ],\n    \"service\" : \"hyztdu8x06kdrs9g4g7nfy4n1pgayf5hebb6dd3t54awl6dd3qjkmyn1rgomum45irh5hlrapdvid\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"cokmfgybqsn7j98ptmsdnrp5vwmjnbr5wtt0k05vq2v88i0dpw9dl7b2urpygixqeoo\", \"z0crsoydr519pqck\", \"45kb0znpno9qypud1rrefsqfy7ytdu358q8yegee7za8p5chumjpwgpjzzfmk9xeio0uzwtmmck40irmack3dxxhpa\", \"tpdau7qy1zflxzgrvm1funvfr70vzt28j977ob83pok4yr05bwat2x3ce77pkjfs06df2koukohl5twj7tlaobndew3u63dfs1x9u3h5\", \"xan0rwryhfwipmnr6zi40igzhzc5a2qhkwa1ad2fhxtirs3p9x4tosxmjt1p8xlhonkbhkq5f70imtkwouio7x0b2q3\", \"7cj9jkpq0mx39tjls4nafwlyqdl3h5o0w9uohfl86tuzl0sfda6gfqmpa1tvn3xy1p2zo6kcd4ewcj57j1t5j6dz4gl2xcs9towjycoxgr4zyj85ad71j4b09tid80fnsy84924zgvmnvb4g77d7zzi\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"vf0469htmk456a55ls53gqpwjyvbt015gfidhizc02bpxzs27dez2s21py0ota1e5j82imspnzz8b7yzv32z03jndqguiuachwuua9uoewkukr8k9a73674cw8nss0drhcsofrk56ku208h3spefgkyi6ct8\", \"fon0h2wu7b0yg0uio23p54ec87mppldop349ysaiefo5e8v0q4m728nurdfvftqh7xh0sz4uunkgx79umoqo5nmmxtbqp7e6ynxw60tbbwthqdsq44wlyjjk2\", \"2dgg06oynsae\", \"w170f8jwuksqkldr9tsdzo6eh2bf36cetpeduggcsn95rijpc2cfy9zy7g37c19kbd3lxk6x58w179bwvqnzemnon1cfod1162ihou82snrmhyl8xh3s91l1fyt2shxe0r75rwr7un9vfejyaiy7m397o6onu9klrlmsn4mw3h9dj3kh8aqodtcc\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"mcdvemkdthkud5c54h6gtngakxpfwkzlpr154chvw7bujwqc9sd6l\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"swk4foqsyiyekusotsrpuzoiq969bbudy92xnffdd3siq09nm4isv5ugq\", \"xx4cjpjk92ubhzwpmgq31dj2egxt7pr8tpwxizwd3skwhngqrwy1896ckuq7enbusmds3zhss81rwklp9vdrnhiibg31a6eltofhpc9y6ljx2hzl7trgt1s1kqko2l3hybedgvt3n9kje7xkfdwivnnozw557k3c9urmhq9u16rj0okyctxco\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"kc53sfhnhuvd6l882mf9uy60ed0v4u45079id2cojq7i0l09caad8q0l6sc0zn4sbp30ldiq7tzrtrov7i12mtwi34l63r1ujth8n14p23bvxmh422e75vt9hm\", \"dqoq2twf7km2pqcph7o64u1sp5myp6ikkxs25a784prvqle437u7jw4wduh9w8ajtopswycap7uvyfs8hl78myb6bay2uvbuti9c\", \"k2zeh6i346tnwhmkqq4u1s7zpnm1yoy229io7c5wwevekolu9eguad1c276k2czzmgefx4x3gvfd0apj4wfc9h4dhdedj14p59tcqlqnbzgtcjzbg7wz58a2mdh4nz00fy\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"8u57lu2l6hvdsdc6g52t266shmfnm5vbkkf8x6s565r1kx6lbaxh9jft4s466w41u4vws5hv5lyjoxqvdu3\", \"tjp7wlii2jqv4anq6r0qcws358p5wvo9gjaxj2dvz827i1etggnrffhhbeq48kv5hu5p73l2nt8x15z0mda8kog7ibgz7wz3gvib3c9ou62r5l6u8ojp9efmei3cuq2ue468ggjtcn88n66gqw3ybxw63egm0qd02kgzushth0xkvvdqod40de4mqxy\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"zgg60tqmik42gzqzm5kmjjv4hpcsv28qvvr41i2xtgtg569frp803i7s43xexvy82dtq508xk5rm13c3ufe7effzlbcy74\", \"40e9a3868c7ecjgtu3vk4768tbcro0nos4s3ox0m6uz38ra1z52rol10qjoqz5aqqal49pz0exgcq\", \"80cb0st40ojqv8rpvj12db9acpqxj2vc37d6ehtlq9altaa7vhjsi2ddmolzan5gpjpgmay7s\", \"equptse\", \"v2kilo6mmntv50d2ou6rvfy44ir0kfrhqqecmx3xc88jmegmwqmw7dsnusmhmap6tn57qgjg7ynzzgutqdo28z7dfpb2ja5n0hbildqxv3wx0n1d3z9nyc7tcatu1bkgfo396vsmomrco58b6c8eskz8rg5dgs0waga5qb0sjfrs0\", \"2he56uehjtyrud63lrfcy43hdffdzrnpcqcf3ewoyha4x8si1wzom8ykgbwcnj\", \"3m7rda7ca14zyidm6fn5tos0m0ie7q3qlhag15wc16xu8hi5alg88rm4dev7ytjikpq97qg592rjp9qzgjrkwexy0ow8i9d2ulimk476j84p6tvuso8vot5oq6ks5h1axfaosgtsen58njbsf4kx0bpsfo0cpy7pkyyuryt8\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"amkolrso0mk32pyk632lj0fs2uhghomvu3ag8r60y7sa6a5py2xbhmrnk8prpx7d2thsfs8jic5m\", \"m816t61vyvteiekfotwor46j\", \"1c5uoey7wcmuja5shgfxpj5nzldok871y3qfni8t1vpa0njjj8v9lqws8x\", \"syw00h9r2kokns0ymetk174dgoxnqj6dmh2uid4ym3u5bbxj6h86oo9zlv4sfvwb19jgs5exlz2nca1f2yly7owtv1dt7jfaqg9kz1yrvoucor15x44u7ifvu1aqy69dtrytaa9uzl470ll2xghh66fopwuftd4dm50muvui7bjv2p0xwqlbz8n1yulona8hxra9akb\" ]\n    } ],\n    \"service\" : \"56rfnwawmo3t31yv3k7wk4iru6095hsybjnfe6do7uwvq0gzizm6iqfm9rwkr0cdxpiky1k8xc9zbyb1njmsdk64w3ff\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"gmbelty9bv9n6534lhmgtht6ktz42ue88fxidap1u1q1a\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"naemc1t5fvbymyl2kmg7ahtok7879ecsljtujndif19smx795ummp9tx84mrxqwuq0esbwg9c9z2j4qnwywuek8e6cto0tiprq3vu8ypdrkkpnkw70rgx7jf7g6knu\", \"xwf26509bqgt99cdguiul1jlujtnb36is0beuxk670raa80o1tfepm2m1nqtzxqlc8bsb4qys\", \"982uv4zcm4b9pgzvfiu4ftk36pbt6ywuvt7e092vhgkjhd5cne6c62x0y0bht0ipzc846cxznnnvu5kfcduysszs7xustsmcuqavlmr742z2h236aeo2tbetefhehih9j254djgq1c5niyi2vewbg7y82\", \"6kww97c7n9h7eegec6xksy0k11pmsuu5776ohv72edacjlj9ntw4pdi1f76qsyb\", \"c7bc9j0w16azq59lbxrbd8cieuel342jj2oss5lwo8sd8cyxuof36njwlcdgpnjaoqrh6h6kikhgb28vt9bh04scj6d0q70o6ysd5tk0n5cwz9sy4xit5w3injic2bkxpv7lc2adqzrtsmajm4am3ctezozvtvw6jo49kl52gz9azxtsb11d4q59c5uokb3mem7o3k8\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"unfmp2\", \"awm6zmyzfyth73ztred7e7j5bhukl7npaqsfjkzc4f5e4kk4ukm9392u1mlr5s1460x6pe2uslyrjapzj0o7whuoxa5rhk5idry55drr\", \"yshdgst4eo63ntkn98kn3mt9ufpm6qzsd7opwoocvev0sjdkka2aun19gdnjgmolkttpvr91pc7dl26nixow7q4gvl2rldi71myda2gjdyjw3a58u04cxaf2milp9a0jvtltcsg5zg489drim\", \"llcz0pxoav20j5rqqjiddete4ju4lgnkvsb0ooewdj0dm6244tzvd5wc9eou2iybyluwcw44rxshzh3ahdl6yr8rc9tt2cn5eilfcqtrbi81sjwhqt1q6y0vqohyer15khcs0ep19h4d2kcry87xforcdkw1cv8z7dqrcgmiuaqnhsvp6ynqzq7\", \"wtrjugdpvcukeakppqez7b8yk5w5gqz245ggybqcch0h401uj4hvgjlbstrg99maw3m68e3khm1jpyvxi88ctlo7fcjjj8ldbl2lslc1m88wpueyvhmc294us57qy9m42rf8rf6f85y54djpt3gra3r0rw801lfssrrjrhrymfzdd6\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"kj1k94c3pozjhupxb6qwy42gqihikubmpghwxyunzihwdgwb9dmlbg3b650uecyohbv3xo0p2ibtl7oko0znzl2hcrtt7004gb0xhdl15wg6j64rh1tqcb9zlh0pr37ssz0ml1gi97d7mhpdgycf4jqp9cgcu05gqsvbi\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"nsg4kv9ttzgr894zst81chpa6f3uqx83n81s85mkxtx6pjdts4wcam2hfmsrytdjk6mkmyc7w97emh2vstaed0elhcc8cmdxs0qljv6l6mu9qb56xph3543ikai58mzirf5rvesu7ttxyy8eiru3m8jxtzbi6491ji1621jz0y0z209az9d6oag53o2v9wuj\", \"zn7z9se0022b91e0tdqkhheg1ioy761qzzql0tdy264ngztfisxy38dd0i144mg6px4c2d4rgnpgauulv5crddlv9qtygd7wmaexigzn4ico8d0tooebx7jyfh3slp01xx7y2yi2snfh1ky4l2w2lasbq4kq88xcmwk88jd23hrpjr6gfb58ez21infwdk5a1wd3148\", \"fnxbkom5z72e9439x31w42fham1icbr118ddtzo707cp8g4smcc707eox6lyx2e1zb4u4szke9tsb76o5i3uodzcz79lzy0xh4p5ivb8lqezqimkzvrz0vmuwdz9yozb2rsg6xrtxla64o8\", \"0pu81f8ckl3vpd313sbswl8l0wt6851ozxcpi49di6h0u1mo99mvlvnn2z0qa46fl62s2cma0cfhn993vk3ygbzz05qra6pg48fsck3ap8upoi6zth\", \"vob2wasmloqkjzmraam6ftuekaijey9hgnvmpxtxwnypdoephek0ub2qt3km1a2e9kmt37un0t88wng7yhzplzpzlqpp55e5jnmo7arcq5uwpj7cl98weyholhh3lzx6hc9gbqdf9opsdt7ps0za3blmhxsj1l7wcn8kx5\", \"84zv9mv8clv9jegubp2rw\", \"pcp0lognuzmhi0eisf7481a4bhyqviv1nlccfnq87dyoi42y2k62v8eclf1m26gkhyn0urtwsvnehyizduawcyuphr5d62y3y7xbbcbktf8u7h8x9uf\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"0z84hnmluizw6r7eosss59fe9ho19af8ouyq3anl3jkmv1m1gcuyyzh2bfoc7kubnsqxzk42kt777glegto6y7ihw0cyqhvzmlws6jmoe6982wu9a7ixflx7sc5cth4m0d7btpfb44ec7xnuh70qvsq9y5fyug3qxd8ffztr3zhgcqaxigpy89ut\", \"c4kjei6jorj1tafnnwc3hw20as3attegs850oqwmf2nlh6bjlkgo8azv4e\", \"ks0sdj1kr25whbf0qrdtyemriqvqhfkcpobu192gxe9egh4ob73qu7xnooet4ybrexpn967lfriccim7ly9og6k74q432nhn3zxfy3q86z5adw89osl0cq9b6o3fb3xsv2xiyjx1pglknq32ao5cyvry0h8sz57hq23d7zf4h7gqeddhwgauqemhjb38ep3zlacu\", \"j6nr117qyi39gq50cx0tkf6wwtlhoaqrsdl57ot5unfyabf3uvbrlc2gn9geu575klybfjukqq39fld8lagy9\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"876cn7iygrgq88f9wfp4nzz\", \"17ralrmzc9x53gfi0coxb5znnwj3q0crqgz9ms0fmf1k3hc4a9eimyugqu8fhozeuoreo1pwzct3aktw0pwwplehii0ap7818y2upfuivb9hwoz6yisa5zop6bu52xsrrv88s66tdmhblqq2rjpd1\", \"qcg9ege16qsgoahr3x1i7yc0a6y82pcquaahxaw2ecoxuq684wixj9zh7s9jmrmhm0j7jaev7rkmag36ol5\", \"mpjl6gb2bbxgns1gtmbwjibrawpouwstd4bwh88pe5tuyzmktth7arj2z4f056wnrswnxybbi0vl79lw3fecfk2h7fd3fa8mx0mrp7bg3g7eo7csum2fiqkkq1k2lblfvs1a9rho4d1o3gc7g0hsg1u5ff29yi2r5clb1a0\", \"9ncxg75akm4f10h5av7345zv7ybmvacfb5fc6vcumzttej1x1nkrdnwv3f2zk2rp0vbzbl\", \"64plu9eu5zdis0i24c1p3hse8jis5zw\", \"dgmux4k7hlive1skfydiuvg5g2r8xy152rr9ns8vxvh9c0g8j3d2pjvdoy1i9v0j24pqw458igm7v3yl4sydatk7eaaw0724img555zx300o34anz5rdg9k876yohh1p\", \"50kx76ytsd7tbl3vt0pmvmsd9ffh9ef76l82so485mgbfrhk4sb0nmmsliajc99mx0xno383tke3q39a7\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"oka9tt15w4hxa2zb9zvbvwqo8sfqlmwsikgi3vv3sz60qrddhrbuc2y6kn08i4a25onfgnoig3k9dzzkwtai2gqz79oo9a9ksqu8n4hpu6n\", \"3bhdlpg7o6pcvlpje6c2uuwoiri9xohxnsnsqnix4xsjobocfdeiqm98enfabv95l9mxpon1tjddwwq4h8p6emex01vfmwz2w4s8bc28uauuci4w9gvpynwmipad7v25uxa13zf5lfseacxzi\", \"pdwixwc3k09b0yq0r9rczcbwylirqmkikkl9awion79crct955wy56jrugck9ufy0cbz3i7zxx5efbnxd3rp21affcwervucyecv4qylm4iy8yhyu\", \"sykxvh4cupqbuq2qion18xpnyrcvj9l375pdxcrh5pysbtpy3xoze7ss5iayp3m4w9j14l3ayk8yhnl888c2qjizt06rnxa4657pynn7iciwjjm3tq1zszqom7fgooiv2hphxp89\", \"fpk14d20isvqpaqf542vspls4utfgl8u5x0zt9m7g2utjrt74kfkubc524vbni550bhg6mwbsso02eucgddakwzuo7mxr0fmzgzr04k1w2puyz2ovb95rwl2lgd56q3nforabzqk3s89prqfwai1qrg55zxrdcbcrel0y7zcylqnl5kwzd6lo57bdnyboblxj3c\", \"hppefc624qgl43u42vsyk2c1sfadh5vefz6mwh361vihdej3unszi1elw3i7bv86c6fahndeuvojxbu5dfm48oo86kseqh2rcu6nsj8ojmv7v4ztiu43oqimm6ks8gkn6t\" ]\n    } ],\n    \"service\" : \"y6eb4lvm9pmhy9st1f2gafjwo27vrdzn8gcwgfu8rdi6goecphpo7pafxlpejaw1z0q5piekukww3p8a70i7c1vmsgic4flsierafxibnh2r9340g21rwsfq892p8ghue6kv9dydae48xz9e0kl639dvq\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c3c2aa5-61fb-3828-bbdb-5ddd9fcc35ed",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "19719662-f0aa-3521-8d07-de7f4ab9b93b",
    "name" : "Create a new KeyRing in a given Project and Location.",
    "request" : {
      "urlPath" : "/v1/64agrbhj02o99ocsa84ygmupowqu9ahyczww9n8qx6njiaarststs6a3y6s048ripax38gf5qmt7bxhcuz67b00sfa364p8a2gbc50e50ya0z9hvimdvv415bc67wdcpqxntootfevx7iubxc37lmh48h8ec6zjtum4a9w0hlwzjr3tce/keyRings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-06-25T17:00:48.729015Z\",\n  \"name\" : \"Yuriko Herzog\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "19719662-f0aa-3521-8d07-de7f4ab9b93b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.create",
          "schema" : {
            "description" : "A KeyRing is a toplevel logical grouping of CryptoKeys.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this KeyRing was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for the KeyRing in the format `projects/*/locations/*/keyRings/*`.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "018bf1db-5f80-37e4-8962-87e3f721a197",
    "name" : "Lists KeyRings.",
    "request" : {
      "urlPath" : "/v1/d8iglb9i7v00at0q7edw73qbra9wxe07xhdleu3s3v2ptm50qgeicfuceknng10old1cdhhq54169jqz4vatrqnrgkpflm3wa4izo12jgtyvgerpxcwknmpz9nitpj0e08702crc/keyRings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 878798431,\n  \"keyRings\" : [ {\n    \"createTime\" : \"2023-02-19T14:21:48.728709Z\",\n    \"name\" : \"Ossie Pagac DVM\"\n  }, {\n    \"createTime\" : \"2022-05-28T16:34:48.728778Z\",\n    \"name\" : \"Diego Bosco\"\n  }, {\n    \"createTime\" : \"2022-09-15T15:59:48.728846Z\",\n    \"name\" : \"Dominick Herman\"\n  } ],\n  \"nextPageToken\" : \"bbfifj7qr49rgqjo7gv6and5xxnwn25e56925fokr2fdps6wuqae6aadwjont9aullecgq2038kfgva1wuq39r6idyzg6hv\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "018bf1db-5f80-37e4-8962-87e3f721a197",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListKeyRings.",
            "properties" : {
              "keyRings" : {
                "description" : "The list of KeyRings.",
                "items" : {
                  "$ref" : "#/components/schemas/KeyRing"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListKeyRingsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of KeyRings that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "773ddb54-9691-30be-9ad6-800e237c92b1",
    "name" : "Create a new ImportJob within a KeyRing. ImportJob.import_method is required.",
    "request" : {
      "urlPath" : "/v1/pdzwps07jh28sxo4totuk4a03m6cz9jou4pkrtvfcluxyuak9ws13n6fm6bvyunq97ewzghlfdxnv5cl0y4a5brq6xlhehci6hesh6ui8nwin8jke2c2v/importJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expireEventTime\" : \"2022-09-25T16:00:48.72823Z\",\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"6xammbm5fj7pf59utscakfjx5e6ux30f1cvghb2rgu43ukbewtl546gph15oio2v8ogmbx4s9dku2gjr8sdrvdwhxm\", \"7de8lm3zcg31xzwjs45e8zcbbhai\", \"4731tgh817abjge3tsxeql9lijw7kfddu597r3fud01g6rvag91o2uk0bpy1a2fvrypaxfwzp1nqn4vp0vhpvuks2xpgqijcgmvh2vk3ch0ak7n06pyoqlheozyus9wffsrxnhyikd5vt4nvcgb6iia4f1rcetj3q8\", \"tzukoqts5p7ixjq\", \"wugyp7bk0i3kbijdvcbusnljiuy3uifp7\", \"8z9rxsyefaby8n5lkmft1gyvonl89xoxiuztyf7z4jru6sik9vpqjqmq4qj05tubw6usdkg8vynjjgmy0rtihv73jegv4phlibt6jq7v77qhseipuecocrqj5twpgazu89wp42q68qdxo7ae15h5vj5azhsrucfne540rzf6\", \"m3ieme2888eco94p9crgv19lyqkrb9xk6xbzqqwfyavllvhpp36yer4s1sfggg97g9wna0lz0h5u7b8kj2rh3h5rb01jkvgj59uz938yufckuq4mhruyd79y56q8qeyo9s72zcqy72bycbuzr9248kcdiaeou6gqc2\", \"lphuape3f2znr9zj6geyxi8lwsgfoojwq8whxf3z7wm63kgk9jsnbvzjr96d6k2hjs3oy4wbpdto13jju1xggk8we\" ],\n      \"caviumCerts\" : [ \"oqz50wbx2fy3ziix4rx105ddvcziqap6gq1psyuby1dtkjvxdpr0h6vekx7598ok3hgvrvfhhpcxtvmebalm7rtuuosdeghu9o1716bw09dt3rped5\", \"83qxv\", \"hh2em0fcmf8fpyf70iuvwrfvedrysv0lyzli29srm3k5o66hcz8bxlcwe6z2shn7ewk7i838jndjbgp2ptdg4ucxs6qs3gxf5lfqx0lv3zf26p3xjdof\" ],\n      \"googlePartitionCerts\" : [ \"58lpxln2hm04gh73\" ]\n    },\n    \"content\" : \"Vitae et corrupti molestiae dolor eius quae. Voluptatum repudiandae quis ut. Est dolorem enim at.\"\n  },\n  \"expireTime\" : \"2022-05-29T15:19:48.728374Z\",\n  \"createTime\" : \"2022-04-15T16:35:48.728399Z\",\n  \"importMethod\" : \"RSA_OAEP_3072_SHA256\",\n  \"name\" : \"Jamila Hills\",\n  \"publicKey\" : {\n    \"pem\" : \"vlsxo2p0wk7ia0ddv3lkzc4j16odzr4d8hogtw\"\n  },\n  \"state\" : \"EXPIRED\",\n  \"generateTime\" : \"2022-07-21T13:48:48.72849Z\",\n  \"protectionLevel\" : \"SOFTWARE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "773ddb54-9691-30be-9ad6-800e237c92b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.create",
          "schema" : {
            "description" : "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
            "properties" : {
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this ImportJob was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireEventTime" : {
                "description" : "Output only. The time this ImportJob expired. Only present if state is EXPIRED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generateTime" : {
                "description" : "Output only. The time this ImportJob's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importMethod" : {
                "description" : "Required. Immutable. The wrapping method to be used for incoming key material.",
                "enum" : [ "IMPORT_METHOD_UNSPECIFIED", "RSA_OAEP_3072_SHA1_AES_256", "RSA_OAEP_4096_SHA1_AES_256", "RSA_OAEP_3072_SHA256_AES_256", "RSA_OAEP_4096_SHA256_AES_256", "RSA_OAEP_3072_SHA256", "RSA_OAEP_4096_SHA256" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "publicKey" : {
                "$ref" : "#/components/schemas/WrappingPublicKey"
              },
              "state" : {
                "description" : "Output only. The current state of the ImportJob, indicating if it can be used.",
                "enum" : [ "IMPORT_JOB_STATE_UNSPECIFIED", "PENDING_GENERATION", "ACTIVE", "EXPIRED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "8f095e13-7950-3a4b-b280-623737715f41",
    "name" : "Lists ImportJobs.",
    "request" : {
      "urlPath" : "/v1/3drcpbmylqessmasx0eyn80dgtiisbwqax72gzvkjodj6ixvzegw4cfz5rsgsp17levp74xycse1hrurr4cyz69rkyl4mj77fefu2k8ktbdusa9dxtu036n595qnrw535i5edd1rf852oqewvrjy1oz6912ws32n9/importJobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"importJobs\" : [ {\n    \"expireEventTime\" : \"2022-06-02T16:04:48.726707Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"gqrrwm23eqkhjgn6wf07sr9v5hwgvvl09npbdchvij35woszd96o88tb34509z2t2fdtnifjr55ql4qy3sxrrrme4q4zpx7eyy3zgolhc7hw0pmvz5fkudubj5f6havfy9qxzx4k2h0gac397zocpf9sknq8mat9d77wj3f8gcheb\", \"rflkjfkupje9envpt2chy6i12ie98ltexctev7h67q2ixhb1drpilsgfvpxol1a2ma7670fonyqc56q8ppyeysiyvzv38yiuo78nlpiwc7q68cuaezwybnz8aty4cz3\", \"0xc6lwg8026kkatk32pmracbeb1cnop29okyojdl7a9ejuhnf1kphpqdttgjivyplfjxffh8rggdwb1qoub9t26az40txbxkxo0gphhp7cjft51f0r8nsvjjvej9\" ],\n        \"caviumCerts\" : [ \"5ukkndbezjsfwaldznqd4696tua2ea9t0ktc2cpxx\", \"7x3cn4p35hwzht6y1d4wfn0xp9xpcqdjl7ybxm70nl7v0xutmrnpaptl8ixb6ru9619a8gg0dz5f5rk0oeqrk0uzetr7wrzeyjnhmiupvq84hypo44k71nz3m88iealmixcmd93h1pgpvrh9s0mbnncckava6pvxdf9j119ts6vu0xf6uh6d4n\" ],\n        \"googlePartitionCerts\" : [ \"n45v9mild705yw4t5hhropkc4o9u2rx1cawxsdvd3k4hw89lafyp0p2x1tu6176gbo04zhfxvqa2vyfvnzzxb3qh6mb\", \"n1wrvtjayijjted2bkbm0bkq1suhz859994c9urneswsdsynvrb6blhmddeiin6afn75dqjfvgwqltct46souvprkir5rqvp87rstoon577w0hk7fkl26t8i2zd31gbbugxjmgp2o0daukaaouyiq0x7iipice3gw8a066f17lbkf2tefrcy3\", \"3315edo3k3ao8ikeqg8z7jy45apeixng4ak5n6e62r68shbj3c9mwj4uzzm2wvza3g4tkig9gmgphg9lxgxer0q7mxmt23taxclgrt10ickjlekdwdrlhqe9awniotxqtauymrsfj15hzwv2mhccftfmw9eergzs7\", \"aww60qbs43bfj7qhyqrkb6tg7xm5g\" ]\n      },\n      \"content\" : \"Cumque blanditiis nihil voluptas consectetur dignissimos ut. Veniam neque qui et ut consequatur voluptates odio. Saepe porro quia voluptatum sunt minus. Quo provident aspernatur saepe.\"\n    },\n    \"expireTime\" : \"2022-10-02T15:57:48.726888Z\",\n    \"createTime\" : \"2023-01-01T14:49:48.726918Z\",\n    \"importMethod\" : \"RSA_OAEP_4096_SHA1_AES_256\",\n    \"name\" : \"Clark Satterfield\",\n    \"publicKey\" : {\n      \"pem\" : \"wpglql83\"\n    },\n    \"state\" : \"ACTIVE\",\n    \"generateTime\" : \"2022-04-22T13:12:48.727034Z\",\n    \"protectionLevel\" : \"EXTERNAL\"\n  }, {\n    \"expireEventTime\" : \"2022-12-16T14:12:48.727079Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"7q2h4f0mubn2xgzj899immtg2gafmr8iga2f613swun5diwv2aqfut9vch1aajtn5xh0enh5ziz0b4s02p0dqjp34u\", \"0fhtgk65je8wotwfppv7fqae67fplca353y57xnqsjo\", \"4qx94su18i1h1i87pjk6yrog10rl3f7opa6n\", \"odd4vmknup3havy6vo00mt4x8ubrhmlf50u6pudsdthj9jkbm5m8xxq5n5w5ozfw20ef9witprmhwu8t29cezyz350mgb118n6vargk5ukjji45gpyi\", \"6fotvhr98x15f74s8drkv5xjczqqnbeonr8oydrsuw1uncwh5jft1ptc5chpptmjeatkdpxsz375438kqmddi6qtjjvhvqj4yqqhpdurrfil37k277hsu2o9itnwsm25tduvpmla6s64sw7\" ],\n        \"caviumCerts\" : [ \"t2xsxar1mmfrg\", \"vx39350dahfe73cxhdwg2h65jc5l5nva9y0ubu8q5j6s9ncahfogak1wn5xcvjg0n9penvc4p7jt7pep6wz4b8kl2\", \"uyrd9ws1fwkrky6zeteihl6fs0emiri490qm1qv4zdl7g45ra5ojfjd2l3s6ipkh0vosp0751ji157y25z3rpzreyxcns62n72x4f7wt1uqa1sacmvev4egy2bytf002z1h2sn22ub6hd381xii353t510\", \"b6zp3t2klkrsh9stra3fj0wckd27m2fyx9e03\", \"3evybb361bngfm8suorq9zxpykys9l8s5oaq8lh67iyw74pfyozfqjsdpq8iauks8vbpu5safk0hfxxg6ue9hzgf8wz63nrjqaq0vmf3mr0y1wxa63ud62nvo56hb066x2buxf3w3r4c4sni5\" ],\n        \"googlePartitionCerts\" : [ \"uld3yss22dolxjrp0sjsd6qz0qwtu3y9irtpwb6fqg0clrc77dw8x3wjkvnxo74e\", \"9e79n1tnwi74tx4msneelizgnbj1ierxc19w14v4c9qqbwxemcyc9dxbxt7updywelo\", \"uc5oq25zeyc2m37e2ytxkspwvxlqkkp5bsh1ik0hqx0lnwnmn7olb02qmdthz83sq3f52xig2jq8y98y1ghm5a5ekapfq2oqkodpz0be1w5cyx9ffqw9zs6s61wy9uiocf78aqz54hu9t9ade0jp76z4i87pcov82p229qjr\" ]\n      },\n      \"content\" : \"Et laboriosam cupiditate. Sed voluptatum harum voluptatem. Non incidunt nulla quibusdam nihil ea. Sit mollitia nulla.\"\n    },\n    \"expireTime\" : \"2022-08-16T13:22:48.727239Z\",\n    \"createTime\" : \"2022-06-02T13:37:48.727265Z\",\n    \"importMethod\" : \"RSA_OAEP_4096_SHA1_AES_256\",\n    \"name\" : \"Fredric King\",\n    \"publicKey\" : {\n      \"pem\" : \"6eb3brrr5alq3asqs6wtpmzl8ai5khvbw3vrm7azohkgtoce6ko4hmor8pgpztligr4nvx6vi80vf4uek3kqta0nthf5oycwl6qcf8zv2rmlcnzbiv98hew4iodx2wfhsspfxxui9yllj4x4n4isdpzmb83iku6gs5las7udeknjefuagees531jtedr0cy6ykpfu\"\n    },\n    \"state\" : \"PENDING_GENERATION\",\n    \"generateTime\" : \"2022-05-09T15:50:48.727363Z\",\n    \"protectionLevel\" : \"SOFTWARE\"\n  }, {\n    \"expireEventTime\" : \"2022-03-17T13:22:48.727405Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"747d92rd3zks6yqflanvxtryhxaikblxl3f7qc3uylbdtn\", \"1hmyevzpl7rr77d5etos5x3bphpsft4m1q50nl5ej12d\", \"uaulmlquarj9jrrtw8dqwpnk9q3xa0c35i7kq6ua98icfpd6zo3li248lljedtjy1v7\", \"h635j1x0ub1mmwpcg1tjttli5nl5bx9ev8287yqkuncts2zkrqxcurn1d584cc3zd\" ],\n        \"caviumCerts\" : [ \"mer6gpwqw1xjm9qj7rvoi02z53y2a\", \"psicl3kdes4ppvfihg9im8bhsoqwn52hwtbujnsi5mlzo63n9ggie39a6k99aauoyxv0l29d3zfoxz2f2wlx0qik11eh2l4avmqwh23yw5hi84nxonf2qe\", \"t3pyhi6ttuawi4clel3ejrqt2b7zo9s8t9ph5hyscds5uz9e49xtu0ka60uwxgdxixyp9mnxi6tkqhqftqa7ze5rirpyibo\", \"jpp11m5fjls41v3mt3f7y7po2l44y8pm1r89nwei83asw26fvpitrbk5qzlvihoez197x\" ],\n        \"googlePartitionCerts\" : [ \"kzmx1vi9dvu9phrd553s9695ofrr96nu73tp7q5ocmmentmxgtx7lx1hyqo8zqyr7z64\", \"vz5650ad40\", \"943t4wo5fl9dfxlt8njbxe7aopandb3re4orv7sojua2jc8s59ng6tuxavjb04t4odgp0uv7ftwlzfzfj6hhxsk9dcvmtne6paglc7zu6y3x6\" ]\n      },\n      \"content\" : \"Et quod dolores dolores sapiente. Libero possimus sit facere ad. Possimus ipsa labore enim praesentium. Commodi tempore aliquam doloribus iure.\"\n    },\n    \"expireTime\" : \"2022-06-29T16:32:48.727556Z\",\n    \"createTime\" : \"2022-06-21T15:45:48.727585Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA256_AES_256\",\n    \"name\" : \"Rosario Auer\",\n    \"publicKey\" : {\n      \"pem\" : \"pw0nifsr6c4v7041sy5zt15lqc4qzdyz9mlckxzc9vps7wnvptz1vua2az2izb3goktkuamybmyhsrfwz6o4q3h7v401\"\n    },\n    \"state\" : \"ACTIVE\",\n    \"generateTime\" : \"2022-10-27T15:10:48.72768Z\",\n    \"protectionLevel\" : \"HSM\"\n  }, {\n    \"expireEventTime\" : \"2022-10-13T13:44:48.727721Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"mgzz01stvhqvcaptpceqh4byq8tegso\", \"wjx8r3p3cbmqtlgxa2j3xgs1x591f3yg3c0pgtsc2ypgsage0qgkfvatz2w1vru1dhauv97o5i1r4e15bwkaaa79fxh8unljy9weq73xfyu6zp4r7valakjx1iitz9kyacjxlvc11awabqoc43am8y9s8mm47j3a46p8qw9unavivuhbpcsoaw64ushhw1tja\", \"p4yhnc12dtdcm5\", \"l73hm8sv76dmar94u8jspbtwioiq2sklx9e3exfo3hiqe37w633qu7j7d64iafbf27uap4p9aygvr9k29hcqwixgj\", \"ew8h0xvr4zrq8a0qqb3pc4tir0brkfpfx5z88u9ftrury05sx10cegb42ds98843443q2d8z8lxn4lef9bt11jvr\", \"enm14dvcdmq39w1j3580k4rzjr9fwze480n8x8u34vu7rcsiizjodavc0f8e7t77s3dmdjg862ojllynds2683emhfz5g600jzdp7x7s84hsqf00jc8pudq4rfyezmqeblu2n0n1wc7i3uvwu896yph2j49l7dhhlw88a3qtru8176ak9jth9bgofdp08nwei4\", \"s3i7ke9bbs05l32ljjgb9h3tuv5x3r8yegcgh00jsw538q3iz5xrl0ggb07pr0ia0juux119yrzhy9kuoioownanni59czi81g3eys4hkeddjgoei4dgo84a1u6q2fg2qws0iz6gvotgbcz16z4gtaypmw93h22i2rmzrl293altrn\", \"pi1zo8sfovthakeba23sl77hs4tskxl\" ],\n        \"caviumCerts\" : [ \"u1deq27ffe2fm4m8j1l50j4sbhthycmfmegdooyvho4ggo8oipcnx4m9ubu5ipmxkjkwh2c2hy9lu6zp3jffr8y30mbv7wt12ftxioqgyg31chuxbinzndsiado7v7lzlifp9mkydg3ergpmqv3jnxqbrux1hxh48hmf4kh7yr2ypx1sfx6h9e\", \"nk6gugchuep4i8pi2hkncu3wjlhshpcc4aiaa871lgh067c8a8dgb1xwtanisu2qvair3ounahz9srzu8v83obat280jv6kdlt1pu4dgx1tro98ggapc471vnf832qh6l5cfp9dg977if\" ],\n        \"googlePartitionCerts\" : [ \"dr5e80wt93hxm9u5zusoiuh5j00uh0llwuqfdbq5b8hmsgdb9bgij1uo3p2d12cyi0a7zfixyixwsk2dob55sbyxmkhby8lrbmebvwwx5dea2l7885kxwbzseroujmneno9hpdkkk0r87oa\", \"f4wvbyw2fbfp44sz2y2otwrhdr3ef6dtn5t526czdhtkp9zrfa1m4te1xqovo3e7m7zfq57bgjy04ag7y5v19ew2kdlwshcmeox1qj620j0pfmwb3ef0p9aou2q0w4zf5ex0en8\", \"u7zikyy3w1db336gn68c8d01zh7qr11953ejzn46xgo26u6u6iw6x5eub31uq1vqu3kqb8zv2vqo6qbv2jg49zr\", \"3jwopldrpwpp0i31uepvngk\", \"zvsxgayivmwudcr683fnwyw8si8kgn6mikha9v41u42q21jv66anrix9lqbzrw4a3tc5wpmayrzkzvwj4jlm6a8jcm22ealc\", \"phcgvbzptsk23f43hzl4tz54jsowmcgkgxqtyztuev1w0hi800btm6y8qz0xu8rbi1kfi6n1yn61tz2yc49az6hl5urmxp0gt9\", \"so6u9xms9b1459b7mv9mk8i1ilic7rohvbnitlq0x4spf3cnyvep81y7rk6ud6ixtolcdcrohimwe33okip7to1zfstkykftv7jgpshl984zp4wnzu7i5i0d0sozlxd8o0xed0p\" ]\n      },\n      \"content\" : \"Dolorem inventore magni neque necessitatibus et et. Deserunt dolorem voluptate qui ut et molestiae quidem. Saepe magni quia repellat cumque voluptatem nisi sint.\"\n    },\n    \"expireTime\" : \"2022-08-07T16:56:48.7279Z\",\n    \"createTime\" : \"2022-08-21T13:33:48.727926Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA256_AES_256\",\n    \"name\" : \"Meda O'Reilly\",\n    \"publicKey\" : {\n      \"pem\" : \"435ki4uun05gq4fvowzez36zzo7n0hoeq50lpdis3susdnm9rsiipi2yf6bf72e62cphx7vp4lutuwnwayz3xkea93\"\n    },\n    \"state\" : \"EXPIRED\",\n    \"generateTime\" : \"2022-12-28T16:34:48.728021Z\",\n    \"protectionLevel\" : \"EXTERNAL_VPC\"\n  } ],\n  \"totalSize\" : 42806477,\n  \"nextPageToken\" : \"0jc0xmcfj98wqc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8f095e13-7950-3a4b-b280-623737715f41",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListImportJobs.",
            "properties" : {
              "importJobs" : {
                "description" : "The list of ImportJobs.",
                "items" : {
                  "$ref" : "#/components/schemas/ImportJob"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListImportJobsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of ImportJobs that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "1d42bc6d-8d08-33b4-bd8d-9642d2228fac",
    "name" : "Creates a new EkmConnection in a given Project and Location.",
    "request" : {
      "urlPath" : "/v1/5uzb7p40s4s447mp5efn4dabkwlw88y7lnhtdynbz6sdbhbhrjicvpprulj/ekmConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"serviceResolvers\" : [ {\n    \"hostname\" : \"Kassandra Abshire\",\n    \"endpointFilter\" : \"0l3v3cl7t1qw4k8qj550db2m6n7209q08r1tf6h0q758uf93twmt6r363espaiikdj6pn5cg586caw5w7u8ye6gyt5dablrv8kf4bq5yirnj2sdhoj5fn2l075fsv0dvkb\",\n    \"serviceDirectoryService\" : \"h6yvldprwuwqqe5061d9s49cc7zd9musububooay1spfxg74wy5q4qn3tt7sif8tiqstx1yrujo3u8ek72dmzqvfrrqvws80hpfd3yazy8lfe2hffe435ecwzkybvlzhrprgzd2qjfc9gb1invq87h7119eh1mxzvmc4wleb4s6rtalgh4zk8bc3t\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-09-02T14:02:48.722241Z\",\n      \"serialNumber\" : \"7yhdogx5xzqtwr9k9m4yjxf9k62coqtchsbwp8gg5jysns3ecsy5pnj9jnxstqznq7euku7axto1wse4oh3d19hlkjg8rrj09zq9s9p2cp1pv62pcdfhmvl6vbfh5jznkswixevhk6b1176aujq5lbf7szy4fghnh5atcot6bxon6t2ephh58ridvid\",\n      \"subject\" : \"e5vq4wsex2ymjgpcric703zvxi11c7wkkv52pddn9h7bbj1736xqwrn266sfhfzrbe2de99neviyt64jaltd8k0awmplem89ru0sd40gtudpyeb707ye7314h6ec3ci5kbodhc5xdced1ad9lcvnd0bwyy5nh8tdmx68f7pd8bywrkn0s88k37y6nmoev\",\n      \"sha256Fingerprint\" : \"8zpnodkno1v19mcq5bn1t7htpnqgqd9kaqsn8ujqucve1uke8yidaex1yq8agsat7eg5l8uz3lhyb8510k9i1lg5hqfib69c6fu188t3x4ldvo7s8dmudag5ih9m61js91pb9woxu9f7ynunuo7nnj6u5s4zexvaaktbemiicr3wjkdxo\",\n      \"subjectAlternativeDnsNames\" : [ \"r31pijo3vwkmtaggcs6d9au1iewkrqzok52t3u8worodtkq6g4t992prm4wslk6nl4vrb0rg81cf5kjk8gt2v9sy2efm9sut4svf4brajoa9rnf6raqnz5fif4g11srxkuvys3q0n2k2xxa\", \"uamoq3vylyeu10s9il183id0x54sveqy3o493yqf3s2ccdmb7aalwzhh9amlnmmw5ol11sv9z9manf2af80r3sgka42yqjnmzkq25eur1dfl71t756sr3bvfm43hv7\", \"8qp9tac436u1go0v4iq23wgbk34qkiblq981yux2gjooodtxhejs3b8zyunlcsxab04356tm8q4zfpazqp\", \"30kwcmnlx07p3gr5359dx4vzel4pkslb3l6apijwslcwo5wt0gfjharqiex7c4u9ub4dqkwnejl2tri6xuukiuhmfvk56xa1fmh1dq4hz3bpx8l3zubwczhzxja7yctsmtiayb4qbldi1el0\", \"wt7pd5elk3ympmdbn5vmi5qnos3xhogtw55o25qv4a6nhen7lut5nhk9ydepromy28sw2t79p5dgsm2atkyqb65pnfatdubrxj5dk50luobcysey74onrm3pyoq4sovc2poa39l1s7bgku3xulxprb4nb3wgccz1b60v0\", \"b4r58t6ifp9ofecefh35trdzor7g6dhu22eklqjrsjxmecwcjyp83yohqyfcyu6b4ojw10kbw8hx53kqkcj6j07ci6n3tctj17no5irr9gke80fsu71acd4pc0i3qi6hldpi\", \"u54d22d2nsha5fmm40ovdqnxmnt6w3xhcrja8ah0l\", \"0unqmlr9hvfb75q9m6myrdypebmkmzlrgw5301la4ow3eu2x58h5giq1bsevzihm022xlioud7gvtwnzrwtvajdp018vdxl515th1b0z2bgok035vm1dxqkpcibo17lyer76stuji1clj2dti25jpk95ftg5ktho7\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"tflaytx5ielhjjjhfp5f0483i0hlp0dawllxo7nhl01bz18il7kf8zz82hr52cedhi9ffs1oodim5k9kicm1rr47c71keqtn02q13s1smtumh67z8ijsws1kcfr9v9youj0rz357w1q2r01jjhy915of8o4\",\n      \"notAfterTime\" : \"2022-12-24T13:23:48.722399Z\",\n      \"rawDer\" : \"7eud3bb3xnm73py6i4zm18wcwniiv3edorlp5vehpds3zilqo2fwpukjd8jemdzffr8he8xek77cq6x0vqxjc781r4usf3vfainkeftk7twp68be6u9rrdt48yhhmrnoscijm3x06z9byhi7jnol095mmdqcg2zhcq89t9u94a0la9yikmgkiu4omj\"\n    } ]\n  }, {\n    \"hostname\" : \"Latoyia Homenick Jr.\",\n    \"endpointFilter\" : \"8hiomlaq5pr7dnbhz6oel6cioismc5fcc2g3c2l6fgi5bpwj1e2of0jzsj0lq3x273boyvweep79l8f33jz9elwzydvkm4rsyvan00k21d591h1kriqj8ghmjk91y9pdvg6022yvck4n1q824m\",\n    \"serviceDirectoryService\" : \"knl8xwz2c7f2p0fjvyhq303qavk4sgklbyfl4ll5l6v2szefs7kwq39kbk7uxieqb63a7jo07jy2ssrdknrgrp21g5u\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-03-27T16:24:48.722526Z\",\n      \"serialNumber\" : \"3vk1ed47ir5sa9rh5r5p1ci851w42booa7mhalcxetm6fejrccf6iwpi3r8lexnn6iaplrj\",\n      \"subject\" : \"b3c2o77sq0v7dbg0ariqqtdnznrn5tudf0kqt8aob2xwvnzwfox0vo0wpvu8wdvlvnwkmpu7zutf719lu\",\n      \"sha256Fingerprint\" : \"dz5p8f3ywe4mfts8k81hv5s0z00t2b2vxnziuu35n0qb0oovjclyc9s70l7t5od1ha3gb0o5bh7w1kfu6k7duyc9ec41tzgr7gnabh62efd7e707n96fek3pj53b94w05d6sfhnzfwm\",\n      \"subjectAlternativeDnsNames\" : [ \"wofcwrxu52v6lzvkc6yn7v\", \"cdwb240mj3jn2nwwsc4of7pmdbq04odfugegs386uarbabx8k7hk24y\", \"0gvqvpi3aebtop03cjkgg3akgxgzpt3x4jq0i27l71y6dxmxrnlimj8fntwd2o7\", \"g2kmxk31rs5hgx71cv2rysdyueyxuub1r200v17cpki26y5wzd4rskanb4xtqboyohnqay94nmlilzj9fc5\", \"ysh42bdlgbc7i3nkzakg2dgkm15oaymcmuph8f6nh5qql0j22fkk1ttwrxnd6t2nxf1t6tsafjdu8c1ba\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"pqfawk18v3e5o3ytk20nfdr42svk1ngt9wh26s0api2jf4gelwjzwm10vdtwxbd3d7ozwuyms6vp7k82kc2tcrbyy9zbjx\",\n      \"notAfterTime\" : \"2023-01-18T13:20:48.722636Z\",\n      \"rawDer\" : \"kxisc3jsci48kz6zg4cjjtha2hz7z4429o89jkpqwliqdwk7adsyxgbft9ke7eyk2hm3wf8jqczmxkwf4rfs2r4lsodpkd1k5le\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-01T13:33:48.722682Z\",\n      \"serialNumber\" : \"1g6np4fnawsxpe8czbde61wqorzfvnxg5ogah7h8zi82urew5bxngcjepmbvxuigd1exz7dtmz51zvrioqemr6ul9d3xmcp0lnwx8s9qtm0h0ycdecn3jg36chqc\",\n      \"subject\" : \"bz0djbhsh0dsjlo6p6fdd15dkiy42zn548292a9wzr2u9visaa9z0ujwez3p0yozi3wlinyauywoc2jth6s3mm3n0sv6ifg0g8lefbu3rgb0inkavd55flxztn6hp4zy6z269tbbd07c2u7bz8v9ra1v5ff4fte6dgfjkuomt8c2052n2o\",\n      \"sha256Fingerprint\" : \"sr3k6hn265vlqqnlh5oh3b65n4o5kdg7b1u5zc65cw49\",\n      \"subjectAlternativeDnsNames\" : [ \"u9kvw7niudlkqf2yfwxi1evtggzvdeioz3998aatsogod2nj5tzunmym4nca68r13fpfslyaylkr62oa08qnqkmbynjfv1fbubg08egsxn33zme8hmilv3c8ji0u\", \"x0z4f55rs3k3rg787dsd4yu4u5a3cuqj1ejffxzo9rf73ajf02cy0dfbemwf9duu62ez4gjlg15cpgj79ery35ovh3f82sj7n\", \"6nrg9yj9v1lh0gv2tgz3pdnzuadsdhj5byq5yvcele854bapv2gc9ltjpudlyzqax4mv7ihq1bqk81x6xwhssdhvvkhbm7btvj3awkxn7v6xgoqb6mo88pvju7yhh4k\", \"nb6m6hr4ql5qrkip326bi6g34yj4hg9uvhz3njnne23aurvbi7vuiwmk8bzbpznd9vsm7xue73ndp6gp36eq7rnacmwkcdo3jczvi7ssrt9ss3dsbf1z6psdob8ucavbhoqcst25rnsvrt7qxh6k5hrh77sfrmpxdpj7q4fd2qqqbs6dy02m\", \"wiq61gxi38jnt5ua0ydid2gu4opl1fhhlef639zfuvyk01ys6xoazgrmheleag4bwsjzplm87e5eswxkqwxoyjl2uan6tnodft2zbs8rqkgik8v0hg006wm0bsslzokifpcwz3axim3ed473vxbrga\", \"7pt9smo\", \"q94haguhy7zwo3t3zs73g8n10wqgayzexq0t9bwtaxywh2h1beeahcrk\", \"yk5yazdhbfwp407c4d7go4ke\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"mrxfge5wbs1a07ojcwt\",\n      \"notAfterTime\" : \"2022-08-31T14:02:48.722818Z\",\n      \"rawDer\" : \"63jf7ddutzzjkzt0jqwagpmod7d3pans66vz7hxhrhxextec12dg\"\n    } ]\n  }, {\n    \"hostname\" : \"Ma Kuhn\",\n    \"endpointFilter\" : \"rw1cvk6za9eqrs23pp58os67ejhiqkp0hrdytflkrpon0xwdw539ceh5nlj3g4ejud4vozl84iipb0mbpjdwn58xtrfyyb9lycb0xcos54dreomlebxr\",\n    \"serviceDirectoryService\" : \"xrli7mttk0wbx9d6trei9s8s2lu3exgi8p1yy0wswq4kaxj0b5ltp7i371m4mwq0byjr9jnwzg4e64xuc0c9ulq2o328m\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2023-03-06T13:28:48.72294Z\",\n      \"serialNumber\" : \"nepgsrg3habxchcgvcxiio9tnstrp1dxawgm71eyusa5ir1v0auml7vu9qhti90utj9dvm9hgnr73u73eis8krres3tjsk2v4c40mjcivqreb5aai68pr6et3dyt3qf5ipggukfkmtqbi26nzkphtuynju72r2nivkil8sir1w\",\n      \"subject\" : \"2ls7klskbr9j24wrrzkh56chxfkozw272gni820mvwm0id6e08itshe3wbywggujw84hywh8rgjz4pz49x09x8036b7z01l7p2sl9xg8r2co04b4aprrqwt0l4tfh7538unit8g6ivpz620i\",\n      \"sha256Fingerprint\" : \"k57hzosbvf5a2gdlxb0zsp0jc91wiwvogxwniwa90w7g7s69avtil4a1p5zozkv4vtbsnjljkd8yxdexv8r6tx73ycul87vtfg0vwip7gepo27fgkx\",\n      \"subjectAlternativeDnsNames\" : [ \"lz3b4njbiz5ddb4pjq7tzffsq9oemp0hzqghiawvnotkjkdecwzxxpaf93ee3yuak8kze02mh217wv9s2oxdf55ka7m1hbxigzkk306lf2a74rwr56kcw03362wif7w9juz05j04luj3mctfhng39ue7o9lti7xqdtu0yo030olfzzi7ihu4muwdkyc3ue6y\", \"1rtpm9g2l0jr8qpizghiqlns8ibiusl50yp9phdcury9si4hrqrrqqrwst6q4mqauhqhr5uov27k2kk1w2koaqt4bifpn0i7ofguq9bc1xc\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"vif14sf08td9yb669p7gih2dp7d3687szol922s5jj8zcnzrv8kf63ilbdsymfaf3mrjgiyhge83waw5fh315qj0wtudman1zrcvg87iulsax72ggbyny0l\",\n      \"notAfterTime\" : \"2022-10-07T16:43:48.723041Z\",\n      \"rawDer\" : \"v22ho3ycdmeivr53x91u9nmjfqyyn5mzs5l61lozc194vvmiqba802siaukkmdq9dfufzhdkhoju9vqcqzs9zh6yt1nw168459dhbwlokc01\"\n    }, {\n      \"notBeforeTime\" : \"2022-03-30T14:46:48.723087Z\",\n      \"serialNumber\" : \"ydby\",\n      \"subject\" : \"mlwd1epor86lk4rxu2ezaxhc6fq344iwxkl2rtmc8knhdb540cibrta02qcfv1efopirh71tkc4d375d1ivequzriwl1sgnq8y1kaodbt3hz9\",\n      \"sha256Fingerprint\" : \"5b0zkth6w4wbgkfj7fq5e3vg8pbv5r5trrzn4m91hj\",\n      \"subjectAlternativeDnsNames\" : [ \"hfh0csbtmn5bv2pxyjtg8g2v7f5z884gf5e7wlht0s5frn63k3aqbt1wphe8jg3nzla8n2q2gx5edtfze454awll55eqjbw60n0bkgj40pxksi1l8ghem6rtxab\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"hm56wmwnvuadbqkhzt3ppdn15q79fk24hldnvwlajl2w3bm29w9puw5pzvtpssako59h2hucm2z630ablak30cxe7d95zb6jdh\",\n      \"notAfterTime\" : \"2023-02-22T13:49:48.723173Z\",\n      \"rawDer\" : \"p4q22iyylue8kewkurxpjxioetymbdxiafvn8f4w6fb7fdx87w2hy8rna4qc57b5bf4s55pfclam5f66esoo5nl243mip2vkxc59pe1izub4kb22izp96efzlv0bnt5mua73jv720196uiv01xhw6kfbiu7gu8143x5xjr922agh3fjcj7eu8x\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-15T15:20:48.723221Z\",\n      \"serialNumber\" : \"v5x1e93qcnbirgxz2e18qkbwuq9gp4o\",\n      \"subject\" : \"v22lfylqj2wp7fcouso1pp76lpgjp8zmvjzdbkigyjmapby270kb3l3gctz2vnawvqm2l457xrz5luiip7s4tq6i4q462n1f8mdw7qqcn5cpjxldn1u3ia8venv9g01mpgyi7ar6teyso66d\",\n      \"sha256Fingerprint\" : \"0vh94aza34mmi1b827rnxukv12tdks1aiw1df51h1blye6tx6n60lswtgh53fqsmr5kopk04380vxl2esy27dprluo8vbbo2iub6o4dm8mg0n151va0i4tjrxmiyzc40qvlogokdalsljv84ndzrbzajrf1iwkml8sitjhwf54cyujlr1\",\n      \"subjectAlternativeDnsNames\" : [ \"zrla5x3swt19wi0mc89zki0r1ujwb1565s5gah5eswkv5rs87kuq5yz982f9k556vzbdcvq6u2ux4qec986uoiu\", \"2axg9hp37bsedls9sboai9h93bsvbr0xrzpa0zwrbq5i2aom495oas4shuorouz5uqr0t00gozrv67bhkjywwsfxlq36kaqpwzs7e7efwy8uwzkqd787qvciqa3ypz65plwsp097j1lbguzybcf97u12pbq1e\", \"243gu09l5ljfi1xf2fe8eeky24tqltywyoml00lw7tjxgj9svkrhnpns71ukdqs9cam2vbx2whq0z8mu8pz7sd0s5wmc4p81t3nv2xzxccy7btfpiqlrvhempkub75fsg6cnq9pvwan2uy8uk7ag6elu6d68bvj2uvi\", \"caa0t3yqxvix9nmm45vyo27w8wp5aqbk34w1j6e1ux4o\", \"01kg477xzf9zc7maplzzin74\", \"951a0f337qc6bqf48vqk7wixvx59cjccm3xp0u2koop4c3b08z0tr\", \"yslukygat6c4u6azzhr277xoeelt0afocto279xbcui1qry41x5ydb604mkump12wmjiunvcafbrn87wibxo1gnkq4mybqsv051u88f6pnhis68cikeniqj9gg5t9tjg9y2nmwh9bbf2pwfmpj4lhy79tt6vruzo33uvzcw0ertn7i563qjp\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"pa988zv4mxx3je\",\n      \"notAfterTime\" : \"2022-12-02T15:49:48.723345Z\",\n      \"rawDer\" : \"mtrorzwbp87qzhhyrtf4\"\n    }, {\n      \"notBeforeTime\" : \"2022-06-30T15:24:48.723391Z\",\n      \"serialNumber\" : \"33gyqmtyyt1pxcfgl1mqbhlzxbbpptp6kffnxiilaa58lro04hqvz7np7gsqtdvsm2k5ik2vgrt336o820q6aue4mbzuyzbb9pkqtcx\",\n      \"subject\" : \"ug6l7wzgcnskg73idzx8tfmph4yrlnyzbu3brqvdo2wvhtaoumhr2l8kaevkz7bxqjgn9eo5z4uhd9y7om4hu090gtvuykgxn3qs1sythxqw4\",\n      \"sha256Fingerprint\" : \"6ehue16ovc8ohikv5mqa79exkhr6m15ljlcpzo82zhzf72akjoloirq0wjx3utx7snr3rz0nc3d9q29hcsum7v89nejn1fswi9vn6mxszltv5446bteyxaozr9ps1p5vgvsvghkgksesob\",\n      \"subjectAlternativeDnsNames\" : [ \"3row8bsvjyteuvrpw0mlvmah75zalk186xm52lvjyryn1arsrkyjy2o5676uqum9dkak8u0kdr4iwmkl2olwndk7imou964yntydhn99kqgp4s3fj3fq2e489xusb6ifssasilgajbduxzhnuuf3rhqn31k2c5o7087x4jrofvkmfngcd1ysl3s0mitd\", \"dado5b2krz8om8e6hpey00yau0vmsg4wzrlkdeg7pgla0fqnwhuq884mr6p7mw909jvzu7b0txhc8zuqiau4rv6tj2fush87sm6h8y8i\", \"tgg\", \"53k72l6sk12s4j52q0xrdvrdiav7ogkljpi1alzsztut9zw7xtmlmtdi3gti8hk6k92w9u2fjx87fp3o1if6kqb4yf1hte6104pck8xai42n2h69yb5pp6vr3oejpzy5z9q8z3y7pn\", \"oz0ntypl5r6ph5a9ocav014ot6cq25gh52erxv8ky77yi\", \"gxg1908vh4yq91sj3j0d3yv324eg4di70x0lvonbyqrxqd6t1dgacmzdri5x2i4fa71pb6hs1d59xkowwov9cvdduac971smm3z4oynwgipqqrbljjhpqdrniq7ztxegtmqex6g\", \"i1rqy6qfnpq8tyy2vvp7xnm2zv2mbunhci18mmoul3xid46bxuk0poph6ov5k7gkz4fhatci2htgc2cjyfz98aqfl9rymiswad6gpy03xhmt2j4s1an8akywsln0gf1wnjpm1zxldi5q9su8wcabp8xg48at7qt8h6tfaabg4plv0y\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"bpynu1yav7398utw090jjbuv5onhcw9861fcfek36uknckkvrtovit6bjf9rsbkdrixkoont5bciu8cna3zonhx0mig07961hrawhzeki5fa8e98tcq0u0ewm08ceg4otck8fsqmywtegzwiw08dbmtf7udycbtmfztgkp6hsxiz9x4aaqb4ms\",\n      \"notAfterTime\" : \"2022-04-24T16:55:48.723515Z\",\n      \"rawDer\" : \"y1ugp27blcwoeuhv2ito4lcvjry915fqhwb3opm4dcc6diz4y9dpsrmwtdz81i952v176vzi1xzbfqcj2la2h5ckvn1k7g3l6epuo73hkctsq998js60f8\"\n    }, {\n      \"notBeforeTime\" : \"2022-11-06T13:43:48.723563Z\",\n      \"serialNumber\" : \"4xaq1qwnw19pqwrtheidlc695j\",\n      \"subject\" : \"eoqvcxnmjpnnxe7bhn6cx5uqjtk2gai0cg1p5e03mpz5vxjm75elfbffaypmjspyqhsyz22luywvoz3rjl5jz5jnx12fuwtg\",\n      \"sha256Fingerprint\" : \"rxy6kavz4x6548qndawje\",\n      \"subjectAlternativeDnsNames\" : [ \"zogtz95zqqdtz429c8vsg04e3516qewhbavgpjxn6ngxi40xkv5q8gv4jav7wrl2srsp8774wk6ozu2j7rygr0t9js1atrjjtnue073229q0aeak37q0szgxesczy8692audw5lqi9\", \"zwk2ayien1pbueb0ac86ikogb1quzvgy2a6ewz3m7i3zqkiqn1mb6nuqstjf82zmva8mzofvumbvd6u21yeixqcaaa3jk3odbw7lnrt8c21sxraivzxf7a8oudjm928odhfgjtcsmtslv4pre8z1bjh9fhife7t11sku5t\", \"wko6lwnqqjuzz4hfjj2ut8h2944xbesv9os5ztkchjd0k28pdrg7zbqu04wcsy27q09tn2lb50rylwkcxkl6hwthtugnt9uga0chlnub80j28oieav3o4el6lrq5ryy89mhi80wcp168i4ky9qs1qy9nnpgr6y44o4njywmu9rwbzdww0f44coqvfa6ojte8qx3h95\", \"230p0ee9bdssql9gk9w4ki4cegc8askv5aoc02n66oqu71j5zhbwd7y0c06qsch2iq8mu3xyyykx7z\", \"ytaje2b9y1t262rpy1qtnl7tv9yv4mmnr98jf9ne98vw9tr9ep9i62ktupxzhkjxpelxasvvu8ow1ve2qghaxsejdzl82duyrowglasw8nk3sbx08e0hfg5nfkqer8auis58us94w474d7gexswooyk1q943tq7cu\", \"hpq776oxi11lp2v4oygoxcpjplf557kve58kmyim792ejwx2p04vykq7eb1hs1skvrufjyrefeaq7crfiejnj7onu1fizoaim9i4p1w4n1niueefdm1u0lk88z9gayqm4oo7t08h72n\", \"cy5xc63tgfuqclafryy7ru2xuqff3xc0jbms7vk6ng48fcn7iapu3imi9bg4glgf6tss5rfo2zlte7z12h3s4gd6ipkub9kd8qm2e4rmt5rxf8gprzvffgm4t080\", \"3xqpsmxvw3ky2ehum7gg4zzulxx11nmm90ul65jwz23xxwn1n9l8moopn25q9qgsqy931mdxuf665ceomgoovynt5ig4zx8eg34vkprvj71qvg1g0tj86vx8t4o3qewma0ykse1084g9vudaz3cgbcg1ddnusfeaslvqg1iezhb2o8qhl77zg64wnwt3\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"gungln6nxyw7v1f7vitbd2c0nei1n0bx50m4l5tnmspdactsqpblm41ojzr0tmfjv5xdxokshmm9vesx8e332a429bmm6dx9huz8myvc4d8zhbnsrch89vwuyp7m6hydmuplrt2lsbhh9j3k0jvpqtuk3a7y3y3x05dgp20umzshzekpnfrutry4691jef5oik\",\n      \"notAfterTime\" : \"2022-08-26T16:28:48.723695Z\",\n      \"rawDer\" : \"vz7zrd3x9hfyslz2u1l3y4btywozbnaouvdrrg1jp9y84ihzbpqki9sutfekgoow3katd4aq0xk9ngrasykprlartgmmjo0795bmi5ipm4\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-30T15:36:48.723744Z\",\n      \"serialNumber\" : \"zvi93026gzgxket2yssptz8luze6npaia5rcgg7bnpeagim5rwbv1dhx4vfcmmg7nt1985d3lbppf51801t0ajdve8b2qfiux40wi49rtt3bpunglrdkef1mlzfcf5o44lvrqwmezeenu2agp6hnfwk3sgm6tjq46ajz4dsmd8r8agwe\",\n      \"subject\" : \"9hkpv7c6xerq7q91mfe0tltcl06yjhjs7r492koad5m9piq43ytfugjaha7avfqfhg2llrine8rg95dsjibb9zmj4iptrsaiok6beeuys3avaufky71sww\",\n      \"sha256Fingerprint\" : \"rjcm3fvbrqlgxi2vf90cxti48qd8ipyd6qvy6q4if7u9ia6pc0h6d94rux\",\n      \"subjectAlternativeDnsNames\" : [ \"bzh4xju1r0z2561mljd45tj8djhnr915qs46in7i2l7asw55ygdva10ur522beuj68tnw0ld0uii9xgmx1gr20ljguno2v3plrbvvn65ifvu4g9mbmawt6ifdg1vixmjd5327yk3yj36glasy1sabsfrt748t6qyqxs7grtavzxtzoq00k6h3d4e0\", \"x3aomga8li4j0ve79wkc3j0wcpbvx0j9\", \"wxsxxo0zfxvbx8irq44n2l4ltyjxecx1\", \"0p64f5xr6autnrorb2gpjfpt144pk2yet865s3iz3xmdict57fqkgd3psmkkjma8uta87t2kl73g4t6x59tk6sh5h6ng6tsc29ag0eoo7m1dua6lpc2rz3sd2j19fhrhmblzblodyzwez3\", \"4ulgyfbqfh7qmgllas886pyd901zviktkk9g1bkcwv2hpghfl9bzq179\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"j34bz75yf8jqf7qee1nvckkdbefw59d1caqftjxk3zddw3ctyodqs1p1wo3qd5k1uetkpt4pi4rao0t8\",\n      \"notAfterTime\" : \"2022-08-30T14:39:48.723854Z\",\n      \"rawDer\" : \"6wfp5h9awp9a78oh699k8jg7jdjx20zrz0d6uv76u9zfb3n81no7ogls\"\n    }, {\n      \"notBeforeTime\" : \"2023-01-26T15:20:48.7239Z\",\n      \"serialNumber\" : \"e1t1bvsnx7qk9lf0hc51tsfpwjzwgmayilspnm1se6gbvtvr31d34n6ate6o5k1z8zm1ulodk598yn73zqpj0cr0o2a6unqe9cqmoia1xbdi9677zjmdewozdcn1hth0\",\n      \"subject\" : \"ad36okajz05opiqm5ut7bsudgufkk5rik6x9o0z0dna61kvw7mc6fkxegbzcsfb2xngo1x6h0vu5etvukdjrlxsnmb7wb6n4yhsohe6\",\n      \"sha256Fingerprint\" : \"npn2q28lc4ik9d1aoh1rre4yaqhfari75mj1a6qhq48eiqmch515v00vo2bkigepagcvl6qzoug6v7yueghpfo00m36z0rmr04fdjuzzwz6hflsr32j27hghigd07dw\",\n      \"subjectAlternativeDnsNames\" : [ \"331i6ajxbozgtpkllc5f2rrzshnqs999ughcn\", \"rklkknznimo7cu9xpbpl3sdf41r031d8o1m3nxlu9j69imx3nhmmysuo8gdbeppxw54094f2xu15qnbeyj1varvfsgeq7wajziarcby6tfm0mtnvjh3wkkehxx4i\", \"7sp1lby5cfzk748diw0or7axe72xluwr586txisix5aom59n16yg10wwvvlpl5xnb0bhqak7y461sr6xttapqrmlqai3t4uujlftx6qcvg9903ddz33g89x7e7esfu8nvxen2v9tlteaz9b9h36vtmbzuw4qlgbzh\", \"rdsckqwlsj6iohnjcbnl3x4xa8h1bysj6omffqndjhrwq1pamrn4pq07p2sxs93qoe54hkd12tudroq680jogfoj9od375b184y4eodat90tt62or07ocs9qjka7kucvrml5n30o36pwi0ycn2a92e6byj0z\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"3m9579tmlf3l\",\n      \"notAfterTime\" : \"2022-04-28T16:51:48.724009Z\",\n      \"rawDer\" : \"situ6yormmlpywi2vb2ojjtyjr050kwzv0l0tkzip7lvd5qdx58q28h5y6wiiny55mn69uui5yia8be7gmv13jbg0iywro647qc7tukx1oa9dpakler5yvuqc22oofgggbbsh360ib2g2rv3sg8e8g3db1bn3postom34iem38uw4xg9sed1vrki0\"\n    } ]\n  }, {\n    \"hostname\" : \"Seymour Pagac\",\n    \"endpointFilter\" : \"32d8u3xokzopcp9bwqzkwnpuhrgs1tspck12pyfitjlkan3bx8glkba76sxd0hfjdlang39iqzkfnnnvqi6v1ee70ki0lus2ldro5ur8\",\n    \"serviceDirectoryService\" : \"7q0o5l2e6rxgsm2ubmuyi2z9z3vh5xyuph0h18slt9dxg6wbwpvvpi59w2j2fyvai27u99kkhp1rix4n5cdi023dj90e6kompcdonsl0cctvqs7wz6gk2h1br9rvx052n3mruysijqlpspks6wkxndxx5psn\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-10-02T14:17:48.724144Z\",\n      \"serialNumber\" : \"j51s39ei3dvvcgov72x976jhw4hjop6l3scb0orce0pi1s6r7t\",\n      \"subject\" : \"hx6o4ce9j31u9tdrhp20qpgg3nyx89z0lao5e6ml3cm8r0iz18qa20x4i57n5rt063b8w4xdaa8oh1hjjcd8vtg846kc17ppfwvzem48l89hbafvlmfsqdwr6yteurrxhssw6gueruvqth6c5xw4xmlegpm9q900wbm49u3rup7ugdal3egltqv79dqrwbnwkuxi\",\n      \"sha256Fingerprint\" : \"fp6lwsqq4zg7t95673ly6y7zecwb8rovhyja0trnlc7h1v23u1eif728utfzi8avzbxx8z55cd7aisamw9\",\n      \"subjectAlternativeDnsNames\" : [ \"gybd390z02fr4mz7mso06gx7zd939myxlaeskq7n809yanquteduhuarkzryyyf57uz9dhygcvnzmnme7pcr2n8loc6burbhhq8jf6spdj1jc1v3y6ck5xolgjwn65i86l439iuywmfin799no\", \"ol22v81br4okr8izlp\", \"3k9z97nvv8nt5vvo3td2v70pt0jmw08nwcmkumgkhenpgfm3pz09t5nfft0bkng0k2y5n86bqaayq2shgdhuy8hgtecx538kad14lki73a6da0otnzv6fezgigxe145d46enxyfkc7i2odejbsa5eloosncol3apbgredepnd0xgoxbw3kh7dbh\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"25wp\",\n      \"notAfterTime\" : \"2022-07-05T14:21:48.724242Z\",\n      \"rawDer\" : \"si883sbukzge4yjqkcvj2swtwrogoizgl1p3x69hgg5nk4lww9\"\n    }, {\n      \"notBeforeTime\" : \"2023-01-26T14:09:48.724286Z\",\n      \"serialNumber\" : \"449wwl3god2bi0k83nj253zhutpvzntgsdktoljjaknwinqspfwl75rjzttcqantqwk0bmgmrznydoyfobskebesxop9bmuxqyw3jxu0i2wk8zwo18eqhwpp7klv8ix7rzt09tu2shbnth1pfpj6wkil6yohiegkxnnqh7v8xnc0t1bvjoj\",\n      \"subject\" : \"p3vm60oam1kyh22zykc3k8r2d97pv7wpj7b6cpi5odfvekctw64a5xfscqb7ffrf69hhkfwhtk2vjbusmlexylkw742n1y210yf\",\n      \"sha256Fingerprint\" : \"7ixc53bghvt2uyr64b0wbrvq1hrrwklznem3cf0tdtyn14b9k1h0v5i1988gfnbr\",\n      \"subjectAlternativeDnsNames\" : [ \"irq3kzbtxbwnkpbhkiw5dimseyhcsj9hwk8f52fl7q5k81yf0v0b4x8w3wbrig3cqr6f5rfypq1q5zwba81vd86vgbct2lvm5a8bj9x45xxhl96da71tmamx4yxenjswknbwslifa5bdksc88egm4g6ir5dje5kublm\", \"zz8pu2z33bc30n747c3eyqi742yro55mgkdm91tj1esqeiv1hvb53bj3h4fh37esw7kj8mt778jjynatwyzuzwy5h2x6xmjy3rep5oat50m6owsaod02amqke1icwyq9dkbwnh4dmf130sg70qudkb49sh0533coh43omowxn8nxjvmp90xqphm6kd\", \"nlenv7hk2nelmp1z73ngxa11uo3x4kkfhqewl4ee9a9gttq05kntd70rii7ml7i6r40358mjrwr1mx6y1tgyp3fey5cgwh64r0oj1jd1yj4hi1a8p4s77canyb2qml3hjkmkbu6bzxobgm2wna9uquqa1d\", \"hto1u6hnp2d3hfhzgdpg5se8gm\", \"bfb1gcxgl05nnqk74qfu8t7slj5jb7hpkm2fxmk00ba0ef7nu1cmvw30oi7akpgl93mi5m6srvh6omewooz48pcyqt41hbodng2x7frxk19mu013f5hh1j5vu4w2piecpu64c5\", \"1wfrl5wovsayyrmg848sowt3bm83hsdb0o330iyz\", \"6m1l6r3knl3isn32sd8lkcoin7na35hgay2l29qs9a90ss69kmnah45yg3di3l0qviooxmh9plgj1bmjv2gs4p7v4p7faziic9qt3ojwjs1p62uic6lzv8i6w5s7y4aseoqu1uxqf\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"ieegwwzrj1m7saiu1o6t14lrahnn723awdc33qnh1yobeflgmxh2t7kt1sk9\",\n      \"notAfterTime\" : \"2022-11-22T15:14:48.724409Z\",\n      \"rawDer\" : \"m2hijv1r16ay7hdd2cxvpa9x1kwuiz3j14un8xtt4og9yr7j6n88wy5188t4l3766aw0f0n4v7e07frhahcpb8lrpj59xzcc38kcn3ajnqp7bg6kk1609m9z8dcfa\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-26T13:44:48.724457Z\",\n      \"serialNumber\" : \"7v5edaraca8uslhe\",\n      \"subject\" : \"f2k4c8matcnjpdsmv9m3m0x3y4lzjw4od9azpe1z4ok8iaaorcvh66k6m8pfe9gbws4hits0lp68\",\n      \"sha256Fingerprint\" : \"83mdjyqhu7bqrpq9tr48odr1mty5e1qiomjpmxgk6monfaa3e7kwnk8tav0ya6sdf527nd217bcmk\",\n      \"subjectAlternativeDnsNames\" : [ \"ml0eyp5cmhqpfd50ovqebzq3k913qozd043adr0kou033359333uq0kutwkqp1iyci76k4eodvsnhcq7m36nbev8jsm7zw2yzifhhoj5lndadtottvo9w9w87576i5h1c4jwijnh1mknjmhtdgopv0154zt\", \"4p8nitjdfnwn8wd46oke6rukibhkyyw0sepym9nixmm8si3grhl769y7ea83e7zscs4njl4dgci5xs09eqxt0w\", \"frtzd9els27kdjb6vm4kjaru3q8wc6mo17v124v5jlg67pj72ktdne9mlwebct55w69anyee94waam95ngcs1faorxeguq4m8v9czb3zo7pm58\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"5wkaepktynpan96qy1lkz66l6jfadm2xan507ttu9nrsjtc41eng5e955xs0z3123np9jm3elpsqps7iqvha0qqrzoyjjpfes9actjx6q6tkrepkcfj0jfi\",\n      \"notAfterTime\" : \"2023-03-03T13:55:48.724555Z\",\n      \"rawDer\" : \"viukou3pmc7l3hcmukzpjau3573tgw39i7dof3iv29o28w3we68jrj6fyrv2uc3rzy1ctkjnxggzl7x513wtoxlgwf0p5jkrdam7mdthv6ihojqxon3q1ykp38p7ete5yw4m96m2sy7co094wzqwj0b27168xik7pf4kj6w405ugr5bfvyocd82vg6rbh1\"\n    }, {\n      \"notBeforeTime\" : \"2022-11-28T16:40:48.724639Z\",\n      \"serialNumber\" : \"k1e8jyhx2tm3zjmxffyxxggegrh5nok0zg4aorykk8yh5tpua6chyjbrtm5y3crkb00exx59k4ye09qif0j1cpi55tin9cf9n87b1ktgime5qjl1nraleqw2c3h99wfrf08ub3u1g59bt2i0h9u8mpxk345k38jv8842440sk5os7fu96xje\",\n      \"subject\" : \"hn8h5cc1px2jasgk6fmfgwmwhvlyu2c96ekrwe062pgs2go5qazxjlmiqh9lyb0rnxsq0ugut6f20b4chemqx9vmry81yqy88bmj1n0j9j6wb5qkhv6g59jli94eu1s8txg6av885lu0oqkaj2f54xsh9yb3h5sjuuya747uz36bq6jgcyxqtcbcb\",\n      \"sha256Fingerprint\" : \"5k5g44v0uk1v92juigc2yws585dmrveqwmpewi53s3gyzcqy2ed3clyhweiunouxz198l4fhwxr57sbdtgob15a1od11vo9aya8yzayd9aktdetdeyx9hj0f8drwogz82x882x4ccp5bxxsbebksobs97mwd8f95bazznwrywcq\",\n      \"subjectAlternativeDnsNames\" : [ \"sc5c3a57uq876qa55oc7w9zyksqzaklgy2nmzsg4qy4c8ktmh6rj3wrzo19ux6fpp\", \"rfwjuos045koc0dznfmv7cbvv6ti3esaa0t06o9n8h06pqvaigh9w881sxkoxtmy8ujxt8opfsipe07gygrx99az6oqpxk5bv9ixi1px9lycq7mi2sxrzxbtx0u9\", \"qtpd60pfup73f6t0hxt7ccnmdkiim93qndjnat\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"3tadoshs7u0up5denlzw0yeb21ofe1bvt\",\n      \"notAfterTime\" : \"2022-11-29T15:48:48.724749Z\",\n      \"rawDer\" : \"r9t7a5teqejc9krtss9gcxe4xn2d7pr6bidq2dj8ijbwxpz3cuf29rbgtncim3jdjvifz1knivivkwromlsxmb83o\"\n    }, {\n      \"notBeforeTime\" : \"2022-12-13T16:59:48.7248Z\",\n      \"serialNumber\" : \"yrx1iwulk5lh3tcxwflvk245q35r7se9gxtznyqr7z1t2lbisag2ikwjd72064jgv7n071of3zcjt60mecn5xtvmj3t16gg\",\n      \"subject\" : \"xd4knu\",\n      \"sha256Fingerprint\" : \"4l8xiy3efq2tzlmf1iw6but8j0rzsvhm8fvsfe1naf2gr2mitk09stjyu3wxp1kucylsekz4aih2deurivm08viiftnb53f94rf20gwsrot7h8fxis0mbmbhcxonpn8fg4jqv22dgrta2ulwc2s470d9o80zs380kxrr7mrb3ztwoqklr6pp7mq0v1ivrdq9d1qqzr\",\n      \"subjectAlternativeDnsNames\" : [ \"rkda2rfjvl2nfq1ph198856vkoxfubiy9xlknpqxdqipkpto1\", \"4vkyotdxf1re9sno18jw2vlod1qrua3bt1nlwng59v1a8ubqbs35cviv5g2bsne55f2s815r3zyf5de3ja4344dt0q3pdkwl1f3asiev75gsnovug0iad28fpxlm1fz9cvz4oq64axpdevr4akhqd129cfe9zgi5j1xg0mhffuebargw6nco7rsyqtwitvij\", \"7ez9rdgg9ko0e2p9izq1xygwtoacqc1ojjsn9w3x30qrcxdg2aj509jyb497m9yafomebffl29ffs00rs7vc24e1nvktmnfjw5atpslkxch8hnd6n2mcikwpv2iblb9xjvu5cf02e81jfmcptnp4kdeedwt0c1r1n07tjixvr43fng2o0i6t4yjcys849oagb2u5m7\", \"ktstkpu064w3765fj0h1m04cfhglakqjkmvh3ksjhdkurg6xlm9tzep3sgl5c48kd2puvv54lpgu0fwyqsbjj39j4h99uzcejzgic28wacpn3fcb2db3ve7wozc\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"pjytfqpvs08r97sksgf1jxif37pu4r7g0fdt7mibjkqy8b8odqtetgbyamzpi33nhxd360a1gvyac7py6c1hm3vw6malt4ve3pnq4hiljlkxhyvrufx50bwr\",\n      \"notAfterTime\" : \"2022-05-15T16:54:48.724917Z\",\n      \"rawDer\" : \"0x12perem8gmja782orpfoo5p3dx4vfyg0njzi0x2cu1kfvc92jmrun8bnar6uljert2piouqtglopgyf2xbc6wndanevwh82pslzmmw8joo8k\"\n    }, {\n      \"notBeforeTime\" : \"2022-04-23T16:45:48.724965Z\",\n      \"serialNumber\" : \"jj4ciqmfk68jbfyzeuz6\",\n      \"subject\" : \"t82x5itqrlocnl\",\n      \"sha256Fingerprint\" : \"s46ljtuunhb2plj0u4ft3mze\",\n      \"subjectAlternativeDnsNames\" : [ \"2arr7pp13dlu55ikxe98oz1uocl8o7r0wt9fknpvnq5yqxxxvyhri9z6nk74uo2kj9wkldue6nwf9clo9r91u1k1b493v1oao5yop9n9cazkpwyoaodk19rhb74s72ycf6hvzpptsnwbrnpt3m5193c8gegky7f6rkr7o7rlv2wi17lbog5ocd0ei1lztozedue\", \"j7dxuotk9n7kqzx08z0ogymr8jgwtus2wvvnhcu5zljfn5nwfk0wz896426xh9iwgqa6g35a52vxi7rwjiphsv4qdjscorgvp9do4ygpusy6a1xrrqh98r56zihhfn3komdop11c25gm8tw77ir2vp9v2ny2\", \"s2zzn8v5uq65dm6irozldemuue74lard4ht5h\", \"uuo75bwax33mouijrgxg0xufvyu03wb33c482mlxowynbvjnjs3gycvt0iawyim3afksbjybff04g2yqz3j006h0a5q6eggv43qpa4n\", \"h2ukni8wc40x5yx5c6lhu3s0cvj1gkwowmtajdhypa61us5un65fc0m2pzvr8u67lz3lc391ku8zinaddp9hlm9mjwfak2dmyxrib2jf5cdrvu55fbp2ax4o8dtp0eu8owk4bkoq4t1ev6pl2wxvangkx6k8o3tkrcs4c9gwl0bv9jn3pkdzt2k1us881cpni2yx\", \"72y7o17pfh7m716unr55vaao6dw5a7o06diir8vf12782cyo30o426njn0avao4ubyp5qq9neenr5ga3hz0xyfvkgem8so4fk7c4o0ti5h430ck7mqywzmvvdxco1lh0ymqs6lunpxtokw1yeqx0ue75em8b1h7odgerz5t8s8heklw5tzx3f\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"u5eyukf8wdmb6qs4dreyv64q6wwblteutezaa80182xvtvip52o75r9acvvgklomhv8suoby5n2zs2oeqmy4nyc4iw3zd7tta0vacn2awtk2s57jfoaujgofvki00xbiszaq6jhh14x\",\n      \"notAfterTime\" : \"2022-10-08T16:46:48.725089Z\",\n      \"rawDer\" : \"2sej3ki173jp3krnx9ssfbe36zztyes22yc88w5jr7a8t11o4wp0x8ojx5wf3ig1yce5shfe5wf0zdv3mihrkxzdyrxmjflkzblvbr01oz1x1bpbaj3p\"\n    }, {\n      \"notBeforeTime\" : \"2022-08-03T14:14:48.725137Z\",\n      \"serialNumber\" : \"pq70uf17zsxby4imo882af2q6b56m5g55uwxru2ig13kwtzna7b13zibrz06nlr9dser14fi5u8n18ty5v6b0qdn5act1z1cpymhprsrynn7dz13yc87s6ia6f033sz0v7ngfp95o\",\n      \"subject\" : \"skafl1i6sqlqyionx3ls4so5dt52okxhllm9ppbm2spn11wvmru13pv324xx9peg36gdphd82walppqm6mb54u5e6e647ejc5ghujfocjd1rg7e9rv1tdpislzht8i85n1ltkpoim41rvb1\",\n      \"sha256Fingerprint\" : \"px2buc4xr3a7opefwgn9zh25jig5fuquoxdr5rw9dj9106uwamyga4jda4dbpj90y5kunz9qas6k3oqftc4xk5r4g9z9\",\n      \"subjectAlternativeDnsNames\" : [ \"8tl8rrxipmj7e3jifuf3sz2zv524diavotnmz8bbzydb6gnwyl5stg0ysfbmvy7p656vqm6e0jv4r46paepa894yzcnzgm0xof0o1ilf10mq936wu4ry85rdvmnvqw49htjc\", \"9n1qzrv4jv6dbinqtiwhrkl7m8mjjy1v7bwpzy06eydznkr9in16mcoidtf4x6er06hi3cvc3awslrdbo5bocyz66o13v1bdf4slgu\", \"tw5ka5e1a983bl2b26rcpcxabi1kchj3ignnhjt6e1hg50wakn1v8a3iam46r66t6ft2nfj2moo3xb6cb9wxi6irllrcbwb46kcskb75j67o9e3m5yubpa14hswaswhhas2k6911tc3tctfmsdu908sddtg62r4fpq0l2ry8cd4o24zux0jv733mjk3ut3dic3y\", \"8mehjyssv8hzxamth51g3pgd1r2hot6sh1j65zahktva42bhye5sag9ts2ife7h6u1nb26n\", \"t35uhiea7ved68p80hc3yjtv9r34mdnjz162tnuluzretk4c8ing\", \"s7igl6p3iy8ypzyd6o67ekg5hpik2t5gijaa8yogkt8c3pocbfiulxg13muydzgoremfo12gb304bvqybiz3zg2t5awcs0a59ee5ehxa0wplqgl4pxemdif6yc1hu08xgc97o5gf6nnv6tmmxzzw9iagfvlt989a4ck5k64r\", \"r8ltshmwhp4t5o3xi9iqywz9k5jy711y14hobo3vk5tga56jkzk5yokdnmrf158js8eaky0ptjkrp5qs9zw72t44nq5x3njwsl3nzjvvcacxj20e9azrt3irid3x5gq59qo2vf6ahixn\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"526e3ahsm03dqrrakynn\",\n      \"notAfterTime\" : \"2022-07-28T16:34:48.725263Z\",\n      \"rawDer\" : \"zhh43286wluxk8ob9p3bwp53hweahpp3s7p152oc1v7lxqkf5utea0i97abp9rvok7a8mx27a90sl0vinr561wz7o\"\n    }, {\n      \"notBeforeTime\" : \"2022-11-04T16:37:48.725316Z\",\n      \"serialNumber\" : \"33nvngr8nwu87f3d2dxzlmqir1yi44bxjjz2svw3gef8azbz2v9hrrrbpae6mg19gx30h7tvmrtho\",\n      \"subject\" : \"c6qfsuyt7md1kz8jw4dxxb2u108sc32f4yldefo8htnjhf9rapb7wetbh3w2ym6baorenpotfemhgh44otzkx5oh1mv1q1nhhkhp4xrx692332gkekkisfbo5u9appd5dkiv9fvkkab4fqu56jzdsm\",\n      \"sha256Fingerprint\" : \"5uibm0304ibhqaq7k2b06ny2bjbcxvhfy12wm6wzob1jvew554vjvn6sw6uc05jjtfbzdloysyp1xyugv0rf9zyqvddd13umf1j93gdubttyyozoa2b74smibadrobe1g3oos8mj92\",\n      \"subjectAlternativeDnsNames\" : [ \"4u4vuegvtbg2kl4f1f7o9616yi4xswtz3mb2a7v2mbq9r24vgl5zhhvbh01kq0alnj6qldlehcmqde8ta26wbciz43sm2ce7rt51ua6btgynnw7kx2pf4q21rxng3pzhv4tm5fewjqkigdbybxblr\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"86e25rmazpo5axof1ezso19cgq2l68zo2gewicjzydzbrkr452hswd5wm77ze\",\n      \"notAfterTime\" : \"2022-04-03T13:52:48.72541Z\",\n      \"rawDer\" : \"re24ic9osn4qkmaiztnthqwo0gqxav8nzwe77kehqemghq0rv22xuj3gj346ofodzg1a59s1i3o\"\n    } ]\n  }, {\n    \"hostname\" : \"Amado Ernser\",\n    \"endpointFilter\" : \"ta5i903xduym57zwtqu28leyb84rv0ggzcow\",\n    \"serviceDirectoryService\" : \"exoa4y2vwct9c6gz5jfcs75mf62k22tbzs6p90prgsnlegek1vaj65nbzxpmxu6rt3dh7reuevn23r7hhditvqw94hno537awgdqggo\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-09-24T16:30:48.725563Z\",\n      \"serialNumber\" : \"tspkw5ny0a11lukbgg1e7amvg1yjcknuzszri3v0gmpujzkb466sfka6kjc963e7ypsafp85mup213ft3eguvc159kz3xst01igo4t6368\",\n      \"subject\" : \"0voxykvcvs4h3fchfcuqpu3ms6dqhue7kilgx2bxqobc189xwitw5mgo17of5n8ij0njvqi2dj6kwnt5m0s9e2twc68c75v058o6xyz55icuvvdxxb0pmogs82xosqloqb0bqjo0c1eh\",\n      \"sha256Fingerprint\" : \"9f03j0powv6syca6uxwt7bkyexzu0mhud2j5h5p7456zeq7lm0hnani61ocuo0qwmi07um6ajdw3g19e2d2ijnvp86dwwe750qn04x79066ojj9x9ysqu523lz04jc7hdfrlt8x1k92ibi2gbo9dk302l0f8p6i5zd6mv1fhv5h8gjth\",\n      \"subjectAlternativeDnsNames\" : [ \"fx8d32s3sikn4d58epny5ndkgqe9\", \"ontpghmjaeatylkn9rnd7l34rj77c39p8mpkx6gfcqrt56rjuaw4revzrd39v0fqzmpwvtn6fy3zxj6mdoh974fzqxrj5euxqmfbkbj9esk2ngeh5rgdgn25sx3ojaill62czcm\", \"vnpx2jx7a5qtddfj7rg15bwrgkbpcugubgrwqx2asgt2dvoc3xt1tff20svv4m5fb17y5\", \"cg1yde7m026a39r7xnspdg3zwirnrg19746vyz1kzrdpu4ellwth3opk070x6977j6jbb71g16xw9tojq8flzsg68dst3ouv4egdf08gp3qmqp5h1njepvf0pemrgf2o3yk5sv8bb3b40wdk8u1ntvusqcn\", \"gkqoimbrxlpw2su6kzvln8jkwi3jewyzfacklb24lxwzamf34nol307xu31ww2w4hd8uvlnfqc7ovts\", \"tfm8ifnh600hxrjxvqbprrhzjkhp6k7b2ozjzuo0c7ma1kdx1ijkqmv0z0wyedcddt334bqsks\", \"ezbtn7aqx3y9h1oxj8786h0lzww7k4c9o8qhb3qgsn0lyii27er0ew2lhg4tnb0qn1omkxe828jq6jxdnijmhzs232tiu7dt8l1m7q1ylxsj5rvw5gxylmcb1kgl6s11xxkjfs7rzr9evfh77fajo5\", \"tnkqtf4jzg64gqkddx4r4kj2qqkb2tjz6pgb0mrhwyfx54c1pa63z38sgvx\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"1gqkkuqw7s98lsu6jtkp4gf1x1pjsqp4rndqo6am9jaf7xaozgext22ys8veaasq3bnlkwf36obau51bf2di8wa47wsub3oa3ltnc7bn10hxusn1ugf7u66vnkco7ot0l720ktg23usjal4js9ikt4jrbcn7i2n45nnznkc0\",\n      \"notAfterTime\" : \"2023-01-06T15:52:48.725694Z\",\n      \"rawDer\" : \"tyk4494ywr3yye0k0nwmtj0k763zwocn1lnif70fwl0wqmch0xq8ehjtm6r3tb3yhp8qu9xdwinwa0zmtxabgxw94xep50h4o3901jo\"\n    }, {\n      \"notBeforeTime\" : \"2022-11-17T14:25:48.72574Z\",\n      \"serialNumber\" : \"ydc4ufht6t1n9fmrc6zr1ki9oig99g1ftvdekvbg0lhe3wu5zsin6rlcmwnmf2\",\n      \"subject\" : \"ihzegj5z9ocv9nloxx7s5tv1debi1ybpqjqc7uydw7hnv74jpz84vnzgeflzhdlrfewt9rsqpuhmxr5jblmc6hbdnl0616yuzs3lxjqbyfw21m3ken0ppztvmbwn3c39z388c5tgp0m1u1oto4ifou1b8i96vwg6ncgudyl0krjhyelzgao6w15oyennog\",\n      \"sha256Fingerprint\" : \"antowyapaumwhctg1mtp5xjtt4x8z1mbyfyzbec05nllc5jaup\",\n      \"subjectAlternativeDnsNames\" : [ \"impsun7arvhh11yhdwb\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"0hu73uiupzl9d3td34jjmi9yhi1q7x5mogvq985jfz79xpiy1qx968yqzhm1z4u6gxb8mctr7m415bbk47vkhjd7st8bsl6u4cl5yjhyzkdskzz6ecmgibzy0qoyqzigwo1y4kqig8kc3ok4ph\",\n      \"notAfterTime\" : \"2022-08-11T14:53:48.725831Z\",\n      \"rawDer\" : \"tjj0bngc11nn0ksu0a6uxy959bb968x80blh8t8dgvw9k97cadnp2jvxka0vumac7pqa2sswlp20p83mz72h5hf9z7g4maytbx7jl0wy058t1vk4n578kf1t6kb9q2h8j38kdw5ugx4mb4qdlf55yy1rk6kgv\"\n    }, {\n      \"notBeforeTime\" : \"2023-02-17T13:43:48.72588Z\",\n      \"serialNumber\" : \"qqv5hm9tpzphiepue9hdqm8iyfqamyl4d58t9z7g95r5drxmk3mqxojy3k6r9w5rzuy1vaw6\",\n      \"subject\" : \"auf09wk8ysfhebdts44tuzz3e17babum0cw2pusl\",\n      \"sha256Fingerprint\" : \"x5ux3reftbet8vkro1w16tfz3c86lvbz97617yqll0qnb1azgu7baa5g06bk\",\n      \"subjectAlternativeDnsNames\" : [ \"hib1yemf48lugw979bdfe0z0xoy1aeesjd5ova664qctq4k5n1kv2d2rgl52e2mopy2pw8w04334ha3romhmhp00kna4\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"9503lnvt27oxx4glw3uja8nhemkvnhxfafn5ywohizj2ycvhobcbmb8oczphfypt1bg85vqhojsyip8yz8lvlag56vassa8a9ee5u7pk4r20iujvpqcit0ksy8rurf0d3087mwufvj6log41odif5dr4pzz1u0o3rsbyjmn2lz4z5pg0d93chqdfmcb06ihcw8f\",\n      \"notAfterTime\" : \"2022-05-29T16:27:48.725968Z\",\n      \"rawDer\" : \"n8u3azx610cq46odoeyywcluot2vik0r7qoukxe568yf0x1itm7v66y01v2\"\n    }, {\n      \"notBeforeTime\" : \"2023-01-29T13:16:48.726015Z\",\n      \"serialNumber\" : \"7z4lpauoqwxclfyikzri7dxvp6vdzaqzgmtp3h1ilky8efwh354kea71dcxqinc1c14rwyj6biyrzir6qmdjq0y779c431027whv0akytwd1p5809gfynvxzmpcnyp\",\n      \"subject\" : \"rphvie6bjg8ddszt8cpevzx30\",\n      \"sha256Fingerprint\" : \"xadwazu3zuify77p6a7g835ah41hd9gmwzl1ydcf9vipzs3bffwa56lrqouszums1ltetunnei6y85p2xznjrj3hpsabvwj8pngk7im1zj298u\",\n      \"subjectAlternativeDnsNames\" : [ \"mp94wvbusnc659zrfpps7f75h8yf9pn4hgjd88m8cq5uma5q4bvspkiuhcvpj1m7yl1p8a68sdiywm97fuqqsdw2qan1dmwcymrp0a7uz31n6wb0yao8td8jtj67cr6htu50z0k27mpk4x6zqzod2pb3ydvo6lz0rm7q9be4iummmla6ilx29hlb0akz2wsboougyo\", \"5f2guu9o3wrgfus03idpkds7l5kz2glchuusxjffl41n1whv8wm9wlbkj2dbe41gpe7t6acd07edkte5yedprbo82j7su1wabm6xxl1q6nh26jwf1egmepmm4bcy3zel4jq\", \"rhv70jiz7poxpjvbu8krhutd3nyqqb6slhoebtijc9tf7br9i4m5c36lynfsykl3lgdgkjp5yp39vcyq0n33ktkywtnz0qijiiubfbe5s16pf1laog91z1ev4c2m7i4d6ef04yao386oea4yew9qfx0czski3cb3mcz\", \"vypro\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"hzbwqjuhy3y91oty1bm4cf9gman441bc5l3s3vnu2dpr2r89qrbjq0ns979i41fzcitsma0a6hvid5i09w07omkln04mhe7s38qikbypf80o9\",\n      \"notAfterTime\" : \"2022-04-26T13:39:48.726119Z\",\n      \"rawDer\" : \"8djb1sjvnptdflcf3hwokbbf53be19q38pg8fyp27xrq1hbr8ly5im6vo7cp68xco2byzga7f7bn2s7zy4z69dr0uzow7rqgynnbdw0sb6qag1ofpxvby3m5dnll5228v19dw1x3vjyly4lm15ewj8bu7irvr6xzjw7yk8asfuhv9py82g9\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-30T16:21:48.726168Z\",\n      \"serialNumber\" : \"auwyu6x9a2yn331zvw3no0q0hef27gxnnp7prhezmcl1uy0gpm6x423z5r1k77d10fyinwjx7yzrt77pe6bwl7dwp3\",\n      \"subject\" : \"al0ls3er9yeepbz0cv4qv5dixs9kpwhqka52zkii0o5u1lue3f9za8yik3z4khwgovf48bybw0a4ctebyf1xkyt1xl1egu2l4iidai9272pi1b2\",\n      \"sha256Fingerprint\" : \"cciciad7sbcudpa3j6nhgl14edi47bgtb8xsm6rrhqne107upba4undfkrfgv597n6oaeow2xufyfmoghryvie1nrrz9ewza9lf8ec007po9ljk6lu07voccme5kc8iktpdnyipxcmtcgnfl14fcam0udyykxpysxz71qttd\",\n      \"subjectAlternativeDnsNames\" : [ \"869tz7pvjpsxuffif620afu99ox8gqk4lz95t1tcj0wnjz0tn2l4xxislh1f6i9gp75evti3rrxt73rsgs61yr1w679lzyqqjqp5vrjob2sfs1jhdy5ok\", \"3yawa8l0yjqulrrrqsy89aoger\", \"srnle7vgjyk245scecmg7ugmfu4bwext4xzk0wsnj4vwlcxnq35d7myejo2crqnzkyrrr3ctjc3zfjw23owxdrv3ty9x6ktwgwsniy9qwthvvlu0e316is5dejci8bwm3mbg973eub900rfrfpd2cuh4yzat59ny60i8we\", \"ech\", \"fj266o87mmibcnwvt1ctdppzzsvtt9atnq9wusevs6ndf9vopqw4h1dvzjtnbcjjgu7snmalz8qm76u9hiyrv5i9v5d03ggbf3dw7t871wlqpas2se1zyifbskotalvezujpb3w7mzlaf95jq0a3wa3z57qox23ywa06jebr1z15qu9cg6l8zl9rjf29ud5tzr5g3\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"jxj8aryyqgibu6dqv1a7nvu2skb9360bx8deuqr5hrobsfwqkc4ovbt3e7w5ufqhquv5yl8x8wasg9lukeou5xhl4r54djuo5itww05hdoqqvgvpq8x\",\n      \"notAfterTime\" : \"2022-12-06T15:47:48.726281Z\",\n      \"rawDer\" : \"saffn8s1x4xvdzy6mk2co5bx9wjeabt9ghno0azdrl8rgk9psx9nvsrlgtyn3oe6totfeq5eafnzop8kjjdy8n4vn1ztwmhytmvjs0unp\"\n    } ]\n  } ],\n  \"createTime\" : \"2022-11-24T15:00:48.726355Z\",\n  \"name\" : \"Jesus Reilly IV\",\n  \"etag\" : \"laboriosam\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d42bc6d-8d08-33b4-bd8d-9642d2228fac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.ekmConnections.create",
          "schema" : {
            "description" : "An EkmConnection represents an individual EKM connection. It can be used for creating CryptoKeys and CryptoKeyVersions with a ProtectionLevel of EXTERNAL_VPC, as well as performing cryptographic operations using keys created within the EkmConnection.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which the EkmConnection was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. Etag of the currently stored EkmConnection.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for the EkmConnection in the format `projects/*/locations/*/ekmConnections/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "serviceResolvers" : {
                "description" : "A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.",
                "items" : {
                  "$ref" : "#/components/schemas/ServiceResolver"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "963f2aa5-099f-399a-9678-19f0ac7b6f49",
    "name" : "Lists EkmConnections.",
    "request" : {
      "urlPath" : "/v1/855cfbwn8wsytdmzhx5sj77kwxb/ekmConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ekmConnections\" : [ {\n    \"serviceResolvers\" : [ {\n      \"hostname\" : \"Emery Carroll\",\n      \"endpointFilter\" : \"mlflpwf50aum1yb53ddxami84l7grqxmt4xnhsxg8dtcw4ikmpyqe4azsji8225wkpuhyfe8ka1zgvxyyvo985aaecmu4h0jjfhaydfex8z1xfk6wpid0vok7t9ytvp2p1oqzzbxrpywjrrd39iee2wqmn9d5ukij4ll7h6354dnb7\",\n      \"serviceDirectoryService\" : \"etjwo7sebpcef2sm7wjtni8u3w1dt8600nw7rpi51xpdgd824vqf564wpso9cwdx6v2k08xpjqske364ca89ld4ki2c0f885di6c1wjvkymnq784amuogfg86hh0lstegw\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { } ]\n    } ],\n    \"createTime\" : \"2022-05-10T15:39:48.721956Z\",\n    \"name\" : \"Peter Kessler\",\n    \"etag\" : \"necessitatibus\"\n  } ],\n  \"totalSize\" : 1814769871,\n  \"nextPageToken\" : \"r19spcwxvk74jb7gra4flqzd2jp\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "963f2aa5-099f-399a-9678-19f0ac7b6f49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.ekmConnections.list",
          "schema" : {
            "description" : "Response message for EkmService.ListEkmConnections.",
            "properties" : {
              "ekmConnections" : {
                "description" : "The list of EkmConnections.",
                "items" : {
                  "$ref" : "#/components/schemas/EkmConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListEkmConnectionsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of EkmConnections that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "eef4d59f-43e2-30be-8f88-5002dfd1b801",
    "name" : "Create a new CryptoKey within a KeyRing. CryptoKey.purpose and CryptoKey.version...",
    "request" : {
      "urlPath" : "/v1/ld12pk0amzrbp07nsllp9/cryptoKeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cryptoKeyBackend\" : \"f3vly7kynfc2scmzxi1o3bcmu972qjfiuymmx3q3rhsuy9pg\",\n  \"nextRotationTime\" : \"2022-12-05T14:42:48.720967Z\",\n  \"rotationPeriod\" : \"5580jk9uugz5u5vcjrl4e83ko8tp2uponortqiax8oyb2u5o4u0mounninlg21fd858q5d6p2bcqia7kaao3gbk3ysj1kl6oc0cgn99v9eec7\",\n  \"createTime\" : \"2022-05-07T14:00:48.72101Z\",\n  \"destroyScheduledDuration\" : \"z6co5yp7dyhwfk4er1ifppv2znpt8dpek0rwrz6p521ykib36v5ih3jr86hhl727dfyas8cwt5iced1a2t2wco7poq4101iwl0xiaxeklfog59lx77dyljm2mzz7jpe44zys2f60mg8sojia5s3k7jcyyw5h4x2vzgfrrw7sjzaish6hppoijrdcpur81jrq9q\",\n  \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n  \"name\" : \"Lashon Williamson III\",\n  \"versionTemplate\" : {\n    \"protectionLevel\" : \"HSM\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA256\"\n  },\n  \"importOnly\" : false,\n  \"labels\" : { },\n  \"primary\" : {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"6krv8nx9g9flkuasrbf1o1ytgkmkcvogo2cubrnoz7agc0vsps8fux91ihrzyqf9z75d9dr0octpce7y6epw6jjzsc626ww1jf4onzxhshxvpw\", \"1h6mu0z90vvonma6xis7agf7gnpg2nahnyh9zyfznmqczapc92u6cuvmnsqdsvnzqsciv59zv6h2u7640jp57j609s0mxbce5718ap35sfof9vlb9vtjjv5zrjgzfzmzlx5f05buzpbfb06h0am\", \"zaqn5bply3y0hlbnenzxgc24wnycs7kfjs0finm2omx3zj28mfms47tmqn7dyclwks125f8nslwh1j2bp0enwd2rpx2msc9676xnbk5t72ofd02v9ozbk60ztgu9sn3fw\", \"ub3jxqdzlazj649ihvv7lym8ru4l09f7xi67uxrxtgt2z7i10dlxworptj735ogfa0n05evncsqja2h6lrz2ryea2swsr7qye6jdpmk\", \"38qn10a9yv4a5f21wbbtw3nmv02jo7am6mhgkkq6zzdtbgy942u7b7wcw07abr5x8s\" ],\n        \"caviumCerts\" : [ \"gunirvs9j6neygd5aqxhwhdrg1w\", \"rbjdqdw3c4nbycisnusq7hfffjj6i7c2vvcpd2t0oousq6wf7p1h10ir56ulf7vcgb33rgvv\", \"9r1hs93060oc4wff8hsris5cqwa65ebq9dycpl2fe1cz484ohx4t16dqqvrnud\", \"7sfzhs0sg2ypvjpd6wzh6ez3ty67n9rpuki6nsmy4v9f2nhbes0s4208n5xdu5krdij9jk7nrgh5c3l67hswqy23glkdcagw9\", \"iifcy7uke296it6oabib8wjppn9lz94k1u7ij62ayaxncqg0dhrg9wnr2bsc2xfri7niiovlos3ddjk3zufxqd2w6kq4d0tvfo7a1a9i4ku5gk5sxldjabwd3frmt4fe92sfjqvgz4iahld71e51dmchgi0epeku0490\", \"c1v8txpyemzkohcpet6cyff4f1a45914rb7cpvtmnohsx2zsdv84bp5tfomwe7gxftg0h6iqvtn8rpbwkbelezq5kneiqojdxk8nhnvj2z3hq65du2ggsvdkepbjii0pt0qnp0tgrem\", \"gp8fs8nn4k4i9kit6626r7qnh0htpt3djfpscuf9trq95h9z5fjaa7gu7varuwa6iss30xksy4vjw8636yt5zetity0il3irq2e8e4m2l5swj0l318g880daazs6piqmeozqf9xtyo4ny6r9rgszmsw6bsqacta9bzemje5ygw85d7ynf2s\" ],\n        \"googlePartitionCerts\" : [ \"79ad2zpo8x4lctipimlo4bt44nhtvz7174zhd1hflktzvdxw0n6bqgrgd2gef3z679hwbufs7gb4einj8zmb1f38yruka6dck\", \"89ccq7r4sed6x2calg225htwlh0njxcw4ydongd3ibjs22i8n25lg1fshoozi3ep55en58rel7u3grlebzpe24jhwtq6psb1ienjoe2iuixehlp8u9w9zh5rwznbstw2kh8\", \"ylwv49wxfcf7oox769z87uqt8hoxw2yu4a3pun9ao4a1hkuwvjop0ci8m3ne9y96xg0pemyhpav6424wtdhe71pw21zlnzenxahb\", \"p70lu003yot9czfnp09kqdx3kkrfci7az2owcjzvah9n0ekoyu1o65gol5dbp6cuc3gyz4s2gvqqusqewffypx5ujz3etgnk8v10fwx1fnx2ymjmips9ulnnyvo3e40hp4a2jq9h0nqa4s16tffy3jxrvcef2dclagh7c\", \"tkgphnvtnqdq3n5fsew5cxexb6potjewdqpszrdc6ifj9px81\", \"h2qgggi8e4cihxfwg9g6mp6odzklq4ythisknl5yszzn7idos9i4ubkyuvyg0ieht8k1ehndxhd6amo6v9sac50vjkgk5y16rbgn0c2urpm8paf79a1a0pu1kqckk7ao7dvf210p4x83xl4z2e121gq2t4rp2pmnvhiccgqhigqxmwh5zaxy4hcf\" ]\n      },\n      \"content\" : \"Vitae laboriosam dolorum. Labore voluptate optio occaecati neque. Dolorum id fuga occaecati et voluptatum. Aut nisi harum assumenda consequatur rerum blanditiis est. Rem et quaerat.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"rorn026u8zynrljwejd9u3pti808m40kmy3pjcyjc0yahk36lyvvnheclih3cv7c3tkb6nxhyvxn8sclwihuy1tdorj1xa2jllkg5u9izz\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/099046\"\n    },\n    \"importJob\" : \"ok70njdtzep7x7olczrc769fiwps3d30u57eujd5bdtjtbkzxucbjcajxctys7yq8uf3d01y5xfvyh86x6lbxkptzfd5u10ez74bb9gpw97sybx54k4s47drgtqj65lpjbaeoqm49ps3ffqsmni9griziteacloi\",\n    \"generateTime\" : \"2022-08-28T16:16:48.721422Z\",\n    \"destroyTime\" : \"2023-02-20T14:54:48.721453Z\",\n    \"destroyEventTime\" : \"2023-01-28T14:02:48.721482Z\",\n    \"importFailureReason\" : \"cbo0tuyi4xy7xnljs45bfhwxncrfy4nre7aslygswjo5hr3jpe5bc60umsx66ix2hv0i02ih6mkainqnahbo2y518\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-08-02T16:45:48.721527Z\",\n    \"name\" : \"Hal Wiegand\",\n    \"state\" : \"DISABLED\",\n    \"protectionLevel\" : \"SOFTWARE\",\n    \"importTime\" : \"2022-07-06T14:26:48.721613Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_2048_SHA1\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eef4d59f-43e2-30be-8f88-5002dfd1b801",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.create",
          "schema" : {
            "description" : "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKey was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoKeyBackend" : {
                "description" : "Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.",
                "type" : "string"
              },
              "destroyScheduledDuration" : {
                "description" : "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.",
                "format" : "google-duration",
                "type" : "string"
              },
              "importOnly" : {
                "description" : "Immutable. Whether this key may contain imported versions only.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "nextRotationTime" : {
                "description" : "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "primary" : {
                "$ref" : "#/components/schemas/CryptoKeyVersion"
              },
              "purpose" : {
                "description" : "Immutable. The immutable purpose of this CryptoKey.",
                "enum" : [ "CRYPTO_KEY_PURPOSE_UNSPECIFIED", "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT", "MAC" ],
                "type" : "string"
              },
              "rotationPeriod" : {
                "description" : "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-duration",
                "type" : "string"
              },
              "versionTemplate" : {
                "$ref" : "#/components/schemas/CryptoKeyVersionTemplate"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "998b8b74-cfff-331b-918c-d27fc0073d47",
    "name" : "Lists CryptoKeys.",
    "request" : {
      "urlPath" : "/v1/vw90txex1ufm3zn8c1o9s3wv/cryptoKeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 350467881,\n  \"nextPageToken\" : \"9mbkkemzbclvs9qfaal9o8mwqw1h4egq8kdgyeq3oy2c8i6qy52qir32w8cy8x9i9woruqg5jmldigudibtl644tixktuzvwshxityt91ov3hvg7t40tp4sglyknu8iv5fjd3lab326muqls99ij2pkje45or4endvm\",\n  \"cryptoKeys\" : [ {\n    \"cryptoKeyBackend\" : \"di8wt09jqjzbh1tcmbz85y3cmd2b665hs5657pbqumbzx7pdyghazp\",\n    \"nextRotationTime\" : \"2022-09-17T15:25:48.717418Z\",\n    \"rotationPeriod\" : \"x4epwvx14br3yxvjiycs6i142xqanmw43wcjit1zhf34hnbry8xql8173qkclcqs6d1v042brrjf7y1p5gjstlk2frnmwip2tixggnoy71qmtciventym42xz3rd28819ojzboravkxarjw8p00\",\n    \"createTime\" : \"2023-01-06T14:50:48.717466Z\",\n    \"destroyScheduledDuration\" : \"ur95hcnljow4vedfs9kp5rg7xudmuk376nzhskqbdrvtdhklxi1vv29iy0tu0l3a8soi1iaznly0gyu224mcrldnmr3d2vzhtesoru4ol6kd96e04o5ofjhkz\",\n    \"purpose\" : \"ASYMMETRIC_SIGN\",\n    \"name\" : \"Michel Lubowitz IV\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA1\"\n    },\n    \"importOnly\" : true,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V1_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"5ajyowoxd04camdmmbbh6da14ouix38tlfqk6cumd4jpwyes9idxwnykqenmu4hch3rswvlndp6u0eoatx7e8i57pa9guky9ufb3vb968yd9uforlpd7jijj59cjuma8t95g71y\", \"5tms6mzwhjwf6d4556llygc96xxgn5cutrh7mnlootpp1kc0w9h57m7p0sukmlsp4l84dzqwpbgk0bd0p2s1lr0pyy36akyuti8co0za4ekmrjxgu4amcdarnykl9bii6a13th\", \"9e5z87p76sg16tcdbep5om6bar3x63gu21x7x4z368j06rfo6gt29487sl6nbwdwwqmpmcrcwgc\", \"6zd6i6xspvlvjkdvx3n8aiawl5jnejg7orqj5j20qvvc7tnvn56jtdyndyp0ah15yk6h51o7siayhsqjnnsh72zvuwxk7y8kdrlbm7ihg4lxd4nausvo4tzfeudw3qvd9ctu059ttp5uzq16zqg6wvh1xqfqoa\", \"zf03aetxmfs20pnlcxwyrj5gd5swsg2p4bxc316klrpjk3qk5k0gznob9w1yo2ljn35hmv65vs2in55pet456gh36gzy4waanij6\" ],\n          \"caviumCerts\" : [ \"ili\", \"ip4omgivv82yu6mftrgbr7p37axz05z07w8ch2b5v1khsw7uyj2i37ql33d2r7otcv4vm0x95r42xbam6y1eabde8np0j3yq329pdo0lobt4cdb51nnvxxcb47xnfoyfvi1mp7vi60g5fvtynmkkn7pe023vkgf5giil6m3diurqb91lsk\" ],\n          \"googlePartitionCerts\" : [ \"4whd39g166zfehbywlomxgepoygjvsa06rrvm45nc2n5afcsj12fwcj9skh34at9081r9v693o56030bgc6b\", \"m32ttlvy2hs36pwbbih6opnk9zyde9ucgq966uw23ggwp8wny8j0v27xag5u8ftzcwbioc0hyojdrbn2skps6702n35xne2s52vrgl3e3gtsxwn1d6460hi4tlrov75mwgm4qgxhahno45mbupk62m5qzim6gg21v67099qnb39ob9e19uwogk5cxe36yj9ywb7\", \"6xswfob06eo3svv27m077hgkgvezcjrdx37sgagdhay83eq8wghfyzsqe59pm0hb13m560xdm4txoaeeom3dxf3dvgczzc4eycdxqavwklkwv8f030spmt90wcpr509jvj4m2dlds9gw9rmdcdy7\", \"7r7wzfayw0ybd2gf1n5826on5juyblfvh00vhyzdg7z2zqdkycobk26wjvfanu37q28r3z29whkjjt0kzdbl5pz85c1hcor4hxnobxa6r65ptv6qx0ne1svru1609vot721axewkyxa6m02z0ks54czaozcz6blu8hes7d3wc3mkgw9y47h7jvacg1\", \"36b94t2gceg9pi0j5o4xfdpu2tixx78psnoa4plz63kn68aes8ltyk3etywvji36a8iik5fln9ut748e6mo1bu3z4afib4xd1gkwf6lu9oaewxv6iln6hpbmakdvioi3c0w9pmmfgn4cpbia5exsgz2as5omys1jwjshy26n9rgxyux6z9hvtz9jaxe65b\" ]\n        },\n        \"content\" : \"Ea velit ut aperiam voluptas fugiat. Aliquid et rem ea aliquam in. Consequatur soluta eaque natus fuga accusantium cupiditate. Maxime incidunt ipsum aut.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"6xzmbaf5lahtjwa0q9ll5xy3mgtx3l80xiaajd3cgs9ryl1vvoaou1ousp9ct1p1pjksrm0btlucwtpnzw6aitrako70ualqdj504mjemcunmfp4cxegd8ttwy04n37h1zdiha7dt23\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/218403\"\n      },\n      \"importJob\" : \"ibodgqsy12lttjhibteotq9sjj5wv7oo8ysnw85qg6nq5czohiviltwexdnz8swbb67vxt826waet3p2nfydq8c1z48mx60l78mi5rllylui2qtg32ex2evtm\",\n      \"generateTime\" : \"2022-10-21T16:46:48.717876Z\",\n      \"destroyTime\" : \"2022-05-20T13:26:48.717907Z\",\n      \"destroyEventTime\" : \"2022-06-12T13:37:48.717938Z\",\n      \"importFailureReason\" : \"zqs80f0esohqjcnopgfgm2vcddm6e\",\n      \"reimportEligible\" : true,\n      \"createTime\" : \"2022-05-06T17:02:48.717983Z\",\n      \"name\" : \"Drew Zboncak\",\n      \"state\" : \"DESTROYED\",\n      \"protectionLevel\" : \"EXTERNAL\",\n      \"importTime\" : \"2023-03-03T13:23:48.718079Z\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_2048_SHA1\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"wtt5jfpgegm8td26c6xe880ob73qxvzgqpwopcimmrncwidckcqrj0az95ctzga3b0bs14q2u9h3ucomnkg4u9tep88wyr58sd5v8fo9jusxbty2fw81x3nt743lrsuuox07ttd\",\n    \"nextRotationTime\" : \"2022-07-29T13:41:48.718142Z\",\n    \"rotationPeriod\" : \"j8353or91wuntx0fm4h6x2ss0wd2ih1efguxy2j731p7fhbdjk81tj3xrv1vmu72a1zg7\",\n    \"createTime\" : \"2023-01-24T16:39:48.718185Z\",\n    \"destroyScheduledDuration\" : \"bcb0foe0m82vlmxsnfxhygu99zxo4qqlyc2oxp9dp9\",\n    \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n    \"name\" : \"Nga Orn\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"EXTERNAL_VPC\",\n      \"algorithm\" : \"EXTERNAL_SYMMETRIC_ENCRYPTION\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V2_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"cd88lpbfjrqnwjq89tvt4exqud8g0he004z5y\", \"q83sx28f\", \"y0mnupl9tb66tfrxkcagtuas3r8ivf3gxfuy696harve985kgtvmthz4j01hdz2rixb10ga9yae\", \"d43nivm5oi4srkua8f7bmzyzbq28n3re5g54jn1k4n931tpb\", \"45ssv7ifkf37esp15ex8v6lle0otfsa6rog2rq4p9pi3nud7gydyl3rrnpgvaqoycp9ukkwwc5rx2hdpjltkn9\" ],\n          \"caviumCerts\" : [ \"tu6\", \"w2tp9fjqwj3iplyl4ko3yees7ex8o12fd\", \"gu9u\", \"hyobn247r7y0ssrq\" ],\n          \"googlePartitionCerts\" : [ \"y17w881258jt69iojhftxwkc1gd68y5ghu4zml957ixv9ufg2hzhvb6if73skv851dcq9f5jqjkqq9hikxdf\", \"rkcn65u32cwliknktdsfktt7xve93i383s4bk2zf37tzu30jjd9t1yzyzb8ikvw7w9bc1gnj6skr9thoswt\", \"64kgp\" ]\n        },\n        \"content\" : \"Voluptatem aut possimus velit. Voluptate ut perferendis voluptatem sequi repellendus et. Aut omnis omnis sunt.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"hxjy5owviyy0e6u\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/003546\"\n      },\n      \"importJob\" : \"tljarhgija1kvvl7bj3fxmd99bmrt7yvc26hx\",\n      \"generateTime\" : \"2022-04-27T16:17:48.718546Z\",\n      \"destroyTime\" : \"2023-02-17T15:43:48.718576Z\",\n      \"destroyEventTime\" : \"2022-07-24T14:17:48.718605Z\",\n      \"importFailureReason\" : \"j3vhy2upio4v511otsd7w5szfbhon16tgjchze0tq8rx2lbng98o0ob2gixm2pnvjceqrgi6dmpd7sd8u7qb6noo1thdr1gayzplz0jm13pfdb15wdkhma3tr6m47zz1upqlnop7gwzkwea483lbrabrkjnb6vmtgkkq7h6q9bk3ofb2g9t41qqoeis7b0r6n58kql7\",\n      \"reimportEligible\" : false,\n      \"createTime\" : \"2022-08-02T15:25:48.718653Z\",\n      \"name\" : \"Merlin Bins\",\n      \"state\" : \"ENABLED\",\n      \"protectionLevel\" : \"EXTERNAL_VPC\",\n      \"importTime\" : \"2022-11-05T13:57:48.718741Z\",\n      \"algorithm\" : \"RSA_SIGN_PSS_3072_SHA256\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"k5k09ttfqx7s552ks74rvz1c084n85736djms2jurc3jcfq326o5ujndl5hd6wv249xulexu1gmggbbj2z6nw7u59scz58hobof763fyog2wa7sk\",\n    \"nextRotationTime\" : \"2022-12-26T13:16:48.718803Z\",\n    \"rotationPeriod\" : \"cc98c3mecmtchff5rgc0pv9z5ab6z2ovlxv69e3mnwzrnkw27mcmqnjlv89cta6wg9qeibe2mcl4\",\n    \"createTime\" : \"2022-11-01T14:48:48.718844Z\",\n    \"destroyScheduledDuration\" : \"52kxjo0vm0kf1mpqnu5irwybn8kpezci7ho887so09uid4d1e9f81h6jl9rj0zzk8wtx8i0fea2z3ibqrx54jzc594xgf60uxyopl5hukgsisepeoemulc8uzh19bjl7dcdb8c\",\n    \"purpose\" : \"MAC\",\n    \"name\" : \"Reuben Grimes\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"algorithm\" : \"RSA_SIGN_PSS_4096_SHA256\"\n    },\n    \"importOnly\" : true,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V1_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"49kyki77oess0lptvs1w88ooeot5uu335rj932ef8ivnpjglwomm9o738fwgkd0rltwz30pt44k6pws1tirdycb2omwsvs88os6v9vwe4sjskvt4jbffu3xmlcz1a0yiycd9tf22sucp4o2vmra15qx2kmr7h0zmj8t590cwkt4pkfkli9\" ],\n          \"caviumCerts\" : [ \"yph1e4bvmk2a5ill4593quwq7zlh4j0da0o6c7y7x5xjz8zkbkzq9wz2fk2xa0449xz5igzv7hk0atjcu7b6qhbv7qm32ieo8qlzgvu23ixcikv37cpj9am4whk3ix8zt97jljfzeu2kubqmdm0cfr63xjlvhk0c8eliz1u8qkcv08751mpa\", \"y9vp7c6lqk20irmyrn0wpid6ejc53pzxkpj1\", \"cv4b7r0v2qd96u2szq5w\", \"fnt4sds9uzn657vq4hduu2bjpefdcp\", \"avpd5prcmwpg8k3pcfen9ab8q5kfvfszybvul0k8klm6khynrvn3hs98cl0jwh9jp03h5rwlr\" ],\n          \"googlePartitionCerts\" : [ \"d4b7qaklxad4h\", \"q6nd7i1kxvadserirygq3m0fj\", \"0ideaucudu3kdkzl2jnuqjfbsx8myywpwxqmwefx70k8u7c4u5iw2ooje6c6a3gk9jlf88s3rj85i1pfyguwe0bs9gi56ifkcgfzhkd8abs8kmydcxn96pflcmx7wuntc\", \"ohoas2tecq4spweoqerr0q1au08i8w5ijkolfsej2qtuuj6qielmjuwr8ozkd4kb5ulu2r3tr2e580ojjchnvl1vllo4gpup27iwhslxgil89osbl\", \"793lyajk12ijc2ryd6ppp70n98np1k9s3zjb17ykc1qui9euwj1e1oq6rp8mk3glecfxn5ljjl8ewr3og9ihrlvhcs3hddbi3g7ehdob\" ]\n        },\n        \"content\" : \"Repellendus sunt ipsum adipisci exercitationem fugiat ut temporibus. Autem eligendi qui voluptatem officiis unde. Repellat ipsa rerum officia consequatur et. Culpa aliquam nihil est nihil nulla et.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"40qu94g0t\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/421182\"\n      },\n      \"importJob\" : \"1sysi2sl3v8ztavpgplwqek91hgp02qrcjamicltxrpam9nvgtjgt2q1s5mfte4cu134dvqfib20cipkczr1h5baciogo331zeghr48rj3gs6f9nm19jf076n6oepo8oue5q0iyxgv8rw1ee\",\n      \"generateTime\" : \"2022-03-17T15:29:48.71921Z\",\n      \"destroyTime\" : \"2022-04-13T13:39:48.71924Z\",\n      \"destroyEventTime\" : \"2022-08-07T16:38:48.719268Z\",\n      \"importFailureReason\" : \"3j4qge7zlu7lx279ltvr\",\n      \"reimportEligible\" : true,\n      \"createTime\" : \"2022-04-12T14:53:48.719312Z\",\n      \"name\" : \"Yoshie Senger\",\n      \"state\" : \"PENDING_GENERATION\",\n      \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n      \"importTime\" : \"2022-03-26T14:13:48.719402Z\",\n      \"algorithm\" : \"HMAC_SHA512\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"xhqfw67jyy8in9xw6xv2ujafe9foaw1zksg1co\",\n    \"nextRotationTime\" : \"2022-10-29T15:37:48.719463Z\",\n    \"rotationPeriod\" : \"zflhjov590jydt57nzxmksibri6ek59d7ff6iy1isek7a1d88zsjtu8cd3par3hmft9s21zxhuaa595pko6rxukausawfc0pohzqzsqnwykeigoiy4pkg1elrinrywa5xf0k5jssn0rglnvf7ke8jaex7uyc2s0nyaemhrjndpnay40f7k4d81h\",\n    \"createTime\" : \"2022-08-25T14:52:48.719507Z\",\n    \"destroyScheduledDuration\" : \"t7fpd\",\n    \"purpose\" : \"ENCRYPT_DECRYPT\",\n    \"name\" : \"Freddy Koepp\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"HSM\",\n      \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_2048\"\n    },\n    \"importOnly\" : true,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V1_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"77vfwva42ve9dk20jts124585y4fdijmjah3v3o5r1ft14dn499rakx5kbt4v0g7yhec1xvz5q13nyds73bh15js2icd9ksoenrvxhhos0foysy1gnf2idmdb42in5n05x7gx7nq0z1n7g8ofzbnui4hfsuogu4ypy2jqftop6wduc6ogmigsu3yujk3l0xt\", \"9udvajdnv09jg4dzj1iho07z4vpyy81d54fg3p0446pc4qw8igjl0pfcgjgde36e1blso3a2d51tob31zldmbo8xvf1q485ns71wtobzzu02q977xxowztqiw78o2oa1rw4i2wjlpugndsv19r846yq2s20\", \"bj04cofquckpfaq85vmx520irkw0xq8kueiupqolzxjddg9zbxp6r6yne4jfa4i9kj3vl3g7c57nn68qff5elg5n7qpa1za3an0x3munq94orwudodkb7e48752yoxvv\", \"hhwc9x8s\", \"1j9qnntppcgne3o8z9ssb505hsk6kood7b7rud6oy0xy59x6zvp5huryz256tm5amwrxy5b55a0v9zwza99aaz77se36lkmkxvo9\" ],\n          \"caviumCerts\" : [ \"k9ykqg6tobq68beeim4cha5fsnvpgapv2yo1z5qaphp5a47nvpxuyonjtq1ta78591lhlufd7xhm6q2wswcmq1oodubcdnvpk6u6g8cg71940yekig84poyd1ajmrvpnwt7bo5ipszm7wbnkoj\", \"ax5pzp2zoku5qo8m3uxksrcwh85rbmvoqvg0v1qa1wrwkg1v1dgpy6airt6e7tgq5g0agwqxawrxas3eqlbqgfxf\", \"od0lv8l362ruukoq65vvnzngcwgmac7rgz2mvz52tgnysspsi72izg8imfna599khy2c3q982gjdl1ws8cosf354z10x6buxiq0sxurb85e7agpolnkigx5e3632t4g875yp7nl9gvdvgl4a00s\", \"aw6qfy\", \"rd5okv43tr23iad1kts3vz63ezxsjqwsmfallg2te2y6hlowamd8flm9zaqlllqhkjgqog9dnzluwlx68ylqb1qwkrox9bsojtnfydac\", \"0v70vqj0n\" ],\n          \"googlePartitionCerts\" : [ \"bfp0w1\", \"wt8csnxf4je7xgdbbutcwl6tat4kehqu1xyc1zutzl1fd9pqjvlgw7gszo52z9crtzy6d812ka4g41v9tbui9mcw8c2yeqqmt300jxwi12m5j029xfis1tntz999qdo0th0k7rg23\", \"a6r2acj7hhxzhen10u3hqvcht5nuj7mqau4lvqozio8156q87fegkn24g6jhi1xtadadr1g6jgib8z5caaooz91keer37ipy0k15en3lvppp0thkj2113ceh48zvnup1mntos5ausymz8wokrbtasaso25asg5yb09ipd8pbbvldpwxkpf0w\", \"0te85b8dg32yk3uqvn75vyfvs931qt076fkl6x4snhcoeqbnriuxm28ofdhfx142cl6mt0hfroajzdk17om35pky44x4dlp\" ]\n        },\n        \"content\" : \"Et sunt cumque autem labore ut. Ducimus et aut consequatur delectus. Necessitatibus ea consectetur voluptatum dolore iste facilis. Deserunt dicta ex perspiciatis sit ullam.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"jfbs12sgl6qfypbxl6hafunl6sozlc\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/491058\"\n      },\n      \"importJob\" : \"w76oznst2m790j0rb3qvrz4xsr2ocscow1rax5qev9m3a9bb9a7dkugc90farrvrgudpizq0146rv3415yyfl7pb5ama09wactaih3ctwuqichh3ipzwfoqy0l\",\n      \"generateTime\" : \"2022-11-04T15:58:48.719879Z\",\n      \"destroyTime\" : \"2022-04-17T15:33:48.719908Z\",\n      \"destroyEventTime\" : \"2022-05-11T13:07:48.719936Z\",\n      \"importFailureReason\" : \"n6819umum0ldvtct6kl8l0gs8yoyqhybznpso5n63uu09gxxidy5hmswnal6qqiatccet6ejkxqmf41\",\n      \"reimportEligible\" : false,\n      \"createTime\" : \"2022-09-29T14:34:48.719981Z\",\n      \"name\" : \"Delbert Hegmann\",\n      \"state\" : \"DESTROY_SCHEDULED\",\n      \"protectionLevel\" : \"EXTERNAL\",\n      \"importTime\" : \"2022-07-20T15:32:48.72007Z\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_3072_SHA1\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"ue0sl0gyr7o8ehu56w2hoqu5plkt1o33h8go6dcns17i77keimwfudtcpjsd083urm11967dwj2h3m3g3lqjb5iigz1kpuyxw316qjf\",\n    \"nextRotationTime\" : \"2022-08-05T16:33:48.720131Z\",\n    \"rotationPeriod\" : \"babks5nby8n1833ju69sct1uvvmdxaa1xp77do2eddgn183lr6e4yjyvrq2leavhxihxtjlxy25uitl\",\n    \"createTime\" : \"2022-05-06T13:11:48.720172Z\",\n    \"destroyScheduledDuration\" : \"ji70qvgr08txaj81egtifue5x690hg6u37dbzy2f8s5skgx1yghadk5980f2onl02apxk8wwokndeisqyv4i51ngy2m5u09tx64s83zagqfyp5x506e9znddmh7l365izcd55m07oikyxd1hz0yd6814wgh1f2hi545wl5depi2xt2iq864ksuw2gg\",\n    \"purpose\" : \"ENCRYPT_DECRYPT\",\n    \"name\" : \"Dr. Delmar Leannon\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_3072_SHA1\"\n    },\n    \"importOnly\" : true,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"k723omx2kck1x7tm8f7jtksudjg6jbi21nj3i2baemccyhvc3a6n21w6sbfjkdjleqk0\" ],\n          \"caviumCerts\" : [ \"mwl3ngjyj91648b5p4ptpsauti2zuw5yxnbjod5a38gw3ie5mcajwv5qax7zt0fmyv9kmy6x5ahtnu4i7ides15yu9cms1vlg9itfi0895amps2fr8q1rzwrnyfa1r7dvgfgc8td8ro63yebipwp3hrhdi0j5997wkrl4zcl1wfyeui\", \"9nfevoc46wgt3bjnqmwlait3nw\", \"5416eedmdbzkitkivww53mkyh14g3k1v2m1wnsvqg2jg9yc73os3felfssxhu9kj25a1byg5jn1983m7fw3\" ],\n          \"googlePartitionCerts\" : [ \"n5wqqq8dmkdxrpxtvjymgxvfa0id6uaqy1e2kwvts320x0t7snz7ka8q4qrozjpoumj1j9nfdcwnd0a281y1s1gj5zokc16n6vxikaf5suvps76caq3b3cycir3dau8l4on2f5dp9xwze6f80x3qi0f\", \"j8xm12o11gygjzauog6lekd86kxpauc7dszv20o\", \"99cu6y6psnzqtx63zfttlmns0\", \"kxgceccce5remd51vbkaam29g71e1ten925jlblov7gk8tptgsxkykuprbny1qmlfv3ku0togi7i2k97mqeyeea0japv2wv4d0b0bczeteuj8e4rkzf48tv5d919motuodh1233gx\", \"nrpq6o6wlmi96n4dykl5dqwtz4xji9275h7v4fkcrtjuhc0ald1iol5yyq0\", \"td4fn177pxb7diwxt3d1mkbsutiz0rkqck8x3azeci7et30622k3sj\", \"f8ihemz5uzukgyulufjdoed6ivz4ox74lbua39qhn3ke9d8x6jcq6cx4mj5kmhv15ul3tqr2zcd1oru0up10yi9aytqstu4v2sy8uik6g9xd78srdh7dfszdea32g8nn8ia9czjsgz1qo1a5f223ouqcnmjb84dw7wgy0r2lvel0kgcvg95kohpncx8up8138\", \"g8p46zrb6avn3gho6qz73zn01uzwm52m2etlr1xfh8ctg4rsqruo9z0snr3toxk4xpf7ekdo3t8v4l9xr5qlr3y3x9w\" ]\n        },\n        \"content\" : \"Sit laboriosam nisi praesentium veritatis autem et quibusdam. Sapiente exercitationem ipsam officia voluptas necessitatibus quo consequatur. Dolore nihil nihil amet placeat. Maiores vero odio.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"o5lydyj70njjsi5icjtp2smips5bzex0xfpool5d2sxc0ge\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/140062\"\n      },\n      \"importJob\" : \"kaaupwfb1nbipvlgimx3iohhpb5yk0cssby1w5q3rt5gtgybhyprd7rjcynwwxnovmb4vvndjeozqzsenmrm6svedqwtz6das7vfjgrlghkjxzn8rln2rnhlj3whviu28y7a9qwt2gh4q4jaxlsh\",\n      \"generateTime\" : \"2022-08-18T17:02:48.720532Z\",\n      \"destroyTime\" : \"2022-07-23T16:21:48.720562Z\",\n      \"destroyEventTime\" : \"2022-11-15T14:46:48.72059Z\",\n      \"importFailureReason\" : \"dq51fhtkr6c6llpciziwxo3eqisz1yim89e82loqreaj16alw0k6z9liroa6uwt1l5flmbu\",\n      \"reimportEligible\" : true,\n      \"createTime\" : \"2022-03-25T16:49:48.720635Z\",\n      \"name\" : \"Deanna Hessel\",\n      \"state\" : \"DISABLED\",\n      \"protectionLevel\" : \"EXTERNAL_VPC\",\n      \"importTime\" : \"2022-03-16T13:57:48.720718Z\",\n      \"algorithm\" : \"RSA_DECRYPT_OAEP_2048_SHA256\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "998b8b74-cfff-331b-918c-d27fc0073d47",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListCryptoKeys.",
            "properties" : {
              "cryptoKeys" : {
                "description" : "The list of CryptoKeys.",
                "items" : {
                  "$ref" : "#/components/schemas/CryptoKey"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListCryptoKeysRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of CryptoKeys that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "72f5ea9d-b5dc-3437-9850-7ad3b37f618d",
    "name" : "Import wrapped key material into a CryptoKeyVersion. All requests must specify a...",
    "request" : {
      "urlPath" : "/v1/8b951yxz4w0wnkqu72uvn3wnv0ck2anccc99vaadatrhdzkqg5j42kb065cs1yth8ugkpxqx045mvvqxj7gi86p0gnp6orlqf19y7n5vj1nvbj5qgnjiflj8d1pz577kekakh4fu7kwpvo0am7mugynkoq62x1or0phw65hgylyyp57xh/cryptoKeyVersions:import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"h8syaag8ti9ai68va28de6wxaf7239as3szgtv57ipc5tmgzhifc4rrxs67wzl\", \"q6e2t6d5d8kheldxj797lgt6gssvxb74lg4mjadhtuxydadgjhxcg3ikd0gwq6xtiobhnucng60vcwlrzzszntrbz1rjkofidp4saiwj75aaerfh20rk7g3afjo5ncmdf0q3oxu6026oozkmmt9m31n\", \"4te02cuc8pomj8z9370xp8djof93to112370j09ug20120z3hagc2ujer6n64fy2xt48eqzoyldapnfzhkfuo4m0xidx8f9ioolw4y4zpew0wtzl7asyjmq92iyz2bmqf\", \"ryqnh2q1keq7x63149ds0ve5zz1ke8vjqj6qmjy5dxwxrsd1welbl6nmouibqo1pkwnjwh806lpyvp8cpq9mlt1kuojfb2yzxfp2ztzm63ou5fgnyg3u0n97u\", \"pn6m4vs7ijivaxfg1chihaibgv8kdaw53ja0qo1lj53weuw9rvo4agfs0gyx3dvy22ajjnzka\" ],\n      \"caviumCerts\" : [ \"z525njo9co40ja4ydma9fr7w2qz8aad215z8pgybqfe3o49x1pnt8eqr9tbo7ytzd3tzphs5g1i2btf66wrfbtyt2dfwpzg4rwkeyk4rxjbejfs7vjuve9wos679qe9fcfg7jq4\", \"yfdo4otmzifc6i66ae5j6w47gcy79j8nope1njprxapb0ou2v0ai02imdxf40sfjxo1zcwuh9sicl8vee5hhea7xloyrpo34z30rh44eijvojyfp8rgjucj0krixcwkqua8lk27p17kjoxkn4xs9amv7jq4l5o855e\" ],\n      \"googlePartitionCerts\" : [ \"vo3ywrzhnjh051xgtvqmv8b99cbmoq4l6l0gsnhx3jgt9rdgyuh9dzs71lh6kopjnt1esz5u5a68atr6nttzbkkzi825ijy5wkxcbe3n9axwnj4hi9ef4psiqt8ev9o6z6ly9gi\", \"g4ctylk7nvrr88mxp6rbzsgjb3ovxup462v6iarj2jv5zaf75mkc3kldvasxl9b85hnp3hmiz1txq1an9u8t4sv4r64\" ]\n    },\n    \"content\" : \"Aspernatur ut ut occaecati qui. Iusto quasi dolorem qui cupiditate. Quo repudiandae et minus. Vero ad quas laborum illum praesentium.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"hcopbh8yde7j15aepcavpkfhd6c4tsa8gek5ufz33wyapfazek4tbdmr15n7eop1wddexpqsv8dqo2txa4270o5nxj26rb25dapdi6jkgi79otk\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/235385\"\n  },\n  \"importJob\" : \"eu2bx775bspdo7jou377s\",\n  \"generateTime\" : \"2022-10-19T16:35:48.716981Z\",\n  \"destroyTime\" : \"2022-03-18T15:43:48.717008Z\",\n  \"destroyEventTime\" : \"2022-12-21T13:11:48.717036Z\",\n  \"importFailureReason\" : \"1mwd1bxekf0\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-05-24T16:30:48.717081Z\",\n  \"name\" : \"Sanford Wehner\",\n  \"state\" : \"IMPORT_FAILED\",\n  \"protectionLevel\" : \"EXTERNAL\",\n  \"importTime\" : \"2023-03-04T14:15:48.717164Z\",\n  \"algorithm\" : \"CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "72f5ea9d-b5dc-3437-9850-7ad3b37f618d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "e282f1e5-d7ef-3fec-b725-effa531ea895",
    "name" : "Create a new CryptoKeyVersion in a CryptoKey. The server will assign the next se...",
    "request" : {
      "urlPath" : "/v1/gqmoxk7oc5klxh6egdxcg80msfz0g2m7qz14r5rs62ef2q74w/cryptoKeyVersions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"6wydq4330c54\" ],\n      \"caviumCerts\" : [ \"4gw43jhv00kxdftindrohyw06tdf2fjk4e3q9vgm58u3b7b2vuycssdfhisuldlx2wrijx1lqbv\", \"b5nlk\" ],\n      \"googlePartitionCerts\" : [ \"nuslh8nayv7cnst747527tw8mg4pxw67xjzusbo3hk99r5wg6rg5it50ccjqr70ls3aur4eoz4y28aq3vo4vi2tz2ysebvmfo206ltuqi10ltcnwf6xznsedgq8lebmo1sdri6vs852xqhy6a535efqparpj7c28fx173x3fndkm\" ]\n    },\n    \"content\" : \"Quasi adipisci explicabo esse nesciunt minus sit aspernatur. Velit molestiae est possimus dolorum voluptatum. Inventore aut sed. Fugit placeat ipsam. Sit sit velit occaecati ea.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"ersym51xrljbz3gln44ysw7kdrv930f5rkqdcnhd2yrj7avod991dvy326q7jvwq7xxsno389pxswdbf48wip3wnd95pebigjndglsy26xh7i3za2925gvm8kzvmkswo2gzkc\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/556581\"\n  },\n  \"importJob\" : \"z2vlai186nzwpfmlu1rbftgd5566estlw9fjavaqg88go1nlnxfa4m3sbthx3dtqe04qg9sr8por6tby8udrsm55q43gky9hyxuzgcr4za6400poo0bwhmynuk58q3q7zpsgvdvo4f9jg11fs33f256\",\n  \"generateTime\" : \"2022-12-26T13:26:48.716358Z\",\n  \"destroyTime\" : \"2022-05-22T16:56:48.716384Z\",\n  \"destroyEventTime\" : \"2022-04-25T13:22:48.716413Z\",\n  \"importFailureReason\" : \"rhyt5f770aulq94kjfnuc1pzc1t2wbg58j99jqdkuu5ga22d2i\",\n  \"reimportEligible\" : false,\n  \"createTime\" : \"2022-04-27T13:26:48.716452Z\",\n  \"name\" : \"Sharri Murphy\",\n  \"state\" : \"PENDING_GENERATION\",\n  \"protectionLevel\" : \"SOFTWARE\",\n  \"importTime\" : \"2022-06-01T15:41:48.716533Z\",\n  \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_3072\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e282f1e5-d7ef-3fec-b725-effa531ea895",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "a37c1ef3-3baf-3613-ae9d-3ca325dab4e8",
    "name" : "Lists CryptoKeyVersions.",
    "request" : {
      "urlPath" : "/v1/1pi3uo6ej4atfbmaoq6f3x0xlj0mv/cryptoKeyVersions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 552281576,\n  \"nextPageToken\" : \"37mej0kcvlfiwp64obb8fql4dwmkci3to4xp099drjlg116ltju8lajg0ki9zm2daq14uua8ye0sfb2h2g0cc9zz4jla92kmao5c9fxtgmgjneuouqby\",\n  \"cryptoKeyVersions\" : [ {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"5nx2vlcd0fsi951c41phq8g61kyvntotytua50ghp90z2lsi5uqcmbdgr3clvjpwlmqdxo3xde9kme06afl0e97k9rvlglkuy8dyjhir\", \"ixlvxaar4yxe3cu3n0dem97kiwaby01d6fkwkxusd0otjdfvivz4m6ypa1ol7x570vtfqp1htyvf2z8pp9l1i5bkn0wo1tca09i12hscs\", \"v3y5rpk2rqv8zhjesvegzmbucuz6a7iq0i613el7nvp80epqjlabt2jg4r31kcyvygfsxnxjph8ztd8ihtt7dph8hzf25l83hu9ark1z5otevl6a9yn7yu0dh5eswdpxswovwxw6mf0555mjgpbx34lzkeapirg1vxvyrb35\", \"r5gkvjwbzf8q7bg586lxorwnc9792j366b4pya0me6q9lxv4z2kb1u8v7li8i6moxpseexdw9rv9cql63f7otx0f93xvtbn0szx\", \"6tjesdaohyb17n4h7wft9vc3yey8st49qes8e24eo6yfm6umqj94ln3s8knhpxlwpxeocebnr9as5d1si6zjyha7habns99av54iej22zfwwuq\" ],\n        \"caviumCerts\" : [ \"fxxd66hfiqk949p1879vtumrbi2vw0jnk8468ia23fub46yxian5pr5fl57hy8b3fb3igf9zj9n7m5b\", \"pge8j2s4mpch0xkrpecr0xfls250atofcsgz4lpfnlfbmh6vvkijdaaslv06h508vte2vhzhicv379dm0uxy2hbjmlmns4rums71bloeyi5n1kp4b4drafubr0nozbhqmyscj1i6g3e0mvb39xsho3o3n4nzyo3sf9hsda4kovxvs\" ],\n        \"googlePartitionCerts\" : [ \"pdxih50pnqlq261y57abcbquu0kjx0t3yag67saz0mo5q73ncmuw0nsyxhpuadvdwtile20i5\", \"me4ra3w4kd5z14p767g83op8iesdpsjphv3jh0y5z87ju9fgspfm2ov0yv1rh43h3g02ozdil8hlk41tdzmlvibb7jggf0a9y2ae0ac0qht7gmasn2qymgmogzzc1vgkzcjx\", \"2fxn8i7jpiqbc93pspf4b8lmwonbguhdosg0iy71val7w7qa683rxjppvsiy754jhn3r5am7l3xqjqui44lybjblu6zmnhhzu59bb0f643x\", \"v9cwwxetor91cc1p27r0gx6xhclffmc3untz913c75irreh6h8m6pr40nubwq7b95nr0orutnudgq8pu912vjftof\", \"656vwcfg03wpv1rdpy1wbi4msnj0n6390p0720igraajhv1cd4npiv2ogua2kb5x3m0dv7o\", \"m5rptjnl140wcwi03ww2lr82owxj33hfw96sagxnfwbxlvf03fc4350be7b0wnfr24sfa748ym4jqhil86tgh2u1jimvxlki8kw4wczwu09hmarqn05c04wdbb501nijiizgpgzlvodj5vao1vyt8aoz6c2g5\", \"btoo27j135661vndyet06brlbowigvq91j4avq\" ]\n      },\n      \"content\" : \"Et ut facilis reiciendis laborum voluptatem repudiandae autem. Sunt dolorum aut cum consequatur deserunt amet dolorum. Dolorum perspiciatis quam.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"qi5qolkgqv7z8qwlot0101dv16c1ovzpd7ee5lytazj2rn4xmrxx9vw6o9iy\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/888027\"\n    },\n    \"importJob\" : \"ayjljes7nx9h7544f8wbn6zp6wkutpaw1hgmvkhmpcqge78vo8c8e9hus4k5nv3764wdj9pmv8az5tzvmrgmitnhcec5bthe1v9e5w8qlhkhjy5hsn4vj9yc5e1pphxkje8ta280qbph6q7of9bxyt297un7qbhpw0tirqb17m9l5u8la1mv5a94vpimwy\",\n    \"generateTime\" : \"2022-05-27T13:16:48.712346Z\",\n    \"destroyTime\" : \"2022-10-25T16:50:48.712375Z\",\n    \"destroyEventTime\" : \"2022-07-10T15:21:48.712404Z\",\n    \"importFailureReason\" : \"so3xz6ylfq7hjgef2h05jb8isfjfj0620ej3owbkwfhzz9oa5zo68n6p46d33eh44gf9hdvgt6npc2pj\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-11-21T16:13:48.712447Z\",\n    \"name\" : \"Shante Hayes\",\n    \"state\" : \"DESTROYED\",\n    \"protectionLevel\" : \"EXTERNAL_VPC\",\n    \"importTime\" : \"2023-01-29T13:45:48.712532Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA256\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"gyxxxyha6vl1cpnrlm3z64qo384ktcl1emsppb4p8qhmgo3nct7z73bcg83efqlequhbudkydzfqq29yk054e55c7n9myxklur67lgae3qrd2jr50srghbyc0mg2hwqlh15d15lc429399dwikgloz3dbdqr5fyj6zx9z7npy0hd6ioyk6kpizbn34\", \"3k56tdpbb33rcouardrz74xxyckdy9tdkgsbh30tai8dvhl3g2bqczg0wlfhpcubabd9owoxf1rtuy4yk3lg3z1zmf3665eppcvokcrvn3w4jf\", \"4ik4xogs88jf1d1rlxajfsdvsl31ftmwjf15ve57hmw4y12uqneg3qtw14ufhzkhm7tn26ggm033i6bfouwkbq4egah5gjowxxe8gllw8dqdi7nk4gc9oqk1x4asdqx8sxix0w96amfm9k6oukutw09bpsn83awl2\", \"yhsht3fc7k0gvi8n7e96vk3abht3da18f7cn7lazlu24uzjkduxg06vd6ozaty5v0r97h5bn87hnba4a6glcc4n4mt96c99up6tn\", \"opxtn8p5dm5hdxn5uqzuizlmueco5w5qdakk52kjlqqqw5u14bif9kex30mt2a4pgfcsamgyljdljp5kidl0pdfd6dkv1pjoavav6l71j8wrncbggt42iqwl28o3i2wue8ugpy42ev11y3wpbryv\" ],\n        \"caviumCerts\" : [ \"nwumuqt7jxo5byoi1gjpcx25pyfz2pnpvf2s3v6ybdfladspxwcpupn2livvvksw3eoikqlhgrw7qbjx2nbffls3s2rfw2lxftyx90lf5xwho8o8hgdzhu8m58jynhfwapakmpv7n5tmv24s2nre6jg99mz4ja6piga\", \"ph5vv89xclpgqd2979i20yx9fx5g4382c0r017lgmryar82svyqqq65gez04mdsbkcioghtrux0xrvb5ttcr8jnxcwfm0p4taglq9uic450f9ymd6n5kdtoin8hqnkb\", \"6pceuuva1sglqs25joyxun4f10etouf7h2dy0rwj1w8cwt9wfwmv7nrgkmsmf2zyrpen8ebddic8glz5k33r6qis6svvxrcyo9lswwukgm4u6dkgym9qhusj88dbcep6jfeaa3w1gt0imfiywwgg325e9rkgnxaixnrl58arezvssor\", \"gx4n9dy43tnezspza4m00amk3hze2fvw14yk6kbb28wca16rixssnmp4l1x30047xtls9nld5ykk0rj26yli75s4lmnm80x7yzl8vy1477a0z2asyudhclyk672w1n7w262knxjyj9r80qw\", \"l7dhd70lrjw13kfykjz30m47vf65u0kgfuw1lp6b1op18ejyhkamrdrp0dov667bfa90k\", \"afix366eecmqytd2v9ewlatodx5rz13mwwlvu49wpywlxxrxal1g883ntf194uv2zdswl6ytmojwsjl05jm2nsenof\", \"iksadz2a7pbmg73j82uhoobuya12swkd62dixycqwtvobi7gszcadauyfffjcxi1lmpoo17e6bcp2qlvszkioq9trwx0jpggckasg4jbsdvkyj8ribvfxlzxo2av9ga7m7oerzjhjc3juia9lf57fu8xgpvambg0ns29eexja3xootekxutzf48uf4velor2ob57\", \"5i1m8rendmixm6q72a4zxpo2qtavso0o181msqwj72izptu8d7esqjsmwqp0wdvrhwl0f12cd4r0kdb7qfzotkf0bzqhbdxub23w78i5vum7oen7b7i5hm1dhprc\" ],\n        \"googlePartitionCerts\" : [ \"ijnbtf0o2im5ync6xsonn4vdcgzrshxn95k9y1yks3s7gcs44bdp9q2j3d9wvlsglpbhdpwoddbgm0qizjq2z81uyknh0tforhyt7lwskuc3ienhuflvhpen61oz9uuvbj6v60d31brwufas81nn7xsmig5s8g68s1ztovj2qd8jg\", \"ei9fcldz6pyfzdfrmfzk3pygvoebstpl6vbmtdl9ko91j2ur7cwhfvq3fyk5c28lqa9791ijorl2g5fp6twqwup16xul2mr1xmg2hd31jn2li41ba2jwg8ehjlwd8x2zz0n21dms7ntrh8yb4ygl9orkmx1issha1w3ddmyzn9utoit96a36oq3xgyak0\", \"gtmapycvy6af6np1083w03zzoozhcak9gm5h83yma9skfie4ky6g03anjfqu86m78f94qqm0msg3egpfd4wcqjnci88ry0gnfpnkptr5fhm\" ]\n      },\n      \"content\" : \"Tempore quisquam aliquid velit sit qui hic dolorum. Ea neque id. Numquam quo dicta enim dolores sit possimus. Voluptas distinctio in.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"hcv0b\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/527499\"\n    },\n    \"importJob\" : \"7jyhtadjbvz05yftwne2a258x50e3joyslllmfuc1epdl523zhw9eel78j8207d26m4jh8ilpkt22x6dpjyci4erq7p4gddc8rk8ks1dncrijjvjxzakk59ghrd4\",\n    \"generateTime\" : \"2022-12-30T16:57:48.712842Z\",\n    \"destroyTime\" : \"2022-11-27T16:07:48.712869Z\",\n    \"destroyEventTime\" : \"2023-01-15T16:12:48.712898Z\",\n    \"importFailureReason\" : \"hz60qhcscmaaen30go4o4ltkug3q3ej06d5pm7i00t3rybopivcozxr1i9vq49vm6yktpf5jw553ll8uew2q6gmw756c9v5jxom5wy7v562ou43cirxs0x45vswxv1rjnejc2aeatkom25tynst0mher5nnomiimtzva9rsl90vb1cqya7\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2023-02-03T14:55:48.712948Z\",\n    \"name\" : \"Nina Monahan\",\n    \"state\" : \"DESTROYED\",\n    \"protectionLevel\" : \"SOFTWARE\",\n    \"importTime\" : \"2022-09-28T13:26:48.713047Z\",\n    \"algorithm\" : \"HMAC_SHA224\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"xmkgnpcb0a36fpmxwgegiwd8ia28w1qcde7ig873ikiodytykuj4ppqd2jjueek1zavzvpzhcuufjdabuxqwyv613ic6h11mhtqkms44e3cmpndm81fykn4lagftoru5xn6lx01ak9elo00wjma6g4llj3te8figkxxp2ya61gdprre2rdjf1g9p6hylr7dsa1\", \"nhvieug3h864ofb94zi2tresjcelhktevpa11wqlhfvc2w5vor5944pi3lmr7f9\", \"l215jczq5zq314kj1scmjnebsbrwia7icv9gsg2hd86iy8hqs6a489n7htsqhwp727vitv637kacx00qaplb7nu8q5fd4vuq6qrr3ij05xd250p1dtomhs\", \"2kvp0pqal61f8ld1voyp028bjk3dvpjcfuh751dblg8ohqou6zjy7e9wdhi66d74czm8midkna8aza38un2z4u4mz97oglqm17be01ct64c8bta8hxhvsidfgzja6v40u7zlzv7b9z4cwfzoh82zyajifrtdoi0pfaq3m2mp6mdr3c8i80lznhn4a69xdi8c4x02mb4\", \"er2sa2phgdf785tasqfrdnhakrziqwvy4zvjcidzx6g41qm3yp7xphabosdv8zrvj2ept645gvs6eje1exbxs76c365b5rs7yo18l584dcpd3cs5myxv0\", \"4qn9x3xh7vb7ncvzo0m2mixi3q1z8ca8rlcxx4j7b4tb7za0x08njb5tvt7kfzu87rhhg9ex45snvf4nhxcmittjftz8pobv8rgs36nws62wo6l8oqxbdssk6r13i7gu6afo51unha9qhiwaa8yj7pjrmz9m8sfc9p90qs7f4boaeum5331s5r282pc7pot\" ],\n        \"caviumCerts\" : [ \"49knm66hyll2dg27knr5tyqq8saxeczw39vvw1cv72etchxqnp0ca91ztpdxdfgn76iu4kp3mmb8qs1z662sni9m7gmz8rbvd9g4b1e0cdcqctlqsgd4we7lmho2xq9m13tn3auh5jy\", \"feonpa3zvrqijblqpncwdxfd63b7tt7l4zgvm530w016ytpkjtrc0k9233umpm5uv6wwallg7gp5omzmwrhbaafux5mpmgzy4hg7grczwo0y4xn0dy2yck1vntd44xesme2qjehu00g04vt4xr97adhpqqfk7odl1aw31ie57kyp3rqgp0ng5qhduuukb\", \"cq5zbm1hshzvswyapqt17q9kw1ea9tw879fp4avf9f5ghdnb1xq1sou53m5w2ah9lh1lhqpff7dkvbp5bgye6f389zeetfi6j8zn6y0at22edfx55zg6j9qtwt02ban2ckan6jlyn41o4\" ],\n        \"googlePartitionCerts\" : [ \"4vejes7ojgnq99fcp08xe7anslsjm6jh18qttz13ww3nq3eqou5r5isl44s2ghw0z8ln4lpt0syex35oupfqvk00dnrpmhep\", \"qsrhnsqib3jkmqfqp7xkrs\" ]\n      },\n      \"content\" : \"Eveniet incidunt ex quae reiciendis ratione eaque. Repellat inventore necessitatibus impedit consectetur aspernatur. Itaque quidem nulla molestiae possimus excepturi illo exercitationem. Sit aut omnis\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"hvj157y7mxjqgomep6dlqwzilfzrt7e3kf97874\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/058624\"\n    },\n    \"importJob\" : \"sx8mhly5xjlhlvmouthwxbucxsogd7qsbs3if14aiut7yyotb89v47rf\",\n    \"generateTime\" : \"2022-06-18T15:59:48.713331Z\",\n    \"destroyTime\" : \"2022-08-31T13:23:48.713361Z\",\n    \"destroyEventTime\" : \"2022-10-29T16:42:48.713388Z\",\n    \"importFailureReason\" : \"4qp787un96on5mn7zixymv078lamsurri4m6q8kqmp6guijnj8r508i0itk863humb2qdvcbb21qstttoxuitpolntgsil8dln5i\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-06-11T17:00:48.71343Z\",\n    \"name\" : \"German Kshlerin\",\n    \"state\" : \"PENDING_IMPORT\",\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"importTime\" : \"2022-12-06T15:55:48.713513Z\",\n    \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_3072\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"m0cwz5kfc07emgmojefh4uzacewehcy4gbqwlx9wt0fjxeohgshigaahup7l838n15cbc762pnxd2gjz1ut147hy92xrbo0lkcj6hoavt2gn4hd6bw8haluxegarenmy1iedi8tos4lutbwixjpaj4weo3s\", \"mlkuo8luji7rrty9x644rg3bco77kn2wzl8tqegqiw4292hn13e04f3ym6361frefdez3f90l7054tbjtrc0ymuz7rs6l384t0tebqglbvacyoxgewywp23mcf\", \"ts4i5\", \"1xw80xnksgdtb2y1d9k7el0p5vn5mz6nc1maigzuh0c1ohxav5\", \"9ahlb20jkt418n5q42118ygb82oskj0qmjj\", \"03alkcckzvhi3liiozrm9tswz25dn715wj35\" ],\n        \"caviumCerts\" : [ \"cu9y4fgxmbhi84tun1iahl7h2og398ut5m5mtoub5b0qfvbg7fol3vk2324ip4mn5cmf3rocxw2p8ht6skefa4bsurgbd44iraxfafdvtvyng5xs2we1vg82nxpket935t8ljcesg8swbj\", \"wmqjqfkt5xeuox27zcm5gcys63h44ut52r3s504b939qlzl15gvu34jn527\", \"2j0yvw651m99n0k6evr430u634jz5alic6pq5mxfvhsfer09ticr60m8d8c0kws1auukydf5j2jp7kb08p6eb0zfs3kf7r12a765nqfealgewluf7a9umkv737yg066tsiehcitezf5fmg030rb\", \"0godu16sifiqyytzoxrapqmuo4ixlujtrbstey55bbqaalw1pl5630u94gl45wrggu5r5u6njxi2qkimzjjnfutnmc1trnhf804vec9esg0dqpn0avh8c953pnfvakzpa31q3k6t73h3ruoj5hypqsheikp20azjbloar7il7wl4n7gtxdzi4od0l5rv4ywpz\", \"m87qsdn4rjyj1yx51dxgxe6apuvz3o3ja3fnj00kq189usf3jpbewk1qz65b5a63gc63bgru81ah5h3bas3hknqlqw55klvfwvkhi9joh5hyouzgcso03yx3infl\" ],\n        \"googlePartitionCerts\" : [ \"28hpujb5sglahi1he1a66xew4e7k2mx7l4q1kkcnloh0zihwhfsec1f4s089d3ujtq2ynct6yo0xotn1qbjp1whi30ru8xllh46ledqwkh006jd71wo0c05q57w0as3bk95tycefjzcaxk\", \"ggp9w3juqdndlfocmz8orxwz2qduqak60r7v1g3cjkuu2nyg8gs0mdf04kd1gz11z2e771r4ohgl6pi34rb1551gtt1tmkkdo2iey4j21krb0ihahd5q6002ri9z19x\", \"q28g70086zwzfr1rtf6hu7hu6aimkga74253lwznkp9q6hc6x6w6pbir691glxwbf35euftczan1mj2fyzv812mdt0ip8twjhdosv6e7z4os329vev7r8dayi7c7jfaoeohhl8frz85v9p8uax73dfou6adsmwrl70ymmpbtzmd\", \"t5u919rbrehjl1s50qz2ov5v8sug8ntm9wc6w9fyf7e3xgmhxevqrq4xjvbjaal9zdiyr02dibg6ffgh6mlr4u4ar\" ]\n      },\n      \"content\" : \"Aliquam natus laboriosam dicta aut tempore quia ex. In inventore sint consequatur aliquam non autem repudiandae. Et labore eius laudantium provident. Ut veniam minus eveniet nam id fugiat doloribus.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"q3w9igpxbuopzb7etve87kbydt4275imhooaufpau1n58itshwoo722nnpvm231sqm0f2d4jcu01v43n9tgq9ly522\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/648635\"\n    },\n    \"importJob\" : \"avvus8k82ghejkmhd1qgcne4deiwxx7d4o7ymlcgxn0tmwz7oef0bx57ebkyssy4ddjb9pbokkl218mgtwkej4bstje\",\n    \"generateTime\" : \"2022-12-03T16:14:48.713806Z\",\n    \"destroyTime\" : \"2023-01-05T14:31:48.713834Z\",\n    \"destroyEventTime\" : \"2022-04-21T13:27:48.713862Z\",\n    \"importFailureReason\" : \"pty1pr2kzllzdb8gm5spo2nh0j71m8i6yav3\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-04-21T13:59:48.713903Z\",\n    \"name\" : \"Sylvia Gutkowski\",\n    \"state\" : \"ENABLED\",\n    \"protectionLevel\" : \"EXTERNAL_VPC\",\n    \"importTime\" : \"2022-10-18T13:45:48.713996Z\",\n    \"algorithm\" : \"HMAC_SHA384\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"117ay6mihpqubb0g2sc041fpp10ry3tdjt9zwgs8lc71vwq6ywoj1jrj5099flfvql08dotzdspu2gs51mzbf5jc4yddmzy997bxghu6jz84uai7d8betfkjetptf6cvg1jivopajrljxrsqokrr0g2xo0c5xm7kbl7w08vb76n7f6q2\", \"m8c363ek9hlw81f3dmww51kdleteywv8ljbtdsnqoscpxhrc3a2q32ahfl6irn7mua85r7bdzohgmdmol5rt2gc87bw7q4hgz5fgw849tlhfb8sk4d90uiv25ov53edppoowg859znox9il3n4mv7o6\", \"idskrqokcsw6fpzm36xh9irex07iqqenqydx7b5i0lnq4ign\", \"qw2kgjhkbdr63q2oqk6k981fos1powjgf632orbiaoq3cq7yw5z7ptsma3fz8s4evclju4tzt98g1dt6z9zu1q5dujhyh34ei6sxxum2bc3rn2ora0ih8j8l4urfi3ygfiwldposu0xywirj7pprvm\", \"m82bsoo3odbb5rcl42zikperq1nz0wqge5asrx18ak0sdm6v746bamrtg4zbvakyhlby98kkcg4hk02yfkwld5x5vt4lo6wnayfcquiqqwrdkmufje6\", \"08vama3eke70tq943wx3vqg3ypv738gwkvbavhgq48hk0ki4q7o50wyr6e0sik77z7jw74jf1wijpevrj5sp631b5y7ogykfmks2khmyuaz32lpx5e1e605j2jk1yi734dto1z53wm0w0ce1ghu58rqi5by9ql8ca0lsezq1qghkg448\" ],\n        \"caviumCerts\" : [ \"xxb43j0gicowdwiwc2k8duf1bmphrluj0r56ny9sftmi0cc33jrmu8oukk5azydeo1i1hri02ys79egf3e0ct5qe5pss6vekvdq2muazu8vivkgoyi9d63ynxd425yahmxq1c7ezfqmhfgdmf3siqwcjoub1jph1ddhtrdfsggy9h4upxysnwdf0quc95u65ok73e\", \"ud5jkp9nf01gixaewwg1edvj1d718pa0rx7day8gh59eq986nr2cylsm2sburj6swpi5334mq8uo6t4coxu3ri4vejjuz7q57agk0add4oluzqa5xyt33xa8j5ijr42umv8xngutlhp70atn49yf\", \"1mbxn1rb8mr32836y41sy4wo5w98b1jfj5m8zoznbtoedobc9sed56jjocq3p889z61hbhbyabeduoovg82s3ocoo6yga2k6h5ijgqxh849hcf0zfj4tdnhf1cqcndumqn7f7t7c2pvdd7xsygd\", \"38j1tr44h36pcrbj1mlrwyqx0d8josxwn1hzuddvqul7zb93ny2lkbgqibvi9wfrkd1\" ],\n        \"googlePartitionCerts\" : [ \"z12m8isxmbox68hs4r\", \"8r31p8je4rkfdru3jh1f7cz6o1hmp5ru7239iw5bfay2e6d79mfo5gf7z9p4ky48ej7y59pgmopkbul4hwb8oyr6o9w81ehu0aoyluyqdoelprgfeti7pf5fzyr8ltaf1iyvtgrk9bk9ka0711brc2v3k8edkkfri4kacpem95sogl71wq\", \"ze4arf16f094v7xg3aarequx58mirj5edcg7qw4kc46fxzij25hpyvy9kbum2672iltf3hi8l7isywjhpjik2952s26c3z2o9mcjmypm50bhz723x5byuali9qmdpn6yqlwfwnyqgnjakekocajobo8jzq3ocenm0pxq1okoadh\", \"m1gols9l97ivw1vvrypcfipi4zvmfczsym55hzdax5pa494ekm1uo6osxoy4mizzoupmiwwu08pirs8lb0ajumpmq3ymmala3icj8gzc9ssjpuxu6ff9b2u1okw3fg5fv597h1sggpa9arigl05tsa1gho079ecmk0gs3tl39u839v3omqvzli48bv917\", \"69er\" ]\n      },\n      \"content\" : \"Natus saepe eligendi tempore repellat harum iure. Ducimus nulla quis minus quae tempora. Quia nisi neque optio et inventore. Et voluptate nesciunt. Quis ut incidunt.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"sw4uffvwkrpqh5dov1im6j3dhxzzoaizve2kc38sm87gskof1its2hbejv7w7fk22vf3tctjs5el9bzbyp1adelizgdp2sp0lc34vj5jk\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/447710\"\n    },\n    \"importJob\" : \"ncetd9prenjt6vq2cj\",\n    \"generateTime\" : \"2022-06-24T16:51:48.714289Z\",\n    \"destroyTime\" : \"2022-07-13T13:26:48.714319Z\",\n    \"destroyEventTime\" : \"2022-12-29T14:22:48.714348Z\",\n    \"importFailureReason\" : \"kvxj65fnzhf0js6r5i88k3wm1hqgqmunu7e6otn1hs93xqz7uv3r14ss88uddvvawyboucrwedg6e4ean64u2imdro5b1r9dketp7q81wzwxp67q3o36n13\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-09-04T14:21:48.714388Z\",\n    \"name\" : \"Laci Schamberger\",\n    \"state\" : \"IMPORT_FAILED\",\n    \"protectionLevel\" : \"HSM\",\n    \"importTime\" : \"2022-06-08T15:42:48.71447Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA1\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"yr7jc232z24ukygyr81fj8wad4wm8byhwpiiwubq2j7vd63iaoiloeubuq3hwoz1dtm0fjjh2fq53s6seh36bbwthlazdplc9854e1dnly0xqcolj7wxzzv\", \"5yh8611t0z5f6thbwtjqnp2lmr84dpbyj2eilnyectd5krcnfoclaubpwulxcm380xkz8u9byqn3pf11k0l5f35phnydbjzjm6krodj2wzwxf\", \"v315ssibxigidqpqxua1ujpur6ozoxuos9po3l2cpi6zs7lokplsa80z34rufqd3ezog57vfuk3f7qn1mrwy3gnwymolfrcfo\", \"gs3y50ru0tmy3gu26j0wrs58gr8wdptr0iw8r23kn0yq7n1\", \"cj5s1yju3mlkf29z8yttwzoaii3aqcal2siudb\", \"7jqeq6ap65bi4vpx5sjz3vb6a8w2mza9wt2dwzx8c9\", \"ukeg1rvsrwvlpilvruf0ojedj1fujm2utqhnuei418jve2n90g6q5s9mvt4p83dks2pkoevxrghr4s4xhrk8vvcqw189w24yl0u3t9hatucfyeiaop89wwipoevtz5zzfnzkp9s7bnlyianghy3jy336ykrnsba0ng1zmh3dyvwbujdois\" ],\n        \"caviumCerts\" : [ \"339xbaua3h0atwwlw1ob60k1l5k6i7cxd17cpx6bbqubrranb7tgycr98qy\", \"294l2xhax\", \"36nym8fdcz5754e6spotqirgcbv2t2li4fhtzj6eiruej6knfatvh1ip6rgrlh2rlw4i20notd8ptvuxjare5s7lnk1vet\", \"me6hlyml6xr0gug2pontrkx9clztojmjq8tu6yixmib97moc7pzo1oyeuelsvhgb44ef7w5ti34qkhruy2twvqtu5rnhfcl1kzyfetcxpj8ky9mmlb52botn560w6hwb3gsfpdlp7as3f0e2wxpdbrde2fm3xkxzkf23uouh94vlaz600vil1avg1s\", \"zfybr3nslw6p71olo5n3djplow3s17quef4f21nvayjfoxl2ib0vny3d1siho1nlnztmxf0x9030nqkgrpie18h60l9nb156y9wndwze42j8f7s51dj2t2tbokejy06lj7q7i5yuacaslw\" ],\n        \"googlePartitionCerts\" : [ \"5gcze35k7vw6yrax5nmuj7y47gocaw0ju9r6u951m9xhz8561whlsgof99i2yrt4havvr76g01vxfy9lrfada3k67wu7jjiy18znivo4bunnq74214qm3io8xkqhl2jglenuy26ddsguf0g6mon0feadjq9wzr86vtvfwcdzw4\", \"96khftognlni7tugtvtze4tlonln94m34hkhoh9akdp1z088nbfi6apdcu280sjcvv94meh59pxfl6kzbfouos5d7rnqq1t2qbo9t9\", \"39ksfhthcfcejdtkz7roomfrdl7pb82swickad0vno67nprrqk44s1fsju61jx6s2yrt74141irqoo66sk2xvoghhquvw4jixpddptqr5dkhl3w4x54t60efokcllfzxt9phibmcfc89\", \"qj5rslgqc9ur328wst74s0nin5z3mr18m45i9a1ribbuk5rrig9sdxzkr3j78kfjw1z2vz04pzsgr1t7c2f1tv3o66pzpwndise3q8ao2ewkkeo3gvtggjr265gsbic11k06j4jhp2qqzv15vjv3f99e5gwh5jndlt4fx8uh25o7h9mbxit\", \"yq0oaw95b0gstz81z9y16k83uw54nh8k1xng4wfncsahwpaf6zx8qlfwwzbohbirasvpbjopbn6gt0vlo9ondjb41mz4i0ftbg6zktfz88ue507st1bakfzlnig1k3cqt66vpg5kyv12yc3bhty4hxfoothpfpsarcp8w\", \"qd8qe\", \"b7s96nqojyq706d7or8z01xm52phsugxmclzta9kzmre2jaglju632doy9at3aphlwjv0vo2l5e78k4rdbh0f1f\", \"r5o5dsfvnqtg35lfbgtgcgn4ku\" ]\n      },\n      \"content\" : \"Dicta quis iure ratione qui totam a veniam. Provident eligendi voluptatibus recusandae rerum odit nobis. Recusandae dolor et voluptas amet quia. Provident consequatur minima. Sunt quaerat consequuntur\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"0itkq3lmz50hoi59jexw4nquuoayi8v7xd8p3ch7wpshwge6cps1flb6siotkzyysddb9\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/714543\"\n    },\n    \"importJob\" : \"wltctqzcj599y69phff6jbow6nmb2p5fzyot62crxjdv3qxo297rdqvmmxg79zfonz1m\",\n    \"generateTime\" : \"2022-11-09T13:43:48.714785Z\",\n    \"destroyTime\" : \"2023-02-09T13:59:48.714812Z\",\n    \"destroyEventTime\" : \"2022-05-27T15:23:48.714844Z\",\n    \"importFailureReason\" : \"kjr13we5hvpzgpmit60n1po1tp5eu4acrtr2j1mez67zcnqn1tl6wwywz3vlv1p8hzetx6x7xr13qg56qbrzqp7cufvzspp2yd1o9sdbzozv01rxse7xw9by4jtzax2zqn37jbwwd7fov1cdr0k9eb8awmqe11cnmtwoiec4br6tqecukz7q\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2023-01-17T15:51:48.714891Z\",\n    \"name\" : \"Ed Upton IV\",\n    \"state\" : \"PENDING_GENERATION\",\n    \"protectionLevel\" : \"HSM\",\n    \"importTime\" : \"2022-10-26T15:19:48.714973Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA256\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"zpeg7l97pn6cy283w7s8zn4uei8ox59o6jtcks0m7fkwbe1\", \"0utja09yroax5lir2mtbz5yhzur0h949ad32j18dqqosbjw12h0i43h2wo1gdcp6auxvhdwpxmulud5db8gk8c43eng45hnng71swqajvp5ggpsjte69\", \"n7e2dy6zjrxc0bn6kbbkaf8o07kvr6q52fi2exbs88pkfm104xv7w2vhpaz7t6x7g0o1iidk6nls5k6i6m8vidlbxjw4tbvbf3c20ls8cywcn\", \"3vofrud3r9z3mawijabs0s43y3tlsu1oeu2i964y0sc4\", \"o1axw1tfpnxg21j07owg4zdwajsaxcgzq7x\", \"u8683lu6v6x3hjjlbahly2d7obn11qz8sok5sn4ukattga4mjbb2dda55o6gd61g6z17bkhcttf7mp5f4luz1l\", \"v9zh5hvc98t5ccvwdtvwzdyavy91tj26d8nmdw7rmdi45f0xve1i9acge5yamoyzc8g98wbykb0r23dqoxqcjxvswvisowducf5jnjyosx8\" ],\n        \"caviumCerts\" : [ \"xhfndhku3g7c1f6dk2ihnf3vmg8k31qut58wlvxvy8hdigjybbc5ofq3047n1jxcmgfsgr6y3pfg914z0miz9cl6yz027bl8h715wllnnz8f7oxjtu1vtcyic5zfebrd91ahedkrhyxogf621z11m97f\", \"9vw\", \"vhe21eej3z7xogb30nxzumpz2ivif8zash4z69ebqouwaecelhoflyysystzcc7me29f82hj8oe\", \"ps28growyyrmaun81kne088ce1czc5r1vr37svt137snptefn415cz2k0cjs0ycai8c9yvt4b27hnkhplfrrtwnwr4o8a6lroanu6uma2s58hdyqwtc9ach1r08mx5oxoejray1\", \"wb3rzebkonfs4ur4n5kf02bgoiokrjagvy6qda490pbytqohpc1lhuh5z68onl5o1u3rrj\" ],\n        \"googlePartitionCerts\" : [ \"zwta57dapfvycpfz2po2b47g6equnwo7fg5qovcoxxdjj5dbx7h2ybbd9rxxv\" ]\n      },\n      \"content\" : \"Ea beatae tempore aut ex molestias. Aut enim mollitia recusandae quis. Rem sed aliquam vitae. Debitis dolore rerum omnis et minus odio non.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"vzvkql3v206c5xr6317ux9853x5gma8nc57alv7\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/351048\"\n    },\n    \"importJob\" : \"j0fszpa35m41nao8m838bp4ete5tbwxabdd2wiie508iatlo4pi5v5btnrncds68zvmjvchnqpldo8r3oevc9k8it1krvca94k3la113ty\",\n    \"generateTime\" : \"2023-02-06T15:52:48.71525Z\",\n    \"destroyTime\" : \"2022-07-15T16:50:48.715279Z\",\n    \"destroyEventTime\" : \"2022-10-26T16:24:48.715305Z\",\n    \"importFailureReason\" : \"gvd7kou5gtmeumvhjlyw615hi384rebo3xhutsu5rn5lc5h7qwb6\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-12-13T13:10:48.715346Z\",\n    \"name\" : \"Richard Quitzon DVM\",\n    \"state\" : \"DESTROY_SCHEDULED\",\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"importTime\" : \"2022-08-06T13:30:48.715431Z\",\n    \"algorithm\" : \"GOOGLE_SYMMETRIC_ENCRYPTION\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"ggiy4ybjx5tu6ig9axuxf51mqk5\", \"5opke89sbgtca9v6g3hgj2gek2ptho9k68i381ios08eut9ftemeyary2r1km1louo1hqg0g7g2m1gynzsn07uqc9wazdcv3bgxxq2lh6diitf6g6z83oristfnw2njb0cwzpapatvig5xa3ppt1qkyorkq2pl7aroc7glmk\", \"tho76hnnnn1gpixcdkgiryoyh56ov0p39ue\", \"216lic9jtvbnyf4piattrx8sj1nvdb8jzlsktn6ol4jn1bpophhranmvs94c6yx5u8z4jdva84q6s1fq74c1l1z6pa91y6twppk5y1se9zzjt4mvlkb2j41se437gws4a4ansncoo96y5exru7pbqcxqovt1sj557ltv\", \"hkmn9o0itgft45b26as628y5u4paoarn1b0pmbgiu5rvnafesxo70k8vuk\" ],\n        \"caviumCerts\" : [ \"dq9we2h3ocz2rsa73xh7j08nq93itgqchqd5yn3310jwnxueo90uobtd41g78442k6vyh4hn8c1smcfozay7hrxa039sgq10vd3gtw3lexaesz9jeoo7y9q1anvc1reuhvob4xtfxlyq5zlhkzatulacnpi4nfl0udf6g9krpe9i9sloiof\", \"tsj2jzi3vq9xafof2zwxkvuwb\", \"wvhk4c359dcn3exiuyf8hzbwtcdlfb6h6muogxkn5p9g9bn5vvao6ce6kp0xnn3mge7h02ttokj8xlkd9rzv9271uzmeuxsr8k6t7js3gdb7cduutw7n2js496hkg3hz8082qp8atmkhlpvqe89ns2wo7962sjnavh7513llp1fy2jlewzmmowbzjkj68vw85\", \"4xe6gfx63hedsymip3aebuh434yyw4iqhm57y879jce7pgfy28fw0dfsdskeyplsnhyqzfz79aywy9a7tude1xx5vl37mbc8c2dhmwv8fnta9eu3ej6i7px4rer3fvzm1tjajbk9i33oxm4hgw8axpjkm9o013ts6xuvvp5ie1gin10vlhm0wpk28gyklqz7jzw6\", \"9vjyzjjkjg88nbbnteaewge9evuvxclj3gsypr3ugziwwyy7n3yojzfdopruvdxgfvrz5m6m5k7d953620kou78\", \"dlcccgzhes28cahqdgzob8a9i\", \"oogmmt5anei8wbqg2k33ha0yw291a38yc7wixa9r7v6mjzbp54nlfzre0qmqtiwczwynczfocbtto5cqxkguz26fyv8z3ge14sysmmt7k2rdl5okykpt98b2aygk8yqgh25ugxlectx7ey5dkxmbo58eca15v48tdqxt1hk4c3azoulv3isf5hav3n79xy\" ],\n        \"googlePartitionCerts\" : [ \"47w8taai9tfqjakheqqs43ibhj07hz6cr5mc5raslh75etsi61og9582e7ksdl240ygmb2j9cpcph63795cbiq26fkr6372ni2v00yt65s7c365w32furemo54e3dped697vz05\", \"em5m7s8txtn5bskbs4fk36yqasw\", \"9x1m7vvh72qrxbxrvjbvidrmel22tnmikpoz1ixhtc9xy5311zh4pps0simmn0ohylrc2cr27re07uiu0r2mulo2z4118iq63omw3fxmpajfomkuj2s6js2o5k6yb5sfimlcrcwrbp6\", \"288g7lfkixraidt8lq6dees0wmrcmvgfnnad8d1neool01mgcdabbulkknolpaz6h1820t5pvfa5fmfd\", \"emj5uuisph98sszjfeipr7x9l4l4k6dzzui6yawyj5040xb5dyeckgb36erfo9um6z31517tft5zaik596dv3y79a89a7pryq3ld0mafl0wo8n2lh2nd3ol3783l5fjeup1ybycm2earjbtzke9b5e90sxxharyrgsx895rzkmrdyf4w\", \"krtswmh9e19k33dba1i0ku0t99ioyw27o30vlsqm0b2bgfglkw41dz47xvvw4a8x2x23n91qbj7g33nx6x6dtpw392s4p1\" ]\n      },\n      \"content\" : \"Ad facere architecto qui id velit. Et sint natus in voluptate minus ut et. Atque rem voluptatibus. Expedita minima et eos quaerat libero quam ad. Sed similique dolor saepe ut rerum nobis laborum.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"ganzh40mw8u2pvlm7uo8cqwkac9ug5vczsd9sseifc8nmcmugebf1f92ixlrby0div2zv2zfiuj9ku8cl1b4wl8c5peilyza0eawv0kmtqxmbcu59201lgnt26y7qns75vxfye371g7gneowhzdckh86q2brm8kdqkuu6f2yuvoe0hue4e401fqjhq\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/757526\"\n    },\n    \"importJob\" : \"tvs\",\n    \"generateTime\" : \"2022-11-29T17:00:48.71574Z\",\n    \"destroyTime\" : \"2022-09-06T16:15:48.715769Z\",\n    \"destroyEventTime\" : \"2022-08-19T14:16:48.715796Z\",\n    \"importFailureReason\" : \"lm3jykj88h9cmrptk0l933mkq6rrloovcfq80uq5mw7th9idvrlo7f44mygelx5unr8i8dq1dy90bydvsih79pwcexzjeavybwsqng0vb0u258a1j6fdjfg1trc7ie4335b4qdmjp87v3khmtodvibyx0h6hzzyl0u5f7uaw5trqtuqiyhno\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2023-01-23T13:27:48.715847Z\",\n    \"name\" : \"Anjanette Reilly\",\n    \"state\" : \"PENDING_GENERATION\",\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"importTime\" : \"2022-07-27T15:41:48.715927Z\",\n    \"algorithm\" : \"HMAC_SHA1\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a37c1ef3-3baf-3613-ae9d-3ca325dab4e8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListCryptoKeyVersions.",
            "properties" : {
              "cryptoKeyVersions" : {
                "description" : "The list of CryptoKeyVersions.",
                "items" : {
                  "$ref" : "#/components/schemas/CryptoKeyVersion"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListCryptoKeyVersionsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of CryptoKeyVersions that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "8c7b4f48-7b8a-32b6-bcea-809db025b3fc",
    "name" : "Update the version of a CryptoKey that will be used in Encrypt. Returns an error...",
    "request" : {
      "urlPath" : "/v1/Talitha+Bergstrom+I:updatePrimaryVersion",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cryptoKeyBackend\" : \"06vtssafzjmwvrufy3ku39m4afntiqxzbtnbqmrpmxlc12kazq7wv5lc702kzyhbz5uziilbypio9s4j37873nfe0cx298xacpedjagnh\",\n  \"nextRotationTime\" : \"2022-12-19T15:16:48.711178Z\",\n  \"rotationPeriod\" : \"pt59qv98k0ud5l8dsz7pqbjkd2ujm9akhkh4mljg3c6nk5tfxexp2gi61p1tioz3jcxywqomtv5qvnl4t9mnfzxhi0gxwh277mn9x0u2q0tht57wizqudcsod4csfetc6h2e412duc5pf50jn4psra6fct0ekt566avg2e4lq66l89wlnpwaqjxig9\",\n  \"createTime\" : \"2022-07-26T13:41:48.711229Z\",\n  \"destroyScheduledDuration\" : \"kyd3m7vwh2me1k70m\",\n  \"purpose\" : \"ASYMMETRIC_DECRYPT\",\n  \"name\" : \"Wenona Wolf\",\n  \"versionTemplate\" : {\n    \"protectionLevel\" : \"HSM\",\n    \"algorithm\" : \"RSA_SIGN_PSS_4096_SHA256\"\n  },\n  \"importOnly\" : true,\n  \"labels\" : { },\n  \"primary\" : {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"70bubregz8wpxz63wa6pevod1r9zp4j0n2t8y7\", \"e1v50ih572bynze2153lhvmctcaa54763rc5vg2rnyutkglnw72px3auk7hdk5u4um74gqqnahod8n5pjhj7xpcw4b9efu3zeg5hbl\", \"vlsq0g1odgqp51vwpechj6jmspn0gat4kptr6ozp1r1tqequlckaavdsoqfhwnvoe0h2m6ncee0wogjw2n5j9rrqf9xb3sh4oh4ihhkycn2559rlm9yntxh0e0x5j83i75xo7w39sxs9uzl4g1c7mqxusf6jelhouu1nocuj9dm\", \"hai6tm678ywrxs2jqh8a99d69rsv7jw81amaeg6thxwiwe6rdtkbkort6a2w3f\" ],\n        \"caviumCerts\" : [ \"cjves9qdczx1kbug433pao5haybtmjhn0siay49d481pgwtqz6gvkpomviqwtkqqzbm89teokpiznlz0jnriyo4jw0dblv6by1hcqy6gt5rsumhlhzkskctgyru6jrepdu5m2e8jfct7br6h15uazpe2c0bz9m01rdwtk1ohx8pmshulfejolrz04va45jwxl6fmgfz0\" ],\n        \"googlePartitionCerts\" : [ \"nlfslupjc30mdh677cpw5ot5946gt6pot20\" ]\n      },\n      \"content\" : \"Quisquam veniam eius hic eum quae nihil. Velit neque ut assumenda ea iusto ut qui. Autem quaerat quia expedita sit cum ducimus. Excepturi omnis quibusdam ab exercitationem dignissimos quo delectus. Te\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"94rjjtfvnxwcuapqshu4dehuppr39q520mwj5vtilkrb96aoyi8od7gsjkgtdhlraylhy1jxgkrlo4dklex0a7ax8b8lw2gus860jjylbw0ukub5aydwokz1qo7tuioll81e4ty9uer3w92b4yno\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/820174\"\n    },\n    \"importJob\" : \"nwkohgptkolx5fpf3z9btv3dmscop0kakfgzzl2u1ekw4g74ve6ales9o5bvsobgf3fequrn28fi830g2nl7kzmdwx8vub0in6nbqsa2xjgp6w5m5a6w56wc0k9n4q2te9y81ewrz62qtlqn4yywtc7bh61rtnvpz4ejac1d0zlud0y2z8v\",\n    \"generateTime\" : \"2022-12-02T16:18:48.71159Z\",\n    \"destroyTime\" : \"2023-02-22T15:33:48.711618Z\",\n    \"destroyEventTime\" : \"2023-03-03T16:10:48.711646Z\",\n    \"importFailureReason\" : \"7i0eutcxzga8qft7pmxt6cfd0q0a6tv6pn5cdskic6guza35eazv6ypa54l4ad9s4ekx\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-07-01T16:12:48.711689Z\",\n    \"name\" : \"Valentine Little\",\n    \"state\" : \"IMPORT_FAILED\",\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"importTime\" : \"2022-12-14T16:42:48.711778Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_2048_SHA256\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c7b4f48-7b8a-32b6-bcea-809db025b3fc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion",
          "schema" : {
            "description" : "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKey was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoKeyBackend" : {
                "description" : "Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.",
                "type" : "string"
              },
              "destroyScheduledDuration" : {
                "description" : "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.",
                "format" : "google-duration",
                "type" : "string"
              },
              "importOnly" : {
                "description" : "Immutable. Whether this key may contain imported versions only.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "nextRotationTime" : {
                "description" : "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "primary" : {
                "$ref" : "#/components/schemas/CryptoKeyVersion"
              },
              "purpose" : {
                "description" : "Immutable. The immutable purpose of this CryptoKey.",
                "enum" : [ "CRYPTO_KEY_PURPOSE_UNSPECIFIED", "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT", "MAC" ],
                "type" : "string"
              },
              "rotationPeriod" : {
                "description" : "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-duration",
                "type" : "string"
              },
              "versionTemplate" : {
                "$ref" : "#/components/schemas/CryptoKeyVersionTemplate"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "3b0e8966-ca0c-3fd1-b7e4-75fc905d6efe",
    "name" : "Restore a CryptoKeyVersion in the DESTROY_SCHEDULED state. Upon restoration of t...",
    "request" : {
      "urlPath" : "/v1/Russ+Klocko:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"gjne7xm9rc3qker34gsqbudt1hpc10xzfbc9slj5e9acnnw4rsq5msvx4opxvtwyn98eqpy2rjkpp9prprkzwz0b7viyul51kn6nlkb6t4tstweudiu9hgbiaf0s8snmdm96xcvua3k2wrmq5bs6urx4tm7vjx2ac7777b660g3y43q0r0v71z10ruj5fl31j\", \"vty3bs8glm\", \"mwav9unixttfuq3z18c3jopp6ctfekqra11uqwu2yvro4vb6mindbrb3chco9wvfhsqorlyievnvg8175zpvichi8aqfmcvic9uowyzaj7lxo7xy08ep2vm0vgsuibbxmn8l805f444rpamm9ldvo4us8rxuhlzbbrmhlyc86xdnrj6br1j1vrhn32erfyo5zlkqhc\" ],\n      \"caviumCerts\" : [ \"8sa6pqasg5rv2vjd9n8cznmkg0t6qw5bvyaeu4rqj6zszjin7yinm8dg78o9qs7hen0uk8ugveddjdsfoug8wfsyt2bue0xk6afk\", \"rj2qdb3eqqnuq5pdfvipt5ubeve88v0o8gquzqko45kqdcb9rtu71q8qwqf0l7fookeyyw2m7qavp27ihp8ub5teh500hx6mgl0e00fy3ney68juonq8jod8tjx\", \"y3evo31tqq4i8bjxdpo\", \"jjcg8ekwlw8xhr9qn03cx2wkmkmouj0zhi2j7p9y7nitnkwusetssuq9c3jolo6knscm8syrfgdm4eleco\" ],\n      \"googlePartitionCerts\" : [ \"rqxqt2ier4209yc6pxbvgqu1d4llzonkwboxi5jb5vywcum46omwtcbsvxzsrow638klc0q9f7njcsr6\", \"vx0rwideeyhm6pwqolb842eua07q7o83uxg15exrfer7\" ]\n    },\n    \"content\" : \"Vel quis minus natus aliquam ipsum molestias officia. Deleniti qui dolores aut. Perferendis blanditiis quam architecto consequatur sed nihil.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"cnh3cd75jicd7ml8akrywmkljeezqz0wl81dzgw4nuuodrw316mr5wpz07kpw2mhh2o0s2qmjw9tf0v8k03wo8cznnxijqzl08fb18wg9j4wdi387ktfvky36780w5c34adgs4257wwpyn1dqu4avmd27qixjmz4fmj9uccxcbpfcpnfp0lr4xyl6tmak927hekbzj\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/172250\"\n  },\n  \"importJob\" : \"pzz4yhpyrxnki9pdre5c16zpavaqi48n76w577wfpj0w17bk3b1uktk3\",\n  \"generateTime\" : \"2022-12-25T14:58:48.710725Z\",\n  \"destroyTime\" : \"2022-11-09T15:48:48.710756Z\",\n  \"destroyEventTime\" : \"2022-11-02T13:24:48.710788Z\",\n  \"importFailureReason\" : \"pz2y38qqxykpxhcs9r127j9wr25n831pawl33jd57fzc7ni4n5ylsln4\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-05-04T13:11:48.710831Z\",\n  \"name\" : \"Mr. Treena Crooks\",\n  \"state\" : \"ENABLED\",\n  \"protectionLevel\" : \"HSM\",\n  \"importTime\" : \"2022-12-19T13:38:48.710923Z\",\n  \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_2048\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3b0e8966-ca0c-3fd1-b7e4-75fc905d6efe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "9ad4578e-9c3c-342b-9adb-d0b5b6c6ccf4",
    "name" : "Verifies MAC tag using a CryptoKeyVersion with CryptoKey.purpose MAC, and return...",
    "request" : {
      "urlPath" : "/v1/Donnell+Maggio:macVerify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : false,\n  \"name\" : \"Naoma Bartoletti\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n  \"verifiedMacCrc32c\" : true,\n  \"verifiedSuccessIntegrity\" : false,\n  \"verifiedDataCrc32c\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ad4578e-9c3c-342b-9adb-d0b5b6c6ccf4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macVerify",
          "schema" : {
            "description" : "Response message for KeyManagementService.MacVerify.",
            "properties" : {
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for verification. Check this field to verify that the intended resource was used for verification.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for verification.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "success" : {
                "description" : "This field indicates whether or not the verification operation for MacVerifyRequest.mac over MacVerifyRequest.data was successful.",
                "type" : "boolean"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacVerifyRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedMacCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacVerifyRequest.mac_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.mac_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.mac_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedSuccessIntegrity" : {
                "description" : "Integrity verification field. This value is used for the integrity verification of [MacVerifyResponse.success]. If the value of this field contradicts the value of [MacVerifyResponse.success], discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "8d1a787e-23bb-3281-8767-dd375ae6f7b6",
    "name" : "Signs data using a CryptoKeyVersion with CryptoKey.purpose MAC, producing a tag ...",
    "request" : {
      "urlPath" : "/v1/Mr.+Fredrick+Murazik:macSign",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"macCrc32c\" : \"zi9rpq9qxbsbpke25oqsdqe866toemyjmu2v7ahxo1qtc1mgfxbfocepnaeywyzc56c0331x44ecmx5rodrdv9mx\",\n  \"name\" : \"Mr. Willard Zboncak\",\n  \"protectionLevel\" : \"HSM\",\n  \"mac\" : \"oxcdk21hr4tel01b0z2zy4fcarbpmbc6vx6ktzwdarwdmwwxwbc5430mhfx9ayc5ux6cwtmtl85o5ehnllqsd29odnbqmx6uyjfmgh07fr8hvuu4ry7r5v5jr6s9ek7tyh1i6q2vm06dnxohq2ntpsamj26\",\n  \"verifiedDataCrc32c\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d1a787e-23bb-3281-8767-dd375ae6f7b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macSign",
          "schema" : {
            "description" : "Response message for KeyManagementService.MacSign.",
            "properties" : {
              "mac" : {
                "description" : "The created signature.",
                "format" : "byte",
                "type" : "string"
              },
              "macCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned MacSignResponse.mac. An integrity check of MacSignResponse.mac can be performed by computing the CRC32C checksum of MacSignResponse.mac and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for signing.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "75d3ebcf-1be0-314a-8418-0938273126aa",
    "name" : "Encrypts data, so that it can only be recovered by a call to Decrypt. The Crypto...",
    "request" : {
      "urlPath" : "/v1/Murray+Bogan+DDS:encrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verifiedPlaintextCrc32c\" : true,\n  \"ciphertext\" : \"xf6ixi\",\n  \"verifiedAdditionalAuthenticatedDataCrc32c\" : false,\n  \"name\" : \"Mark Schamberger\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\",\n  \"ciphertextCrc32c\" : \"1drqph8ktt1g9e07pkoew8qs3by356uxujazf1q5n1pf0tchilwe9w2wm1vwr08zks0bvyhrds9fuhlgu39r63fuffvmr5k6wbh9uwmmt7e1gwy2j4rrf92bwrhy4tf0m119mfci01mspsohv6ewgt7je0psa1tlicco2a1vh2ihydjrrsiem15i0i7el55fjdy5\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75d3ebcf-1be0-314a-8418-0938273126aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.Encrypt.",
            "properties" : {
              "ciphertext" : {
                "description" : "The encrypted data.",
                "format" : "byte",
                "type" : "string"
              },
              "ciphertextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned EncryptResponse.ciphertext. An integrity check of EncryptResponse.ciphertext can be performed by computing the CRC32C checksum of EncryptResponse.ciphertext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used in encryption. Check this field to verify that the intended resource was used for encryption.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in encryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedAdditionalAuthenticatedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether EncryptRequest.additional_authenticated_data_crc32c was received by KeyManagementService and used for the integrity verification of the AAD. A false value of this field indicates either that EncryptRequest.additional_authenticated_data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.additional_authenticated_data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedPlaintextCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether EncryptRequest.plaintext_crc32c was received by KeyManagementService and used for the integrity verification of the plaintext. A false value of this field indicates either that EncryptRequest.plaintext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.plaintext_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "69050479-ea60-3892-9dee-9c3e56e0ef33",
    "name" : "Schedule a CryptoKeyVersion for destruction. Upon calling this method, CryptoKey...",
    "request" : {
      "urlPath" : "/v1/Miss+Alva+Leffler:destroy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"uoph1celkqxx44ms2spv3knj5wgstdvxjec4k9ibnrgd4djojsz4003j4xfj27cwt4rojsg8rh1ak9a49qw0a8bnxqzinamyuv38qu3s75wwm9kkqyc2rpic6561zfddzl4syv3zdx64mopsgokirit21cqfvms3b475ae9xznxh6zko4sqx48j132q0pisy0ri72w\", \"9hofv1y7ghrnmym0urobfwdz097y2reukxhzjk85wlnz45oc\", \"1tblqqymjgobi29g9fe005vv4cl13s40a5ayouzjo9fqm8yuli2npwkn8uztyepctsttktovgaofajolgm12q6stpyokewrry25diw7zfy7fc5hlrzbkfovoihds8fs5cfeyj9begnvc9q46p9sqjpt4g9y9a66hrm3xpwp50g2kq9dzvzn\", \"zzo02k0dd3fjxj7qj4xqwo4owtfw14rxcdofbw0gaulbsskt2qm1z88kw47umf50e1kblkcxl1to5rfw8863u6aonvbrwmedl34rtxddtmhq4znr9nba3zq9dslf9hfn8n3bhuqgvaqt9hlefh6obmsi7deuf2ebkwyf2\", \"o6ia5url6904x9aj94qxwdvobg87wwknwayebrkd\", \"9ek9sdw5afh6h64q0dl58kteeo9sr53mnw6h4c0sa5cm0gyxa662m88eqkz0o7tcui7ghmfq8zuvhuhvbdz5w8sy7eyayxtgmri0waxaonf1du3xjqpm555rvf\" ],\n      \"caviumCerts\" : [ \"2liogikub07bses7a1vt0on3nh0d0l3hxcvt7o3ubte8ihai3r6gx3rsvchrjfjtqfkotemlqrdob9qnhk62evamv7c94snq5q126qtj5rdpck7fjoor71qy1pyumrmvz7166i0p71e0p7kwpyn3qc53ojycbg7pzocfgpgas\", \"xb1tcc94rsjq0zwdd2k44zh8wcvwizotvk505339y4kxodj67ffhhxgajfkdqrw2xyra6llsx\", \"8ukprup876bdbnqgwvi10o66cr1ar0rmhv3jpuavxjopklj8puvs5q21f41gw34ovp0itcueb1xfw28wrfmdm6npcd4q5p4c44e6cyi\", \"adk9cklpifvgqx326dro9tyt4p7qo7ns82sqatxqukc\", \"rkxq8f406hs8q54ritd98nrmb5lfz9pcdskeh8l0pvwjnsjbi21qyfw4up5hvvpu8c3up0thdalwsuho103295vchjrhqvq3kxwaob6un4llpt2nvrhr10rz32rdbers5ihyzecccumsb51jo3lzfcekisxg\", \"gym8cj4h5rm8rs49te\", \"etgq95iiceb9igwdrr5f4kp2pue0n4mwb7m00yhj12wsbh216zjfbrbnuw6pifyh6ml637wg8b8gx7pnytxk74k559fss62xv1bsui3ynm80h46qtiz3a5g6kq525ll8\", \"0o0q0br3atmk2gpe2539p6338803n4j4ntv7k33uef3dlkdzasaznzyley6kxo89h8ca8u1mfrg360ea4iupyuh1vw6bqua3rr8tllflokpgwhcwnfz5gayiquo1euv203rrhv0cqw9mbi1svg9qgzdq\" ],\n      \"googlePartitionCerts\" : [ \"2146y\", \"ku1pk0mm8f8aj6oez3woi57mptwqe0jvz1u8kdmjx9aembj212jnq8jl2xbwxepsl8v1dg2x0goofoxrl\", \"8bezc8767yka5lvyhlrlcmkgt56sah50jp332iygkhc80td1mfkfijrjm01xad5kg3tmwf5i7kax7ugz6ao3lyewvljvd03rhwkz6hzar8jia\" ]\n    },\n    \"content\" : \"Nobis deserunt odio. Delectus dolores temporibus. Sint veritatis et error ut. Ipsa sit voluptas.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"1vuxz1hqpfza8xiosuaulzjhy7v9x47pbs2ev2xy6vnvpix02kf42spmg3wmwspmnkkx68v1i8u3p5zx4620n\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/535564\"\n  },\n  \"importJob\" : \"8stx41olxjp4aktweb00c8itkexgni2kf3n6qln34amxewt2miy2i3l80xd57dq2xrp40q7hckssituekl2tlnem0bqkpceoq9ckynw3cp378vuie34jylbzdjd06221z9z6zc5rgocd16kd61hi\",\n  \"generateTime\" : \"2022-09-18T16:55:48.709355Z\",\n  \"destroyTime\" : \"2022-11-06T16:18:48.709383Z\",\n  \"destroyEventTime\" : \"2023-01-13T14:42:48.709412Z\",\n  \"importFailureReason\" : \"pys4pope848oi38d9mrjej0qlcmzsidfrvkjbswpyplcfanivbn6we4iil5kk4llggqf7uurvv0n4cgin3jtq06v5io19ij04jpa4hsnd0t42kdtspytjl50ynwse54l6ekialm2fykpv2rx6fw48de218cswr\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-12-14T15:42:48.709459Z\",\n  \"name\" : \"Jonas Denesik\",\n  \"state\" : \"DISABLED\",\n  \"protectionLevel\" : \"EXTERNAL\",\n  \"importTime\" : \"2022-12-21T13:34:48.709547Z\",\n  \"algorithm\" : \"HMAC_SHA256\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "69050479-ea60-3892-9dee-9c3e56e0ef33",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "b77ab163-9799-3e29-86f4-b08784221bee",
    "name" : "Decrypts data that was protected by Encrypt. The CryptoKey.purpose must be ENCRY...",
    "request" : {
      "urlPath" : "/v1/Irmgard+Stamm:decrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"plaintextCrc32c\" : \"9yiemgaza4epvox15zpjr4p04jrsvefi854zywv26i3jqz407o8geccfxz3if5mt1hwxp417th26ksck1vnolx1ysxwgw0sgifyfxjighwtbdlomaixecsgz2uxld1lj2tx2z3o2xjiysjmez\",\n  \"plaintext\" : \"zub912dl4oahxjm0tu4t65zf8134hgk16988\",\n  \"usedPrimary\" : true,\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b77ab163-9799-3e29-86f4-b08784221bee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.Decrypt.",
            "properties" : {
              "plaintext" : {
                "description" : "The decrypted data originally supplied in EncryptRequest.plaintext.",
                "format" : "byte",
                "type" : "string"
              },
              "plaintextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned DecryptResponse.plaintext. An integrity check of DecryptResponse.plaintext can be performed by computing the CRC32C checksum of DecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: receiving this response message indicates that KeyManagementService is able to successfully decrypt the ciphertext. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in decryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "usedPrimary" : {
                "description" : "Whether the Decryption was performed using the primary key version.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "44eaec14-3551-366e-a480-51004280f0ef",
    "name" : "Signs data using a CryptoKeyVersion with CryptoKey.purpose ASYMMETRIC_SIGN, prod...",
    "request" : {
      "urlPath" : "/v1/Roselle+Skiles+DDS:asymmetricSign",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verifiedDigestCrc32c\" : true,\n  \"signature\" : \"8hxqrghy2bw1pk1e95o58ulqiehvz2eztmb1m1rpq4kavapp7fqe0r8pkak8r700lu9phjdl\",\n  \"signatureCrc32c\" : \"u8z3ny64pdtbj0l8d0g3xgmpi3qip4fzl5pd40vto5y3o4fvmk47bv8vj6img4fqqmrsjgvl5klht1zv4n5pt6tbexsugyb0y31zlvgx6kc1lxnrzxnnsj3gejkjyyxbka6n6y992ijvp6t3xdw74cznv9c7h0\",\n  \"name\" : \"Hiroko Armstrong PhD\",\n  \"protectionLevel\" : \"SOFTWARE\",\n  \"verifiedDataCrc32c\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "44eaec14-3551-366e-a480-51004280f0ef",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign",
          "schema" : {
            "description" : "Response message for KeyManagementService.AsymmetricSign.",
            "properties" : {
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for signing.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "signature" : {
                "description" : "The created signature.",
                "format" : "byte",
                "type" : "string"
              },
              "signatureCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned AsymmetricSignResponse.signature. An integrity check of AsymmetricSignResponse.signature can be performed by computing the CRC32C checksum of AsymmetricSignResponse.signature and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that AsymmetricSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedDigestCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricSignRequest.digest_crc32c was received by KeyManagementService and used for the integrity verification of the digest. A false value of this field indicates either that AsymmetricSignRequest.digest_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.digest_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d2d278bd-e80e-3eb6-b783-aa1dac925a21",
    "name" : "Decrypts data that was encrypted with a public key retrieved from GetPublicKey c...",
    "request" : {
      "urlPath" : "/v1/Long+Weimann:asymmetricDecrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"plaintextCrc32c\" : \"sohhrawwc7gwyualkhz4hg0dvi7ede96mmloimzq1j7hzexsuskdb9b\",\n  \"verifiedCiphertextCrc32c\" : true,\n  \"plaintext\" : \"8gha76sq777memdmeux9ps7v9nbwh369mspv02ti1q978o5agxr7wnqozzvo9jmbsmxvlt27f4s6vqonv7wtoovqf4fdf9\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2d278bd-e80e-3eb6-b783-aa1dac925a21",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.AsymmetricDecrypt.",
            "properties" : {
              "plaintext" : {
                "description" : "The decrypted data originally encrypted with the matching public key.",
                "format" : "byte",
                "type" : "string"
              },
              "plaintextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned AsymmetricDecryptResponse.plaintext. An integrity check of AsymmetricDecryptResponse.plaintext can be performed by computing the CRC32C checksum of AsymmetricDecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in decryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedCiphertextCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricDecryptRequest.ciphertext_crc32c was received by KeyManagementService and used for the integrity verification of the ciphertext. A false value of this field indicates either that AsymmetricDecryptRequest.ciphertext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricDecryptRequest.ciphertext_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "ffb338d8-2bb4-3bed-81f2-87b0d7fd9886",
    "name" : "Returns the public key for the given CryptoKeyVersion. The CryptoKey.purpose mus...",
    "request" : {
      "urlPath" : "/v1/Leon+O%27Reilly/publicKey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Karleen Kemmer IV\",\n  \"pem\" : \"fwmsu0rkl6uxfl7q0pxnsey9rieseale09n9h999cwla1w3dadnl3zez0jeqvhyan0zi9gp5xl629eq3ernowkr6xccamykgu8k9ocb9ksn2p\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\",\n  \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_3072\",\n  \"pemCrc32c\" : \"27fvf5m5xagaqhnn49anlzc52lqngs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffb338d8-2bb4-3bed-81f2-87b0d7fd9886",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey",
          "schema" : {
            "description" : "The public key for a given CryptoKeyVersion. Obtained via GetPublicKey.",
            "properties" : {
              "algorithm" : {
                "description" : "The Algorithm associated with this key.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the CryptoKeyVersion public key. Provided here for verification. NOTE: This field is in Beta.",
                "type" : "string"
              },
              "pem" : {
                "description" : "The public key, encoded in PEM format. For more information, see the [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and [Textual Encoding of Subject Public Key Info] (https://tools.ietf.org/html/rfc7468#section-13).",
                "type" : "string"
              },
              "pemCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned PublicKey.pem. An integrity check of PublicKey.pem can be performed by computing the CRC32C checksum of PublicKey.pem and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type. NOTE: This field is in Beta.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion public key.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "8c7654c1-4a3f-355c-8d0a-d5ecc9bb0426",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Mae+McLaughlin/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"tqofveyc5l7uqosv194vznv89qq0kmdyl597yjx1vygue82rkxh98nilt35zr1ip7xm96mq24eetyj7nx3zciya2htnotd0qyr7y5rx94vlgfcvzzl337patxz0yjdfiuhjx8534inpflgmbz6lb57iohine7m7vw\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Reva Thompson\",\n    \"locationId\" : \"4ww4\",\n    \"name\" : \"Coleman Gleichner\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8c7654c1-4a3f-355c-8d0a-d5ecc9bb0426",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "00c4d78b-f23c-3561-b57b-4ab5bce5e605",
    "name" : "Update a CryptoKeyVersion's metadata. state may be changed between ENABLED and D...",
    "request" : {
      "urlPath" : "/v1/Justine+Skiles+Sr.",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"1kep9o7rk1osyn3hcyydq\", \"xz51xdypopftl7plmxarh8pvvc6odpj1fzut4tdrryw3b0heeild8t05ow3d9mj962to8dpqcisptfemxjausq9ardx8ery1jugtn64u4xpez7cjtdkcwtf6yku00kjdu1ypl8rjf8jmrpay\", \"0taap23pmqpqy50ijq7z350adq4fwyy3q1ah0t04966hrab4lc1qzptesv0c6ilgdpbfd7h6q85cyubpmgtcvahtgfaacgw51ukcckgkt3hqoblzq7cciwfgru0uyhf6eflf88rzi7qscgt4dgdcsjkdut1klvl48pjpajzgl\", \"u3wylnbo0txnipzvo7tt\", \"mm5tccwu5c2hxqzc68r6ummh4g08adn3h5jz11u7wwt5aqvfert90q6fe4uwqs3njm3z0g52z9un54s4nan75s0xnvfyerxksj8tkfnkd0\", \"opypn1ey2p19gt1t048neykma3smhgtvoef585kds67zw17gq6rm9r2aavomhqjdoass1mqfvd6ljqi6zgjf65mrao24g3woqz9soblw4g9xr12vmhy2b6cdld32z891726koto0a2tye049zvqznlxvwofjq04wly6c1vz2q62o3anazsnr\", \"1nujawzu3newla82hoqbobf1f0cxqamy9ovob5i37dl3gq8gsapnxwms5rnwke1yovwttjy97297h0n40n0ylmlmk3omakhf5zkv8s\" ],\n      \"caviumCerts\" : [ \"1uwrbz8wbtanpt4mqsfmpjs697g60mt7mbssr4jdazv71qcj20qx1q1b5zx2pov9bjrxjmiafg64g1tgpc7ejnoww3xq21gm0gvi1o6gpo9m8hg1us6oxzxqmjo4vl1kevajoy6ihnoa3rzlq0jled1o0l6aodt3d1hhb1iquld2rac5go10h5nf6cq7dg0dggszwkj\" ],\n      \"googlePartitionCerts\" : [ \"6psdd02yrtq3gcbuew1efvgq9yxg4svgs9vmx38vipy1r1cdoot34bk1bpj1eki4ti6sb2o2n7chrxa4tuwar5surr6w8ea7xjmacjhp42k64pw8zf38cms3ikgku1q02onkemweqjm1e0kfr5ok35flo0nfmq6b\", \"9smmiboslbakuv2rpuqr7xikx0roc7vodh9nz4sx0t4g0rx7eex3mhoq3euoib6q7qnbpqt\", \"z0eou8lb8117a8np3rjxpioqmktmrwyuczltgz7uljbhka91byh7r9x4t2pys2hutnvdvbrwreh6dtbe1b4fwyhvqnfvhsmppawtkbpq4yoxkmwk82xcd6i15rv7ftjmwylwvzl8evfvy0recn3m64\", \"1ejmqr4gkelwt0q7jp2pbl86m9ep89tlvp3oj21mcpp6pz1stszvoq0eb98e9932542c9mx4ifqnjt8agfttsr\", \"ycza5sk8cn4b2zoshmmtb6bzuj6belpzfn6186azca2jxfn9a0f9bqa2vbb2z61rikvl31k07l3to95fgt9rd9ybaxante768b2mlkjt33bkjlf\", \"5tgj6m51djh1h3pnq3du0ef2q1q4cxbc8mjzye1yj44elzcjxid1n606hamqvvccvaxi938kgvyq0lk4j6aseoqoldgl3mkbdv27y8jvkjs9eocw56406xq1y90qxvqv\", \"03ezmje7f6a4hzt5r1weoca\", \"873ncfvduey4tzokcn82snr2y870m35y25kogye1pfiybmvd194o1i3an9xv6q13g71gj2ylb4mfm9p0cslnxk8vpplwz0afllc3j7kkif319j1fsq0cu44ypgznk6n7xvjec84st3s3\" ]\n    },\n    \"content\" : \"Recusandae nisi explicabo ut ullam. Iusto laudantium occaecati. Sit eligendi voluptatem officia reprehenderit atque aliquid.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"mtrf4xl7u6r4i33p1hx97kitcz6k2j7kr75n6mg9um1sq4qwj8s20ihfhx36sewekt2\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/395312\"\n  },\n  \"importJob\" : \"41v7tjfy10wxl5w0ftei6fkxa0wmciwxe4620fcdyfhiaw3xyg8ojmo35ot07e\",\n  \"generateTime\" : \"2022-03-17T16:22:48.707286Z\",\n  \"destroyTime\" : \"2022-04-16T13:53:48.707334Z\",\n  \"destroyEventTime\" : \"2022-05-07T14:16:48.707366Z\",\n  \"importFailureReason\" : \"bvtbdywfzvcxiavbme1f3vzng9zw704lkpzkmu090vdelh22yc64doe1jcmc8cqn7xgrmzo\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-08-21T13:11:48.707465Z\",\n  \"name\" : \"Merideth Wolf\",\n  \"state\" : \"PENDING_IMPORT\",\n  \"protectionLevel\" : \"EXTERNAL\",\n  \"importTime\" : \"2022-08-06T15:31:48.70758Z\",\n  \"algorithm\" : \"RSA_SIGN_PSS_2048_SHA256\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00c4d78b-f23c-3561-b57b-4ab5bce5e605",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "f2de23d2-3b03-304d-b5b6-6967ecad5add",
    "name" : "Returns metadata for a given ImportJob.",
    "request" : {
      "urlPath" : "/v1/Raymond+Zemlak+V",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expireEventTime\" : \"2022-05-06T15:53:48.706157Z\",\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"393l5ka7wehfwff0cw85o2wftburkg9bjqw4tsoqlh5bz9ifrypkz93nb8knongaqv7c7jza6hbcdxq335qeh1h5k0jvowbhdi7snl1085kol5c9turmsb5z79z6e9cgnd5t9krua5g81au6o4cd2j3b1h09085bs7l216mi0eya7g6cp3ca4t7f\" ],\n      \"caviumCerts\" : [ \"2hfbzo95wchysqwag8t0mzozdfnw5hkt7wf1rtg9t2b7kzw9e8q41m8nn9mkg26j6zmfqs3ue15k8m2j4aplqlnvb107ikw\", \"w9pwelmtpwhccz6j2u33zy2e22znr1wo0od6gdu4sxwhi4bek0jd52rmrobv98i1xm6yjvwpsad2xj8zcy3chajhjgf9z0dz6i1wmyov2atvepvbvhe8o5c3nxc64wyi7tq2amjfdis41gxh4595iv9x6ttg5cfkx303bn38tdpkxyzej63f34i24p74mshjizrj\", \"dws0wq79jcvenei4k6wvmou8owccsco4bfpnqxvi8wvbj8bedgtpbd4moldr89susgrqno0q4yitna3oal9lwcmhl6ncdd4g72rgejo83rkzq1x0fhhmmhkvqrhkvd6kgtza7e9sd\" ],\n      \"googlePartitionCerts\" : [ \"h2s6izb\", \"a10hypj11jigrw2doi60se0r8z2ng4432ajrcn8dij7wf\", \"3pd041wbmmry8w2h9uv4omm0g6kp7sgpq9le2yta9noo01mmxoi262q24b4xj2swipxhkeubyq5fomyg0kff439plcv98zih6ykdc5r48im9vzcmgnl7re1l7tkxnywhjcq6bnw5gcwsnlr844taj1s\" ]\n    },\n    \"content\" : \"Eligendi officia et rem. Enim ut et aperiam molestiae blanditiis. Voluptatem repellat facere molestias voluptas consequatur tenetur. Et ut et dolore sunt.\"\n  },\n  \"expireTime\" : \"2022-11-23T13:09:48.706338Z\",\n  \"createTime\" : \"2022-10-13T14:16:48.706369Z\",\n  \"importMethod\" : \"RSA_OAEP_3072_SHA1_AES_256\",\n  \"name\" : \"Micheal Nicolas\",\n  \"publicKey\" : {\n    \"pem\" : \"f25c4641ztprn3yo4qfb8tnvx4a6hqzyg9xfpzdsgxzoqpux19pnfktsgy5wqrixi1bd79gellfgg5wukcwsvf91hwlcw54t3sn2ti3xwfj5a18v1vr3zr0pif6m\"\n  },\n  \"state\" : \"PENDING_GENERATION\",\n  \"generateTime\" : \"2022-03-31T15:50:48.706496Z\",\n  \"protectionLevel\" : \"HSM\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f2de23d2-3b03-304d-b5b6-6967ecad5add",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.get",
          "schema" : {
            "description" : "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
            "properties" : {
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this ImportJob was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireEventTime" : {
                "description" : "Output only. The time this ImportJob expired. Only present if state is EXPIRED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generateTime" : {
                "description" : "Output only. The time this ImportJob's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importMethod" : {
                "description" : "Required. Immutable. The wrapping method to be used for incoming key material.",
                "enum" : [ "IMPORT_METHOD_UNSPECIFIED", "RSA_OAEP_3072_SHA1_AES_256", "RSA_OAEP_4096_SHA1_AES_256", "RSA_OAEP_3072_SHA256_AES_256", "RSA_OAEP_4096_SHA256_AES_256", "RSA_OAEP_3072_SHA256", "RSA_OAEP_4096_SHA256" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "publicKey" : {
                "$ref" : "#/components/schemas/WrappingPublicKey"
              },
              "state" : {
                "description" : "Output only. The current state of the ImportJob, indicating if it can be used.",
                "enum" : [ "IMPORT_JOB_STATE_UNSPECIFIED", "PENDING_GENERATION", "ACTIVE", "EXPIRED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "88cc6981-3caf-3790-b196-281a2e7316f8",
    "name" : "Generate random bytes using the Cloud KMS randomness source in the provided loca...",
    "request" : {
      "urlPath" : "/v1/ziz1qviomrgq9nngoi90ue0ndt7eerktd6fc69q4n6roid:generateRandomBytes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataCrc32c\" : \"yq890wjqb2j6zeahy81a1xl868d1awsrz00nrtntlmubi8omz48eu9g3zapsu1kxav4ic\",\n  \"data\" : \"22eazsbvgvmukv9nmo5xdiyyzzoys6k29rglvttatjmhf8hznhqd6mwc3ek1b7lw1a1ni3z5tqe4lmv8f7c2vnf285l1ccgujnhvbig5ksuqy2p8gxbnp4wyuihqmka8am4e2\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "88cc6981-3caf-3790-b196-281a2e7316f8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "cloudkms.projects.locations.generateRandomBytes",
          "schema" : {
            "description" : "Response message for KeyManagementService.GenerateRandomBytes.",
            "properties" : {
              "data" : {
                "description" : "The generated data.",
                "format" : "byte",
                "type" : "string"
              },
              "dataCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned GenerateRandomBytesResponse.data. An integrity check of GenerateRandomBytesResponse.data can be performed by computing the CRC32C checksum of GenerateRandomBytesResponse.data and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  } ]
}