{
  "mappings" : [ {
    "id" : "8bc512d3-5c6b-41af-b2dd-6e0750060c2d",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/2azz1913dls1jm21xcl4:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"n66v9wbi6afcvk76usek7g1xrd2u6kidzdhfapmsfupga525rpe9uzsazkekd\", \"wpmuwmv98x62culkxu2p0102w7zlkz71n6gyy7j0ysbnm9nd5ksoay7uyyzb3kt6149htganfczbuu13oelng1qs35ca5w8m5ncsu9blxnyx5rqqxgflcdu98oulljlpdvti0mf0mr8u543ues4mcvqnsrd04g7fr5o0bihz06lpke8qdnlf\", \"d00j5586qyah1fl222nvd78l7l2fsuagrvlshpayo1g752gj6sxx190tk0uy275b4ywn\", \"q5qi3srxoe4s28bva9p8qqailwr3y1h6ffb5htu3w88iuhm1pq8dk2zazrzp3jr4pfpqktf9iccqsy9gq2ziaj5n5i7ok879cwlodo33qme55wr57lm2myknnk1z9381c6cfb81tr3kysiw62396az7stgov2ezg85ssuz6rmt81h51cscg5y16cif7bwfb\", \"pp9h\", \"nky5z2at9ox62lmi4gwuzk23k77vu14pdnek4lclio4l2b3qt4wjsx5q3up9gug1ppfbq5nyz9uuasr3pqodjh1c2zjxswvceo\", \"sagl0s737rs4gprisoneertp562fl4dfcw87ngmjq1ni8n7u4qxcmjtvao5p53axhihxag84qdcxtjh2kljzclzrgi2uwei2okd7te0pymw4z25sroppdb4a7kvdaht2dbitc1r7\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8bc512d3-5c6b-41af-b2dd-6e0750060c2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.711032Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "75250914-bd73-4242-a0a1-da419be57404",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/yj7qiyy4tfuwjawcllie8b3a08vq8kynlq9h5i9a:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"8rrp90p46j1b27uuhuy4m6ta0flwwwsvhcim9hmf4jgu43tfs0rlpsafm14rfqyzuk5bv2lung85g9earwofnxk92q1ouko1y\",\n      \"description\" : \"Incidunt quia soluta. Facere voluptatem vitae. Ipsam molestiae eum cupiditate rerum ut.\",\n      \"location\" : \"rtb37m5vsz6mp0u838phd21itpaonr92cflm1ux9mvacewlolcuvuskt63581acrca6i5vbd0drcaq5z4k83l6p69e9xfdb4v\",\n      \"title\" : \"Ullam architecto asperiores repudiandae maiores quo.\"\n    },\n    \"role\" : \"6t6dokwxy4v2xoitybust2ukhh3i0f81x0724pty6nd5th5olw04nlkzc24si36a23c7x3sbauiklcyw2r02cipvu1nl85g2omkujhdz6bo7rozxhbpx1uzchg1brgcpgin5\",\n    \"members\" : [ \"8ljpe09ac6flkuj3yskueb93i2kz5lo24egtc8bbvokq0zyc44etycu4noiu4majqdy083r5cwfpbt44vr6623ah974p9alw6gyfmq\", \"339a8trte4swxnduj3rvqif5gmco1xd86iiykar8rtopzg9xm8ppywzkujl\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"n45mko38mp6okhftfysw7ymp2o491bbijeyk7a5pezjmiploiw6hv0oyk616ag4uu7m1hjykb21zfqaeeiyuzaw8kqho8e2slbz3k0pykrzy0zz8t0wv3df27rruoy26wdfciva5y9bgfwn1lrcrky3s9qhp8l7a26cmy6mj0ivl2tq9\",\n      \"description\" : \"Praesentium asperiores quas doloremque at et et ipsa. In repellendus cumque aut. Distinctio nam magni hic repudiandae expedita. Molestiae omnis deserunt. Iste itaque nostrum autem.\",\n      \"location\" : \"k74qg18kcgb9inp8zoskim47n8dzxpe3s0vj9dw08fa3f3rwd20nqi7ej6xmewnt38wxtfckwigw9d9d1gnxke3r\",\n      \"title\" : \"Consequatur laboriosam odit.\"\n    },\n    \"role\" : \"mrjkt2jl3xvfcyzj68juuk582k4w985o35bbrhq87oz3vl4mhsbwl8yppavvwcmrtg41ryppvtbqiv2task70ke0j4sgwquweykyp5y7gm5p44thgz4zn38xdntn5wq8z5uqmbjbnxr0id\",\n    \"members\" : [ \"436w2qyjueri2pd53956llyrd3blm4f4d2wfgtpymtfvdsqnqzhui4rp7\", \"mzjwjrke9tms81x0282jtl2fdnb0o45kzza9ssktp04280t0mtiuway97olds0fvnsh862snlgoui1yr7qe2zu3weh428zwkut69q94n16y5yc0m1poa12tv3lu0tvvmkjogvmn6tqis\", \"qw6mwq43xc3bz787xet0v5ekgugq3hkngkbdsqx7l2y0mdplaj8i3v1pppoy8x2qgserlujac758674rnm8lxunznuazhz8gne4v2h18zpnnc2elcto3vy4xadq1xcdjoff6101w\", \"6bb8u0t84yedtrvjawi5r1wnimqmffvyropxlql8l9hhcu18d6l372zq0bg5axahkfqhs6fpcs3ybdt5mlhv9wdfxd8uju5fvmaequazdrek79w1zcuh47fq2djqv1hgqvp6ryg9\", \"tm1qt2fprcl3dazzoti74ufxmho928sirq0qi0qo6lrqqyqbm8fn5yqxhvwffajit9jgroibi2prtuidq4hjweq8y0llpk5103xzpxlyzo0necmrn54zx355zf\", \"yso9\", \"3m9lkku4i14b0fs92tq1rch0dk9a0buksj3oqd241j3w65katckn7wb0qwzwwlt140nvh9z4lx0b04w8n8f4f23iyye5cekqr0hi767mizdfwgaoh9xz01q8cuhx9eufy4larmw03i047llj18bh4fqkspclg5rg1iq3kap0suhk12l7root4\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dho602z5qsdf98y6tjgt5123mqv8zlqxjp4xwk9hdqctzkph5kh3ea8e8o4ceauh34e86txcjaf88srbh62\",\n      \"description\" : \"Similique debitis dolorum voluptatem. Praesentium odit alias est blanditiis. Est perferendis soluta laboriosam consectetur. Sed culpa incidunt distinctio dolore culpa.\",\n      \"location\" : \"lk99k6mm8w8qptzgnkjaygu8e7ufgrzo42lsy0rxwzybe3y0dcg9ml5j2jbbfbw3yt05xeh9hdjuseeeozvxo9rotbfkde958xg0v4jtetpxvaldp29sw238d8cxmkqeh09xe6f9f0g27r6y3d\",\n      \"title\" : \"Omnis voluptatem velit rerum voluptatem sint quos et.\"\n    },\n    \"role\" : \"w41jzdydhacdkugef0mfu5pfvc27vn5fuhwt3de5w6fe7txgnob96lepzzexj5e7xllokltg2c12ef7sqk0qwhwozmj7il74d674wqvkmmdky5yrw04ube53fv42gqmm7mqlr3adja\",\n    \"members\" : [ \"gkv3pr0trxhh4cyyhwof20h61g0yyyrnx0f888zdcjd70baqli16koa5apx4hcy9dreemlstihpf3p52202rncg6p0gumqvh8te\", \"0o1q4dybw2bypk0fjt6du8\", \"nltgvw2tbs9drievk\", \"m59icnkjcf4wqaoog27wa56fdd27k9lm2j8jr2r6zcg9hui9lhyocidvahasi1fnm03r52foag9ck0ufgw3wg1zltlpmnl2b1t3scyjb2bv2groqxujoprouazot\", \"y6wmc4cm53ku11sc6536wxz\", \"erav2tgqnyhlcnb6oeq\", \"3n4oz4uwcbiljpzv1rbxoden73h82erpsscadfryg5ulbzpuhygzm2iv9t22iox04r6zejyf2i9mw16hp18yohxycgrrc8bv1jxp2276kk6304iex4f76t4q94da3cmwc1xqc5i30h59z957pe9hlcoxf8ngcah22cbftgu\", \"5a5u6qcyzx6fw0wemntpnvy27ga8wgk50r4yqeuehbqbpz5ornfggt2tu\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"q7gjidan36mqcs91ilkbvnxkgy99nfmpt9zbw8znxhnf4tde5fi0cdnd4jzwh21kgo52w1uasoowhwzkll8qhjzvzw71xfuunll0bx95sl7u47y6ke3\",\n      \"description\" : \"Omnis provident placeat aperiam architecto. Labore quae amet sint ipsa magnam velit. Ut animi eveniet aspernatur deserunt praesentium totam alias.\",\n      \"location\" : \"mmtky4mt0znlb4g0rpgt42o5msgvaqu1zbejkaqj2292ilp3jbfaijz73iwc9pypnff824t17k2d5v6m89e65veyuqsly4xcm5tx3e7j0mb91bfdeclh1pnib72y6bp0sdm6oyfjizjrxp8417oac3s8um5mo1\",\n      \"title\" : \"Accusantium illo aut quaerat.\"\n    },\n    \"role\" : \"gh5p1nrgxo8cdqtcq1jqkhxy91q4r5ics0ta3rfsbn4i06clq9bsmhnbggulv381h3mt38h4dymfmrxrmrnd988yxtr24pylg8gqdzfsdmm9nbxi1p91vn5zd7j37ggj4sn75v73j9cirajlb099it9am4fdynygy\",\n    \"members\" : [ \"zyahr79yozmj54b4l4htx29rbodik76s5q1hb6b\", \"j9vjy17zxcsnk8\", \"hw0tarfdima3z1wbwmoqiekml0a9pco2h6kyixn2p3ipddnszh2hwn0y0kdwlkussnit8p21pwkuwz9d0g8566zhymop1chz4\", \"644ujkvpt00p0782mazz9kdtcu3zx88x3v42mcguba\", \"wij8m4kyaztt3bu07mj1kxh075wtpmsa7mewo3v1t5sa839v2tosg09p94hujv7k7ajrn3ekz2bob9xkxo69ajgf4ne9gj6813e\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"k3x0hv6xbm3ic3zofwxuz5yewu5ccd4j0t8hq9pu39hgu9ztfzkinx4xlcjv6zkpeakoy0ovbf8tpgsw9x1uhktm57tzb4k6cc057b4dfsp0ds3408tx\",\n      \"description\" : \"Quia numquam culpa incidunt dolores. Odit dolores sequi dolore explicabo voluptatibus. Eligendi non perferendis.\",\n      \"location\" : \"ttdz9a3t4ajtark5ppfmnjma6ik1f2ofa84txq28nfigsfaggi7la1xd2xytj5cmfombkn5kma4839poimvvvuxagwx52br9nlh1o1pcn6xx30ax08rvze1x2ntg4p62\",\n      \"title\" : \"Fugit consectetur dignissimos.\"\n    },\n    \"role\" : \"abntk70mxp3j5i76khgu9tjqm\",\n    \"members\" : [ \"qwq28z8zf4u6bodf5toce4pm7g8dd3s8oiktevma194k53n2\", \"1z09yamumhfq5vcthfsu89lzmlzhxv7xmdaxxy1kh419mewbowyu93ft8oaexxf6xdl2iiqzr511idfsk3\", \"oztoanpnnx2b0nah5iolb3r6lmkm933hwzg116ebw31wtz2zl4rrp66cbxy0aje4x0zlggw928xjp5rc82n7up3ordok03fhik1i0rivm0pvywi\", \"vk2vbfxbcvjeiy9575z36wdk5z2a74gv4m5umlbyv1kk1m89qlrn0wqvw\", \"bdzpjhb7y7xv8fyd2pubz48jexqdpwuqzuk1gor29bfhflucscepha7vc22k15dh844ive5kaywxx9xotmaua2e1xn8b18qa2n5gm4i656cgk5xwpnmmhre4y8zqei5vxclcj2qdltf9apjtkcnu1m\", \"agk8yhmaeoy35srzfy6kuqmczn70a7pmjcmwlcd0xkmngzzeughpbqfsg587zxlatdaa0miktrqrwrnwrd0nyvq8wuvqruif6j6onwrp1f18tin95agpyemoajwqyy69eyvxj\", \"4lqkek0j50d2zmni74t85lflijw0r25lzbrm440xjvq95m9u4ycsy94842hdejamvtspthalboo1rhu47ite3k25exyuv11af5ukkrot4ekro3o41asji7wpvo2tevq3z2kzunoyyvlix752g9m9pdcssrdg2e5jjoiyns07i\", \"xpkgc1ffkz18jn2z86dusg38xqis9odgvb\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"djqgdu7b1499yu1jzukomdnlwqupbalql7y39n63ut8j81vk3x1w2ctzp5r\",\n      \"description\" : \"Magni veritatis odit excepturi eveniet est dolorum. Eum incidunt nam iste odit voluptas. Ea necessitatibus aut esse perferendis officiis. Assumenda est ad aut. Qui tempore in doloremque ipsam quia.\",\n      \"location\" : \"rajjg1ve8\",\n      \"title\" : \"Aut eligendi officiis.\"\n    },\n    \"role\" : \"r3xyxs74pfzkj8vxwbo4q311lxanrjl7n17t71l9vblxmx1o06octm1luipeqiv5waiy8nvu0ra21rs3vaf4qjqrbq3yb04yu72bgwt2mbwm4rsa8lxqz2hq7ou4x1z1gw728mxths0zgr7ygct89rxzvl0g29su3gwkib13q66fj07ajixaxye8a4n1as4mn334\",\n    \"members\" : [ \"rpl1143hbi8g5ivyw1x3n0sudg8ilouijjl0etl3f8alsb3w6ztttno3r6k20504pikiifqwmco6b0x\", \"3lb3twa5txh02vu3gikorhbssueud20wanjimmqpz9tnlizbau9v8ue2yc08tukglrbu3uhy2aq1vgw4vk8ufnanr08382swtrpdx5ov2i3e5ofqm34p93pmj3jqfw2ysur47huhbkdy5gquvv9ztcxnegc\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"kml5yzun3x7c17b0tytc7mncfzcc32wj2wvl77ruzzygljgugo5r1tvqhljseu7c6fd425nklzrwc314vynwtbheh5bexckt8hsf91yf0rht\",\n      \"description\" : \"Sed corrupti dolor. Quo voluptatem non ratione aliquam perferendis dicta. Consequatur pariatur aut fugiat necessitatibus et omnis et. Ea ea qui quas enim.\",\n      \"location\" : \"zjgrixrba01mde8tz44yypycnnl2dv9r61nskegvnnfd6zeus85w1jl2yig80wu5ik695avp54lno4wvv8achu6wz2hcab240tz0m2aw0y6mvq2lzq85sj8qn1oyjk80vmf38t8pmf39z0s3djnb1dr7q317j0w4x4yp9j5bi59f0injojbmclos3q75\",\n      \"title\" : \"Distinctio reiciendis nobis.\"\n    },\n    \"role\" : \"ylg3hm8up2wt8d66uofjjnfffmd045yqvcxqb787jn1a0u88w96e\",\n    \"members\" : [ \"pl9osfvhg96zwlt5k6hej9n4yjtpa0byss208f943z427eidy0yfdmqwj0lu5mwoutsr9q2az8fivnrqw12yj8u\", \"haa8d0n0jmmfffl3lbzwoojggdi8y5fa05g3a0nbrwrtud5pm6jcgsw6wnvzegusk97nyhaud7s0sutt9gqndvqvch\", \"bylgnjud725lpj4erdi7t6e2dz452s5cm8zau72mtxe1gdapt67gkmn7jw06dslrxz\", \"7gcuaq68fyyd64fzlzghlgej97fyarivckj4s921vkcsqfekgpbsilh8a38fowrzax02ydq224xovnf27lfyu53z876mulg0u6i8lebo7likei9lh4ahc48oaa21my83b0j2bgoejfd5ertmf2tq0a3g1taa6w4qbiafu3esqcnvi2ts\" ]\n  } ],\n  \"etag\" : \"soluta\",\n  \"version\" : 1939512761,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"5eaz4p3ovbo2op1x0aceqw1vfy7nyeh3o8o2kkoytxlwsfby58\", \"2j9zgrfmn1q4kgcbceobl1zuvm9qqo392j0wix9dqraug9jjf7z37b5gks1pdm9wplp1e5ouijuvn1w5ev0z9imgyre0l5jvihhwqj9f156h4sw6yzlltsj8bq6ecd6itawfcuy6j7adbyzlny3a9u7316rxsy\", \"a5bgyyg5c9ilk5utunrskorh2exhaqvx936hmap1xm\", \"s9i4tt3pgers9oesu8hw1tzdfj84fiu0jmtvft198rgvnjd5ji919fsg0y0cynnef47v0nrpny4y9fxvokl0o5kuid1rdgfmtamelux5ctz5hef\", \"k2pulfxvi496fduj9t6u7jqxrb3117iti669bi126nylekuujpcexun2ykf56mn8n02k77lw9gxyakedowju8f3zq9h09no1m61h54520v09loc9ea8ooxw2suyzhj3k\", \"viuoa2zsx8w4v7hvojt17i7wmkcm1knoyeqap5cu8yw3yj1qev7nrn3mq632oapk2mydn9j5u4cbqt2vjcn49qjb76ylm81fh\" ]\n    } ],\n    \"service\" : \"wojqdtj3gx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "75250914-bd73-4242-a0a1-da419be57404",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.710902Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "bfcb7ad8-baf2-4d99-9159-651b718dbc1d",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/u1ld3rykdbv5u3ulryqwaa0fkksz8yt5yr6c0nmd3xv81orvvao4:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"vg4xhigdog4v70j6g9zfoc2xtrm78sfp2x7k8gtjayx\",\n      \"description\" : \"Enim eius nihil quia est fugit expedita ut. Aut fugit voluptatum. Dolorem unde quidem error numquam et rerum sequi. Est quo ab tenetur ea. Voluptas dolorum architecto ratione.\",\n      \"location\" : \"9ma8qy1zk9p84vn7w106i0nhkgim5qzv6e6fibkit4qgzk82hutipw3tymtqkoex9oe5e9vf5qw9jvakvkozaz61y6cthm4036ay1izn650rb\",\n      \"title\" : \"Aut velit dolorem aut aut perferendis.\"\n    },\n    \"role\" : \"8jp17to3xyfvoqzbnkq7tm8c8ayx7s70\",\n    \"members\" : [ \"c2ayla8oamddbwoopphj4ffy0i64ioaqme5zw71msbfynatctptj12nlgv7y20x26qothllaamyet6te6\", \"9z4fk145dizme3fe4uwkzl0mbmw6sogcx9y5z1d2u6pn4qs45nsulf3th8wpyqwn4nxc5cce7wpy314l8njq9kmimylkomkgnid3g28ogqzb4se7pd5prb\", \"eiugpuixx42a4y17ufot9oukqy2pinljmutsxl7qniqojupnnajj8\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"0kgheaz3tpila05dseivdvs3t63oxq41\",\n      \"description\" : \"Deserunt rerum excepturi dolores tempore. Quod nemo et rerum et sequi. Voluptas alias alias voluptatibus porro hic repudiandae. Molestias nam eum asperiores iusto minima distinctio. Accusantium pariat\",\n      \"location\" : \"d3mcfjgzdw6d1gbm0qx85vv5sernfvexcpy83cxmrk36d4iyu1e71m5w4ddints2h857wnk0388g7kumuzr0d5belvlbdfn1f1er703c6h9y5ua9621fkl7lngfcfrgtqbmiwvo3rehyp4ej5fcbbszw4zijac0jm0opvg5waskefp2l457ib4xkq5r5i1hmjs1s77\",\n      \"title\" : \"Voluptate modi perferendis amet magnam.\"\n    },\n    \"role\" : \"66rqvj7h2xpjsk435yaae59kj2pb6dbza56hpd\",\n    \"members\" : [ \"hwijs4h306jfdroaeg9fri480lgh1ldi4q9y721ivjnysswqcefxuos\", \"qcs7\" ]\n  } ],\n  \"etag\" : \"occaecati\",\n  \"version\" : 703060741,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"krli7\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"38usdk54qwyd0q7dpdm1ewb2y668xgpocyhcej5b9n73bfktlgn3n1ia6bw1evzqbbu2kz7svyojstzy5z927kjun1w6o0ge0ehfm5ugwx0rz3gexk35d48vhiqx18mgslzmh39zsxfqvev7peht25rsp1o9lfznqzz3p5d4wcmgp5cal14gh8yndagex4gpm8aq\", \"lx6vj2y0qf3km1eutfip9lgv4aoqiswtltcynzop5xfdzdxqgan1w7m1xji8z4y0osioxi9l3u5yeczzg547pd6laxg1t7jdlsyi7lxmlikfzaelolv6i5zne0mguzpp5nywr6sm2tp51pdsslsbt9x7u90ajd2kvpqh36633wg0ybh5lxhynixxsqxzo\", \"m6ecye1b7no3alfk5vpip1dyjrix7k5jaaggcla32ze8q\", \"obgk3dpzf1h7hagkktcvq\", \"4bru1lwihkqe5olq0yszwyt7qeen0bpwgm7ifcpnbrfnbn2ea1u33z9kbab7ka33jvzy2ht8tliw23jqfwi3oaya67xyonoi8ywda9c1uq2tnbso181uo9lj6i5f46f0wnqjvsq6y78372q288a6\", \"v6pl5ky6tebzusiiue7yrt8gsw1wxjfmqz2w9klc\", \"vjpt6oiwnb00lv6dawskvbx2yqqx1pl0l\", \"807fybg814w9rl0tucl2juy9a3098y1pdhb886oliulxs70l6hruid6ickdoswchx28nhlq5nj3wc9v3w6r5hkrp\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"1gzyj\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"0ouo7b9u7enqeym7fky23cft4cuts8ue4qn9akedql7bltfh8k2vrzxl6ca818ocoqripy9gi3figjjwvx6\", \"92ktu5ov9z9n7cw2u5vym0mygyk9bw9zez75h3zcgf5u2jn10aygc8ad10wk14sieavbgln1w5fj1onavvwr1pgltjc5zinhyqcz7nh70ai8ehdfswolbd6tynrevz6350hl5q3psufv\", \"qucfkg7n9ykv6w76ef88n854zmrud834o493h78zu0y\", \"p3yzkqdv1vo8yijv348jykx10aoz6sk6lcd9wya3ortpm40u4m4neeejwpxs6xsx18xdorp8iq28vbi2fo5oc7r0bxx3gahzclpyss816zlu4nn3nlmcbxevo54qaiit6cuy0197xoezywhy0mgs4yxwbib2a2zmn8onze3lln1f1qamevubjomw88af5c8e\" ]\n    } ],\n    \"service\" : \"1t55dsreubww1viqkzvvjy4opegba9lvn3yju2c2x2y1a9\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"vldvsriy0pw6waicarxudbos3uwt8zdl23ix2eltytfq1zbks215193s3v8aujpztnujmklb5ca2xnbwxc2iuwd125um99lbk5g3pxmst6bqtzk97jmsofmo0gwfybsejdfzyzz92vou7mejj1rqlild5j0bwvbnu6uixopecyz\", \"uuilml96jseyedaye58lkm57e04trvidttbr5o6lcnf8cq1h9kgcu9szzlhnkosr1wmlqsljrjjvxv4ob8s9bcpfx\", \"sb00zi614zp2lwnb556d7eao9h\", \"22n30bn72iz3mhyjfxjbshupy0sjpso00khbhdgbt9stdg5uxgtouxaewfxarl0jfu0nahq1\", \"7qs7lovrllkfaqu0pdpr4tm5twhzde4vr7ykzf9sndx81vxttaheh2717txc\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"vbsi988ekypl6h4tvrijzpbijjvv5tzltzdkghyz1g8nbcw76nemy34cy4akzhjiwp1huiemour9sa4sy0npvsawqb6vbxxzdds5yrfpervq4t92h5xurvmj7zdw4s94zwab863hn3ibclauc\", \"jvcn8p3eid3fu04sgvzhbgskhl79ijlvoxqg0mthfu7vgcuzy574exsufbvrqraq0gkxvpa42dtp12cby3p9d6z38h7tq96ll1f30tysi6kfj3a9cj6pdmog7i3xh2rbian6s2l97qp7vbcxsyx2u6yazk6t9p6ar1qkmdbrpzzc8dx23hqzstxkpqktv3b8coyfo\", \"y01opcbc8jabp75kjsalvqczz4zlxo1fl4u2cjv3x0l69owicors8si82jfv07bqss0nwlkoze99typrvue7d3r5lhhr4o8xhk2jiua5g2brfg4aeig\", \"56mpjq8uvwbwvao9rjsqbvz8wgj9eh21fq8lxabd155aoy8n462157efg0b01e8v2k6528r1gpc2d26bhdt7ztl8ntm5umvx95fsvaxhplnmbiys5wh\", \"wea3n8ii8gsh1xi2rzy7oiggeeuqmxotdmz6xzc8byridazh\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ao0d6o7jxt4r15501pp\", \"meyxr57vh28gbwc7vac9dlr9\", \"c645oetls7emylgonq6k42a8sfefbfiega6fwb5ceiesecovqch3hc802jrsu4svuwsvfhr05dfdj5qftrrig795b95ufhjk8v3qvn1twi1xlnj0q0ohp46dimtcfhq85oeuad0ychdn0alvgyr7fgd8fhyk55tbtza41r93fszx0blcwb9ywpctqoil3z7phsfo\", \"7pl04rd74ev5x7b8cufrvw8d10tf1rm6isic0tztdkfmenxdgpr4omf5fxozsotp4pp3f4v9cd6j7kyyxwdf2m5a6nfvclkkzvha8bwnzxrt8epq9unvssqf55apu1ddxiypoh03\", \"3g9q3ee5thw70c5ipobrodn5glz7d7zcsth4jjuw77174gjwdzxryyvvn6luqpcpsb6wk9zihfxm7871yxy4nn0p\", \"cefv\", \"7ss5qpmh4vv3u0hgmaogz64qrorhnnjvmp7fyl6qk0oeg8c26ocbgqvdkilnojc4t8ll\", \"snrlwzc2ql3l4hlut6gn3htwjusb8rg44gsrzyynmw6jfz4s0j7e6fysdi1yp4buch8o30uzjwm5h1t7tx52k7y6t8xsk54brdswko8w32v0xll3vqbfq22xru3p3ahfsqevokvs8kkjgrl828fh\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"d35usrnz4hainzu61vfffj8tb8nskxkdb8668dw31adhe2uc2ol8ahnouw0sqn\", \"t30imwn8meiwxy9dxd8ccb085mxs2rmi9tmyirant5\", \"202ipgmcilez6pbt5zk4l89xsm\", \"6qqnbkl9xpz9c8w7prhtyog3yz7y815tn6e69rgew789m0z9ptoprjndc1ili9h4nevcijt3nyz0pbycxsix5uzu0qvpyyiupyvz6bxltya6refumpnh8yfeeyki\", \"h20ssvqxz135imkd05my7pd9qs7n7275ng5e7jks1ynxetpawu7njykmssqvtt0lpg0bxa6eoyiisfrjqm9xs7ydx5t55ugkjqdfqj87opj22wjd53j0117ylzqtmk1i1ew2dag45zsmo408ur00\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"sjls8og6hwkg7jwmm4xd46lptmtgybpmoma2bqcuinhup4v15rp5e2d53r1m7zcowlyw8fgbtv\", \"lm0h73gmqga3zc1chhrubdv2ehvv5wmcxrrewpk1iuuueqe1f10dalohhgxay3rru7z02km94cnqjn4o8azrllsmgmbllux6hnb43hh49qahsflv5cts8sfof9o4kyna9d8otnym8ojazgpjqn6tbymsre2chfpuzhqmuvnpa69pmg2vmjysysrykx\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"hvex4k61w0pealie78lb11wakhcbnxrke31lbuibsc6xjrqkp0zik8\", \"bxxhhv6277yj71x4zcdpirq0jllhglai9nnd9qqefywbpt5ad7getkwwp415e9wedcd59yv0up77z8zqdf219ogpwkr89\", \"r6swe91csehwu6d9nga35idogdp7aae7pziolqcjqxq2uwhxhsb1z4nvfycq13x60obkaya8apytp5c5na410mmnqd2z1paftsvp5s7bttl1vacoc1e2tx23t\", \"31uj24af9cxymgyxkythofvynmwovm9pp8e7h2cwemoktkp4nw8debp3thf8uz85twuozmepy3gb7nluuvp41pklovoctym7s9aykewp91bttbi59asihcm80xvwrcr4daktwdbhno4wvrgx1v8vi4uhurp8vzbnpsj5rvpw5d\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"9bwtx654jnvgrktmbosge3\", \"oxblzco60k6vaaph4red8kckjbd6f5qasfn2t9ws7mxh7rxps7r9k8esvdq\", \"ziesbk80mahqun13ks8tpo4nxqxa2rspr7hz7r6ittqspbv99vdjjwneobzg2t9dxg0l463f8pwaz5s8n4rqkrxesjigij783efyahx\", \"ly7qxiptwjdnj01klmtukv14kd20xd15grzwznnzpevntnnbmjkhhw7jx3yyvzoppjq5wizq25opz5dgpb78\", \"13b5t75jwrcspohccleshdgjhw5qk1tq2twat6g5lu7933b\", \"z2wnokmd7v2utfzq38vlqgtbh9xc6cht\", \"1fg5dzau3xeuef0exl105sx6e90fon3cy1wcanankgc2p6tsygzrhshdlppk92ilj9f0zofqaiy9uod9fm5k1ocvlulx6bfm2jes60m6jf8tllzb9cscwtrlsf6dw57r0ajdli2mz6if6lrs810badtuwde5io5g8377emb9v046hgabjmd1\" ]\n    } ],\n    \"service\" : \"yyysa86xojc6vjk4nr4i8lsdl6tlw3o53vqzlte10q4b3ck216myd35hn7ursxsz28i0w9qq19xrclglpa2qy07blmynm7qf5oo42axp9dxn0094ggd69ejdj4ysyj3eh0eenb34aurv93e39vk89npp0cmzxjqv1gx7z8425zivu84u68pu3tc6lnuxdufy2vdky\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"bsn7unec6u2atqgz95t9ohtpmneiwine7aoi4sbgr6hyi1jgy11j6h46legrn71vfhfan9anpro0ys9yn0lrvic88bwz5ydoll1w7d8udftk4orpur1vfuh1ij1\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"l06jg21qj6rctuhx5brse4m1swob345fm59me7p1umoc1i0aiy9vnrm4xsybo\", \"6iupb15qctybyiywss8wxd7j0m00s5e2zd96je2md9xsycpmj75uo2u8lrcb9kxptika6pv0nw26xh96casib3lbd8atckacnscvru7aip4pl9gc04d5kg21cl0jpkdu53ws7jldyvnucvgclt91dc3yivyk7h\", \"qy9p199hkqab8k1t3lnofs65pzaixe04u81es6p56nt0oqokxwf1f5if8e8bnhhiocj4dd274r0n2fty9utlamty9htoahzxeugfzq47pizo27tz9k78k4onr07a5u6gupg72pobybmeharhy5hhth6gkob24g9vhye3altxfnh6244ekm1\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"3la58gv2s4gn6s56l5vsogq50rdeonzmj\", \"s8hm9703hi6q7s4dlqgacm8ph9z07tf81l0q3obt95rcoahcmjuzdtvcw5wn1332z8th43urzremln\", \"98f49zkgs4we6wta0r1f29l6bvgwrm43k6crpgtsbziv3adh1fk817e5kl70xkx0x52zo8nzy8ryj2pvnm69so9hqe2x439gtpparg4sli9lt0u4invrmp9dqvlfnuoozx5j1qk80nekit3p2sokn1fpc3om2tmjx6q67d86m9pddgi5jbb6ko\", \"e4bnpq0ycix52j8\", \"8b07tpii9xycwqq4704j8fqlgq2nl7impabgid3s3fdt35\" ]\n    } ],\n    \"service\" : \"cxfqjagl5cq64h56pmls6zay8tuz641xm00bls\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"lj5xgz8ncjpitk2z1nacpq1an87dsrsel53b23znbnng7cljvos43ecfop9ie6hh6ez\", \"2xp31nk0xzgdibjvgiwo7bfzzd6oes0y4i8biswmrvfkrcht9wxbcal9ijeeuvjyo5hq3td2fsejhm5fxbn6n2iluuo21wyrqcted6zy3ocpm8nhiitil0uxqcwkfw4yf\", \"f74ju8jzwj7d8gbo0jvj8v362vr5msl49i1t4qs63awy3mfj1ybqhnzqo7lgytclfz4udyc87xpkqq6epyfeigigwwo9g6yzh6eqkxiqhuo13llub1rf0hv8jyxkj9tdbzqqhdk8fx6n9wjaeos2yu78tdya792d55kkts75yosd5rauwzk\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"wvcnpmz6uhlv4we9yzjcrmaswd889131xvsmlab66byojadap3vdaheh1q5q1buf6w8usz09qcoxr0x95jxeb5991s99ucysanx1w0q9rj\", \"ymkoue8ujphxydob3wbr3g47fbqekaxwyiozsl4i57atl527hcso6a9vq1clama011n3403b7ah3n9olyj7glurb0h14xzd6jvrsytgvi\", \"epadzcns4t84xi5xapw59lag0657vozuv7lscdnt19k3b5u6hks1j5cf180s8y0e8hn71hc3\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"d3yl79lywtwp8dezxqtakuk5x9cwt620hkjpfybomlw0o4ah46g0m5miqqm8k264jgkz5kq2v0dub60jyf1utnbdrhoksyny6qul5suvyw0e\", \"go8b5e\" ]\n    } ],\n    \"service\" : \"i81r80i8jspd4cej2t6u6gm0q9j\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"fnhwcsbv\", \"id4n3mgwdw1v6zlxjziikno76gmx1bja1atxxp2qfrxcvxcar6sp4iqv7vy7jt16u61uzfkyo35fmn1yrb68uumghzn231avese8e2k8ged6y646b5of3\", \"sq55827yd\", \"7qz6nuo6ksirpbi4awy5bqr3z4dcyu0n4jglref0pnk526cy8nst4o1o2gwhx1yytm1vy3e1qxtj0hn2khrm7o1hj4ld3y7y1pckuj\", \"nzh7j4z93ahh8uirjr3tyxvfzcj0ahg3f6m46ityj5vxusy1vaqz482w7fazznpvofu3nkmvo75o3wx3ip8wpoiyr9vjlcfldwn3d16rg3ii2483vfiwtn2mb4hfi8nrsvndoxzw1ylajcecck8gkzzcb7k8s7gkrv9zdhks4ecwiqgx34uzn8ogqer9q0j7v\", \"ybipcn7bf46gl7f60m4y77rb2r7kienn8z6iojupkocmz0ojkla7ec4c9144ouy9uanfxmdydg0qi1r4l1rio2gy29wbxo62gp2990fao66jqecxsdjrcsjpjpxmikmcqhhrqsihn12l824mle3nvv3tmoqtpmn8rl1\", \"2plc155fdy9uxx5fgwt7b49bpxlv2xxrj3uicehqq6krc2f05ogj9koia4qym5l9qy55pa37rws2hzwbks4aikux4nsxx3lz4bkk33mckdveku0h6jlsewz68uh45\", \"uai9zdvlwmcr0zxk96rrl1gwy51mmoxtcwq27cn75mlffb8c00fatexnxc6mxwsud0j53khhqa8y0oyhs22ea8kp5tj8gvstmd0e\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"0bznlboo9zz9urwewg4xwzfe11c8\", \"uz5656nuoidgtw2lo9chtczfbgusn50lxij84c3yxmcdohrlrajhuqxod5qeu0nxt680kra3shkxjz532nfebvbtnnd1hrdmzlwjj7t9jfzk1nwgtcck4arlzvilip1ff67os3vcc5vv2or\", \"u4l9g84zojf9pyszsiotibt0rc8bd6sapfwi3b8x92fybwmwmo12fcsi5nw4zqgchtu5jnzoy9s06jgf30ry2rk89kzldid648h0ni5d9lewmjplg28uo99t\" ]\n    } ],\n    \"service\" : \"4cbqbmb12g2qn4nw2oh3ygn7v4e5n6pue3pvbqqzobntl1im6nrvca7cfocvdiooxb4bf48oxgswg1x86a2n387eio14u68068197rng88afkz0f9f78omnp2cttm0m6srfa2s17y9pgttthr0m6bn71iozod64qobg\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"ywoss856ip0o863vv8p2bogbkw7zx0oxc3lwdm0r2kej8p07gidblp97xjmgrqn11ahksg5za98um5dcervyu9b51y8vuk2s56cbo3sgeji6zywduyhemg4sv8ooe2u9l5fpqu5ruelhidzsubp7mp1qj5nf200ar0aium87necxoawfst7\", \"y8efsibv1yld7oii02c2bvcfdmavo903q4k4f8d8s8yqw3hgh6r7gd1576pj8nrkqma63ev4t0897si95edn51l788a9b4e\", \"mg2llsdd5jl2l0h5eotqlre5avlgryqjawstv9lr65fbm11fboxuxw0kaa9tdkyb180d2r1ku1lqptfij9qns7cxicimqym6pt6dtqq6tyydlz9jvquukiekw2vda459eaegcl38ahhxy\", \"b8mimt2j7bj3axh3lnz79tzhey1pspig8v5o7t8ump\", \"dsi6yylpptv7mzlr08bputursjkno8rsb8juv8ftuw4e9ebck9sym0nyt8zf4kywh7xgqhkzfzib7ujt9j36a89d8f835fyq68qcblk8aawf45vg7lofekrc2vtg7kb5r4gejkdu\" ]\n    } ],\n    \"service\" : \"0wjx41nf1sqnhsx9ejzks1yrp224bn0eatl2wl5chznsv6bfq630x53fvkfdmhz76vctc2akph6c7214swuby0l3ji5i9gdpat4mmofmywbzakkkic0ff2dk9bv08b2lsoxi23bbe1bx\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bfcb7ad8-baf2-4d99-9159-651b718dbc1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.709696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "71e4ade4-c551-4c1e-a015-54790901a404",
    "name" : "Create a new KeyRing in a given Project and Location.",
    "request" : {
      "urlPath" : "/v1/hh40gz9dua6n5cxuvnffe0gpfpfiplvfy5ibs6nca7vf2mxgnnqb00j2fbm/keyRings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2022-06-06T16:52:21.708211Z\",\n  \"name\" : \"Emmitt Schumm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "71e4ade4-c551-4c1e-a015-54790901a404",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.708305Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.create",
          "schema" : {
            "description" : "A KeyRing is a toplevel logical grouping of CryptoKeys.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this KeyRing was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for the KeyRing in the format `projects/*/locations/*/keyRings/*`.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9e5ee26-1614-4507-805e-244e2e6bec93",
    "name" : "Lists KeyRings.",
    "request" : {
      "urlPath" : "/v1/s9kkklawmd2mwu5vjjhhydhzzmqvc8p8qsf508zhipelldbco0zoempbb36zirtir695pb2pbgned2v1kijcip3sbp9qv6qqahom4vwcflt96c8d680r8rfhuji4xw9shyinfnfpjioo1zrdml4vtfl3xf367ans85vpw4m91trov07li7lqe9/keyRings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 555805316,\n  \"keyRings\" : [ {\n    \"createTime\" : \"2022-06-06T16:41:21.707952Z\",\n    \"name\" : \"Janey Gutkowski\"\n  }, {\n    \"createTime\" : \"2022-08-28T16:43:21.70803Z\",\n    \"name\" : \"Pasquale Conroy\"\n  } ],\n  \"nextPageToken\" : \"8bc07c2313oltsubr06qirhk0bn33yqfp2z4s9dm0hu0m6g5gjttvos50ulmb5381mgo6pxizlkxekxp8a1cbq6tapgunu488w0lpm7cxk7sf0kfygn5y48xuwupf3u5dv7nxdtqoupljjp8cal4p9x40hxgftcz94m632eipmfbx1xz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9e5ee26-1614-4507-805e-244e2e6bec93",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.708175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListKeyRings.",
            "properties" : {
              "keyRings" : {
                "description" : "The list of KeyRings.",
                "items" : {
                  "$ref" : "#/components/schemas/KeyRing"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListKeyRingsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of KeyRings that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "c94a186a-0fd7-411f-88de-144322c29944",
    "name" : "Create a new ImportJob within a KeyRing. ImportJob.import_method is required.",
    "request" : {
      "urlPath" : "/v1/ugatqvu4mm8lbll7uiayadluvxq1fvx35cl8ficxhkgvl349a2fpfgla8uv1t7iacplvxzshh0h6bwxvssk1v4ebgmpw9icsq6fqbfus2xkznpgkkpvogp51793rhqyr4vpeuux9w/importJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expireEventTime\" : \"2022-12-18T15:28:21.707393Z\",\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"p5wkzzcxgig8g8pdd392gjdfoza6fbfchw9au3yzbx5ik9j8hmyw14pfc1kbpvj72pvm4yid4zoz4jq0s3ax1450jptsv6cdwpye0x7zrh0pn9ox7wsexg9rwbqhfe01\", \"ijnv4qaxqdxi\", \"94bsqkugy2mr25s1ppnus3nsij9ah9463tt7pfouaiabxcr5sr16l3wcjhiqmg7joqtyox1x9deo1rvb4s10stvoi2lg6d9shw4j0bevidl06z\", \"s4f8akixj6thqi46q14c1tz4684i5rzi5sruxkd4cf3mi9v4jno5q7q3suldgwqzvt00y\" ],\n      \"caviumCerts\" : [ \"6uolzep7pks18ig2sxwj2gq2m0atlpmrpvr44fgfyhemfzfasplczl7v2dgzdn8zctror49rtz8i0phqjz2csfxq5ar1xtk6zp6ymg9ji858knzkplfwsmg48g6g1d1g49i13ojvw7k0y61vdms77kjbni7ziogxdbh92swqodvbaaebxppqdfjkd3hrz6k44e5bdjg\", \"625n32gjqqaysiwsd9o5bszogm1atw5rv6k9bery0h07ower4cwoeynra31b9br0xhw3dj0dt07av9mjuw4v087v35hlhbm84fgzx6nrdzo3uwgn0dil3595qp5uab5ixoyk32e5fazqry5k9z7iq1j00w4kpfo7\", \"6tue3b1ntk72yjgz5iik4tsjucleyzc5olt2s2nqopuwgb102mcfxvwa\" ],\n      \"googlePartitionCerts\" : [ \"g47ys4747zllhrqj9ix6h5b3fy78m9uq5k9lzimk3msn65ppjprcjal5oohqw7zii7jnpjcvc0tl3gys5a4\", \"rpj9sfo8ayagecvfwkm7hhxkil05sxk3verzmyhf85k3hc5m2zowcvq0qre7eg5ga5zvetf1yzb9zf6pbjfgb7jcgzu6l2zulmz9ge4w1lrmg3r3hv8167ltksmahdfhj\", \"sbh4hb6alja6wt1g1m9t200x8ahvqau0ffe8882rcqkweqf9dbfecn2fd4dlsvtsx5ycyniiswrfh5t8a83dn25cso4hpp85\", \"bdcda\", \"otuu3ai9adihyy7srn2amjt3yjttl2k4bvnmbui39cvyzodsk6rin75\", \"a058w7j7j2szjqggx2gu35t7y04f2whd3a1jnzvn8c1csvhs0py33j6msff7bv1c928otkpl4hzw5qxse3bpd42uirt1a4uq8z6s0313yty1880g40do92fu\", \"0t82wk8ebsumnkqvqpny6endfau2l0p3fr2lv0s09u43gwr\", \"4ef4uog2x6x4ohv51n9sjxa6twwk9z9qex04vnachpvcp67e3hl1fkjw5w9jwooq5fs3vbyjvkw0g2v65lq8v30uuw8mp1m4q9nf4id1f4x6bmu6h\" ]\n    },\n    \"content\" : \"Impedit inventore nemo non aut qui accusantium. In ipsum sequi magni officia nihil omnis. Iste recusandae reprehenderit. Excepturi voluptas qui nesciunt eum sed. Voluptas quae voluptatum expedita hic.\"\n  },\n  \"expireTime\" : \"2022-03-22T16:30:21.70758Z\",\n  \"createTime\" : \"2022-03-28T16:51:21.707608Z\",\n  \"importMethod\" : \"RSA_OAEP_4096_SHA1_AES_256\",\n  \"name\" : \"Jennell Spencer\",\n  \"publicKey\" : {\n    \"pem\" : \"o0av7hcc0s3sa9snbgx5o68dyiiym6aolb9rqcgr0cu51yc5tvjlq3gm30olk4fappfxms2ygw8vp5zgs9uw0i57fer8jhme060m51uglri3umyick1e1p3e5bgrejacew6tbiq0pputj1th1koma\"\n  },\n  \"state\" : \"ACTIVE\",\n  \"generateTime\" : \"2022-05-13T17:20:21.707713Z\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c94a186a-0fd7-411f-88de-144322c29944",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.707874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.create",
          "schema" : {
            "description" : "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
            "properties" : {
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this ImportJob was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireEventTime" : {
                "description" : "Output only. The time this ImportJob expired. Only present if state is EXPIRED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generateTime" : {
                "description" : "Output only. The time this ImportJob's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importMethod" : {
                "description" : "Required. Immutable. The wrapping method to be used for incoming key material.",
                "enum" : [ "IMPORT_METHOD_UNSPECIFIED", "RSA_OAEP_3072_SHA1_AES_256", "RSA_OAEP_4096_SHA1_AES_256", "RSA_OAEP_3072_SHA256_AES_256", "RSA_OAEP_4096_SHA256_AES_256", "RSA_OAEP_3072_SHA256", "RSA_OAEP_4096_SHA256" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "publicKey" : {
                "$ref" : "#/components/schemas/WrappingPublicKey"
              },
              "state" : {
                "description" : "Output only. The current state of the ImportJob, indicating if it can be used.",
                "enum" : [ "IMPORT_JOB_STATE_UNSPECIFIED", "PENDING_GENERATION", "ACTIVE", "EXPIRED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b3e5b9b3-7164-4bbd-9766-d117f5d5562a",
    "name" : "Lists ImportJobs.",
    "request" : {
      "urlPath" : "/v1/ec1hrinvtbguygxtjcu0q5hdz9oc4knmal6s4114jr2cxnlxvmjoycgrx1aux4c4jihry0esylugdun4ljnmfn7ialdhx3h1f3kalt4vlzcey1of8ej7z3he5fg68zn7ixgtb4r1yroh44gdurhy9f373h2r25l4izilif8i3oqxny6g1uac2lsdoidwkssuiwwi/importJobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"importJobs\" : [ {\n    \"expireEventTime\" : \"2022-10-02T18:29:21.705828Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"6yart5wap3yrdmu55yw41ucyl0g438pl1174k827z3361bgbn7d87k488l4vc0m4rcth6a85dn2nhkywe99fp4qgip8m6zzv02kmqxjprwch3eaufgpw72i0yj15mxnq9oissvymyl1pthbzh99rplkidgnbqt6phg9vfp9fxyhmtsdxwf8m4qpkxrysnlk\", \"itbwminm3kyhgojhda7jw1zr24i0104ccyh28hxvu58gw3r1spnshem20fgr212lh4r6gt1klb3zfci21u02hitatdlsgeq2qpliamnodimacq7zq93xq878k7gz6z7t5qpemfnhceuukuwdten9e56o9r5shr17s8p07wh584ie\", \"bzng0mfxqznfc8i4e0vn0833kzgulzqhj79veoiz6t3sinxle5iyz1su5ohhgxc6jyt33yqt97l0rooa5fzk2ucv775hjij56f9wemzejg15in8h31vxha0x1gel0kqbi4\", \"eb3ik9nqksvxe9012veub7rdwrp23bse6xqxhhbam6a5mvlh4zpcyc5wheld65kpcgujk91njfnjc61kif343kf0ra4eqp554tc921cbbe6df2fux\", \"u4msfdz7qoldykenrewyi50vfobkhlqh36lqiecgq7m4xjk7\", \"w48fjsqo7872ofk9wm3vcqejksx743v62i2ctch49qud6g9osl0uw6n2kqnewrmng7u746oz8dxuqp3tl251iipv62su\", \"hoqckqnw1csda22gatd6k4zcdo0xzt7h4eork4psew0bq1wwhhodafld6v7rbrkc1hllaa6k05siku9da3wc41ogm8tg882d6w5n5d83ewcp5t1zo7ixqyrlncdfihphem94mgc2gn9ldxwynml\" ],\n        \"caviumCerts\" : [ \"d7v4zyrzh4t5r77yoojheh9r3uy63ykdd4ir1en019rrrbxuo6xcfixijng2w9bpc58gr9pu1fxfkaesjnvstoy05v7wmezyq6zrjq9g\", \"2s4wj6yccbu2v06f8yfr1m8xezlmiruzdqnciqdtc16lbhieu23gc76yfn8aovhaxs0zqegzgs9k75s7jsueaw4thi8lpjboonbuu8otyhg7p6b4j5lr1vrrkt\", \"mhq3u02zar8ft0iujg1csdio34edyum\", \"c9l1ym9gme8vnkku0p12523qrc9swu2maleq2mbx565\", \"l6f5mmunls\" ],\n        \"googlePartitionCerts\" : [ \"o5b7kwc2e6oyba8567ppbqpeo1qwo2gbrmp8atxhkkxs9rscnxlidpkgd3k0qs6k0a31xcla8fgvlflbv590e5r6ujrf6\", \"fwqxaawqumhrv4eyqt8b3x6lpv37gu6p290cvzfi41xb4ltm4zklovlhfy9oyqdgiuuhqmvc4xbj7tuti0ezup2wpl3v3gcrjz0hbl0\", \"w1kx6uqryc28a8v8d1i1o153me9pb516jt2zq3skk6o4uir3m6t5mmwvtoryv3tp3no2852pv2rkxebnxibvue8zev56mybwuayhxg6gc07qglbh6d382i99rp9iyi6eyyl8pphjyvdkv6\", \"07jlnwjukt3xfyj3edb3sc5ihd5n0y8d6tjdavokv1l9u0l1lwb8acszce9zdqz2jyw\", \"1reixirsw35l8cdk9lgudej0myf5m331qdxbx05alapbgqyq0wwud31pt9gsq6yhwyqzu5trre5t27v5jl\", \"kbzi3leloxpg935b20kao1iuyqkwohmly608zw8s4h61vewud296ooq4eeld0pi0zvz\" ]\n      },\n      \"content\" : \"Voluptas saepe at voluptatum debitis. Perspiciatis beatae consequatur. Omnis odio et. Eligendi inventore hic.\"\n    },\n    \"expireTime\" : \"2022-10-21T17:14:21.706045Z\",\n    \"createTime\" : \"2022-08-30T16:51:21.706076Z\",\n    \"importMethod\" : \"RSA_OAEP_4096_SHA256_AES_256\",\n    \"name\" : \"Dr. Shelton Parisian\",\n    \"publicKey\" : {\n      \"pem\" : \"m1i5j863b\"\n    },\n    \"state\" : \"ACTIVE\",\n    \"generateTime\" : \"2023-01-11T17:40:21.70619Z\",\n    \"protectionLevel\" : \"HSM\"\n  }, {\n    \"expireEventTime\" : \"2022-07-05T18:23:21.706233Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V1_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"ar8k7wmau7zjcfcn7ysmdn8fzv53dd6cn6pi21n5sg45ztli5x6e9wcue2c614axem0egl7sa2kd1ze6fmnzi0t7r3n9nxgu81p4x0ms34n5rw5kdt9r056qds2qbzqrkl301cao7g9oat0k4aewzrbpt7rgl3arz8oao4tqroxisx\", \"q1s8dx9x24h57pze7p64hqn520xdfgm6xj10szqyj931ezlhmsk56z0fvtje9wghh4zdbch2xb37vddsb6kh0d967pu\", \"g6dnssezwme731u1xu5stzoswlz941ul5zg1omdfp71p32iifrsqpfddxiw4ydewhsjsxavxeavvoabf2rmcczzmfryl4tdskbh\", \"a0zcobo2mxtmvcvwq4nye2jlenerwuzitc2b7979skgxjfp19tvt24qhl3si2386wq8zol3wlxyl4xuk4wryo3phejs9ogiyxdkz13912ylbozimww12mub80waof3wis6sc08gfm4fnebrq877hixw2zeeqle2v6cueku1imp5hj7rs1163uc5r1cf043d83rz14j\" ],\n        \"caviumCerts\" : [ \"kcns1hjwkbhj3a5yszr6f2q2fm2t2o7ez7fm36grkpwzfr5lgqx2oz7tbghvs13xybc0odrvh5wdzqeujzika9uvifn9fq5w906egu5o4mm877icj8tk1x9bc553s183gysp3\", \"9cl8ysaihlocix68qgyt6orcsqp9psuifld9q8gt2tacn2bgqe47oc82i3ytfn41u00877p7t8uegvnvw4xxqe98qpxenwou4x3qz8wy0juz8wb6rm46h9jmtljt8agk15uo2t1wvdz72iqkcd8gkxt1ivg7u3nb2cdxe1p44rhqwj9a7\", \"sbe9z6vyii7uv9pbxlhcfsjhev2hod3z4plr0k\" ],\n        \"googlePartitionCerts\" : [ \"lw2ynigt6zkei4j1ykpnokq9bqfbuy0jlqi6erud362ubaofa9dz5930vw4kvnfo70l02cs8a8rhhx3sz7iwxncgw0u630b\", \"z2skucoqcwcioyb7i6ptsimiafhzxqmunj5idv5\", \"2g4yvgogl1x5hn5sl5ll2c9udp0b32qx75xj\", \"251tcf1lys3qmrew8g9dumkvmuukdxecl77abx20l12lazikowrv1o62wxa628zfo3iq689naavfl\", \"usy891jdu1siechrjsv089t9qrgj9qa62hayh7ce9b9fp26rb0rx8zeyjh63ae6qbp\" ]\n      },\n      \"content\" : \"Optio voluptatibus id quos unde quos rerum enim. Et velit neque facere. Fugiat perspiciatis error. Voluptate repellendus ipsa qui magni.\"\n    },\n    \"expireTime\" : \"2022-07-30T16:20:21.706393Z\",\n    \"createTime\" : \"2022-04-29T16:54:21.70642Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA256_AES_256\",\n    \"name\" : \"Mr. Paul Mayer\",\n    \"publicKey\" : {\n      \"pem\" : \"9p7bnuokqv7c97fh0q6ta7m0xlr1v9wolf0a9i9d5djbg5soat4y3ex2lf\"\n    },\n    \"state\" : \"PENDING_GENERATION\",\n    \"generateTime\" : \"2022-09-16T15:28:21.706526Z\",\n    \"protectionLevel\" : \"HSM\"\n  }, {\n    \"expireEventTime\" : \"2022-09-25T17:56:21.706568Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"gdxczjebshi2082ssf774tp8889tlydct69zxb34gi0gk5rzgdrgdwdwrs\", \"80qfvbf1kasy6zjiqbqn1tuy7gxns4ca3ea8ae52cjv02baf20s14n9q8bftcqso51c12ie1gnwv5gsbpui58kgib81hfv57stzti5gry1kiny\", \"0bl0kdja82a95ec3g8it7u62okuf3v1pzusisirrowy03o2y6mpxxwbhpu0req3u884hl26kb2a2sppmgpbzy3hig5xa9ujuoccb750eywtuu6s3n0ziyu0lfymjzpid\", \"h5myvnycygnlqtwn5ve8f4fvgyl3t0ok9bmbbcty1xy7sty3fy5ezmulqqnr5ghuubm7t1363t9z6\", \"j0tg6wr70exy0ml5q0zmigpg7n4rx3tai8ppbhcb7scjyuiq8r1f8y5nn24e6jbwd8g56r3ui43wn77gggee1dgguj3v3r3c7wm47lo2a42uu76vwgvruzzr0wouyqrrfsw6p8m12emskzwvy1qo7cyrb3b885ks30p0x4f0ukuqph17tlnnbj1esedv84iwrcexf\" ],\n        \"caviumCerts\" : [ \"37zzw7n3n4y6i1qa3e6atghq1z51n0jlvwy3o75sx6txbgs7nrwrgnv8sppzpqcwvnsurxs936z1vmwg4hy5f5ow3kqqc9clg4s881zhmhxxz8ue0m8wfp4to8tjx2w0ob12jwj9a3lwilio5bitnwmospca088a031edx44fnxcptb31shiczu036hfbb067aj1\", \"5l3to0dl828mo4cmtczocrirrsehptzm42nuns2aiwywt57tjsdy7olzsbjie99fkn5wnf8y1mfdomll5j35ouwoqmwze3v6js8f304hlyaav7gxaczn046l4wxaa7dsyy3ibxu3h22d0ubh4\", \"e5hdr0xyppgrjng3l7s\", \"ygjoog6sadbz8wujsn2v1rozywb1nammv66n13l9x7wxvu0int60nhwxif5cyh8naiovaepqvtqryl5phgrjvlh2ukoq354flxeqif37n2d2e04rzg6ss65e6ni3a4cetb2qt8aqwjn22kiyvtxsm45cinec89lmebm6nsz4bo64vv7y\", \"l6q4hn942edkkuu2zx2morlud9sgtjqoyoe4rr4pif3kn70nj5cf7ql3tzjrembv77me1a37vgefumchxlg4k7db8vnvp5ohelfraavxwru1m62lglmd3zvd9e9snvdzd0wd7u1g60kafjjywon14\", \"yju8i3ntmj0h47vlgfmqfemuttgiy3r5u9k4veo4kgw6zpnejaxttafihw7u6yqbq6t9jzxu8h7eke43xlragyxxuc2yk7zq01agvai1uxsn9vrav9ljmyu5qxq2153qemx0\", \"djmclxtxw1njs2l27an6512rio515s1oea7xbc3jshm40u1l65de2wjqdrusr6p6nebfqftcil5varyg7411lo72bnh3i746tljga2sk23ummicja7ayj0arh08w1468zhua8yeumzvvl6858hhyphiw6udl7540ajm46zyn\", \"gkndx0w1elqs4w9d9i0id8hkh44bn4szr5o3in4kt0yc1yxi1fkfmswv6anqsav1\" ],\n        \"googlePartitionCerts\" : [ \"pymr7g01zkp3uq35mtnbs\", \"f6acp2bivrcrslpu81nbrgub961no0rvna33xiqjsy6tk9zsn1w52mnpirpti5cxeg79leezfh4bxtydzz13k53rht68sue272eheunlqwh09\" ]\n      },\n      \"content\" : \"Laboriosam soluta sed fugit enim eveniet sint aliquam. Dignissimos dolore modi. Deserunt ab perspiciatis fugit placeat.\"\n    },\n    \"expireTime\" : \"2022-09-10T17:08:21.706741Z\",\n    \"createTime\" : \"2022-10-18T18:51:21.706769Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA1_AES_256\",\n    \"name\" : \"Jaleesa Rowe\",\n    \"publicKey\" : {\n      \"pem\" : \"9x2zv2tjc12sboavx84\"\n    },\n    \"state\" : \"EXPIRED\",\n    \"generateTime\" : \"2023-03-04T15:01:21.706863Z\",\n    \"protectionLevel\" : \"SOFTWARE\"\n  }, {\n    \"expireEventTime\" : \"2023-01-08T16:23:21.706906Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"4iez6zj6t2xfbnwgatt3f6wrdpsc25c8hn71rzvpc0otaife9y2yztiri\" ],\n        \"caviumCerts\" : [ \"ou5sv393279r46f2aoma1vda9l00sssnvf5lmqrx8334hdnl7mh388yri0ewfz4k4uz046dzxm50d18qp40hgg5rcoltmafl2khtfjmi\", \"iocvn2fjhg8d04dshtx6je7laav27uj9awu\", \"d3cddt340z8qg6ra5vqzo4u4y0d6m6hthy7obk9tbmyxr88waz4evrevqyggvr83jj24vsd2g0jb69zbtby4d2ebmarz01ocesr1quh3da1nbk5zh16u4cgdjox5r3dkfzogi1f3np5hwmh043lbjhnh\" ],\n        \"googlePartitionCerts\" : [ \"3lpx20w8f76a2l6nps45uzy4gpz6r5cfmt8bbmkv6yoeyhx45ao6vq8pzv02uq4r5nq7p7woy0mult\", \"d0mnmktdh6f7godr9zprok0if6kqbkc75azig8k2nzpwfpm92c4i37cbe0a\", \"8g6u7zjwmwekdtdp83h42wn8d9\" ]\n      },\n      \"content\" : \"Et qui asperiores aspernatur animi ipsa. Maiores tempore adipisci placeat et voluptatibus et fuga. Nisi quia eos. Officiis magni quidem voluptate hic ea sed.\"\n    },\n    \"expireTime\" : \"2023-03-01T17:27:21.707041Z\",\n    \"createTime\" : \"2023-01-09T15:05:21.70707Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA1_AES_256\",\n    \"name\" : \"Dillon Schinner\",\n    \"publicKey\" : {\n      \"pem\" : \"xofygrax09ocrn3re4xntf75ohojyjy390p149nc7699x10wlh8nep2bz0xxwx8ubvezs2j0kfim0j47u7sxcz6mew7jwkf2dp6m2nftyrfoet7nume10v9x6tgrmi2wg2y84f26z70ne349h6sby48mwhvyziei41sbym6s1ju4lq79rqoo4uqtryogicqst4yufxw2\"\n    },\n    \"state\" : \"IMPORT_JOB_STATE_UNSPECIFIED\",\n    \"generateTime\" : \"2023-01-24T17:05:21.707172Z\",\n    \"protectionLevel\" : \"EXTERNAL\"\n  } ],\n  \"totalSize\" : 441425284,\n  \"nextPageToken\" : \"7nwl4cica78rh8c4wf58svr5v4x8zn9i81d6lt9cwabp8hqsn40jax7jkpyu455nn6299pos5zuxnbylvrc2wc1air5pf00105yxg8rv5qu7udyyiqyk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b3e5b9b3-7164-4bbd-9766-d117f5d5562a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.707345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListImportJobs.",
            "properties" : {
              "importJobs" : {
                "description" : "The list of ImportJobs.",
                "items" : {
                  "$ref" : "#/components/schemas/ImportJob"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListImportJobsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of ImportJobs that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "09895347-d15e-460c-aa29-4433d248ed04",
    "name" : "Creates a new EkmConnection in a given Project and Location.",
    "request" : {
      "urlPath" : "/v1/i50128blvz8oyp7iyig23gdm4wrb194cy8i9dnghnpnl/ekmConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"serviceResolvers\" : [ {\n    \"hostname\" : \"Maria Kreiger\",\n    \"endpointFilter\" : \"jp5s81m3z0gwt5h0gvd7lxl6nransquver7rs50nmuoe83g4vjxv6jcl0fw7qqe6q0y4bmduj0vlzy9\",\n    \"serviceDirectoryService\" : \"aj4xr4w4zly40y81yx7ubfppoyy9kbe8arsvqepqhw7c8fm1o720s8rfyz1evcq46gvq58k6dgso8ua3ofdq1lfigfdgki7hrcwrnrv4etxh3f0g2hdv4bf4hmvfjjbnsdbx33ssgoa2qiwwn2i7o9qfxdfqswwu\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-04-19T17:03:21.700174Z\",\n      \"serialNumber\" : \"jpqpcyzzut09d1ukw1nxm55ldvrl6h2rbak2hy44yexn4hsxpqlla3y3jvgk54lwrw31mnqlnmr70mkrkytsxfuss0x367vop0yyfvhi5wf7wzing2k0p5yznxlc71asn5l58kp0ihkhiyjw1euf\",\n      \"subject\" : \"dg9art9aityuld435saskhecyfzrnvjyt136j64srq0w9vutewq294a4zvuaacnrox36qwgzhrgz0qx6k6mu5yrr3m1i236byxgja9c0\",\n      \"sha256Fingerprint\" : \"da9nx73j8a78oljozmbob3f1f2ozi70a7ivyiwn69ac5z2pq4jjvnwjtsdwrdjr8flrqfzxlbj85vi22o2nyd689y0ls24jyhd41y55m8kmljmb3q3jd755jzuiuez94\",\n      \"subjectAlternativeDnsNames\" : [ \"tdgenlt9jwn7xvrk6cus64hmgz\", \"tp6d7vkvzsfmtk62mnlkdmtwnp6ahia62h890x9qpg81vzlnmpvnmz3ts1oep7q4xa4c39ieypw4pm30ldi0rj63xr0yxpskxerobg5i1echxs\", \"zqoze2ej8mtllnnecjyxuzfzdia40550407eggexufo0t2voo12epuganw8ktnupk7cu9p5hc19q1t36deve8ynmazko58v866ej\", \"9mmciko4kdi4h44faib3uf5j32sah5mvd65ahsnbye5pw32t669\", \"swrbqsbselhnnrt5kr3nthsufxpn\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"zelewgjfvqyodcx9fv9i1ioo2aeejngqrua3lhw4up1vrgnh0y3ef2vhenv2ngmsdpmrto3ap18pqmduk70u2mndnfgj1mdhq9vo0uhl3y9a8t25q6e7iuowzh7dhxxih5qkqidwokp7vb2d03j3bzkdvjmhz62ff\",\n      \"notAfterTime\" : \"2022-06-16T18:50:21.700301Z\",\n      \"rawDer\" : \"5vstthj0grwy0ybaxjqn4o6wyw5um2pxlmrw34997a657ko8m7\"\n    }, {\n      \"notBeforeTime\" : \"2022-10-31T17:08:21.700351Z\",\n      \"serialNumber\" : \"j6ipzxvxvtoo7gwhsv4irq1c8lx1h8in39raft17op2d8lty5kdwmqfxitjcie7hmlo56pow\",\n      \"subject\" : \"ffgpt8pmyyixf97ysip0g76vwaomimvn41adqcqdtl7uuns37lmux8dqw7bqb9t57yf7sbsynkg3fcnzn4k1pyyeheigtm2dth2guqu60fgj22k0f5isvmf7zmgz6q8b4w031gy9ovotmd3sffw8wcqt2l6fycp76qoc1eav7q\",\n      \"sha256Fingerprint\" : \"y257nfftw44fbpowp82z6sk3slurm1c10intcanbz84p9pnj43xi9bfsiplqtdd48tn1ylos0dz2y58vujkpvbyaxv5vbf70yb6cgglz9tink67qlkzo4dwo97foh0grio31om8u5u83bkkk437vr0g4qli477lbh8js30fz4y5j4m73v2cn81n0wyj\",\n      \"subjectAlternativeDnsNames\" : [ \"y12dr4ies29ozsw1hwthnq02e26v9tmtdgqfxs2vdzcnmznlsf5ny01ur6zqmcbrpk4zssp84mnxvbe9a9y5xnm0o6494ddzi9ogsfugdwoieworaiby08gchij8i5obf3b652ahjo49vlqiqb8n9qz6iumzgsed6zbugtk9nlomznv\", \"r3s6s9lyp0s4qmopxvbp3xkoghuytn8quyvth3znz76fusmbrsu416l38z7iw8cqam7ddjodhw2r6h5zck7xgez5\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"o3nygkh72k6\",\n      \"notAfterTime\" : \"2022-11-21T18:23:21.700445Z\",\n      \"rawDer\" : \"yy78ly6pxkjktb85xw0lcny2hca63fyxsbk258a7pdagnkrmh2nkfejz1iysr90fz2ykg0o55rnil961zu8y340787h6k05opu8fu69fbkpxurxd0yke36ym2wv4un7tcbaam59z27dyrkksyly54z0nvq5oy3narxxh5akk74m0zkr4fnn2i4ws8v\"\n    }, {\n      \"notBeforeTime\" : \"2022-06-29T18:21:21.700492Z\",\n      \"serialNumber\" : \"7e3f2gyidj4tukdada28xe4wgsxjga6pqpuwpyk3j2e6pdqfwuikpsvztad3pbj1bcq72\",\n      \"subject\" : \"slle7fchece6u6xlhnnyyzo7ndh03xbl84mbhfdnuajwd758pjinq08k3fscs2ihwmwg87tnf7ajtpsd34hsw9to2etq1f69ln4nj8fgtskt7yttzpn\",\n      \"sha256Fingerprint\" : \"mhouocadspv184dmuqqsyvq4ylj85pxf1vrwdwsbvonqz6ctgvq0bqi6jzub8sfwkoa4ovtbvqnp2pp509lot3p1iu4wcg9jnsp1x2w1cocssgu3avtfq8tkdvxd4ye\",\n      \"subjectAlternativeDnsNames\" : [ \"826e4tlploq6t51h6j552sd4qgsrj2qxpls9hjrindg2tcj3cea3tj447iw7jx89gwkbv2hokpabjxm79b66i42tsvomnlqh1sqx1vznjpagm038vb6410upbkuf2krokdq32oydx82v2dhifevnj3hft9o\", \"0z91tgbqm86ql06ovth06h3k4kqghz7zzj2dk7gdqewgn8nhu0x8u46qy7dirfk2fix6v6eys25jql6b9itild3mxw9voyxwhfyq2mryg3ovyciaz6oqdiuokaazki5hxz5at81n4xv\", \"2wrkc9f2o97qyx9deur\", \"qwn0k1i175gjintti6l7sv4jylixzsif764ppz2lafo036g6a75zum1av9qby2y5rfl6i78wnhxk13p22lg91csl3mhbzghk\", \"izmisdpk527qmc4d3abb7rotvmxjuzmccxjy5k0z2x473apy7k3qhxrqwa8rvlbowwc16qp0s3azxou\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"gjx1anrgcgvvdalciw9exd5udxr04oyvdaiq1u4611ssq1ew1v0cbqaiwonnx489otvb3mang5slbn9kojxupr2pwwz16ot0bnuyqn57q2hrrjyp2gtvfet1py28ptrb9v16c2eommsjutx6ohdvpt\",\n      \"notAfterTime\" : \"2022-03-14T18:54:21.700598Z\",\n      \"rawDer\" : \"10i5jyc83jaaaie6l3w8i4wda0fv1iksk3wi3j346e25xgig5gjvznyg8j1ljf079vtgj8lajjz02d2\"\n    }, {\n      \"notBeforeTime\" : \"2023-02-05T16:08:21.700645Z\",\n      \"serialNumber\" : \"d3bljusn5wq5al3c474zpafc6gyr44xcni8gq48zongl1w0k\",\n      \"subject\" : \"0qjsqaygidl4uhtggk46f9e436weon29b1qxvl71ul0qdq2rkfks7mxxdldzmppmg39agakcvp0r0tcd48zghw2nhv5im7ghwwhezprxf58p348p9zz9k4ag32zshu20j041ep1fo1ig2ky9eqy48lll68d8aa0x0j7o0v5ko59\",\n      \"sha256Fingerprint\" : \"1xsljlxs9gs4cx0l7pa4a9kfuzdn4mhawylzzfldyzi48yjj22fc9x27wfeatu42v7wiq2iozrvujtsjny101gbfm1w9sdck7daf1ijii50e6ej32zorj1jr3r00cw0y33yl26npngoa5ktigbf1dauzw8qs3242weq16cv7o0kbswgn4dv3wtwvgcd53p025\",\n      \"subjectAlternativeDnsNames\" : [ \"nt83fiflx80rnqflo1xs2zazv1grmllprj9jn2dsdokyjewmt91pld3la8porsb3l3cfho9chvju1dzpu1tu7433cgodkpp4m1qt8s6dhcyk6rlaspf5oye938991ezqeb071y9ztctooh5das5b0hp14t7u2g\", \"4ei6bk0rs3w6gyvxapc1yi5y4jcos9hdha38v70jiqrpwotufkg7pa560i87rhynyhjy6e\", \"ooatwpdqdga\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"h9003d579om1q7gkjtv1thoduc65ds30wydapt3qpgqmdeiviuqo1lbg5cykur43uw8gha36hawgkzzskio2u1bivtee8fbjc7yzoxzj75nj37hvwx5rk0b7h1d3gf8q3722m9ed5fnwi1ykifolj65aixvc643pi8thef3g9klasao\",\n      \"notAfterTime\" : \"2022-11-12T17:23:21.700743Z\",\n      \"rawDer\" : \"ixqlf6n57v4df04973l\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-12T17:03:21.700789Z\",\n      \"serialNumber\" : \"ukycl4t6o6k4x8zp6es1njku18oo9s33hajno8x7dvrnqgd3r5ohyxam64\",\n      \"subject\" : \"vtjhx4fsva271fk3bc5xw333zf3iwpjv8rdssulyvbh2tu693xth1wzh6hpwq6wz4nctrjld80bcd7fkgpv9fv79k5bvfn9yn87dexmg07a0bptgiccwski04k4jmnq9pnnqlrfc5o2094ye9k7su\",\n      \"sha256Fingerprint\" : \"rj87txa3pz1p022eoft3xekc2nzbkx5tzk6x9th27uha08pdgm0w04bkwcu7tpju5xve8y5ci1p77wu8qr5i74am3v92btltmbcecj0qk26h49mpsqfu57l596pkdk4krs8tlldou0kngze64un2nl8e\",\n      \"subjectAlternativeDnsNames\" : [ \"m5tlt0t3g4a1kz07zm890g56qxxidrdntxqyj0osae8nnrzk2wzql8jo2a7x24wxphetxylkifz0vid4gprc98lzkjnaai9d6k6zj1sz1i65c8ykd686a13j95mo9gb7p7enxbmxisyuesa5q9nd2slo77sfv8jrxwipn2y2esf65w\", \"ppmby99g2zp6re2tdft36kj9p\", \"izdcqa5vt4lqi8elyxthinhbzy7smp4fv07cxtps7tl0frum0ilvntiqu52ukah8iaa8fzfngs4u3cdh1jczoxap21ia8zvbrimwc6j0kp2lv2nkrnzc1bitjhap5jqri4c4rwhzbt18zw42kq13j36pxtqigxpczy3rlr8sq7bc\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"tl7cnfr7ow734pbef74gh3k8fx5n06jptf7\",\n      \"notAfterTime\" : \"2023-02-03T18:26:21.700889Z\",\n      \"rawDer\" : \"0ivr6dvhbqolybuvurf8yv7316iu59xkc07j2csaeqtmlhra8sbzrvjl3capdtq8iebzp9p00fjkc56vbb\"\n    }, {\n      \"notBeforeTime\" : \"2022-04-11T17:16:21.700936Z\",\n      \"serialNumber\" : \"ssm70gttamzio6nj2hk7qzoqi8x63j99d7dskoedyy3t71bzpq4sa1q8cw6non7nriaq5ue3wrecx8k7j84cp09f7ncf5pf2u1xc32xb85t9e2gqkk4x4edm6ttda89yfck9w8jezk07q61x9ehv7l7hth\",\n      \"subject\" : \"qgbwar3yvc9mhd4m8rvyl90o4k32msmsk5mz7cyys9nvomnyk307ei29zhlk268w7ja0plvennlb9se3v59zy8oxrikza006fzxhlx353suhdakt5bmjer2qi4\",\n      \"sha256Fingerprint\" : \"puqk55af2rwlj1uir97395vpqwkjhr\",\n      \"subjectAlternativeDnsNames\" : [ \"58zwp6ayggfkgjf76o30\", \"5hmgpl1k67bbemq8d97t18army4w08z6mvd9jaegc8z8weg6oga8crvsk3x646pbypx2198vrftf8icw2mc56nkykvlqgtkaqziwjfvoa2xzlp6t5mt51nwdw6u\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"5h4i5uiddnwu0rihmatky0un8wh6xadpeehdwzjm5rxh0vyzznuvmhitgwn0edobcxslp9ezjjx63mo\",\n      \"notAfterTime\" : \"2022-11-24T18:39:21.701022Z\",\n      \"rawDer\" : \"ch73t4348l\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-25T17:26:21.701066Z\",\n      \"serialNumber\" : \"uav92vkyqssnee49gmtis3s4fqej34mt380txnloit5cquxad6zq68nbm94y51zkirwngh0xxs8pm5k4im6bewy3i\",\n      \"subject\" : \"mrmub1ih74jsw8msgclaoez96gqb1pv17axbrcvr8moujkxlxgmd12pqpwgvrb26hgesm7jbjt08hakq8tm1b1cstyec4xztvpn7o6zvk09ml9gnz09huhd3wn07mxyuqutpd167ifdv0gwxssfaj4k7euyc39opurk6dgo1avihrxkvnq08osrtxs\",\n      \"sha256Fingerprint\" : \"bmrzwdgiwry5y8wltkuf6f61cp\",\n      \"subjectAlternativeDnsNames\" : [ \"x6i78ywo\", \"pjgx2ikxg9prn0ww04ip8fh724pqekzsbo1ehbbl6gjck6tnsgyd933c835ioitk2wupvoegpgm0cku27uquk23rhl5rsmxm2swkkp1jelw0t0flxxw88mtqbthavikn64jh8yallijnuc89duda5xb80c9jfkyakb71fjzypvtz86q\", \"nouporpzlnxd8kx9yxfngwh4923kxqzcy4mzpr3b45pvvca05o2tcubsl0i87b88niluxitqudlexwknhdumcn7g7itw6a48fo7ijk89o6yzr83z1d8y60lfhodvr0rthypjolqzt9j60hb4arrl\", \"l58eagch5fgjy7vplu9yiy1k6xd0ro16141rrpfk7mltm9lnkt7gcegttu7gr\", \"3y3j6guyvhivy7ays1rvkmfera8if8jj2m3j9mqedeaqhu4amajzcngd3439fr9cku9gxjaarr13nagc2tbet2s81dbsrlg0exchfkxr2grxvrpxzlqzand9hwkm1x9lzvgr7xai1m3onson9vtem9hmwm9wc\", \"dran5ork3qnsumx40xd9gpjo5ll588pf7m\", \"qznikfvwie5rxh15xhgpr1e2vbcf49md55xmw8ylqwf0bngxutcu81i0ykbhe8ry5npc7lnp6s7jcn4p5e1eqsp5dsjz9ewpsuzb0m16gtohe5brua7h95jbn4pqe41o91hcl1hhw8k6fgng\", \"eskkcgmogsvwkw3rrdttwsuy3kdrulfdd5nvdy66q7aj3oqgr1w\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"eutf4azfu9lzvs2jjqsq1vuxid1l8fbwgmgb7gq9z7pgbilchnxi\",\n      \"notAfterTime\" : \"2022-08-27T17:04:21.701189Z\",\n      \"rawDer\" : \"t1q3tjanf7tkzr26f1jnc071ggezko1u9pl0k5e969cb60iw2qjuu69n31auvj5b3o3yqj43yjrjebjblg7kl78ac88t5vn\"\n    } ]\n  }, {\n    \"hostname\" : \"Andreas Beatty\",\n    \"endpointFilter\" : \"fc68aeakgfliyc9juj6za0\",\n    \"serviceDirectoryService\" : \"7292kaqjly5fd1s7zubkbf8wez2job5lqikug77xth0f1nwgpfvw7c5\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-12-10T15:28:21.701313Z\",\n      \"serialNumber\" : \"as46jgtu1jmsd6o5mfhfbst7kb9xz0j6y2ssxc92es82isy8e2r2u6aevlkpvz4g4v5xlds5x2c8irz3tis9xp4aqfbqx6f12rj4tpujpw2qziarr8smur77d3l11gdg4camkhf03r60orovoriv0bk2rdk6st2q0b9nehxljecd9h\",\n      \"subject\" : \"klth5wpv3czrccg50w5xhf789lpiu4vvmny0aewtf5y0hr5o1f2tx63\",\n      \"sha256Fingerprint\" : \"oo4oc1lr07rkohlzhqmivh5jclg0lx6e603ggo8tso5eb28jqfbu7q29d7qteguvz71jtzgx3tugngm6n85emoaokgjraqaaigc9vyd4i2uc12xd97g68854v6cjjlpebtuky8zxjfykpd20y7ju4mm1gvvkb\",\n      \"subjectAlternativeDnsNames\" : [ \"p12v1bzham02v7m0n25imtjsml9lzfx7jw22mijq5o4l6invwuek508xvkrlbtan16ds0uij96yig21sf4ew9o792xm44vujew5cdsqy50uo9a8s8jf4krl741duyz5bvlngfbu16apkib8d2vvxqbxlovh0hm\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"pt8cbf6mvkc444jdwu861yshynqkeyvgxctmusl0koj5kihet0xsgtzn3bsa8esmrv3the3j1q1cyuf2ix96m0xx9wa9rbspcvrzrakue6xf7p9lchlo7lcc2sss3oeik4vjlm6a73jpq1psao4q8qk8kon5u57gydh89o7qrrztrw9ryph40ez08\",\n      \"notAfterTime\" : \"2023-03-06T15:25:21.701402Z\",\n      \"rawDer\" : \"jrfgb6tx9df60jzkh5gkdfgknok586nuva065sfoq0n4epleinyg7wfxo4ut5fu49j46avwh1aznz9apa5hl81rle8uz0nndt7r\"\n    }, {\n      \"notBeforeTime\" : \"2022-08-22T17:01:21.701448Z\",\n      \"serialNumber\" : \"z1usqrff9l6vg9ngul58svazrcmv7p1n3ue42azzfsfcagg1ktqgpb4yx22bkdf3b198t77futvxwq3ybkr1bicnusrmzy06jmqfe6kym57u1zv39kcqlq\",\n      \"subject\" : \"32235kqw899bos5o8t1qm9a7yceewv88qdu5yjg215u4dhcfxyq6bef43hjpryqz7p43grqg0x75k4xca2ir3yw09aoemyzeeynwi45ya4mk41vyr1um8t\",\n      \"sha256Fingerprint\" : \"c45u1zc65t09kzpkqvxc7lv4k5o3gjjiuxsfoik9dgrns7699yk3ifc13v24q8vum27dz17u0l7cpla1segd2ciam7u5zk16g22oil8wdmljncr7z8zmlzgj3qd7g7xz93awak47i4rgr1a8lw0m343ftsgos6uxbvtt20r1yafbpu\",\n      \"subjectAlternativeDnsNames\" : [ \"onjwtekiefesaadfl1frv9\", \"0m8vvyt3vkkcv79vmufrpj59if8kizzv4ag5ntehmw4i0\", \"ghkyotn99tlzlotixpm4lb005ga3ckbwf51qrhxdzkdl18xzwj2nl6c76wvdfj5o4prpw41px\", \"vg8f141rpkmdir0jivb2d8wl5evutg05eziz3e1jm5rg11r2tq5bf0duxnz282vqbvamzp1efcza3ev5u04opfovv9rgi3hw047u0ll7ntkwchvrcclh21dd7qnmm9d3gy6sufsaobwkrak16sphjjj7p6za1vwwush1yl74sbukgmyyauhmz73ylfzq5ppfw7qn7h5\", \"k7vhblnyn2p34hj2l52tzfs9s7t1fnlnao31wm5al30cjwvli7cycy3kclsv68oa0cz8vw5x0s0o2cm5a3scj7vsoyervc5n3s12a9enhtq025z5xskbbeoa3ahsmjtzbgjfgz1\", \"6qkjepnrxfwpk8nm0xnb4nj5vekpn3n0ywax3dqlhwl1hy12tt24uvsueqs8ryx093z1nrufykxxp7tv4pldckfcdi6aojw6tta8o3a3vqsow871l1sjz9t473gxnwpnkcu7devomvrgf8erk5fnm6pyzec2vzjr0plgzzs85vhce7u\", \"pzd2egx0l2qv9h16obvva31bc9yj78staj1mt9u42z7z2s6w4enhlcdxgszt62e4y2ac3vb2ap1wjyd1px5x2c4v693erk38lbaysn51rj8l5nyh32d2096ta8qtugklroa8csw2zw47r6s8msjhs5yfnywmcokfs1bxow3qf3dwdo8m5or19w9peltlrowmv8\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"xar0i7dhf72ncu\",\n      \"notAfterTime\" : \"2022-11-27T16:01:21.701563Z\",\n      \"rawDer\" : \"hx6gjahr3y6hvwgbbikm6z1ozd3purp4hkp1rknrsfhavbu7vxlt4pplfjbaeqoqr724zviu324h70m43mu7guwsvl1bsdnfbzpw035yhzh4puo3vlr66uxmwhrqic4osnh4o8xri51gvbj3jokzytkeammgzcpcj0f7t29vx04pv2\"\n    }, {\n      \"notBeforeTime\" : \"2022-07-05T15:22:21.701609Z\",\n      \"serialNumber\" : \"lmaif974b07lixncvv1uxfncjkznc9arsq3ywer0m704lt7udlbxuf0d8agh2gdbrr40vy2bq6670wu4dcrorodvff455x289rhortr86l9k5fp6yfe61yzw9kno\",\n      \"subject\" : \"uib929bsv0c46kgcl6ci71q0y7thzp\",\n      \"sha256Fingerprint\" : \"i9rngpr63skfurwwuomhs6pare7vub1i22icuhuri6wgg0tulu\",\n      \"subjectAlternativeDnsNames\" : [ \"dsdyyhgcoyojtbjsav5vy0s76vmp6q4f24gq4l53lvnkf9i7lbl5nv892ff6sj6fxm9a19l2pgurmic2p8t15h5oghd\", \"ksdb07671xu1c18qwz2h3adwy4e7mxjgvwobz034wabzwx1syfqta66mhb5ciubyd0aojq\", \"96qu90bctoi4wdjzo42c1yj7hda5fo5pav3ddzmfxr5hftlncpmg7vyjvtini69vaiqkb3a6yh7tp0wlueu1qkwpcpbb3zwonqsxr7nk36omaapa2fa4pi457j12iobonhg6m4oimddnqkj9gcizh43am95ya7mmklhtnku8hsscmpbgwc\", \"58gqyn5bpilmh4sv1h9c8hltsw1i2zs3q56x1gik9madutodq63fjac70bbws6auksodeqgdrudbtfu0jl353yij1l5qqmli0fv65y0t0uii387v38uayu8p3xapl1gu1sr\", \"yh8mbmz5x7wkt4bxv3ebkhdcbabffaetfzp1tnuul0696vot162cdswf839d0xsgkwmua9dcw04t3js20gxpbxi4ffqsgje4fungvbu6h750aotkpbyq41y8d5esiscauqh1vdftt8imxmpsnly\", \"0s62ojcaquor4qvp3vathl4625arbuwimua7yvdw40wt41rbey7ek9g1sqqnco3wamvdzwkhsldcf3qywp1qf0zxngyj6nfx0up4e3s5eah6l3bqe2fdfn5f6dacp6v8rsclvv2tv4a626aqjvb4mlz3yoy415zqbtfid1gdz9l\", \"qrkstqdb2ss43099oi6gcl\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"xu1b5qgutcem67cthxgo99xoqr8wdesx2a0doiqxj6ku0wnbe63q40\",\n      \"notAfterTime\" : \"2023-02-26T17:17:21.701723Z\",\n      \"rawDer\" : \"rsl4kx9bmzlxx53qezz6n7htovsdlqfyov1d5g1ayxvvt92qe768fd5xmx38658oc5kpta10etcp5927omxj7v036xf69pwoxo4b45beg08rcbfsoqwbwphu2lkut3k\"\n    }, {\n      \"notBeforeTime\" : \"2022-04-16T17:35:21.701769Z\",\n      \"serialNumber\" : \"fgypp1534hn2mozkaek3vrad5mu36lsz6kjf1go3ewtvdg53rzg0mjorlf\",\n      \"subject\" : \"ifv0463lc9ujjs76ksd0kr1seu4blinmo49amvobv8b7o9cur8djjm\",\n      \"sha256Fingerprint\" : \"s0haih45gi4il7zk70rtg2mdb06u5j8pkadu29e3z46bc0clw43fp71msyb8b775n0t2ejghjz1e9px8zkc09j3tsuj6088sntc9\",\n      \"subjectAlternativeDnsNames\" : [ \"x17bbdw2omiqppfhcardqm9lxey81fpc3vlda54p86ormie4sf0m0knut6tu3wsuq017xbxleimj40dj0zw78ffmh2981fttruijr89j2099qpacm43zqi9va0pfh3xth3xher9vwu8l1t37gdif9u877aqpc11yo5t3b9hck2cw951e5e8e6jifc63his38gluj5hd\", \"tt5g7sjmdebcxii8ddyhokwevyvb4xa7zr7x6g8kbtohwtkk6ierrhnojypeiddalgvxiefalytbxmwkpdcqdgab10dwkowxdp8kbvvgsoetlp31wd0vzht41qw7b3wehi3zieite7fz0hpzxwxxgtg7bradjpdawkb971av976ypbaarpbge4v4bf1lj\", \"8wf1q36xb0mvsp1m4rm24pl7kopq5q7km499ewuy8syshvre4e6p4jnnjmvha7cmcwsdu74ytmois1gqdw1rd55b0j9jr2apy0chq2rdn4c6wu7x0g7b\", \"fq8c1ign9g51s1rx\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"7oiw4i2cswvxemjb4iym66gnnij67368q6zxavifmmohfz46vize8a7g7z2evbdyuu1ei29mwu2erngvghnc3t7bdski5s9niu3f9j7mo4etbi124c5ljcf5cgu94hb4t76oj1nbtlbti7eflhdso2dx9lff4v7l2m5mfg3gkrhrp6qx9agqx4899ac5v1pye\",\n      \"notAfterTime\" : \"2022-11-30T15:41:21.701882Z\",\n      \"rawDer\" : \"azu2lew9cq3tuqpllvmbmyjbx5wyrytve1i3fvdjkb9hwtnzaquz6kd1j21ags5ja9yeaywh95fekyreimmnxp0wk65b8n9n7qh\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-23T17:36:21.701928Z\",\n      \"serialNumber\" : \"hmudm817ryk78m746pddeh97qx9opukiean6rbhxob59ozhp9r92x49p013y4f1sfn3ccry9b6d9viltmsx60djc8nzhg0t7glpsv3\",\n      \"subject\" : \"53x5rt42rjpiaw2lgrrarrqb6mc50v1vgvxahbibv4t5l3w\",\n      \"sha256Fingerprint\" : \"lwg6712ejayhz8rnmlmc1pxo5y2p1opb1ksyx091n525ox8cy4qlvyqqyxyqj218lq11o0xequberkb8g7kooh1s7axdkuowu3584ns653ld00s459gh8ar7nkn0mqbp8cyo5j853foxftxj8ny0fu2zyuo6bak\",\n      \"subjectAlternativeDnsNames\" : [ \"yq5rji0q3rj7sgz8kkw9wit6\", \"1m5gonkz5brxp1xw6bm43kvyh85pp30fz3zaf1qp6rw18pbdtqkxez8cnihpflewspwz46yr9hga612imp\", \"uugrvahp8j0w3r9x1balr2y75zagm8gd7qcjljs22j3f0e\", \"ik7r11guhnmmaubc7kjnh8chckrxgmbjhj3zdd248n7hifn3vn374tnqguhn2fkkp4th4ozpl5rbo4bnxygza8flnptm1ur3ehd8zb7z8dqs4maz60senocm3bhhovfy4c7k0194wv8zvp091sx9sulpi62onc\", \"0hqc68lmtshqz755iab82nsh6ltkcbf57hbg835v9vnsv5h1e7l1rj15t5wdpd66xbbblvww90v7e5db0m50ktfpc1qk4d3rk1ofgheivb8gh09sgk7m24uvqkvjw0vjvwxjqtzdysem060p6mx1dlhc34c1qpo32xzwnmj9qoed2ec5ve8rlr6fbc8ym9z71\", \"p10qzxwlvlmvc4d2qfgs8kj4bnug2d09b0qw2si5m07uosbtpyx3oiy6wdiaj3c1rdh94y7vlx7x4w5fj00702hdlyqvujsql32dcdtumsks\", \"w24xz4zv914qxty1uiigmrjp6zxnsqqx5rqyka9adbvm7pvmzwt8t4z04uzzq6jaynmbrkrnaxk3\", \"3rxgwa4dim43rsarzbwlfeuqhi92r7ehsp00pzexlnkj85htz23edfp04ipia2ea5uzrase094lw3bzjqf16y0nqxehpky3emf00jz4z5npnfck9uq6o0q599dyge5onapaoktb4aqvf3kbb4jucp9qx4j\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"z1vin\",\n      \"notAfterTime\" : \"2022-05-10T15:40:21.702056Z\",\n      \"rawDer\" : \"lzvpb2026gx03o5goysm8zdr7aar74rt5c61vkmacifhnes2mp8622byrpa7ty63xrl4ka3kb6k6wdwft890hvdcxvnml2z3pzemofskqw2fuwgm2tvwvppe6adqp5jzgbef4ck5ynb41z8ggeqonpe8hsmloahj7ggggf74e94pcz1o8h9tti\"\n    } ]\n  }, {\n    \"hostname\" : \"Santo Smith\",\n    \"endpointFilter\" : \"zwxobkir9trm4bbf9zh92kh2811oig80h7lfphp4pwqiip1nmpgjcgtogjrmk0jeuar0fanf2x1n18u5wqwdre3lalza9ucyr2dlwi50bhbrx70zcishk5hejbhca3sarmh5adx7dieonm\",\n    \"serviceDirectoryService\" : \"benumig512kkly8imacj2q40cbb1bmr37lghf05axpguthvfpzzfeaifnqaa38c4t9fq0pkh5lznhj2h81qm8yoxot1oknhhekf9vlm34uhr14btfqdyquequqmbrr41xntr2zhne9xats43v442ee01qmbjt9glfy9bfvg38wkcdw5yc5eeb\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-11-13T15:22:21.702185Z\",\n      \"serialNumber\" : \"2jm4821v8vp6ez4xsp6mqkiq4l87zrlmulrat871pb8ygdy54jc8bh1mdz92tdkqnbz9vhes737xztmiuqkuuzxlhuoy7otd\",\n      \"subject\" : \"j1j2v9pswqpqfbmz41z2lfpo9negz4b94hx6k48eiwkf64lkt1u4o8iz2xccksy5yxhj0vwpa3ukacxs9f2u1vqju789bwpawadhb0ti4s4ixh4w7r6ermyvp7yrg80lnr39cl7qqxq3x59uf6if1fczs35dnkck2czr1rjf7orjg1wsa34f\",\n      \"sha256Fingerprint\" : \"mki90jyrk96in7zv92fvul5lx1045y7kghbqzyitlt4ndadhaixcx5o9h67ssipu29zgv2twbhxvlcf42w89ryqspi8163tjthmkwoxbhq3hzg6gbbt5zq0ws4fak8s3nsxi100y\",\n      \"subjectAlternativeDnsNames\" : [ \"ftdu38ghitkuxoefy9a99596qa3mi4ntj5wi865\", \"o5nbr4831fkrre1yhhkt3l9xqsenm546b1hvxgwco674iz240ix0vivs9qb57jw4ovaa71tb5pgxyjf4akp094l78tpyo12i49nwm8p3zrgmk1ayy2dxu43lj\", \"udnlacui760y3m5pbimha0fmex09cc2bte7uiyyyd039qvrddj8e2rn4dcm8m3i7uwv84vsqyhx23sfwqsbyqqf5ujqbgqrulkuv393tcowxvvh519rh6sm\", \"rdljk2m9\", \"xcgtmepr2y4wwz5dcw423omhqqt5g0qi3o8hjiqghn556sav6ol7qv41kvtvrct7qwyggixsywalaltxxpd9coo9ihjjxncysvqiuxwmjmj8wvdb3jv7sbjrmejb7t3o8dtpdg4vm32v71sleus5ij5hv5s9dx2mq\", \"4tbnruq3l4wvwtsvj0d8tcf9h6x7s2da0chvpoum62s5i6ekdh81vlz0f2wfwpdbtj5irbnayq7glch6akfz6gt1hnchrk0v4zvpxc8lk4kbx8dqnl5ocz64wegr1m738rnc0da9trl4ib3isurmscxmomqjzdl9isheuggmhg85l\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"xzlwctplu0tw8oyrf5zpfjx8kif2p5ae6jt71u901cka8kw\",\n      \"notAfterTime\" : \"2022-10-11T15:34:21.702302Z\",\n      \"rawDer\" : \"r0vncjx5szloezbpij66wj75yzr0ztz1ffr2584udybg2q8y3fgbqqbt5c1h7igdwd3spmq6vtjrq6hyx1cktjtr0bz08rrn1vwxwrwazdp76szzjdrt96sx6c5x42c0wlvhnhp98l4a2upxfe107s0lk4bry0w3i6qrczu7zu5drdwu982ct3\"\n    } ]\n  }, {\n    \"hostname\" : \"Shirlene Yundt DDS\",\n    \"endpointFilter\" : \"wzif92h0wrnomua7xmab9zbc\",\n    \"serviceDirectoryService\" : \"k4ddnqjglsmdfoh1sxid3ydvx79pngngv94gdc5q9zid8tw6l0wof9qb57edh37hummpwtyamhqzknamjvs4vdjgkxr2kw0esdw0261logfs7cwyv3lf3bdhpty40gvl6eyxdhmh2l5oq2hkgrpe35jupe8nm5wtge4ob\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-05-29T15:10:21.702425Z\",\n      \"serialNumber\" : \"l096i3ir0h2mat1gh3om49mz6swdrq916m85jy0vd7n30sifnvd7xku8pg9jvj0q5i4nszgtt3d3sq7ek8c833bu1glya7vt6s3gp6u7qdrzc3j20vd9n6cdahzngxdunamramrwjpm3wqqxg67zidt9j2fe4zbl2ul1ugpwh\",\n      \"subject\" : \"mb17mtdcp7myxyb131c1mp02a2znxtqkkv4nvclryqz0z0walleckf6xskhf10mogzwinqrqqquqxpcssvhsr1xa4gn8ys87yf6ntqgqqb8r0qw5vu8bnbkylnityu3xfb\",\n      \"sha256Fingerprint\" : \"q2f7n1ubw69fki4w33ogoda8ihgt8w9yk1gaflhdncglldifa2a5vm1v1gn238r9a2hepjy5jckgf3t3g9f52i2sgem9n5zv0bqyu\",\n      \"subjectAlternativeDnsNames\" : [ \"b0nbdkold\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"401hr599y539lvxlybkuk7y6cmrchkqrw7uls6v3t91k8ssbjd\",\n      \"notAfterTime\" : \"2022-08-30T18:32:21.702512Z\",\n      \"rawDer\" : \"sv8i4iuzisugo1x2wbwwuq0mivc92erhmk5cszswtok0k30dou9yq9y7mu5n0js4pdr90cnu2q1t2bx5nfxrryyy7srktguzu3ras\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-24T15:55:21.702555Z\",\n      \"serialNumber\" : \"hzzmqu3n1fggwm8umdx0g0yathb0op4a\",\n      \"subject\" : \"tz1lq1ny1nyu9bgyjy3w68vltlb7ud2mj8yxb0wuuq\",\n      \"sha256Fingerprint\" : \"xr44tuikyfomsjrdm3sd6l1p0\",\n      \"subjectAlternativeDnsNames\" : [ \"azqnlgp4rtncf04ryryi5wr12eqt0kuc8vs55so\", \"phfv4luceagnf3q9wbqh56wo7arhlmvzm2fyse51velzn3kh8yd6mm6uboy119eqndusixzr5338cxt6jxy3o1hk1ewx\", \"y1baugkdi0dbp3m0qml740x3te65vll4na63izokl8ih8ll537hq\", \"a4vrxp39djevo1t4lss2s5gjzezu2ge6n9n\", \"ggkcqbgk82fvaz971a9su1izvxrl3sdh9cs0pyv2jowatp8mvf7h6b9u6xqphj3qmvymupn2r4ln3a6x82mg6xz4ppa11iyz8nn1vyg51oukp4y2z\", \"zzt3gqioqd57oowxbxmdub3uvjevh81x9e3po2r774ajm9m0bfmmyo6xao55rwuskobjpk\", \"xylxpobyb1q9kc77oqiu31uafxj3kqckfkw3qq8xgti6luil2xqanyhuy853gxpen8id2buuup42tbqj5skzcrz93ua129u85s1mxh9tbimnmj5k5l8djg3p2f2ezl3s3ivf4xoa4rp58ytzpbmhzg\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"mdk1ihhill6j7c4t5tmx5561yi98dltf5hmgqe1xcpmlknw7z71gjack0yj1nf4gcj0cx8a9zj721gy8f1nbq252t3sq1wzdyizmtu19e0hljyepkrcl3r22fp1tks6s7fqu0ks6p85c61l8y97sp2lxl8u1j3c4nmacjid7hmbud59lu2cad\",\n      \"notAfterTime\" : \"2022-11-09T15:59:21.702668Z\",\n      \"rawDer\" : \"qogomhzd8cvhxv27hih5vqp4p3prh54t5w8d5zt3r50mtrkgzdiu84du30w3rologn4o9utqp8zhyls3vge4n88m3q3z0d5013cp84118yv4ogeo770lkqmte9ux722\"\n    }, {\n      \"notBeforeTime\" : \"2023-02-16T16:10:21.702711Z\",\n      \"serialNumber\" : \"w1ox552d5vbqo644kktkwd7hdcvfns22edofaeyiiv4eupsax5a6bytvbmzctzp0blypxkbo70n1vwhq80fqzgt3gz4p95gjbrq4etfbcue4ilngscbxmhouba1l11etr9gw9l47uvjapiq0xdvu5j4wd3voj8jk7bj4qq5l9l7l64q63zmusffh\",\n      \"subject\" : \"w0iwy134a02yvegbesffyg9f8zohbxom2a0gb2b7khviklp\",\n      \"sha256Fingerprint\" : \"0um4vv47b7z5l42y6cr7b4i6puit01iuaiozmhapyy50uqj1aykgwaq54w2tlwfbmt6yptvbf5gjtwglv9omoeyvho65nd6wc95tiggdc\",\n      \"subjectAlternativeDnsNames\" : [ \"ehdqqkbdqcmfgdii3bthjbjvu32vvvjc1sw32rjvi5p1fatu6ow7jc80flxlfh4haos0bfz85pd\", \"0fxhbfx7a7a5a7vvel5aqj6roleev2shshvtyv8pr0zilwgzfxzhwvebmr4l0dcujszw78pvyxnjaej1k530uuzdkbxgjzay3671jmrns8c3bi6ggunksfi37fzef2na96lthlovlvh6z4dexuhhisqbj5n8ksmb0hb7lc\", \"d4pt7mraekfepj7uf\", \"gil0rl6l0z2718t50p7i0fh5y16ujlok9zf9hogul9y5rtg1mjv16txceb9lm4azl8ecdbz4015xvzntb1clzie9d21g1yferb01tda15vrs696bz2gnggnw4ci04vsfi3gifb6jf0k17h0hhq5psvp1j3p0vaokdk72rli4ziw5uodh6p6mr8v3pu80rztzdy\", \"ow73g7hin2rmx4r12hl0\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"rdb2zbj67or3dtcr0asytlqmnfp948xg1c4uz3ret29ta46ub8hx2s5vqj10vsu9brm\",\n      \"notAfterTime\" : \"2023-02-23T17:02:21.702817Z\",\n      \"rawDer\" : \"rz2ec9580frsr8qtb4kdlx96ri9muh0hlhimjgpd7xrpyytnnlst74of68v3bb5oj7vaaf1d3ogrtoscxkvde85b51p69zxdysxc3uccug0t5w0macheib7nk9frm7uge8gpvte3e05u8ph8hmuoorjtqu12xyyey8korgcdn58v422mgti2zek8cnquebxhj\"\n    }, {\n      \"notBeforeTime\" : \"2022-08-18T18:31:21.702865Z\",\n      \"serialNumber\" : \"whtocildfvwn9n06ovxu764c1hlfnk95o1lgitmd3xamwqdhbldo8n46ognodzpwqj6if8ek36y2665se74wahcb0wy0odx3mx0trvnd5ls7grj180jyol8te4925qy4k9ovtia96n9w1l0ens1ajc3ng843gicap7lptx7arjjya80iqsa3youtb5nboxz\",\n      \"subject\" : \"rmwd4kf1tf2febcey84fven82ybb82cumu8j8eyyuslm3\",\n      \"sha256Fingerprint\" : \"44395nc4p49crde193wpmh3g457bys7eu1dxa31y4ddokgej2zxsq6dyt99bdpxtcl6wubwopxpx6jwj3wzlnda2qrki38gf4kbbx603k196hjhdu5b3y1mo0qa3j1oxkl\",\n      \"subjectAlternativeDnsNames\" : [ \"2q8pvy2fvd6lavl463tj4012ebrd1r1ilb1mcoaje9bnfkjtaz1plkj25fr\", \"e013yv20qobm3kamibinvslodbvucuzoil5d0tarw0r61rhv3cib9ndk5l88l1z1dvuxamftjqudr3615x0zkx4mnoxqarapfzne7kpliae8qg9l81t0pgjnfj5xtsuldtgelnl9pu\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"2cpol0vzgjw2s9lfix81ybjjie6uvmv2dergjymmp4pkuak3q9atck1ixr3qcbqf3tdx0jgci33jbe8smg9suih955i9jzcf7sryp0y62rlk1e1\",\n      \"notAfterTime\" : \"2023-02-13T17:05:21.702961Z\",\n      \"rawDer\" : \"2oxcn11axlhuu96yguxyy0tr7ivc82lj0ksm30sygasptegs0lg9\"\n    }, {\n      \"notBeforeTime\" : \"2022-08-20T16:56:21.703006Z\",\n      \"serialNumber\" : \"xopqbv5momerszqkr9zvr479lz51dgwhvmdyrgsu3qofdb8x72xdjp9ezzmua5tfeejrhtats05lfjhg25wminbtw8svbhzb57nlflily0d6rrpsc8iq5veu5cspgzf7ad9x3ad\",\n      \"subject\" : \"e7m806mpgm4ta93p1xd4bldwrgkq6mcaiqk0iuti0t3y0b921ye36rv03u1xb8lgu1tr0f2cpzgrs65erf6vlkti6631ceqvriil7amg3hogu8lwn1ugeoz0g7iko59qrq2\",\n      \"sha256Fingerprint\" : \"95369oh8h32dy0n2v1pttq52eijt5kzvpzd2963o0rxo9a6lniaxo64iwtnkxogqxgz78k7lhmjw8p0p2whf8enk95d2kj70rjbvfdx2cx613d8brmtnyo1dichb1ramxefkd9xf0rln7wjq7uql13\",\n      \"subjectAlternativeDnsNames\" : [ \"q44kbhjg2pn2q9xs1221auw48yz4278jzbqxw5x3awc1wluco92zr2p08bo5xu3mtdsygl5tbfutbm3hyeucnbh2wt39xkunn1o8bcy8y2kumeicnn8mbhgzrtt88ktcjdox12dgfodbm7jhuhrz9psf7fodpnml7z7q442giffuagfq\", \"c3d3nhfr9y7y2nhj9765hm14msqx4ml0lcq0e4p0anhezla9v7n0oaf5m7pc1j3hq04tyhxuljhdm52uc8wnygqldrs86sqzfmsgabr2djs8qgt5jhofmew574fn3pfhkf1jnennqv\", \"c1eoxbcc5lzzb86gpgr1y5w0ap69jtg61bg66tq3hcmhuh93j0c4hz1b1yiyaxw2xrtwhuqbhk5h71zc2ohewk1eu3s2em0yo84ilpchw0vi6o2zm8geqatstqcmysk253vmm624zq9prq1tarrmjnk1icu2tv5yt0kys9b8yu83v0lh72o4fhq9wjd9pgz78h4bzz\", \"k0kkqho3jt31imzlt1x5ycab26ikeid0a7ke3u33vkh\", \"gnjtc8teevr3tity4nxe82x49\", \"9z80duw16ngin6d40nv9itikpvbu72milvqmmhj3cay2sowli7inhgxf9dbsqakyqko80w1cohtb3jferkrmkthb1sypuq1s4gl60wkvdmph4s0qucigdkgz1ksi6li76du1kgwp4eehj7ia8oiktm\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"ljd7tt8jcbq3oqvkkrujghq3t1r2pdkcxd10\",\n      \"notAfterTime\" : \"2022-12-02T18:46:21.703119Z\",\n      \"rawDer\" : \"7hgy2yns\"\n    } ]\n  }, {\n    \"hostname\" : \"Mrs. Anton Keeling\",\n    \"endpointFilter\" : \"w424l6riqt9ocl7f6y3d06zqjsn3gwlskd9pmepcp52xeb2aeddmkr6ipfuohpx0fvq0jsqzfpp6w4zfat20645khiqlx367185pekha1vfddo52ac7hgtxumjfwe7oi5t20t8a6zhw8z05mvdtf0vdqwj1wqc8l0acl2pyj04j2df9go7dpk518hrc\",\n    \"serviceDirectoryService\" : \"cj6gg2zelxomhu2qqxp842u9cnt61neudddax4f82c05t7jpqoh5yk65qjh684bot97cs7hv\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-12-27T15:30:21.703246Z\",\n      \"serialNumber\" : \"ckq32p6bsyehua7redm5iu673l8obmjqg8hf9pbvafldn0u0q3vmk6eo3dfh2pudpul7jbueq38t6dz2q5io0e96chsw1wzys148eu7wc9xc5wgvdyqn6e9d5qg4upp98pfdojq5w91e268hv7sy\",\n      \"subject\" : \"7ar878viw9rxcovprqfprbj2n5xyau4lfqngconwo993tnwaml7eegwh0hy50q\",\n      \"sha256Fingerprint\" : \"djdshlsn1plhnbct460eoy3zzhuneho0kb4l9vvukk0p43av9wgsal83gkv2a8inzwhdgsganx3xfrwnv1srpab0fn5sk2y2uymsw9l3j7mtvs7e3\",\n      \"subjectAlternativeDnsNames\" : [ \"z61h3xp519d2a58o6lvpn6mfa9sh\", \"7704ijrboifnlmd527amwa0m2kcf5ymokp5dwdhe6kf8p9u8rmx\", \"c9brus1afrnqspgvbvzhslspqbcauo9b53kd4yorew4il0l0don9mo7gpb94a9oq5kbcgczk5tvrljzmlqvncazdayk534uxpoofp2yz13tyon7rd1acax26tnrm12vgs\", \"xrdtw6kcj2nlq0mspfpjs338ud7egmk8r9ovh7an6qsmki89s534cxpgkjkzqf\", \"wds4qng3lsmw6osa95x6abpka4okdz75wxr83y70li0thmqbd6mdql3b6mhe29cb4sz7qsp6ixymhxq7fgvh0mlexp77yn2qtdxale\", \"unyz2dvfu5k0rwfe0sz2xrgrsx57weiisngug3kuff\", \"jff9p9kmvjstyr86x2ry695g9qdb9fieenfdfx56kd6j9pz\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"rrrxu3b4r9c0ky8tdn9q7wjmt4pybd0e3c1t9y\",\n      \"notAfterTime\" : \"2022-08-07T16:37:21.703361Z\",\n      \"rawDer\" : \"5d0nmsmhw2nrrenevfcq8roensj3s4xo0ndv6b55tcyotq4efk7x9rpqbwsmvrlxyleqz9ex\"\n    }, {\n      \"notBeforeTime\" : \"2023-02-08T17:05:21.703409Z\",\n      \"serialNumber\" : \"t1xw6460x7kibmhtn62vqbfczbpx30hmbbedm609j1zj0aqlc2d9sc7lcx7lqa1owv8du8be4mgbyni27z737seg7doqgbiywkry2mzka5uicpch2ebtlls9xg8c8burg0lpqssqomuw8og1jeiyo5dwxxorcm3vjcpq2yykabz548q\",\n      \"subject\" : \"eyuvzb0h4ga4zvk7lvwf3y8gqgclo839hf91jtiw5r957f2kltrova71gnv77fpnubcqzgeva22dk35zd28x544gx7e9ians3zn4g6zf7r9vmtrr7zj54kx6wz9hwcxgj5jszpkbhngl4ku4vkledj1a5fjq\",\n      \"sha256Fingerprint\" : \"jp9txdj19hy47tikdv5xjxx18n9rqyg6tc9ldlxb5bydjlch622a7d0ml2pfo0wta9krxetukrtn15oscdg1uk6hgdagbipxtbixnpufwa5b5rjmu3vbgsjcptx0ehvtri34yqtl2g95z5gxht78dkoazd65cys6kv6oat9g10gkk5z4gasop84\",\n      \"subjectAlternativeDnsNames\" : [ \"f50m0gr7qzewdv29cefjoryjuivtq6c3bidot2k0fj0eqapt71gwbfpxtjm9e9zea9je4hqnai6hv6gcp1obnxori82fsjeaiqnjlfy14ipceqefojrjrdzd3qegbvfc4f3vt21hmmf328a4vdi1wvljasbwfzsmx3pg\", \"jvqlvygwcelpgohavqq9ha9jfhy479a37sqyefc1n069hllnc6pn45m7ig48wn428wiv3\", \"g1279uveu66d0\", \"lu8g16qolginjrshxovdi4fkfl1hxbmh88asqbvc\", \"805eerd06de42ai7vmhursi48s6xkku2oijwbjjfn2phbkddaugxfqc3rg9njof4yk7ujvlb468uhc2v0hymib5wm4xw5olka4lv41kbz390k5xjyq5hu3bc6nh820hkr3wsa4gcdlye5dw4wlv1xphmf2urqtxbmkixjos8thdaebdjp7hk6vguc05widc6vs2\", \"tmhad829vajwu6ymyt3zpzcsu157uf3a1s0br20zh7jaktn4x30oqh7dkr4hurwjzjbxthjk2evhobz8g1pgbzsplh52zk4j4k9g1bc17symykqe8eoveu9k7bonfaa0c6d\", \"obc5px05i36lhai3rmw6r782tbfvp70b79d4w3ri7mnrdq\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"13jcad3x9hqckugviuqeirdmlowc9kcnxj7pn2n6eqxew6b1v2m2d0sdatlq49x65w893s6noc6ltg6zrksnyb9pfc36wo8kqruwu297ce6rie6xqja9so3y3e14726c7zsyw0rmmhntf5qw7b3j\",\n      \"notAfterTime\" : \"2022-08-11T17:31:21.703535Z\",\n      \"rawDer\" : \"yhjuzpbu7oo7dsitcawfb1dod8avtnmjiy52iwam9i4f9g00c3hwqmd56rgzwm8rtvg8r19kmz6hsvf26vu4d3ny1yf4ststmyv00nrhotem9oqgkde9rbq719m2w83079xarixs9loe9fqmwm5507klwr5l481\"\n    }, {\n      \"notBeforeTime\" : \"2022-11-06T17:07:21.703581Z\",\n      \"serialNumber\" : \"63798yghsk0bl51a755y9ondz0ea8q8dievyr6fa0yf06yyl8pajs73htuagalah6w2gs9x1jd19mjejlf3azes41ac6p06rk3y1uleq80j40fz1d6czi5e0o18yg142zdaauf6t745zpyzbw0fa4kusgbc9csoe4ygjkklnogm3x\",\n      \"subject\" : \"ycp8snrl12xqusbgomfktr2dk7fy77kcqephp\",\n      \"sha256Fingerprint\" : \"byqlg4dg7uh17vdxikgzbw1d7qg6p400emiqrvs4sk4ct18e4bubqz\",\n      \"subjectAlternativeDnsNames\" : [ \"7do8hi7lj6a130aq5xefefjrywfceuhq6d9fpruuc4g4vp34ccccqiuxxuuah6s0l3pz7e3amd0jjirs8qnwi\", \"petwg5z45ooluiier8dm4rk8c0a4g1ysxdw4juvo73o3n4t5imz3bg3vvg7co3yb7j5zz0yoobv6bsfyxy9tp7u14e26ghv9d66ipe2j2wjxt5ojq42t3xtw43wzd2w3u1rck5ozcfjoezvdowva5y7xlgo9\", \"jiz6cp76lxjsyssg0httrq2c8w543fuyfu3gj7pdlb5oibvlpgw4ht07hvq1npt2h9l\", \"cgj966u1u42\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"35fotvd2\",\n      \"notAfterTime\" : \"2022-06-13T17:05:21.703683Z\",\n      \"rawDer\" : \"4kp3a8i3\"\n    }, {\n      \"notBeforeTime\" : \"2022-06-26T18:34:21.703727Z\",\n      \"serialNumber\" : \"tmd1yq7fcz6mj3tg9um4rcq1kn4p1s59tcixhix594n3xsn82itfxkdp69mgzvxlo7a4j0nskcok376yfm86rvn4oknn2ificdmpi587a410sj8mnjomhlh1rd15i0zaq1spgg5svvdwkk848vurs\",\n      \"subject\" : \"x5q7kunrzhu5db59op3\",\n      \"sha256Fingerprint\" : \"m0omp94f3f8cawpx77grv6xkblp3lu3x963vhe70qv28j8dvvdc3j9nweqnee2l3g2q02l4xpidk3ou5kk7lmi2b21douv6nocusdw9urh2884rh9nlowkqjrx6kq2ofnlin89yzhj95oo49bn9p96nyqyzbqgdd80ri4epwighnlv\",\n      \"subjectAlternativeDnsNames\" : [ \"ds4xisrt14kt8z9fgz\", \"y1hp23bbggylnonggw2ak61cv49d7dvcfok3vyk49f2gyopyb1828j2ge1g5pl9dplhqqqr4sa8ilesip\", \"apotzcfwvb4wrkbb7akbx704iltwu1nod6cpn5bu9uiui9t6p0bcwiknqdcfyxshgoj0djg7zjjno2uu58q6r9704h0zzf59no4ya020zjfglpwyj159yko2m2m2hexzdiqn1jslsujeupjnjp1tawouf44b1e9ccyzruov16w\", \"d8m5babfu8dniac3day8qgmq6ni556m51kg13cdgz2k4nrk4tcl2aezims\", \"7ld0ndx8ie8ihwu5ofldi9ud2052zbs5na1xnit23e4ctx2x35lk6e60jcuv55pp27uma2xf6bz3uypdourqinxgr774ni2eekf0up4z5qbvcby0fx1dfxn\", \"pkg3rlu53ithqgrshne8v7r9hve8eucoyt0dxwdu6l12e3nsokx5i7sa9lmqozq6zk8x7ao090dfc1vwcficlr6p524l26b6k8rmjdf923mpqutan44kyijbcxg5be2y9eapq6qvkvijzdnxb6gjdi\", \"wp2sjacufe5p1phh3o1qfr4bdigwnchweevpfwtg87hiapsq0tnmi7wzn2r0l60rcyc0qjkt6o9ezu95orrla6vk2qp1h\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"3nz6u8x2zjciga1rpy0paf118rax8c68ea5xwzvzzvb8zkuynj\",\n      \"notAfterTime\" : \"2022-04-07T18:17:21.703845Z\",\n      \"rawDer\" : \"6eggwyqwaezaudz6eh87cmcwom2ty64tz7pedpmifto9oltozvosgjmzllyqvzx0tn0kvt5kex04soa066f72n9e1uqono7qzpl8ej58dgubq1u241y26y4w1hgtjt3dtm77qtvdajjy\"\n    }, {\n      \"notBeforeTime\" : \"2023-02-20T16:54:21.703893Z\",\n      \"serialNumber\" : \"6o48atukrren0e6mbczr0q4hg58e2cl5prhkceogc8x0s9m9lj09864vws7ackcg2qrczt7lbpeq2s1y98\",\n      \"subject\" : \"uznlt35aii94in8aem7cjtm81fyifj1v9hpsy9vcxvwl6w7x1f11gudvnwjom708ef8ykpp9zm4t1szhubq5xuzfz5wuevujjptuoy3d1y7omaob3ivdlxdnlqpyxcnjmlmvdck7sp4i6idyl7ep4gaokzf3yl6w81xjsk5b6lrfg\",\n      \"sha256Fingerprint\" : \"ckc9twksivea3fscr9n1sej2h0ywzhw100t3i0yxtx6orwch2vaq3cdaf8k36zw7f2bjo42dirvwb86u0jg6u8jcpyz2fm9067xkdemd69zndb60yr815por318x0lig4cta7u4ckj0b3olecg8vsswrejecj14i63dl8fzrxl\",\n      \"subjectAlternativeDnsNames\" : [ \"d6o1qxtdsg92vz807lghrhh3p376r1aurnmjikuv4ve2xpxseyizqgz36pl97q74n2tjtu2brh9p53913q0t4qe2i0j4o2rx7xf9groo2sgtot1rvdy39dp2zyffpkrtn6uz1hxl0q2d\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"8xkupovnkqfcfbfjk6vwdovhs7j1im7yr6d5dw07emzfahfnaxme0\",\n      \"notAfterTime\" : \"2022-04-08T16:03:21.703983Z\",\n      \"rawDer\" : \"v09tyd4ek0q04zo4jf92o1kg451lyfr3ljiqfymb26pxl7mcc0skm344hkqxhxzdy60efclcrqx6r8eh7wtm2a7no33abuf2iwbvbupxd5bceagkywl0zz94evn00icvubymbwmrjf7mllggb8ghiv6glkvnzyck5g1\"\n    } ]\n  }, {\n    \"hostname\" : \"Mikki Bogan\",\n    \"endpointFilter\" : \"bic7x6ajau3xsij1dp2jgk4xk093x71uj6k132c0pxvqgc5uewjm85utin7wf0ycbg82ahlvqa8r5qvyhldfugkxmz76w0a36ymi0sakmwko0pxgxt8gek4w\",\n    \"serviceDirectoryService\" : \"set05ut1f\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-12-18T17:23:21.704112Z\",\n      \"serialNumber\" : \"rreebvlgj33wgpe76gajnrqq65eeu9p54fr93v05vydm8d7kuly5qx30ot6oljfobucvnjohf2bwep39pe3zskqfa4rz789kwvuvkb9v1do15v061tc6xphyewmjsny7bg7himucrsl6ucjntt69dnruffd16gs3c4qy0pdokfl1d6\",\n      \"subject\" : \"28rfrcnij41jvbljj7jp38xdrog7zllxfkvc2vvqayx6t5znwe5u42f\",\n      \"sha256Fingerprint\" : \"gmpnrzjdb7e04s14v6k1u4yb6y2zsofm05qw3795dmjsb4npvzgd672\",\n      \"subjectAlternativeDnsNames\" : [ \"j591tw6uqxcgyuh44xakheo1lzwqf\", \"nn3288crv\", \"foffk3a3t2eufhj6norzlqnygztvp7z5o40p964rxvrj0qi0fguz6huncdf4sxpi01xopki2dh4hhg7mnz2it7kpd4d9sotu2nec7tsp8k6yx25l0okps971v2luual86ly5k9q7myhse5\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"p29pe35u2lwat6zt66vfqtje7deavwywocfsh37hjg23fdfpnv55s2s6u4wxwb5448luncfvqlh9kd1tg\",\n      \"notAfterTime\" : \"2022-08-11T16:09:21.704207Z\",\n      \"rawDer\" : \"8mfxyty0nlfuxe9eqn672chjvhhkdxo1gy1mo4e8m9ljpfx6jmitqmb3p45s9dxa74djg1vdco7y64sh5kradjxzhonfu37vkrg148m0a19zmve67yymv5i2i02quhd48gybyqn4o9n1ohm42r51h7vgi94dignajyz7glcdag\"\n    }, {\n      \"notBeforeTime\" : \"2022-12-20T17:57:21.704259Z\",\n      \"serialNumber\" : \"akp9cdje2433ojl84vyr9b2vh5bafwunuvvwexborv2idevi0afn509e\",\n      \"subject\" : \"7ie1sgc6s86j3sifh7ai59kkexiouga4ndomibrkkbgchrt0p5yiucg8by2qelv1cfitv23uviudqog2lzambhja4fnjgiyt48niay5uwsohuutu5q0yo5fkvi70oboe5iuy777b4pul16t0gdju2nwxqipbcb\",\n      \"sha256Fingerprint\" : \"qkps\",\n      \"subjectAlternativeDnsNames\" : [ \"bs256u\", \"9yb2by13fs7du8fsyavt3aoc0cabk4girv27p3dadwm5ynbdrxz4h11k04debuv0gmlt0az7r1mfhua9m15j7q2vema1jirodn3q2l8mys69v8ph\", \"s2y9ubeumwqoqtea7taqg93audtcjw8dwbatx5f1p2spiiy1i267l2ec7aztmzywhk28tj9et67apvr2n1kh1gj0jtory3w0ri7imb7jbn3eucqhj6wc9z4gkgkne16bj8wi5hy23dtzqpr23ef3g\", \"5yaag4c3s7efslb3ymjb1i7u737w6pgtrjqfio29qsisiimm7z0tghn\", \"l3jjv2dh7lxbb19noqr3pzj4i12w70h61qcime3l81ke89cvhu0wge12tjxkjkla0vhy9v6q5z58aqtxwtjot6uepypdvww6jpf0c8ur2081kg8ofvddv9m9ouo31qw6lx1xe2vgbb85v8pho5hu7y9e16yymbv0erojhfyyxduwbcgnvv06x97hsbole0\", \"efnskiwsygffgtzw8i4xmxx736lgc5stxxmds6qxs0966p5t3ml1eyfcm31wj17554l591dj4mwdbxxgx9wq9gcw4z4ejy5wynhzrr1iuqsr35jtu5hns74rqqfm3t78wypof41mq2l91hq5mhctur69954bgvxd3qpc5gbzstc6etnq1qqg8o7avjd\", \"prbj3s51lbl9f9rdbv3hdz38znaa82i7ojvocjg8g13u0wwih1g\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"a4o5xse7ng8adrvxlljmylx569d3jz00t282p2kgmt4b48p4milyecxuof463bh044m4tj79zu645dpqciv6js4fw4rw6limej06d30os970zefhowz\",\n      \"notAfterTime\" : \"2022-09-24T18:07:21.704383Z\",\n      \"rawDer\" : \"cl9fryp1e6m1jhhrd49bjk69w9ehb2ajnvgl7vmw38vfmoqml5fxioyrerz2dr8gk3m7h7mq7r1kx2c2g0iplpoa1xmstpo0z78aue7n68vjf5jno63pl7wbu7g1bun6czx3io00xnu39pzz86pvabq5gogu3thyg0d4la0o7w5ywopd0xhksjq0f9rrk9zhmqq\"\n    } ]\n  }, {\n    \"hostname\" : \"Walton Schumm\",\n    \"endpointFilter\" : \"2vtdsn091g15cz2sigibbdp2gsle40ldk5f59w4oqff00fxtbj9ftwltii3qjup\",\n    \"serviceDirectoryService\" : \"r4t4bxlseo80d8sczghsleghm1uj58vz9oh03kci0kbqkf69gh\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-03-12T15:44:21.704504Z\",\n      \"serialNumber\" : \"qtx0hq4vometufog6fufuxht3oznyh0ki0dgx2klgv6ma7h5l7f5x18lvo45q7sikxzxbwado7u5igqytfr65kj3tlvactezax0aqy05p6cmbcroqb8d6zo9p867wf7y7zusj98zxleocynhvnme1k5xycngz54kvfrnpxrdprnkaxbnylfb2o7imx1413ofqa\",\n      \"subject\" : \"rjb58fhmlp9vcfhndy4ss121buhhxtcw4sclgtjd9vow63mtt29161zdpio99rg738281hytui9k2odu0lgbgvy2sl\",\n      \"sha256Fingerprint\" : \"ahcayinv3vuy5u8zp7jo7fztb5yzsnnl25p37lbuemqe7ara287hqg1eqm4rwtawq4lebnlnu5z7tvo59t9q2lsgk45whhv42xufct16mz007kugujtbnzzl4bodsn2l9g2h4dkzbxzw71ql4t\",\n      \"subjectAlternativeDnsNames\" : [ \"vyy87vtv24xomjjtjap5wlseg2nxuh5r6vsoz7tmjw8ds73quc73y306wurqduunh4n00tachpkyeyivflkr7ajvk9iys0s985j1ty05rkbe64kwp3wdx6yxust\", \"bhj8zbz3cuepph7qgx8u0k7e0vdd54p6kmks4xhxfj4yrehsh4f0qs3czvokzrrxv9kld1ndmn2pvdlgnb410tipzz58a3asxhefkfw\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"3r0ge5totovdlv3ij1s2ei7ic4mt4sh1jj5zueqn4813tqbyibu9wneolfu466p57m08bv4b01d7wpt80533exjakv8igotimktcnvtosiodbqf4y1kgkh6z2lyc70b2h6z6kg7q53e8o375misba7\",\n      \"notAfterTime\" : \"2022-09-06T18:41:21.704599Z\",\n      \"rawDer\" : \"k81ifvmshronegfwfxzk4fw18qccj92r3l4z8p5v95sl52d7s69isxefr7g9x477bzeynn544tdy6vpxktpku3q8ujw4717zs16x78ur9fo760u4zv0n\"\n    }, {\n      \"notBeforeTime\" : \"2022-04-11T18:36:21.704646Z\",\n      \"serialNumber\" : \"oiyjk0lch9zvvj2hxvvnjfic4gh0pajltb554enxj2qdi4ipki4pkkqw9lhopz9q7wjb3vlwzv8nbrztb6sgx2r4icju\",\n      \"subject\" : \"i0ehcllqa5xhljui7v14ivkyl8nx85jrszzji9ehor0lm7cgyrjk3ymugpcx9qnkxxphf0aeu17armnemwo859rpa1cz8sjv87y5vsc9snsz57keev76g7mc17y\",\n      \"sha256Fingerprint\" : \"ehh0m63q31kpbjxlo0yx6dkicbf5x4vobzjvc8dhj65nisdsuneg4tdtkdhv3ooof4t1mcqh3505n4pdwqwgcqnd5shv4x8ugm0saaa0b8k4mohf2xpt\",\n      \"subjectAlternativeDnsNames\" : [ \"tmvjj2ex5n63r0sn9oyrjmwbfasb7zvuaxwlfzk5tp1vxsfe8ql\", \"laeu07760jfwi9efdy8wmvvcovqy9pwwx61p7re4z4ccclvlnu8f1vkx19qwip0b8adoz9yhuxb9a9n6e4wsfo1zczxu3mwvkrmoom4taook2p1nzpnbjdpmickrj996vcw445c4v8b83cyft3lx94dm7korntjm6t7dhbhe55biqzp8ez\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"2ukmksphulck97jhpjil6d5nut3hw0nglhmku7drtn46nco21bacqui04pn11zolq39hnyc0r6qd42qkbp0w2pgii4wjsl81f9kloqi0eiy7i949csy1w27iz1cyhammkj1cgtz\",\n      \"notAfterTime\" : \"2022-03-16T15:41:21.70474Z\",\n      \"rawDer\" : \"owi48rmoyxrr2g75qqmg\"\n    }, {\n      \"notBeforeTime\" : \"2022-05-27T18:01:21.704787Z\",\n      \"serialNumber\" : \"updxk1yfmnbc7nsa55agkx94m06rttejx730wsd0v7a98kg9togaccx02962sa2d7old0kbz7wxs6mcj18smidm3zua676bk29sm8rcs29u1yx4r5aahq84mppsil2t3fl2s9jjicngwn6nqpmegxde8gzyiu5yvfe1c\",\n      \"subject\" : \"9i2lt8wkd\",\n      \"sha256Fingerprint\" : \"f3cmc2q7fvje97jfecvhqkay4xirq1owdjcuymdgdztk6ik7y3ws1pirmgf8epy0r6qgh57u8xzl2l3wni0zf7stbwq4sq3zde2to6bqkfnneygln457ax6t7gupflccjost0q7r5v7xij7347y1hnynmdv041ln4c0hnscinae7\",\n      \"subjectAlternativeDnsNames\" : [ \"bene1b7gkczbv7duqif18avivtk3hpt6r\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"fp9ciu5p6svpxz14fik3mlwlog73r7qcdrhvrls1gryzejp8pdwln0vaxhd1kcttczy9ubnoth8xsqvzqvc23gwruykzkf6noxojqae0j30gbmtl66i37peb7065fz2aulg7thy5cbqaqc0iag0ruyv3ojyb4pt6cz\",\n      \"notAfterTime\" : \"2022-07-17T15:38:21.704877Z\",\n      \"rawDer\" : \"bltkc0scbkf10617b36dp1ptg0qecop8zyr0v2ljimng3a9u49h0jd66782tox8im24fwsclhx3c4fcamlmtt77rfzwygaomhbpuv2cc4m0kdln357o7mvk3ytou5jlkqz5gkxf6vr94cxkp2zjav6ldbr3sz3verkp561r4vtmlmmsbb2ci33u0uvk0a\"\n    }, {\n      \"notBeforeTime\" : \"2022-07-07T17:11:21.704928Z\",\n      \"serialNumber\" : \"ouhyewsjrttu4whz2g7mqy0lkqs2bv7ybjtnzycoj7gujeywaua11gyv\",\n      \"subject\" : \"pbnyxfp0somjcyd23pat8jpgryqyz9yxmklh18oofp1sdy254323yfk3m1qmoylbu9063pnf9k7csdrr5cps0zj7o1uvq7uquzwdmo10v5eothtwnsky1qhjgga2ssi3o92masqcl7wmposaen18e0so9\",\n      \"sha256Fingerprint\" : \"lw7ads522zpj8qsf4vvyg09g2sabhxfai2z0rpjkei31dadldy6i9430t46ggtj74cygd2rbdtylj895ufztpfaz9711rx5fs9mo7fu339m3iuh7au6c\",\n      \"subjectAlternativeDnsNames\" : [ \"y2zgfewqr7xnasuksfi62qri3ulo7o0mbo2dihpjh6pc7r7er8r1u3oh0yyvn8\", \"su1ghs4towj3cno8a3106rd17ok2tfeo6w9mnvioa13wtykijq0nvygt1yaal9we3106l87row2wmk5mlv7e52wwcuenrs7wm6ocd7ujabf7i5wbr62pwqgy1pqp79jtgwitc64vf7zi7a6iaaggtf\", \"knvr98qlantclujg5pb9j5m8ait9euob2ia7v0dipnp6aallh05hdkkw7qqcimbky5khjoyvdgx49s63zwtvkqu3exju6ir8ihyztk68khqmrv9qtzq62non3mdary82ccr0g2\", \"jozkg5jv3x65sz3fntot0oanev09mx31bkzoet9gatqhazs670pftwkerodjvr9cgbbyy95mdpioexebvfwqi6cjkuptwp28sw5q1l2wyv\", \"kvrl8ywu4xsd7am3rymdu26qznlidkxxthjpsmenv6bdv6\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"h115yavo36ozlzt3el5s9kyx359kxq3tw2rq6g5lyqc6g6gdz1xsfc1ij6u64wljowoubjxygh49kwt33l0wnwcnnc2a628fhrckjofi87dfkci9id4lhkvqwaxk29kw8wdo8bwl6ya5ivis64hq1nqmx0uqipl015hb4o6bfscashuaohlcbe5rai2rw2zaeoo85b7\",\n      \"notAfterTime\" : \"2022-08-03T17:09:21.705043Z\",\n      \"rawDer\" : \"hkvsnr0suyf8y1qu0uy6xjrsuem1g3rte5pjfnoqy1q5ksjb76s9p7o1d68rcto79pja5g6ud0eiepe2joolbbrly1eom729ak5xbnn88bnf41vpkylfq\"\n    }, {\n      \"notBeforeTime\" : \"2022-04-17T15:39:21.70509Z\",\n      \"serialNumber\" : \"uyfcz4a89o1vaajzi394t32kfnc4ekn1uc3dtghhyyn4440e0azmjq7qyep19400b65qkze1obcrkbdpglxso36hxa7rnzidk5gho7m9tind7itx0efldegnw5imiktdzeqeyq91z7yxb6hj6vu6kq0repuw68q4ecm09g29risbifplb7o6c0rwt1r\",\n      \"subject\" : \"nj43npc8lc2v6j4293b88ii8vl4fa5j9amx1twpr77os\",\n      \"sha256Fingerprint\" : \"9efpjgtebin8l2jtmq\",\n      \"subjectAlternativeDnsNames\" : [ \"2ywm49ky7f8jtts0pvza5okpdo6fxuvac7f45jzd8r00xl6xct9npsza4f2xd1l0tamtxueste1j2pq0hiigyeh9gelocorsyzyj1sv4qnrevjvwvn98ui1jnijol\", \"fys4x3ivxc9q48y2imggy15b31p369tp5uzjxa4ju3m74rl3y76uyo88ny7tltmg06kj0aj6f7izorescb08ge1x7mr4ugoo76ksubsfuwu90i5s1hvizmuub1s7uyd8ybr7a0qhzayyva26s9fnrp6j1777bdz\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"b64tikpxgpk2aktzebl8k1hhh8w27n83s9dyxplmozga5frc608rerppor2flvimn3n8yfey641t7dn1xjiy81k7zs04dfhvs3ermycqq6l29h1bgfenhf3qa3ep1483uvdkjn4yu7uxx7yivf60zoksygo325\",\n      \"notAfterTime\" : \"2022-03-19T15:22:21.705181Z\",\n      \"rawDer\" : \"q4s6jqu4agdx5lch4maxqf7slmfykucdss3oejo8t7xr0aqn0za3lwx5abmcm1orwqujf28xk9gnu3a8pvs4fdmmgj270l5ob1jr4y0r7i\"\n    }, {\n      \"notBeforeTime\" : \"2022-07-02T16:34:21.70524Z\",\n      \"serialNumber\" : \"15cw1zlad66neupwp6gwfcuy72xfhw4h5ba3nvqc2a8wjkx6tw3pr196fji2mgda5a6znjf58cu3j8vcfg6159fvm2yee459ett1iz6bgqctbxjoobi1v7ccwhz7k8ikvomodhmkay9lrkikn\",\n      \"subject\" : \"s469khsa6bbgsta3suouh9sgkiejia5rbp13bju73wbm45me3xxqkkqs1kser5h8sfcjwwc0prs3ftn62ec7v4mo691qpf4521g\",\n      \"sha256Fingerprint\" : \"b1cfzj6dn8volx4mkwks81ow8v7kgwi8t9mee6hhknsrk0mx6vjhmnky642p26u77rfc4ysq8q9ie9hhnunr1d5r42jndzxasg\",\n      \"subjectAlternativeDnsNames\" : [ \"x4gwksmar0tdzdq2omfe9h3wwci0zqvtr93nn33kt9ywxg7gjw6b40pxxnl1k1zm3p6fffvsxnp59cz9l03rltw5u9sf8b0shd6cvvmtdihgbqioweajhd8gxeek7x7m5tx3bfb005hh11h6al3x03gb\", \"ocdnkk7yr82mp8i0y9c14mwy9e1zptpx5z1t1c1x1gwo2i2xdffwh6g328yi248y3fv3g7809b18e9tb7bx3yipauxhwd3cays3n4ir3ao9u78bioigdu5yaqa8nrkymib95p14ay7hjzwhq05fbpt4pmwwzlbagurt3f4\", \"be1iepjro96qwbfd91wh2ws0h4a077qeac4gn069bs4jubrookrh9fun7wrcdwwyus18hio61bhii7rhr7qp58ue5t1g2ncacnqhtuzwt0hshaldcdogz14970\", \"fhk9gjzpce3nbzeik4czw021eyxp8gly78tsd912b13ub6kq0was1izt9pp43iybryswlkuuq45yv05hhwwzjndzt4fupv9ema2lp42e9tjvfzu9qd26a7oach602plvzw26l1gtp7svkcz4xqlvr5fegci\", \"dpul52oo65nnkbryl4qrk14z6hs9vs8titgq50c3w5cdz0qy334bmujrd4kv0phyfs3esbjevhcrziues3djbqwg73nes1c95an4y5uzxqlpj5iqw951k4ef4fnzpgl7ss4angdkk3wek5u6qg7jmc139mzehe97fxe6wuu\", \"ytxgkpzdziprcdqkrwbgsmn0f3imc5v3kz30n0djvpre9h7ic6f9ns3uwemjc5sdxlrof7gqmpq\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"u4oqbyap1jbkz88ip22spuj\",\n      \"notAfterTime\" : \"2022-03-22T17:46:21.705359Z\",\n      \"rawDer\" : \"4fq7yhayklw2feibcngucu4fo04juwnzhq1gn8pf93l5g5ujb05n88xredub96zesyl7fh1qwlhuagfy6510u2siv4kr3iau7tzqwpdb1yv6peg476tfy4210sznzvovgtungktpcijscjr8sj06zr\"\n    } ]\n  } ],\n  \"createTime\" : \"2022-05-30T16:22:21.705457Z\",\n  \"name\" : \"Takako Dare DDS\",\n  \"etag\" : \"nobis\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09895347-d15e-460c-aa29-4433d248ed04",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.705746Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.ekmConnections.create",
          "schema" : {
            "description" : "An EkmConnection represents an individual EKM connection. It can be used for creating CryptoKeys and CryptoKeyVersions with a ProtectionLevel of EXTERNAL_VPC, as well as performing cryptographic operations using keys created within the EkmConnection.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which the EkmConnection was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. Etag of the currently stored EkmConnection.",
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for the EkmConnection in the format `projects/*/locations/*/ekmConnections/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "serviceResolvers" : {
                "description" : "A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.",
                "items" : {
                  "$ref" : "#/components/schemas/ServiceResolver"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9ddff3f8-f17b-4cf3-be20-ff2a230d0bc1",
    "name" : "Lists EkmConnections.",
    "request" : {
      "urlPath" : "/v1/5nequrs94jau8abp5qtfepg2gk7uquh95thbrhd1v55ke5sjb6dmtxwpvztdv9atulo1xwbgyoutc1rmw7lw09c6epucuh7nxsscmdebq917t18dlpblbc04180j51lwp29hk7ia6naokbbg6w0a26iwddliqd3c7/ekmConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ekmConnections\" : [ {\n    \"serviceResolvers\" : [ {\n      \"hostname\" : \"Birdie Oberbrunner\",\n      \"endpointFilter\" : \"qppq8vwx1hi2c89lmpjgt5423ot5v5gh53nzhai3k558strbreqwrdr9q6nnfl3ex1d9tcb4j2pk7x9dwi3u6ucdi4j56z9284mcjy9tlemtqdkgu5uj5x3vb6lnq7bw5774937xzef08\",\n      \"serviceDirectoryService\" : \"yjdpapv68fc3rwxvumxw5gqm3qdgyaxzk9shfgyf7ht8dbiq0dougedkefft32qm\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"George Price\",\n      \"endpointFilter\" : \"t8yqqer66oh4bpfb36g596cja1wv39r2v5m8b1ewdv5vvozx26src2dwlv312tfp49vm8yqq1t9yyqdtfeta6ts3k9kyi\",\n      \"serviceDirectoryService\" : \"uz2a422j5f3nn7et66dple35wrarfcibbfx00zmnhr0xnshxlj3llluiqozoh7mch77tsc41ornl5lq94ml6flbnsvqmjsh7mtkj0gbvbz2d0fd8r9w0rqst41elt78wpfqkmkqjxnh0o92jf6s5j2jokcs1m947f7bncc251u7zvssnnzo7li5kyiz6\",\n      \"serverCertificates\" : [ { }, { } ]\n    }, {\n      \"hostname\" : \"Lakiesha White\",\n      \"endpointFilter\" : \"enwavz0e8uq444zfhjxb7a8srsnm93ohc80hrtw3t7o2ztqde98ec28tfoo39k6ycciphgkphyq40kdxisch5089oowi1qnepusc6j3swd419d072ag1u2f8dia6bny3luxulrpg5ry\",\n      \"serviceDirectoryService\" : \"o4xskjo24g\",\n      \"serverCertificates\" : [ { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Miss Janice Batz\",\n      \"endpointFilter\" : \"t158bg7\",\n      \"serviceDirectoryService\" : \"9wvt9ja5squlgaeq1\",\n      \"serverCertificates\" : [ { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Reggie Heller\",\n      \"endpointFilter\" : \"u211y70wd5w21yw2eg2wwj8ubf04v03ljop4rbqm29f7joj50c3eii0b4po3u8m3vsgymiio26sfdy53vrf5g51v8qw6c2189xbl1ep2egc67o6aen0fsk29c2grv0imy2df7qdqhbedtp3ylh0l1wn6vha\",\n      \"serviceDirectoryService\" : \"yu39hoq4pcpfpj0shkc9lm\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Ms. Hilario Tromp\",\n      \"endpointFilter\" : \"97cogdpqj4kckolzph2x0e7xu7cp6d6ap4sfr4y7u5z1s6zpfyzx8y9moad277eof9cjlb2248ngfl6citi15khpvxxspnu8fz77uw7hh84parmr1j682rfycovtm5grumdh653s6alsxyrvcnohxq3va2obgld4jtbn0tw6q5ms8l9zninusktad0vsknlomhd\",\n      \"serviceDirectoryService\" : \"9zqarorhu\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { } ]\n    } ],\n    \"createTime\" : \"2022-05-15T15:54:21.69986Z\",\n    \"name\" : \"Veronica Mitchell\",\n    \"etag\" : \"deserunt\"\n  } ],\n  \"totalSize\" : 1831909510,\n  \"nextPageToken\" : \"6dpj9fvnjxntn63owne1i647134s2horq7keu3z653atigrk6n9f6sqrqa3fkzw6kj40yr0fqosj5n3f8vjbib\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ddff3f8-f17b-4cf3-be20-ff2a230d0bc1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.700056Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.ekmConnections.list",
          "schema" : {
            "description" : "Response message for EkmService.ListEkmConnections.",
            "properties" : {
              "ekmConnections" : {
                "description" : "The list of EkmConnections.",
                "items" : {
                  "$ref" : "#/components/schemas/EkmConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListEkmConnectionsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of EkmConnections that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "73f25b3b-b655-482d-993b-6c199aebf018",
    "name" : "Create a new CryptoKey within a KeyRing. CryptoKey.purpose and CryptoKey.version...",
    "request" : {
      "urlPath" : "/v1/4vvm9ijwe9x42tkkxuckbr0s2swcvufw0k3v95a2xjvn4oql4sp7kpewluy144vytw6l4znx1wm72yo69q7wb4ziw7i90gnwfv/cryptoKeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cryptoKeyBackend\" : \"ood2qpz4too4kxef35fj4boy8oyosy3mdcf39dd1ykxxazct8zryd31y1esc3c3bqe5y2did6dthe7aehpue6m3y90a9er1x5cx3wgzv6k2pxlt6kp0xzwfbriovdllhzbn6gnngq5enqdoyrs956uh1zvi3xw9fdb1jhgs3iks458h6vytlqal74ogb1071l4hy3uvl\",\n  \"nextRotationTime\" : \"2022-07-22T18:49:21.698538Z\",\n  \"rotationPeriod\" : \"qpx1edjad5tu97oy8sitvnrtg91znoumlwfus0rwn2yhamo9klehd7as7m8n0a6stvqa7e34bt4b\",\n  \"createTime\" : \"2022-07-07T15:33:21.69858Z\",\n  \"destroyScheduledDuration\" : \"ek2wastkhnnf1v064tdb5pv61o4fje88ka3wtbc575ujh0036hsnqg1n3q5xtpqmi1xusm52tg2peris5h\",\n  \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n  \"name\" : \"Marco Lueilwitz\",\n  \"versionTemplate\" : {\n    \"protectionLevel\" : \"SOFTWARE\",\n    \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_4096\"\n  },\n  \"importOnly\" : true,\n  \"labels\" : { },\n  \"primary\" : {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"sb9pwnrc6osm8watgs3xdpxspi82lcij91f47oely5c2w1kxlwrg73ulwqvzzittb1pcduexd1cp8l55e408v0cwgy5lbh6snie4jzpo2fck2zyee7fwc1p4kbppv07280s2ply2eryustdyt23lcp\" ],\n        \"caviumCerts\" : [ \"05vpjatzcxu3jrs2dz5i5uty9jlak5q1wss2ttmqkjnq6n4cxrgepfx2do85drttt627b6mtxd28a6eu7kbzcje6o713mstttymy3jk6460ytnop3hdah76dzshbz5qhyi4ovqw9bflgtmlbuzbxtqe8piv0n3k2zrzq89tdc006v357v64t4omiaudk8dzbtoo\", \"wlkb9nmsgl095s1l648v2ku1i4ijhrhnvo9iejkfwctfttu9mutks7a4f5sqyxsdganux6zvb9c4xatedefubuvyx5rn29\", \"nmfqd58mb00bwx3ks3sg7e41wtxdvewfkite4kx83cjizmi3g4vtchur674lr3g6hei4s7m7r9579bc4yrqw8d3cmna9sjji9oc6mejnwi22ueyj5fou13585ea8qlyls6o0v10\", \"kymq675j58\", \"odgmn3l9i1wvhifrsx29im3xr4bdy31hs6xrvpoik5z60s2luoidawunp6z5hx7cgnm1i880z9qk474ytt3e4x506n66q35kkdogb821s85sz9ber499y52p336f11w9p22hng\", \"sccfs98mvcn\" ],\n        \"googlePartitionCerts\" : [ \"v0ce8u5inimbqo6ijvnogfkblctwfg7zlmz5cevdglujfhinnh01cvjeek15o6zl7pbkwnxpaivnrci\", \"fx4ba443cw1g40i7zhyruoe8lqlgiyuv8t0fcayedhue8u407tchb8\", \"dno14mank2ngzv8hw771tpihmqgq5xi2d0cagxhxjblr493hi108avzd9pyvm7d964vb73iozgk7irsmvsehoegskauzanyj0at1qgdw957sd2oe78d40y15z0h2o5rkjw2601x\", \"eb75hdt48pbyp1p1pqvngtjpkp0lvlqz1l0x3496vh7lk0639lam5ehyua83ty8xe5xcalvnls9vty7apnnfqhoy2cw3yq1bqczbpawtrf5z4js7teb52kpv2w8a0zgjhgy1utxns5er5hqoayql4062xt4oh6l39vlfv7g1w2crnivvol\" ]\n      },\n      \"content\" : \"Eos nihil omnis sequi nam inventore. Qui dignissimos saepe aliquam animi eos quo. Consectetur ipsa eveniet quis illo dolore qui. Qui minima veniam voluptatum. Aut iste porro ad illo odio blanditiis vo\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"p4cvv8mk093n1jqfdts55ddrdv83r319s6qea91dhs6wbmsotu3mz3qy8m76iw0h47v342ef71xrhblci2rfqoudu8frbhvtxhj0k3ro3iz571gu7nkjmsus0mwbq6n7mgd40a27clp5latwlndjyy5flbc4kneyj22\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/783395\"\n    },\n    \"importJob\" : \"xqcohngfb0cch4gsk1pkaqerrwzq2kh4e648iol93bf8owy387g3hv38gyj5a0t1u0u2cf3ym8\",\n    \"generateTime\" : \"2022-05-06T15:45:21.698944Z\",\n    \"destroyTime\" : \"2022-04-16T18:11:21.698973Z\",\n    \"destroyEventTime\" : \"2022-11-05T15:44:21.699001Z\",\n    \"importFailureReason\" : \"2kmamtkm5c17oqaywmypxv5awdbg9og2\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-09-26T16:07:21.699045Z\",\n    \"name\" : \"Melissia Jakubowski\",\n    \"state\" : \"PENDING_GENERATION\",\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"importTime\" : \"2022-09-16T18:48:21.699128Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA1\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "73f25b3b-b655-482d-993b-6c199aebf018",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.699297Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.create",
          "schema" : {
            "description" : "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKey was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoKeyBackend" : {
                "description" : "Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.",
                "type" : "string"
              },
              "destroyScheduledDuration" : {
                "description" : "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.",
                "format" : "google-duration",
                "type" : "string"
              },
              "importOnly" : {
                "description" : "Immutable. Whether this key may contain imported versions only.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "nextRotationTime" : {
                "description" : "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "primary" : {
                "$ref" : "#/components/schemas/CryptoKeyVersion"
              },
              "purpose" : {
                "description" : "Immutable. The immutable purpose of this CryptoKey.",
                "enum" : [ "CRYPTO_KEY_PURPOSE_UNSPECIFIED", "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT", "MAC" ],
                "type" : "string"
              },
              "rotationPeriod" : {
                "description" : "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-duration",
                "type" : "string"
              },
              "versionTemplate" : {
                "$ref" : "#/components/schemas/CryptoKeyVersionTemplate"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b5debd6e-48d6-4308-8405-252a30439c81",
    "name" : "Lists CryptoKeys.",
    "request" : {
      "urlPath" : "/v1/chpiwds9qvbnmqy18nozyos2ntwsrd43rls4mndk28dmqujzs8dm1mqjlokrkr2edc8uny4cmf1ytyrsww5b9qf0obkpb79ztbtozwwrdgv37wdhgc0ulfo9jrhm3qso7tnpdmy0v7fway7s/cryptoKeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 165708369,\n  \"nextPageToken\" : \"puuj8l42\",\n  \"cryptoKeys\" : [ {\n    \"cryptoKeyBackend\" : \"fb3i8hg2jxcoj0n2p6yy4m7kidssnb5m77jt22me77zn7ifarr3coicowexxqj1u01u34yndx4ab45bjfnupnd46ur\",\n    \"nextRotationTime\" : \"2022-06-08T17:49:21.697734Z\",\n    \"rotationPeriod\" : \"crhm0yk9nq729vbzxpyhqevl7thfzaueb72zzr9dd2xfu0lwlbc9vfqswhq4w8giysebae2xjqv8r4xp092\",\n    \"createTime\" : \"2023-02-02T14:56:21.697777Z\",\n    \"destroyScheduledDuration\" : \"p80994g38czp3e0mc4taulzx10rgu5tecyfirbmo5irqf7llav0dz881ulkxms1uyebwrfysrnz7k5u0di8adatjtks5o7nxnl2qwbtcsciv15ec9mvad639y0\",\n    \"purpose\" : \"MAC\",\n    \"name\" : \"Murray Muller\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"EXTERNAL\",\n      \"algorithm\" : \"GOOGLE_SYMMETRIC_ENCRYPTION\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"1wgt5g3c77xf20s4ntnojh9kajv4c6v9mxllu3201812demk7c6dvgt6jo6ebzh9y3gra849ea4rhgel3oid0k9bls2p3ul0c4dv9zk\", \"nx7ha6shxb8bj2p2ccw4wr61dy7342tdjqm2297nkxnipgcmuu5yp\", \"m0tmlgfax0ud7xe4yruu7ew0matj9177x49a5y1r7gupqhxk6umy81j690kyzx7vzy8fs0un1kpruenbbd5cb7z9zg80m1dss7tgj7mu8kz2zp1j9w1138o578eec5cc8id2uzxsart4orj\", \"nam9b8p24hq5ln7es522xbijtc7owzndndf69wectl5xakhlj8yehmolfsg74j87tiwzoiiqkuhcf8fodngzrdf39kkgg4rrskxtqi426emztbrjypoxn7xn3hmqumbi9b56s40aqx7dt5nqbn17h5kb6qzmnlzijs4uu3jsd1pfh6agfvcdorf11\", \"g6y4y\", \"2vrh5k7xm80e1ab6g3o46a7v9ybwlcklzkcg3x6yqxl57g86gordq957zrzet16k02h9vbn6rnhfxfjlvbmiz7yc1bdwmhg8dw0n\", \"f1l04lfpgyjqgbamy7wyh2cgj0bm48g4k4gow6fexyvjnr24epg4w1fsvt63\" ],\n          \"caviumCerts\" : [ \"wlq5ke3zff64nsf0yireag13xbiyiuujgzluykaplujzj8uctplikvea8k9npr69bp6ep26ai2gh5gjtcyqjhxaqwg1nzfukjt189ff2bec6ppb4f7h74v8qhpmr9yte21vdtgws66wunyzcim3cefmsgc19fnot3r3jyt398qnee8i4a1qempyiv6\", \"ffgef8df414ou8oampuyu956z942wlc2kp1teem4e65j9jx9572an64teswcpmcimf6vaonnphe0yqwqg4pvz1tgaz83nw\", \"ltivqtxbbfqu38hrblhyz2dx4bghdief29y6jts3fo49sran441v70iggoyc6utg7je6kxcawvftnd3mrir2yce8w7vacqe71fu62q40razus8mi9\", \"ugiq1m81ua4r92mt0y9sdtgzyb12i04are40veds4ka66gpn39quhxp\", \"izwq4pfa2i10rapetjzhb01hcny7a981pv84e16edvpq7glzly48694nvkgj5dxhnmobr0mykhh1nntaafy3dolnkr6bqomp9wvpmbi00fu19mr05kynk81rn1\", \"hpdb30klvjq5vi98iz2tqv6yj3nkb9k1ta9b6u0gyfwtsr88lhuem7a5e2lv6jzw86lq3xpg5y3w02kas3a72xkfdqefxolqgcfb2o5c34qis2hq7m0oqirr678d6ohp\", \"nudzv8jobgmvkhhibhwbb5gfo94eqvfk3t3bu8wkixecdvrrb4hk0wo7tw1pd8gfrq8x0c5fatlt6hgcc4e9q4ni9ng1xmtkuxbzfpzpfsw6z56avbo0hc9ysq7gaexw2essu8lvsq57f95xle9wwcx3ijs85vp62kboeqg1neakisf8ct3k7842f4aj2tpj580u1\", \"w7be7x6zbe1lkaqtdbjw4qud354gd6j1a064updwzl9iyetlvtk4xdvd77g5u6odp9aoezpzwr0i2civj81ig6c0zespqf3mjbg7byfjjsyef5b4qgp0r3huyr83m02nnljawqo8v66aubmj\" ],\n          \"googlePartitionCerts\" : [ \"qq15ieu4b1\", \"sw0p0ieyuriaxcvfsbqkwubpnrg4x9wnuux2kf423laoec9c8lbe1eju0fzwelbrdacrbcoalaxskx1bbtea78wupo4rug6et93k1b5nxs5s\" ]\n        },\n        \"content\" : \"Ut perspiciatis itaque. Dolorem tenetur fuga odit eos commodi quo est. Neque earum id quos. Rerum aspernatur asperiores officiis in unde optio. Quasi tempora odio et sed tempore officiis.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"y5fvsu5v6nhu6a7z5cuzynegzecvd18acys54fsy5vak2p0d1acrr0b5en6n1cevne0woclp16g0bgjts171iul0wh1fjdx0akfrr14lbh2cggdf51fird6pfmb9stcv\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/848971\"\n      },\n      \"importJob\" : \"hcbsr9qg5j0tvadn1m10o4kgsmzctiujqk9b3yjkzthy4qfo7b6c59szx3oydtef62hav8tzuj1779ij41jw96t803qek9pifhpsws37bx3uwvy3aduk\",\n      \"generateTime\" : \"2022-05-04T18:42:21.698174Z\",\n      \"destroyTime\" : \"2022-10-20T16:42:21.698203Z\",\n      \"destroyEventTime\" : \"2022-06-18T16:22:21.698233Z\",\n      \"importFailureReason\" : \"nfq1yshxrxpu79fj79qvipzdu7z8l9hhnvue7yfr24akzb292xprgyvwt29yxvwhrc9ekompto\",\n      \"reimportEligible\" : false,\n      \"createTime\" : \"2022-12-16T18:01:21.698276Z\",\n      \"name\" : \"Gabriella Lebsack\",\n      \"state\" : \"PENDING_GENERATION\",\n      \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n      \"importTime\" : \"2022-12-30T18:28:21.698364Z\",\n      \"algorithm\" : \"HMAC_SHA1\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b5debd6e-48d6-4308-8405-252a30439c81",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.698485Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListCryptoKeys.",
            "properties" : {
              "cryptoKeys" : {
                "description" : "The list of CryptoKeys.",
                "items" : {
                  "$ref" : "#/components/schemas/CryptoKey"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListCryptoKeysRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of CryptoKeys that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "4edf4f50-abe2-47bf-9a09-a7b25323102d",
    "name" : "Import wrapped key material into a CryptoKeyVersion. All requests must specify a...",
    "request" : {
      "urlPath" : "/v1/793aphgq2uyd376m8weuh01u4fhwlaavottvf3cqwplimx6ztx88ph5qvecquxj004f4ag5xo9a9em9d3ds1vfc0skruaut3p0vapkb2c6gt0wjyrasl7le2o1eqqxn8x4wggafjhs5ya5j012vmm8hij5l2p5qb6om6vfc6ib8dz5pxkf9n30myg4s1jzl/cryptoKeyVersions:import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"k213z94kwzppo1\", \"r5if7fds0rhe8qnonafi4w6331f3h9y6hh3sctua\", \"75zef14s1cngddy4j50it\", \"0ie1qnt8vy6bqzowwviw4nmi9xr5ceyclxlwldzl8bpppreqyaj\", \"nnle2wieh3wjbplt\" ],\n      \"caviumCerts\" : [ \"wav9p6otl1mqe5z4bsfpw6v70d3rnn06421ackzb5opyi9irki94qkjo\", \"hyy\", \"fhnh23exe3bfyg8ppih2bp26wjreohbotpwrk49vvzk9g8737x9njfd5uxyrgs09dbchqqn9obr17tegz75ootymjkzvms2clsakskb69enyeg\" ],\n      \"googlePartitionCerts\" : [ \"axwz3j2zjuyc5p0sv5jqmxfaj9nkez61k5778u43b3vgyq0q7vsofk07dfr5wmpvo6g7md8m1vzq\", \"3czlrjsl8sex2ctfuntamzt0yhbs9cw15sm54yjogiilu5mf6anizpqerefxik24lazyhgvtyvdveyh2msw6pkpvfs8imz2j5ed96gajuzpwqrcohzh0xvy0kr6n0q6kbkph67qw8mdn7rpsv1luaa5s1z8o2s4t2w66qgxa94as1ymj40k02ih5e1qqdrd3e65gp4\" ]\n    },\n    \"content\" : \"Officia debitis quasi et. Ab provident magni ullam. Eum inventore voluptatem. Commodi placeat et.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"4mxp50ejqjmtcgv5b5de3lusy5a6ywkyuirwc6abnynhf4wyhma95miv89i1jahlmbpoe7abevkclghwcbtrsdnoyo18nqxaht2lnci152hwjx\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/274448\"\n  },\n  \"importJob\" : \"q81eituqcddy1vahxs4vyspp039qnm0hlbpkre4oa1\",\n  \"generateTime\" : \"2023-02-17T18:32:21.697331Z\",\n  \"destroyTime\" : \"2022-12-10T17:43:21.697356Z\",\n  \"destroyEventTime\" : \"2022-08-23T16:28:21.697381Z\",\n  \"importFailureReason\" : \"d2miasjvc5v13o9wawfbg59jb0y8i8qmn96y7z4d80reufo09sw6bazy58tlhdokccdupuwm3jn07zadyvvap9lfycjstif94zrs92t4ic3ei1nbvvyoknv5pzfqhi7tsedmbfsleiwcclr5uu7vmn4yaxp6uy74fhbnmwhh\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-07-19T18:47:21.697423Z\",\n  \"name\" : \"Kenton Schiller\",\n  \"state\" : \"IMPORT_FAILED\",\n  \"protectionLevel\" : \"SOFTWARE\",\n  \"importTime\" : \"2022-10-08T17:03:21.697501Z\",\n  \"algorithm\" : \"RSA_SIGN_PSS_2048_SHA256\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4edf4f50-abe2-47bf-9a09-a7b25323102d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.697644Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "b2c69e23-0ea6-4b44-a3fb-9baf0561871f",
    "name" : "Create a new CryptoKeyVersion in a CryptoKey. The server will assign the next se...",
    "request" : {
      "urlPath" : "/v1/lfcrhsbhv35lg47/cryptoKeyVersions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V2_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"31n37u6sr4ls2f64cfdbqx5ncn33nfsb83lxy6l9go2u7rclvybr9bowidnv2\", \"infoglroy2j5sxuvnfylsvy\", \"k1y31hoozj92n2yjbuw22qrz0gno6bddwylq0d6wvfz03nd0nnqzgawggtcxtbfml7j\", \"k02anw8uo35l4o4ybm4o45r3oi2s0dbyc109dndkihqcsmif7qdj18dy98rfoji1u6wtgnmu3wdctebg7hxofxeg7huhktortg6co440jcgcnb4rzj56c6d4qupi6keoii23vt9n2mty338wu71iba7ylyed4ar8dt79yo4ezy1sf54u9x58khrvxa7r84o85sr0iw6\", \"6182lu173sils7fqdwzaapcpm3yxo0mpfdje68qrnvjkltkfz2xy83pdug0h1ee\", \"3rgsoqxfntzirg6c9hx16agk6nb8qp4adqo5j1jp7rzivg0h6cyxuiqgnqi1pi8a2r7agbf16jnwpookzbg10tgfatz571tu5hx4megt9quwu2fqt1qrudma2xma20b2f0mvhvn7ggq2c3cm4r28jdeg1ls21x5mwxufd632yom6ck7gs0fbc1ba823a\", \"6dv3b3jg1856znom1bcgvlsdm9j0cbrevf5k8qc6bkwb4af40a07krowgjy3sa6564n638vsbc8lkzo6359\", \"a5njfsjh2rph50ri17f81ef5rs2l7z6xhr1o6f91mi1mywzn5om0oyzovqxqzjqq\" ],\n      \"caviumCerts\" : [ \"p631l9n4o0kiw\" ],\n      \"googlePartitionCerts\" : [ \"5wdc18spb5asi7lq3n6sku55fhkvcryzx3or95zy4cq3ooaufhz5x8bixxv213eu1pxuiaxpwj1r1wbuak6f7juk7871bw533619p4ma5ef5tepxot5442iai95ya2mdb74\" ]\n    },\n    \"content\" : \"Animi quos odit. Quisquam qui deserunt consequatur sit quisquam beatae. Sit voluptas dolores dolore est dignissimos dolorem. Sequi rerum occaecati aperiam. Cumque numquam aut ullam a beatae necessitat\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"zxpmqrai69twyb8s5qeo1xoww4rfuizficwxmj28ovbsjvkobkkx617q8iagqd9g7j6o00wrqxlk7fwpplrbzsp2i\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/715474\"\n  },\n  \"importJob\" : \"jmk5einh8mcjviylybpc4n21qx4mwp2bcupp2q9x0vhmerb4judsz03d02zh9vvmdc59i5oh60vay3wkelb213tvnowngr8onq1e9s0il0wquwzp8iu5rahbls7ouuayje0y8ef33xak7t5o53lnvbqa7qcg3bxoj5puu3ede\",\n  \"generateTime\" : \"2023-01-05T15:04:21.696744Z\",\n  \"destroyTime\" : \"2022-06-17T18:22:21.69677Z\",\n  \"destroyEventTime\" : \"2022-03-22T17:30:21.696796Z\",\n  \"importFailureReason\" : \"9zfdzis031ey53edmkz24i3y0x2p6g1fjcy4mkd8duwkup50n6o2d\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-05-21T16:54:21.696842Z\",\n  \"name\" : \"Willena Mayer MD\",\n  \"state\" : \"ENABLED\",\n  \"protectionLevel\" : \"SOFTWARE\",\n  \"importTime\" : \"2023-01-06T17:34:21.696918Z\",\n  \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA512\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2c69e23-0ea6-4b44-a3fb-9baf0561871f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.697091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "7e2d7393-3698-4c56-b1c6-546171a691b1",
    "name" : "Lists CryptoKeyVersions.",
    "request" : {
      "urlPath" : "/v1/3dwdzpq3k6po1hkef5j281bkg1iqrkz45npfpu34d932w51o7xd2mnioosdb25dv4do4xgvvc9xm582qburd5y90zmuiqvpvceahvx7d2ee2tmqz5p6qfe59z2xsbnrxqrr2b0pi53vbggzfn/cryptoKeyVersions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 567276992,\n  \"nextPageToken\" : \"f2yjni1hw9sjl0ztuxdbpn1qmlbwfe3w6m3cnl7bx3rrwdoztn7vvbvtnkas75s0by00813w6erfa3hmdzv4p7axunj2bslyvegfr9dd8qboajwavp8mylg4zxzupynkrjrqs2cu1u3199ee5wvmr2y4eqlpnwzopb6bis62non6fwn352jn7ds2ni\",\n  \"cryptoKeyVersions\" : [ {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"kg7a0nssf7qxmks2pjc5\", \"gpxu6imp7ttkp8nbpnwn8u9j6thghoqqnm1htcc2u06q\", \"my23sr38ukhkxwe2o9h931wci0kc4pg8d\" ],\n        \"caviumCerts\" : [ \"g3iopprq4gs\", \"rrqeujueyqpnfk5k3sd7850mdvaslirk6tpt6vq65zb1up327c9l0xel7ibhgdu60wv3klihkew3lu0s9k9w56yy1vx90t5m6le11pvwwckwcvyb8ch5nj4n104marr9tskpkr5iapvadayf6ztecwuv8usp1mp63l3wy03not2vjp3zhuhge1q\", \"vpp786ohrk60vg2h0ohexlsm4oppep0g5i7jm17no2g6hwsnh2kvt2nt16n3lvndfnb3h6wfzaz93w91ljdf70qwuo5wja3sgl7gsemfq6gmjcki\", \"8ht2jp18wcu3lqdnp54dpkmd6omcpwc6zxiigy3acj3ehk3d1dbpbpmtszgep7r34ylm1k2k6r7szon5csmjcdkj86nat2ln6zdeacxmb1mst7gajstmj01br8rmzs3i\", \"7dvm4e81jxv141pif5erm50fktorwd3w31sf58f3n0m5tx94u8lsp6yh0u9mkv5j3ve522wt3buwsuuy3\", \"aq6u5pjkft0ea2n1gewyqh6co09lk9reqlfyse4\", \"53cag1mltt3pm7kohijxpjwnj3i9amefh1fe05guqqmhzu3ccw1ywhixe2ayt8n5hs15z3rqhq00v0rhu1zwf8j1xp7dgcf2950kgk6mcdysvm1be2hs33m6ep2a1oj11juxreeykbi0abkln0v83iwtadhxr6zbhwyhln79dsmz\", \"hgyc4q899jpvsg3nl1cm705wldwh54gpvikuu3r12iv66bv40jsp06gsqdqmwnsz0hu0bj82z36l3wg4l0129npz9ssd932hqhce6b9nme76ww4hdcimbki8cwtc44lacmnwwqs6qf1wh7c8yrksit5kjbxno5nkacj752m\" ],\n        \"googlePartitionCerts\" : [ \"iybc\", \"eeq9mlxx7onmvlrbuury55g072jpgfzk2az6ttnyaj7uc3c4syw07ed\", \"4z4dl260rpx52b8025ksocnvu4n526gfrmijbuyglu2r7k45g6wx1or2lg9y8sm3c1lvfvxjmiioj44hzl75tbky6s7giia8p6p19xcwwn\", \"owdzka4sc0mn8s7r2s8ugbls9ifzigusgczotbd0sbufbtghgoy5g\", \"er7wftbspw9ganaln7ul1q13tas8i533gw2ckgxur3le1ppo4tytypnwc50nfhe9t8s1pt9ydoa6iev2u2uf5txoh9ehddgv8x0ew0e3ysmblevqgv4x88i3neiyvi32m7jk8a8tff2ujhywn0ixisqlvzrc58i0jz6n153cjs\", \"qzco2puqh6nd0v354xx7yzsfm1pic7yfre934lnqlg1xm2lnhui8o1l517cl0od4dpsbpbid5ne2thapwczjypqfgsb0jq0k7k0fv06z\", \"a19o2mj7v7kqfxvr3grefq6thxj1woxnq\", \"tsddx2b0uh37jsvyhjm11gkxso34tbekw074z74cegfcl9629cyxbgr10v9cjdzembdr1266tfgar1ywpm7byod2f3eofr0ufx8k334y0mh46jglja3ezv5ab6mp9roeif2\" ]\n      },\n      \"content\" : \"Earum sint quo eligendi velit. Quibusdam molestiae sed amet ipsum aliquid. Qui est quis sint incidunt hic.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"mp34ryry2m67z3kff1k2461nprutni2vezvzrz6s7ncklt7p6bzkmh4saee556p9o6fk75ec6ffpkudvkooumwfm0ttfuwc4vyegzttgf6yldxr5ltrtvindyoe3myhu8otjs0mzve2du3k0a5n0716hhvq4atu6m3rs8bqd6h78\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/878425\"\n    },\n    \"importJob\" : \"pzp7bz0plo5e8wd4xpt2vuh4sqkyl\",\n    \"generateTime\" : \"2022-04-22T16:04:21.693945Z\",\n    \"destroyTime\" : \"2022-12-08T16:59:21.693971Z\",\n    \"destroyEventTime\" : \"2022-06-21T18:45:21.694Z\",\n    \"importFailureReason\" : \"gh53z86856bx872pfneubei1mj10ekpblsrlsdbdxd1t0wriehbe9ilvgenleftwj1rwbme6uqiwtiz8w9\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-06-08T15:28:21.694049Z\",\n    \"name\" : \"Dominick Wehner V\",\n    \"state\" : \"DISABLED\",\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"importTime\" : \"2022-09-21T18:45:21.694133Z\",\n    \"algorithm\" : \"EC_SIGN_SECP256K1_SHA256\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"70cmhrv4ps2bsoeyej4c6p\", \"jr7mkliejkubufsa0iylex23sgm1qhc36boozbguvn8venc1jbrd8yddrxmgw9ugzfpoi2toujmxvc2u67m4x21bbhk6d8yihf3\", \"s4fwxojmziq243u1bz7h206urvfuvvo31geiutgntjm42axlkt4mnpcnqwdtuhc9kcdbc0i598\", \"dmbfl3bat0kva65yr5t4b6a6czcme1lrs9ytq5nw09423\", \"53diy\" ],\n        \"caviumCerts\" : [ \"97a97q569f5y9lix1r1dgyp8ayikfjdw9ek1e8tabry6kr7d2xz67wu8ug8fmwczlg8g6kks34yqpgkrm8xk963suwzsh6c5h0pmexxvw4cpb3480zrjmfozppmv4\", \"zzsty7pvt2bx2s470x6j1n1s15tz3xzm4hbx7jhpcb8d6gns3vfpu0mypqjwc5moe87rj1vgl68idpv4lgby7s0nvn1926vi9c80i51veao0vai6o45dkkqe84daq7\", \"ostko64c0ixneax51n78u2yi58nhm91an5ahzpjpgfb8o0t9l8wlkis6dzjv2dmm93fj4q0xgs2nei8hfyii66myorihji8zk5k7kvwvm9qm346sfsrjcktvt1p5dakxuwx1lujf0tf7oa8uou5jejk7x09\", \"s1e9zf00poyks3dd1ryn56w8409a9t5xcq16uml9k8jt6ptiknyu6badhptnevho724xy6by5b2o0oikush930\" ],\n        \"googlePartitionCerts\" : [ \"1g927lwh625n0gma637n32xe56q6ootd7xdh8um78534xnvaaa7phr97jk8fog3x17n7c194vw5yal2zr1zw8lw5wsauy9coronduup0r56omvj8zssh7r2hg4mr1sxphe1p3upxoxue54py0qdeql5bvlb\", \"yna1euzkj13ico3twe02x4e7tf5o1pw26vj3tqtumo0jgqoal9qx5lfzmub43uenp9q9fpf16lcg94a5cq4xbkxm6tzzsetyszcpmkj67b0p378k82nm84t9pw1os9zlnic4lurws\", \"oqkqmk1kh333e0qnlo215c8jsxp0t1z73tajtm36yy94r4gqljnwrw1rn8xuihcfniro0pm90czd7wokei5smli415xj6akhv86okj56qwbfizpr957lt15zeazdygfm2wgnbfkvagnkkdwfuz4mdiqwx02mwkfae2bwkux466mhfzl\", \"4uwcpn7g1mv5p8dyykhqtixft1erail971didbjkfjul1m3dweuh7aj89kjg36madr2jlpn39inlvwotqwpabw2721w87zdytqchzjuzeuqxrqm2lvb4e2q44ot6zendcxb9tr4ma0uekgw88xk0l5nfrre3kzashtrt8qhu618kc964k4fhe1tgwk6ugaots47l0s2y\", \"hi1vdgr9hknjneslveflc8ih86mybgb\" ]\n      },\n      \"content\" : \"Autem corporis eos. Suscipit numquam quo aliquam provident veniam. In necessitatibus tempora.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"z8uuhmqy3mb7\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/219877\"\n    },\n    \"importJob\" : \"g5gbh8ok9oytsr7937patiuy5p9ypmnasaq2kmhrr7h\",\n    \"generateTime\" : \"2023-02-03T17:51:21.694399Z\",\n    \"destroyTime\" : \"2022-12-27T16:59:21.694426Z\",\n    \"destroyEventTime\" : \"2023-02-09T17:38:21.694454Z\",\n    \"importFailureReason\" : \"s2fbys2ey306tusdbwgpefyeautpto51veh8maa9jn41c6ko7696x0t4dioakqxqwb1i909284ktg31gnzf6enu7htbbpewd8x693pwvkr10j0bwojq6eflnmoj049633365sdb470u4u\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-12-26T18:00:21.694501Z\",\n    \"name\" : \"Steve Medhurst\",\n    \"state\" : \"PENDING_IMPORT\",\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"importTime\" : \"2022-11-25T17:41:21.694579Z\",\n    \"algorithm\" : \"HMAC_SHA1\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"r4enrs3slk66m51be48678gwqtpmh0k8e3xwo9drkf057uwtjxeur4c19rjxnsbt7oe2ktcbhhlup7sxnr7ad4jt16notjxq8nllcjftjqotvzc0\", \"uz6cq65eilra7hvhappb8ann5zgfhwo3utkeq6wikej2xgp7ewwkhjaryhn1j8ghkloqlpvolah45vsjmra478a3nlmnw\" ],\n        \"caviumCerts\" : [ \"epiqf02n76lrpqymd4nzrkbolawoaf0qeo5z3eejmhylelg6riwkfns0yb0pkutj2nx14bn7yp51qosxmj5odrikdordl1au6q3ngimyyeqjiuapo1kayznewfbp9n7nii9ahkef35uuc7borerysgbgl2bk9ml22txxb1f4es32fdjjc5gllxfgxbnqsnnbdd9g\", \"9v9j4cwa3a4qr0sb1e3mg0kq3vtwz1qxq8oqvv4za0um1qnwobyx6meptkuagkguxdc7549efo4dpvwbrq760o30nfrrhtlwkv7bfgim7d7ns0ucdrautnz6xvaxebme1h0ac3d7\", \"8gjcktzgce211jt2tc5wmk0n71o9\", \"4fpwjqul02sol7ba96pcwfpe7uv6ah2shk476duxlkaf0mpsi7trsx46o0ce6ozy8pb7cwmoii3xtymqcgaf2t3ud32b115clwf2o6oalgfaoyxb13w68uszkwdu4du5k32ngbar\", \"zwmmxvtwx1x5x0thzb6c7epf07cunayuvpbl3tqz2akvxlygage6s3vqk39pfgp470vig2bnng96d6khn1u8z5e8na9vhhyiqr5vdaqsd1z4jrmlisc0gcba9labzw6p\", \"g8ah3ksdnkb10ecpfonue6v0huum44oo7778p5g6lvgf5ia1ln5om1t1gowop6zt5m3zcbuguenyj0rgyrt9sel1w90hp8ouclgjm8wwe2bba6w58hba1yxi5e4vc870dflpang\", \"cpu4whz4dxpj9unllddgtx6k6s6np54caxb700wsk5uipzqvjy3yd1ropctf6p39p68e915htrgxgri0s3\", \"iludzfm7z02v8xzpdkd73e\" ],\n        \"googlePartitionCerts\" : [ \"9satpbuptvcrvfpf273jrgf331pl6t05ywb3jhseyjnpaoo1i0myq2vrtd29o2705xbcbc8iebr7j3p8r246l38xd7qvybk1wmywhbmvf9omjbhwgaejb60pvh4z1v1o2rh7wn1j7vp9ip5lj1yu8\", \"eh3q2jij69po00772hnlvw8csq5xeflj9yzqcqx1i73ld6oacu4wl\" ]\n      },\n      \"content\" : \"Consectetur ea qui et. Quia aut velit quidem adipisci quia. Ullam et quis inventore.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"e2z736hz9btow36jexmyg1aym24fyzxa6v50cech44b0issz47r\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/231293\"\n    },\n    \"importJob\" : \"40ubkdckjsq05iiywffi41bp2rqt6tbb5qysm688pxsw6fj45166m6pe4u3zf8ufucs39ogm049tw04jb2yfudv70embz9m7zomuz8jizdqt4ld2r5ykow3rz\",\n    \"generateTime\" : \"2022-12-31T16:14:21.694839Z\",\n    \"destroyTime\" : \"2022-12-29T18:23:21.694865Z\",\n    \"destroyEventTime\" : \"2022-10-16T17:36:21.694893Z\",\n    \"importFailureReason\" : \"v50lqgrb5i6c3qhwi17zd4jc8ilsa17e9gfcr7bv2nodjl5dc1k1x8z8x7dmjro5cjzpx5k8xuzxtr7wtw7nylevr08lsbko9ju99aijixoxiurp96gaam0ic43uthwwaji8mdtrlfh8hsh8wywmql5k6owhbp4gcgi69o10\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-05-11T14:56:21.694937Z\",\n    \"name\" : \"Nicholas O'Kon\",\n    \"state\" : \"PENDING_GENERATION\",\n    \"protectionLevel\" : \"SOFTWARE\",\n    \"importTime\" : \"2022-09-08T18:05:21.695015Z\",\n    \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_3072\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"7vd5jng9vma7nd011jrdzclu7k8g4e6lt458ak783zeqxa54g4z0zoy9sfltbo7eitzabfb7i69xzj61kav2s7zyiu3ipotfl5ueocynl6uzp72fc67p94p6u81lcus0n27984nsffn8n7mb\", \"or9u3j7bw6v6r8kg0vsj3r5dmzbarsyg97hoe63sdg8rx5gimfj9a6fpxrmlac5zt03ft2lj7fa65aufah85\", \"51dtlxcv8cke96w7qhiwsq0mdxf9aiwcb830xyb3vna600ns4g6i931vz355xh4n3t2e9oujsvri80s1imithrs6wupzb37og6ngl32n7pjw1aagorxa7iu0r8e8hph9nvmthjaru8my0qywh2htuoao21gkh07dvp039kncvdnlz8j9eg\", \"qd8mod7065td3wwzhx4m\" ],\n        \"caviumCerts\" : [ \"gxx0n35z04kuiw2jw6whc\", \"0kxa8l5sl4eg4fnwzbdrcnpwnsjq1u8p5lcq6bbmfxuwwtc38jgrs93do5abl97nwp0c9dui4uln1dbuy3ngrjjq2fzqxqn71nj0d2lu4sj5owc0s9zh1cr9pgl18hedst86peeg3\", \"3mjhtxcisdbao7f665iz3ujzxptbgpjklo007ip624zthulubdpuv0gz2thcta2r0viudf1m26w4fe0j067v3x80izhqwi6xv88ihtohrt77xzzvflsk13sexgkuq5pdy90a5euni9cx2oz44ebeksiepgos5\" ],\n        \"googlePartitionCerts\" : [ \"mnb5m767rre13ux5miog807i39orqgoeh5jphtnzl2p0kb8cu3a7xqdsvsn6fmjfyc1511435myxqy0c4kl40bq0cag0n75jcrwtd5xk7gmmhji9rfjran9n55xlz9brwv2gp63lpclsuq581g5oam2\", \"wwcj0j6g2j2t2dilujrn8qrp2eupvrznrh4q7sbpvh5a94ny7uvg99o0pf7c3c4i14h97cqy0el8r08be2maloest24pzjvn8h\", \"lco3een02lrve43g56l8x8rrnycv8m6sgq38ygphyb1irshb0b6x1gsufu3tqww34n3fi8nbzews17z7d\", \"tk9gbw8aw0\", \"bxvy7mrwdtuxk7r8e\", \"weg50hz2z13jbmv0oczu73sr4fuhovapdc90sr3ut9xbxztvb2wi9nehxx109h8d2vryq3onlmmf6cydgurich2iqabxzlx5d2k26nmpogrm2w0s\", \"yh208wz3xpsdr1d15jl39wg8pvfmersykxsoydyulc9wxuzk0y2xwertkixnv2kc0g\" ]\n      },\n      \"content\" : \"Explicabo porro quam ipsa voluptatem nihil. Harum et commodi eius sequi veritatis tempore iusto. Omnis et expedita maxime cupiditate similique.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"xynp0whpkpnrxqefv7u0bt9zijh\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/192338\"\n    },\n    \"importJob\" : \"3azu6iubjck6hoyljk3delfv4ggjggu273n2j48x7p8ikjs2vs8j5nn3pywgr4uzkr1j5vvxxt7avf7tjoa1wckv3prvb9owst7sybklv5apu1u5j0t0kznpae0b0lxylk82ajyijvx779yo7wlkspgydcbkb5lrgv8nv438v\",\n    \"generateTime\" : \"2022-05-22T16:00:21.695281Z\",\n    \"destroyTime\" : \"2022-04-16T15:18:21.695308Z\",\n    \"destroyEventTime\" : \"2022-10-29T15:00:21.695336Z\",\n    \"importFailureReason\" : \"kygz6od9z50cck63onv5hulekqjzvx9\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-06-30T16:24:21.695377Z\",\n    \"name\" : \"Shila Deckow II\",\n    \"state\" : \"DESTROY_SCHEDULED\",\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"importTime\" : \"2022-04-23T15:06:21.695461Z\",\n    \"algorithm\" : \"RSA_SIGN_PKCS1_2048_SHA256\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"pme5jam2yah70n69bt2gf0wvvwhdqvr5vbbvqvmoyzt4v813pxmlrlx7bid43sqg9r4t0tvvaw1ui9i0j2x882nj8nrxy9xo1mhqditd9troy3csmlpkfnpfaa\", \"276o7pojt2i4xglfyjacfr37cgf27layqajnxjla1id68liv1ycc9vvrkmsbim61tlr1jaqo63l384zjzpffxrx18vvp5glspzef74qv50\", \"el5l6i5htj0zz4o55ousupbgba5\", \"n06il5ai0l98\", \"hsqu5vmtmrl81vkmuzc8fftt0j084isiktszczi90y0vszgkiwv3ela20pkwz64kajfinbgklggir1tnk9zemw5u143qlew9ovjuinz9o9jzg8x3v\", \"deh8locha61b2vw9gd6j91ukzc46ih8ptvf1r522cds6qbty0lgrm9x0r2y8o8pteo4c8809rxqwvhnyjsou4zsvmgqapzmmnljkgbfynukgcp05g94gvkdihdwlvlk45nty7zc518yns7zb3s5\", \"vvksxqgao0zom14gsr3bbxuc02x7yy3fe491vsldi47jyioufp8cr90beg2kw0kf7rz7ne8sp6y3v1z\", \"aogq4y42avjp22egxl0us54k3gg3wxcle6c345og01q4w95wgz8ldjq46zy4a7k836r433xv0esc6vbdpauubun3dojsir89hopyhc3bnvfts2n459ptvusc0yt3op9ro6avjtv6vkmzvtxdjuaxc0gnzyad4azw8qesw51zhpiu2s3f5nz0n7had896b\" ],\n        \"caviumCerts\" : [ \"i3rakx0mkf71x7gyoij9q529purj5wwro4k0u9asztk5vn17r4tu6tvkyeepeu5rxw\", \"p4jgvfqk1sgha69d6hbp79l\", \"sc1p8dvqehfqkqcviiet71sx0jyuhppbh6ljp4cry1u6ubpruy2p2hpvxevk3s2c1fbmc9vvqnbfqky827dis\" ],\n        \"googlePartitionCerts\" : [ \"92x0ew98elcqs9ml13hghqr2senmwoz128k7ixnotcl7rrfohlcs92rhol1uuacoey4ewyz3swqe8misi9dq9xcu3eebgn76lpas7gp2jdzk4alp\", \"74fbslsew0lttxe231u162mf9m8mrosg320zr53hln877j2jp0e8lzvrbrpffroytjkavd3v5zb3yt79g8qon2jnv7vlrhs31jiv4o0o57iobgb5yeu7g32xb0ngy5n1r7quij638uknq7w21cn37tg3hb4hawz5n19w8ptp2u\", \"vvptv4ijnw6g7s9bcuyxijndqal7p94zsqttwxsosxk478uxst9x89k2pyfy9td7jy0bwmtx7dindufxnwhue63t9nze3x0gohdgeo3oh895ndw3yrq\" ]\n      },\n      \"content\" : \"Aliquid qui temporibus. Eaque molestias iure quis. Similique deserunt explicabo. Facilis quis distinctio.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"k7gx6j8ph0q0ynqwf1mwnznlu6oeo1e60mq\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/540309\"\n    },\n    \"importJob\" : \"em901t61wxm3fhyn2eahl7txjh6x4ovvh9w1lmemibifozo\",\n    \"generateTime\" : \"2022-05-04T17:58:21.695714Z\",\n    \"destroyTime\" : \"2022-05-19T17:17:21.69574Z\",\n    \"destroyEventTime\" : \"2022-04-23T16:21:21.695767Z\",\n    \"importFailureReason\" : \"nwxp6gd7dak\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-09-15T17:21:21.695806Z\",\n    \"name\" : \"Ramon Dickens\",\n    \"state\" : \"DISABLED\",\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"importTime\" : \"2022-10-09T18:19:21.695882Z\",\n    \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_4096\"\n  }, {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"8wh3ngffhmotsbxkpcxcqge65xwgilmoywex6c7o0a1xx0mi7hldqw0pmlq8vqj4uy8vscc2enix3b8xugks7ntr1wmagrnvc8pdm25k2x5ijk8uo9jqf002kbu7ggbe328qlhruthjhoig899\", \"yl4obzdw34xxleukypa0zc9hghypfbp2i9w6asg4utj2kp4w7q01hugfjxcd3cyketkykh97lcy\", \"ckdyyoht4mu2uca3ct2gfzbwy6xsab84ebbdbeqxwgzim71ijw2hhe4\" ],\n        \"caviumCerts\" : [ \"ao3v5dd8qup1djs9bi3reqxd3jst9y8fb5qsy67dro79u0z8titgmosx6cfxzx9rmxztjq3m6im6amxxh2vmg4e81vlcr3bu1z4b4x1g2s88k0xo8cfbcgku\", \"0u0yvrseggik4gvnlqhdox2i2prkjsk9n4lqsgfbuygxahle61bx55umbbar1mk4nlw1f8h362ava6sriidiztbnr07g862hgi618aq6kq369eu5\" ],\n        \"googlePartitionCerts\" : [ \"76e3grbmboctx69c9i01i7t4vstolgndc1xlhod90b5\", \"qi7cf8gawd2sopivi9ob8p\", \"69lcwp9aocb77ls0zsbganz7t0novvim64mecvu034nfrtftifdfvmd3cax81frbs7i4ugzf613lrab2t4ch4uy5fjl0od6t9g5z4sswgjgoff3w5ldmu748d\", \"rfvgqwkcndet2jcslravp3u6y4014b8r69f7pnbm14etfrakjofcre661r9ilugjayigujugq9hfx1demmlukxgg94skv3qc3lg\", \"02v7lbnerdm40zwh998akbjwzke2qupf7hchjq4m5gvxc1q99e3vqpz9bvakvnmmzlz92hghhkk9itjyd2fnj4847ykqga9tc78b6v3xqf7vn\", \"d1jt2di7t8bi2mxr71ic0yutc1hihnre4wu2xz43vx4m7xki0rp42cvab6ga8u4io26ageeyj2a29uss8uvkup6wa26btkv5tsngapn4lhfi2vwj2f013j6cwwd2w2p9eht5zz3m5bdh4hoeza079vgwe8of9ed4sactnq7v2rp8utxqvmfa0ln3\", \"q8vzmdm3971hpikqa8nnqbh1l9z3bjjfucd9sa9jyzziklfamkn1yy0m86i6j6p9uqp9wwd30dgvq48rb0wdchequrmagtutm9w5vdtbwzg40u7cfg9e5w2mvhohnivgay4480eq8jfptvfx0frjzst9vsetwx4tm5r\" ]\n      },\n      \"content\" : \"Sint facere velit dolore. Consequatur asperiores veritatis sed sapiente. Iure corrupti accusamus.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"08wjieolncv5eqv9g1zk30l8quhp2wkw62afoldfozs8ovkkkcjr3h6zq7l8gnf9wgst7s8xyzojsxff4a3a74w49wzk618ksylj4sti799eecqnulyny2\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/545725\"\n    },\n    \"importJob\" : \"rhcu9q12ajnwy3ti75sgekgnq9yk6ntonrbvwqhjxljp8c94eij6vpkvhh3vngngbuom4azcihax7xu7wvq7r0xu8it7bfvjjqzrp1n9pj8ie4ivhvyzn8ye73k0gdw1lfsso466lgt7ijxkofh7xusoqo41\",\n    \"generateTime\" : \"2023-02-20T17:05:21.696129Z\",\n    \"destroyTime\" : \"2022-07-26T17:42:21.696157Z\",\n    \"destroyEventTime\" : \"2022-06-03T17:50:21.696184Z\",\n    \"importFailureReason\" : \"42kx81zr78ytykvgfcd1rt70ebyg484r37alsxaibbx2c341mab2lfrsnnmsrlpv28hadz7op52vuuv2qr8j5uz02mt863f25d1j2r6ojvdmq9\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-12-19T18:02:21.696228Z\",\n    \"name\" : \"Justine Borer\",\n    \"state\" : \"CRYPTO_KEY_VERSION_STATE_UNSPECIFIED\",\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"importTime\" : \"2023-02-08T15:36:21.696308Z\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA512\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7e2d7393-3698-4c56-b1c6-546171a691b1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.696482Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListCryptoKeyVersions.",
            "properties" : {
              "cryptoKeyVersions" : {
                "description" : "The list of CryptoKeyVersions.",
                "items" : {
                  "$ref" : "#/components/schemas/CryptoKeyVersion"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListCryptoKeyVersionsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of CryptoKeyVersions that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "df6326cc-b779-4afb-99b5-13a82c018429",
    "name" : "Update the version of a CryptoKey that will be used in Encrypt. Returns an error...",
    "request" : {
      "urlPath" : "/v1/Ermelinda+Blick:updatePrimaryVersion",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cryptoKeyBackend\" : \"uicsue4hjw024s5nmf585qvubtf774axu9n\",\n  \"nextRotationTime\" : \"2023-01-23T17:09:21.692813Z\",\n  \"rotationPeriod\" : \"quvgvki2hn5uf5ssonw5unr210asqmf928qk7kkrjkoa8kmxc5xioe1hkyel\",\n  \"createTime\" : \"2022-04-04T17:56:21.692858Z\",\n  \"destroyScheduledDuration\" : \"czfq1fvfmpv8pssan7vxc7uc1vemt67qbnti8da6xb8z56qr7ajq2ngr8ts75f2s1lhreq3eh0t4en3u39lrfc1ixr40pep9plto0ghncslqywefgis7r5ufklqdltgnsejb7sp676t603bn20zl3i\",\n  \"purpose\" : \"ASYMMETRIC_DECRYPT\",\n  \"name\" : \"Otha Wisozk\",\n  \"versionTemplate\" : {\n    \"protectionLevel\" : \"SOFTWARE\",\n    \"algorithm\" : \"EC_SIGN_P256_SHA256\"\n  },\n  \"importOnly\" : false,\n  \"labels\" : { },\n  \"primary\" : {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"9vq1ndmfcfpqpmcrf0t1ejmbyvf3ucyn832zk2oodfhcme80e04kmlrts47h9rmj1eh9nidkx71fplo9hw495vlrrpoex7k8nxe604p2z407vcd8c3ko9mpedcr9qxgrr0ugbkk2renb45lsdjs\", \"b6ow1lq93vjoe415noe193ym4pyalfe6eu8hu09sudxtfa3f4m7dx771mk9dltja7re6qfl0gt264ubbi3rf1xowxzwqkvc4ym1yslzr145k1z2ybgeau5g05zsz3cuabi5a\", \"1kho1j0uosrv1esbbjjsmku5i30mn3hm07r0issotks530icpiocn8jbr6xuxad5nj5ornbjwji8ixd61oa8x55h3dw4e43x9gpf5m9sf3b2enjk7dh62n4y6cot6bjdr2zdq9a66dopfiewe\", \"nkn2ndobj71gazzshqo05hnxipg5q1dgmx6fitao9nbs7e8abceuon4ej4545sth7g5q8hj2i6988ehz8xi7crj31z9hsf0i5e6wrqcehwjv7oy2dfzq99vekdqkpphfu1vghflyclhe28six1sctq14zjmgzft80jre91x3xt7w0t74\", \"89qun90y8nbuad2r1cobutmt4uspmfkq55a2dl83hmqf3w7mtk3gjl4qnlxzvepkxxy5oxq07yi7g0e9ryhj5fjowjgf80zip2d8gq1soi2sfdsaelfmlzlkbcmaumrmkusyb\", \"2n64x63apjrh0z3s4c12fat32ev66nkqj90f1npkl4fc0ztys59qf359m0103lpanhako\", \"840h87hbwlg9lztjvtdnvp6mhz2k76ludawasaje6yu7n59dok1wdyfx1tzzi05xub9se8mjduzzlneu6hccgelsgyl9ycwc6ccrxqls4obktzo8x6wiuz91xpn6fk27ewtqvnorkptjsjzxaqjnbi0qgmmjty869b4xqpjr03272wjbkuaep71yqxmksz89rec5n2\" ],\n        \"caviumCerts\" : [ \"tjuqiwkzkokrj5glcwjykuez63x15p46704zkwibnsv5gjb62x8i7bexrc1wy7vlvudo2a074edlyazkgdto5qgph8ilytx8sxjgksrcw9ihpg48m7uoppxssb4lira9nkj1isfxj62livvprgqub6kkf7rzcpruojtpxxvqwdhn4x3a87rljvhbj1v5\", \"3eup3ightxfd6ovlmpcgams1idrnqhzx8mv9mrzeje97syjzbp5ksg0uk451nzg9vsttrvsrqdpdc5jqvdabg8goe49ik3ng63ljg70snn406cei7s7xg9d4j09ptqbuin37v3346\", \"5u7s5y6jnc7zqn9bz95hogorrs0rakoa8lgndjnoiqrnryyv6j4pge6aokuy0de89499zhhbxqcfzmiz9dpyhx7hil5lzlg7jd43bri4z4gwe3o6crmem6nlkib1k3r\", \"7p30g6fhhqi0cycvo6g8i8ct6qrlcwj144kv91xs3f6py6u749rjopw9przeheaqkw9cj5ptktj3ljv60qcmi0podbfza0a3pky5lggf0tp4xlz3jhir5y3equ9s78smlvz8jkh3bwty6lcjni7g41up4gfp78w4a69gu92o9th7ayklr8qo4n9uq8zbaz5bd5f\", \"id43glylr7e9o10225dbrgb1qs8rp10nl0hoce0gda72aedpj5uh3ftgt2wq2kv2p64g443v68iompotvoohdtxl5c4olcek7qs8szhjhz4qadc70dhyd6bcd5tos7oert\", \"914xb82xtuf2auznes9523hpar42rdadnt7fmr2qhme0m18e76glqxu32zcwh2sbtme9e1o696kggrssm32364up86sm6w2j3fbk6hwcfsslyennz13v7j2dh0szjv2lcctzu1dmpc5z6cslyy7a7npdd98nn991hd4umejyfslbr9vryk171kgn8yo3agujeqcmz7\", \"9ncuyegmdufzj6utivyoy63mrisokrul2f8g\", \"acid30f4qwojx150937r619s80ccutc89ya310y5dvyplayqddg0alg2pjo8ot56ki551pycta9xbt03o028mj\" ],\n        \"googlePartitionCerts\" : [ \"qf7ov6rs262h0e13v4t2fyakcbv65ztrj8kvte9ccqynogkxmqukqhlqk60qmeyyh4q9xo59wq55jov2wpwksjk4psqg06obcoffrll5uvzchc2zhva162hjyhp93ah1t83ty3kknxt9yzd72i4lc5q2r97lylb1y7hbgnthagfu5dkbibzyqkhmkz1wjoopqeyd76\", \"r4zgqv84uh54124z9pr57ihv2uaqm62ehlri42a2t3h9ydgsakmvou4vgvwiucgg6bhiu3v9zljtev4w009iq54mv7nb8nz2p42p2r2hh99g3ootq38d52rs4zo14on4fh8dl5ou69d6s5agh0\" ]\n      },\n      \"content\" : \"Rerum voluptatibus eum sunt. Iure nulla quia numquam similique. Quia quisquam ipsum assumenda quibusdam et. Laboriosam aut accusantium et.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"u0mvbfupr8kh3saum3u1hothvu0oqfmg4mikjovq4b9hjzi7eujd4rugkcqk3wdcmg5c5yl3a08lqzy6r829icj0skep08\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/413764\"\n    },\n    \"importJob\" : \"yh10x4p003txmrdaqdw0t5q4acddjm2hfy68yli7ptcyv2p3u4pziwiw1t67b4jhd4gs9rmeki44s3di9itt8vnngzyn1228qe7w2zhdb020wvtze2zcadhx9oiz5cnfjapges7egxx905sp9a42h2cdu91ymriaxn9\",\n    \"generateTime\" : \"2022-08-19T18:34:21.693252Z\",\n    \"destroyTime\" : \"2022-10-14T18:16:21.693279Z\",\n    \"destroyEventTime\" : \"2022-06-18T16:23:21.693304Z\",\n    \"importFailureReason\" : \"p3gc69fblyj5duu5a2zdbbo802u68ep3kjx6gurb8za0zqha4jhep91ixfy7zvi6lbxgrkq98585od0ykrk6bg6iejrzilo1venmswnm3n9uzvndsrbzhnt5jlimiw16i5ckozwtcam89xmcce2b2mohlqe8fovwm87e4gvv3e7zah5z62\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-11-09T17:47:21.693346Z\",\n    \"name\" : \"Juan Weissnat IV\",\n    \"state\" : \"DESTROYED\",\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"importTime\" : \"2022-06-22T17:47:21.693428Z\",\n    \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_4096\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df6326cc-b779-4afb-99b5-13a82c018429",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.693621Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion",
          "schema" : {
            "description" : "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKey was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoKeyBackend" : {
                "description" : "Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.",
                "type" : "string"
              },
              "destroyScheduledDuration" : {
                "description" : "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.",
                "format" : "google-duration",
                "type" : "string"
              },
              "importOnly" : {
                "description" : "Immutable. Whether this key may contain imported versions only.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "nextRotationTime" : {
                "description" : "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "primary" : {
                "$ref" : "#/components/schemas/CryptoKeyVersion"
              },
              "purpose" : {
                "description" : "Immutable. The immutable purpose of this CryptoKey.",
                "enum" : [ "CRYPTO_KEY_PURPOSE_UNSPECIFIED", "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT", "MAC" ],
                "type" : "string"
              },
              "rotationPeriod" : {
                "description" : "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-duration",
                "type" : "string"
              },
              "versionTemplate" : {
                "$ref" : "#/components/schemas/CryptoKeyVersionTemplate"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "a935f57c-a612-440a-a00b-db6d3d9b6f76",
    "name" : "Restore a CryptoKeyVersion in the DESTROY_SCHEDULED state. Upon restoration of t...",
    "request" : {
      "urlPath" : "/v1/Alan+Klocko:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"hb02csbj0o4tici14lokhiwpg2zpltnw8th52va\" ],\n      \"caviumCerts\" : [ \"67qxnn3yfkb5qn2ta27nldumjw9qrjyvlm4m2nictgib7ldby4gli0jppbqpdgaq8b5bfma0wis2fvf8ztyf72zz0lcx3mm5x6ldh6cdherekn7qhad675rolt88h23gkm8kkwrnzty18ah7g29hrsq8c8ubn2k8nbqztdfi0no9hharnelzx\", \"nvyxj41g1nb5zilvcet3sn0iiig6y5t646emph7aa8xzaatc93t8bypldt81o709xmzv6wrgsj4b432yssgnyd3v8lvj\", \"ozsl82sgxrv4o64tq7n91a9vcpp633ld3mzp7xtbxdbw1esvni3796zq2t7qmecbba6ip7pho0tuemtiog5clr\", \"nb6opuh9m5fogl6dmnkc3z8fkfnf0wapaj7okpir7lr8wrptym1g549a3yo8lfgxzas8500264ye05r54m3h4tx2ersbl5fkkjggjt8eyj2hwjrc52et4oy5\", \"iogmyjuo3cikzzlgpe094k7j9rs\", \"vmdcbd9pg83ke3s1n5r9sf2pd7ypl9t7ngtoe32ewvhweph3gakdxccs45ba6mo819zuqcpok9ez80g8sc9ykiw01dlxvzvf1x0rj81q3ci60jd11frzjeck3rx1jhfrn4fhccdu5uaoej0i2b4t47u\", \"78dr3zslrd5exitbeak4xbldn93nwui8kjxmjyerygh5ivir8p\" ],\n      \"googlePartitionCerts\" : [ \"upc1vzagmouepvd29mzovj7vmu7l0h62gvyd87pmbg3zju3qlgjfahecrfexpmumf6iw5oec56lbtfj3d51nqfe6grja1x4p0yjlh3d4r2rbckfskit7hl55ukcx40fp60np28if2566gves2lz\", \"qt0j66gn6iymos5i13ovn1se1bimcl7xey559560r3bt1a2cvr1at12vclllhhp63pv5xeyiiwg48yi5ssle3khf31smu60sg4nd1oseek2goghs6xxyn677tvwhv349i9ovavs77w4rm47isnpr3jmzjm41noacgdv11vuppfguu\", \"lc6jyrus88z2j562se91mhdgz327bua1wwur1wq\", \"6ub5ratwkig5aya2o52rob98cz6ehsnvq2kgmzpe3jj871o1ttchiwtvuzfj98p5qb83jll2cn7gfhzr\", \"1ympvub7ajjfdvfmr6la35mi1iqnrwqwz08xcgrao02uknet7n8nq5yctrax3ot3g8lsp1ijau89jj2y0ms5a5i2n8wmb2ast816h656gvnwnoafuo19k3k3vtkktu25214bue7mr9xgc5eu29jd8iro6mxd2xsnazi0i64l76yrv\", \"51pkb1fq2ktd3h7conp5vsobqc513hyuo258rjl6wl8gwykq9o2447co78e9p9kglcsyrtkat8s1g3547chxif6aq06od8eg06g451vde95no0fb9qlppkmmhz57rhumuyu3xw1bdvy4ohm28vf4t3oo6aqy28tf614rdb8gxwgacrzlufryxj9v1wd1zdfuo62o\", \"2bcbnf2dg\" ]\n    },\n    \"content\" : \"Odit debitis explicabo temporibus quia et earum sapiente. Molestiae repellendus dolor autem tempora totam magnam. Cum id est et laborum. Et repudiandae ut ut labore dolorem. Minima qui rerum quod ea.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"7i9ua8cm\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/337720\"\n  },\n  \"importJob\" : \"vzqtzy006uj8b87hkmjde3lhbq48vyyt378lwv6ulgjcs1i7ag1ajkjnwltr16m571fbe6umth7szdt3ucvwrh2xsm3g2i3mguw9hx\",\n  \"generateTime\" : \"2022-10-10T17:22:21.69242Z\",\n  \"destroyTime\" : \"2022-07-08T15:07:21.692446Z\",\n  \"destroyEventTime\" : \"2022-07-10T17:39:21.692471Z\",\n  \"importFailureReason\" : \"hbut2j5wzq22ormo63otr6wy4o3n40kp98x22m1jaceov81zbamr9a2galem2s5qd1j02baxzl7hkn536m92dl1pa0p9btt21lc4fqa5kk0kjads071kk1775qlxkajx81lxwj\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-05-31T18:48:21.692508Z\",\n  \"name\" : \"Rodolfo Homenick\",\n  \"state\" : \"DESTROYED\",\n  \"protectionLevel\" : \"HSM\",\n  \"importTime\" : \"2022-09-30T18:25:21.692585Z\",\n  \"algorithm\" : \"EXTERNAL_SYMMETRIC_ENCRYPTION\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a935f57c-a612-440a-a00b-db6d3d9b6f76",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.692754Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "9018f622-665f-4ec6-9e2e-b6ef0d045ffd",
    "name" : "Verifies MAC tag using a CryptoKeyVersion with CryptoKey.purpose MAC, and return...",
    "request" : {
      "urlPath" : "/v1/Mr.+Loretta+Yundt:macVerify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : false,\n  \"name\" : \"Ms. Anitra Reilly\",\n  \"protectionLevel\" : \"HSM\",\n  \"verifiedMacCrc32c\" : true,\n  \"verifiedSuccessIntegrity\" : true,\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9018f622-665f-4ec6-9e2e-b6ef0d045ffd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.692127Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macVerify",
          "schema" : {
            "description" : "Response message for KeyManagementService.MacVerify.",
            "properties" : {
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for verification. Check this field to verify that the intended resource was used for verification.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for verification.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "success" : {
                "description" : "This field indicates whether or not the verification operation for MacVerifyRequest.mac over MacVerifyRequest.data was successful.",
                "type" : "boolean"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacVerifyRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedMacCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacVerifyRequest.mac_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.mac_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.mac_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedSuccessIntegrity" : {
                "description" : "Integrity verification field. This value is used for the integrity verification of [MacVerifyResponse.success]. If the value of this field contradicts the value of [MacVerifyResponse.success], discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "32d30d79-f343-45bb-a244-ab78cb209c9a",
    "name" : "Signs data using a CryptoKeyVersion with CryptoKey.purpose MAC, producing a tag ...",
    "request" : {
      "urlPath" : "/v1/Ollie+Trantow:macSign",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"macCrc32c\" : \"lynsrd4dt9rkctb7hzeydlsk1niaa1ein0s426a3if2bposnfybsnuttmoudva67g13tk0b16owfz858x5dw61ekwv0sfbhj9koaa6i5jhq6m6qs0krv404nsi2f179h4p0g3\",\n  \"name\" : \"Lamar Roob\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n  \"mac\" : \"s05jwghvouclbka4x4v2ot9fvn4yg7bpc7ofiswd59hp6987qyvvsp4g3a4fzrkrn12hw88a11l4r2ta2dojuyauormlqnp4nmiy7n95o05jx4zx09dkewbsq61th\",\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32d30d79-f343-45bb-a244-ab78cb209c9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.691918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macSign",
          "schema" : {
            "description" : "Response message for KeyManagementService.MacSign.",
            "properties" : {
              "mac" : {
                "description" : "The created signature.",
                "format" : "byte",
                "type" : "string"
              },
              "macCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned MacSignResponse.mac. An integrity check of MacSignResponse.mac can be performed by computing the CRC32C checksum of MacSignResponse.mac and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for signing.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "0ae53f7a-2b75-45eb-8510-db9c57073a0d",
    "name" : "Encrypts data, so that it can only be recovered by a call to Decrypt. The Crypto...",
    "request" : {
      "urlPath" : "/v1/Millard+Corwin:encrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verifiedPlaintextCrc32c\" : true,\n  \"ciphertext\" : \"kx8ij2b2cedkzsekvk6lpeqfy83o31g8qx1fqotvgemfkd5ufnjda1e5x901fhisursj3t1jjt9u1um7g0b\",\n  \"verifiedAdditionalAuthenticatedDataCrc32c\" : false,\n  \"name\" : \"Susannah Haley\",\n  \"protectionLevel\" : \"HSM\",\n  \"ciphertextCrc32c\" : \"ly9pzneopuytvybx4jcczbh7pbyxkaolx1t2khtv4mep281b04j0rkbdmwz0qiisuhonobc1forbpn75cckcsfb8gldm2smaq\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0ae53f7a-2b75-45eb-8510-db9c57073a0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.691703Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.Encrypt.",
            "properties" : {
              "ciphertext" : {
                "description" : "The encrypted data.",
                "format" : "byte",
                "type" : "string"
              },
              "ciphertextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned EncryptResponse.ciphertext. An integrity check of EncryptResponse.ciphertext can be performed by computing the CRC32C checksum of EncryptResponse.ciphertext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used in encryption. Check this field to verify that the intended resource was used for encryption.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in encryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedAdditionalAuthenticatedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether EncryptRequest.additional_authenticated_data_crc32c was received by KeyManagementService and used for the integrity verification of the AAD. A false value of this field indicates either that EncryptRequest.additional_authenticated_data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.additional_authenticated_data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedPlaintextCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether EncryptRequest.plaintext_crc32c was received by KeyManagementService and used for the integrity verification of the plaintext. A false value of this field indicates either that EncryptRequest.plaintext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.plaintext_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "1d6d38c4-a381-48ab-b0e7-a68b63774428",
    "name" : "Schedule a CryptoKeyVersion for destruction. Upon calling this method, CryptoKey...",
    "request" : {
      "urlPath" : "/v1/Roscoe+Ritchie:destroy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"h4wub847nlm8qme4nbvlwovf1nmq8lvloj57cjtcd020ss9rziit2ruemjvqikbrm73kpnvui2gpb83xrfqrzqwjwu4e3qqs9jw\" ],\n      \"caviumCerts\" : [ \"ppieheqcstc6haros1jfu9q0rre3zssody918kqj9sl4smcyd\" ],\n      \"googlePartitionCerts\" : [ \"tse9xdlgwn2ih0j148qv9ko806dpm56rjypl17dcm00\", \"bm5bgm7ebxo9qid643whtpqgnd5i2d50al97ikrrxfgf2stv13arrul3zskxahdt706c5eprla3kw7d19ikh150zwe4g3cyh7\", \"fjkzanfk1ge2a3l5ymsgn5xufiqinkyuy6qsygk07h8n0krum8isjarhs2fmk246lsa0onqwphhkp0zvhm01kkx6wuad6dv1sn4zh\", \"v2ov3cbft04bo8nz74jziy33his9wl25l4a0m7icq7ubvpmfy9z3qsnlsyxklfrki9y8sbxt02eu2pmbemwa44o8pc22z1my6s9im5ywt315mvlnr4pfsri50zx15n7uqll8k35yfhoziak866ans\", \"rj7b3y6rtvyjv67v2y68ssp6q2x5qov3vvw5dcy7xndfpsz2ks12ldqwap1t6dil85a7jteoqa707a0jpj7vwzl5vhd14kpfq9en0oy3\", \"ig3a2g3yyynr1znmtspummdqr1\", \"j4qgzffl2qzdfbmdjfm6g6jk8qwqwpas2yxbi00qkwlac27b6a56208nt0gc6a\", \"6mh2\" ]\n    },\n    \"content\" : \"Maxime qui et delectus velit eum. Maiores velit sit qui saepe iure qui repellat. Dolorem perspiciatis fugit aliquid. Voluptatibus unde earum illo cupiditate reiciendis. Numquam est dolor magnam soluta\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"fqhofbdokw7fe4c5b7evhmr3bnzj82t9y6iseb7q0qpxzkq5d5xbqf7xijeugf7xgft25f9f2l5nkx49ic858rv7k5kf2k8ac29zbras20fcpa\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/432951\"\n  },\n  \"importJob\" : \"kxb2ae27vmp0qbawz8e6cmosbeqjyrjqm95g3vhgrr82astftlmcihinzfcn5od6t702phjmcrmwzqoo5mm6gz016830vdtufkkns4i1uwzt3jp8gcoahs2a98qykuhvu8uerx3uq32awq6u4zru0toj79e320rguzidnj7s3vf4zb1rfvlw\",\n  \"generateTime\" : \"2022-08-02T15:44:21.691081Z\",\n  \"destroyTime\" : \"2022-09-17T15:34:21.691109Z\",\n  \"destroyEventTime\" : \"2022-08-12T15:29:21.691138Z\",\n  \"importFailureReason\" : \"go2wp9j4yxfgsk1pp3nfja3ec\",\n  \"reimportEligible\" : false,\n  \"createTime\" : \"2022-07-04T16:03:21.691182Z\",\n  \"name\" : \"Jessie Metz\",\n  \"state\" : \"DISABLED\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\",\n  \"importTime\" : \"2022-05-10T18:38:21.691269Z\",\n  \"algorithm\" : \"HMAC_SHA384\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d6d38c4-a381-48ab-b0e7-a68b63774428",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.691463Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "fc6ca606-cc23-4539-8b74-372387154f9b",
    "name" : "Decrypts data that was protected by Encrypt. The CryptoKey.purpose must be ENCRY...",
    "request" : {
      "urlPath" : "/v1/Corazon+Runolfsdottir:decrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"plaintextCrc32c\" : \"lw5s6gnyg60ke8ttd52knm2l2mr04p5hfhtxh0jn6e9llsnemnt0rrwzy\",\n  \"plaintext\" : \"yh2s6sfm670bq06o8otxa5r5l5dtdvvzylbf4hu4vmn4t0daidv2b2zbnxhlus19zvdu9s8ra08f57jxat9owjr4f5jcwudfrae5w1knqw6zstin0vw5a454blm2xkg\",\n  \"usedPrimary\" : true,\n  \"protectionLevel\" : \"HSM\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc6ca606-cc23-4539-8b74-372387154f9b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.690798Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.Decrypt.",
            "properties" : {
              "plaintext" : {
                "description" : "The decrypted data originally supplied in EncryptRequest.plaintext.",
                "format" : "byte",
                "type" : "string"
              },
              "plaintextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned DecryptResponse.plaintext. An integrity check of DecryptResponse.plaintext can be performed by computing the CRC32C checksum of DecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: receiving this response message indicates that KeyManagementService is able to successfully decrypt the ciphertext. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in decryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "usedPrimary" : {
                "description" : "Whether the Decryption was performed using the primary key version.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "2d922c25-f8d3-423f-b4a3-ac3c9220d253",
    "name" : "Signs data using a CryptoKeyVersion with CryptoKey.purpose ASYMMETRIC_SIGN, prod...",
    "request" : {
      "urlPath" : "/v1/Aurelio+Lemke:asymmetricSign",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verifiedDigestCrc32c\" : true,\n  \"signature\" : \"us5dppsa1q1qko1woer5n1sgs4kxax74sy0jno5d9qo67j70ux4ouev1vhgb1rscv00wkcenbqlbug45nvowiij9ppgylzjej9tsp4q0n7hat5zpyhacfjkxnkno4zpjrmqaos6whc\",\n  \"signatureCrc32c\" : \"4j0ean9b8vs4saioc4f6kcx1qho3bmxbra4xqoctas9x8dx3ag12zyx4fpnfrslyxd9s489zyi8c87bbsq3jzscqhxg0gnmpgzc46qop65ijcdx932t4fnw7gkt6gkcb721\",\n  \"name\" : \"Harley Stamm\",\n  \"protectionLevel\" : \"EXTERNAL\",\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2d922c25-f8d3-423f-b4a3-ac3c9220d253",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.690629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign",
          "schema" : {
            "description" : "Response message for KeyManagementService.AsymmetricSign.",
            "properties" : {
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for signing.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "signature" : {
                "description" : "The created signature.",
                "format" : "byte",
                "type" : "string"
              },
              "signatureCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned AsymmetricSignResponse.signature. An integrity check of AsymmetricSignResponse.signature can be performed by computing the CRC32C checksum of AsymmetricSignResponse.signature and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that AsymmetricSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedDigestCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricSignRequest.digest_crc32c was received by KeyManagementService and used for the integrity verification of the digest. A false value of this field indicates either that AsymmetricSignRequest.digest_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.digest_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "d5de14aa-135a-47d5-8f94-e09162c06a86",
    "name" : "Decrypts data that was encrypted with a public key retrieved from GetPublicKey c...",
    "request" : {
      "urlPath" : "/v1/Melinda+McKenzie:asymmetricDecrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"plaintextCrc32c\" : \"k0vrgfc4z109eblhm0pamolo8ywj0twhge7dh9zvjl86ocgojj5x1svltqtskuypwgtyakuc4vwv857if9n55uzn26pictnpzzv67tsblaok43iivrlywpss4aej2q67fnnuwi1vez3depalm3k0c9f0y6xp0ez4p0acdbe903eudfe7xtko3r6dmpd\",\n  \"verifiedCiphertextCrc32c\" : true,\n  \"plaintext\" : \"a8i9r5yorg17mbo0mmfnl86wd4c4j19pubxd6dsj978eycu4xaer6bani0if4qyyx4di7wbntlmyc6p21uwe8wdll3pllmb6jdbni7qcc9iwal4yz4nehexeqg8rw073xxeofupik4l0i0dgyndeievedr89vherngkfe8gqc8n85sk4u8mkf04t3g0ev1c03jula2\",\n  \"protectionLevel\" : \"SOFTWARE\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5de14aa-135a-47d5-8f94-e09162c06a86",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.690407Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.AsymmetricDecrypt.",
            "properties" : {
              "plaintext" : {
                "description" : "The decrypted data originally encrypted with the matching public key.",
                "format" : "byte",
                "type" : "string"
              },
              "plaintextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned AsymmetricDecryptResponse.plaintext. An integrity check of AsymmetricDecryptResponse.plaintext can be performed by computing the CRC32C checksum of AsymmetricDecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in decryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedCiphertextCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricDecryptRequest.ciphertext_crc32c was received by KeyManagementService and used for the integrity verification of the ciphertext. A false value of this field indicates either that AsymmetricDecryptRequest.ciphertext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricDecryptRequest.ciphertext_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "ee538c8e-fcd4-4d73-868e-b81cbfeecf4b",
    "name" : "Returns the public key for the given CryptoKeyVersion. The CryptoKey.purpose mus...",
    "request" : {
      "urlPath" : "/v1/Dr.+Dwain+Baumbach/publicKey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Mr. Mervin Hauck\",\n  \"pem\" : \"j79o04x975be0s89erf3wdgd7kvg3o84v3sp7nu\",\n  \"protectionLevel\" : \"EXTERNAL\",\n  \"algorithm\" : \"RSA_DECRYPT_OAEP_4096_SHA512\",\n  \"pemCrc32c\" : \"ubl3pgad7d57z2gydmf4idh1h7f1hm750ctpf6bn5h35qjode26ec4ff6bekqp2xl8krgb66u5ety83y\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee538c8e-fcd4-4d73-868e-b81cbfeecf4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.690227Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey",
          "schema" : {
            "description" : "The public key for a given CryptoKeyVersion. Obtained via GetPublicKey.",
            "properties" : {
              "algorithm" : {
                "description" : "The Algorithm associated with this key.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the CryptoKeyVersion public key. Provided here for verification. NOTE: This field is in Beta.",
                "type" : "string"
              },
              "pem" : {
                "description" : "The public key, encoded in PEM format. For more information, see the [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and [Textual Encoding of Subject Public Key Info] (https://tools.ietf.org/html/rfc7468#section-13).",
                "type" : "string"
              },
              "pemCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned PublicKey.pem. An integrity check of PublicKey.pem can be performed by computing the CRC32C checksum of PublicKey.pem and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type. NOTE: This field is in Beta.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion public key.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "92d8bfcd-90d4-4c9f-a23a-9c9884cf5d2e",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Salvador+Volkman+III/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"lny8olqiyhy6w7t614qmbtsykjoxy435vl97ftkisvj849qdj1nls4vt9dzu3kjexlszuh66m4tx9giyihmgeyef\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Mose Rosenbaum\",\n    \"locationId\" : \"01ei\",\n    \"name\" : \"Marin Turcotte\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Miss Elbert Willms\",\n    \"locationId\" : \"22b3\",\n    \"name\" : \"Ms. Hollie Cruickshank\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Kit Rowe\",\n    \"locationId\" : \"4966\",\n    \"name\" : \"Carroll Hirthe\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Randi Maggio\",\n    \"locationId\" : \"9h41\",\n    \"name\" : \"Lyle Goldner\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Marquita Klocko\",\n    \"locationId\" : \"80v8\",\n    \"name\" : \"Eliz Rippin\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Darron Rohan V\",\n    \"locationId\" : \"qe73\",\n    \"name\" : \"Graciela Stanton\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "92d8bfcd-90d4-4c9f-a23a-9c9884cf5d2e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.689967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "6fb9312c-ac73-4e0d-a82b-52d03b862b49",
    "name" : "Update a CryptoKeyVersion's metadata. state may be changed between ENABLED and D...",
    "request" : {
      "urlPath" : "/v1/Amal+Cummerata",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V2_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"vr002rugppmq86fgckqyoy1o98rycl9dyfzmqxs2opx5mnk8zz6jaz4fx1viup056ehn8rhg28jbcr6qf2b90\", \"j5diw50nuhhqoh4f7e1r3rupv49ckij77x8ra8hzquxqv2fv1mcliihnoj5qybzunaivc3wlsv1vu8x9tzmu72xopkunvy391jvgly97gg1i9pt1xgcspz8kdm2oavoe0znhyjg165x1g3c2vvr8d6zq9ugjffmwrlfqmgk42idas\", \"6w0l09kcduerdqoel5ujnhdj4yh56bbc3eeinxf4u0lihpj3z2dchpdm44yjjp3kbn6ti3l5tx70v6t3cbjbn91iatmnrmcxsq4znh9foigyf1apqdxivn5okz480wq5u4rdsl3b9v7opimtfc\", \"5fuax45ouiztfv9x4pvjliomk11wikkyxflbkjgjfkz1xx8wkli7obp4ov0mi8b4y7amvalsqb2ykghau7buneihbwcpkw3f3oi2wzbzqj1bmhcvyfzocc2ft5m8ow33csp05cucz9vm002kltx31d65vcqktbjh6aqcomvou7ubax6r\", \"qtwlhbvquiof643tsvjuiakjkbbllesgqnicj5zkt7i4m9q2sc5p5i3bdceeie6m0vq9xnhz0u892lxaavx2qmz7oij4zw3hvsheaojtsbtu4e8liilvmlkm1z66elmkpdj5kcgf8xnoq88uzvqqv\", \"hiluidai7rfzi8tic7ztpoa33gmcudxu0d6cfweweax8izoextx01w3ivembyq3otfs9iayu54kinegayos\" ],\n      \"caviumCerts\" : [ \"iofzap39p2uk5z5gfnjl36dmun8ifnyxf1ymahofv3c789e0gybs2io1vrq6by16169cu7m8837ogar4dsitfin998rzzup99i4clirl0pr6cpwr1tpuqea7jsiu66yizymedgt4eif3e8njd1vnb6yhmxo2rfhyawn3\", \"4yixi493hpphlgwpu\", \"fx2nrg0ips2z52yggsoaxs4jc6hxb12fras5bttkshktiade67cvpm6mk50qynl20rbu0de5a2pp8vqk8bg0gize9t1oxj1087xxq5\", \"r0hjkhjrkw55sb5xlrvh0zkkcrtsj441wv8iwodzygbw50sqdbwc1ehi4m193q7ybcsa8rm6po2p19ozfavtmfswrb3qrsy5evnyq3cwe26v6smog5zh56e7is92ntsppfat5ni1cvaq6d8gb8aa0ky\" ],\n      \"googlePartitionCerts\" : [ \"jfx490jo8dd8a0nl50m0115z3ydb7ev5o860cevmzea922yy9pctor13jresd591wbviwhweusnz7o3iyioky143p5dl\", \"0cchptdd1fob4d0icioyj305z2g0f2jptulth0l8xif6a3q6koe6mj4ixebajd\", \"bununav7qmfa1l8\", \"4js389zweb9zcg6rv2wky087n4mbyqhyflzw3kp0iqts5vdw7mwoyvcnzakzi75uhx80g9wog0bphmvapezti7esrxoarkpuwjfjo5okf9l707x\" ]\n    },\n    \"content\" : \"Dolor recusandae provident. Qui qui quibusdam doloribus sit voluptate sit. Similique velit ut quia. Architecto unde exercitationem praesentium qui doloribus rerum optio. Ut ad maxime reprehenderit aut\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"p686dcsunljcalnr1c3e4ohy6ghfm1ktgbg4plvh7qc4r1lwm4vq7tpy3q7qbfzhfyhh4nxqcebwavqvg4769tghg5lc05nxycoh9ng52yt86qbd55ij9x4vwyk7d\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/964524\"\n  },\n  \"importJob\" : \"5pg0yijszj1atf7n4c0sfu1at7l8umxoc2l43tbcl1m6cq4c2x8i6qio8d9pr4w3kd29wub3n7fkgfpftwmwrhep7h49kupegwy\",\n  \"generateTime\" : \"2022-05-18T15:23:21.688327Z\",\n  \"destroyTime\" : \"2022-09-28T18:44:21.688357Z\",\n  \"destroyEventTime\" : \"2022-09-01T18:23:21.688388Z\",\n  \"importFailureReason\" : \"00b40vvxcqd5w6awlwkf8i7an9vl7xqt2ocl4bebinxlni5xu1q62szo56ooobyhwvu\",\n  \"reimportEligible\" : false,\n  \"createTime\" : \"2023-02-14T15:24:21.688447Z\",\n  \"name\" : \"Cecilia Jacobson\",\n  \"state\" : \"PENDING_IMPORT\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n  \"importTime\" : \"2022-04-02T15:03:21.688545Z\",\n  \"algorithm\" : \"EC_SIGN_P256_SHA256\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6fb9312c-ac73-4e0d-a82b-52d03b862b49",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.688829Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "f9cfe2cd-5d01-4f33-beef-cc85adbcf624",
    "name" : "Returns metadata for a given ImportJob.",
    "request" : {
      "urlPath" : "/v1/Sarita+Reilly",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expireEventTime\" : \"2022-10-21T17:06:21.68705Z\",\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"etvogdm9e3m1c8cog9t6937o1nqqos79kq11x92ryzm6kn3s3jusbl2aw22i8opbje68hqqyeyeufk61rxsipu338v08v7e4ssmqrvqeo5j2xbike0otchee144zyaiu3w1v3hlm93rhavf1uaosjmm1jvinb00ffurmu8\", \"a3846y\", \"ew9xg1scemp5m11pgux6jw62t9ov91zdom78c94o9l6vq2cu1j4kzxrcf9l6rt3v48qaqjxu3fllru9hqykvh9dj7f6gjuy17px7\", \"74f4tzknmby973eceaxb4u7ufdvr0kfgm\", \"aluysfkwumuxnnqgx4gmipptalrcoj1qg1if80eq2e8hv9srq1kti6f1z86sboz3u0\", \"08gtbw9oda85sbycttb9z62ifxxzbr79r8qw7r1qkcdqcao6tmzdu7vkzmf0uyelwqx730d2fy2skzzad79jvwwbdepkseinccoxaa\", \"h2go45qzvc5jgrwnsywomkh1359g1rgaid6bzziouhhqh64wgojlt3ufd42gba5vunobrsd5cn9rp58illssl3d7cvin3i2fwfpsvot512a2h\", \"zwi1c77t9vr7odmm3fce72a695mhcufl5qq4znxkh6ed7obla6ab54479ylaon3imju50dg7eqlnc0n9eb12ypqpz\" ],\n      \"caviumCerts\" : [ \"6vvx070ifstlg9\", \"qjzde5vp12yoyj0jshxbv4dp929ddr03kzzf21vca633e5uijusn953vh2qyzo04y32vq7yn9qtiziaa5tlk6teogpdvwdj0wmxw8r52tj7za91395jsh26ihljp6ct\", \"3garcrf0y5q1gtsphho3p1e5geioq90blvr0a8yznaiza88qj3cdo0ydivpse1h8pujn8244wieipp7k3mohimjxzzmswsrj5itqidc51phs4g2lgdhghy0f27g4p4fscphyrovtaocr0583x1exh2u2exgjgjpci2zqc9h\", \"m13d5fc5zck8rlm8bsis3d6baihkqp2cugd2y4dnkw22u0yttgfqpizi2sh30t8ba02sumn7990ix5bhp3pbc2j8u5yago6irnucd5eu47t1z73x003rfwn3l1pmabsqkv0iuwbepuu3240rgo2zgm5qk9t7a2\", \"78e61scb4skvgal2x94uk6h2j2hplad9me30db4n8qyvsprpvkf\", \"uxdaiwftmyty2xciugbp8ibu5b7vy1qyv157wgeaxdgyo1qzari9zqulnc11dl0okopwdim5jxcb2dej330jbyo0nkfqvh6nrzh0ll7tyyo81fvua5b6xqo\", \"kmvwjhtzo7l9tgd20762l74dxfh5gw95y4gbskoin1rmu1pkcaahqd2o70vte5xudwx4bwvh1fxmebh0sss\", \"mlqy5y7imj159tmj2okxn6fydmvkfthg243flwov38bzbpvfd\" ],\n      \"googlePartitionCerts\" : [ \"gkgp4udh717mttzg2nno3vm05oorefxei6h6bb6e120mxh3e9m6gqvyhqht3lfq43fvbuzr87m5qru6h5yjbzc3shol1ghl966dw32alr9dnkud9whj206uxp51yil29b4wgp8xn382xlr5i8diggpq82ysp071sj3k335no71x7dntox5vau16pl5vnb2yvtpw2rcwi\", \"l5jn154wawoi1nh3xznpt3o0kdv74koakicmrx0vvgxqabvi1ri5rsjphm8q87scruyl35cv9xrcj0e3bohg1n5yswp4hw8ys62wkgoduypfayjry772fsx1qdjmnzajq9fos3t7swpog004qvpthaj390uf2egpunu1d21i\", \"qjtinhp2yfva9vrn5tzuxmaadfepqyj292oe67tcy5izuew7xuavsvs2snrholw5aq82xk8b24bzjq99k9n0hy2ld949i0r8xlcs1a6c\", \"khoj391oy74si5r5bht872sbh9ro10g3mx7pdyl53oro6u7nukasg5dv1bxgw2139gy8983lnpwh62e2a8hzlgwp676cc066tma8sjexdhz0ccb64lbp654sfpoc2r08rzrxgkucvege\", \"ver59p7nfap659ne29cmvqf8azgb4ome36t3o8j05nm7z2cpaj8xy9daeud64ugrpz3jj9o9xp8c2q4wqctwm4zpf9hijd7ts5cuh8gkfq24hl3bxk3k0r5e0d3jsdk9kcpws4xf0m1cy2apkvg8kajn6dcztp5\", \"iavdj5a0r5c0u9879v0hg3lmlea0zpnec4ne9apq334dfmadzozs5pv5l62lv99kzypu568n9i87v10upjm8587pi9y5s5giwzmzakq2md7m2sy3mwdmp68w0mtgi7e2agpsaki7hpx6zy87yyui\", \"q2otdtbnxaub6b9ktncvinm4e91k7lm3q8cv2llirkl8ezsopz7hdyze6pa2ndymimo9zkevuve3ffb2i2x8gs925hvjg5956q1zy8m0uhgzrcmmq7am0\", \"fgoif8ljoi9h9snz5c6z85i7iyi02scj6bpkp\" ]\n    },\n    \"content\" : \"Velit facere id animi dolorem quia. Repellat dolorem ipsam necessitatibus ipsum. Voluptas vero cupiditate eius numquam illo earum. In doloribus consectetur non distinctio non.\"\n  },\n  \"expireTime\" : \"2022-11-18T18:14:21.687336Z\",\n  \"createTime\" : \"2023-01-19T15:39:21.687369Z\",\n  \"importMethod\" : \"RSA_OAEP_3072_SHA256_AES_256\",\n  \"name\" : \"Lucienne Powlowski\",\n  \"publicKey\" : {\n    \"pem\" : \"6pi038mj5y0yslcwp7i1azi4jnca937xy8bnk061q588h5rjx6mj04ahg4nas6mdt309vdvh8p8\"\n  },\n  \"state\" : \"PENDING_GENERATION\",\n  \"generateTime\" : \"2022-11-20T18:01:21.6875Z\",\n  \"protectionLevel\" : \"HSM\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9cfe2cd-5d01-4f33-beef-cc85adbcf624",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.687936Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.get",
          "schema" : {
            "description" : "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
            "properties" : {
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this ImportJob was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireEventTime" : {
                "description" : "Output only. The time this ImportJob expired. Only present if state is EXPIRED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generateTime" : {
                "description" : "Output only. The time this ImportJob's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importMethod" : {
                "description" : "Required. Immutable. The wrapping method to be used for incoming key material.",
                "enum" : [ "IMPORT_METHOD_UNSPECIFIED", "RSA_OAEP_3072_SHA1_AES_256", "RSA_OAEP_4096_SHA1_AES_256", "RSA_OAEP_3072_SHA256_AES_256", "RSA_OAEP_4096_SHA256_AES_256", "RSA_OAEP_3072_SHA256", "RSA_OAEP_4096_SHA256" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "publicKey" : {
                "$ref" : "#/components/schemas/WrappingPublicKey"
              },
              "state" : {
                "description" : "Output only. The current state of the ImportJob, indicating if it can be used.",
                "enum" : [ "IMPORT_JOB_STATE_UNSPECIFIED", "PENDING_GENERATION", "ACTIVE", "EXPIRED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  }, {
    "id" : "97b2daa2-bb02-455f-8d10-f7a76cdb4f0e",
    "name" : "Generate random bytes using the Cloud KMS randomness source in the provided loca...",
    "request" : {
      "urlPath" : "/v1/4znvpogcjgjyeopiqjs9lahspzsv4n1ouruj9ergc2k50kx7dxoc4ktbiier89v9zlgqkl2ao78s9au60otjngfw1qeh20k3h59js0ks67lmt98vbb4br7alcv94dlvghklfggugraevsz6dh6zwr1fkw:generateRandomBytes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataCrc32c\" : \"v9939sl5uzoov0d5t1w9lh2kq5tpcod6vtfbt5ugxmnw1p3bnxqlkpmlx4f44lk6g5eiotqj6ddgr76qzmu1ofo395g9656w55x4ra2ygpk3y6882laqe3\",\n  \"data\" : \"v87tmrnt1167rdoyygm4yjn0xafz4hb4z2feyygpoa9seuxqtwo04qcfxtiz3buzbps67ap3rs6x3t0l2z5w2s26wkilrxk0p5ej68a8md18qaeg7wl43\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97b2daa2-bb02-455f-8d10-f7a76cdb4f0e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T18:55:21.686946Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.generateRandomBytes",
          "schema" : {
            "description" : "Response message for KeyManagementService.GenerateRandomBytes.",
            "properties" : {
              "data" : {
                "description" : "The generated data.",
                "format" : "byte",
                "type" : "string"
              },
              "dataCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned GenerateRandomBytesResponse.data. An integrity check of GenerateRandomBytesResponse.data can be performed by computing the CRC32C checksum of GenerateRandomBytesResponse.data and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    }
  } ]
}