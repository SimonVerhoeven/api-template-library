{
  "mappings" : [ {
    "id" : "8fc05e82-75c1-464a-b520-3573cf112c63",
    "name" : "Returns permissions that a caller has on the specified resource. If the resource...",
    "request" : {
      "urlPath" : "/v1/48wpngoxeq6thlwc0goquvw91rd2ygyvypdjkso6kbmntv1v7vrjwtxyctgvs74efkwt9xbt1ctb6f1qrzbnolb9h5o71hs3fdxohq1gj8boo1tekv7idh29w3mq8gq2r590o9mq8:testIamPermissions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"permissions\" : [ \"yafl\" ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8fc05e82-75c1-464a-b520-3573cf112c63",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.556358Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.testIamPermissions",
          "schema" : {
            "description" : "Response message for `TestIamPermissions` method.",
            "properties" : {
              "permissions" : {
                "description" : "A subset of `TestPermissionsRequest.permissions` that the caller is allowed.",
                "items" : {
                  "type" : "string"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "778f450c-8709-4438-bdaf-343ceafe5be2",
    "name" : "Sets the access control policy on the specified resource. Replaces any existing ...",
    "request" : {
      "urlPath" : "/v1/cah3fhem0oyy:setIamPolicy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"i0u8ck74esr16co0dagkgpkso424lt3s6wpj3em6n3u75jf9fesq3obpq4cvjpow0a32n2i5coc4f2kpam04yz9sno\",\n      \"description\" : \"Velit at sapiente. Aspernatur consequuntur quia sint. Est quia asperiores impedit nesciunt. Autem magnam ut quibusdam cum quisquam quos accusantium.\",\n      \"location\" : \"2f1m1kctgqs0k5ir8tskbf7by2je22dfs4syg09rrm2et13jjjd\",\n      \"title\" : \"Tempora eligendi omnis et voluptatem praesentium est.\"\n    },\n    \"role\" : \"2npf55odxkqmjm7v8j8onpbwl6vxsvpxepdzafi4x6hantt7xn5i6o7cqlc6j89v44w9led78egm61461nj5yg0700nxflvg0imlmiebedjhkf3fpvdj98rqu0vt0dchx2azxy4xmgfz93r698p75ekr26merd02goakv\",\n    \"members\" : [ \"v1yb1yw4mtoq6w0p5r4nlti3otfdkvas9rvtzda04o1sttgl1vg5fwkcaeikz8557yng695fc8mh4ru0vxlzqdau0bmgfd47u1m1dlx8lazdnz7yv27bixejxjg9lmrip5f3j6ezw93ndd6fy59gn\", \"agi9m2w2u0f3udwonqwtbbydiep06t9fylrfzmyqn2hro5hiqk7vtxxge3vmbf3526wf7bzy31032ezoo3hj0xhh5tx5n0qwudvv6vvx40pjw0ai01ezhenbsrva5o8y8p3597j7a80ur3c1jf5wuqxa3u0llvprx8sdnci9y1xt9\", \"z7x8v67nsa7v3nvmaph4l92wazn6vsu3c6iymvliw7cq4i4dupglqy6t7r805oxakd1jailbci38cv6bz0umun8f7ymycwuiecox8xefrz00mjcpla4j6uwagpnyu8zro5lq362p3h70rhnrbalglepljgpr2xlahy7h\", \"25lfdyzlvrqgcymn5uxw4q8no6w3q313bfpnyv6oyfp218sl8w1c069vygzvbn1gnmh66zt1pkx472z66g94qvjao10cr9vxeafxzjr4d34e2xhh0g6ya665bbrcmpbnhqoevi9sigs9ucw25nsww677ycrbco960kzrs1ma7rnok4nza8qks49uuh\", \"vhklvgqe754rx8v3yarqvxnafnsc077emkw6j0wnqjfbr23in616h9hlsvh79qf0hupq11yo2nbtfcg4abwxzn1\", \"199ymw1v0lzinl53squ307zc3trf4r\", \"fb6itw0bigdd8wmvwz9xq22zz9hnbjrbx9mx4k91v75xpg7\", \"vexufhtl1jcnm1jcfvbvthiax6rvaw1ceorbxp342oinpedm5lavjh0sjook0qdiw7toxvv1rngxmepbwuuixi29r54g51ybofh22jprbcu9dc0mfr3cu64xlgd0vh0hny74447jfpsib61sjvxg66x9c38spyunp9\" ]\n  } ],\n  \"etag\" : \"voluptate\",\n  \"version\" : 1678589109,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"4z3us3sygx18nvy3opnat71bi1m1tu6immfdjqcfhbq15rbqpx9mrxoxtng705pyk88vs07jzvm9irbw4pvnlvlpr3fvkatl5foo7\", \"nao603qoruzqkagajec1bwdv035xlyik5fwtvijt9b8qyf8rzkz93nkvs8yaet4qovjly2oqolh8my01xkfteugyb75zi\", \"yfghe24hl2po0gaz\", \"ds8ms91lhin3idhkr4mx7vgqujvcc27f3tsh1fhuu34up1zxxglhy833unxikpl0703kgrkjyf\", \"t9w9bkxaotu1qk8qjtt6h6szcs0eymhn8gxi381fmzgvrea16r2wusjrrs024een967smescby6gdkuhuozcc7y277o6xr48l1vtg69pwua9idifyygf7udkq9pzcefgjgh4d9oklydg4qaa3uo2bmpgxhvixd740il5drpmdc7ndews1ogy02hqvx\", \"qmp1z1arpjocgyiw879vx9elgowwhvvxgjpdlneog0r7pz77y67b30k4a40dwch1j5ijgn45688yga8ez0zdiqrrl9ajj6l7cgukqdskeq5kz\", \"uqwsheotcxcimv4yk\", \"pb2odymz29ea6ao6yz7h3dfo2uszzgt13c4u8mg\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"g67t6ap2q31cfwscybxnuwsf0me8i5g9zqrnj6jnydjtysdx7bb7tgnghtwryduqnaksvo0lsyjas9fwehr8y4zcd068c6l3qspv5jwsuokh2a58z3qsbw8arn7anfigyb6xyo2nihiest\", \"76f5tcoqoygizevjek3e8a2gfbajiwwa5t5okejemtwrdjkgj3q9bguzzc2uaqba39el06ovcfvrsrr4teus6fl4cpfvmhfuyneu2se2xsrsm25lsczprtrd7yqpe6z6deo5oj22bz7jy8xt3x8hbzx2fkja3z8jq7i0kpvovl6s05jo7ej4f2yt2vywv9pg2prjsp9\", \"v9yqtgr200c3hwp3p1svjfsmulyr9xxops1lfgamvtnz0ed2r9eogip15gfqefhpkizk9dl8636h9t9n2nar\", \"wkxuucwhiryir71wdnr331w051khxjbqdmvbsp86xf7bqr0gv11fbo48p0exrzvwjlq8z6eqvyz7wzes32zvf0luwzl9pm9sv9s7r6\", \"yqxzush4sm44ccmkzktfjkyob2n4neyoa\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"li6bg2x2eeiwjivphtis43ayn13c03yko27s62sx25jney7upykso5pjuzvm4xlbmmvxta8o6yktkb2o6ivewtccckuiou5x8qm4irq6v89so2cnt03c3ojc0rrhao66oidn59bkv2jkzb1j13isyaphiufi84j1kqf5lf1is\", \"o1tiafr72tdoe2odzq9yk7ijkrwk85cymf05ja9nohocil6xfm169o862dqp6qgulptgh2k0k62kim9uzxcd8cog96xmq7nlf5sz6m7wfd6i4k58n2o1yyj054d9yom7ew1qcwb5s2e0jhvwalrf9sh7twhvpuchi8g46vv\", \"kquvgd30j25o592dt2s4d\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"u1m2ifmucztd8ma1ajcwo0xgx2c6o3zmqz51ug5f646nke4ixcclnnds1ob5i0d8fo49fra37c14v0zf6xn15uz2vgv\", \"xh0t7e53wqm61wc55joizuy2k8tk8sl5hl4ug3d8xl3gfw3wdam6rluos7n2w16rawiv1sjyt8or9ctjjay1tkzg77snmxdd09gw9039uv2mc4hltzvpwxnu7uk6ar03mq1torcg9iojzxog2cc00sizuqt9drnwix1ajp\", \"psw7nmia6ew6996fozvtsspww95fgehxfbkl4l3cyxopdgdgxygwlxuz51f94enehynp6h7mwrlmzuwi56y6de0dlvj3kz4mjw5e54ck3ypaav4h23dkza09rshuohga1dv5wkcmmmycnz5aqh2p8jdb5nq934\", \"mc8i5rw4rcstumbshl251pvu6263299j0iglnue\", \"hjs4y43ehfn941rayfnkhhme1ef9euxbibyy1ti0pltsh92fi6llhz4ztme6910xqfcruk14qnx0e\", \"7ek94rkgyrwsoo66frqfhv9j7kp14vprgp9\", \"zo38ej57cu938qdcnlzf8skpb9rkg2rb1ql183omyu6i9wjfkl1mwvrxkg4k3dp6fpcjiq4gg38fz5nmb7mjmfu6cfqfta8agsotc7x939hd6vmh30af2nzonlzpm1c0tf53nwgx2809rk34myt5cohvp20r7x3py27q2m1\", \"gli0r1cnobzlo\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"4kldfaopj1yzodxiask2aaqdat62iivkvr6pieadcow2d8hpjryavfjmkgwyg78tb3niy2rkgcjmsodb4wmlfzh6zik1dff2qab0eb6fn93dd1kgp25ndpnybbc4ymrbid4juvoodrk2u3rbefx01qy6wywwhtytc0lfz5tnmhq1hz2tvpsknkll6o2fxblzoqf4oexf\", \"ee9o7lluhmf8uooeuxgj3t5j1sxcb0x9zdt8pmye0h2e2niumyci7bsrzg2733h5uh236zd9y\", \"ekx4x7gun1h141femb5n3vgncb7tmc6mdmsezok3kccmdl1157me04vl349bh0t3ehnb5b3c79znfjus5mgy82mxrq64nxa9c1qm3org9sboy0b73h065f9lc8a1ofn64flslzmm5ej4a3eidzaicg1rtmwlseqdlefc2nwkg60s6et128d\", \"nou5jl\", \"3jt\", \"g8yps87dq5z3rithv9h385m6ypt7hecx0b57cdthlutqvvgqx6bm7aetfm5b4yb2mhqgdg8sk4bgdp5wd6iu7iq9iqq6nbjlcrwlna6esex3rw92tgeslhqnzd6yr2pbkds4wa2xfmwru94tn80zc6ez6rg1cevookx7dezrbvryd425micvqe\", \"p0zy27h5b80u7hmm7vu1tq8x7r3dp7jv7w9n5t\", \"lih13r0d\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"4codzyl6bsmc2c2dncgfxozzw3f0qomibcztmygkjokil1zx94n5t4lskh90343r9720wwv9nw7x1sann0063lip152nycdcp2pe6cbo293speb0yi7z99ezg3uwwlqikvlgq13g2low97l4qx3yxs8sxrlv83md6c0dqkk75uqw\", \"katzep3soafr9nx4pnsux9uh6o5xq8uk0kzsxvzvby95r7emnw1epjezcygcdrznvqwk3y0l66900i5f77o0nspw06xj2jor036chbhgsf1bi7dvr7end9aea4hfqrww0\", \"huh8zr8xuxyy5cipoyvkcmds5wyiz0lgi65b5mxay1dmgodynqdq16wt33b0qr2mgm71u4zv36pfkoma43fb4\", \"tt86gmsvir9my7fzbbfmi6ze0e506yut7p3xmks76l23rc3ot6v7be61uwt39ar0f11i0ryqjvl6gv18iwow11fow42ou\", \"czm2bi6niior9kaxlxlnqhsrs0p7zfmnmpk1gs2zq0h1cufqy1z5vogtrdtt\", \"0s06fhnv0g4jo4t4y1vf3qt8agz53jae56ljgudgj92ejidq5hakdt3a2lcjopfna2n5hhkkywvryaw48y5wlsetd4qpjcpeh5dgedzf00nia0jm93x\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"chppu3lw2bbrwir29yw3vuiycut6cxh78u0kofz1sditvk7954yg7yagd4wgwg1glomu3vqyh5frs0h6sfcky8dd3q8sbzydou6o6thz8ev727lggu2tiae0x4lk56t1pd3pdcx0jpmjenizjyk8tf99slnimxocv9ab4rpicdwkqqcbx6e1yq\", \"61q136y7i34t3vj8d3z94hgt4rx\", \"idepcpdypsyyoja28zr6sw4i40jzmdg9ffs8bm5osxqmj3vypr1bob85jpb7c3mshljo2i3xorjn8buqc16ivvwmwi66tfcymszwho11\" ]\n    } ],\n    \"service\" : \"dm1q75lbdfdyq4rcitkuz81nsk0p1axjs6om2xwqx3j9a44fk03dj5f882u9iuajmdjpojn79jdz5gn2e4r18x851ien56c9yo3\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"m6ozcgfsr29sa2r9biq1erca97onj1h\", \"nj5uu0fv4fijag4fc9ejwlypym5x53djoe8jq3xr781s5xtjo9bricnvfhh9w48if4pzvje136ixqcv\" ]\n    } ],\n    \"service\" : \"duc8njuvqrs001bhvulutn3yn6bu47nyosbme959c7bk1bf1qfz0eemb3pcrfvazbl2k82enbe3yjq6bvp6klbivjln7whtv\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"hy3413vt2wmchml7h03tdfupele90irdo5e4e97ylv2xcht189y2sce\", \"o9bh6nkfuz42u5wfc71lxq4dckyh52s1c50ke1o1zepelcg90js0ftxpcmwhklxqq16qaptsud\", \"j59v7r001x3if20v28fn9av23\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"gi7ve6nneqb4xo6567q49cgefm4k9pgyj3s26z0xt31mltxgw2ah2i3tr14dcb3qws8arvlm8w7nb5yqymv6cx001d0zz0jco0a15evdxx43rvwctbwcim1dvgirdnaz6bqn3qzsqb4nxwpuv5d6ql4a7t2j70homd5qul3xtssp0v0bag3sxlu\", \"mwzryk21pu72qk2cdtsn8b4j6qz48snvspkas6yzbjwhrv6crd7dp0d3kj1o0ko03cwzg8uanmg\", \"1qgm080c0ssagenvnxk83ps8hzqf0ib9xr485xwzzaihhmrqy4gjtwthphmsikrls2gdieybpv6lgh32106zafys6by07ztt1g5qc9w2js3tkxor9l3dir1lhbu2c820o0yqfrltg8qu7c5dlhi5p050xwlfcm0eeep2jsxdg068jzuwqu\", \"ek6w44343f7thvcqv22577mnqfi9irufpmcjhzcdxfe82d880q9jw4kueqj3o6ru5s9lgnjf1zdd26s88bt7lxzi6wan6z3l6ihfdii1v78yt7cwvml16afubs2ju89qkz717zg\", \"y68d6q7a9n5rkv7hzhbe1fxuxne3tg47w27zfji67qv8fc6paksed9lmr9bq9emztiueuzs2ryi62nlqjfogm6ekd009vwr3bf29h09v0gem4prpug19zckty3dnavt2dengm6tpycbjiimq0whztk3l69g0cathfxnbx6401f\", \"ngwwfd7lb82r5mts0uh1ed6uz6q8syz05uyt0plvgy0yqr5dwv1owbjac7siwl98j3inkp7y97pva52xhameyyrpb6o3xjqd1zjedxxubpgl9vobsx5ug8c74g37n7m1m\", \"o3jooh97hqc4b3ganlst76zlz2w0olulr1kwnsaagdo54oso81rxutth38mioacwbtslkwxjtyw0wztevov5uftsq56wdvq1v8ucc5sycoki8fdy9dcgnbl019fbp4pu0nekzyhjfjkm3qb1hcub93\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"5l5ruwl27rzm2izgdt1g9iq2gbziez6jpl8c4mq1ulyx98mdttr0rur5enhr9jvv5i29aaa1h01h0fldewu2fsav8zlmjilsocnxtjtbpqrd5e4f5qm1xgmajvfngebln3bgjmrea\", \"kinqiqy4bw1cxmit08lwk551gyh89979xbc7keeadz4r2sunduuxfp6ka85eoxaa8napwcjnxddtnw5020qhq171ux4rj2pl019szfddocboemq7qsccogc0prf6g3pwxb0ovzsqm3cukfi6idq77jztm2i\", \"i14tnybiksb6fv1uz3nhkj3rdflhzxyuyk1u65cgg3gd4qqs1diwsa\", \"4paio8hrbmd3nk93c0xtfvvk76u4nmtajna7b8l5uhjmtl46fshrslgwi6h7sttc6pu8ryffyesus6lkjhvkgsw1z0cmfxhwljomzjujenqoxfyjxdhf5wjenir4izmagai8bfbjfeq3bgopdbp11laceaqt8n0qake2w9tl1\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"xllkmruo9kzaiug71qyektqkito6fyibheu50o06n9927ga2esl55pj563enuvemnxj4e4l7klxs6ac7flz2xqho575a9b7hgey4h2q4sh75jrmxsjrdkz10szv3k44r7exv5z6xgoaw5ltw29yxf\", \"upnfium1\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"osi\", \"p6wkhwv1z2xmn85nyii8uvhxyw47vpkcuju0z5ogr43r5p00fzz2z3voyxpeuk1solnupw4lchoxpb4k6cwunsjv1q4zvhdplpzcugc7m4hnmh866zfjcuwdebc38x7ullp6oajiso55f8logtuysuyzu4ylgojhhiie2wxkyuyfm31szeyld7l5s9uoew9n\", \"vl0cm2vj80sn811egfo1c6shqrbljsielpxiws106lwcz05jy7xx8xibzxulyl8g0eby2x83n5\", \"au2l68q31fwl442iwgm2ryb7s19ckawjoecv9ed2spmss4snlm3srycgkdecr5rr\", \"d14udzqtkh8l3hbhedl5tymwkkrjgz81u08wqq1jokpqgzxfpekleis6thxsj379gfv9gw1zbfdv36o5sf3r2bgyz38\", \"zx4iikzencj6kw29iuyn22ypgjszu6446gkixot9q58u7lb0e2jr7gltm2kqputt5mqa28x8weymsho581s0c4nk2fgsltjaa1k54576qh46n5viepwak7qsww945sp9nwarj6es5wi7\", \"rxn1vczbd3j8sa1g6ebrchy8n6x34juxctvabnuzt461fb0nsgtveav91b7yasz7gjx\" ]\n    } ],\n    \"service\" : \"jhgw2hckic31vfo41jd0gragu65dt33wz3zw4kp6jip2um5rg0xswnvu\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"m45mkxk79wniukilecmfpqdlndxsm4ho8zvbn7qyu0sthyobq6f806kmxsyrvtm1n1zqiz335erf9cmolkn4079crv4rr4mv30g9h6glj0wemptf7ii4qljk4s6fhk9toemufjhym8s4v9h2cggvavgdjep\", \"abmoxk71tgsa9uuywihibod8vx6bz627rr85omaasl0pi6cevxrsgo6f0oa52sq8ovm60imjgcx3prkwkjjz8961hjmoik6wn41kuhmmvo44b71wlwm7\", \"0tfz4gdl5br\", \"pegtb4rf6gh7btjx2sgw4h7mlvmdfgnlumx3sgoathm47sq37vzfc2n19pyabaa3ha80buwznqz2a9y1wxoffasdqypebtmy1a2hwe3q3nv1k2hukn4qy7ypqhgtk0ly2hfun8xotendxawz0kiq5chhbbp79e2ol8am3p2slgbud1cbya84chtecsgc\", \"nxkbd5v2j020iynzd\", \"t9tmmvam7cd0y0sxgdrphxhv7evci7cl15lei20l8hddygth1\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ng2wbh3g1llsy4mdx0hr8jpyts2ct9memodcbzv3rinazxdhafynlj4rke15iu56gfka5fiavjprqsxz2s0fkk1hinjjb5rpmlmd2ptlg8c77bylch3mxcvqzm3ig8bgk7be9gs9muiepsn8b8fedgclyoy10cfdqw45zqrodtpz0s61lxpxkoyexgehoyhi59f9nat0\", \"tobnn4eryn3159gg9y4816jwgpxlcwnz0mga5npfr2lz8so13x7osfszvp30u92gfb283morduck4wsfgh9t0dqb991lb1o777p5j9vhlmpqr8ld0v6neiqxwqvnmzsdjwdhz4hnbjxjm6hv2mlt1pjgyflsjl3dkbas2nawu0af69rm3zcpsh9s7mqemugb6qfhg\", \"27lgito4q45a1botz0qaszag02qnjtqlbf8hy39721kez5lvdn4ieejaffa3r5\", \"udzo8qak29t293ezub1xjjthoco9pq1i6b5bq6f114l251d\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"j7llb6bi24z8smq5qlkny8z9bs1q8q3rq2s5evh1yeqykheth9tuvbk265np61a0uc9p\", \"7lg73dno9uhbqu2kbwkmfhx4n3c6jnnrhy9xkof972ualf4p09k3amw7omgm400xr9sjmt28x5qd4phdwszyw66at74pk1qop81zpeislc0w2e5sy7i9li5kd1e547ijzdbucg\", \"ct7gugthzlxth7val81viufytpm1345sw46x8va1h2d7h6x2qqlghudtj1lvf8rcwufahgvgk6gd51kiq4xugqutcmdz3h9qzif2czl6o9ekkq5r7qp5ky2r8nu9xc32zv\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"wgw62bxzz9mf81rbtkuyt8g3ao0ipzqiore48q6lunqntjeva80i0sg10n2zqew3ek90xnmcf4osy1v6mvputw2npf1etr1hhbmtarbimowsseg3pvah00m9bcw03lofhcgnf935rsyufymwfv7gsu8i5njn4h26in0fk27anyzvvuuvci6d6nrgzurefzbio8l\", \"0aqmutufhr6db4eq0l4hjq3ypbded2q9018g7mxz4okzyyk6e163ree2t2d2uejlp1s9lldbiecirt8zntccyd\", \"xkwreq33ytbxpvh9a79comytweu25iaq8aypo4rzrxj5gs7ptwcxh4bv5bjwbxtn4jfh9r34noa1vihznpopugq0c9xfbgvon9\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"xa00jm0r3or7blrn6topjjq6hlom0u868fby770j2bp29gzngg0s3d6q0u1uko6vc1kjgols30rt9qs50i7t1y490f89g7ru7sn1gqul3eo0pq6nlazz56td5k4bzlgt2bcp59869qjpv8aj5pa8fyc8ugsrx0rnoyfiy1awyb9iisr4dahyw0i58fty\", \"y6f44w0mkfbn6wigs5nj69iu1r88ce959cyvdbuz0pfuw8g3\", \"yiac8v4gz29g68uercqcaz7ux6wb1lldyop9ebg05y1hw4bkvnxbteorzf8laavf6qdz77zrspvkr8spw5r4a2k1czhq5ley6gu\", \"81bi9ykvzfb47twtkzd77o7t3ezfx5vfopr2iik\", \"6rpmlamnwpecysv7rlnrhgl4ub1ajja1kat5vt4zzuuha0zsxz9bks5zhpntdtw8mjme1anjzi0dwtx6c9y3lh00zvlqbmirjugiu23bc03smz5l0utqk\", \"idrw38n1jw3x04eu25i7p6h3\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"30slunqmno5jx793urxemb3p\", \"s4u78zgxm83gd5o2nbhx966e6tw1kd113jsw6gc4fhtm3synga211tik4ycmynbibvy4giyarco\" ]\n    } ],\n    \"service\" : \"gzyf3yp5djulci25gnaf9ycvtik0vb8gdpayufrf6wx9ipi58ol3sh78ngns9yem2t59hg5oxz9ud5k1rceqqu9ygipf3xkpw3gga5fodyiwz33clcka7pxddhh5hze2u3nfcbarbv78r208dwplbybclutr0020p0ijn910njist39frsz6ai8wl73jetel844yj4s\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "778f450c-8709-4438-bdaf-343ceafe5be2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.556287Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.setIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "b63fa0ed-012c-45d2-914b-72fffa8b83e2",
    "name" : "Gets the access control policy for a resource. Returns an empty policy if the re...",
    "request" : {
      "urlPath" : "/v1/9behgc1v054k48d7gdu18etcgirf8bcn2e6p18fb4gnakorqv:getIamPolicy",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"bindings\" : [ {\n    \"condition\" : {\n      \"expression\" : \"rzuo0goxxxykkzsrpkxj1imh0w5tv\",\n      \"description\" : \"Eaque voluptates aspernatur voluptatibus quisquam dignissimos. Inventore totam magni voluptates accusantium quia dicta eum. Molestias illo quia et quis autem. Velit possimus quaerat nisi modi. Volupta\",\n      \"location\" : \"oiu8eb5e1n2kts9c1h0xul68px\",\n      \"title\" : \"Ex soluta rerum sapiente ullam consectetur quidem.\"\n    },\n    \"role\" : \"wasxqo7ij630lfhwt8umpggkyjfe\",\n    \"members\" : [ \"zmrijpgqmug9oxtfee1epw0dj3bjvjo0jkie37jzgf5nf8ayl9q3k9bw4511r5gh3hfp2zvg0u90i7tay8k88y9wsbsyxdz5aznycp7hhks90lm21emvc7tuee8xs6ertekzby4tq1ymdpcb600rw04a321hl0hbx44zhd2d0ow\", \"phgvkcea8fninsxd2flzclmpslq44ji1yd7vfkmjeawfnsurq3m24baj1sz4v6erqtmidjvn2oena3n8wr80c3j2gn7h74so6ax2to49a2dr0z7kbnkb078d2h639rnpmf4c25alvo90isabg57x91d0y88qz9g015vbq808s5qxrghubmnbpcz72s\", \"7rhi2oi06448afdcmc2y2z2l525f73domx5rfe2vzy6io2tifuc4fsqrnzi1i8ygo5m460kpbrr5mq00bcdwds74ucb9r449wqsgci3camj423a5rmaabpzquil0lj7be\", \"l5b95ymdf8srs91qsbjcmye2l7s4ttbb16zw1pjnz7t255zjis440kplpbshiq66m6iw1ktpmiuii3o2i76jngbqmlbpo8ipkkkjlmxrq1o778feqaao8l1rztgot1qcv9ajfbricf5thmlkpeu3e33l73\", \"otrwds0hd8ujg48mwbbsx8mahehmdviia6tl8rne5cq9tbku11xtjm6nmr4g7u624uxz1p6wdflk269c5kvwoy1kuekizbpvt5ut\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"dmwsm2yvkzzrooz5qux5cv13ytbl2sa464ujlsymifzh99i7t8xjyqixw2768a2z074fm8ximy9h9likmd7y\",\n      \"description\" : \"Cupiditate necessitatibus sunt sequi. Dicta architecto quisquam molestias iste voluptatem mollitia est. Officiis dolore consectetur distinctio.\",\n      \"location\" : \"ysiszh8s0n3d6bd6rk4wgmmx57lnnhgtd5o9km3u66j6aljdvbv13459mo1kk6p6rqieqywg8uosdch9sr4zdphmy8jb1hcqhf3im4r6qn5xrpd5bymafgstg7co49v8d43a8t7c95urzwwbm3dbpx7n4pfszon5lmvtb86anc8ye0u57yudf9exai0em6gl\",\n      \"title\" : \"Atque ex voluptas et est nulla.\"\n    },\n    \"role\" : \"20ipd49y398dzorqhcuhnnkwgqoxw8xy1hwz9ya9g58e5jzcox43o7z0w2mjwudyq8iuytfzs6qed\",\n    \"members\" : [ \"v8cl2rra3oso0z4k0pr5ko8r3stmg6u4cx3\", \"ujl0uo7sddjl050vdvzyg7zw6oph0wb4vdh12tipet1ct\", \"ii4oyzg495x2j99kx8ao6anpj89oijkinjab00ue9t\", \"tmnyy2setqmnel9whby33ps9rxg7qqkoztr5rj3l6ox17suvmlcg6wrbzde326dwkfo5h1\", \"wtdbfiwjhvz1gwgyqa9bue8laf6si\", \"gxifn2fe4ixth7lhw8omok8i02vpawh3wvm9ehxuc24m9l96xv2v3udmkbmphi7ffsvyijimr2dzbvtweqra99gjcy2cf67roy8vqkj2yt41j6u2kdme983jmy5127dy0viowjn2snov573qi10g\", \"85v57tjw4s6z6467sgnpqrmco46fbh4796teo42bfsni0q2hmrg0f61muyhp82u8ws6px8btw9yrwsxxvgnzqbyw4v4zvznpp9sobbz3k\", \"vhtoksmvhaxndl8hpsu1u4e8x88ufd2y0m7yk3v6tkjltxbtbtyxsvwedfzbsatq9wi4mjvwnsv9cgyjsdgrwubelqtjqn162chm7hio57g6f0xqv4lb7cv2nkf2b50u8s5trgtk9fz8pk8rwnk90\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"ekr1a60mruxzry5x2upnj49tumbd5vprgfkutuly634s6alsj7z7gpgjs0fkb7015jujqps5k3al8no3cbjhi9v4y6juni4owtyna9c2odx8y9pgt3jll2q2itfu4ow50kvzo93loujr8ru5aymqcl1j\",\n      \"description\" : \"Nostrum iste praesentium sed. Doloribus nihil neque sed. Minus maiores est fugiat voluptas.\",\n      \"location\" : \"9c7ha9b3gqcmty29sg3xnqpnrhylm89dmzezhvoua7ejme42c4aeu63c0fdowthsx1spabrw7h8th0to31emxbp6uf22ueuwh7rvglhnecxc8mjkx4vf4j45b5tbq9h6mka5tpmmjo60tals6dsizgxo1jxb6p\",\n      \"title\" : \"Vero minus et aspernatur temporibus esse asperiores.\"\n    },\n    \"role\" : \"lffld9w1fwde9875f4x7ptbuzhg7euuhk2o27o8nub3jx4isk6me1lptnuce63dzwwe4l\",\n    \"members\" : [ \"ao9d3tbqvj5dvzsf2ykftwni88jffbr3b079pxb6153ftegg0dlyn1gw7t4kputpkoe8v48kfhf7ntqchzw3ar6gxc14megtc1nk9afa2x2sz3j13jffoh7sqf2ruo3eclg18inu27ijldapmpg900z265\", \"nfccaa3pujbzi75mcwgken278nyo504sp9293p06b461pmx\", \"v77ajvs84o7l3va7iphflqlqwj9grze7mg81s3vf2ekwuk0ejfzk8zv3saon80gv8540yypstz17ie7j0c6\", \"779acmfxawhhur8cblychg7t0pki8lxklql7x9wm74smx4lqas6yxm2z20pb67xmnw8sla6l4wg43zwwq9p2m3zs6uhiqhbkb5zo1dgyw8tuvush\", \"hr85sfz5tzm00dmpz2xbrxjy4qrcotjpwcjv6uk5f9m75j0bp50bqhksm6zkqam42sxn80qfl8eli00pc\", \"vlwubv27rolpar88pokwahtpdm54w67dbo2pxwpym8zl7vvwsy6mr0y8rr76veq7a55jhitfornu\", \"fni9ry920fw2jhvy8qz2qr7sbsqwr0kmnsvu8sfdv7j43f3a3kjwljopspegjuuc7wf6jvhbnmtjedgrkm3n9bw642v2hd0hn9ll9tr9vzf9wy7948rnt\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"hurkj80yv1ocx7f9figh0oewir8q561hmozb3te48imhntmrt83n23l4wpw7fn7v77yws3npjjtazq8mnhchmyo2h821l4ffu3egor2tlh4mfxq4kiq0wd0pgf80x6rhr1xjs2fw9x8ak7i65ejsbznhqqfhgt5gpkbo0xyebstei8ywh\",\n      \"description\" : \"Maxime autem sit repudiandae vero. Voluptas earum deserunt. Voluptates cupiditate voluptatum eum. Quia eos laboriosam temporibus. Soluta fugiat porro rerum.\",\n      \"location\" : \"opw9miyg3gsnyamxofuc8mq3oz37i77pmnp2zyp76pfodpatiduxgpfvnmmu1c5k0qu74h9hxk6iml38p94fvhyz0imj4f50151jpovww11ss4om1tm64bxe3xcbus7cymn2uet01krans9m375ua36dl9\",\n      \"title\" : \"Architecto inventore qui architecto sit.\"\n    },\n    \"role\" : \"sffzo1yjw8dql7cjqf5fxa6mzbs8wvigx2c3spl25pju2abosx3c9\",\n    \"members\" : [ \"u0dpp94wz0wffnddkhmzy5wnoft2vqdypmns4x5tc91okksh2d0hxvjbb0cxd06sq0fq9e2xnrqv0g35bi01dt6\" ]\n  }, {\n    \"condition\" : {\n      \"expression\" : \"xbswegnqa3nildh1n2gyvh8e6xzh1aab8njwpuq5h72jmuaz7fd1gcnfdmeumum327t72gfl9751dud2nveidu2ajr\",\n      \"description\" : \"Est nobis est optio dolorem. Dicta repellat libero totam. Odit libero dolor corrupti. Delectus magnam dicta dolor sit ducimus placeat nihil.\",\n      \"location\" : \"huhkfqdopy0jkiyu3npfo2l5lnie0zteodtw0bxx90odo4weawfdeh0khgvqga1d5urpr0sey\",\n      \"title\" : \"Voluptas perferendis debitis nulla accusamus.\"\n    },\n    \"role\" : \"2e6dkwwbfxnjxxegmhunjba502azirw939pjzyx4kum4itqpg16uguqx6njz1ezzzcb7vjt7s4lc0hb0o02ybm3cbwi638m\",\n    \"members\" : [ \"1tg3id623q40rckxkere89romh7cukvkls6k4qhba4t71rk\" ]\n  } ],\n  \"etag\" : \"eum\",\n  \"version\" : 873437327,\n  \"auditConfigs\" : [ {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"6glqwznxzb4kfxuceihn6bi4zg82gnrxybc5ccvbb6piyzgvul923pb2r9t79p2ufz2hx4etljl2apmn5zxcc1lxg7gsner2d8e2fhonhrodixr4n8uphevj8topwpllcychylkhigiyjh3yooumsmeikrlfmu\", \"12uop3yw\", \"q80ptk8sqs1jikvae5kyhulhk4i1gfejmgy669htd7xeos5eu86x7ytfklzpoogxgw12i81zbvbsabzvjpk2mep2ihkupyuewzb7la6ipgd5p1rylsquy6dxh8e4xeqwcvuzjmmhjatuv3gaapriwreeytp8jnwwlqa9w8dpscouakbh54\", \"s1w6bj0t4yzl0knovaond6wfmc6j3krqjeult8zir538s3aqvmt4w93a9m70muxn1re5t92kasihnk6j0w54f5zkt7ttdm9gm7k97xdbh47v09oiene\", \"d1gijd4yrkaavs46osmo4womf5csnkm0pei2gi0c1jt3xetwfc1pekp1nbkj7tv0xdnzzuqdctee5726xriv7uegme2j9xdp4zsu8mn8jvb4d5jnvc90lwnw7wjw8ytjgn537guhzli58\" ]\n    } ],\n    \"service\" : \"f2dsbpoi6j73178n78lkgb2o1d0f0rxkuu7b4fuvyu3ft\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"hz9qlhea7jglwdxynseoykboqg06lzp917kcjda85fcj1yaj81bt8nref59ws372fx\", \"6f5nytayt0uxjc5t7vbq46zp96ghrh86p83cgysm\", \"pl9wsqrzl6zkkg87mv8t1xjnsgp3swfth2s1ofa5heohc73uh7f7ep3ch84ebnrhsbmwtb\", \"nutgh3fg6ndlqyerqafilfwoh0b2dd68pqhewx8sr7b6ejxbsg6l46zjallrdefpnreck62r9m10gykzoa4n631bvndve3a4ybh2twox0glwkq9bio3b375gf21i2zp9xcpkzez\", \"w03acg\", \"o9kspprz8drqfzxvrvm0k1v7zidg8yjeeos8tvnen2phkgg7dyyg9aeftgdi9o2iw7ql3fqxjnfmbbo19a48oavertfov6r9yyksg19004hi8atzq8jktq9zg0raftkgp01tft4c5acgqviaab0z9yyqwhx24ynlzdystuz7cs\", \"o0cveym755nsg76zd67e183hrhd2pqqni4uawc10285zucoai6s3cgfls7ooueg565nrxwvohs425gh9ayyuh5j2ramov7iynowjvqyzbnzssfhgd5z8c5nktyvaelh92012094pz\", \"6wytkfwy0yg60ukmbuk71sydgh7bdxiwmixubjdprgf0bxqxbxb32hjmdeeakk8cgp6\" ]\n    } ],\n    \"service\" : \"ttiueruawflzh4egq1oa192xmyiuylzuqv78su0h6mz1gb79tlcg1swjxane8t7dui8n1syvrbxx3qpb0w2pzjf69hniwwvi91scwmo84m42hqox7tm1x0xv3sqnzp6yxh492r\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"yluaq5z6x9buvvnm83d8vafwhour22jfvjdoh81axjkqx1jvktxmm9izjfrb31mmu67i9tqfh09r5quqk62ap48kb39rvx\", \"inqyu46d08yds0wbpwlppf85fdobb7bcmdv8ep0cn15q27pdwoij32tfpswowcypmdp7qc2hozdj3wflqga85pcna74cmvb122beocyanoma0sszd7bbgnfie6oenla5qgxut5yzy3lehrx2rh8sclovpa71sl2xyjct0og26\", \"2haz73kjjlyru36pisaagl8t11bsp4hyr2hrrguxe0rctnndtph731ksqakce18sg4l2uc1zytmh6ju4m5295tznfipqs80pzndfa79i9a25af2hzji73vp08i5uz1j37uljfxifaxfh0n10zksahi9thqo3ah5gvt666t7hc29ldm1p9jcmie\", \"isivvlyjrb\", \"voyz2mllre6szc6m2ck8idbhbs4zm8npoycj6bd049nejbbkalelo746\", \"93hc890ghgcz371cmaaiq49y2vawfbjhz48ukty3alo7sxyof9mv40gdhmd5wtk54o2lx1svfjzhq0kem8ejy9hzqc1ha2k2hs5wg5mclpt50b7yu1u6z4x0y7e51to62r2n9o8mvbimxfg4jn9vlxnog13d43ur91\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"x3z80eco0bh1efwi38ym95xa486o6anbunr6wom6ungojev41h492qcebf0n8vjhhpgv7ynuchd8vu4tz56u3yrz0qapgbzpq47kwghc0utcwbwh143w9bx8l50oi20im0mlbpsxblv1f9b4qnndz6f14lentkqg7a0thb\", \"s01ab4p8txx6rpj6by4mcc209ynd9l983y27rqs0p8aeq4lqv45dpksj7z9blcz2tz5q6a\", \"v0epvzcigqyzbh49qqds62k08xdqe8noz5grpcw2non0eaiqbr4ic26onwej8kr9lzelogqiimp9s6o43hq5hbq66deme6klhgkudvgawjxfjnx3cqza9x79snbwwer4cnnz65xn5vip5fvrqgm0c457ermw5b\", \"z6xvvddh6m7jlw9oe58uxpr8\", \"89jbk83yf87c1pef7wobuup9q7wo6ixnq7tz3krvmdb2b76qhg9731g6rk88ztdjhpe14v2c1bne0djpbmja21hollypqz0lo0qrkx2d8wgnazl0m3nh96tolijhry27g02evbyc\", \"o2cgn45ztmu92hrf55j3a33m7gs108mhejraxa0bixqfc0f9no853lrpbzmq9b3ccof9ppedvt4wqrmdl4dr0s4ydpxg5ilaz5xvt4i3nql0ox8e3zduv3x68qpvm4pf69hjk9gymgpcqqet639onv6kpmyoeapxai\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"arp93zfsg2mqf06sr948l436nq31w3l25yw5qud31llpfwxboa3c284x3eexgf3xe255yclkdbyg7q76uym9jiw98umo9ja9\", \"i1yok5w3k7k48eu8ziy0q3gnjqu1hcax6wjr9hdz3e955jjaktnfhqr2lrm2kiy0jkocjwql5abqssjmhblzopgn7va4wi2b4sycj5t44kev6ggwd73ky6k8pzag14xpzdoit2wsuebna1rto12dsz7c\", \"mgzaocm2wrwvrx4a1s6sihn7du16bvsdh043mbqf9o6e48nvf43bo7ho4jekuujank5g26v\", \"qe7jy0mvb46lffv9n0frt9w0bjqje7j96aw266wcskdvvvuwtd948g9w9oovh1srnqgxmwilwdjupw3wrhnfyaxrkxvxejx2n3xk73\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"ntdza8obiqxgau4f18k29cqi8wzotghvx4dke2oy26fa14psguxouzifxs6tqiyovt80xjwbyspf1n0npbjntkjk5t0gaaem8m13983m20f1imitfm1jaulpftnxqgwtk4mx9pqawu0f5d5u3gk49ehygxg1wld9g0xi4kv4x1290lo5x10663tirpmn1pfx0c6nc\", \"jalsok2trinkipm7wlqmku4mzdnr6e77lwnnjost2fasu3znqyitq6mxppsrjxzj0pru5ywd74ydyle97g0lukd3vsfug7vjsl3ybge1zldmnjosin243zf0twsjqjobxzt58x53c2h506l1dm2sm3w72fvgn\", \"w5oyr5yfubh9ymtwx4lhq6v9ncqvccvflhu44c5xlin5vg3l00kyalp0wrydck5ne\", \"5g5qk53qhmt8rns08trt7fsww8j2gsk79kij13nxun0\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"zvb3b34\", \"98prijr14xnxknmec0rp7tfnvtmsttvs2nulks28vrb1q32idgcn0x55gbt2euqy6jugt0pe\", \"bei0mgedvyf36crvhaadjwm7y34hb20d0cxbylyjho9w60vxgnh3ykyidttthxpw6155e6mkirxwa0r3yumm3nzaze13x4hudapiw36gzuj1befe2yby9nyvpdtyrxbjgququ8tvvyndo80l5cyjoy\", \"gn03jt951ivc3jwul7ym25fo0abasozwzm7f8urulvfhadwox075c092yt7mgt56p3sz0wnjms3txo8nma\", \"vc43s0cqkoa2as6r8a5wkkeqwkc9q0hpip91df8q04zm7e2ko3kxdsohdm00r1cfk\", \"wrjv53nkkr84fjn0oeoklwcwgjy7jarfx963j5bvlrwyxkw7edkp6c1zijh5ss3tga83k0v0lgdpusjc8lm7x0tjquqtc6a7ivnhtt3yqi3r1ycgr2nbt3j6gqq7lu9mv6is1b5vuznbr7t3ypl5uls9gptsx5feilo90kadakj6t75hzwlf0c\", \"opbmnceli7zptea\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"afz6oet2qkedaxmilozcmvd91v54t7z220isl3ejmftsvh4vnunr6w4x1pdfqhskhsfuy91vupfohnqj7kmtswd2zdeai8vgn6q8iz76u756w34ssnyi3y2k6a8g06wqrefoljsg7chefhldu22t4k03oo8ulhzfztzspzgxb8lzvd6iwpzb342n8kd89b8\", \"ojh7my8v86lntm9cykw9wv0j5zc9a144dwgtf2hjzsgl3qazjipxcy2s2qf9icsxfk57v0zq7p9exg66qva5wd2ut1s2zojw8lnn25uwnsdcearmr5fe1gcdsh5xddz62gojqgqudaxem76bmalhzc925q8f07yyvp0dlhaffj0cq8qsjzr95whdps8uxa190vhbfwb\", \"dymgjtoy00wuyflrzti7shznpwya984j2c0ylj6iovaokaad676vlvmz208mggc54jeraa03msd85nm0b48gapniivdy5gmrhvpyd7pttnidizriacs4syo\", \"m5u3yhs8fq76xonamorn0248rautndfx64zrzj842w7ni73ohapmw2yh9lu4mrtu73n2yfspnwvqrom0gfk4gty7ejnsmsabsv2x5zm419v01fzg0evyivety8ddlmsu5\", \"6d0v6jvdzqk48lmzdzutl9az8d4cviw1vgc4y7qcast84g4y5m7ir8ozmirayb7nm8n67j5nvx6pqog031q9w64tjgov1joqsubgm7gky5kje6xx3nz3d6ve4mwv8rlbkz65t0vbyzvuthfjey16o8kdkiyiyumyflho\", \"y2l1yxnw63hv21tybt3fm0cmvw2auiofbi89gakns132aoap99w5vsy11f7jbqwzbf8idscf66quurfqpsfphxtr6nc7m3a6otwysv7sqle3p3csniprbpx4ae9ry8fd9o4rvp5i\", \"ysdgwpksp4pkdy32j0y0wabc15beny49ilnhnghi02y2y17xxz0q592ec0bdx15ezmw5angr8wmhgs\", \"ygjy8zx1qmuytl60\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"mwhy3u0of6w4vttjtob1oves8dcdw13s1iqr0edgwa9chqp33ogxsigkjdlxr27lu4swct6hhhlcmpu66dpk4ndi15\", \"f92o8l3qfe9gh27qpu2kh13i8veihxvzfbksqi5kghgqdjpi7z63ac977c7o1nq\", \"em5ms8yfez8z0b9nl6yfdnzrwc0uv0znnv31bokp9em0emcax1a7hei42j0vb5dgre2z6fbb8b2ok7yef04fnn14f3gotmkdji5zl7vyvbfbzhisa7dbvi3beg76aqmtmk50fu8hv1xhz4w4m1\", \"30qs8c3ucovui44j4hkb6nmj3gs5zyylkc9ormpxjrl5qk4n78hp3ec2dc0geqyezv8ccwcox9wes3evmn4mhp1abycw5f3avw5mzggvx7luhfygx762ukxp3pfsl\", \"tj37xik085gsng8c34hkg4er5znrjlm9jvnin9vx539cxxu7o0r41t55wl5x60utl9wcxuf5rn9l2wd\", \"qect1kb942yf5hqqwwdfzbygv95g5j3uj6wyp5nkjj5z8r4atlmf5a12y1v5pc8gyise72fsi63c2vmsc0xh3fox3bfz6xzt0mfiuo60iheqatmynq1\", \"nn3kpi1l2drtnkkopm0diet6atlbkqperrwn1z78fhpsjwemk85lze7yjk8yykcv\", \"fc38askd389inzq9kkq0tj7kbibth6wo7dts1tlg6mpimfm0tetfnv09h2zws8vuehmcqvsvhaypvjh4juej5oaeipp6d53moinelishpyu90mc1rhgpmtzeog5tyud4ujz4qhjb0b7uje1n7\" ]\n    } ],\n    \"service\" : \"6evys9p8k6mkodajvff5cfvi821tfst3pnadahnrpp9hnvl0e1hu9vyg3b65wigzejp5bmstxhlcfuvw2pezkpyts7akocbg9bwri67705nq4zyzhq96e1aieliowgxluj3xcb5b9b9h3djcptypukvvsrwk3cg3pib1rhute9dyjcpsgm\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"x80xgudqd2ffhxkvbq813xg7nqt35yh6j9h026ihurmg5qj5negcp2ckp17i56zl6uc0pwhfgtfumnm2skqmd3f3vj4kwgu20bfwzuynzdql0zm8opgyrierk0uanradl14xuig7214agf9pt0o4wkgjfh4n\" ]\n    }, {\n      \"logType\" : \"DATA_READ\",\n      \"exemptedMembers\" : [ \"yif83lzygiqenwzwwsrj2srfaipm50dfgnz7a88o7jbcdsjc5xb8fc52my7a7144xosmzictt7dr5nf8elteoewvz7ul5weo8qm4grrrrzlfabrdg2bl3fs2mawqvkhb9\", \"q0c7td9\", \"04kkg1b7sz4t64prcwsd73l17x747gopkx8sx24l1kz1otmc1hqep8y1uwlhivdrbbur0umkav9eqs2ge2k4j1vd9r3or6kfz3856jiut0kkjoccrmhk2lsqmrxlqnbbtkws3f4eoce6sopnwpt6unwqn08ye\" ]\n    }, {\n      \"logType\" : \"ADMIN_READ\",\n      \"exemptedMembers\" : [ \"612ro03bk5cynzcr97epfozpyf7vr4qc26qyb13rob29d4r3dpd9mxsfhj407a4yk6297z2sz9q5pbhxpp7t0huk41nlczs\", \"c4v5vpfjq46ze3gh4ccsf7g61mvb90n2pky7wt04w3gb6tocfazl04jyizbb833h2pzlav2wi88si2ewfon39wwzq6xi97kiusmh07g4x9cxlnu8y\", \"r1x5f9xgud0f7i52dhg57rp5jlml6d0dl0jwmkqlwx3ugnds0l4qm5a42dzzt8wcixy7qh5fhd8tlxn9380ohwojx5t45alh8rmeq3uc\" ]\n    }, {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"ra1pqou4twfap5bad5rwpjdlh32244ec4s5r586ntqlhaazb49tsvpyjcmteshjmy8mm2xkqs53z6l10urecgnp7csgehj0cl74vxw24hzc36iuvkt6u6ckcgj7rsp1oihfknpqappv1c2pd5wk88lajppujr4jmo6u72zkzwqrh182xhg5cp1go6c9432k48me\", \"qldzw2c4fwi01iqxayu4vn3vnlgwaixf9qj5vq3p0j9lr51qhjp9ldgqb0mg2skjpk06p3\", \"4yzm29r0arrvr5lyfeeifkzygzhs2rz4fz8mh3omq\", \"gyldapnb74csg\", \"6we8rkxnj728eqf0b7l2lkwcxsdshgnek4z7apzo7fnp98spr2wuxjej9fmbr0y6qj2i46qe42mvj2dkwvj9hbeic1phyiwhj2n2vyd2mjkyjtgubtqzch9nx5bna755g45yw6keb3133t99n81zsg9zsv38i2lh0to7vqvje4cym\", \"ewaj2ood55ygu5d8q7628yog8p8gndosjrem95g9r22ah70sviqr09usjfkwn7\", \"77e4\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"jo7gg7cdp5mpfmcl1xpbn77hhxywrn5tm5ot0xfrx4ngb7r7nejne3ww4w3e8q9y1bftfskqv4kuq1cr99peamh\", \"qp54im82rfo5kan5tsf520bi7xao3809xpnvcthh2plewd0l0g4tavn93xihtr1x1tk5fqlm3gp75g1haphrjroh3kfcsb0qjpbcld8mzrs2ie79cgnvrze2vtmzs01he41egy6o14vdt74g1kax2ndzch6scqhpyz54lq0thcit47eitypoy\", \"15gcxsn3qupg9zy1hqgods3j9gwd54ihqqy4ee9cr9ckz3nsz3zx67w72vneye1fzc48dzavkpd9xsy2nhr1kv7ltc3k\", \"6l5gccggrr7tl6qvp47bod9vpby5foomvqoukf3csgmvc4i1vpmd85142l085w8trs8h5mu3xigptjbq6g0b35v6s99xj0ediel3zr4cyjfxh9ciun91h8bg1qkz2tgvcuvmz9e0bdhtchay3g\" ]\n    } ],\n    \"service\" : \"dg64ult9cc7glbc5apdquche8r3g0m5v4cjo072csahrmk1kr59p0nscxfjt6qckrz2cu7c189gf9swjpm7bnfyaum3qn0svtzi54bchp16p5gmatqtw9vsh153ijbd7s8e6z9h0\"\n  }, {\n    \"auditLogConfigs\" : [ {\n      \"logType\" : \"DATA_WRITE\",\n      \"exemptedMembers\" : [ \"lefgafs43imlsni8b6xh3ra0tg0agjcxqtqdkyp0nemd251uc56naavrevfanrwoxg26exofqgwiwo2npvfoeugagi2twh002283x0c3kl\", \"tg275ado2i6cvnn0rixdfx8mi\", \"s7v0sfaiw263ik0ar6m8g2arez98utc6ug3o1v9v38ke23efq8u7vqxtkywz0xuep506y35nu7d6jdi3i9xkc6vjhz0y52pkz3anslvpu0okazto74r7bzt7xkz8t51km8piaqeb3axwtoiczx9to4b4cgr\", \"f0z44lvk8oyzrz226h99ow3hd3jzi7qakbt9ww44g20djq6mnt3nswiayhh0glhuv084pdvjrt7lrr9kg23ns3dpo5vgi3clrpc4hnf6ooxjm6eip8vrkdjhyf1h6d7nxp48r34hkmos0kphtnhugz5jkz2e3z7shw5a6b27319y0hz4heqopo5zkpg\", \"rl2utq1o8tqcvc3ldmc\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"isz\", \"1pz0aa\", \"v8chpnso0trckerq2z0jvprlf79t4in7hx2uq56ezn5g5iq3tcrmog87sihgm2wpw1l8i67hkhhys4pc6u4xw3ntxvif6okwhmygp5paip7z6je3i85et7wm2o7uwkmx6lglpq6x\", \"2xlbhfros5k\", \"w0zrcxrhcyn7cz696u220hpr74b5bd6br4hy54zy3x4u5zlp7tdpcmohlccejs0m76pmlghqli6fmjzskzyeg1q37o\", \"1ifn323blcebupnvsqxbhc52r9keoaqs865bt8cd5ube\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"9dbue59h8v42y17vpg3wnkhuucyqx21dkjjv2txlzel0kueopi4ipvxxp77wj6qh1lpv3gtf2djlvzbhkl9wy4kktbulphg45iampnrswlnpks2i0pjri3xoymiea2xci6e2raykt4jtvrjio9128\", \"rhbeirq3t5h9sqig3gyhj98fq8rwx80hiapw2gyatbeipxi8i8hov04rz0l0i1kd6mervrihr171skjiryl2u4p2yqyojibx6ej1oo6g9\", \"mtlei1if8sex7icf7qloqbjjhreemg8miq1xvj5sjz\", \"g9fdc2q1b1pow12h6l0ik07hnjhrh5efz29sennjj95418kg5k59sxsu1skhpio4wfuc6rdx7b62usvg4pb31eblwovo7x9rnxed97mlr2nmyvzfs2ncfpolokfrrm1kck2qfigetzksej4r408fuojy6vb9pd9o\", \"egdde4vuxk84izu457bqlytg9965g6m0jeqorjmg48uo0bfy5wljf8sj6p44pm6jf3apn53c38l3dfj0ve41drkyq3h47j70nqm8x6y3jwiguyuhjkyy8zohg95lrapazomw5zcc8f79d2s90zxrap1h0ikmkfdxr9imru83u2hgcqig3am\", \"ls7czfp0xvyl8i0gifcu7bj2spbm3hz6gtmp1ojdk93xncdt\", \"j5aqwizcytzgyao3fkb5h9ee6qlfbesvs4ietld7tcrit82gpghvkyrblb8rjgaux\", \"zj6gdbs2n5qb0svxuv8wnho057gy9lcotvhzi5z0ti4f0388\" ]\n    }, {\n      \"logType\" : \"LOG_TYPE_UNSPECIFIED\",\n      \"exemptedMembers\" : [ \"iij3rpvrjnahh4wb33qh08l72l5i5kdn2o\", \"2icaf33f3xbphxwjvqykt8jm8twdty2028fvhmiwxslfajegek14tzgsd0tfw8h8r2u75igck85d4q42arm0nc8s3xxvxdfd\" ]\n    } ],\n    \"service\" : \"30mmwgyb0htqezr62wijnrn9ctv6emnlm72whmcpbn99urcqwuqrk7jeo36h33yexoeinsj2h09ywgqpa03lk59rv7g4ne9llzlteb5hnw2fobe8xttpjpt1icpefpypa8c3i2ki468m6oay87yri0czdph20o37v7fuf\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b63fa0ed-012c-45d2-914b-72fffa8b83e2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.555175Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.getIamPolicy",
          "schema" : {
            "description" : "An Identity and Access Management (IAM) policy, which specifies access controls for Google Cloud resources. A `Policy` is a collection of `bindings`. A `binding` binds one or more `members`, or principals, to a single `role`. Principals can be user accounts, service accounts, Google groups, and domains (such as G Suite). A `role` is a named list of permissions; each `role` can be an IAM predefined role or a user-created custom role. For some types of Google Cloud resources, a `binding` can also specify a `condition`, which is a logical expression that allows access to a resource only if the expression evaluates to `true`. A condition can add constraints based on attributes of the request, the resource, or both. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies). **JSON example:** { \"bindings\": [ { \"role\": \"roles/resourcemanager.organizationAdmin\", \"members\": [ \"user:mike@example.com\", \"group:admins@example.com\", \"domain:google.com\", \"serviceAccount:my-project-id@appspot.gserviceaccount.com\" ] }, { \"role\": \"roles/resourcemanager.organizationViewer\", \"members\": [ \"user:eve@example.com\" ], \"condition\": { \"title\": \"expirable access\", \"description\": \"Does not grant access after Sep 2020\", \"expression\": \"request.time < timestamp('2020-10-01T00:00:00.000Z')\", } } ], \"etag\": \"BwWWja0YfJA=\", \"version\": 3 } **YAML example:** bindings: - members: - user:mike@example.com - group:admins@example.com - domain:google.com - serviceAccount:my-project-id@appspot.gserviceaccount.com role: roles/resourcemanager.organizationAdmin - members: - user:eve@example.com role: roles/resourcemanager.organizationViewer condition: title: expirable access description: Does not grant access after Sep 2020 expression: request.time < timestamp('2020-10-01T00:00:00.000Z') etag: BwWWja0YfJA= version: 3 For a description of IAM and its features, see the [IAM documentation](https://cloud.google.com/iam/docs/).",
            "properties" : {
              "auditConfigs" : {
                "description" : "Specifies cloud audit logging configuration for this policy.",
                "items" : {
                  "$ref" : "#/components/schemas/AuditConfig"
                },
                "type" : "array"
              },
              "bindings" : {
                "description" : "Associates a list of `members`, or principals, with a `role`. Optionally, may specify a `condition` that determines how and when the `bindings` are applied. Each of the `bindings` must contain at least one principal. The `bindings` in a `Policy` can refer to up to 1,500 principals; up to 250 of these principals can be Google groups. Each occurrence of a principal counts towards these limits. For example, if the `bindings` grant 50 different roles to `user:alice@example.com`, and not to any other principal, then you can add another 1,450 principals to the `bindings` in the `Policy`.",
                "items" : {
                  "$ref" : "#/components/schemas/Binding"
                },
                "type" : "array"
              },
              "etag" : {
                "description" : "`etag` is used for optimistic concurrency control as a way to help prevent simultaneous updates of a policy from overwriting each other. It is strongly suggested that systems make use of the `etag` in the read-modify-write cycle to perform policy updates in order to avoid race conditions: An `etag` is returned in the response to `getIamPolicy`, and systems are expected to put that etag in the request to `setIamPolicy` to ensure that their change will be applied to the same version of the policy. **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost.",
                "format" : "byte",
                "type" : "string"
              },
              "version" : {
                "description" : "Specifies the format of the policy. Valid values are `0`, `1`, and `3`. Requests that specify an invalid value are rejected. Any operation that affects conditional role bindings must specify version `3`. This requirement applies to the following operations: * Getting a policy that includes a conditional role binding * Adding a conditional role binding to a policy * Changing a conditional role binding in a policy * Removing any role binding, with or without a condition, from a policy that includes conditions **Important:** If you use IAM Conditions, you must include the `etag` field whenever you call `setIamPolicy`. If you omit this field, then IAM allows you to overwrite a version `3` policy with a version `1` policy, and all of the conditions in the version `3` policy are lost. If a policy does not include any conditions, operations on that policy may specify any valid version or leave the field unset. To learn which resources support conditions in their IAM policies, see the [IAM documentation](https://cloud.google.com/iam/help/conditions/resource-policies).",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "a39e86c0-8666-41af-b680-6d58e54f708c",
    "name" : "Create a new KeyRing in a given Project and Location.",
    "request" : {
      "urlPath" : "/v1/cuc/keyRings",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"createTime\" : \"2023-01-02T10:00:57.553431Z\",\n  \"name\" : \"Carson Murray\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a39e86c0-8666-41af-b680-6d58e54f708c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.553524Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.create",
          "schema" : {
            "description" : "A KeyRing is a toplevel logical grouping of CryptoKeys.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this KeyRing was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for the KeyRing in the format `projects/*/locations/*/keyRings/*`.",
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "14af118a-06e5-4eb3-8698-48fe6adabfa0",
    "name" : "Lists KeyRings.",
    "request" : {
      "urlPath" : "/v1/6dd9j8gzjscaqjp0dauwj6ivs44ijl6xzg7w2it633iiuqa7y3rdzqcmzl5s7frcywszqlrqiop7opd0c0kc7m3c3wjhwnmncir4jzaf4g8ax7jr34vm6rw2tyjbd4srgi2lp67p3au/keyRings",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 1174183198,\n  \"keyRings\" : [ {\n    \"createTime\" : \"2022-09-19T08:40:57.552843Z\",\n    \"name\" : \"Miss Val Hilpert\"\n  }, {\n    \"createTime\" : \"2022-04-21T08:21:57.552912Z\",\n    \"name\" : \"Dwain Reichert IV\"\n  }, {\n    \"createTime\" : \"2022-08-10T10:56:57.552997Z\",\n    \"name\" : \"Elana Ferry\"\n  }, {\n    \"createTime\" : \"2022-04-30T08:54:57.553067Z\",\n    \"name\" : \"Mrs. Wilford Maggio\"\n  }, {\n    \"createTime\" : \"2022-12-17T10:03:57.553138Z\",\n    \"name\" : \"Dr. Bobette Lind\"\n  }, {\n    \"createTime\" : \"2022-12-05T09:29:57.553204Z\",\n    \"name\" : \"Len Bins DVM\"\n  }, {\n    \"createTime\" : \"2022-08-08T11:44:57.553275Z\",\n    \"name\" : \"Crissy Hagenes\"\n  } ],\n  \"nextPageToken\" : \"gytmkybb7vfp7b9ln51mxs3d4w3m1bwacs86gtdq3gnbrk22npv162cy24xkor3ip0jyiuu9trc1bk06p9s37y6hw\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "14af118a-06e5-4eb3-8698-48fe6adabfa0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.5534Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListKeyRings.",
            "properties" : {
              "keyRings" : {
                "description" : "The list of KeyRings.",
                "items" : {
                  "$ref" : "#/components/schemas/KeyRing"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListKeyRingsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of KeyRings that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "1dc45d36-5fc2-4ef1-906a-027306a026c7",
    "name" : "Create a new ImportJob within a KeyRing. ImportJob.import_method is required.",
    "request" : {
      "urlPath" : "/v1/438zxe46bim8dkfusjsi11wul9ngc3opg057zsj5sq1thniulvvj16v1fv1la8cmqljel6w7ogvuwf489b9ip57ze2wss/importJobs",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expireEventTime\" : \"2022-09-20T09:47:57.552381Z\",\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"rswt0cutxl92y6jf70og99c28axu4sd3gho74j2xarv88cwf11o8s5lcbm8uaers4fkvvdsxwivmaussgti563\", \"sj0ri7bcl7wqxjc6f4pymwq6sszsmyh9mf5v1vswqwkiuycpish52wh4chvjiyhe9kcrkw7d973a7f99cfdvdsrc4idq269rjhxv7rpen7cflnovhwg22y3z1i7b4ikz6ngff68nk4typswqfnfzxoy022vfm676j15yaz\", \"5aanq8889nmpln4104pczrkxdqdw66jyn9xy90z6y6ujdfk6etbpftuyyq9qmv\", \"fn5ut8jdrt3hz3if6r0slbt4silxtvk7g3pujdeyxy6882qtvdp4dpy5150t43u2ucxvo0ztqpmpp4afbmzokys4edletw9z22on15\", \"j9gmtq6o03b5dm441vewzyiq0ls6wifnnivzpvn204bzo6zaykeuex5kq721p8en5ccpyp9uivlf64q9vstr9fqfjsthvvbgq\", \"xe5kyqgtjeyx7ehhjeeklj6ga788oxt2e7w7g4lnm69y5cgryyotgqucx70bo1i6er53ohaypyf9tv97lnexuulrulh9inbqu6kftefdlfc94ee135jr0c6dllmk89em9dp897w6lkzifvxw1t0vu5xmr84efd53cu7tyvmk6phe8whu1q5\", \"zrlffe6qbo6fx7mcrwxfi6lns4mlk8vw77d1lr03fgt60aanuc269vtdzznlsfdmuz0ra6vbu6ds627uxqxotar4b9ftelmb7g7iex1mwu6zwidy1kxhduaxhvtx5wua3ma6cgrh2ja9iuc2dfy9348jc421y21rtxoytxi83a0wjew2qqewtysi4\", \"xot9apvghc2q2v44xibrzyd5chvdmvq0lpgaykv6pdu4ndl5ggtc0qtrtmxwpzo0pxcftr8asfslsip7vc491c792u710aerqmdehgqeoi7ifjjc\" ],\n      \"caviumCerts\" : [ \"c0f4qew9lux621o4kbmh4uvn6wd28v\", \"l5mk6y58v3gau9acx1n06gedw9h2mxaa88xs2tarwohjb2hqw7nqjj4cc9u5tcgmv5olswysil7a7yzcghx7wqe36zuyyi7zupu10isv1xmlai9qibl98v1r6jd7868ugk52fng5wtlu0qmnq7vu99ovx4q9z3adid7wbqv8swutt6be\", \"fdr1upj5lhf2xa7vyyws40ak313m1cwulv40kntof1csnbxbl\", \"v6pdtb8is2kz3ifel8tkow4bdqp99kl7kcggqxfojfu198h518gqf63cqxgh8xrjgovmrgv0ld2jb8cfiuplavgoe6lvyfdn3crr6172vnimp05vrh4qj0gcnlh3pdedsba4hbnaw9fl7yfemt981pq5if8tcoyzgpipwosva3lwubfl9i541\", \"qyr8iqqp905rkqsr1i9qcsujrkvz345bruue02wo80xa8h9z5lk9asoig1c64h7m9o6u7jsssvs1eimiis\", \"b63d2sgl7xnx6t6nxl7aa9gfdf6i9pnrwbf2moix0zol19pleqkfc2u7arxtzx7v1uil8ztmyjs4z3rvpb5r2\" ],\n      \"googlePartitionCerts\" : [ \"llv6842ufkf91jvj93axnb3jqur537pteb7rphlf6wygqsda87ozyflksk7nswstnf9or566szk5whlkbj8oojedkvd8p93d\" ]\n    },\n    \"content\" : \"Dolor atque modi. Quia facilis sunt. Quasi quam animi delectus. Et ipsam ut aliquid ullam deleniti.\"\n  },\n  \"expireTime\" : \"2022-11-11T10:13:57.552549Z\",\n  \"createTime\" : \"2022-05-23T10:17:57.552575Z\",\n  \"importMethod\" : \"IMPORT_METHOD_UNSPECIFIED\",\n  \"name\" : \"Deanna Paucek\",\n  \"publicKey\" : {\n    \"pem\" : \"9e9avlolapgkon1xii745vjplys6ggbx82cwyfei4j55aiqmm03dxm976qcby9fs2n2l6k92mae36m2jv0o7lvvfqlb6ti4xznvlf3qic2bl2gh6ddbvpjl0bfcbpyiyj305auyi2bx73of20530dmzov08rm6l9qw90b1\"\n  },\n  \"state\" : \"PENDING_GENERATION\",\n  \"generateTime\" : \"2022-04-10T12:00:57.552668Z\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1dc45d36-5fc2-4ef1-906a-027306a026c7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.552795Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.create",
          "schema" : {
            "description" : "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
            "properties" : {
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this ImportJob was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireEventTime" : {
                "description" : "Output only. The time this ImportJob expired. Only present if state is EXPIRED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generateTime" : {
                "description" : "Output only. The time this ImportJob's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importMethod" : {
                "description" : "Required. Immutable. The wrapping method to be used for incoming key material.",
                "enum" : [ "IMPORT_METHOD_UNSPECIFIED", "RSA_OAEP_3072_SHA1_AES_256", "RSA_OAEP_4096_SHA1_AES_256", "RSA_OAEP_3072_SHA256_AES_256", "RSA_OAEP_4096_SHA256_AES_256", "RSA_OAEP_3072_SHA256", "RSA_OAEP_4096_SHA256" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "publicKey" : {
                "$ref" : "#/components/schemas/WrappingPublicKey"
              },
              "state" : {
                "description" : "Output only. The current state of the ImportJob, indicating if it can be used.",
                "enum" : [ "IMPORT_JOB_STATE_UNSPECIFIED", "PENDING_GENERATION", "ACTIVE", "EXPIRED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "fc3f7aac-76b0-44e8-9bf6-9750ccef950f",
    "name" : "Lists ImportJobs.",
    "request" : {
      "urlPath" : "/v1/afp0odtpcq12gb6q598r3h37psplg1/importJobs",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"importJobs\" : [ {\n    \"expireEventTime\" : \"2022-11-08T10:30:57.549517Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"mav577zbezlqkxze9yk1d4z1juapljfsy8k3tsnum7dvbbjexjodz9mwfsdu8b20bukxayurwkrki74\", \"omsuwrvzwz1sl9sfwa5s7zstxhe50kdcg9crhdtjq4g1ojfmh2c8id455u42p4ixs0ve7pkwoi30wf6xx4srfwxnwmh42a9x0mtahv\", \"2j1l36jtel1syp1sx8m7ku6ylarb9p1ngz9yceck2n4kwnsbpqwmww7s4ek4ds983hm887vugm13pfmmpilg8tcovsilv7d\", \"fpsx78bovjt5hch6o7kcnu7rt802p8et8ff7hjhqlofbiivgadxc0ll5nd6taafrhysq34i05wmpuukfvztefcdpwnfrua2d63gh3ql0t5bh9hadqbbnx2potdgdre2fwktcl6wwfkey1vfv3j0ypo72xjleqmxgizzcmbdd5m9gkf8witb3xa\", \"a0mf5yyzrd5j6up1ifytws35g4ap1ksbyqywmyghxusdvl0onf264bgacywelzqk8x56y5i2j53ybnc8s62q944wgvd3u5ov9g5sxgkjsmywnls85nd4exlla8wfiu90ksfw66encg7cn4ysaj12hs9a\", \"jd7cb37waji424jsa0aifag6k011a0\" ],\n        \"caviumCerts\" : [ \"th167b9oavaqk5inetdypmv1\", \"oek3b9yzy3s34dhnmunzykmeghteqq5962cxupj6rspl7q01iidygg4tm62eu3k3kbx3ba4zybfkx1w849ybijo06jyqb95h786w7sbc942dryj5cm5f5ygtihitm3jixjsbmg5e2mbz0jy0er6d1ghp1u5nzikf4v69b6i9sv6a69otmf2x\", \"3faaqnhi26v3pskbzz61sbifn9dfgd8xizs4gqhwfe6zej30hv3jeqx8hytocdnig7xcsdb90sdrdosqkhhrkbrv\", \"8b6przu3mlhgh5nw789g0utbe1febp5jwmdpad2jasr650cthk78ergl0yewaeh02e033irfc4bk72fke1v1jp9ifbnz484yw7js6ult9l02fp\", \"vhfktjzlhm44muebmix2u3tac94x77t7eqmx6xvdag46x8grzzjohxzovywa4qauxo9pcbzqd4efex8kayzy47fhqekgizueiec7cs48xe8462isd0ad27md\", \"ke27i755mp0vaqyufdvsqudn9vdmyealqabt1ae3qdxj2dgv7nlenzmv8xyprvbk83zf594h9iyw5cxo7j59kibgo2tfdb15gfe8j1xjch4kvihv152ld74jo62f\", \"cojg03m4vnd7vzib5h336yspx1q6yg1ow3lbvlbhr7nbucxsyz188n8n6l2eu8m3wux44rjtefjfd2iq63nz3vmbqj7b0ceswwy1dar16wx6r4ebp5cqboxvz7zuxv5oae3k18yv7ptuy8f\", \"1qwxysykjsqyp3wkdq4205xo4g27b9q228pghi5cxeapjt8d1mx8b5n21xg9w53ev8una9ru664lkxsx0q49ckigtidrumju01kfm2w4jhfyxcg2oh5otnqkhzqx7k8l96i2h0gf11rk2psdjy5uv2373ofl1\" ],\n        \"googlePartitionCerts\" : [ \"61pw1552xtrp6nuupq99v3sqkuneve1pcuaap1uuat52zz094zeryul7l2frybed27zsw0rdglk4xhjz7lx9evb9asr\", \"uools1xykbv4me0knvhgslsmgf89eaopk43xekkhvxyo7hzk2ivnsw86eewqo3wyl544hozol6liarcokx842uv5c96mxrab3y7nn977ubm5izpq69imjnwi8b8gxssf2k4me43ehnbk7exqsdrm9nwp7841kh\" ]\n      },\n      \"content\" : \"Corrupti repellat sed velit. Aperiam quam quis natus dolor quasi. Ut iste dolore. Aut voluptatum suscipit ut. Et nisi quis sit et aut.\"\n    },\n    \"expireTime\" : \"2023-01-06T09:36:57.549707Z\",\n    \"createTime\" : \"2022-09-01T10:41:57.549734Z\",\n    \"importMethod\" : \"IMPORT_METHOD_UNSPECIFIED\",\n    \"name\" : \"Wendie Schmitt\",\n    \"publicKey\" : {\n      \"pem\" : \"nx1opbzu7i8md\"\n    },\n    \"state\" : \"EXPIRED\",\n    \"generateTime\" : \"2023-02-25T11:18:57.549832Z\",\n    \"protectionLevel\" : \"SOFTWARE\"\n  }, {\n    \"expireEventTime\" : \"2022-12-28T09:26:57.549875Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"u6zd7fhzkswz6fjihlp3idw2etsnqf9m0jpygcnfwsllee6rbrm095qlytcgd7wdjongro1yieud9p5sx8xb\", \"ryskgp4pzdfabp9txbazvfoylggiqmueuu4edpqqvvxqeh76ajc2bcbrmv6su67benks9n34l0psgvhhdlskskyil\", \"qqrwy61txbdvv77whrc8e0ovsdjv5job5bsilgjpdim77jqn0hht55fin6uub7z0ajptgfwn8h194spbnkgk613sb1hlhqfuwbrdcpoii295ravbu6dq94na84jrqskogq03s8ujvnd8byh\", \"312siklnunqdjjv9ly1u6z53pprzeuarbinzj1xh2hba8lktb4dn7i0w1acccge24uryme1juvgj8ppgluyftwxc2tr2rbxhs4imjthe0b5w3vjx69rtbk80nwsy4kbdtso5bkbb9njz6a5f0ji613sehtafi67zcakbxbe8pi0683coximg0s1fgf3\", \"eghzc0knk6w7bmmkfkm79mm10o4eipx7uq3ivptl0sxm72jx9f62pfwfdobympfoynaddog45rps43dxxcbgmvldwjjzg4a7ftpvlboaogm80618b70abvdrbegss4p783qi1n5moyq75zc5wlm3qok2eoka1fgcxdy2no4nm111l9l\", \"7pz8cs57jtyvuqv3wswa962qeryybchk6xsxdwd04zzlkjge8thpn53d2nt34a96o452bs46wye2ddg00ws2e7x0r2swsqb4njz5iwqej21ku997v0lj\", \"fhro8czgi33t3t8dwgnyughxh5le7am66b4mofci8z3h14sobrari0ev3drjbdzymlxgh1l1ossxnbjcldf9yptcyckrfq0fk7jj\" ],\n        \"caviumCerts\" : [ \"p6jgx7r1cbvmaj33678ep3qawaqgyph8hvksncdc99z0jl7rd6nuj4ja4rucm0vxed6uhiyyxp4b5fmbl4jbi8lrl0xtghthsl3mcqp7jcmo4jl8viu4k5adt1zc12d\", \"uxud9zhne5s5v5r5jpb9nwn9c2hjixqwweq3dbnu3ssyuolkt0m3e8mwoju4renfjhd9hlef6e8casasilqnfybvon60yqdlfkrozn0covk7mseemuvxh4tn48szwnk7jtk\", \"efpb7vp8y0bhfcmi7b989zizooeh8etgesn2jjqr9w5o1\", \"z7jhy1bvfwairxxvb4idfkv8w6sjhspvj9xyu1o2cvwh8zauryp85pzgfmhpun8rcxujuwkf2opnekpkj0rikj5vr37fazvvmy7q6q41b5cjpl01df1nhh9um0wm5pk\", \"hvkssartiaqhrvcwzmn0uzcclm6jc6dj3sjvw459nr4c4a0yua1e19tnvly8h0wvhx4xkxsz4hsxfcypjx\", \"na4byii93wpb1wvrpxz4kcvirs44rcpa10gh1eut75qe3hwua2subqug8b7eetq9a245pv1dhbvbr8ay297swgz3jonwv7ek4jqmx38tb5szcqxcfq3y0qy1xo6v024histuaojm6w62ibsb64w0igipqi0\" ],\n        \"googlePartitionCerts\" : [ \"ffd7ai51knjint2m8hulspjhd1r7voizty03sjpbt3yo44p4xel2ohgkiq21ys28qdd3mmns3gqwx271cwo3dds7\", \"iqm1owq5uer99flp\", \"mpcl91s076seiy5r4p4hi8l41jpmucxocc6a9kyne1ty9o1pupwf6v7pbicks5mjdrm1tli7chwcnm\", \"1ax5hkvp94ckq24eyrm9sf1\", \"47xn6zp2e7i3n8v6zpppa0o2kznvt3ppkhfihhy5rlzdn2cte2v3rilrsyn3rwhtmi5pcx49nzsnzwlrpcqv585biczhrq5if23rvnf0cdzvo7lgxjo\" ]\n      },\n      \"content\" : \"Animi praesentium incidunt et excepturi rerum eos. Corporis ab enim fugit. Repellat quas deleniti nulla illo. Qui ut porro.\"\n    },\n    \"expireTime\" : \"2022-09-12T08:50:57.550063Z\",\n    \"createTime\" : \"2022-08-11T10:51:57.55009Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA256_AES_256\",\n    \"name\" : \"Sunshine Sporer\",\n    \"publicKey\" : {\n      \"pem\" : \"e5ht7vgxe4auwb7zmlwv2x1uwcfmn9tqrzy6fycu95ry93b7wdcqpyayqmrsylhp6ibh2gu57jxnbk45pu7l2f0158lus1rrfkwgqv8y7q0munoprysumtekspucl323ypt0n68ortd8b7sgwb77cegu9cjeqt3frr\"\n    },\n    \"state\" : \"PENDING_GENERATION\",\n    \"generateTime\" : \"2022-08-03T11:04:57.550187Z\",\n    \"protectionLevel\" : \"EXTERNAL\"\n  }, {\n    \"expireEventTime\" : \"2022-09-26T09:00:57.550228Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"4z9kv8jzpodc55ol83ya2sbs6cm9cw32ekrc4dwq6mo42fl1zfbr0317a\" ],\n        \"caviumCerts\" : [ \"1ecg3dwrts6mpenyb45q1qi4wh3csb6pfjyyt681snsc30ikydf3db09lptfrr01w1dvj6f3j3otke5nlshk5bbl3xl4c7gt7y2u7gfq9fjqifb01tuarkfbqfx9oapw1n9jfxyxv4d18fg3a0o756mp09ewh1brp\", \"2ht7jykw4scdttfgdua2mmeeo9s91uaayyrcieru7n0nay5np0sm58sgz9e5re50vvkvueuuk8htnvh8ohtukr1yrrrjug3txhq5c16u7qbn1rvn\" ],\n        \"googlePartitionCerts\" : [ \"o71zawk25zzty3vwusdcauup08es7eq0wylxt0mwfqcmfgl4d0hk3tfeqm4mga4ivzejvt42tdh5wrj81wdizcpled4fje3xi3uioqka06uayw442lmrzqc0gmmc99bfjy9mhlzymvhkk7dtkm77i6kt4\", \"wwhnyxq6f4fq1y3jmiomg79vu73a9xq0uv0sz23p9acb0xxej9qyk7s2wk7sgmamf6ivkyo1weorlxv4y69a6wwwxspw324xwfjqlx8icslwial8a3hgjble80wusgkcxwbo60wewwxoh2kzsiuj9v8wa8eq9g3ooqmt72anodtdg4zgfovv\", \"8z6oz9t2\", \"bqz341tinjqi8q894phyplmvvtyjwuypoahj0lj9tmguqooi7c1bgg515iho8370m841fz9z2zl98lxdpfxzcznjt58umqq1l9t4mofuccxqjef7iu8u7m2kktknzr4yy7jdhj9v9wyujne4ip24f3f9vxppz40vzgvy7d7\" ]\n      },\n      \"content\" : \"Nesciunt omnis laudantium. Fugiat deserunt et expedita veritatis quibusdam. Officiis voluptatem veniam.\"\n    },\n    \"expireTime\" : \"2022-10-15T10:10:57.550347Z\",\n    \"createTime\" : \"2022-06-12T08:45:57.550373Z\",\n    \"importMethod\" : \"IMPORT_METHOD_UNSPECIFIED\",\n    \"name\" : \"Ms. Zelda Kertzmann\",\n    \"publicKey\" : {\n      \"pem\" : \"y1bmqcniikgm8lboaojcnd137l7ey0xp5nbo60ubamiychg7cj2whhga5lq13s43fttjzc1aqm\"\n    },\n    \"state\" : \"PENDING_GENERATION\",\n    \"generateTime\" : \"2023-02-01T10:44:57.550469Z\",\n    \"protectionLevel\" : \"EXTERNAL\"\n  }, {\n    \"expireEventTime\" : \"2022-05-20T09:13:57.550512Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"wojnrmgmwatg3uefjjn7mylmezhyu8orr5zgnaniwaydp3mb372yfa2ksjfc050qhu5s2vzxy76k1qv933c8ipu38rt8anc07450ypci4m0gu\", \"l6070q2z798q9i1nn9hnopm071gud44l6ht607h80i0bq5ng1ls1oggdr\", \"i16ju7wp4ssppgb2x65be007sordebwudgqbmi04ic7oorcsl32tkanxph95stpq5mooawrghbt76pnm10zxzt6knz58t9ztpjug5ebd2i8b5w9rg9uzf2dzsovyr8irbjblrzdqldi4dbhgh8mrh8n7liospsdmll71pjhvh0tm\" ],\n        \"caviumCerts\" : [ \"hy64htubens93hiib1vr91b12o4ztj3apwckcn4qvc5fxhd6f85z63ljxe\", \"8kerdznm69kttmgvgzdg4b3b7153dtzr4aprj2tjfi8zi6hlwt70bm2m6ai5qicnysyf9ia16cndkck5wl5ycgn8iyghe2hv5nuv3jwr801lb4oerkjh8lvr2ur0qiqmqnrve1m5gtphcylc7hoaupx14pfn8zdwozq2wxl8b\", \"50cnuwvrjwfvhuhwc0m99p43ytqmtkbueea8vq5ebp8jia2vr95so1zpwvhop1kmg38iq\", \"kt1hc3kb0ycjx5e0pjgvhpixgnfjoumrrf99lzxqh7sxuwoqdcpjcpnzd7i690fhw843b4jw6f3ao01o4zj8en7tzp3vp24oz0pre7q4qwyus075syd9m2ilpthoqm9xogp1tnqnhxl291fj8ezi5u4x9fhbd4l8w6nuhd3lrav9s2l0s023701lfk\", \"aazsvs49ft0tc5a45q1wo7tp8umuldh6aoczhhrevkpbsyss5u47xrvhdl3vozv3gefr2ti2bx2s7znt6sl5y4cvk4e4k3kc817c6wim9\", \"ojj7g1fty3f1vlhu0b4a73ly3zd8gjyysibsqb5b6y4hlob1znt6nwl18s54jaz68j5mygzzttjqjj5qk0tqnvyikvxorcjuf40o3ttfydlxvc0xjudcrs6ihoan4p\", \"skzf6142wtzf9u3270176jkoz9iacs8t95lg3kvg086mvrpznvao4pirxa3t1kswx3fpr51u2la2hnftt9mvvatibw8zgxpf9m6jujyqoswvm2tylfoszm9fwusply9yizlhgfiy0xjezf3w3\" ],\n        \"googlePartitionCerts\" : [ \"rf5h4r13s6uf21i6zrjdyhkegz4i8d60vsic85ansslmgbhqsqnd539cmqo31nwb1t6zz7l4mmoq4irgs6hdmmba6400hg8a59e0f5ui81tolqiwoklr1cxyqd2lwc2dmq3pn\", \"ct22bqnta84ovut713p2y0xsle2z9hxm0nb3ardfwh2vbg8h6ftut1agizv7as6cwarptwx58g3huy6c2a28n7faihpg7ilpxp15qos7ehve74rkdf2e4f5lfn0ldby1zuduopeh2o2li8w9v46wckge3kgfbywsmov1kt2zzuca4g0r0lf1w8zebv9\", \"5o9fn20mrxeti82o9ormcv5hjhsgc83y1oefcse20\", \"3lf39ro7i48blt3pbe1qws5m3qz60yerk4nnxy10dgqlutidwnbxq3eyv4dwh6vy5g\", \"pjumvlres8hvui0tqvwjbzensuo7\", \"q6xnhhto3l874yftx1z5p402wlbcifwnbt1btzed5ahfwcc9lebkkso49j1h25w2jpyjwpmp2idck7f4qvad3lcqflvuv54m\", \"jbm2822nzfr7bj65m6u0noe5gzcye4i8fv5nkcea529qvghp1dwcyq9emu8cn5bl\", \"qu4npfln905apz6bjkhh5gcy\" ]\n      },\n      \"content\" : \"Provident aut nemo delectus. Nostrum ipsa consequatur voluptas ut. Dicta quis nam et et. Minima et vel veniam et dicta temporibus eum.\"\n    },\n    \"expireTime\" : \"2022-11-23T11:37:57.550698Z\",\n    \"createTime\" : \"2022-04-03T09:41:57.550725Z\",\n    \"importMethod\" : \"RSA_OAEP_4096_SHA256\",\n    \"name\" : \"Alyse Ward\",\n    \"publicKey\" : {\n      \"pem\" : \"f6ajlm3e7pq2x1bi6pu4yqu8t3dywxblm64owcpjerrwygvfkupt38st2zwake71u86ukfvm3jsr51z9zqzd0gooj95pj3iwf8s4m22o5ab7636qqqaizma30zx3zs8s0h12stwdt9e0pnl6vfv6d72e0a4suf2mipe87dv4uiuqisemez94ijlu0im02qi10u\"\n    },\n    \"state\" : \"EXPIRED\",\n    \"generateTime\" : \"2022-05-09T10:08:57.55082Z\",\n    \"protectionLevel\" : \"HSM\"\n  }, {\n    \"expireEventTime\" : \"2022-06-05T10:33:57.550859Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"oeuvr7vq19j34uhl3sadwkp7hqnrz09ffltplshncy0uo4rcuqcodilxuh3eu1fd0rq6y42rybwm661btuyctk3wmipc9wqxqhm\", \"vaos1g6sre9gzi1u9y9hwb\", \"7k2achaaz1p1mqcbymetqmgdb3t9qy1qtmx16i0dzsex6qweqn00yqnueoe\", \"2gej5wqig7oicnsyktbkh3rz5qqpkjsmuapngaylicjnlgabze0hg8chnuqf\", \"jpf6zsao2p46dcbioaod3yi8vs824ge9zg92sptbacvsij416a98uvnuhinle2u6kqa0doktjka0rorxeofeuopvbcj4t8s6wca8y8n8p82jr8ue8rukym\" ],\n        \"caviumCerts\" : [ \"pezpzoea47jtmqkyw5yuter8x6k99tysd3ktnexarthvnovw4z5zy1s02l5xmsdluaucqo8urbgpgmjjjey14milm3z2cq7eoqk28piaxmdr157202zon25kmo8at8vsaloehrosods1m60tsx6z0zyvaby3ok9xlv5m69pelh5zkjhsbglzl2s\", \"vi75n72jnhhp69lmz9b4blziwcm7tx01\", \"wgcwy7v3tma6y586r6em0zqzfbj8zqz71rm34od9zskyte43l79c06g31f9wbhhy26fpntt0a06nz02p5pufgbmt935ag0pkmlwvpj3e5dt4cksgauw84y8s\", \"9uts059rz5umfocut0gn2w6yptn4hjtb90psrqgc19awr7jlxrzawpu5yr9kfucgbtdt5cuu2db8kbni6zlv5sq37oe14pp67i9892al9ztzucmpiypkwtnxib3e5a4shjefss568\", \"mdtg21bat9j32x0s4e7vnd2bwr7mj1j0idl5gqd5j2pn7235j7j0jov8djhrba1mp0w9312ptmnvu59lxpdk6n59atbqu0bstxzczskbtzz73m970vz6g86pu5uzdlzz629yndtmu71vhhpjur91xd7cdepjczcy214eh3niwqi2auo\", \"hq2t9ceqq9d2dlh7fh4ubqdt6dgf1nimyj8eg91jbgje5gbic0mica6255531id5kl3rmed6\", \"2b7rr18ny8k8s77bmc2ngcyq9wdxg0r58zg1ta00jhoixw4o7v65l6mnc0nu6jnye6ccmpjjaex4qtkekzb5z8vg8jjynjcaenmumcqqjne3r2a2z7ljvkfjfby1iedm2045umsua4yf9gv3i5\", \"stx2vo8goktbxhapcy3dmjcditui184vj8qzudfl4mfxbyz1gq5e0ydm3rqcjpojxjmag4jg35a02tydpo99vpxwlzisb3zvewjh9\" ],\n        \"googlePartitionCerts\" : [ \"rhnv9tg2gblz5ctgcwpwytg4gp0ivx7bdsque0zowqqz19wbuhv3qj\", \"zmwby95474bvmbptzbdbwrcjenve12cm8r6ntouxnaiji40nsa4zllneaawr818zj17by7jvt7pymevua1nrru78bzix0cg142qdpu0i2cog0mfvfkwn9m9ppgz1ei2fjxddrnweajv66wk3so64z444g3pa1gadvyjvjo3r0iyjf3h413\", \"ftymh22lgeewjlk676pzj32paa7hx700ma1pwawdqbqfi1b6e53o1xtdc4k8x0paml39kzm9ijzjkrbiosj87mvterzfpotlzluik8p3z6yd3ityw3xi4ssp4v5w5vp28v4qid0zakg39nfdfxs2vmmzhj19xq8pdbufp3rmq8gfg\", \"s9tdkc4k2nz7cqhzcnsq5gaaur0g9vq4q7yb5qynntm4hg3wc3rk911nbw490x0covt3iq1ba54qvqa4uvqi3ennhulmig5lgdh0nmf5jxc7azmz08sj3gykjxmj2clrxoi6rr8wugbmlcj194uk9ngswlnl5\", \"j7ncejyz8rlj4uk1t2s5i27d958vvvaypiidv32k5zcwjmbhn3yqrdv24x8ydc8g1i4fwympyh8maaiymqy20xg38h19tw6s366e7h2dn0xuo6bbwgfp6z8be5mojey7nas252msixapyidc30ezt11n9wpbnae4a0pz\", \"xlijnnr1r6h0a8nbejyeme6e7jdwjlopxii1xywkum0mlntbqgryj3s7x84lsv7p1ohp3uhpvwbz5xsj4zxiq61xysw2n9xya5qe7i3rpoh2kgmydwrpdxyqegdgf33kvra4mfbws4bnb9ick0yo9a9j2b92ecy395dw4dgjpmtw\", \"jbvbox42bfdjmi3wg4pjdmm6zpwn7xl2k20vio2j3qrnf7rtiutketrjgqmjbt5qo48npcuqpq0ozg3972esp0suktgpf6mf4ab6r7u0qapx1bz5v8jgx7vwxzob1d5ui4cxuo0k0fu4y93ozf1rpv2f\" ]\n      },\n      \"content\" : \"Ut animi et. Consequatur ratione est. Fugiat ipsum omnis. Aspernatur aut sit. Nostrum amet aut qui deleniti repudiandae.\"\n    },\n    \"expireTime\" : \"2022-07-26T08:53:57.551063Z\",\n    \"createTime\" : \"2023-03-05T09:21:57.5511Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA256_AES_256\",\n    \"name\" : \"Markus Gulgowski MD\",\n    \"publicKey\" : {\n      \"pem\" : \"f9b42rz95ecdp3lex1ft4crrb3eu2oad5ia6sdz5juwuauk45w6skvo5e6kl8l85gpugjn6yt99s1pfjt47tczu1izmnlih1aqnl4jdqdkwv6ji3as4sa85j8pjsyq4bfigmlxaf2qw28xpkz47sz6ubso8ffw182066vjbgprfy4zxv15g1n4jxk\"\n    },\n    \"state\" : \"PENDING_GENERATION\",\n    \"generateTime\" : \"2022-11-07T10:02:57.551202Z\",\n    \"protectionLevel\" : \"EXTERNAL\"\n  }, {\n    \"expireEventTime\" : \"2022-03-29T12:11:57.551244Z\",\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"k9cd00i4eawo8412q17mqvva77qvc5dy5zivryz65fs0jtjsk5cg0w0ij5dpm77pcafyy49ivq9pqpevlj75svf0wqk77rg8puc6vcv6w72k9mzuvpn10bwjjblhxtt08qkv3gsmlto673gp5x4chofozw8yc9szi\", \"xy3ncor6kkqgkzk5c8\", \"fata37m2fd2inutm7wayy\", \"eqbtpxmyt71a1pw\" ],\n        \"caviumCerts\" : [ \"22c0abxsc52yzy5t5y423xr8t8ciey1cjgccdrrli60i72y1gl6wcgkun6t8mn6mymsstt416mxzw7pzua0o2zh7dyoxwhw05em8j367fjbx0hfecbgiasq6749lom\", \"qor17871ina4iq2gn6wwnk2f0kfdztr568b7z71knddbnc2926o3e8g62kvszvxcehsm4m9rfdqte774p5g4rqjejpk66o8vnj0r3cv140z64m6zmbo1giur42d9fb1whymhim4jagjcvilc249mgzajar4t7xclku2t8kgmvz6p978dcklabqedndw\", \"fn17b1o5ki7tebjqpkil97x433ei160v8dj5nc8h3hlvd59k8ezaitefn7iw5o95qgpufp90sjrx2zayjzik262jrkoj4anlpsu1q09yk3jncz3pozvm7o2ko0hcppbfidzfyx\", \"b5zgxgz7a7exk5torudwzxdd4ofsyzw5jtztg3yxtbul119brgd4erqqgvd4251nwachtgs88xreyag4llvaqohgs5irwggwsoty4mskh199zjzjhhw7zo1a7kuqczldpn7rzi8oj39pvtbrno7p0odexqyci78mafodk\", \"3sqhbqi9i7ycn3zy728ozrt205pk4q0j82brncako8fe0lg3zapj9cpmmefmr6ez90su790ynuvaqvwzhr56padvsn9dujsat63t8hj3v6w8yxyw1b368tdt0ubmnaf2u0aopscrkqwyiyb5rxdeg08sy1u7czz\", \"kzx49y56ylis1pl1b5c5e1\", \"3xm0aqykr7b940\", \"tj8f19gtujwjm5uh70itnss8txyay0458mry4kxbyera6u59i4yrehd1ucrfuxw3gxy48nfewmko0g9jkr1992seyb09f8ru5ghpe1x6ck5q9tw7xk2tfdn27t4wh9phggcg5hp\" ],\n        \"googlePartitionCerts\" : [ \"p18lk4ao73qzmf5upiv2q6i0jr8r4qtq2hig1o2ng7r82cd4r44929n58um1bqk2wnegt3xvyvzec0xllvgj08yyxqcaknf0bfzt50oli1gcxzj0n57tj8jeun2\" ]\n      },\n      \"content\" : \"Facere numquam possimus. Quis quo ut deserunt autem eum qui. Aut optio explicabo. Culpa qui quo quam dolorem aliquam cupiditate. Facilis esse ea quisquam dolores nihil autem.\"\n    },\n    \"expireTime\" : \"2022-11-23T11:49:57.551404Z\",\n    \"createTime\" : \"2022-05-21T11:53:57.55143Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA1_AES_256\",\n    \"name\" : \"Ms. Dean D'Amore\",\n    \"publicKey\" : {\n      \"pem\" : \"8vplmkx7cjit8wnaxhzbzcsp7vj7b70mg5r2\"\n    },\n    \"state\" : \"ACTIVE\",\n    \"generateTime\" : \"2022-10-21T09:00:57.551524Z\",\n    \"protectionLevel\" : \"HSM\"\n  }, {\n    \"expireEventTime\" : \"2022-12-22T10:29:57.551564Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"3y3oh6j5oqlbop430df3fdwm9astg7zwmrcvr4d91hyzwt7i33zzhz7cd784vvu1ifeqbyyvok9tuq6zy6i32nrmdy6ak2u757jq2hyjypo5c80e1sf1xpng20wppl8h9epr68c4vitrtoaw8jbm7q41zqlgu77kvuja\", \"s77brbwy3zzc894tah2gf3ql3zqcifpxxn5mtk2ctr7\", \"29mnyu0l393ebz3rz9vmpldexg9cplc9x7aatg1skqhe0zq93p5z49z804rxagbw2sf9qzimx4axu4ag5aek1r0gimmk699cz6huv6ag5z\", \"j77\", \"au1hysyn6ffwnbutmfhxkxnbkziwmdl6ug38osjpvrxxw5mv6pwqk2ufo0rrzhuv63bk0o0i91vc4d\", \"iwkv94wi34\" ],\n        \"caviumCerts\" : [ \"z5t6c4y4ysbqau3\", \"95rvoi0ggym4sbeu1cai3md3tkqd1zen23fm6hhjl17asp4aypsvm73c9n8erfeedcktv0fildzui8zxx8p2keiz8ouavypsho715fl\", \"j88t7qzseqthka7mpekcu0jslgmm4op5shqf8ybnl6j8ieus5s7qlqz2nq8gw865xs2uevh59sbqiydmstyofmp2tl0jxuwff8tr53zf2oj6sf7qqctpsk\" ],\n        \"googlePartitionCerts\" : [ \"643nw3g4fwc3h2ntrt\", \"h721x7vel2b8m7g23rfumlgrzm30cjqr3yfsaxo2yf6gsh4apdenkl6f6uuihpok2bkgeiwjcbiy\", \"1ijdcu7y4w5m1xl5gftbevz2w0c9jfg1jrqziast65v0rcvkx56uqy4mxbv8qqc9\", \"oo3cxhx4rpl8brjlyx0p5v3b3f0g26z54pd5s670ch6q4eodaxa1cppebjy6sm6pe1b2jdnns1jco9f71eh4gv7gbt6ast55ojk35c0821ooy4c6k7xkxv8ofk9ufqulfh4grie1dlpsj3hr1l27kkdzf1a44xf0jlc5w\" ]\n      },\n      \"content\" : \"Maxime consequatur voluptates velit necessitatibus quia sit libero. Eos velit earum sequi porro quam qui. Neque ratione dolorum est aut. Ratione numquam enim porro sequi doloremque necessitatibus illo\"\n    },\n    \"expireTime\" : \"2023-02-22T11:18:57.551722Z\",\n    \"createTime\" : \"2022-11-20T09:50:57.55175Z\",\n    \"importMethod\" : \"RSA_OAEP_3072_SHA1_AES_256\",\n    \"name\" : \"Dedra Lakin\",\n    \"publicKey\" : {\n      \"pem\" : \"h672ixhqxbjhi431yjrwq6qvgxzk2xt\"\n    },\n    \"state\" : \"IMPORT_JOB_STATE_UNSPECIFIED\",\n    \"generateTime\" : \"2022-12-17T11:53:57.551841Z\",\n    \"protectionLevel\" : \"SOFTWARE\"\n  }, {\n    \"expireEventTime\" : \"2022-10-07T12:06:57.551882Z\",\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"vauzirhaqrhr119why4csc7mmwgvrsdi72orw9fxdagskwzp14flen\", \"wgu3gyqga6zy5x9ph7w5xu7f0y0wgz9asw67peo48sdgqm15wd9kiqack4ql9v0n4rya4y0iverg37ocihciwrp4zirufio1wctmxhfif\", \"vn9o9qttchv4n6ci3107dg88md7pw03pufvvnnpr5lhqabkb527u59xzyg015fw1al97flarc88hqte7prcggpnmdkvothcijt6rb37etm4l0hxivg7njjk2cx9y27nth08j8qdwfb9u8q5a4cokob32urxbf4\", \"y5qlmz52lkx4z51w2sgfhagx4tj592ix2c3u89lupi66mj8brtptfkzqa1w439z6c12ubsbg7zbcac\", \"1jhogbfgp3xel8qei0ce3fblqo0klo077569qrntl45\", \"lh1bqfrl3o0xqc3v977mb3ou5lwxz06f761ahiu5qp8tj1oj45i93azrjt2mfxlzlgcbja2nhw8g3s896ma400hctsdje2ph0hq503r06ozp4c9ejtnmap74ue9tij6jv\" ],\n        \"caviumCerts\" : [ \"uidg247naaqovbctry604j5fofc2dm42eapqvnry1yejebmhknyhg8jcnfa21sw4m42062hv9gih0g0gn00jk1qux\", \"531tjmznfiv2g5cksl083hbd1p3d6zzcmf2i4jkp84gkcqeakq2favvqh2dn\", \"16j5twy8blsvb3yw3kvahg38aj9j0ynrbncsidm4ldlqbohdjr43cugpaiwojghq3ap7s40cf58pcd3vsb71ewmkvn\", \"wgq7\", \"drxva9wuaj4nf0ykvzvczs7ibw5l38e4cpitcmhbxlhi1r3dnvjayrxkf8l2eopwu9n1yvlojzpzz0dd\", \"y6t8ql1obw4pmbxpke1etc0w37euw8mh96b4jejge9m8j9h5v28j4yhl55zr2j7a5knhn116jhr5um58hjmsg0od\", \"amlsquyldcl9lf0wejz00es1eugthove1f6663oqrmm88097znuo73s108yriizxk1spgd\", \"kss8xm3wtrwp6ykdvbju9lfqj2jkhmogba7ijoew53hy8k2rjcs6ie0\" ],\n        \"googlePartitionCerts\" : [ \"ey9y48pa3r2ea3nb5069ooucgadh623x2dd0e0yzprw33nvyjts9cjlp5iuwc2nsy53m1qlxv6v6bnqv6t0s0qta4y0nei9o\", \"ih64cxhyw8ykipy9tatit6n132i4me8b2jxnsaejucelhumzpw1k0x5pbmpk2k40jezpn4nnh1qqsbcrk412k3yprmm1c\", \"jd384spt9npxw2sy4\", \"1b1cukt62vtrmml10kyftnc5bpuhvv6pcra2o8h6gk0u027du209rasb826ry0qbtjil7vv8lai21d6qihfo992jxmnb5alffew3xb9xwwzbsn9tityyf00emc\" ]\n      },\n      \"content\" : \"Aut explicabo deserunt fugiat mollitia possimus consequatur veritatis. Quisquam quibusdam aliquid et. Minima deleniti ratione perspiciatis modi.\"\n    },\n    \"expireTime\" : \"2022-04-26T11:33:57.552055Z\",\n    \"createTime\" : \"2022-05-25T09:59:57.552082Z\",\n    \"importMethod\" : \"RSA_OAEP_4096_SHA256\",\n    \"name\" : \"Sherilyn Runolfsdottir\",\n    \"publicKey\" : {\n      \"pem\" : \"538q6ry9sie3mo41jxhn7llb8kotx5n36y6mjxfqbrunx6wmec7gvzs6q3o5zlh0ces5irsc9hrsswi412j66th4k5rv6yf\"\n    },\n    \"state\" : \"ACTIVE\",\n    \"generateTime\" : \"2022-07-18T11:32:57.552178Z\",\n    \"protectionLevel\" : \"EXTERNAL_VPC\"\n  } ],\n  \"totalSize\" : 818281198,\n  \"nextPageToken\" : \"bbamngnmqt8iidnylhfhuh8c77ib48hxbmmvrzrvxhoud6e3un6m0knaak6c6w2i5ho71oajthwn3bkcprxe7wjp6offpii0gw53tfj28lzxknysw1hvp8g8hny1lh87cq93vgobhzikcm1rvpu\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc3f7aac-76b0-44e8-9bf6-9750ccef950f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.552345Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListImportJobs.",
            "properties" : {
              "importJobs" : {
                "description" : "The list of ImportJobs.",
                "items" : {
                  "$ref" : "#/components/schemas/ImportJob"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListImportJobsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of ImportJobs that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "ffce8307-d9b8-4fff-8bb6-5c34cfcc8fce",
    "name" : "Creates a new EkmConnection in a given Project and Location.",
    "request" : {
      "urlPath" : "/v1/b1aoiyyk6nbklqdt5uk41zxngge8c2366h5kr6h8wc4vfxqn1iewb3ex9k0vi1lrvp147np0siwr9ul30km8byq5ipf1jo67e2cfghlo8ins9hqhs8rvh4w30dzhb4zev74adcx5eb9qih3zz78sm5w4rcg9mbblldel2wmyn5is9/ekmConnections",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"serviceResolvers\" : [ {\n    \"hostname\" : \"Curtis Hermann Sr.\",\n    \"endpointFilter\" : \"0vypads311k89oukqxiycn3qg23ryp5f0zuy732z6zjdr6g27mwdiieyofy8zutwoqxxtwor1d24cjky7ccw8009feu3vb9b4kv5fe20hfmauecr8wqvcnrto4q9wub6o2gveicpm5mj9dql4w8xq18vl53l3y0ocbtvhk56zh6eurfk6nk7fsnohbnh\",\n    \"serviceDirectoryService\" : \"8rhmy25px\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-12-07T08:25:57.547633Z\",\n      \"serialNumber\" : \"tcz8658df71re3b4bkor\",\n      \"subject\" : \"si818ypkmf0tk2cfzw0n2xupqpau1pq5g83xxiigvbobu5kia08r0327wk90yyjr8v3xd8260x7tktn78n99idj45mnxdr6sx74eb3dw2leipp7m8h15pu1sahx1ulfalcwm0sqrazbzm2e3erkv9nnn1bik4c67emd3sqr7nj\",\n      \"sha256Fingerprint\" : \"i10lwjohj9udd2ms0dvkv1n8rrut72ntey545\",\n      \"subjectAlternativeDnsNames\" : [ \"4wv9avqx6ioy1ju5v88zc4mhy2dnph8y95agf2sofm8ia22sxqc2w2hoxmfr9s1w6ho1vi2pp7pvu\", \"m14qz8oxfhh8ueaptzwjgobej3\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"laoyt46z19r0rki5mt8qct4tdkj8jnut0ejj76htjttg52ildx4p4xppy8gwbokswqhpjpakbqy8zfx0ab0sy3au23n0oddggzl1zc32k80udhueyn2i4xlmlif9k9qlo4onh96m301f39luwegov1028sibeqsfd1imm2i4bxxixr6asrexvk6j65aktiyuibue6\",\n      \"notAfterTime\" : \"2022-07-19T11:08:57.547724Z\",\n      \"rawDer\" : \"77i6qk13aj7r1r5kqijble72lq0yb6hbu0uhtdu9xysug0k6jgytvxikpna8rohaw\"\n    }, {\n      \"notBeforeTime\" : \"2022-04-03T08:48:57.547771Z\",\n      \"serialNumber\" : \"3n4ogpesmnagrvvhhk4bjq5snvkehe6pmyjtgndpx2dwz70hr142fpot\",\n      \"subject\" : \"u16p4x27xnvd9tel7wixfganvlwndsd4afgz1ib5vr0cj5qm05t3a2bc2jqtpribwpkunipjj9hezdtlj6okomp8wuef5ik91dv3emme9pxud3fs8qytlfve\",\n      \"sha256Fingerprint\" : \"wj03anph4uj1kd86zyxamw16miukg590pnp35x23ritz5qv7ud01zopk62pqi5h5zb7zl0ealep3c99ndex8eap\",\n      \"subjectAlternativeDnsNames\" : [ \"gya95mr2tte\", \"dy50s65b000kfj1l5sptfunfqux52ns\", \"c8kosycv62ijihy1y6pe2g7j2xitxnift0bqwy68xeo9h5gmf5w53d8qrcfnqtfuz1rde7fdegllvnrhrim5szu3kr31y8xadsz1z9zf8wealraec2ikqg1zk5bufvlprncwndaarn\", \"hpvwnc41aad2kt21tyyp3ol9hvpk4lm5v3e32rq4j7z7auxkc3ip3\", \"c0dki1myo2ah7k55kw3z3o54iusrt8suyl2f3uqarun4u50iojgwidqt2xkvlyeha8smxdoyd2p3jl2k1fzy07o03efi1e6od1uwczeq2d2r36dcnrdtdqj22vp848l1i5l6nsrpv38vky88kg62lazxufg4swd19nofokod7sgobe3ymgdpbfkmbvq\", \"uixgb67ylfehin89pdgil38q05vjvzgorazyqv2n09h3xl30kjkkb4vtifdt6ll3qa3ug58legzh9uakoihju90z1z8obnz2351hiqg880g2pv82kbl6rrgky38crzyozthxmu68d44vx31ad655o59n5u8l0pqai9i45geweqyeljqcevlh\", \"5176f9xjkvkw6czpvxl0vfzkza97m67qhjxv4mkko9wzqg4e2v84kginwp0t0nmnseikp8oicirzv76r6g4rw95i7wx4isev6yta8x2ezx3hmocxyl01f6nj0182cf65qgw5xcm3avats58uzhump38w21klejf2h359qg69xc1yo9ilp\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"zrxf7\",\n      \"notAfterTime\" : \"2022-04-28T10:49:57.547886Z\",\n      \"rawDer\" : \"51fl3ywdkpmcfvd3u2mgnnz2wgv\"\n    }, {\n      \"notBeforeTime\" : \"2022-08-30T10:33:57.547931Z\",\n      \"serialNumber\" : \"c4wcgff59brw3elejapcutxe7ehs13cgj6ot5a3d4fc79xlzerrv8csyz7yrllk5woa6ea6blnhntw6s921jvn1fjw06yse36pm7qhsjh8u8\",\n      \"subject\" : \"p6cbceelg3jsdwtwnzpo11w\",\n      \"sha256Fingerprint\" : \"k51vx27i7r0h3uxrt1w9pr5j9alur8rhb7vjzv3lzkytnessw2tmuu3kdw3e0zgb3f5a19k30ckbpy9xtjxljzr7dzvi1i0nfuaikv9z\",\n      \"subjectAlternativeDnsNames\" : [ \"n7q1rsza8k5250x9kwtc6hgmqzvt0c8oabuybphq46869udzg64r1poy2rcr5txzsslc9tg4cq74jm0ch34xuls27g6a5nnatjj7z25e39ecied2ic5qf9i51e60i98d4skmrajeq6d51dw\", \"pfx130iy6lxdxdq0f5d3ycpsx1g9r5ktsv47sp0v7xvbfww61e0h7x1evsrihgom0uc3auojvlsw7a7gjotrsoxumlqcxbt2xfw\", \"dj497yg9ryv89pz8pdzyret5802j72shnh7hm6t7joohxpmsn79lxilttdh2syiaco01540zgg7r08g8orp3qvouak98ojt212lidt9ahw8b7cooy1svigjs9zh2sakzptr3d4\", \"r9fqujjvgyj2ie0p9f9nttvm6gl47rogk17hbgfm72yc2iyx255h3cjqjtbbeafeh9kcj2zp0nrcyafudt3e6fru0r884m48b65nmmxllm591nsxqp05lc4g7pl66ib54he3z3f68k9fpj691zr21mb8e3027fvi25srben88ru\", \"5fvcjbgmbwf2edzomu3ai5dyafrxedb1xcbkk7jz\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"tf0ghyr9pay0uv61q3ymp3i78zabpmk8dcb13s133x0tz8pexa5yecte7d24r\",\n      \"notAfterTime\" : \"2023-03-12T09:19:57.548038Z\",\n      \"rawDer\" : \"yzn4qiscr4y6dq6reqzijy8\"\n    }, {\n      \"notBeforeTime\" : \"2022-12-20T09:04:57.548085Z\",\n      \"serialNumber\" : \"851eimdsy7pimmv08p1gov4j4ye3m2z02o79yofgyd3y8atsd65imma2\",\n      \"subject\" : \"fub897h4sdaykg9pwurfw95fiqjkz8v70rgcsroiiwpu4sn9jyobiqq1r23qpo3mbxy027tqium7r5k\",\n      \"sha256Fingerprint\" : \"dlvkthh6o2sml79nkxdu9mym4d88ijb7mktl5ls4zelgi1wau5g9k0sg58r52u1\",\n      \"subjectAlternativeDnsNames\" : [ \"jsvajm\", \"lj5rnsi7bq4j2e454e080tw1kft37vhiwn8r7rtkipw78hsql9i7ncci\", \"01l44p0swqbawbensawtnzwwexw3t3bkpbsuo2z1y3kd9znw5zzzna7gflvxkwjdn3bw4z7ezkacjijbetn24x22sw8rtbgia7pac69vetkt5rtz9j4geuo0pc07txdrvxewqp15y66fkrnpvqef6s2fmelrjlfnsfzqswy0c64\", \"giwewduprja1esk8qy77ov8uikk53qbivrn25s73qe9sms219qln1rtw4e9sukrnbza72yaiys8trci34ngdjdaxttga23ts9h3jew6t1unyo41ztkxdusrb271glpacrfooxuw5povgilr59v6s3x8x6a48qudzyrj9s\", \"434ryuoey2bb9gqe29aywognujd27amn1gx0z0f44\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"eze67z40m0t7r663de0rwmtmgytfv38tci4rr2ftpj0n8jjfjfsqkxk8s2fp9rxnbac7kbj8iwdrnnycpqr2o5m4bp8trku1sejtzbsnl7jjpnm094k3v6ikb0weqwzkd7ip3eh4iay3x616o4jh6gu3jdb8p54mbw6llwku5ovygelrar1vsr04mjm1sg0dn57bhhf1\",\n      \"notAfterTime\" : \"2022-09-05T11:10:57.548196Z\",\n      \"rawDer\" : \"ky3c15q3xo7jh8ngp4iyn34n53vagwsq9e0lvvbzgdc4wojlk159c03jukp08drep9x2ts48wih6crupbcd9yxky5vrnprhrwkq35ue7f0ghcd28qvk62hk6y0guslrked7j591dapwc05be7k49jxiu0f8ay8hzuy0i83\"\n    }, {\n      \"notBeforeTime\" : \"2022-12-08T09:09:57.548241Z\",\n      \"serialNumber\" : \"1nwb2a5hi84gpzgc57hx6wae52ixsw6r2zs0r08zwzk0tgnkkivxm7bkp2g3w904cfa8bd0xji69qhtjds4fc3kyvy38737f1k4tctzqr7qnx6tnspwgh71e90ll2jukelz\",\n      \"subject\" : \"czcuvr0xybpzwqsi79sn254dvdtsyy1ojq6wo2l7wdmpcf9xtj40dvt2zavdajwp6fwcfhm3eq9quhjecfic0h37puwm2dxgjswlnqve0r3qqye0ka8826n98a2hwuixnytd0cjwer29xxph5\",\n      \"sha256Fingerprint\" : \"q6r4f6w906bjvgw5fkw3n84cyvp3rosczknzqd2ejj54gy9fmaljhvapklgy96ly57v2fqztabcbsyrmio1qbmmuuyt5si0sygo5jg6omshqg9sr14jmy4ate4e7pidp35lsiols0ffvjfuey44p5\",\n      \"subjectAlternativeDnsNames\" : [ \"2tjk0x5vflyj0pljzfr1e15nfe0ss0cx99rctu2iyaqu0145lmeyiaz4yine3no7emlrp0oyxosgndypb2pojnozuiaeksx1br504llugb5a3jv3y8nt9561kpq2zu7j5vb7updbamx2myrai4iv83zyfqmc0dflbg707em9bnbu2\", \"eldu1lpxb4htnp11wpqj7yxd3dskxhu7nh\", \"p5gtdhqu6g0op\", \"o9lbx903f1o3wpovefs7tsa9de51mwoizfljqfxgtu0cedrll6rm44tswj8324mhik2brbv7tnj5hzhha1wvt8sbm1n8y84waglx6vo33bwaez1z126o6ukdkk3n2twbaia61hv0df4sux5orbum1o771l33q5d\", \"szjl034111u6wqhqobo9twxmpjr5imdsmywsoe1z2slc8jikxty0nzhc9z8yoil068h1nxku7udauhtymasj60fo0cklx453a3bz75fldzyiwhn7x4fbzjpn51s8pqsdps5gy4wgmmpafuy4ypx6yst8grr1cf8fk\", \"gotqj76zvhsvo2a5x37v0y9x757ta9u5e4n1l9b0nww6l9otsbvoqmayu273ifddi66mfe4aqj5dk\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"eawqd3095qtdae3orf5vqopt4\",\n      \"notAfterTime\" : \"2022-12-08T09:39:57.548354Z\",\n      \"rawDer\" : \"si8nkad46epqr2wjre6\"\n    } ]\n  }, {\n    \"hostname\" : \"Tinisha Schroeder\",\n    \"endpointFilter\" : \"8rag7x9y845537ou6m1ri4w74aq9ulzxwsm3umo2jmj94st6c10hlcqgwnvbhxr9api39h2nta9jnrckum7oummy1gusb9mthbpz1w1d9wttypkrwq39541nyz5gx48sp2ueohtmtz80zc2jdkqf2omfs39rqkq\",\n    \"serviceDirectoryService\" : \"47sxfz5vt3ck2p60ni0xmjluuyjbwn92sacgfqkrdljo2qd6aljtzteyoov44c5wbxru19tnlrdz29k0mtzufibfcs53oqr8qpdz1hg7urt7gqhkk0o9zu4u2025h6tjncvoi9ciusw09o5kbh\",\n    \"serverCertificates\" : [ {\n      \"notBeforeTime\" : \"2022-04-29T08:32:57.54848Z\",\n      \"serialNumber\" : \"jvq5ishhfltafxnb3p2nu9jlqvf0lttxnreezuzfu0ag3nmt2tx30mbw12li1j8p70lm4cm9p87f1juhls85h3meotdzheaxudd21n1fiemf3t7icpn4kyjigfp7z940izcejj529xgz79yxaoyhpkeogt2p\",\n      \"subject\" : \"y5ozjoslu9tcrl4cwtg4m3ex95bmiid87afbmxo3bnrhg3ejkmx4nvvwgiqhhmgi98a12a9bxg57zqaut3jjny1g7g4rgdiaowwmjznbego7rrrcxbjg6nmsua59okfz3in39pcpze8vepdqsklz9qy1gep9z2b26utl8vym7c1t34hbtccg28vati8l3c\",\n      \"sha256Fingerprint\" : \"n9f7sxmdyrfxmd99c2hr27m1m5hqks0stblfhrccwi67owerqpzvgr32u\",\n      \"subjectAlternativeDnsNames\" : [ \"7qwab4hbz25ir8u7q7s48jayadzl8aanlx7t46ff3641kztuh8ockl8y8ffgcryx6mxoh130k\", \"zn2ad1ix1rwc7eepm5mw3yhhw6qy6ckeiy4p4xlemkysv2i0rhnqc6x2fr779ql0i11bfr7wsavqxcid6b58e37t1y3knilt9jx6ibhp3s5ysuqaj\", \"bmnfprm7envml4db4qauc25ik8jnhv1m8n03ci50yt48jw47l9iu6a8zehtatgrj2u8necpaczokxna1t6fcuvrz9wl8f75fwsbb067l0lthcvro7f17npppnt\", \"agsydlmg91surcpq146c2z8nc04ge9\", \"aw307wsr3umsie8jx69fr618b4kl2013ggnvmllagtobeig3rdwu2t67h3nshpnjonata5k2awaskyadddsybcv0gr1mawqv9wkkkp8qifp19qn8qt20tdwseltk5\", \"lktfbnhbmb2um92knpe9j70nizkeazky14mqp0ki\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"8psocohtjnzyerebolrf3hxcyb70drqs6w9r4xlvdowovu2643aionr8aim0yqhbkzamipe39eqjkm0897v3j9cpi\",\n      \"notAfterTime\" : \"2022-05-05T09:59:57.548587Z\",\n      \"rawDer\" : \"me2m0bnthw3h3ranuvfofgvniyot2je7p0lw3b4ala6mfcokx9flz5os426pieax5r2fa61sy4c9cdrjv32oxi2tyqop1y1na9xkc\"\n    }, {\n      \"notBeforeTime\" : \"2022-11-27T10:04:57.548633Z\",\n      \"serialNumber\" : \"gyuu88mxbvxa57l5a4qg2vqdp3rswq03un48iour6trxh8yx3uynpfbjci3zud810xmwbt7yel3oqeqm9ot1qdgzl5r3vkge4wqyl60528kt81s4lei7l2kat1erbldnoyd96vns\",\n      \"subject\" : \"cp8vthdxjwb1bbyk17fsrbjm3wrmp1cv0j65sjbd0w1vdtsfv202cmfd0wgglx3tss7gk5yviz9znme6jxbwer08krv0168lsn8tf9p0ppl6fwjo01jlnkd07auwj5iakxiscl1jkb7wvenliaizdf2jovj1y3iczxzh33p\",\n      \"sha256Fingerprint\" : \"uumzzdhpmbl09ve6u5c236oq6r83kvu4l2qydx5t6ca9jiw8cb2zbiws761br8qt36nmo65kqi1\",\n      \"subjectAlternativeDnsNames\" : [ \"d2d68a99lsw4kv0xm2k7elie9quwarzqk9nausxx8yaymyduypw3uvhfjdxv8npplxej13r5uea5p7kzkzw1llaji2xzdbp3n2zr4odujne517c3v735h5h1pcxvdra0bu2fv53z25xu60xvh9z2wo72dsnmxqx98033i\", \"5dywob2gp26cl1rxgofu2588dnw1uwnrgqbg7t9nqfo2w8isdtfzhdf8ok5ih0ucl84i78notfqby5at76h45oqq4dtwq3ox0lfvyfhdzr43fw308ofpo9bgtsq8h647ttee0re08y5vrl0kluvv4568nsyh8desni7vjcnbfwjajf9racv5kfmfht37h7\", \"hw631xmwphleea5rczon5cyfn81r3fn0uo6xigw\", \"w6b53ejj168bdkekvsg19v72ww2vma3pu3lmd299wvrfrtytpvzll4pkxo\", \"upwy97s84p852mslo9qn4zu36f6rg4pph7pqap5udl1v4np43g17pe80p9vulsyg8xm4t71joyj812a4kpuskwsvgdgqkyt54ec4olhoknw9rdgbsgvewflyjzhp9ces9f34mz57esv21u2gakm0t93z5hm91kqeeow6vdv6qmfv3\", \"xjlwo\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"3ydjb91yymdr6m6szwut64kj2u2egh95o3m0owy1trn3tq7tihv0qzghs92i3gtjz699ww3fznqpkx06angh7ymk0y36hc74936zgi2kiafo4igr71yhibwgu9\",\n      \"notAfterTime\" : \"2022-08-24T12:16:57.548745Z\",\n      \"rawDer\" : \"tiy8exrwyp\"\n    }, {\n      \"notBeforeTime\" : \"2023-01-04T11:32:57.548791Z\",\n      \"serialNumber\" : \"auq2j4hv51vmnzmov30hvgg2noocrrm1in6ahim3svpjn0lbao8bvl3zog25y2cdnkmp1zfb4r4k65bk3uqczvso04ffdeukdm3f77ux2\",\n      \"subject\" : \"enuksafs8q3j5pg33iswfoc9tokz8vnpwlpg198mppmy2wz0tz64nylgyuvfx4842rkkdik1uasp0oan9gudx9p5ybb627r44jxjy8vmo0n8j0ql136z9ahb3clyhd8g5jx2312\",\n      \"sha256Fingerprint\" : \"91hop3r440i39w\",\n      \"subjectAlternativeDnsNames\" : [ \"388ke3cecrimyen1oqbtczb2oslxicsj7p2elge83rv3np4dgwmxjpsfysambac5zhnk87almjz1yekhtelzfh9irp5zrryoeqa76u5513tmg5klfchgohat28tcmwl\", \"7pggk2upryxo1i26o9p7f487zbel3rpsxubvsdqj3cxdohn5yz3zke10j2nxcs8gbkohok654l2h3hulx6ff4furxd9erk0h5kk\", \"w7eoiu230d9i81k0kw3jee3pyxwxvnsv2zqg2tcv90j6c6gpsr5yxaqlpih2yw5te7ni818f4c447hjyckxcfi061ga3qeimvl45smpvtjm9hvcg4h\", \"4kcyvikc0djn42i8k5fukh8t\", \"ubnpsikcgwlj743rm8l7e8pjpql8xd3y9fxgejshgdswa1hv229m6z2y4h3dhgjsbg371suy0a7y33\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"pic5uuhu7ft1ryjn0wp1jmp089fe5we2pesqk2chcpnjzl38u459fp9jed8wnzmg0ca3cp7gtrh2vpk4nalkfew1rvmdtddqyqd16k25ypoqh2z2s1tu88p2m396pds8scenazy7co706fyur2wmwxgac9g6h8dix0he0m5abbkcrxff4n70o7d88e0eefe1ywpdnw5\",\n      \"notAfterTime\" : \"2022-08-31T09:02:57.548902Z\",\n      \"rawDer\" : \"fqgdjvo3xwc2l2bz9u9qqhfl5dx4bp29xwqas78zghv3dpc0z0pjjgkprl37f5glzfjfp2bsj9qtegsn64rl1wu8gw\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-24T10:32:57.548947Z\",\n      \"serialNumber\" : \"kqz6zn43877sxn04j2kb09304xlg3tc\",\n      \"subject\" : \"i8c0oegt81gbq2xg5isf32zsrhx14l82lsjnpb7ym21o1bngo6vvka5saunc2acq0g69fkdqn0tl76g5s06odx3anevxtwoxi5o2juo7dbifn3cbxokm1r5ln1q8gx1fr1pu9wujb74tepr6ry6yxnmvgvvhglzjjemy\",\n      \"sha256Fingerprint\" : \"acnr4jzxam44tpi9y4o5e1\",\n      \"subjectAlternativeDnsNames\" : [ \"koiazdmbfvinx6\", \"8gku91jhcdy40b03jt43wadwerlqjpgh4z4nqtbvmkrb0m53xygl0pty14mfe6klyeizejje6cofi6no75kliq3y4gnnorqxhatr3\", \"n8z9loflywkman7ozlnr499sq2eaoegivbf0fu1ua962n82dop5utqg20zdmwwteyt8ao26y3bpvwpuxay18vutwzf8lok6nw28v14h3fhtx\", \"ba7sbbozn1rqkahbt3wshg8hcuydtft43qdyyale1t8x39dybfo4s9lqml0vnhf5bqx5z57tsdljwipii8wqsjspefv56trmm9ec2gsm39zu\", \"tjhvnbuha2hkc7a9z0bud17zkz18sirf9lz4fnnnt4xpxhyfhxfzb969ry\", \"5a772wd0u\", \"nbbazgjx9bswxfrll25xbwwlxz6vajpnu9r76qqla21gsethdjutcxqsv84prfj9grqm5609yl9070vqyajs29032gz814izc8evbpk2lmj3y50m3748lzr\" ],\n      \"parsed\" : false,\n      \"issuer\" : \"6wy8v8dmupb1jm8hh3822pfeiw2ed2cdnd555\",\n      \"notAfterTime\" : \"2022-06-17T10:31:57.549056Z\",\n      \"rawDer\" : \"6ytyphhiwxeoyvw3bbchimhy60nijlh4gyqqrtkois2s5slo93uokoefuj3hsgfojievhxptd9q6py8ch59xm53t9mw4fnkx2vhymvfvtbq7xv1zshhiygzyw93w0eiyeg7medmof3dn01hw\"\n    }, {\n      \"notBeforeTime\" : \"2022-09-03T11:40:57.549101Z\",\n      \"serialNumber\" : \"zjlthy8oa9au1mofoyqp9axfrnb47q0dd1ughwi0az6q9y8hxvtyof8ib4ayu3hmmn564q75a8qjqpkq77tptyku1lnqpuxoaqn33bb07m5ksx16vea9cm11h6lljk32magzrry9c34czudgk80e9034hne1wgoxdfvm6f1f29v2zz\",\n      \"subject\" : \"lqu8xsikq1xmeikdey43db47a33ukjme3uybtm\",\n      \"sha256Fingerprint\" : \"v34x7eztght1fut5ab1jlcad7tpzvq46ty7sy9191b7h1uz1o8d1zmv7x9792rcpiqyis0vve7i0udet9kwr0beyele5a4r69br1ih48vhklp5tg4rrhtovi0xoe9lcw8hw3ez97n00ia0l7k\",\n      \"subjectAlternativeDnsNames\" : [ \"fcerg53o3su6lgge4qg6kgukwep8xsaapf3ns26l95pt4t8u5ju8g0rey2iql9vnhl2xgn89kvyov3cl87mfxealoqnz4xfm5e57bbtkt5humqstl0tjfirmmg4c84hb9z9rq8mbwb\", \"qwwch7w28hw4c3nhh2miwfhanow4fbbox6uipan3blwszzcfo2a5l1\", \"4ck748biyzudimjx0bqs3y2g3tdi8eqpta2dd7ffdomlz5rkbara4pmzqc3j4d11msc8wv1bplqozmemfwh7br9xlm61qss6jqjgzorpztay3h3nrs042v8r3nn717cgx5qesuqsaxx6fx\", \"zh6t3a3cx5sxqpr67pcle2kwv7khidwagzda44pkp0pmqilzx1cltqqtit1xfscsgs4ri3co\", \"48dxdko1shcqsgx0033w8mahu83934ss\", \"7alxysber4hbjac6sbuuq\", \"td2a0ezp48zxlkrt47opws33\" ],\n      \"parsed\" : true,\n      \"issuer\" : \"5hylgcfuy8x329xe4\",\n      \"notAfterTime\" : \"2022-11-02T10:47:57.549211Z\",\n      \"rawDer\" : \"wb0o2m2g12sp69950vm7bhka2jmfwmq385l0vm65mvz41crfacqfjf91sfl85zg88a9xzcm7lrva8xlnq2legqkwy884oahpaotrilpvveeaz2hb6f70jqdi3h85dbk711bvud5xyrj1kzlxhka2kms958cqxcne14ifp3c1go3ypffd8tjnqjdvg4kwowoa7k3tr\"\n    } ]\n  } ],\n  \"keyManagementMode\" : \"KEY_MANAGEMENT_MODE_UNSPECIFIED\",\n  \"createTime\" : \"2023-02-04T09:16:57.549277Z\",\n  \"cryptoSpacePath\" : \"qu74zgjmvebav7lgmrm8muzlgy8twzamrjs84xbk3u17xmw569tt4khyfv84r5wxb9hjxjva316uzjmn686bgv6mdl1smye360b3atxpvm3kzy5z5y6jvpt95b9t7q8xoeaqignw0unxb1b1g3gkig4p491fv\",\n  \"name\" : \"Edmund Nader\",\n  \"etag\" : \"ipsum\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ffce8307-d9b8-4fff-8bb6-5c34cfcc8fce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.549471Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.ekmConnections.create",
          "schema" : {
            "description" : "An EkmConnection represents an individual EKM connection. It can be used for creating CryptoKeys and CryptoKeyVersions with a ProtectionLevel of EXTERNAL_VPC, as well as performing cryptographic operations using keys created within the EkmConnection.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which the EkmConnection was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoSpacePath" : {
                "description" : "Optional. Identifies the EKM Crypto Space that this EkmConnection maps to. Note: This field is required if KeyManagementMode is CLOUD_KMS.",
                "type" : "string"
              },
              "etag" : {
                "description" : "Optional. Etag of the currently stored EkmConnection.",
                "type" : "string"
              },
              "keyManagementMode" : {
                "description" : "Optional. Describes who can perform control plane operations on the EKM. If unset, this defaults to MANUAL.",
                "enum" : [ "KEY_MANAGEMENT_MODE_UNSPECIFIED", "MANUAL", "CLOUD_KMS" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for the EkmConnection in the format `projects/*/locations/*/ekmConnections/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "serviceResolvers" : {
                "description" : "A list of ServiceResolvers where the EKM can be reached. There should be one ServiceResolver per EKM replica. Currently, only a single ServiceResolver is supported.",
                "items" : {
                  "$ref" : "#/components/schemas/ServiceResolver"
                },
                "type" : "array"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "62183100-0845-4d8b-98f9-0a8923d109e9",
    "name" : "Lists EkmConnections.",
    "request" : {
      "urlPath" : "/v1/kdtiaf76a8qbb7nxg1bqa2bhqru816wtfv1xmzsqg2qbgrfmk7i9fb6uxcaaj0vel05mcwaxy4ft89pbb7c4r61xdbl5i3x97gub8jucx5hp3hh1y81a7t696o87iqse4y8qeo2i4bmz2ccn/ekmConnections",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ekmConnections\" : [ {\n    \"serviceResolvers\" : [ {\n      \"hostname\" : \"Dirk Schoen\",\n      \"endpointFilter\" : \"imhak6jtocnfoda367slgtb0grtzeitlb3pc53gvd3g4l9basbmi9z31wo0uj9pi3w\",\n      \"serviceDirectoryService\" : \"y51lmptxj0a2qgtakeyaewetkv4e5hclkwwsyvdbwfmzmuw8e4fiwqsoo448880fnhritvyosvv343a1s99nt0ek1ljolsa4cveno\",\n      \"serverCertificates\" : [ { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Romeo Crona I\",\n      \"endpointFilter\" : \"ypowetegbbwinkh4mj3mjbqzdz4507t\",\n      \"serviceDirectoryService\" : \"sj23q4695xjd76w3v\",\n      \"serverCertificates\" : [ { } ]\n    }, {\n      \"hostname\" : \"Mariam Tillman\",\n      \"endpointFilter\" : \"p7m4mcz0833crc79hb2hfsaysa7iuo6dmh4dglm6sptfjqjj5jk91igcze2rmyeu5xvlxdjpaeda\",\n      \"serviceDirectoryService\" : \"lhgrio2cn8arp037axqz8osmvpqjk4szgs8xr9i0mfdgr5ha8cdigm5sxcwrfs7zde69u5lx8ebvuqb4quf48ha9clvcf6sf5kxn5s9re6be\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Dexter Howell\",\n      \"endpointFilter\" : \"trbh0hmqzwak16z21p87y9hz9hfc278nwtsld5rvhcm2onzsw6woaao0wb3u4flwff5h8namyox5dbox2pdspfpq07bbukjfxs\",\n      \"serviceDirectoryService\" : \"ps70o0x21vqxgs53zdqmc5304ltkvr4qz55h3bxd11mztnr92u9mmopiy5iksqw98f3zfc\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { } ]\n    }, {\n      \"hostname\" : \"Love Sawayn\",\n      \"endpointFilter\" : \"m67uzjy5qiaweer1f7i2tunyhw5k8o6t8n1ldr02cwttxo9p61v6ww4fe9b5wm0s7jmvmw5rmtsinzg36rei3pamgv7qtwt2w4n3cq6a5d3xw43zxlpnyhidrau1beopyneamxfa4o51cff1c3206bkry6yibrpj6tce5kyiqr4vbbzdf5jym8jvb08vfj1mxhqun\",\n      \"serviceDirectoryService\" : \"kumispqpse8diuj4ss0y2h1eteapnhfiytsh0wu75a70xg9gqrgavopbr5w8n2y\",\n      \"serverCertificates\" : [ { }, { }, { }, { }, { } ]\n    } ],\n    \"keyManagementMode\" : \"KEY_MANAGEMENT_MODE_UNSPECIFIED\",\n    \"createTime\" : \"2023-01-13T09:32:57.547342Z\",\n    \"cryptoSpacePath\" : \"7amn74comv9p1tpyfm9do2xzgo8ecxnishgzrd1fkto6qxsqcbh2s5emle5s2ztuiy4kbzjf5n34smavoef4c6mb29cw83witaohezz7j5vclfuif5u8aven3q273xj5tevmw34wvif0o8pil5e2qi2ynxtqhmn0mvtm6u\",\n    \"name\" : \"Audra Collier\",\n    \"etag\" : \"consequatur\"\n  } ],\n  \"totalSize\" : 1766255618,\n  \"nextPageToken\" : \"gwgbgas9dq6vybg5sokw1zftklfaj227c98jhbo53xfusprqxwysre82strq6bybkot4l9b4gg3aicxnwn9qe7l0lf07ol42utxmcwoumyr0dpjo7ws0z0gcwv3blynyj5807nhgow170kh6j8fkpzv427ibs\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "62183100-0845-4d8b-98f9-0a8923d109e9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.547523Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.ekmConnections.list",
          "schema" : {
            "description" : "Response message for EkmService.ListEkmConnections.",
            "properties" : {
              "ekmConnections" : {
                "description" : "The list of EkmConnections.",
                "items" : {
                  "$ref" : "#/components/schemas/EkmConnection"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListEkmConnectionsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of EkmConnections that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "d5ba4e7b-55d6-4630-878a-8fb6fb45f6d6",
    "name" : "Create a new CryptoKey within a KeyRing. CryptoKey.purpose and CryptoKey.version...",
    "request" : {
      "urlPath" : "/v1/nwd3qoxpk5c3hwh3rz2n7pmhqhvponlr1t7tmaaebd0jzirr4pxmiegeq2/cryptoKeys",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cryptoKeyBackend\" : \"7d8kru88ut0s7lw7tx1zgia7uxpru4mqoklfwkkk5h30m6f67vmfbrodz3sjf2vipif16tt1xebv7azstg9wph5igo2fpuom35k5x9qnv4sau3mjtiutrfki010yz8lar5202jkz0snpgredpc6y8vj2tll6uwq3r9dypls7yxb7hb4l7zc1p\",\n  \"nextRotationTime\" : \"2022-11-07T11:42:57.546216Z\",\n  \"rotationPeriod\" : \"65bq5s7t7s0rvji7t5x6usw400al7o2kv1abbocezg0j7y8j55l6iqgd0sfhrlyxy5pk1x7pyo509q2a5e8dgysi2eidzu4q3tpr8\",\n  \"createTime\" : \"2023-02-08T11:51:57.546258Z\",\n  \"destroyScheduledDuration\" : \"xf4ksnmnmmz7sxla4vxocf5azbkf6jxw6516msukojb4cqaosg65kqquuh1zibwq9zivwu9w9a7ok2iqopcntc6r67lt90thunfb2ypc44ggqddwzx8lgq7uhy8cniwq4gj1fz4m1kpkp3jlt8mghwgdm910nhbdfjna1e8ktv\",\n  \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n  \"name\" : \"Jeffery Kulas\",\n  \"versionTemplate\" : {\n    \"protectionLevel\" : \"EXTERNAL\",\n    \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_4096\"\n  },\n  \"importOnly\" : true,\n  \"labels\" : { },\n  \"primary\" : {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"a6jgt1zbno6g9xae1abt5ggp1piz2oiqtn4csns60htohy1mq1xj9k537w0sonma2pzl8nytk7qgms58kbafmglbdaawhemqpjstkocoyvb5kp6idvst2jiis96rpdql9yn6omib7sqm3kdb5x\", \"5vkpxjk1r7iczdz7kowvn3vim0p7cqgsmo2lmujmb5w1qglegiswm6w82vya34b1k15gq0rbl6qnhyyhe92rxdtt68mpskfpg8ag6e100kknll5fb58oqqpxii3arjngghu81m8361e3l5jir9338s57abbqh8coxee3nzltxdtcqo8u2zkocfo36hp993pan11zlqs4\", \"thoqfzrbreyert72sl0z0vtj6cyqaxwdkq4lrjckf37pwtqqikgj962au5795\" ],\n        \"caviumCerts\" : [ \"f5s1rrsb3qagjbx0avsinc7plqrt6jaqf0fu64gkp49tvpk81p47b5vg8siqsqrsispo7vt2ecksl6xuw05zmiemlfyr3qhyn5eft4zxrff1ludulmzpo0dfg3s8mfshjpyz87f58wavgtj06vq79d7\" ],\n        \"googlePartitionCerts\" : [ \"fkxgwa4kigq0z81wmnbc6a8vy4eqxhv7302b1hdad5t3p3s8udz8uwcrf14ff2il0w34pj2u4croo2c1epein82lwao4z0kq82cd0dqb2gqemmmu2ka3d0m1fjnlw995qjwn2lf2jae2c1083efn3is50wo2w8e2aioqe5sl3eyh5hb6cquya\" ]\n      },\n      \"content\" : \"Quis ut delectus ut quisquam vel in. Perferendis assumenda quis. Perferendis rem qui corporis dolor adipisci. Sed odit ratione quisquam autem et qui.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"sw04wv09hdkpm3x99x7psbb\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/335971\"\n    },\n    \"importJob\" : \"atz4s66cb77gyqf7s4ps002datxgcef9l7huj5nubfqp7wx7cwm2aio9idc27rdrg09cijfm57bldlxlwl62atkqm18gombad2e4w8o49tj7469ue253wp52rz5b9yva3yty6fc4nnhb32fugjsaso5us11ig0iby9p08xsm3fhi2u9otc21t5vytpzx13\",\n    \"generateTime\" : \"2022-03-24T09:12:57.546562Z\",\n    \"destroyTime\" : \"2022-07-25T09:38:57.546589Z\",\n    \"generationFailureReason\" : \"pv61a3vmh2tjt8k21k8qcfl3fs4p\",\n    \"destroyEventTime\" : \"2022-03-20T12:18:57.546629Z\",\n    \"importFailureReason\" : \"4bkog2sybzj8j3as00n4xo8zm9ddmtnfia3pbf1h91v8ksttw2b2ee906rrvckiqaggpfb8s7vhl499bpwpl1dcive5f2830wctgwd7b8g0ehiw9mvyass07my7mb6bs9\",\n    \"reimportEligible\" : true,\n    \"createTime\" : \"2022-07-13T10:14:57.546672Z\",\n    \"name\" : \"Adrian Rice\",\n    \"state\" : \"ENABLED\",\n    \"protectionLevel\" : \"EXTERNAL_VPC\",\n    \"externalDestructionFailureReason\" : \"08lbvzr0wsgjsrxbe243k6mfdsc6xmd0t4547hqfir074odid6evg679poes6zj93ty8suzh5664a522ecnxfp8o0ott59ao4ltt9qx11baa\",\n    \"importTime\" : \"2022-10-06T09:09:57.546768Z\",\n    \"algorithm\" : \"HMAC_SHA256\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d5ba4e7b-55d6-4630-878a-8fb6fb45f6d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.546898Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.create",
          "schema" : {
            "description" : "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKey was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoKeyBackend" : {
                "description" : "Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.",
                "type" : "string"
              },
              "destroyScheduledDuration" : {
                "description" : "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.",
                "format" : "google-duration",
                "type" : "string"
              },
              "importOnly" : {
                "description" : "Immutable. Whether this key may contain imported versions only.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "nextRotationTime" : {
                "description" : "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "primary" : {
                "$ref" : "#/components/schemas/CryptoKeyVersion"
              },
              "purpose" : {
                "description" : "Immutable. The immutable purpose of this CryptoKey.",
                "enum" : [ "CRYPTO_KEY_PURPOSE_UNSPECIFIED", "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT", "MAC" ],
                "type" : "string"
              },
              "rotationPeriod" : {
                "description" : "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-duration",
                "type" : "string"
              },
              "versionTemplate" : {
                "$ref" : "#/components/schemas/CryptoKeyVersionTemplate"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "29fec036-a332-453a-be28-0eb5f03132e1",
    "name" : "Lists CryptoKeys.",
    "request" : {
      "urlPath" : "/v1/t9t9vnlqj1seojuergoxpcjlo9r9w21qt80zwgriaqgt5egfy5q8l256p2yb81/cryptoKeys",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 473369193,\n  \"nextPageToken\" : \"7vn00jyeu1mdg2pkfu6ej7tbcanig76mb05xsfwpo176gkd8jykr1gnehxhk2zte0w7larvxsycxpv0iq7fl1btcp7tlbhx2bzsm9hoqhdl8eau104vubvrs\",\n  \"cryptoKeys\" : [ {\n    \"cryptoKeyBackend\" : \"mr97u2j0daqoa645cv9s5bdrlpgtap72054ypkuba0a2m76wp64i8xufcgy2z0t2gbzvg4e0rm60awd3pjz09ly\",\n    \"nextRotationTime\" : \"2022-12-25T10:46:57.544685Z\",\n    \"rotationPeriod\" : \"9q8z4wx047ow2a49cclmq7us2gj9bfw5xyeai1w48cun0km6sbrcprns4fylxfhkjxlgvl5hk1j156zsdot2tkh33gx\",\n    \"createTime\" : \"2022-12-01T09:41:57.544726Z\",\n    \"destroyScheduledDuration\" : \"ipz6l730hl1najg57eb24cpmbfin358xvicm28r7jftwv158bhtr1wmdvhp2oyd9y1dvptt76ilvg36a89qx3anl25wuyuf6ei3yi0ayuozl0kfr3xxakg8cbytv4bbghz4vljxbm9tyqa733yej\",\n    \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n    \"name\" : \"Beata Boyer\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"algorithm\" : \"RSA_SIGN_PSS_2048_SHA256\"\n    },\n    \"importOnly\" : false,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"CAVIUM_V1_COMPRESSED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"5cj3wrget02jmtml6t2em0ebpu38s4e27htff2y3oacgg8t8zoamiqmln2jd7x4vvz4klyxy337869n8gnlmk7ptsq3u9ufcnfcw4ql0qrsc1jry7q6eo33bne7wma1wa9jtm5yjian2xy597c1a2sogo\", \"5g5f074bb1xpshmczosnerjlg4q9w6ts3rbxvtyhkvzyynwe91kwh9971m1yu7f9u4iz4igtgedyukrvfxmvol98zzz2emxirsdbixo957xt9upi3ff9mps1d8pju2r40dg9m04rwmqlvbjn386twzalv9ye\", \"cnomssaz9pnp1333fv4jjok2e2ad6zqt3oouc7lglhk3z7chfjj6cxwcrn79tvljgnjugvztxg9m58tkrnv0vl9466tdbj5jk9wnv0jc4nibogem80qts0q93hkkoujd7\", \"susvd8fdr4u5ucxsapohbtexsofxo\", \"6vt78tgit6j09qiglyaxh3atyop\", \"cfc9mzrd79fe1alsnu49tyo7sp3num5n0r2zh1jx05qp3b1lui1eng53kg23glnnndylszmvg78nlpptvquxvjzgy2upo77nyvlqzh8nefmax82zhscti4qockf10b5w0zvteetlgwtctj2cdhae6efw3mvredemi334hyeoe\", \"nwucxxgvak7lafktj1uyqx1orm5k2tc8az\", \"j73p17x1djo1a9ushz9c5l0pk2p2obpjnv5mp36yl973fdqcp8l1kpj2aqd0uwydpjzko4sdzygz4rt718mjg5bsdrv04pdgjxl17fhs3wwgnhwrswpsj\" ],\n          \"caviumCerts\" : [ \"pilb08gr6qc1gs7uqci0ys1tsxnyczxriry0br0n0li8ood2gcaduda9sqdfizwiqqy61zb57ooupdnqzvmdwg3ra0v9n7msxrkp3swmxv54785ubsnf7ft9pvc227pgbvg8p54jz0pxl\", \"o1oqkh3g39a0t7ty5kmh9v2d5rwzznlvqbj7nkn7rhphm9k5esf3f1422zntmk05282m6qz7t92hcifkt9fgzk0yav77vfh0bu06tf81l3mny3\", \"yrm03wkjm27oqioius3s1pthvb86x21zwg1k6m9c2jhtznggl8e08lmudffzzlj97wco94jyfvqffg53e9q23ibtzxgyn9t6jfe9b9nnbgk6\", \"pco4z773xpsjph6jccl6pkqp8evulmlthpa6ebiukjdzxsa0qdgqptyxmmm6etju2v70gy4l6y7tozr9tp4shk0jh6ni4tbtmec71sijf75x7m53coilzr7appzyosrahp40kik0omoadqcpjtaphg9zjsmfjlay1h4huj\", \"tjgmstq51d7tqvgsliztlzcvrb\", \"0i71rplwybdwbepa4rdgp21vyfo29vpyspxr14526t5zwjenn3h7lzu8w3gmqqa3sjjkn0jvz0fpx1wph1fjhe0yu2hvxg6utd7833p0jwjozo6fy0h07jbq0bdvi9jwmbvjznn8r89yhgod5dltmikbdrtg9lk09kxkmq4n6sx73drg3v1n\", \"zli4f8q9cxry4sv1rejk4icvszbzod79h892ofuld69irjb6hzzylxcwi43hl7g8k30g6c7m4g4qh9xdem2ctqvvr9yta7cjg7ggapx9xc0ay49iej4bloxqxxhqjt4v1vc3fx0\", \"qvfn\" ],\n          \"googlePartitionCerts\" : [ \"bc36z28attgv5y3ac43m1ly30l0ebokpz7h9av2uduqn92m26g5nsqjufufn37aam9cko5ehtnb8ldtmah\", \"32or425pxbd5v9wlf09ztai8270xyn59kiaaxi1fkny7jj213e8jtfiual74t7hdozjoxfumqg11lvl222u134p6n3zmqf511k5y184xfvmz7gu96d91rkatoowa7fojvtp02vu8af3rbcc1pm8a5e9a6d6qvrym0jbmqzg8stvbwlo2zmu5tczx19x\", \"dw4xohyti3fk894r99ks50g4wusvlh0ohy4ndd5y9r6wvrejwt7\", \"y6822sj7e9c8nek5vjeleydoappbq1r3vii6vuh3o9hiqgffd9xoe3nyr77dimwnr37mbls7auj48jxjo5tppxx93kqg6xznyz358cdncg6agxubxi7nkf32904agxrtx3zr\", \"k8545uejefftmmidocir1ixjgcpbmnpm9abmo8bfweaqs885urvdapm26lmy2utd5rgpopjqe95biqyzpamno121if1xa8l852y2r6hiwzeiuwbx6arsh3zcci0x8f09\", \"6wziaa7m0hj993u4woadum4sdfzmt4r554\", \"feqeezm40tffng9usbsafzmugz3eng45wycl46ct1w5xdk5ebouryxihizhy9cpczxt4akwbpuk9klbhd6yxi8jqk952xeiie3s7j5\" ]\n        },\n        \"content\" : \"Non nihil animi odit optio sequi. Ea delectus nobis ipsa vel et. Sint et ut aut eveniet est laboriosam minima. Illum consectetur commodi distinctio reiciendis.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"fyz3d5gs1lpomeqk6dab1t5c4o9aiexcmarx6qknxp305kiz3xtwwohect4x57tv3vieb8jp3vhsx1uio459kvadkpiuvxew0lptcxzmjco8esmmjzgzqyrhdnnps743z90bdbmqlib3o\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/872065\"\n      },\n      \"importJob\" : \"ln41k47h81i61xcr4hug712b\",\n      \"generateTime\" : \"2022-05-13T11:35:57.545145Z\",\n      \"destroyTime\" : \"2022-05-29T11:13:57.545173Z\",\n      \"generationFailureReason\" : \"j4gd8sz87wj\",\n      \"destroyEventTime\" : \"2022-10-01T12:01:57.545214Z\",\n      \"importFailureReason\" : \"qepcj957hcsm3hi6d28zfd9o95dvwbov4hwc4sikkrcvqkhmlelyi9f3428sfkilp0fv601ijygpbgfztx7e8xd815ajzg1eav6mu0rrjjgruakpf5m0v32ncgqprdt16mog89ewu5dhodk4x83bhrcv1ipx4wu4wlx1f6btmrqg9u\",\n      \"reimportEligible\" : false,\n      \"createTime\" : \"2023-01-29T10:30:57.545257Z\",\n      \"name\" : \"Ms. Leda Murazik\",\n      \"state\" : \"CRYPTO_KEY_VERSION_STATE_UNSPECIFIED\",\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"externalDestructionFailureReason\" : \"eh1xsw533pqehr6aafi1jg2rxrrr47lf7wmfqxceuwmqbf2uw8ib8wt1\",\n      \"importTime\" : \"2022-03-17T12:17:57.54536Z\",\n      \"algorithm\" : \"HMAC_SHA1\"\n    }\n  }, {\n    \"cryptoKeyBackend\" : \"cffgeg3e0yns1jogsshzgorc31fgqba8h34usx8zhwsmh48\",\n    \"nextRotationTime\" : \"2022-05-21T11:32:57.545419Z\",\n    \"rotationPeriod\" : \"xys33kr3p471e6776i6mvkrc1x3avvi0ixu4k6lxxtnh6zjvkt285hm428iawan151md0vt9potemh6iu0y8788dpgchrglzmjzli5jo76pkh4g8r2m6ep6nk87i44zy6v616bqg1hne4foi1s05ekoot1eqq0jyb86thwbf1c0de83af5iuu91led5ha\",\n    \"createTime\" : \"2022-03-26T10:05:57.545462Z\",\n    \"destroyScheduledDuration\" : \"8wlhokfc391u644oc1ur7yz2revirjnxe0uqd4x30cvfvgpr8qinz07my7x2u1ciurpefhwhdwcvyxvv98m0vvezqe6vm\",\n    \"purpose\" : \"CRYPTO_KEY_PURPOSE_UNSPECIFIED\",\n    \"name\" : \"Jesus Ritchie\",\n    \"versionTemplate\" : {\n      \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n      \"algorithm\" : \"EC_SIGN_SECP256K1_SHA256\"\n    },\n    \"importOnly\" : true,\n    \"labels\" : { },\n    \"primary\" : {\n      \"attestation\" : {\n        \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n        \"certChains\" : {\n          \"googleCardCerts\" : [ \"r40budgtl21z3u3z8nd693wq7\", \"m539b19nnvtfq3akn7yeh5knzuljk0jr1i3uckhddya4guueamok90bvo8e2gksvy4v18pw3io8tes9s5gf9rrm0572zmpb0zbz2ckss94v2qo33jxc0byx1npxhffmki7mehwb43maqacd5w1vmk5pwhwe4kxfif5lldiczqjyejq6j\", \"14sn2fwfeg4frk498atf91dhy4ge7tmrhalskxbohrdw38nf1drlr2eem7iajj38gwxwyuqqbmutojn8jyskivt37sg95036mp64jsyblywug5g09zu9ybeszr0elz35ywnv4cide9kkhtzv52ybs4epsgrukqqth7c1vhz9498bq84d52sfrv\", \"v7utmdc5zhhzumvnglvm4dta5agecfjiu5juk5npblx1blhmjlfs2k9h9fz4hmr12ozvqutchl2gph33d580ygctthqdi8a\" ],\n          \"caviumCerts\" : [ \"8qwcvgao9kr2j63ss5psvmbemlfjsnpelds7mskygmzxtprmar4o9b7tiymitx5v0f2dn752mmyxyj3bnzjems54utbbrwmlr1bvqbplheqtugvrmgftvd8v3f2gyt69cfbi6a0izuo69hgv2z7r86wjnfmnqmoqbslc1jh680ntm80jsw8n1\", \"c7xizcs145jqcifut2wbaegqdvptkwz7uup1oz29xykfu1l9\", \"cqt3m3sc187c3xioplrubzh3om2ohtv0m4y1tljxkk0gv6eduw4p5gnraolz1t7ir4usc79h629k8kbu1b6cmwu568hyfgxrzif7jiildx1r5dbvgaptsbp3w26dgn0irbjfhipzs6gvbfupw970vluv01sssdyj9mpjbbn92fql1genqxyv0izw\", \"lugpht0baiqkpw32uccqdiiej6nk1uoa07kj8i9gu17tup60qrj0tcc9pvz2bz80ipflqs1lf3sa3b1zg33pz6ippx1gcweov3gooe7dzpw68\" ],\n          \"googlePartitionCerts\" : [ \"efry1hw7pgm9bf6dyhbcvurskcap52\", \"dez79f0wgrsznkjez8n0ulo92uwg3yu4f4th9nfvxp38wroqv3okidyycpo9uuglaypdu1nlhedceqcxbs9ptrabvqdip9640mpgvfl\", \"bgw\", \"hona46be3dash9b5adxy04rz00t478j1d6w8xcs7646f54uvrkjao3lcwkh19gm89ukfos8gzmkvdmxnztj80pkj6k1qsdi61i51ix720x3dteghpq2cx64hfol5h64olo7kicp5nbcjkl3p5yfvm75mosg8w8xy2z1sapasq22j7i5ar\", \"9w7nxdjiau13hcv9joh2duhml0a4bvn1blrxnk87cc6pj2qaa100xyd2f8haqfuhsovs638jz9jhbtjnn79dlbuvsgbhx53j9auk8knqvmu43zkyp58eipnsszn5ixy9l26r9gkis3q5ii19do1fvcs5iqv5sflx5ttfjffpdnauj0xz6k\", \"9498jx48z34udvevg110uohfp795q9w3aszjt4n7bqqxhw9u83xpf8fxexj7sj89hpvf9thpmnankcg18cx6yf2ngauil2ft33z2aze5luwsyub35gsrxlzq5k0q48ojsydrkebffnlotik\", \"wfq65sjqvn7t6uixbf763p7njoeiudpkoovg9ziyfk\" ]\n        },\n        \"content\" : \"Sint voluptatum sit consequatur qui maiores provident. Voluptates est voluptatibus. Consequuntur consectetur saepe. Asperiores quisquam sapiente ut consectetur eius distinctio.\"\n      },\n      \"externalProtectionLevelOptions\" : {\n        \"ekmConnectionKeyPath\" : \"wim6kwdzjaugh6aeaum6jgmtrtwmd2b3cr007nucsomyvvmak5ra9fywa8wp4xu214knqaqiz0hjzt1mpn3pybz1a2k8v6alb3un3c8rfyzeuobsor00bpw0p5xjyj0i1n6hof9la6w77zlyzz85bwdxrsfbtu8j500sk0xim11yyzvuka1je57\",\n        \"externalKeyUri\" : \"https://web.example.mocklab.io/930385\"\n      },\n      \"importJob\" : \"g7yhiuypa14dkzzmbl8zebkzc4wdqyekt6p71e9ds04vo\",\n      \"generateTime\" : \"2023-01-05T08:40:57.54583Z\",\n      \"destroyTime\" : \"2022-11-13T08:28:57.54586Z\",\n      \"generationFailureReason\" : \"5u29laxp9zcf18bw13tqo8txje5w6kwpakh35b86bs16q88hykso4z85wqoi9hki4cgd1ognw1ndsrgc7ykj12zblphk64xv70uz5rm8redum0igqs5hfb1tq1x4equ4wevxzyme7frg5c42srjkn1r0vnmo46w010wbh9n1l3higdft5bj64t1zgjmbtwrr\",\n      \"destroyEventTime\" : \"2023-01-10T09:10:57.545904Z\",\n      \"importFailureReason\" : \"0ztga0ekk8cwd02t95putx5sd26agi6k69aou3xxzqwqt4czpla5e\",\n      \"reimportEligible\" : true,\n      \"createTime\" : \"2022-09-26T12:11:57.545949Z\",\n      \"name\" : \"Chet Heller II\",\n      \"state\" : \"ENABLED\",\n      \"protectionLevel\" : \"SOFTWARE\",\n      \"externalDestructionFailureReason\" : \"a9yk94hcc8hwnta9pz5kz4c0ownf8oybftdqy4zohjahfnaszxki4cz8hp4n7jfm8am70mxhvgzaz4gncf405hhidcxd8zg4tphwmqvoalyey0ww2twn7e5p4bgue8kciiuf\",\n      \"importTime\" : \"2022-05-22T08:53:57.546047Z\",\n      \"algorithm\" : \"RSA_SIGN_PKCS1_2048_SHA256\"\n    }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "29fec036-a332-453a-be28-0eb5f03132e1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.546161Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListCryptoKeys.",
            "properties" : {
              "cryptoKeys" : {
                "description" : "The list of CryptoKeys.",
                "items" : {
                  "$ref" : "#/components/schemas/CryptoKey"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListCryptoKeysRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of CryptoKeys that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "580f9512-9af0-43c2-8be7-ece493825b7a",
    "name" : "Import wrapped key material into a CryptoKeyVersion. All requests must specify a...",
    "request" : {
      "urlPath" : "/v1/hqtapeww0pqwh31u1m6nh1mzei8yy6sj8rp1kgai4iebrrcvlnnuous0y45dn5cgaalgwe4thu9jz3z91wvtd4fgvb97bnmna3diomtncl905ud86uyzekbmm097ca3m82r0mdlpjwqxdmczjs7qu0gxuepa8a9oh4tdsvl3q26v/cryptoKeyVersions:import",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"cgup40i3o6ggw29x3vhz7r0247tqo1sc1hey3s4be41mz5opbkupdnhht8npj42y\", \"qjkezdexa1behzg\", \"8a1j7zfetpafny4rvxd1wqu1hxr0xzyn7uu157jwllqgvv1mkqe31vg3haobwhmxcmc4degvlrl5naxnprm36ieem6e1pl2bmcwu8hnx0nr7e1bsf0lhsqo008wpkwgbvsowmg95uii6ld\", \"nv13wn3zxo5zomwkry53nokssuji1shpukajk2xko095gnh73t3esko4f56tcafk4a2vyzc8b6k4jncbpw9idfq6052p02s5v3bpzefsc8nv2rk7l7zwb07l91gnifo519znawfky48602m8rxmi9orlge7kdp9w81tn4gvasvtph0uh7\", \"e233hykiikrltc3a1cz6nmmtlckv9uppyv0x\" ],\n      \"caviumCerts\" : [ \"ndy7uumc3imtj1tlalkkb83vetjzvuzlt49m0clqeyybg8pwpwyzjn6tpfrcy8knh41eo5fpycgk7f\", \"wr9mu67zc4cqqrm0hsemrx8o14cw3v0a854vrbkq9xwri12fg62d54q822iirxi5jjjs6sglibxm5kbej7wzv4yyfsrzet76831jt8hbyazfrjequ2r7fdg576eoms3ibmfqubx02nx66m1bmb4er\", \"w3r2yl1nkyo5ewqnec8ru1gzvtdm3d1dr1z463jpe0v9whfv8zhbw2kri4ckx6jjzmqvrvmslmuzoyb04a72c\", \"56pzy0tiyxqru4jioi4qm8dopsyh5i9uzyc7m5y53uhh5s2fgeo3eio4azn3qt2z3rm7klkrn0cl1wmsxte0zx5xzhydp3beqxl41stlbsgmsgsuqa2fh1p0ajn\" ],\n      \"googlePartitionCerts\" : [ \"dfjn4bol28g6cwz56oix5497pcv5j8bnxjkkwv8u8puvimau8nymzaq6ycuhj7g523pzydoxozukb4q1hx5k91i92awcxhg2ro2th6159nzpyuc2pay3a11negdnvkp4mtgl1mvm5w5hrg764l5ejybgrmx911taq7e00he4nr91w\", \"dlzu6qiq0jrt98y4tqkqhi0rm40awstsac0cgvhanl35z3eszj1g6ni96jzc54lmhgxvx08silrqgeqhl325osnp8ehe8zne3chbs7v6wvfplysaf9e9332yr09bo5hljldf3qqn9a0uymjz2uj4yfycf5\", \"pm6xlk5sqyavqb6naqx2jcfv235jui3hfg1pqfreo9qxx5pmbo0eog1s1vp5fhdbc7mhco6eu6nt\", \"w7gf1n8yuj7ua28fodpdzzq4h199smc0x6f6z4rb5icgkxkxkuppwu1h0jspwjn3o6okxqfvifcqjpmd7lcrngb353l77whk5u3rj0\", \"hc6phblgdmgsvxepgqpj0i1rdv4k96yrmo8zvfcedprl3rvicp\", \"szsxla9tzmuqzkshng1ct30bja80nsewy3pxwa7pgr61bj4sa45b580hyblnjnytycshf8lqvxsiopm8ojko4nu164z6bjq2b251yaozddyzas16m40s5eq8fdd\" ]\n    },\n    \"content\" : \"Cupiditate in magni. Quibusdam magni velit vero qui aut qui adipisci. Rerum explicabo quisquam eos rerum sit. Expedita dolores ut tenetur saepe nesciunt qui.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"yfa4adaqgl2se0oqi6j99b3kgjby87the6rpacbatjwq7vov3c71a8tpmqdv7nee5ne65wbtukdbkhr8k26k0w84ru7g8n196bwbf56rn8y9a4zmfsea8zgfdsvkwzlifdbi1bgtcwuklp2f7j32ls\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/820895\"\n  },\n  \"importJob\" : \"ywu7y20mauqh2oriz0hyo29yuv6mk4opqopcht4tf0mw5ymxfgkpzbf8i9pc04ovzgqnot5muvt2jhb39adsym4lhidjq34egdejtp36i78el2rduq93edgvn\",\n  \"generateTime\" : \"2022-09-30T08:53:57.544262Z\",\n  \"destroyTime\" : \"2022-08-01T10:22:57.544287Z\",\n  \"generationFailureReason\" : \"o2rb0rhvazylxaka4tzqwfft8364yrof6oxclxnakq5rv6lktg5uafwqp1cmjenswacwdlku0krmtcp053qs1vqi875guxng3q49olof8nl3qluhfx1p8a9hvdqtjct0\",\n  \"destroyEventTime\" : \"2022-03-29T08:41:57.544324Z\",\n  \"importFailureReason\" : \"33h\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2023-01-13T09:00:57.544361Z\",\n  \"name\" : \"Hilda Kovacek DDS\",\n  \"state\" : \"PENDING_EXTERNAL_DESTRUCTION\",\n  \"protectionLevel\" : \"HSM\",\n  \"externalDestructionFailureReason\" : \"dj1339rd76dnj5umi3aj84w7se3hc412dh1mi9nscxmscxy75esxkmwiu9elhkl1j1w71m93k9g5utu3jsx724tpolwbh0tfnf23fxy1utj9wvl3htrlaua\",\n  \"importTime\" : \"2023-02-12T10:24:57.544458Z\",\n  \"algorithm\" : \"RSA_DECRYPT_OAEP_3072_SHA1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "580f9512-9af0-43c2-8be7-ece493825b7a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.54461Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.import",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalDestructionFailureReason" : {
                "description" : "Output only. The root cause of the most recent external destruction failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generationFailureReason" : {
                "description" : "Output only. The root cause of the most recent generation failure. Only present if state is GENERATION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED", "GENERATION_FAILED", "PENDING_EXTERNAL_DESTRUCTION", "EXTERNAL_DESTRUCTION_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "aa330cba-f30e-4b88-9693-03b2df6edef4",
    "name" : "Create a new CryptoKeyVersion in a CryptoKey. The server will assign the next se...",
    "request" : {
      "urlPath" : "/v1/72o1tmfse67nh78rmrozbe838xwnkifd9y98icdew4ah2stqfezizv5qnoqjdccczy/cryptoKeyVersions",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"vslh2m12ahr4rstgrdlquk8hp1rbjxpmk98h\", \"kly2egk8yq4pt8pnk0lxn6jbt6pqrv1e3ja6fy0i63qprnx2odqmigncgburuij95b6dswy7xd4xbe\", \"fuf47earkajg896mhg4rvoup2rbbk4e2jjgjhen\", \"nxnke3ims\", \"kbhzyl10lyr62qodpqsnwgrsjq73s9duf4lp3xrw84uccqx0c1bxkbdjn0ujmf6jo5fgjcqoy3nfyejssyfi9r5ktukf66qi0fi4yuwjc4cokmqwg2xemhji8gdyv0homp4lzkrhhnd3iaa4l8sk43rqc18yy43gmxh7rc1rtcv0zzrhpp5u7\", \"e3v04ber931tzn0dvgrsvt9mj1rk6azws6qsepvqid3x61yi8eaeshczungaena7qknmnnpuc44wpaeeo2m4mgy888i2wo5407rd7fshc0l5gt9lagbx5dv6a1jil9s2na2l2fhy1aux69mvb1pqleb3\", \"h6x16mhjipohli6tt50mq1k1um046h0b0324vajwsjx0kp7zm8qyiemqty8evfcshch6zy2uyrdt32r9ox0s1ina1vl63hb1war18bqkmlcqce7pw45o1qm7\", \"cmw5behxtpq83t7zt7qunioc1ox7yt3zl51i9i90e86wlucv0n1j4palc1da7sywz1hd99hoplb71b79acw609bhoxdusgpde6ef2ff96uqyssjm7xg1zi6lb9vwiag2afr4cgizgppkm55df7fcqwdfattc56\" ],\n      \"caviumCerts\" : [ \"f5cl8llxv\", \"v0gvcxfpt3nvjn216ibsba41tcf8funcik5s4pl3bkez6giry2pk6ti8tl8n8prxx21oix0f30ydunwl6udnk4ufui\", \"freig0ir2vys26qay6dw5fs354rj8frahcim7ty8gm9jomj0liagbtajhe1wiy617uu3etgzwyeksmyl6xjy8btrwq35kbuy4r48x7oh00melxkr9iubv3r56ywyhyntita15ddzt3n6f4owu99as3gfzde966juf2qn5tonev77j3yp\" ],\n      \"googlePartitionCerts\" : [ \"u6efwav034o0krelfjqfr5tpg30e2lal3wfp2165nb3x3em5kfviyuykce3wqlo31koj6d5ckkvwkr6xjjl4n1ogk6p4us9y7h2he54ybsrrz5gptvuo3vxpf32cl2hsyp647usj0fhg\", \"8qdi6tbxyim0nimh0sksuofswazbu2t0jzub87bke6iarffra3i4uxtry7hpegbbpktwbgz8bewdqlqj23vsl0hlend2kwf97tyeky8l371uosdl7dcph\", \"lczfsjzavlsma8qvm3ixkibkvbish5db9483sf8u3et510k1q6f00bxbhjxv6fyyzags8u36h7j59xw9euw691ypr9qdqbzshwsowt83w84mdqkrkqve35zeda1x0mdes8jweiqce0ycaz5ytfu0320p3ne1sr8bwndt8vaa1\", \"07ywnalvty538zmkemaob8fsrvq7scvj2zhju0nppalod54iaw896mkcv8pxhc4tt8ywymvb4kvk0o55cates5w\", \"tmlftwb8xpifyrab8fn7w2b01lt3hf3h2obrvfa0liem8y2oveg7n1m9l02zmitj5aj8z3e2fstf53o4x09qzfx516ln9qsmrhbvj00ui30v36osmtfpno6mgc9jmhe2f0oreajgmsut8riqgjh\", \"hz6qn6hkns260k2mxepjmwfdn06b98nyu43og9fk548yelpkj5amrzzzdy242da7hy1udp55bdjv2v4wgm19a43gnnludayrybyif9d8nqnfbz3ydpf\" ]\n    },\n    \"content\" : \"Natus quia et. Suscipit eum dolorum. Voluptates itaque saepe eum quibusdam laboriosam.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"a8fqjf28djkmmzgbs3bcn3rw2bh0vptdozqr7zt2qtgrmwcwvpk1btdgnnv06udartll0905xzs2ivh7jce9eb5m8oe1xt0rua719oq7spt9o27a1lhxfafe70hq8\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/388727\"\n  },\n  \"importJob\" : \"szw0mwxyi3ttk7jkzb33musmeysybnqbtaze9sf4fum7f2ej5c2uzihqle7ksjprgz9eljsnh4j5j3t94kn5y1zu7az0spu0fche9iw1czgsojpm8n0mk1a9gi2\",\n  \"generateTime\" : \"2022-08-06T11:49:57.543613Z\",\n  \"destroyTime\" : \"2022-07-15T10:03:57.543639Z\",\n  \"generationFailureReason\" : \"eslk8b4dbg1x5\",\n  \"destroyEventTime\" : \"2022-10-17T09:37:57.543678Z\",\n  \"importFailureReason\" : \"9gf67fbydyadvj41yy4b3x5hg9ucwwtgekz32iasg0vcqxf4s7yrb00ojtd7qrnon8ho4ya41klu4i9rtma7ftrvi9t0aqphp02rguojml12jg5opwdi9xkx00vdcp3cromgczm7uzys58b5286dzc98923u4jq\",\n  \"reimportEligible\" : false,\n  \"createTime\" : \"2022-09-13T09:41:57.543719Z\",\n  \"name\" : \"Mrs. Clair Schaefer\",\n  \"state\" : \"GENERATION_FAILED\",\n  \"protectionLevel\" : \"EXTERNAL\",\n  \"externalDestructionFailureReason\" : \"acfdoldnar8bjdhzjhxxl0vltty8rl9ajl83irggdayu1zmg45ft45v2qs4utbp404oiyzun9oab3te0m5rdqjv3i0i8j7yv9utncfm0avfcsom7i9x9dtk1w13v7ktolzli5e0vjgc38e1u87180xt358in1cuqx6q\",\n  \"importTime\" : \"2022-06-30T11:08:57.543814Z\",\n  \"algorithm\" : \"RSA_DECRYPT_OAEP_3072_SHA256\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "aa330cba-f30e-4b88-9693-03b2df6edef4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.543982Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.create",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalDestructionFailureReason" : {
                "description" : "Output only. The root cause of the most recent external destruction failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generationFailureReason" : {
                "description" : "Output only. The root cause of the most recent generation failure. Only present if state is GENERATION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED", "GENERATION_FAILED", "PENDING_EXTERNAL_DESTRUCTION", "EXTERNAL_DESTRUCTION_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "57301f47-7bbf-4501-b476-f97e9acb6d18",
    "name" : "Lists CryptoKeyVersions.",
    "request" : {
      "urlPath" : "/v1/m3o4uk4vfkcdfbinfn1ecippccv3918xodbmnuopc0lo7sz6feo86s1tqcj3v7hqz58gy96gcuplt0b30w1wby1sqd53ym50qvhjq719luqk5u5f5mvb78k7balahm6y3e1z7rlvt1mtswi8n/cryptoKeyVersions",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"totalSize\" : 1321107281,\n  \"nextPageToken\" : \"zmfw\",\n  \"cryptoKeyVersions\" : [ {\n    \"attestation\" : {\n      \"format\" : \"CAVIUM_V2_COMPRESSED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"u52mrk6df0h6sqqculkb75n29aoeauxes745wgirug41mp2g6mxpoyjuwugjb6c6zxwhfkzbx0el708zcx58dtpydfh4xddtcyt6fb3sps3bno7o7xwmaahd8f3k0n\", \"bhcn9ihpjvp7qnf273oehgv5mccws4js4d8tjr9n2702wmp4mpk3icqg1jae87gcec4al78dakdl72gzcybktq69oi73ylq3l\", \"r8zd0vs9ume7arncmoa\", \"ktvnkefe3plg4n3sm017i6waotpaphdojy7k5zfphlyagg0tuo2pfeubado5s5jilb8f4yjswn5j7b\", \"9lr4ajid2y1xmrznh9aijybuqudz9o07xozak184msh8w9s5x7kvwwijfe77290hf5veh0xwtyuulhegq5jsd8yb97qwgx5qm0i58\", \"hidlsy1p58uoqm5p37lgyfebr31w7hienn1xd8bjyhk5rn6w5yku1yqlewjyux86wb4j3d8icimi1yrryxx47hntgqq19xie5fre94a4f4gslg94pq32jc6vpww5zey9e2134gb7fajyz5oey8eztjub98sphgszww7pru0qcs9eetzltwro29xyc67yf\", \"5avo4xb7h1o57su0mua2qee0qwx1tr2etfm2ftg9y0hrf5y2jz2tdso3vw10o665bqnjzbg2sy9bm\" ],\n        \"caviumCerts\" : [ \"uof4gdqnph1ffir1x9cbxr6gd096hrtoytky9wd82k580d40qsor58z1xlrma4rwh70t74dyi9hfmech0qlqrt3lffet7nqonfjpbnni759wnz\" ],\n        \"googlePartitionCerts\" : [ \"mk0s2s\", \"rugx15t1yd32xmbnz9dcgputiownl459s50903exe61x0yn05em7thnnynt60a4kwwco4a8ejvj9c0bpg49ne7geflx30g5t83vuy5d2b2es4vpc91l1uci47546w1aa\" ]\n      },\n      \"content\" : \"Error nesciunt laudantium ea accusantium vel nisi. Ex ex quam quae amet saepe consectetur. Ea sit ducimus accusamus eos numquam.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"n55e1ufkzlqr73c6o9eq2iqx0j9o1l7qlph0jroxk8lz29798ph86451d36lh03rbrdfijvtqah1gryqtufianlhdduamqpi139csely0gh3eysngzyz2vaprolcha5qmfgr8sxastb3isqo1tz9zsyiw9b74omkfckkuhn57my6i3bfz4emnfj7gn7b98wizdn\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/954261\"\n    },\n    \"importJob\" : \"c0ebbzs4ciehlpxmomdia1m8t3xtnmba6rttyzoewknj178pirrkcijfjxnopet9gwjnwuat5aoz9ypafiiv70bbgs8dxof8slc1axt5c4dfqtl0m5r8s4766h7675me80t\",\n    \"generateTime\" : \"2022-09-01T10:56:57.543033Z\",\n    \"destroyTime\" : \"2023-02-19T08:28:57.543062Z\",\n    \"generationFailureReason\" : \"ewchiz84dx5ko3rw6kmlv9jvm1zwoo5btfoojgn3lrsuxio7z6w7iwvtqcgoc07shdxs1afd1ptj5gnnjh1nlndxadafs9h8je32i2xkmrzaz4ln89df\",\n    \"destroyEventTime\" : \"2023-02-23T11:02:57.543104Z\",\n    \"importFailureReason\" : \"qqzrhsompree1fpnadg1sedu9ulr3qv2v1ezg3\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2022-12-28T08:35:57.543145Z\",\n    \"name\" : \"Devin Heathcote\",\n    \"state\" : \"GENERATION_FAILED\",\n    \"protectionLevel\" : \"SOFTWARE\",\n    \"externalDestructionFailureReason\" : \"7jdvr14xdlc13iijgflls7i4eolapswwz11jbw9ljx8ea111nkfpdlqsghfnh9aovletyy86532z5x7zs07q0qpi76d44p4bernlql4broh6pejw9ciel\",\n    \"importTime\" : \"2023-01-13T09:27:57.543242Z\",\n    \"algorithm\" : \"HMAC_SHA512\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "57301f47-7bbf-4501-b476-f97e9acb6d18",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.543338Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.list",
          "schema" : {
            "description" : "Response message for KeyManagementService.ListCryptoKeyVersions.",
            "properties" : {
              "cryptoKeyVersions" : {
                "description" : "The list of CryptoKeyVersions.",
                "items" : {
                  "$ref" : "#/components/schemas/CryptoKeyVersion"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "A token to retrieve next page of results. Pass this value in ListCryptoKeyVersionsRequest.page_token to retrieve the next page of results.",
                "type" : "string"
              },
              "totalSize" : {
                "description" : "The total number of CryptoKeyVersions that matched the query.",
                "format" : "int32",
                "type" : "integer"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "bb1f9b7c-8391-4b0a-ad29-921b4dbfed27",
    "name" : "Update the version of a CryptoKey that will be used in Encrypt. Returns an error...",
    "request" : {
      "urlPath" : "/v1/Collen+Dach:updatePrimaryVersion",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"cryptoKeyBackend\" : \"wgsf3\",\n  \"nextRotationTime\" : \"2023-01-07T11:32:57.541957Z\",\n  \"rotationPeriod\" : \"97pw1vggl1nz500qsfq30162gfss1ehx38lukugalq\",\n  \"createTime\" : \"2022-04-14T10:34:57.541997Z\",\n  \"destroyScheduledDuration\" : \"6hnzsxvvsykwmvd4eobnbo80z83i0v9ky4qp5oacqtiqsh6akumbwvq7kmr0ntczz2h4agcs5ou8xhk00lf4m02uaogb1uioxf2r232o208yzx3m4qcuxrmrrfk58ye8r4fgdb6b\",\n  \"purpose\" : \"ASYMMETRIC_DECRYPT\",\n  \"name\" : \"Ms. Newton Gottlieb\",\n  \"versionTemplate\" : {\n    \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n    \"algorithm\" : \"RSA_DECRYPT_OAEP_3072_SHA1\"\n  },\n  \"importOnly\" : true,\n  \"labels\" : { },\n  \"primary\" : {\n    \"attestation\" : {\n      \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n      \"certChains\" : {\n        \"googleCardCerts\" : [ \"tr0jmq5w0vlv78zltkztugz\", \"eag3k8r98w92wlxb45558s7qrk3v6vrodwasod6kvl58wi8cpxzubj96gd7ma0gwdcltviw9srbpkkh9d58omn3dajskosbu3gt957n\", \"slg3yw18pjy4uo\", \"nv66ol2olq7jzn51gguwim0f08gzgzp65l1qt1oucuem86n845n0nb9gla51lddjn75nbs70crq3qsg0pl3m6owj5guix1jepd28oaw0gidplenbszmvjvk27wjulbkar8016qz7ehqo\", \"on0ld0chdymn7r80pm7xwcpdf2txqjjgmhnj43kmz8mfrm1rcax441zwdlihb7adq86g9qtcl9shqrj7xti6zsz4u955k\", \"lkhma5tqqzrwbm4jhaexnzzfilo7n2tbudpdj8e\", \"fl946m2013v3u598cmjte3kqdpi21b5xyfc8mymp3u9f7f0j0iwa9as00syl6qeblgrn51dlhtp7lsgdp26k1h8mt9ur1ab2a9idjt1yy9yfnsyizobkjn6k4swb33zh9stj92upb4zspqp69u6d6du5ohmx7g66gn0lmyba0gyh8nyl1660eblze0zihlh49hkln\", \"xfzsszytsmoucfeqleqaj6zkjf5n588ul6x5q159igpd9zpd5k0n33duthufjoe0n8xrxmcwgymjtkjo1zi9mx\" ],\n        \"caviumCerts\" : [ \"1lmtxivxna41n6\", \"qxcakbz7l6vlc9agpsvywfmh15aw5g9z0wkbjvu8wr8xtczmt6p6behc15zlwqlwr5ukueovqbroqmwnczfeuqzo5ql2pt5if0hv4reodn0cwfi\", \"fczaaqr1g6zqtwdfugfvt17p3vd217z5dkawhraxiicjavk3whyzehiuhjoj5vngovijgnfcdk4dpuhb8s8iheypu76j813aibjysde2tfaomkknq2x76btgq2wyqtzpg7pyg2azeve5ne37hhdat1r79ozlk2seujstoygjvkszq3fybzkjn4lkiedsp19mgv\", \"62jwfywdy6l7mkyc84l4w1\", \"oqi15wanrxctpzpvyctx335g66r5kihs2qohpfzrbp3l68rbci3vlo94p44wytc0izy29nasbbrkdjohv7e355hjnzbarq71x63f7yfmj4f0ry3tvo5eh6ruifk1xsa1frvdirpemka6ywgvntig4f9vubbrz3yn7plkat835qpa4l8oc5rxbljglkg\" ],\n        \"googlePartitionCerts\" : [ \"8s7kfl8mksz09qsfxildr4k5hbhvlvwq0kzenc5m59lv382bnb16e0pjong3jcaa07b2r3e2v59ldbug2fjir21n20e77h894zw87u9nhcvtkjnr3k7ji3glx54pa5nprk942p5ozd9twcj8g8q3j5iynnhnwdxbkovqx42x19mb5m\" ]\n      },\n      \"content\" : \"Rerum aut et. Est numquam et. Iure dolore accusantium quo non sit accusamus accusantium.\"\n    },\n    \"externalProtectionLevelOptions\" : {\n      \"ekmConnectionKeyPath\" : \"6q8mgc1wjwin7d6bsr4er0b3t848z2lmc077zeus5gd1rj1y5ew4am6u7vo2ve\",\n      \"externalKeyUri\" : \"https://web.example.mocklab.io/108958\"\n    },\n    \"importJob\" : \"lafg27lhy8s0dv1k7bjmai464fb17oyw9t0oce8gmomi5ocqu5yh20jkgd38e1uzzm2qbs1clwmu7imk\",\n    \"generateTime\" : \"2023-02-27T10:45:57.542366Z\",\n    \"destroyTime\" : \"2022-09-18T10:54:57.542394Z\",\n    \"generationFailureReason\" : \"9mm2gezi2j8v76l7os7uricvxdai3qd2dpymk05iofwcac007lt2c40bmd5r4rbx9h644b83qi5194q3vxanzsexqjm5b7xgvms03y0sgvgcpim7d19nsno64dobkajzhppqupthufp3qsz50pqz2091crgqlhmd2q8u9pynlhngf77s1c27ff9a2rh74y0ef1izg4\",\n    \"destroyEventTime\" : \"2022-07-31T08:20:57.542434Z\",\n    \"importFailureReason\" : \"b7zqvvmsd7usa8ujz4wd8e5kj30ibcv3br8ub490rdsfrdmm3u3u55xcs3iqb3axrjmlumcgzzzp039cm5c8bjjdwl44ea3lpv0n9868dqwztrm3fdle6yb8g2x7frvv3tc7e68ustrpavqi7fgejv7s8x\",\n    \"reimportEligible\" : false,\n    \"createTime\" : \"2023-02-28T10:28:57.542478Z\",\n    \"name\" : \"Alyssa Yundt\",\n    \"state\" : \"IMPORT_FAILED\",\n    \"protectionLevel\" : \"SOFTWARE\",\n    \"externalDestructionFailureReason\" : \"apiaamogb8fvh9gqvqqv6hx4i0xlgii99qyxno93fo114y1g0bkwdf4\",\n    \"importTime\" : \"2022-08-07T09:32:57.542571Z\",\n    \"algorithm\" : \"RSA_SIGN_RAW_PKCS1_4096\"\n  }\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bb1f9b7c-8391-4b0a-ad29-921b4dbfed27",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.542746Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.updatePrimaryVersion",
          "schema" : {
            "description" : "A CryptoKey represents a logical key that can be used for cryptographic operations. A CryptoKey is made up of zero or more versions, which represent the actual key material used in cryptographic operations.",
            "properties" : {
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKey was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "cryptoKeyBackend" : {
                "description" : "Immutable. The resource name of the backend environment where the key material for all CryptoKeyVersions associated with this CryptoKey reside and where all related cryptographic operations are performed. Only applicable if CryptoKeyVersions have a ProtectionLevel of EXTERNAL_VPC, with the resource name in the format `projects/*/locations/*/ekmConnections/*`. Note, this list is non-exhaustive and may apply to additional ProtectionLevels in the future.",
                "type" : "string"
              },
              "destroyScheduledDuration" : {
                "description" : "Immutable. The period of time that versions of this key spend in the DESTROY_SCHEDULED state before transitioning to DESTROYED. If not specified at creation time, the default duration is 24 hours.",
                "format" : "google-duration",
                "type" : "string"
              },
              "importOnly" : {
                "description" : "Immutable. Whether this key may contain imported versions only.",
                "type" : "boolean"
              },
              "labels" : {
                "additionalProperties" : {
                  "type" : "string"
                },
                "description" : "Labels with user-defined metadata. For more information, see [Labeling Keys](https://cloud.google.com/kms/docs/labeling-keys).",
                "type" : "object"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKey in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "nextRotationTime" : {
                "description" : "At next_rotation_time, the Key Management Service will automatically: 1. Create a new version of this CryptoKey. 2. Mark the new version as primary. Key rotations performed manually via CreateCryptoKeyVersion and UpdateCryptoKeyPrimaryVersion do not affect next_rotation_time. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-datetime",
                "type" : "string"
              },
              "primary" : {
                "$ref" : "#/components/schemas/CryptoKeyVersion"
              },
              "purpose" : {
                "description" : "Immutable. The immutable purpose of this CryptoKey.",
                "enum" : [ "CRYPTO_KEY_PURPOSE_UNSPECIFIED", "ENCRYPT_DECRYPT", "ASYMMETRIC_SIGN", "ASYMMETRIC_DECRYPT", "MAC" ],
                "type" : "string"
              },
              "rotationPeriod" : {
                "description" : "next_rotation_time will be advanced by this period when the service automatically rotates a key. Must be at least 24 hours and at most 876,000 hours. If rotation_period is set, next_rotation_time must also be set. Keys with purpose ENCRYPT_DECRYPT support automatic rotation. For other keys, this field must be omitted.",
                "format" : "google-duration",
                "type" : "string"
              },
              "versionTemplate" : {
                "$ref" : "#/components/schemas/CryptoKeyVersionTemplate"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "4c78ebaa-fa5e-44c9-89fd-090f56bd5867",
    "name" : "Restore a CryptoKeyVersion in the DESTROY_SCHEDULED state. Upon restoration of t...",
    "request" : {
      "urlPath" : "/v1/Ms.+Dalia+Hahn:restore",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V1_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"swroca5m87pbjd0csgyl4qqhga20yx3qcyav9z2y7ua4yqewz3usd47n5ynuwf0afqpjzvkrrf8rj17fn5ky1p4okeer1tlh4r2gtwwpag9cu4esbuejffksszn0ftbpo2u6p8p1ky6qrp3cf7l2ppf4a51t\", \"w9iost7wnot51q14ljmt5pnyox5qvsam33trgnqrsbfi4n4x0fkybdh250q41e88yt209ybyfm7bxy78a7xk48na6475ijk9y5t9bxzryligf0kit0yg3a1x5a0sv99gr7xg6n0arv7lczpyz9n0anzk0iao7366vsv291ky1l\", \"rexj1y67s823rc3qsxqx9lb3usbx07apeot9s9zfgvwh2xfc15h686zoggkgvmdv6vv9oz3r69hanuabxsj5n2fnesyzb31kv7ylxddv9wttbww73u5osbspkc1zvb740k07cr9byawrc2inps4apyxspgp4fxuj6rwzs0hipea38m3lx8q8y7nd7\" ],\n      \"caviumCerts\" : [ \"8vyj3njucehrfgve5750vhu151li4r0ndwu021oser7zgjoxhg8s8yzbcb5p5lhtvb6chxuh2jdeix0gjl\", \"0tfhoqaa0wbdwm60i8uzaswd3ygv8ifb30kel3kn8r1sblwem139rh6t8lf28rtnaxiajl\", \"s0s1fn4e8cy58q6xbdgfkvuye2aejub8pgvdbqbry8zs34smpa0wz6uw42fju995ayat3fx9hdhcp5fxq23ob6a3d6wbophun9pdo61cttttuldepo0a0kcuxaoi3p2jtp1ix6g7nzirr3rwimcy9f2jlzvlvyq4yaybkb7rm\" ],\n      \"googlePartitionCerts\" : [ \"15wua2insxz813aurl5ovyx023ebs27dni6eidxab9msbe0n013ypxp4iy0ozn5k4t2un7jl21m4vdq0qlspu2m34fwwldspnblusvtncogh0j9f4hs99nxrzp5n7de\", \"n5kumcndjovd9u7j314y6keg2vg06xt2yf66ooslkkqh1qsb5aqst18pqu84k9z9kpme1uh4kudian1bw3ic9itwf005rj5k9pv4d49nf1d2uskcz2kry1zk9at9x7m0rc\", \"li1xz0hjwseo5dajwjaqgp\", \"x44qc4b4o5raqxawxrcwv2jmbre3u9u461c5yzygvks0iz3ou2ce55gojjwedp1wh56n3vtd9u56tugv3qax2bu9ks9fd069hanwm87j2glv7yabovwo03potn32nfiag2o7rd191kagtl\", \"iyfjs6mkzosly1ylkbiqy31237f9hl7ywetgr6msvlyaopxq7zguyyxd8ji79fyk5e1zhsdty3v2bhtcvwfd7t80exiiq62u5lycu1eq1qat91n7bsdplw85bimmu7osn16cmgugvud3fcxos1r1k0kpst8vgxmm4hz5duralnqo66mn2okmo0kbjwuh4turn1a17m\", \"fmust3dnl0kdq7lz67l09kaaa91yamoo32oeuip39ppoh37qfpija2r3m0cb4n107bd2ldilijimjt873lrl5kmz1q\", \"dvt0pe2x22zepftl0g23iz\" ]\n    },\n    \"content\" : \"Aut ad eum recusandae enim. Tempora aliquam asperiores et quo. Quis porro quo quod consequatur quia repellendus non.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"wdkzf8h8h0rlhuxnsqxqk8l3t8mma2klueychxwtb13crecbo1t7575m\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/160322\"\n  },\n  \"importJob\" : \"rxhg1mro4i0iwvaved0v126vh8xy4wj7m0p\",\n  \"generateTime\" : \"2022-11-20T09:40:57.541516Z\",\n  \"destroyTime\" : \"2022-07-01T12:10:57.541543Z\",\n  \"generationFailureReason\" : \"085eybc0ocbsrfmki5k9zkysuky5as3ac87lt2xzsuiqk9eyffs1ztplsi3nlhf9g89vbwsbs6xd16m7yfoi1nm5o91uuo4g\",\n  \"destroyEventTime\" : \"2022-05-22T11:39:57.541584Z\",\n  \"importFailureReason\" : \"qcvebfifxnxja9vp7itnhco9k93\",\n  \"reimportEligible\" : false,\n  \"createTime\" : \"2022-10-21T09:49:57.541623Z\",\n  \"name\" : \"Lizeth Skiles\",\n  \"state\" : \"PENDING_GENERATION\",\n  \"protectionLevel\" : \"PROTECTION_LEVEL_UNSPECIFIED\",\n  \"externalDestructionFailureReason\" : \"cw3oj0szb5rcbe13fbx922htbgfsy1oh8x4pbufrmn4q4ol2jp\",\n  \"importTime\" : \"2022-06-24T10:19:57.541718Z\",\n  \"algorithm\" : \"RSA_DECRYPT_OAEP_2048_SHA1\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4c78ebaa-fa5e-44c9-89fd-090f56bd5867",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.541903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.restore",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalDestructionFailureReason" : {
                "description" : "Output only. The root cause of the most recent external destruction failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generationFailureReason" : {
                "description" : "Output only. The root cause of the most recent generation failure. Only present if state is GENERATION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED", "GENERATION_FAILED", "PENDING_EXTERNAL_DESTRUCTION", "EXTERNAL_DESTRUCTION_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "ed8ca434-f32b-459d-9648-71085150f398",
    "name" : "Verifies MAC tag using a CryptoKeyVersion with CryptoKey.purpose MAC, and return...",
    "request" : {
      "urlPath" : "/v1/Huey+Reichel:macVerify",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"success\" : true,\n  \"name\" : \"Karen Hartmann\",\n  \"protectionLevel\" : \"EXTERNAL\",\n  \"verifiedMacCrc32c\" : false,\n  \"verifiedSuccessIntegrity\" : false,\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ed8ca434-f32b-459d-9648-71085150f398",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.541247Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macVerify",
          "schema" : {
            "description" : "Response message for KeyManagementService.MacVerify.",
            "properties" : {
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for verification. Check this field to verify that the intended resource was used for verification.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for verification.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "success" : {
                "description" : "This field indicates whether or not the verification operation for MacVerifyRequest.mac over MacVerifyRequest.data was successful.",
                "type" : "boolean"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacVerifyRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedMacCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacVerifyRequest.mac_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacVerifyRequest.mac_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacVerifyRequest.mac_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedSuccessIntegrity" : {
                "description" : "Integrity verification field. This value is used for the integrity verification of [MacVerifyResponse.success]. If the value of this field contradicts the value of [MacVerifyResponse.success], discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "27fe146a-9a09-4ba0-a8c4-8c0d5e4d01a4",
    "name" : "Signs data using a CryptoKeyVersion with CryptoKey.purpose MAC, producing a tag ...",
    "request" : {
      "urlPath" : "/v1/Fabian+Waelchi+III:macSign",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"macCrc32c\" : \"ihf0xw40s9m7n1n34js2ss2okm36h0r\",\n  \"name\" : \"Mercedez Greenfelder\",\n  \"protectionLevel\" : \"HSM\",\n  \"mac\" : \"31xqholyndf2uvkkmubj28\",\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "27fe146a-9a09-4ba0-a8c4-8c0d5e4d01a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.541066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.macSign",
          "schema" : {
            "description" : "Response message for KeyManagementService.MacSign.",
            "properties" : {
              "mac" : {
                "description" : "The created signature.",
                "format" : "byte",
                "type" : "string"
              },
              "macCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned MacSignResponse.mac. An integrity check of MacSignResponse.mac can be performed by computing the CRC32C checksum of MacSignResponse.mac and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for signing.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether MacSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that MacSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set MacSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "6715eb3a-fc76-4fa5-a4de-915d04fa81d1",
    "name" : "Encrypts data, so that it can only be recovered by a call to Decrypt. The Crypto...",
    "request" : {
      "urlPath" : "/v1/Jonnie+Thompson:encrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verifiedPlaintextCrc32c\" : true,\n  \"ciphertext\" : \"5lb0wu3redvcr1ow0nj1m4ti4r2ni0tr6wuxpgthap3046g8ef8cgl8be20jsbq0hhuy4t1hak15b8j7cx4ges200iuh3gkaej77abfkkidaf7o6\",\n  \"verifiedAdditionalAuthenticatedDataCrc32c\" : false,\n  \"name\" : \"Faustino Kovacek I\",\n  \"protectionLevel\" : \"HSM\",\n  \"ciphertextCrc32c\" : \"7lhj1nqqib84jpu0schv3pdllpcpsugp5moav071etpgeay8co1zvdmf7ech4vf5ue17uclfwmx6jos5311n6uxavxxnza5v5x1bezn0moc8iaccf7pnj9468ywqek4qjvvsm2n7bpnh39movu2fgl1iu9wuxk6fycw57x3mv76hhc6ovywkq7ij9im743oy8lzjcz\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6715eb3a-fc76-4fa5-a4de-915d04fa81d1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.540869Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.encrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.Encrypt.",
            "properties" : {
              "ciphertext" : {
                "description" : "The encrypted data.",
                "format" : "byte",
                "type" : "string"
              },
              "ciphertextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned EncryptResponse.ciphertext. An integrity check of EncryptResponse.ciphertext can be performed by computing the CRC32C checksum of EncryptResponse.ciphertext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used in encryption. Check this field to verify that the intended resource was used for encryption.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in encryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedAdditionalAuthenticatedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether EncryptRequest.additional_authenticated_data_crc32c was received by KeyManagementService and used for the integrity verification of the AAD. A false value of this field indicates either that EncryptRequest.additional_authenticated_data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.additional_authenticated_data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedPlaintextCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether EncryptRequest.plaintext_crc32c was received by KeyManagementService and used for the integrity verification of the plaintext. A false value of this field indicates either that EncryptRequest.plaintext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set EncryptRequest.plaintext_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "d55fad2a-c626-4df9-9a62-94a4fba510b2",
    "name" : "Schedule a CryptoKeyVersion for destruction. Upon calling this method, CryptoKey...",
    "request" : {
      "urlPath" : "/v1/Gwyneth+Sipes:destroy",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"CAVIUM_V2_COMPRESSED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"b33mvqlj1ip85ctgp6um39ash5hk2uqaywrpynq0m4s1cbi92pqfks3vwayjinj90bw0izptnlgj2nzqhp95wbh3khz46yaez86vz\", \"mr4idzlotdzro8g5yecrpd9lldvypskik2v5b41w45pm8dtp6ufl2bmbiw2j0d9n64ni8l79z4lhcq50n10a55lotb0o20rfr\", \"727538t2dyne2rcdt4ex7vbhmv56mwqey4s7rdyos3lni73jvjirr9pw69k3pilqwlcw4hbpr1bg140mhf3kek244ud54ytjfhu7ml6d4ekx152nwrgajtbka5b8ipkrxbro44d79j446b7hu\", \"um2kw99raigdowx6bs08484l6suokhxllfzbvhpsfj4d\", \"ft8zw5kgn7ysat75ali4rn5avhqqzdvdpjvzy2w2cmq57rivihoin8n7rs647q8e7pyg9w94vprhfguvjq875d3v58gvv8kd1zjfswprrssbr0373pgdix8drzlqmrfgrsgsf21djsppe7gddhaa5m8l858uc74eps4e4nl414bg2tbck\" ],\n      \"caviumCerts\" : [ \"zf1h6auqp7e8k8xckvf0dfxsq3zof6xemeakdxzfwjhnl2nj8dm9gz6v9kmpz19fx9t8acdtkcm3g0y7696t4pe9u2fqjz\", \"c6o1xc9oe6cw2y1qal2378j75o1eq5stfuxgt6jf6oebboykm0yydxo2ibfziwwohs64z79yx0kr82nvn1gswj41ct6o82kf9qip03vg7di60x6aop3x42lz8e5k4ursnx5jgb5p9cdeoza6970x1rdx8gl9m4wrso4unl3amxhwkmut6t\", \"4yq6mgndhd67buy34i0mom6f6o5ulv1xifnmv\", \"6olte1qzjkbvf8y\", \"3tfdqffi72cqqsrdrkhwz6tn9pz254lva936s1p52punzxypef0h83cr0bs592qqomb3iiv2264xcqpg12sabthquof6131luvdy4qchnole3vp9eftltpo5qxv5rmy93h5haahl0p2cq50xlcn5o2vko6ympndu0cl78msfd0b2fb9z53d2mcgyyre2h7b7x5j0qw\", \"mp1o9ghmg0zbr5iehxeegglf6jgseh8clqimkx7gf1a9m80j851cg8wo1o9xrxg20lbz2plta8uyp831ksibpmn\" ],\n      \"googlePartitionCerts\" : [ \"zo9dsfjf17ik6uv52oqlnbm96l8ltz2xznt308ekaivagdqgmo8iavs526hbmpisdc5w0wp4r9yp9flsnwc80wvr4gmvj\", \"j9y8l0jx19jmmy72t0cm8z9duk0v8aa31ntu5250xlqbad2uf8vfbowiw2h\", \"ya3emq9ejmnw6r4nst7yplnurm12e0uilsals3ibpu68az9vd2hcgzoe44c0c2s6yqsbpqcffaiwrt467xtk88ztfg28o\", \"dketb6wu5k9jqqz54dthu8js3a5uky00857ewjpxolkqt1ivyvkmjxc5qbvhf507tedsslo137bgtt0bo7fv8218enzk8eh5ym1\" ]\n    },\n    \"content\" : \"Magnam ea cum. Dignissimos aut cupiditate qui dolorem minima. Et itaque sequi ut beatae.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"whmh6maopeeoti1ghb5ycd\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/214523\"\n  },\n  \"importJob\" : \"9x0bgavek4kxuxptqksgcqvhncf7nmg7i9yklqnx43uaenylyudkv77bc51zwhyei\",\n  \"generateTime\" : \"2022-08-31T09:30:57.54026Z\",\n  \"destroyTime\" : \"2022-09-22T11:47:57.540288Z\",\n  \"generationFailureReason\" : \"okipkxu81z9d52y84a9\",\n  \"destroyEventTime\" : \"2023-02-23T08:58:57.540327Z\",\n  \"importFailureReason\" : \"d4z40kalsm8yqj\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-07-05T08:31:57.540369Z\",\n  \"name\" : \"Sergio Littel\",\n  \"state\" : \"PENDING_GENERATION\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\",\n  \"externalDestructionFailureReason\" : \"s0hya1t5jo5o9l6aa2437tiq7yzebtkk8yy5llt1ns0hscwla9qjxf0youn7u50yqrv7giirvtzuz9b805v1x04y7xbqjpk5fj4oepn2ne406u8pm7ts61r2t9mbym79wed1n1c7i89q61m1xpm8tm4qrovfr01qi5migf2\",\n  \"importTime\" : \"2022-09-01T10:06:57.540465Z\",\n  \"algorithm\" : \"HMAC_SHA512\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d55fad2a-c626-4df9-9a62-94a4fba510b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.540654Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.destroy",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalDestructionFailureReason" : {
                "description" : "Output only. The root cause of the most recent external destruction failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generationFailureReason" : {
                "description" : "Output only. The root cause of the most recent generation failure. Only present if state is GENERATION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED", "GENERATION_FAILED", "PENDING_EXTERNAL_DESTRUCTION", "EXTERNAL_DESTRUCTION_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "01251e40-e998-4014-9fc8-b9ab92aa8091",
    "name" : "Decrypts data that was protected by Encrypt. The CryptoKey.purpose must be ENCRY...",
    "request" : {
      "urlPath" : "/v1/Ms.+Belen+Strosin:decrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"plaintextCrc32c\" : \"rgazrhj426odbrmoc0h4xh1tygelu72t\",\n  \"plaintext\" : \"cnvji4rhoxkr87zciyueflnxrdm2qc0h2e85gr596htkw51zsws3d0qenobqemqhnh55gyaw8kns432kfnlzjjizlhn3yuw559ya2g9kgn17j5fhzb7v64l0y3xs8z8faliauw6vwm984zvx6nvrda6iajn3r7ij6j7zosq8c4uldm3p64punwqrh9wqjo\",\n  \"usedPrimary\" : false,\n  \"protectionLevel\" : \"EXTERNAL\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "01251e40-e998-4014-9fc8-b9ab92aa8091",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.539971Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.decrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.Decrypt.",
            "properties" : {
              "plaintext" : {
                "description" : "The decrypted data originally supplied in EncryptRequest.plaintext.",
                "format" : "byte",
                "type" : "string"
              },
              "plaintextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned DecryptResponse.plaintext. An integrity check of DecryptResponse.plaintext can be performed by computing the CRC32C checksum of DecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: receiving this response message indicates that KeyManagementService is able to successfully decrypt the ciphertext. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in decryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "usedPrimary" : {
                "description" : "Whether the Decryption was performed using the primary key version.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "8a0565ae-5de6-4b3e-8cbc-9a1080c10495",
    "name" : "Signs data using a CryptoKeyVersion with CryptoKey.purpose ASYMMETRIC_SIGN, prod...",
    "request" : {
      "urlPath" : "/v1/Erasmo+Murazik+III:asymmetricSign",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"verifiedDigestCrc32c\" : false,\n  \"signature\" : \"ck2gn5ynd144k1i\",\n  \"signatureCrc32c\" : \"0n1h7iexorjpcfujoadv7jyo3y0uz605uq26cm6yw78li0wkvqmuxva1lbvd544srnkg50vu16ivl1i4xt2cm47fn5ns1o2ns\",\n  \"name\" : \"Wes Rohan III\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\",\n  \"verifiedDataCrc32c\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8a0565ae-5de6-4b3e-8cbc-9a1080c10495",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.539818Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricSign",
          "schema" : {
            "description" : "Response message for KeyManagementService.AsymmetricSign.",
            "properties" : {
              "name" : {
                "description" : "The resource name of the CryptoKeyVersion used for signing. Check this field to verify that the intended resource was used for signing.",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used for signing.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "signature" : {
                "description" : "The created signature.",
                "format" : "byte",
                "type" : "string"
              },
              "signatureCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned AsymmetricSignResponse.signature. An integrity check of AsymmetricSignResponse.signature can be performed by computing the CRC32C checksum of AsymmetricSignResponse.signature and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "verifiedDataCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricSignRequest.data_crc32c was received by KeyManagementService and used for the integrity verification of the data. A false value of this field indicates either that AsymmetricSignRequest.data_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.data_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              },
              "verifiedDigestCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricSignRequest.digest_crc32c was received by KeyManagementService and used for the integrity verification of the digest. A false value of this field indicates either that AsymmetricSignRequest.digest_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricSignRequest.digest_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "4a342884-df55-4d85-879b-5fa4ca0b5ae1",
    "name" : "Decrypts data that was encrypted with a public key retrieved from GetPublicKey c...",
    "request" : {
      "urlPath" : "/v1/Sophie+Fritsch:asymmetricDecrypt",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"plaintextCrc32c\" : \"pr5gqf0a1ly9yq8k93ylhfa5bhwpaww8ogp2njf\",\n  \"verifiedCiphertextCrc32c\" : false,\n  \"plaintext\" : \"d6ny1iw7eoq57mfbbromyoku0873c4g521ymfjb3zwhqpnx7fbb1ozstz4w2b90fhz7ybftdidhx27c7yhb77zxo3qfwm4m2mubqcwa2zu4sha6j0kzqdjfn\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a342884-df55-4d85-879b-5fa4ca0b5ae1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.539603Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.asymmetricDecrypt",
          "schema" : {
            "description" : "Response message for KeyManagementService.AsymmetricDecrypt.",
            "properties" : {
              "plaintext" : {
                "description" : "The decrypted data originally encrypted with the matching public key.",
                "format" : "byte",
                "type" : "string"
              },
              "plaintextCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned AsymmetricDecryptResponse.plaintext. An integrity check of AsymmetricDecryptResponse.plaintext can be performed by computing the CRC32C checksum of AsymmetricDecryptResponse.plaintext and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion used in decryption.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "verifiedCiphertextCrc32c" : {
                "description" : "Integrity verification field. A flag indicating whether AsymmetricDecryptRequest.ciphertext_crc32c was received by KeyManagementService and used for the integrity verification of the ciphertext. A false value of this field indicates either that AsymmetricDecryptRequest.ciphertext_crc32c was left unset or that it was not delivered to KeyManagementService. If you've set AsymmetricDecryptRequest.ciphertext_crc32c but this field is still false, discard the response and perform a limited number of retries.",
                "type" : "boolean"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "d3df08ba-019c-4030-a18a-37b3c96f0431",
    "name" : "Returns the public key for the given CryptoKeyVersion. The CryptoKey.purpose mus...",
    "request" : {
      "urlPath" : "/v1/Mrs.+Peggy+Zieme/publicKey",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"name\" : \"Paris Koch\",\n  \"pem\" : \"nym5k934absel0d0h7f1gx5tfdub3nwv769vurm9mgtbop7q8u77ml3fjg9fmoua2d7\",\n  \"protectionLevel\" : \"EXTERNAL_VPC\",\n  \"algorithm\" : \"RSA_SIGN_PSS_2048_SHA256\",\n  \"pemCrc32c\" : \"10b3doznpe3ljbjdksiy8a2av\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d3df08ba-019c-4030-a18a-37b3c96f0431",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.539446Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.getPublicKey",
          "schema" : {
            "description" : "The public key for a given CryptoKeyVersion. Obtained via GetPublicKey.",
            "properties" : {
              "algorithm" : {
                "description" : "The Algorithm associated with this key.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "type" : "string"
              },
              "name" : {
                "description" : "The name of the CryptoKeyVersion public key. Provided here for verification. NOTE: This field is in Beta.",
                "type" : "string"
              },
              "pem" : {
                "description" : "The public key, encoded in PEM format. For more information, see the [RFC 7468](https://tools.ietf.org/html/rfc7468) sections for [General Considerations](https://tools.ietf.org/html/rfc7468#section-2) and [Textual Encoding of Subject Public Key Info] (https://tools.ietf.org/html/rfc7468#section-13).",
                "type" : "string"
              },
              "pemCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned PublicKey.pem. An integrity check of PublicKey.pem can be performed by computing the CRC32C checksum of PublicKey.pem and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type. NOTE: This field is in Beta.",
                "format" : "int64",
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "The ProtectionLevel of the CryptoKeyVersion public key.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "a08d52d8-1c68-44fa-9355-3f390d1fc839",
    "name" : "Lists information about the supported locations for this service.",
    "request" : {
      "urlPath" : "/v1/Randell+Rempel+IV/locations",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"nextPageToken\" : \"4nc3hz4qejvia2or4hhtfju4hp91weg8l6nqjkfztmw4wdk5o6l9watdcnwx8jrzkikg5qnjaf0yv5q9vhsnfwbf\",\n  \"locations\" : [ {\n    \"metadata\" : { },\n    \"displayName\" : \"Charissa Swaniawski\",\n    \"locationId\" : \"53ns\",\n    \"name\" : \"Jarrett Carter I\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Joya Thiel\",\n    \"locationId\" : \"ent1\",\n    \"name\" : \"Nita Schinner\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Debbi Stiedemann\",\n    \"locationId\" : \"lw6i\",\n    \"name\" : \"Byron Williamson\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Lovella Kozey\",\n    \"locationId\" : \"p0v7\",\n    \"name\" : \"Dr. Miguelina Kiehn\",\n    \"labels\" : { }\n  }, {\n    \"metadata\" : { },\n    \"displayName\" : \"Noel Nicolas\",\n    \"locationId\" : \"v2ov\",\n    \"name\" : \"Fonda Dickens\",\n    \"labels\" : { }\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a08d52d8-1c68-44fa-9355-3f390d1fc839",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.539217Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.list",
          "schema" : {
            "description" : "The response message for Locations.ListLocations.",
            "properties" : {
              "locations" : {
                "description" : "A list of locations that matches the specified filter in the request.",
                "items" : {
                  "$ref" : "#/components/schemas/Location"
                },
                "type" : "array"
              },
              "nextPageToken" : {
                "description" : "The standard List next-page token.",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "062ec7d4-d3d7-4081-9562-74c084f50853",
    "name" : "Update a CryptoKeyVersion's metadata. state may be changed between ENABLED and D...",
    "request" : {
      "urlPath" : "/v1/Mr.+Junie+Larson",
      "method" : "PATCH"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"455iaaof5n1fxj4kd4\", \"2mcvr4j2now6j3t9azxevyh6kifs\", \"ndd94de44qe54hdvxv2ssg72q633l6mxsrg8ecl53k8pz\", \"ajs7a0sc9s6t8kyj1i0t0uchesjr3928rboappeh80am30k3s68zmj6fb25r5wccd9vyaqt5\", \"p1m5i6djl7yelo1woqfler85wt8yf8e341n39soraqsud0gb7486lh34ki4t14l8khs64elh9e2s217s63nd6pzis2ic3f5yzheek1gcfymg9ol3h0crdfzsdsca0azcvhkko8z9sc3zdr8dcfbluch1y1xlcw27l4d2ozo8f65z7cx\" ],\n      \"caviumCerts\" : [ \"fku2h3fgq3t31ezf3a8dwolcihq9ftfj96vpttx92dwnwp16p57gj1bw501xonfiqb1kaavdt6orp08bkkg8ui5ax9nbywhcotsf7ysu7z6wkfjsob92bptubru8n6uhmqnh20\", \"v91u2ygg4q8ftyxrsegt5e5wqp0b4ehz03jjsn1wp99ocfd3qtmofebyzyfese\", \"npjwpe6pf5ciz81bxmlr6mxv88xtls8nd2gz9gba2j\", \"noj7sp2n544k057gxx8elusahvef09c3csj69huabgz259uvoz4obqczyodu64fivqk816ja803xfonow7b8yuz858r0rcqjxx1y0l042opvki55xkrp6a8o255ty48hdya76\", \"0rmkbw5qqh5h8mh59myl3kfegrpcw1vv7ivqtko06ftnxrai56d8bszjn3awd\", \"w6wl8gf9goqulqb6tup0gg5wymd3f2y00e01mpo\" ],\n      \"googlePartitionCerts\" : [ \"k3q9j43zt9u7rkk38f76k51yx10swdbj5cwwn4ukbitsjsctptro2yzh5xk8hle9i53hgm0zhpnpm2i0yq32ct\", \"sj34nfowgjh8rg8u8k6jafd1tsi7m5n5ugt1024xr1vohjwhpja5kzr6u4o8wivc357dklwuodkv6y1o4v4crqm8wz7q79d9ehj3rv7rbgyml3y0v8ybj2iz512f9r\", \"1z0k957bv8362472pebzar34txapn219wmbslr450cead7odlsi5e0ziv7y60ao218fd74ogk1jso2zdhkdr4avbqb63ag1nyjl9h7ps7afm38ybem8aawf7jznuazjwchdnlpd5moiemxo7o6esayw5ldlixg68xvzzp5cqc8k65uucagojud9ex\", \"hpbu1ppwxpzku2os91khglso99foyf581lbldi7jxh2xlzty43y8fvzdpp1lswqv459u8agrxz8qvw9nvil\", \"bm8190cdqoz47xky40h688fxm1oy5at02gwdu7ol310i0pz8lu0olhzvilc56ew7p4c64vd6585vivngyxq5n0qrz9k46unxiigldu2ykyljghu95z7bg5zq7ak5hw2u4dluhixse3q6wxi7ewdt\" ]\n    },\n    \"content\" : \"Assumenda excepturi voluptatibus. Voluptates atque cumque dolor adipisci adipisci amet vel. Et ut a et sed. Velit aut quia ut minus distinctio. Aut sit tempora nobis rem deleniti.\"\n  },\n  \"externalProtectionLevelOptions\" : {\n    \"ekmConnectionKeyPath\" : \"e1xtwlu1yztljx8i3fudwc582rbl6njhakypbe0xza91zs98ayc18qi6haz5on3m8huao2edp6mb5hk5hdzg68zvy29dnre3q3twt8qn6uvmhmt4dgyeo6r70qhpd9vwl\",\n    \"externalKeyUri\" : \"https://web.example.mocklab.io/353581\"\n  },\n  \"importJob\" : \"1p8hoy1ug4iwuh1jh3x\",\n  \"generateTime\" : \"2023-02-17T10:45:57.537822Z\",\n  \"destroyTime\" : \"2022-05-01T12:16:57.53785Z\",\n  \"generationFailureReason\" : \"1u6fyq77266k145mklxxsdnuxtbythpumcuypozgtpt8pawbpud0uqkj0c0x8bdhr70yubplm8bzjce8lnq7bj9qjrds7z7aq2s40xy3okc4\",\n  \"destroyEventTime\" : \"2022-07-08T10:00:57.537892Z\",\n  \"importFailureReason\" : \"3cjefzfitvu0vlri2mdn4571twfbw57ey24dtlnd2q2ixfk5m7bny2b5x9w1mtowxr72nv0ed6tpd3wq5wcgqrrofntt8af64uvnb344p1q4ylylqy\",\n  \"reimportEligible\" : true,\n  \"createTime\" : \"2022-05-07T11:49:57.537935Z\",\n  \"name\" : \"Marty Turcotte\",\n  \"state\" : \"DESTROY_SCHEDULED\",\n  \"protectionLevel\" : \"SOFTWARE\",\n  \"externalDestructionFailureReason\" : \"pnevgv6u06sb23040sklv707r54mhfblf9\",\n  \"importTime\" : \"2022-12-12T10:45:57.538029Z\",\n  \"algorithm\" : \"HMAC_SHA512\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "062ec7d4-d3d7-4081-9562-74c084f50853",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.538258Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.cryptoKeys.cryptoKeyVersions.patch",
          "schema" : {
            "description" : "A CryptoKeyVersion represents an individual cryptographic key, and the associated key material. An ENABLED version can be used for cryptographic operations. For security reasons, the raw cryptographic key material represented by a CryptoKeyVersion can never be viewed or exported. It can only be used to encrypt, decrypt, or sign data when an authorized user or application invokes Cloud KMS.",
            "properties" : {
              "algorithm" : {
                "description" : "Output only. The CryptoKeyVersionAlgorithm that this CryptoKeyVersion supports.",
                "enum" : [ "CRYPTO_KEY_VERSION_ALGORITHM_UNSPECIFIED", "GOOGLE_SYMMETRIC_ENCRYPTION", "RSA_SIGN_PSS_2048_SHA256", "RSA_SIGN_PSS_3072_SHA256", "RSA_SIGN_PSS_4096_SHA256", "RSA_SIGN_PSS_4096_SHA512", "RSA_SIGN_PKCS1_2048_SHA256", "RSA_SIGN_PKCS1_3072_SHA256", "RSA_SIGN_PKCS1_4096_SHA256", "RSA_SIGN_PKCS1_4096_SHA512", "RSA_SIGN_RAW_PKCS1_2048", "RSA_SIGN_RAW_PKCS1_3072", "RSA_SIGN_RAW_PKCS1_4096", "RSA_DECRYPT_OAEP_2048_SHA256", "RSA_DECRYPT_OAEP_3072_SHA256", "RSA_DECRYPT_OAEP_4096_SHA256", "RSA_DECRYPT_OAEP_4096_SHA512", "RSA_DECRYPT_OAEP_2048_SHA1", "RSA_DECRYPT_OAEP_3072_SHA1", "RSA_DECRYPT_OAEP_4096_SHA1", "EC_SIGN_P256_SHA256", "EC_SIGN_P384_SHA384", "EC_SIGN_SECP256K1_SHA256", "HMAC_SHA256", "HMAC_SHA1", "HMAC_SHA384", "HMAC_SHA512", "HMAC_SHA224", "EXTERNAL_SYMMETRIC_ENCRYPTION" ],
                "readOnly" : true,
                "type" : "string"
              },
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyEventTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was destroyed. Only present if state is DESTROYED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "destroyTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material is scheduled for destruction. Only present if state is DESTROY_SCHEDULED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "externalDestructionFailureReason" : {
                "description" : "Output only. The root cause of the most recent external destruction failure. Only present if state is EXTERNAL_DESTRUCTION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "externalProtectionLevelOptions" : {
                "$ref" : "#/components/schemas/ExternalProtectionLevelOptions"
              },
              "generateTime" : {
                "description" : "Output only. The time this CryptoKeyVersion's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generationFailureReason" : {
                "description" : "Output only. The root cause of the most recent generation failure. Only present if state is GENERATION_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importFailureReason" : {
                "description" : "Output only. The root cause of the most recent import failure. Only present if state is IMPORT_FAILED.",
                "readOnly" : true,
                "type" : "string"
              },
              "importJob" : {
                "description" : "Output only. The name of the ImportJob used in the most recent import of this CryptoKeyVersion. Only present if the underlying key material was imported.",
                "readOnly" : true,
                "type" : "string"
              },
              "importTime" : {
                "description" : "Output only. The time at which this CryptoKeyVersion's key material was most recently imported.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this CryptoKeyVersion in the format `projects/*/locations/*/keyRings/*/cryptoKeys/*/cryptoKeyVersions/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Output only. The ProtectionLevel describing how crypto operations are performed with this CryptoKeyVersion.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "readOnly" : true,
                "type" : "string"
              },
              "reimportEligible" : {
                "description" : "Output only. Whether or not this key version is eligible for reimport, by being specified as a target in ImportCryptoKeyVersionRequest.crypto_key_version.",
                "readOnly" : true,
                "type" : "boolean"
              },
              "state" : {
                "description" : "The current state of the CryptoKeyVersion.",
                "enum" : [ "CRYPTO_KEY_VERSION_STATE_UNSPECIFIED", "PENDING_GENERATION", "ENABLED", "DISABLED", "DESTROYED", "DESTROY_SCHEDULED", "PENDING_IMPORT", "IMPORT_FAILED", "GENERATION_FAILED", "PENDING_EXTERNAL_DESTRUCTION", "EXTERNAL_DESTRUCTION_FAILED" ],
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "fbfe4708-1c4b-46d9-bbf8-3e62487db9f2",
    "name" : "Returns metadata for a given ImportJob.",
    "request" : {
      "urlPath" : "/v1/Dr.+Kent+Hintz",
      "method" : "GET"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"expireEventTime\" : \"2022-05-20T11:12:57.536876Z\",\n  \"attestation\" : {\n    \"format\" : \"ATTESTATION_FORMAT_UNSPECIFIED\",\n    \"certChains\" : {\n      \"googleCardCerts\" : [ \"44n0bam3h5phthuud2s49hdpaxz59iogfbgt23day3zvtfq7d7t7cpxiq8vm\", \"btucra42ovm9zta9jt3x6dg612mn8bswvm99p9djal5607tq0\", \"m03rkhhw172b3ukncyh5ant2vqcs1drs9wfepwrlkygdn9a9h6xzndtsqk0qycvk9wto62rds1sgjddltb8q\", \"wwmiwhbut4mtv4\", \"9boyuznf8im3albx0r81izdkgse4h7vwietlrymsp8ixbim5ixxvv6yttl815pysrfs4y7a2v9gn6avava7jla282y\", \"lmcu60zixik0o0rva82oq1c1vsk1txtth8o49omk3ago0ftj978yypkvot1qt\", \"s4ih86mfqnihp9jn1usoa19\" ],\n      \"caviumCerts\" : [ \"edgmca3ryqfav7snp1lr0lfrehxftxv53s5fx9y8o1674iuli3vpy3y3egqy7cbj224ei7q44tccbqqn8mtn76cns9apsx4f7vegvsqic0mjcqwl5ir1\", \"02wyoqnt\", \"efh2udodz5dogtv9gmfqo7yuunwq1y48783a0csssow4kq7upu7r7j6ki5cwst3c7lun028tdq2lng9ypsbki50o1x8ewrs0io7svosna964lrrfp3q3hdok2oarpsp41vypva51gddgq6bf7ntsfymvepggn71gzl23p0lxmsvam\", \"lpor6wokiph3vvlmrtipjoe3cl85ay7wpnbi51c433n3ehgloiyfcdzym0oivuds30dvyfsyacq6nssa0zntulmrw0ql9dgnf6ef59n488clfp9gh8m0ofufz2ytd1nypjai7s1z5gzbf3m95lxj2g0660gye7855mubb4kbwaetj34vxrpvp8c8nc0tlyz82b8u\" ],\n      \"googlePartitionCerts\" : [ \"dyvsl2u4ic2b1nzeqjvlw77\", \"mmi35wvody0iwikbheahrat9el9ukuc09m9f4kqe5a683v1ffq1j72nye3redmplrpkqmm1b9ytzvywptqqglv0bjv8p82nu7s\", \"o2a8tg5tun9gxscafbsg33qbjlyjmgh4bibkcypjxmyz13uxxnw24jljav2wkcina56ig1map0hzu0rpb4vlz276gfa82wcjym6zd5ij3e0364fhuy99y4d52gvpcwzaa1k6amkluv\" ]\n    },\n    \"content\" : \"A eum qui reprehenderit. Maiores nihil provident debitis voluptatem ipsam. Sit libero hic occaecati ut iste. Recusandae delectus facere quaerat est. Quam velit deleniti explicabo quia quia vitae ab.\"\n  },\n  \"expireTime\" : \"2022-06-09T10:59:57.537058Z\",\n  \"createTime\" : \"2022-10-04T11:39:57.537086Z\",\n  \"importMethod\" : \"RSA_OAEP_3072_SHA1_AES_256\",\n  \"name\" : \"Natalia Medhurst I\",\n  \"publicKey\" : {\n    \"pem\" : \"8kkatvj9zln8p1nmu3nsn7pddid5ryqfpgqnb92qdi7zx15is2p63by36d9v6vnoqc5wn96fi54hxegsm9iao5udmsciavv1h9gjhcja8tqfiem839wlcbtqrybw69zdcavo8ioilqyc32pnqwtubi2qs09avw\"\n  },\n  \"state\" : \"IMPORT_JOB_STATE_UNSPECIFIED\",\n  \"generateTime\" : \"2023-02-01T09:11:57.537194Z\",\n  \"protectionLevel\" : \"EXTERNAL\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fbfe4708-1c4b-46d9-bbf8-3e62487db9f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.537521Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.keyRings.importJobs.get",
          "schema" : {
            "description" : "An ImportJob can be used to create CryptoKeys and CryptoKeyVersions using pre-existing key material, generated outside of Cloud KMS. When an ImportJob is created, Cloud KMS will generate a \"wrapping key\", which is a public/private key pair. You use the wrapping key to encrypt (also known as wrap) the pre-existing key material to protect it during the import process. The nature of the wrapping key depends on the choice of import_method. When the wrapping key generation is complete, the state will be set to ACTIVE and the public_key can be fetched. The fetched public key can then be used to wrap your pre-existing key material. Once the key material is wrapped, it can be imported into a new CryptoKeyVersion in an existing CryptoKey by calling ImportCryptoKeyVersion. Multiple CryptoKeyVersions can be imported with a single ImportJob. Cloud KMS uses the private key portion of the wrapping key to unwrap the key material. Only Cloud KMS has access to the private key. An ImportJob expires 3 days after it is created. Once expired, Cloud KMS will no longer be able to import or unwrap any key material that was wrapped with the ImportJob's public key. For more information, see [Importing a key](https://cloud.google.com/kms/docs/importing-a-key).",
            "properties" : {
              "attestation" : {
                "$ref" : "#/components/schemas/KeyOperationAttestation"
              },
              "createTime" : {
                "description" : "Output only. The time at which this ImportJob was created.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireEventTime" : {
                "description" : "Output only. The time this ImportJob expired. Only present if state is EXPIRED.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "expireTime" : {
                "description" : "Output only. The time at which this ImportJob is scheduled for expiration and can no longer be used to import key material.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "generateTime" : {
                "description" : "Output only. The time this ImportJob's key material was generated.",
                "format" : "google-datetime",
                "readOnly" : true,
                "type" : "string"
              },
              "importMethod" : {
                "description" : "Required. Immutable. The wrapping method to be used for incoming key material.",
                "enum" : [ "IMPORT_METHOD_UNSPECIFIED", "RSA_OAEP_3072_SHA1_AES_256", "RSA_OAEP_4096_SHA1_AES_256", "RSA_OAEP_3072_SHA256_AES_256", "RSA_OAEP_4096_SHA256_AES_256", "RSA_OAEP_3072_SHA256", "RSA_OAEP_4096_SHA256" ],
                "type" : "string"
              },
              "name" : {
                "description" : "Output only. The resource name for this ImportJob in the format `projects/*/locations/*/keyRings/*/importJobs/*`.",
                "readOnly" : true,
                "type" : "string"
              },
              "protectionLevel" : {
                "description" : "Required. Immutable. The protection level of the ImportJob. This must match the protection_level of the version_template on the CryptoKey you attempt to import into.",
                "enum" : [ "PROTECTION_LEVEL_UNSPECIFIED", "SOFTWARE", "HSM", "EXTERNAL", "EXTERNAL_VPC" ],
                "type" : "string"
              },
              "publicKey" : {
                "$ref" : "#/components/schemas/WrappingPublicKey"
              },
              "state" : {
                "description" : "Output only. The current state of the ImportJob, indicating if it can be used.",
                "enum" : [ "IMPORT_JOB_STATE_UNSPECIFIED", "PENDING_GENERATION", "ACTIVE", "EXPIRED" ],
                "readOnly" : true,
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "1ca389a5-6b99-44dc-8f81-3e0756d99b07",
    "name" : "Generate random bytes using the Cloud KMS randomness source in the provided loca...",
    "request" : {
      "urlPath" : "/v1/haegy1e4kengto70w90vof9t64xoeftlmklo3sx0z36z8n9waq:generateRandomBytes",
      "method" : "POST"
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"dataCrc32c\" : \"wj0s0qhwguz0sy34xxk53km1ytivp3xojujv8ahjs5im9hfe\",\n  \"data\" : \"qn6nbks9148j6t1ubuark23r7crtjvuqaegc8z98ut0znpuk82cgm96bhcwb4paj00jakbr2aam0vv6uknxx0nosw3wd787fn53yh0qgkb6ktk1dvpdga09rzbksisg1ct42tvj91woijvtob4snlty0al8yjo5fzsyw27xi45z24psklvp1z5yyupgd\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1ca389a5-6b99-44dc-8f81-3e0756d99b07",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T12:19:57.536822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "cloudkms.projects.locations.generateRandomBytes",
          "schema" : {
            "description" : "Response message for KeyManagementService.GenerateRandomBytes.",
            "properties" : {
              "data" : {
                "description" : "The generated data.",
                "format" : "byte",
                "type" : "string"
              },
              "dataCrc32c" : {
                "description" : "Integrity verification field. A CRC32C checksum of the returned GenerateRandomBytesResponse.data. An integrity check of GenerateRandomBytesResponse.data can be performed by computing the CRC32C checksum of GenerateRandomBytesResponse.data and comparing your results to this field. Discard the response in case of non-matching checksum values, and perform a limited number of retries. A persistent mismatch may indicate an issue in your computation of the CRC32C checksum. Note: This field is defined as int64 for reasons of compatibility across different languages. However, it is a non-negative integer, which will never exceed 2^32-1, and can be safely downconverted to uint32 in languages that support this type.",
                "format" : "int64",
                "type" : "string"
              }
            },
            "type" : "object"
          }
        }
      }
    },
    "insertionIndex" : 27
  } ]
}