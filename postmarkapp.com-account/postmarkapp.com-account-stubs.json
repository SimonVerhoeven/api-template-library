{
  "mappings" : [ {
    "id" : "d0b6b7f6-c575-4c3d-b0e5-3e82042f6747",
    "name" : "Push templates from one server to another - 500",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d0b6b7f6-c575-4c3d-b0e5-3e82042f6747",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.775091Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates"
        }
      }
    }
  }, {
    "id" : "cc8de8cf-d6d1-482a-8dd7-d3d98ccbf860",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ut recusandae quasi aliquam aut. Suscipit et non perferendis aut. Dolorum deleniti assumenda ea autem aut rem nisi.\",\n  \"ErrorCode\" : 2494281124820092753\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cc8de8cf-d6d1-482a-8dd7-d3d98ccbf860",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.775067Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "f8274308-9ad3-4c6d-8cac-170a26582326",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 9103776639969054113,\n  \"Templates\" : [ {\n    \"Action\" : \"twzfkpt8dulwbkfe1cl5h2ky0lgntz0whitfdo7vp42ui2qgi6ww3g9a4gpmd6ipg5l12hngcu9uw0w88ye6iid0fjrykiy51njutmdtmtuq7s1p2jg1fxql2cmeco2gddj0o0lr85bxu5i0gvuw9wf1w81h7ww4fjk8ad49uf\",\n    \"Alias\" : \"j9ewdbf4vo8dzm872vnqz6094f1toov7pje1e643h1q4kexh13b1o5nw1few4lcl2zz0d2z5n5j3sazr2cvqastoak4olg94b\",\n    \"TemplateId\" : 7591357761671009629,\n    \"Name\" : \"Particia Crooks\"\n  }, {\n    \"Action\" : \"rpoh1ipp7aq8kwmkxak7hqwlarg8gilaaxl5xfg\",\n    \"Alias\" : \"lga84oh8ule4yf68mikd733m2ea239s2i8npetie5qwi9up49ctqx8sqwggdpnyf5a4ievodgf2x1nxbhgbv944q1dsn8l49m0hl67zu7digu3ug19gqysu1jc08y4i\",\n    \"TemplateId\" : 3190209254788465793,\n    \"Name\" : \"Daryl Steuber II\"\n  }, {\n    \"Action\" : \"gruukvk1bbdhl4bpw5hi7h1azxtrt8d6esf9e44xc3i4cxo2ivpjjdpf3lqu2bj3htgg445j1wl9s53ce88i1qpp6g01239rnqa4mzghau7b\",\n    \"Alias\" : \"cf1r4el3rmwembb0h88\",\n    \"TemplateId\" : 4194265703464255461,\n    \"Name\" : \"Ms. Karie Spencer\"\n  }, {\n    \"Action\" : \"i44t26jpskibtrbs24h8yf9gxufqhb9563t8q46qgjycmon4vr3nzvrqiinszltftywqlggwrugpct6ehb9ddtxmdptwgd9l7pmufzj3m2p\",\n    \"Alias\" : \"20pvjeu9fpgi8q19wt8vv8b36j5o22kizq7md4yngn3eo199r58svgfkivixlhg81yer4kfx713xvi7ea7eswo27m9jfllpgxae8itl2pbtixebfspw08clgro08eh2w3g\",\n    \"TemplateId\" : 84469252538901566,\n    \"Name\" : \"Ileen Gulgowski MD\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f8274308-9ad3-4c6d-8cac-170a26582326",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.774984Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Templates" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "Action" : {
                      "type" : "string"
                    },
                    "Alias" : {
                      "type" : "string"
                    },
                    "Name" : {
                      "type" : "string"
                    },
                    "TemplateId" : {
                      "type" : "integer"
                    }
                  }
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "7b46092d-ca1f-4eb2-b714-b8198c6f75b6",
    "name" : "Delete a Server - 500",
    "request" : {
      "urlPath" : "/servers/593837468281364935",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "7b46092d-ca1f-4eb2-b714-b8198c6f75b6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.774584Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    }
  }, {
    "id" : "088fbf68-1b04-499a-88fd-2550f0eb736d",
    "name" : "Delete a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/3753775993933805959",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Nisi doloribus eligendi iusto est. Numquam illum vel dolor consectetur sed. Voluptatem corrupti dolorem odio vero. Sit beatae et asperiores quidem voluptate.\",\n  \"ErrorCode\" : 6220444232076013783\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "088fbf68-1b04-499a-88fd-2550f0eb736d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.774559Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "0e75cbcd-e286-4ffd-8cbc-4e971a53b97f",
    "name" : "Delete a Server - 200",
    "request" : {
      "urlPath" : "/servers/7821407587920420207",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "0e75cbcd-e286-4ffd-8cbc-4e971a53b97f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.774483Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    }
  }, {
    "id" : "7e568894-847c-47ab-9ade-e28b6bab0137",
    "name" : "Edit a Server - 500",
    "request" : {
      "urlPath" : "/servers/7068260954829455636",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "7e568894-847c-47ab-9ade-e28b6bab0137",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.774459Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation"
        }
      }
    }
  }, {
    "id" : "092d903e-b31b-474b-8032-0069a98ee305",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/970694693165664147",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Asperiores sed est voluptatem sit sit. Et odio pariatur fugiat aut et beatae voluptatem. Ea et beatae qui. Ea sapiente perspiciatis fugiat sint laborum ratione. Et itaque quia corrupti consequatur deb\",\n  \"ErrorCode\" : 1395167509323000442\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "092d903e-b31b-474b-8032-0069a98ee305",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.774433Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "164e4b66-8d76-4ac9-ae95-95978f9c1ff7",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/6409834548711622104",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/639557\",\n  \"ApiTokens\" : [ \"uti1cmxej6g95gku2r4of1s9laiq6yt833wnxwefdofdqv0ctsthpbwoza\", \"hci1y6pevgzzx5fkdzdf81oy6hstdc1zjn5wndzp7rjs084qo9m6a0iwgu7w4q5i834cplkr8s2mhevfk6lc9c6fhiun7at79qd9rptomxj275d53x8sz8q3pu\", \"zsjbie6qh5u5hp8ivj35nncam511c0ue2a8sqqh6hf00e1lolqihp3zybakblgd0k0a7zyoh0fkmoqs7bscwyhglq3j6u4r4p3wkx4nfspf89e6dbx1orruqc3yro\" ],\n  \"ServerLink\" : \"cukbq3muu8wog0bblfqa7zhsortiy7gowffw72zuj7d7gzmt2r4p2xjglx8gq9ofe64qt0xrsdrdvi0dranzgfu7q4pysd890rp483gi4640jnw051qr65fuuoggd5ppn9t8s\",\n  \"Color\" : \"gi7pppldz9uehmuzlejtj6te0jro\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/144875\",\n  \"RawEmailEnabled\" : true,\n  \"TrackLinks\" : \"TextOnlyTracking\",\n  \"InboundHash\" : \"3psxf1cvaysk\",\n  \"InboundSpamThreshold\" : 7546178145950944282,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/783931\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/337421\",\n  \"InboundAddress\" : \"597br9zllrk40ry09d1k1ekp150jvlt4l7rhc2xvk7cv3w6lj9242dhmd3nc1ow1eah0dc642lnronkftcy69b466tnstg2h6upuj7ounskwhoov7hj9q0e7wbvzprwxau3\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/459554\",\n  \"Name\" : \"Coretta Abbott\",\n  \"TrackOpens\" : true,\n  \"PostFirstOpenOnly\" : false,\n  \"ID\" : 4375145315396984484,\n  \"InboundDomain\" : \"nu6rlh4fy5ti8idrtp8d3k\",\n  \"SmtpApiActivated\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "164e4b66-8d76-4ac9-ae95-95978f9c1ff7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.774341Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "14bea0ce-8605-4dc7-9185-efb8dba730d3",
    "name" : "Get a Server - 500",
    "request" : {
      "urlPath" : "/servers/8103069489815112122",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "14bea0ce-8605-4dc7-9185-efb8dba730d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.7738Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation"
        }
      }
    }
  }, {
    "id" : "e08a391a-a16b-45e7-85da-bebb4fcc11c6",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/8070507587674711902",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Qui dolores commodi. Totam aut quia minima et. Totam dolor ut et. Saepe laborum sunt quae qui tempore. Harum corrupti sit officiis iste eligendi error in.\",\n  \"ErrorCode\" : 1677180633670059208\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e08a391a-a16b-45e7-85da-bebb4fcc11c6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.773773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "1d52b025-6718-46df-8468-e670e867518e",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/7421538983777697997",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/489116\",\n  \"ApiTokens\" : [ \"rkvc3sc8b5bkhgz0lz55ao2lb3hhntt17m8a1hsuiwngqfiu43y9i8i4eulyup5aio2kkml7ugtxwurzppe3wppos1qlp8dtm3236102nedck5318thvobo0tyiha4luhta2hzwpxxjd405ednjyveba8nrnnumxgs7mdzi\", \"bfu9rhbx4kb6f70gtfnoszn8tg5uynnvn8blbwwztf4p0vvgx8r3wp\", \"kej439603xicwtx96avoyrq8ttptvvf50tw6bb53zxa4nupkpp9ijmxh2arx0t6rmpg5sopyqcd9buci0kg3uxfthfo5qxli3jj17a27htclupdq0qsmh7xklpat3t9wz25lye1uj8quzoo0ss5l2yiijrb9x2lfp7\", \"zzimm\", \"27grj2ybzrbwf69fyrciie1icph0w79jayiir16tmkdccknd4\", \"x1wvisj1fu9h8s4s9o523g1tyq1bohpwkd1ct7go6hvt7p3nitbdn74hdmiljpoqksdd8if4zrtvzickxfu612c194a75nduwn03ykgsi6nmrjgec26kc7fn8cnw8kieany8ftexmcdu0oj91q3lt9lbfpnsbv7aozshotiidqfjsa169nqc3wwmadlv\", \"kemulhzfaxt0npynelh7jfcsqts1h50a1cqotcj3ynurxh7yr6ex65vq6wfbbexabq6o8qevblns495v61pnzrke5ibdx4cw1zcakyls9jso134on9xhfh6ooeu4a7fm6nf5lz08lha3vsfnivqry7jg5c8jr\" ],\n  \"ServerLink\" : \"2crks8uxel2vkvvd9ss1fuv6ki1fb99zk25u7zcc4epo5sgx9k3w0fgl0j5ce2e8vteorm52ng7hvm2vfzv9fd2j6vb3wp9oxg6ta0mdbchb24cvykka4s6ck8qsafzumh1se2me3lj16a2zbtaxrlbt4ko3qjrgsqq3pr91z59rsht55woh8bhu2cj\",\n  \"Color\" : \"7wrckjdnt6apdyoa14spl2g9zh5eqtxg6h2vf75uk8z971etb1vjhr8mz017au1i8oba42qaa9rz7sljxec4nona903jfjpxc8b2qy5vk0fjlxbk8n5kp9ahs0e7sui03izi44pdi2js9mkuo3j\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/303047\",\n  \"RawEmailEnabled\" : false,\n  \"TrackLinks\" : \"None\",\n  \"InboundHash\" : \"mp3hkvb9p8rrzchn67356puvzsymaliaxxd1svs9962b99b1vzpx55y03v3tmmx2q9o1rg04lmzfjvdz4gettzsu6od2gqjov\",\n  \"InboundSpamThreshold\" : 4311925353368958616,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/207599\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/322416\",\n  \"InboundAddress\" : \"s17m82ay1sl1v46ydbv9952l984ppoxew9xn219az92rguvrf9irpxs3x92q5qlw9aqow7rfxva5nprbuyavaer1gqq6377j40ubusdycvmjbx4ev2vzmp86ga8gdigubb9mwxqfkyeq31mz19tx4xqfoj34a8fievebuiqhcy6dxx7v5r34jidse80y\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/143679\",\n  \"Name\" : \"Mattie Padberg PhD\",\n  \"TrackOpens\" : false,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 5624770247207680136,\n  \"InboundDomain\" : \"jpzi5xkhw6car5mtpb2ngknbpu7k0p0bbi6svvef8ik27q92y314rk09ywxd4yiymbvxobzmbzspi2owcdshjp\",\n  \"SmtpApiActivated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d52b025-6718-46df-8468-e670e867518e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.773681Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "211ebc33-b6fb-4fbd-b800-47c90854b6e3",
    "name" : "Create a Server - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "211ebc33-b6fb-4fbd-b800-47c90854b6e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.773102Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer"
        }
      }
    }
  }, {
    "id" : "48a9204e-cb89-438a-bedc-ad74becddb5e",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Et cupiditate nostrum earum ex iste dolorem. Earum id debitis numquam dolor corrupti qui ullam. Esse minus aliquid ea omnis quae. Cupiditate dolores tempore corporis est voluptatem adipisci.\",\n  \"ErrorCode\" : 161799421644468166\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "48a9204e-cb89-438a-bedc-ad74becddb5e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.773078Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "885f768f-7b68-4a8a-b052-f8407df293ba",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/033914\",\n  \"ApiTokens\" : [ \"y8mwgdhu0sruhdtg40\" ],\n  \"ServerLink\" : \"z8gkwz9n9wc41t916cbps999tralq7wbopmi7n6c0iza1sma08osxfcuo4jtno6o4ov4zl9r0iuqc9a6vv2yhej35oqi4mliqgvjpphffwxoxxpbyl5j45tr0ha6t2khnane7860uhov\",\n  \"Color\" : \"67kl3otrjw4dtovphh3zt0f8ogjp0fooh8rsak0pny8jk10wmxzwsxqty0ilhr6fezw4uonmmp8a1pdcbjafx2nkof3327oyhq3jym78g6uavqkycwxztlau7qcl2ft4dpfaxl3itkbay\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/639902\",\n  \"RawEmailEnabled\" : false,\n  \"TrackLinks\" : \"HtmlOnlyTracking\",\n  \"InboundHash\" : \"p5prdezjtqihtnfbtqd6chpcgw30r7d92ofkqktab9krw0\",\n  \"InboundSpamThreshold\" : 2833767566988244552,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/548249\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/210937\",\n  \"InboundAddress\" : \"tien7mqrxufhwxh7g7pudszi3m6m9oo4szkdm2p06itkc5gb0h8efzl469ysbyyv0aeyjvg0s6lolq03z6997eu7gihgdzkoknrbcjrz8c1m881ehbwifih2yff0zrdvoy5h3tf0pmelu4v1ds9hxx6\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/024860\",\n  \"Name\" : \"Neal Stiedemann Sr.\",\n  \"TrackOpens\" : true,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 1602907939062033283,\n  \"InboundDomain\" : \"94e53cyut\",\n  \"SmtpApiActivated\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "885f768f-7b68-4a8a-b052-f8407df293ba",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.772986Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "bd976ad0-e486-4b20-9b3f-8c338c87bad6",
    "name" : "List servers - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "8538316513610762961"
        },
        "count" : {
          "equalTo" : "121314263370726616"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "bd976ad0-e486-4b20-9b3f-8c338c87bad6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.772366Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers"
        }
      }
    }
  }, {
    "id" : "e67c485e-b46c-4003-91fe-ddee0960e184",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "5420747266207116466"
        },
        "count" : {
          "equalTo" : "6017628561876125568"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Voluptas dolorem eveniet natus cupiditate nihil tempore adipisci. Nam quia ea. Labore omnis cupiditate et saepe quae. Reprehenderit ut aut dicta blanditiis soluta reprehenderit. Doloremque asperiores \",\n  \"ErrorCode\" : 741912774877877534\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e67c485e-b46c-4003-91fe-ddee0960e184",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.772316Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "00421b0a-b908-4e94-ab6c-5c5c901b88d6",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "8653593477704540601"
        },
        "count" : {
          "equalTo" : "2377351281986285029"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 5787356554075980172,\n  \"Servers\" : [ {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/937243\",\n    \"ApiTokens\" : [ \"smxhv16ci\", \"xx5t0nmsfcgyls0w3umn0bjwqtgugr8sb9rc88ih8snqy26ce1264x54gz25h0tilxa04sgxh5t4po2w3fdc1zzgehtnm7u1e1y50qf8\", \"p07xdh4odyba9tvuw6nrhresok2z4m4jeilqsvbaro6katqjqpjfngcaen9xs5w41qs3fwlkdtri23tpsfihxy4ex7hxwd7kj4fvzbzy\", \"aqskjgr81kotohbcotgd78ykqzs98j6xb4pjpo0v4g2egvizlley4cl41jobb8iw1sh7ygxumj9byv94eidcde8g2hubrkxoq6cb99hnm9vro80ny71i2guq3c6s8gmngj6oab0w1q6auw\", \"jh8lmvfqoakjl6yspnrmsnzhjbaf9e46qiei5dm7yhsajasa0gnk9onzkyzbcdg7e9uu6iznmbbozog5xpobexlzbv5h7t5qh5sip5gjevx3fvdl0px3wqq05ck5tiknob8czeifbr2l28s59mycz0unzaggfxkrjv\", \"w0dpb0d8fr3c906myt45sy6j5dnmvce9k1mq9bjsj9jexor2d0hsh0kniu6y1u5dri8fr490d2jw69ir35y0okf9rb6saskgq4pcx5stvvxrw9l1l5fiuki1e3rayyuew7novkjtzzanvarkzn02yiybonhdu4j4vefkx826hr5wcidpsolk00u4kyswoqogrhm00g\", \"owda883bb2q6oelvmdetw1r39qmhoice1m7vqb2wqfq377ulbundd96wyr07stt83j8srtrq646x21ns2oxjz75j7x\" ],\n    \"ServerLink\" : \"8jo0qliqyhvr1drrvd6z7gf5fsbhs0iiqz7dmjj0uwbyrgbrmof0ohixso2fb7rx\",\n    \"Color\" : \"v1ksziiysb8xcn2c2bz0ki66uge28n169jz33hcx1foqcm8yxwhtjp9q5\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/242919\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"HtmlAndTextTracking\",\n    \"InboundHash\" : \"cehtfrmdrhh85opxidip904ybolc5fefa1lqw\",\n    \"InboundSpamThreshold\" : 6444424116301055077,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/057801\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/303036\",\n    \"InboundAddress\" : \"vg8dysc4ff65er6hpm0v1c6xlakqtlewyh1jdyeotk0gbrxhdpl3rcf1mysza0a\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/385128\",\n    \"Name\" : \"Jeffie Gottlieb\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 4783148188600539661,\n    \"InboundDomain\" : \"5aat9lwd2s3k9ho0paao089\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/431356\",\n    \"ApiTokens\" : [ \"rwdjwucbhj0xbyu1mq0ku68542uvg4d0tyy8vouax768b34fw93yy5vrqs4os3jp7wc0hdjpizxn85i0s2p5fa7vosuvu5v0qt8evznf6reu4ok5n1qgah1xxu0r631pdy7jc5ndi1q1ht7vc1asee87nra94bq1d2s87i3d9ez7a2jqwm197\", \"1v1aarpak03amd5ga8im4h5o0wquzlv9pz903ixbwkeia8lk6y53kq4dijn2wzyhbog1jxyg69af64816lo25bc4dpe1syx9295vmi9eml\", \"md34x6xjeq38ws5rfrz28qc0hju5dp63wqa2scwldshn\" ],\n    \"ServerLink\" : \"ktqnw7lphy61p9r72vnkoq3yj6xprbacp2ysrxfd77m9c61bvdi72qtcrlbf4jb5udykg558mcyaf3lblz2e47pnuomzu5v5r638gw8ge3d36mj8hg6uu80jkcqixwnbz9aeelky7d7s7ii9\",\n    \"Color\" : \"ig3bi57d36na5ks5oaap3f9k8l2p981j0sko8zwwr774hp5263sctcs8lq5rs5878rhd5sexuc1u4bnaxmhwnthn01bnlrfob2qa22k1a27485bpd1gent1jsefl95xuhrby6ta2dn3rtxxju\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/878404\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"None\",\n    \"InboundHash\" : \"g8fkgvwa7c6pcege4c64qf33tquhfzhf52tfocx0audxuokn61tma1bcqbkftowd20guxwtduyfulua\",\n    \"InboundSpamThreshold\" : 2292494416923104711,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/995431\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/594456\",\n    \"InboundAddress\" : \"adjnhf891gbqne9chxjcca5yatn1yv89ndq0kqhc7b\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/847181\",\n    \"Name\" : \"Marisol Jacobs\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 7250362768003231722,\n    \"InboundDomain\" : \"oowj64b9xc9ifyyqdu50fhfvpnxboznbjcvt50yp8heszkejtp2772iks7u7nrprxz0jari9crhbebq7bpvaqho9dn8n7y5jrdmqde2fr4fnxycge7g6xpfgtgvixo9f83muph2aczwembbwqesq4ro7zsz47kt71c4a8g6dsx71ig4hs60jjssp72riu7jr1ofqwe\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/649769\",\n    \"ApiTokens\" : [ \"o156p83jz5so6l5f7alt93zocz39pvjwxpq9ru04d35crjsh6tsc8duo96ak04shgn0tlk2lfnff0jtdvyqfxp8jdx1w1ja8f2qkmbcr9inx24oihk6m00l\", \"rkzkbxq312alemss2a9n1x8hle5lt09wjy6ewhv04jd65qx98qvjmfogek86h1itchvuqg35h68lmi73ldxzfw1tv2nsh9ldi53beama7k9epmcqwj7un2vj830m149pc6gxehr3rvmqj8wz3otp1qt85q5lh5\", \"gp3udpj5bemrih28kjkgukjssg4aesiusi9d23cyxdc059cbsvj\" ],\n    \"ServerLink\" : \"5ni1md9e3tieau1osrban70xepzcb2amlbr0n02d1rc0jvacpt006wum\",\n    \"Color\" : \"bzqqzzrdvwn0ghdn4yk5u46fis3koit1tjchyfn6td5s8c3sp2ntw3y771b3ncb4ll57ov6rzyfxskp2izangmq9i0gzx1lx1ucj6h0ftbwkwz6w1di01njvczqepaq4vp9v83l1bb5oho75si2sob43rcux8j19d3d05u1\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/329406\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"None\",\n    \"InboundHash\" : \"1iyu9cwxz3t33qnw9xm8yfebartan30q7k8u79ysmbtdx28qzcksgvboyhb5t6\",\n    \"InboundSpamThreshold\" : 3740969551570704508,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/730766\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/372307\",\n    \"InboundAddress\" : \"xnp87pb8zbd78o070245mnmmiqo3myzuq6agm5bv8pyrt7y54twbm4v821tlhwdpmpy2o4t1gmf06l9qltlrv92moux2qj2d5jechv70twyhg9lqjyl05x7kj\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/253634\",\n    \"Name\" : \"Len Simonis\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 8140224209392545315,\n    \"InboundDomain\" : \"9henogvr9oqtcd0fsxx58iak7ui2ohxacn6585bvudjkt68yf1mvsvl579v2j3ibkuxdk3d378s6v97ux5tftw34k9u8l98zxvock3qdt9yt\",\n    \"SmtpApiActivated\" : true\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/081598\",\n    \"ApiTokens\" : [ \"6nns2uqlyo8vmwpte1itkw2f6gdbat9di3vkwv3cjckvlkmg5uda1cmj9l2kd5puuitj4n0\", \"2q5n09z5kzxqfyu0u3jgldxtsz6nq4xaa4kiztrbjd4ec7lf8u6rj9cxjuj4kqx8a50q03irvubl4p8tfqbldnwu8qjurvbrxtrsjpwebvcnjaefzm6nfeg7h09ln6jsobfgtm0voj94d37oq7n2525hr03domz6bbqp96yy6rg4n04cpc20ffdi51ntnd5y\", \"ki5ek16ozvno3jp87r2r4mk4w5whx7jmdzvulnvv5fg7ef\", \"tetmrhdfni69y39pi2jdv5dpj6rd5hpv8x6x3gnsmuh8u9zbukyaayykmqy25g9c7zppkndpani46jic0juhyk6xkdjvhe0t1del2xfwac2q9u2vb4tzlfzqnpsjvj6imeghb7lsy9t665bosuj04pj6mdh3l2ofbusvexzlr3z7qeiea61nzkpxyqsa4lcdbiioznq\", \"14p52eskf5h3crbkavsyrm7ae9sgckiz6eo46uxqtmdunq4enl94y9tgjtfoas5g28lr55lhnh8hqhxqwpz8gtcan4cjorthu3htdjgtpt05fcv6vh6ony4zt77xksxrl0c159a484zh08gwkn26w6qbuaskgjuec1l9ly4k\", \"555cqnoczeyktaflxmre4fo84yczyfbk43njzto4d5jywhugnidvqjddm9d1o303epiz4h2y4xxud4g8ij6zr892vv7v9a80or1sxwlwwu6yrv9v4ralued165gfdy27qd61zl60ol5g\", \"q6ap3ml28iiwp8k01qxb1mt8k02zakmkdm\" ],\n    \"ServerLink\" : \"22wfi4jelk12hykl8sd1m4zq0h8bb696lipfvjhrs2rw6f1xr2q9rt84p2x\",\n    \"Color\" : \"zgddsbocxs6n04pec8yen2qbf7scn5ned1ximtqx2kob6qnsk7gre175st700ws1rvn53hg1jxddwzn1qkg42qo2c34erf49211139c63w2qxh1u7cc83ycwjwn39ptze312hu99nnn2b0qhu65o95n66ovywrqd55ndb8ve11o0tis376mj3f1fojc0dpr4\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/054630\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"HtmlAndTextTracking\",\n    \"InboundHash\" : \"mz01bnxjg49433oy6hmegf5ap645evnf4y8s7ny3ua9928uch8whxg88ys1q1s1v0m6g758wwigmi3t2nh26dbdlpy0qky2i52l7jj22knexw5hy9p48zxhwfrj4lsrkory2\",\n    \"InboundSpamThreshold\" : 223868136476826631,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/160709\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/258780\",\n    \"InboundAddress\" : \"niesae5tody46z6oh3jsmyqoztr6rxr0o2cqqd1m9gs5b8to4h2rzf13yc36nm1it\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/879202\",\n    \"Name\" : \"Margo Stoltenberg\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 2800240293230420366,\n    \"InboundDomain\" : \"szgzffi2x0z7cl2ekxi0yl1djh4ba7xqcx44rdkwi6ei0pn13u3m25jc7lcybxmt3ufvwx2t39kg3ta\",\n    \"SmtpApiActivated\" : true\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/450841\",\n    \"ApiTokens\" : [ \"sm4jajhnz3d723mw2nhq9c0pok5s4ex7mcbjn79knahmqzt9t8hw76jy2s9wivnq4d0k3pfpq2b9nfvwd7ga6th54kq2mu21bfj0mljv5ika3itk6ko9u4cy5js88ejb2cr3g8di4sfrsh6mnfvkg07ji8ukco9uudqnx1uhy2yrcrqlxvl3a3b66gqxev\" ],\n    \"ServerLink\" : \"gjgnchyxa1zsho145uw7ys4zzoelyc\",\n    \"Color\" : \"obwbba7hx5bgfagp1cwwr2ujqdu7w9aq4nlwtuwqigak4lavtk8ccltcnu898qpe0syga2t0ktopp4ofba9xja5xe8s23dvn8mo7s11du9ri3krti8vv942p8e1kymf8kwqpqrk6xe1jfg1ae1yys7oad\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/079884\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"idkqm3dfsoo4e2w4iw5mbssd570t7kr\",\n    \"InboundSpamThreshold\" : 4324121641883678715,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/679873\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/759464\",\n    \"InboundAddress\" : \"5ky2a1cstexgc09yqm3n5t95t9amzk1u1w8t7adljidmor4t0fxrtgzhjyo251exmofobos6b7nliwsh2jzunebo20bcbfyfx55jwvqw1dsk4zimf\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/252629\",\n    \"Name\" : \"Johanne Bogan\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 2098346064905829711,\n    \"InboundDomain\" : \"vhxflzrg2mkgzlmjymjmw19ev67sptccx8p04495n6r4o9py7ws2c9d0\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/433163\",\n    \"ApiTokens\" : [ \"8znwoagorph7q4zyb9ha20poml53mtu\" ],\n    \"ServerLink\" : \"k2b0x4gm6mnk2tm1\",\n    \"Color\" : \"6z2dpyhg2e2vnmk0giquzun073zyytwnp7bijp9f9n935o89yak3t07pqmk8dwcscsuglt\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/820419\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"None\",\n    \"InboundHash\" : \"486rroq14vg23kv0f8wpyr7mylvepmhk629dczrwghh54z28vsssl63rncpk0wjtv1yump44kd64e61v7eosaklzrfelzdka0xzjvykegn2zplc9uw9\",\n    \"InboundSpamThreshold\" : 4563653869897795591,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/677459\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/523829\",\n    \"InboundAddress\" : \"bby5yeofnsym6lx6k3rijs3e63gzcnqg8t4a7l8trj8y8jtlltn8httrcs3cegur61fev482om8dae6t1lijorsd9fiydz4oo6fkyvfy7eacgbf0rj7mcbgd\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/275458\",\n    \"Name\" : \"Dwana Towne\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 212286706859030567,\n    \"InboundDomain\" : \"9e2te9ra710qkc4mzysfvyys04en9e1ua56ozjvihvtva6wst59xeozpw9c20utbs12stywc9lail4aamwkqd4pl98itk\",\n    \"SmtpApiActivated\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "00421b0a-b908-4e94-ab6c-5c5c901b88d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.772179Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Servers" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExtendedServerInfo"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : "The results of listing servers."
          }
        }
      }
    }
  }, {
    "id" : "9c5717e4-e4d2-4567-8b7d-ceda7ab30c0b",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/senders/3156794602389497140/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "9c5717e4-e4d2-4567-8b7d-ceda7ab30c0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.769379Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature"
        }
      }
    }
  }, {
    "id" : "81b5cc14-ac55-40a7-b6c7-85c9fc947f0b",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/6586367585256808246/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Sunt pariatur reprehenderit quis reprehenderit. Dolore autem sapiente ut. Qui possimus non architecto. Fuga amet tenetur consequatur debitis quis. Voluptas nisi veritatis sit dolores sit.\",\n  \"ErrorCode\" : 4665152098424558782\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "81b5cc14-ac55-40a7-b6c7-85c9fc947f0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.769352Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "6ed9086e-d396-49b0-b1fb-5a491ad582ea",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/5578251383035723637/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Mauro.Sauer@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-11-14T13:24:57.768932Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"a5lw2br2t9lbgdye4cykhuk6nmls3idr4vx3mjscxvkrohsuf4vwro8e8g1zdmbsei01e307doejk6r4tv1pur1ut33te1w8o2enqvkg6a4oaoas018gksstr2f1h2qqdn3f3arzcmeop19bwyn\",\n  \"SPFTextValue\" : \"oqkyrpc6tb18fxcjywllwmrzyfm90sx23imfxdupkj39yxcvydrue7in9i1pv2pixpppp3lwpr7o4nrvpz82lvudtofd4xc8vr1wfq9e9fdxpc4os64t7v8phfxs690qfkec3jj4j781t7ge2uaf\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"uhu65je8i7wz87y0p37kubvjoo47lixmdfas\",\n  \"DKIMTestValue\" : \"3trbdy2iq6bpox7l72g8dq60nbcdrcsui2u6s53mpkjpbkw5owio7zt2rz65b5v1k5lnhrysueknhrxrhujss8t9lozjrj3g2jvyc1gtn7ag1he9ddp3eeu0q23px7gds46ndtwo9cl8akd620pnwaiw2uer0xn7tz1yl0317c97pj12hszuqmw7\",\n  \"EmailAddress\" : \"Antonia.Nicolas@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Shin Tromp\",\n  \"ReturnPathDomain\" : \"542tlup2nlwcz9\",\n  \"ReturnPathDomainCNAMEValue\" : \"szh7znkdqy7hal5t9kkv7syjyx6swl4jsbd3apg61gndvx2tgyri3b2uzmn3huuroovli98t1dhc6gbxp61kzxjq\",\n  \"SPFHost\" : \"o3u2dy9ecvyx5gq6ymks6yi0x89taq4ew7ymof5ni4mhazzbrda9giht3nb38germ1c612z10a775\",\n  \"DKIMRevokedHost\" : \"pz2yxcof2jveq088ydwepxug2prd3z8axbisaz512euf1xqp4mcrefwlq87771bk6erp10guxhvwj5c6x5wp8oyelhk8c3wws1na\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"nkdo3br6k4qenw8207xhc8wevqkww9vj82a845nmwdwplvl0ila84qqrz65rlsh6h8370jy9\",\n  \"DKIMRevokedTextValue\" : \"abh2q7nmvjxuppixi488wgt5h198ng797y8p5i5r1mnn6e8zt1ymeodru\",\n  \"Confirmed\" : true,\n  \"ID\" : 3243602623052587592,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"3tu4ns9qujtjz50c7kdj3xlgb1jf7hothicqmq0gqaphntdjy8i4qs0uaohx56k8ppdf131n8yh48tqjnw8ra432s5wqejpfdcppwfnu4utwi68dcp78wlqdq46jlla12tpj1j39lhpubbew3n88f4sr0he2fywroovov6chpk6kt121d\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ed9086e-d396-49b0-b1fb-5a491ad582ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.769263Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "a07fe389-1ac6-4d16-b2b7-93ee134f4746",
    "name" : "Resend Signature Confirmation Email - 500",
    "request" : {
      "urlPath" : "/senders/3742027608336836706/resend",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a07fe389-1ac6-4d16-b2b7-93ee134f4746",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768891Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail"
        }
      }
    }
  }, {
    "id" : "91fc8c45-862f-4729-9091-9d14079e8e9c",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/498705053779970401/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ut quo natus. Dignissimos sint iure qui. Quod est nihil at quia excepturi quia et.\",\n  \"ErrorCode\" : 3716230857063020072\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "91fc8c45-862f-4729-9091-9d14079e8e9c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768865Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "1d57def0-9e7c-4e7d-af37-0022f3af0fc0",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/4093222077182434476/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Ut quia occaecati quae vel amet cumque esse. Sed enim consequuntur vel esse reprehenderit quo fuga. Voluptatibus illum neque sapiente accusantium.\",\n  \"ErrorCode\" : 3270422989594902094\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1d57def0-9e7c-4e7d-af37-0022f3af0fc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768788Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "66312819-72ab-4b48-9143-256e1c819011",
    "name" : "Request a new DKIM Key - 500",
    "request" : {
      "urlPath" : "/senders/2694359030768250632/requestnewdkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "66312819-72ab-4b48-9143-256e1c819011",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature"
        }
      }
    }
  }, {
    "id" : "64cf20cf-7e36-451f-86de-aa53c36b128d",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/6393824157189679529/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Soluta porro dolor. Dignissimos mollitia ut hic aliquam asperiores. Iste esse tempora animi. Voluptas a in enim quia quas qui. Sunt porro velit libero culpa.\",\n  \"ErrorCode\" : 1171326959673206023\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64cf20cf-7e36-451f-86de-aa53c36b128d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.76868Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "b7620a94-777f-401e-9613-c0eccd41a0d3",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/3403192925305073423/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Optio asperiores earum vel. Libero iure maxime. Ut fugit unde qui magni consequatur.\",\n  \"ErrorCode\" : 5469145516435701888\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b7620a94-777f-401e-9613-c0eccd41a0d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768597Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "a8e015a2-db89-4fc0-b281-0c0fdf094a71",
    "name" : "Delete a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/530109278827599080",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a8e015a2-db89-4fc0-b281-0c0fdf094a71",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature"
        }
      }
    }
  }, {
    "id" : "5ada8a8c-7426-484e-aa21-2fefaa95a351",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/6524556249887782358",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Sit consequuntur delectus. Placeat aliquam pariatur enim doloribus nam explicabo eligendi. Sit est dolores ipsa numquam.\",\n  \"ErrorCode\" : 5879888084010412910\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5ada8a8c-7426-484e-aa21-2fefaa95a351",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "1b6f7517-6cdd-485d-9a54-2b456b87a563",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/6429322903826749902",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Autem quae assumenda eligendi et. Veniam autem et impedit. Eius voluptate quidem. Inventore nisi vitae velit sunt tempora. Et rerum ducimus facilis id facere.\",\n  \"ErrorCode\" : 7577199331136146813\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1b6f7517-6cdd-485d-9a54-2b456b87a563",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "6bf1b4e9-88ac-42c7-abb1-7b3e071b2a15",
    "name" : "Update a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/1855459548155343191",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "6bf1b4e9-88ac-42c7-abb1-7b3e071b2a15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768328Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature"
        }
      }
    }
  }, {
    "id" : "9de9ed97-1ec6-433f-a5bd-8ab2020c4cdd",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/3895860216695536077",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Est nulla qui quasi commodi. Sed mollitia excepturi. Ut cum modi suscipit quibusdam et praesentium in. Repellat maxime omnis quos. Sed sunt omnis quos ex ullam rerum.\",\n  \"ErrorCode\" : 3826786175636893415\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9de9ed97-1ec6-433f-a5bd-8ab2020c4cdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768301Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "8b1e4cd6-c5bb-40ff-ac33-024516d96b25",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/5225757566830463392",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Joan.Rosenbaum@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-08-03T14:05:57.767896Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"8gq7ph5kk4wo932006t7ov4kjk6gz83ejav0r6eweqirzhoprciwola32twz39ztv651niu\",\n  \"SPFTextValue\" : \"vnnod8ne48g4s4hjatdemntmvedzb9i35kuos1gja3ffz0ylxurmo546v\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"qjakdqstvzt1qb86suifgvnicjm9v76u18mmr8n65w9m4cyxmgft4h1nzz4ofad9hbx9inxdvsmzwz2s551pr9xhas\",\n  \"DKIMTestValue\" : \"h5ofw06rp5cmu844tgojv003whnc4edg4h649uvpuq2o1680b6kc9dg1\",\n  \"EmailAddress\" : \"Gale.Bogan@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Steven Heaney\",\n  \"ReturnPathDomain\" : \"hx1e60uki8bk8zbnlwhtnjjdmo1tn1f0yilxykgqdadjmd7yujysmr7p2zc5ceov5gs8t1196fitimb6zasvh2bc6fpeijrxddq8ujmt78vqm4jsnx7m8bx6cc3chf24vorbh5ueir9b1jw8c0bqcrxzaz441fizv1n5ykansu67o0dm\",\n  \"ReturnPathDomainCNAMEValue\" : \"fnio3xbm48oe0lthfqm257wbn1rap4fjncmt984iil5no71r9b6n9obo81xqprlnchy09x52excgff68q28hlz4d1suh4rru7nbhbpcg8qd8xwhff3s759hthjqgp95q258iysv7g06g1t2hubev89sg2yu\",\n  \"SPFHost\" : \"43hmkt3lrmlbqjbllc4t7vkep2rmmujy7d82gnk1jp4mhhg536vravkgfi1bjrh56st0zvrnoefn08n8wqjeijqfhp1hl2eiu\",\n  \"DKIMRevokedHost\" : \"sy6od2anzvk93nqzqcycolrx6j2wlu45xolmysk339matud2qq280orwolbd8zo2ym4pu2f6oowju2abdhb4sbiz9qj6tkzdzd12dmqjqcyyso94a01vaw4iyaon4\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"07sk9kqi0mgjomdd55smiug0fx0ddh3b7hunw4r03vfnbv4fjcdcakkd5h5eyf9m5qmar5icmrocgjuwnvx3hpncrfrynh8esxz33j35zn3gy\",\n  \"DKIMRevokedTextValue\" : \"gwfx7r\",\n  \"Confirmed\" : true,\n  \"ID\" : 2613505814953018076,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"hhtid5z40cm7p2ay560y9dkg29aw1n0cfuu6o8f7hkclk5vz7m27khkpn7log7dyhvyhgojdi814fb6qentfim5fbre1u89n3u9dxqa0dh3fxvxus6m86i4rq5lq4dhjp9giq26blyp8o\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8b1e4cd6-c5bb-40ff-ac33-024516d96b25",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.768208Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "5d47a9f9-5028-42ed-8e56-10fe582ab972",
    "name" : "Get a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/2786341869228992662",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "5d47a9f9-5028-42ed-8e56-10fe582ab972",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.767855Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature"
        }
      }
    }
  }, {
    "id" : "0fa77fbc-0620-4fdf-822a-3f752861b48f",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/4590772430035936104",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Repellat aut enim quia non recusandae officiis. Error pariatur cupiditate et. Magni saepe quos vel corrupti amet nostrum assumenda. Qui modi porro fugiat.\",\n  \"ErrorCode\" : 8676911352285195373\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fa77fbc-0620-4fdf-822a-3f752861b48f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.767828Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "32e51d18-fe3c-4277-af89-a1d5e1d688a4",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/483712802161472357",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Marcus.Aufderhar@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-11-29T10:36:57.767421Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"5cz48g933lsqf6gog0r5g9ammj8mb8rs04gj6hvbufrt1x4bcmmxy5zk3dmdy17fvhnq\",\n  \"SPFTextValue\" : \"9paxhckk6uhw4wdm9ixr7qbvz39taxfnj4bxk7yka81acpn1v9mj4qejrvth1f5d6lpyctydw4fdi08x88b7ssptb4bxf3q522x1p7itfap3arsjw28aofh84d9u2mrgnxstolrhtm5kdn8pvnhkmoxekxhz5sqfsd\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"b5ii0usn0yvtk4hcpnwot75vjrqzwy2qu944iux1ifchk2levt37ciuiexj3a9zgp9\",\n  \"DKIMTestValue\" : \"xnrrmxjw44tmgj8cbl65w315eke0r\",\n  \"EmailAddress\" : \"Robbie.Nikolaus@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Ms. Eldridge Witting\",\n  \"ReturnPathDomain\" : \"tod6rzxo4k7eqphyc\",\n  \"ReturnPathDomainCNAMEValue\" : \"dtfgeuifqq0axedpjgo3oy2qihydgg8jo6jajp12m1m5dtwwollka9861emsdr5qlsjejyhc1qgtsth4m0srt234e30rgoqn4aqymz5qos78vkav421p4gczbsdqo4ureltrgzxflxjxi4psmbf6djczawo5mt8dps\",\n  \"SPFHost\" : \"r6cjhfcsipitsplgvycyx0u9wsswd04jwpq2qtini4m0tyxzem1s26u9xw5x9zw8qjbgcekhmmodhonq9veiy3smfmm80glzf\",\n  \"DKIMRevokedHost\" : \"4jc0eqepch7nu3io18ynazm48kior7ax48r7bf5tnchba9wad1k3629l9cp14r688ytsql1xnilz9ubge7qfqhfctko42tua0f1osamo07dajyhfej9wf1s1out5e1yvo5r446s7qa7a9efa3kzb85jjac79bdxm0dnafbmdlod6nokqes2ad5l2bne6effzcfizwjt\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"0lst5zu9gzvvpdbtpszij2qw90uc3jjn7vtjg6fq5mpxrp61vajeb5dwbnpv0jj89i956m6zyj3agzkvqqsvjqkikxvg2vp7i\",\n  \"DKIMRevokedTextValue\" : \"qjsblwpikzmtbpcuv7nrajt5e8j494l0738hcufjnq72\",\n  \"Confirmed\" : false,\n  \"ID\" : 1819765832139237568,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"g54sckbbburr810jxuxpgghpd6diwsotgiu8f76yxcni09qe63j97lptypfe3n\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "32e51d18-fe3c-4277-af89-a1d5e1d688a4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.767736Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "35e13391-4608-4c05-8409-2cdedb671b2c",
    "name" : "Create a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "35e13391-4608-4c05-8409-2cdedb671b2c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.767381Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature"
        }
      }
    }
  }, {
    "id" : "5b54e7ea-e905-4fbd-8019-3f5d3495daf0",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Voluptates quidem voluptatem nulla nihil corrupti officiis in. Aut necessitatibus quibusdam. Fugit est animi ut veniam quam. Repudiandae commodi quaerat eum veritatis ducimus autem. Corrupti voluptati\",\n  \"ErrorCode\" : 5384195385876238326\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b54e7ea-e905-4fbd-8019-3f5d3495daf0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.767357Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "bdea3b5d-ab96-4ef6-9fd8-c9853c5acf13",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Pamila.Lynch@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-10-30T11:44:57.766861Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"opqvgerwl57gy2uh4celql6fg1n3m9atub1zseol3fpianbx9xzxtstnqyd5wxg163hcwta5n8st7n2okt386c6f4kk3dyttudz2b2oyk4yvo26m627als16i7uagdkashq1mu10gnb0i1jb0uyz98qx9cdhh5f76fuecwrl251y9c0b\",\n  \"SPFTextValue\" : \"w3ob3tps\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"9j9q7xcq7l2f4lppzyrzuyamkt3aoni8cl\",\n  \"DKIMTestValue\" : \"ihmnqxvqpv1vi0hodpg5px4svqoa5ekbqil70a0zc47ccw7sydr5gaejhzri0b2lhzrstcgoyjo9wevt\",\n  \"EmailAddress\" : \"Nikki.Dickens@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Joleen Kertzmann\",\n  \"ReturnPathDomain\" : \"jtcaz60nne8u937i25i45uvjrmjam8tpbkyolppzcz5heph9p4w6a4evitf1oufxriy2ezbc54kt2claa5iij43anq3z3rgslz0tke4jjeyj50p58085fiq4a1w5av10jsf5wkqe5o7mm1n63ju2opnpcfqzbe53p3whtqfmfye3bm2lw4nukqelsj4so7cfuzi\",\n  \"ReturnPathDomainCNAMEValue\" : \"4lzeodwxy99my366nnvgw36nf0rcxwg8jjgehocrh8ynvn2hp0m5281pbrkey19gr06kufurwg3f1k1re3ng2vwjhxbjav8c2l3uvng4d1ikpy0fno27y\",\n  \"SPFHost\" : \"pkjpax2yyl4ga6i0a68griqeklptm7sxfa07jseytri192gb8unx9u5mkvm8p3m7y\",\n  \"DKIMRevokedHost\" : \"ovvtaqkwqds9xouj1u\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"8ehka4j29roi028akexyfk710\",\n  \"DKIMRevokedTextValue\" : \"5hpgs3m8soor0q9rfq8lwx4l79z1f0yr2dkwmmb5v2a4eh9n32zhntueei6ioinx7qxmwlaevzrkesssr1ip6bwsd7ebp\",\n  \"Confirmed\" : true,\n  \"ID\" : 8694344556731202377,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"10xqbc5cfsbimd8jhonu8pylmk2eavhos9s5ayhf83zqoaxti9ydd0lmbg2wy2d38yrbpy1pmm8i2yzigeawuuf41b5c779jw9y5jk1o3y97ww6amh9ltgou6oii78hw3gqngfblo6ss6xbcuhtouibzkc3nqechcudn4sk\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bdea3b5d-ab96-4ef6-9fd8-c9853c5acf13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.767268Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "fbc12641-cd7e-4c29-9b90-338a74b0106c",
    "name" : "List Sender Signatures - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "2091915502935799033"
        },
        "count" : {
          "equalTo" : "368"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "fbc12641-cd7e-4c29-9b90-338a74b0106c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.766811Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures"
        }
      }
    }
  }, {
    "id" : "98bd9e54-586c-42aa-9a93-4753f078a1d8",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4268125902025656498"
        },
        "count" : {
          "equalTo" : "85"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Occaecati deserunt dolor eos asperiores delectus facilis alias. Quia omnis ab. Error veritatis molestiae quam odit. Velit necessitatibus aut quis voluptatibus aut quo qui. Quia sed molestias.\",\n  \"ErrorCode\" : 14253125110663153\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "98bd9e54-586c-42aa-9a93-4753f078a1d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.766762Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "0fc6b395-8cd5-43c5-9662-ee487d475256",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "5697079676761364306"
        },
        "count" : {
          "equalTo" : "256"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 3399084653397574217,\n  \"SenderSignatures\" : [ {\n    \"ReplyToEmailAddress\" : \"Cordell.Stracke@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 2693457731474970521,\n    \"Domain\" : \"0rack1qhrehun0k0t81\",\n    \"EmailAddress\" : \"Adrian.Kiehn@email.example.mocklab.io\",\n    \"Name\" : \"Felicidad Rogahn\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Arnulfo.Sanford@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 3345050763627058262,\n    \"Domain\" : \"32g1m64tpek4lxr4uohjndddmu1vwhkdcyhwrhtgbbjahz3magsmmlcq5ma7ygoz4czyxx3dnj0dbzjmoxud\",\n    \"EmailAddress\" : \"Mack.Kozey@email.example.mocklab.io\",\n    \"Name\" : \"Wilfredo Dicki IV\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Catarina.DuBuque@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 8538561015655769374,\n    \"Domain\" : \"u157\",\n    \"EmailAddress\" : \"Manuel.Considine@email.example.mocklab.io\",\n    \"Name\" : \"Providencia Hermiston\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Stacy.Schumm@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 7019393608601628034,\n    \"Domain\" : \"v8hcpemyjp4qvv249fm44bli50peb2673bh0f9yff0i6pe1p\",\n    \"EmailAddress\" : \"Elisha.Schuppe@email.example.mocklab.io\",\n    \"Name\" : \"Harvey Renner\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Jaime.Blick@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 5023239939945685846,\n    \"Domain\" : \"mkrrb3fi2bi68mikblxhkcv2xsyfn46fwvn5zzepg2o3j368tkafa5ko0i1vk0sevweszu4how\",\n    \"EmailAddress\" : \"Delmar.Swift@email.example.mocklab.io\",\n    \"Name\" : \"Tammy Hartmann V\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0fc6b395-8cd5-43c5-9662-ee487d475256",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.766653Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SenderSignatures" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SenderSignatureInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "422b06c6-6a1d-4da4-9572-b8adefbe7395",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/domains/1479143707107649124/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "422b06c6-6a1d-4da4-9572-b8adefbe7395",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.766153Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain"
        }
      }
    }
  }, {
    "id" : "84558674-81b9-4d93-a9db-29345ac249c3",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/4472398995740442642/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Optio eos possimus nesciunt sint. Qui quidem laboriosam aut. At quos provident minus aut. Temporibus error dignissimos repudiandae libero et sed. Cumque blanditiis earum qui distinctio sint.\",\n  \"ErrorCode\" : 6444243003920443925\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "84558674-81b9-4d93-a9db-29345ac249c3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.766126Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "5d7fdbc5-15a3-4633-be1d-508a67c00cda",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/3857332955404846547/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SPFTextValue\" : \"mabk5x5vx8u945s78jxfgcea742cn0k2meszp1nz8l\",\n  \"SPFHost\" : \"0qyrm1k\",\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d7fdbc5-15a3-4633-be1d-508a67c00cda",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.766044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "f5fe615a-0ace-4bfd-8026-5d2bd258dfaa",
    "name" : "Request DNS Verification for Return-Path - 500",
    "request" : {
      "urlPath" : "/domains/8234397027495893546/verifyreturnpath",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "f5fe615a-0ace-4bfd-8026-5d2bd258dfaa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.765945Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain"
        }
      }
    }
  }, {
    "id" : "a79a29ea-2c88-496f-ad05-f0a00fbe61f4",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/4762776487639210107/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Asperiores illo quae atque consequatur dicta quisquam. Nam ut sunt. Ea est qui ex.\",\n  \"ErrorCode\" : 4860139640704311266\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a79a29ea-2c88-496f-ad05-f0a00fbe61f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.765918Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "4e21f7a2-19de-4044-a28d-98919f789245",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/395264658300560001/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-12-31T10:42:57.765551Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"macnlyf2yujs01635ghxc9wo1dnwvahnh4j3ggns8on19qux1krflxaj6iwkcxuquf99g91418ndvdhui0b1y\",\n  \"SPFTextValue\" : \"ynpsmbyy7yynbovgsacnd6j6048nt4kxhrv629k0su8jx6v810r0fe1hd266gwfng357s4s9dzrvh115rv4rawwqba6g87awqsewgrif6piztqvf2tmrs9q4\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"18r0o1mavh5tcccvgf7p6m84z8fcfuf1092dgo0shhq2oci96u47jowyllb398npeoecb6vr4w5a996c55gktgfjuzqsmm0gksv1apbu76d4rokcazi6\",\n  \"DKIMTestValue\" : \"pbrk9l5lf18vq0a9lklgckoskptzepvejbs0v34maokak7prdcydo11q1vm6n2tdvfa37h0f3xql5fvex61z4o0jfkeegx33o4zswp8llrmf82uk4bqdr3jc0gir215xallw2ktxummxxlz0uuecajsnh0xzg42klzbbmuj6t\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Carey Reinger\",\n  \"ReturnPathDomain\" : \"ar5a8a4eix89w3d003b825bm7ghd4uc935jdhido3acvj5srvraupdglms75tr43pm93rgbw5hl3nxhltu7ij4oglg816ivin8e6epmjhjfvq6f255m8wqanbdokf9l3u5wwywksj4it7cmbjjnpwticdfve14mq1bx7j6z0ucacisqgoqdrr8c9vm4r227e\",\n  \"ReturnPathDomainCNAMEValue\" : \"v54cm8ni3ghvepilfeyk0n6hogj1sttskajt7yhs51k35v1ifnspg9swlp8kb62lcuk8ny9yiuhe14tknju7l8bmzsrgsgtema8ditfpu95cown01hf5jst3zi2pbn4u7y5dsajcvkwh04kya\",\n  \"SPFHost\" : \"03gcqq9068y1c117a\",\n  \"DKIMRevokedHost\" : \"1ipnjbj3\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"a5mw0ld2d1dcczxenfchdfs0zvfnialdua5fbs16533qybmm376nr018ipnhxz1w\",\n  \"DKIMRevokedTextValue\" : \"4pib7mlav62huevrh8lyqf6f9lj275xbqj45q5a50b5usn4xt89oqesyprpijc08nues70vopzjjgp69f7jmr62zwlbjnufnbupyh3ucv5h6gc3me2s4mtru9s4l1r66u5xhve1so2\",\n  \"ID\" : 4894305516618241137,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4e21f7a2-19de-4044-a28d-98919f789245",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.765838Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "65d8a392-be39-437e-ae89-566779c35210",
    "name" : "Request DNS Verification for DKIM - 500",
    "request" : {
      "urlPath" : "/domains/5448868585735458202/verifydkim",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "65d8a392-be39-437e-ae89-566779c35210",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.76552Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain"
        }
      }
    }
  }, {
    "id" : "dc2a1159-9003-43ec-8904-8b9f5502db43",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/747429733760111618/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ea quia harum. Vero quia placeat nihil maiores eum dolor fugit. Quia ipsa dolorum ipsam eaque cumque eius. Praesentium suscipit vero natus repudiandae aliquam quia temporibus. Distinctio blanditiis co\",\n  \"ErrorCode\" : 3844355402483741218\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "dc2a1159-9003-43ec-8904-8b9f5502db43",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.765494Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "a3c21b13-2834-45cc-93dc-1eb164cdc017",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/523343209218878486/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-08-24T11:34:57.765102Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"r5ahcy16izsnwkne5t5lh7qllao792oa0kj1g7shktscfg1cyvhj96238l0k1mf9z9f1\",\n  \"SPFTextValue\" : \"5intewhopbz5yi5znbzxqsrzxyuih7e652pyrhik1r9\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"iacf4o94h8qic7hkofaskm99sweg45znecajekx0eq7704xc01i9ehi4a5hlck48r05mik7el6y5y2se7f2slr26cpdsea2ue5q2pwjmfd37t\",\n  \"DKIMTestValue\" : \"sekn03bcsctbsynokovc\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Peter MacGyver I\",\n  \"ReturnPathDomain\" : \"dk78xrdtul7ptvfets38agdbshg9jnqs1ui9qoj2lc82zrgbj1edpohmhetyp15hn0ij806hhkzftfqa1lzf41ghuaa4no83a2u1kn284i6v877ryf31evt2b2xvuhz4tpq5upepgpbfrq6ahkdswy2rsd9h90iiedz01dkjr9avguanw7xo95tztsno41locwou\",\n  \"ReturnPathDomainCNAMEValue\" : \"46a4jpu1bbfzqk3o9dt2vhabe3zfb250e6dmecwczurx5o5ouzuohw9keqec2td8vmq9x95njlyvtgrekn7edog33zmnvmpgymg328nnr9kb5vw1icpg1wj5q7eymcbw06tr6qow\",\n  \"SPFHost\" : \"cn32ulmq52d2x9t2\",\n  \"DKIMRevokedHost\" : \"3sstbfrzb6vy6u5zmx2gim8hgcghyl3pu9cgomf6cq4picekv54ntf67\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"njo8cfxlfzbjv6zflvo4tupgwh3s29q33od7fru4jirfjjwvb8\",\n  \"DKIMRevokedTextValue\" : \"1mzy9kegtuk22kzc2dgnjbutn9zkldwvwg46xb11v7fauyuonhrn46gd5zpezsmherl0oi23lnwoe44azk4zabdcla5u038v7wggjiw94m6pk7w1j08k6mx6btmyvkv9niulepjnz7dqu8ttlnj81r8mwphftl5hj\",\n  \"ID\" : 7100304773090426713,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a3c21b13-2834-45cc-93dc-1eb164cdc017",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.765403Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "51c88c61-b49f-417e-b0dd-03b0b0fa27fd",
    "name" : "Rotate DKIM Key - 500",
    "request" : {
      "urlPath" : "/domains/8005818115911944955/rotatedkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "51c88c61-b49f-417e-b0dd-03b0b0fa27fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.76507Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain"
        }
      }
    }
  }, {
    "id" : "5d962215-7d6f-4c94-a233-235a4082a454",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/5211188606349074646/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Minima explicabo soluta. Perferendis excepturi illum ipsam pariatur. Debitis iste iure adipisci voluptas quibusdam doloribus vero. Dolorem in dolorem odio accusantium.\",\n  \"ErrorCode\" : 8614528513306437559\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5d962215-7d6f-4c94-a233-235a4082a454",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.765044Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "bbd0ff9f-ea69-459e-99d7-f77fcb5590ee",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/2255386853992754732/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2023-02-13T13:52:57.764694Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"bhvn74p6ifla1hlpkw33cyv6lu4g103g3dz2h4mtsntjdm5s6jm7f2mzab7puergcz16h45l5l4q8jdx610ztfexr03fv7c2lmd7egi0veqk1t12hernamaagd9i93nvzvz55sqjboz81nwgr2apv72d0iz\",\n  \"DKIMRevokedHost\" : \"u15x5omviqmhq0lx99niot0gzei9yau5dbczk9vqhqhecsdhwrw1stuu7wsdx8ffe6boddbf\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"ijf139p0lvg90dj17hqof\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"1cj53hyrdq0ag6nsh7384ku6yk26r6qjx6be158av\",\n  \"DKIMRevokedTextValue\" : \"f3zg1oz7dqxqaru2lb0jtyjyb97x117naq0z\",\n  \"ID\" : 5205584884062043593,\n  \"DKIMTestValue\" : \"rzif9woe1fwkzx6px1m8b3wn3abpcbz0zacup2rko14l06ql2os344t5cmrfn92uyh7gsvoykge6laii01ip99fxnl0f85jk4kkkieodmwj1v21d2334kf2knc2kzp8to3bqfbmt5djsc5bi18\",\n  \"Name\" : \"Shari Welch\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "bbd0ff9f-ea69-459e-99d7-f77fcb5590ee",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.764956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "2e3eb8c8-92d9-40c3-a18a-e7f894acac13",
    "name" : "Delete a Domain - 500",
    "request" : {
      "urlPath" : "/domains/1720435963676800940",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2e3eb8c8-92d9-40c3-a18a-e7f894acac13",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.764655Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain"
        }
      }
    }
  }, {
    "id" : "df98d29b-c231-4323-b53d-323a9118c3c8",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/2335899536672253465",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Nostrum nisi reiciendis consequuntur. Dolorem laborum repellendus voluptas unde alias aliquam ex. Officia officia neque hic voluptas laboriosam dolore.\",\n  \"ErrorCode\" : 8748405627381879334\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df98d29b-c231-4323-b53d-323a9118c3c8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.764629Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "ee5684cc-3c56-4baf-88e4-ebc0391e02e0",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/7774265105831411056",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Et harum laborum. Omnis molestias ut velit quas quia minima. Dolor quae omnis aliquam qui optio modi dicta. Harum molestiae eveniet qui a quas.\",\n  \"ErrorCode\" : 4431075033217359929\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ee5684cc-3c56-4baf-88e4-ebc0391e02e0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.76455Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "392aab76-9b1b-443a-b470-ef980e9c9f1b",
    "name" : "Update a Domain - 500",
    "request" : {
      "urlPath" : "/domains/1331078701330046606",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "392aab76-9b1b-443a-b470-ef980e9c9f1b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.764469Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain"
        }
      }
    }
  }, {
    "id" : "a5d3ed21-0909-443e-a440-b32ef21f927b",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/6032202733362994236",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Et neque omnis aspernatur at. Velit excepturi perspiciatis eveniet dolorum sequi. Consequatur atque iusto error illo neque blanditiis.\",\n  \"ErrorCode\" : 7001621733078042825\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a5d3ed21-0909-443e-a440-b32ef21f927b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.764443Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "3e7f8636-7b54-43a1-96c5-ca6ab9445e74",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/4358291336504475780",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-06-21T11:00:57.764081Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"r0z1fidgmdovhj9exgq\",\n  \"SPFTextValue\" : \"ni0ce61ixpiofmx733tr6z8rtjwbg1cqh7f0pq5lejh017injrt0bv41n9vqov9fjdloi430xysnfv7lhzn0djyuv7\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"3h0f21xn6hx59frkhcufam0bx0qhdfcqk51w8w8ljyq2w4tdjuag548d\",\n  \"DKIMTestValue\" : \"qw1t9gxpfxp0qe1d2ol0o2ccgbvuolo3r245baan03nc8hzxsqs3lub5btst5ejzlllqkd4k6a8bnxrlryxxfhdym2n5b3ygcbhewsvne7pousiga9hquvewojrpnktqfuoirtoc7sqnlozqa9b717u\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Rodger Maggio\",\n  \"ReturnPathDomain\" : \"uieijwobp64u8mk3mpnv4xcwpvdk44dwtkjohmag9z9daratrioym6bqssekkgnrk614pin35etrqouv4y90oiks1aadl148itxui80p8v7ko6mozhcr9puagv7reu4mik2i4qwp4tzkd6awnvbxx0qlhcrzgniuu1404ul03i6v0xfo7n5wtm7l04\",\n  \"ReturnPathDomainCNAMEValue\" : \"znqrh4p5hybl0ybvbsavu5ykv7ueqs6lao5pr46gsgnb1shqt3wzpx82gveic9o\",\n  \"SPFHost\" : \"2d6icgq6stweerk89w1uiofku65vacjzo7oxn6ah7bi8s04\",\n  \"DKIMRevokedHost\" : \"l38sbwt14hppe17dk9htpoyxmr3z4x4vnj078bdsiemdhgf7cwru0iygiqzouhtb3ep\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"qouiuhqocmmdxj8k8p51j8f7egm28ug6262h3grx6kfrm3i9o1pdz9ybdoj7i2oha2ucp5l\",\n  \"DKIMRevokedTextValue\" : \"ma3393dag623cqiofxr2n5jqk0ggiks71ht29wrl6fhv0rb3sthozlmrt4oe2eb49kdc60cdejg3\",\n  \"ID\" : 6131808699607416662,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3e7f8636-7b54-43a1-96c5-ca6ab9445e74",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.764361Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "15cc2b15-378b-4039-8424-3da9287aac09",
    "name" : "Get a Domain - 500",
    "request" : {
      "urlPath" : "/domains/3661896289602601538",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "15cc2b15-378b-4039-8424-3da9287aac09",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.764048Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain"
        }
      }
    }
  }, {
    "id" : "7615c05e-5e59-4db6-903e-3eb050ba78c0",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/8875379839600528985",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Asperiores maiores facilis quis saepe. Similique veritatis soluta molestiae distinctio voluptatem veritatis. Sint eos consequatur. Sequi corrupti esse omnis minima.\",\n  \"ErrorCode\" : 7144209465465898855\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7615c05e-5e59-4db6-903e-3eb050ba78c0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.76402Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "de314f4b-144a-4ad5-b1d0-da3a72650080",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/3672014633530037012",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-07-25T13:36:57.763648Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"1dekbfon9j7tdc227vijw3rpdyt3i864nqmv9ce4arx8sxlatny099z9wrmsvsdndfjnzp0vxdzd44q42ajd8r98b75ixvlukcw1znw5hcc5z5tesj1wrnvga62huf83sqf8nm50n853a4u61qb489wcrscs5y0o4sdp1imau2\",\n  \"SPFTextValue\" : \"d27qqkf3u1p2obaqtr8rblb09ft31vp1jnlk240v97z50xrxixlebov33ofy6ymm7\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"9jgva2mw8p8lyu8w6q0u8m6ruyumavpsdrf4gobtlddgllqgcqnbbhmgpllsmafvypavperj\",\n  \"DKIMTestValue\" : \"tgakqt8b0t4l9t9o5mu2ufbd7h4glgu3d0czphgylbkqq9qkp5zlzhjhq\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Wilmer Wilderman\",\n  \"ReturnPathDomain\" : \"rmw2t3ebouvuvkm5j8p8dwjt19i7x3tzri39efvtsivzqdb2l2214rg2jb5pz4npp8ra55pjvn5ywg6jra6u455xvbz226lmk60bqlhkorsrluk4dr9ujzlyfhxk2lj9tia65p1loo6vlek62cqgbwwxkpve3ombwyg2ew8aek5octaln2nzi8ihhr\",\n  \"ReturnPathDomainCNAMEValue\" : \"i0e2biyy4q0h6n6qsdwc2q\",\n  \"SPFHost\" : \"amkzy5ggokbqiznih0r\",\n  \"DKIMRevokedHost\" : \"aqtigmmu0pn9a45zluusc8g5bizr0q8b3wu5hr0shebc6cqndqgaqwr3ij3sftdvhz27tc84or5hhbzm4fwgsqy2s5q37yb2mquqevyin4vdzv0kk85l641o5hdashjpajfjqtzyqsq00i72ym1i8btbkqm6yucqyazlw2vh68makueaxky8jb5bu9q662ygekr6ka1q\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"zmjcj37qpdbnzeioh1lqwjx4ar13vt7h4at80g8dk63atc2b59n5ng6xc5dwalr6civflrme27\",\n  \"DKIMRevokedTextValue\" : \"qh89yvhyrtyu2pl4nuup2vbi5q65ajhsn5tmhvbw7lwwtqng5e9dt9o43jpmz7dxfqfyd1sil0jae3dugiyjbo63jdnqc1yg5jxu2mp8z2h8svz0ffa28ou5gkow1t6f2hvygikahgwz0np0ucc78p2sn9ahxzkw5tb5f9zg2w4jub0h6ddxn\",\n  \"ID\" : 2355001768033645704,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "de314f4b-144a-4ad5-b1d0-da3a72650080",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.763935Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "ede6d307-ace6-4171-82ba-45e16b5479a2",
    "name" : "Create a Domain - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ede6d307-ace6-4171-82ba-45e16b5479a2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.763616Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain"
        }
      }
    }
  }, {
    "id" : "d366d4b3-76e7-4935-809e-d17fb57b5127",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ea dolorum aut qui voluptas provident. Sit sunt aut architecto quaerat. Neque assumenda deserunt cupiditate ut occaecati dolorem molestiae.\",\n  \"ErrorCode\" : 8092773735248519806\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d366d4b3-76e7-4935-809e-d17fb57b5127",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.763591Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "09791812-2cf9-4b8d-bbc3-029bfbfc6088",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-12-25T11:50:57.763105Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"3mods4ax91gldttncg7v98qf17a4iyuguz5qlcgew3mmr712vrueit086wuxs0aual75z3joehq1nkug5swi72ho2le0j3qgnjt6mh6v2q3lpm5zmkvr7xw03t1dfc1fxhj3smq00rdgr8ep62pgyl6er5\",\n  \"SPFTextValue\" : \"x6wb5400lpm3ffhd1qwurre8xlbv1axieub3gzfuep7eajfp501q4florgw1pf5e1nvm4dv37o5gw91ts4dhh2eufnp05z37jpkj2j9qjhptwik9dggs5t8cuemcuc8e3nrypz004zgpvwww7ym\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"jjtr968t3q1pnzc2pztldm8w24vamiumj1elk4050cj5zf1revaeaticavprya6lw8lipdywtdax8shbkyjocu11863v0onqf5h78364080ev2oauxn0mqziqedmvalk8vq7qtgfemk3zka04fiexrxvtaw3jn3ccmg3fqfn4l2te066xhd2s2b5mzzjiqzgd30bqzwa\",\n  \"DKIMTestValue\" : \"4hjauz4n0oqdpa8o72dssdrdsygg7kefynaa6a69dwosrd8r5l6go78ac8rab27pm0uy7g7gmodzisnrrsy97adeq79ffmuvsnbl1l6uubvbsifcngczl6ws9703j444xwcwo118eimj3sjyqw1cmiogiwhlbv7o8cynov4f97z4wef9e41dy0ey8zvyeslbm5dk5h\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Max Erdman\",\n  \"ReturnPathDomain\" : \"d9a68cv53f402d1k5obpxrnuj9ciaaz6cc2lcoldjn5vquyzskpzhyfeebits768xfega2h13qw07fczkh1vw95c4hznexb6wrwik8dmyw9k3r1sweohbq302dcsw1a72h2kfwjidm32s4ze9z6g4vr1amgrubr7fa0pvzdev\",\n  \"ReturnPathDomainCNAMEValue\" : \"4tyexh4h85ml77t0kjy7cwzdep7msmpd2tk8lsxz2pf8fuvyrqb73lbku3ctplvncqm0gzvc1zhxdteps9zjnbbe8boaw29s4sp5ufm7ww45ryox58y7t82i5jo72j\",\n  \"SPFHost\" : \"e0k6eh5zdvdouhm2dryyc9doy75yhy74apvwrfku5k5ew7k75fygfqki9jh5kos8kc4nh8ksl5pnxy07xz\",\n  \"DKIMRevokedHost\" : \"kekazf0vk5y2okw58e0hnxuci6a3vh12j6qpjv94mcm3pxn3om94dtmvna5t2n13xc3e11ra\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"8ualq6s7itup2fzevpgjghevujjeob7r7n44fry6icxh6v91l10df4awhda6lqllfk657hl28zxt5p8nj4lpoep53rn24wfrnl2n9cx9c8n319evrgep5r4600lr9ulrka1ingzug6a742tj9zz50nljh454sskwwwb\",\n  \"DKIMRevokedTextValue\" : \"s9u9ruo3ky1ry8m7ha7ifif0\",\n  \"ID\" : 9013402165943061660,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09791812-2cf9-4b8d-bbc3-029bfbfc6088",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.763503Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "475aec47-20a1-4d9d-b9c4-94e2b717e58f",
    "name" : "List Domains - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "6797921465737635249"
        },
        "count" : {
          "equalTo" : "472"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "475aec47-20a1-4d9d-b9c4-94e2b717e58f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.763063Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains"
        }
      }
    }
  }, {
    "id" : "c96762df-45f3-466a-9ede-c561bc11a2b2",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "1701924386214820974"
        },
        "count" : {
          "equalTo" : "179"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Modi sit consequatur incidunt. Ut veritatis doloremque aut sit rerum. Eligendi fugiat consectetur ea unde sint.\",\n  \"ErrorCode\" : 5510524323376696607\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c96762df-45f3-466a-9ede-c561bc11a2b2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.763012Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "26d93760-3f6a-454b-9b71-68997b1c50ff",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "8882505105856045243"
        },
        "count" : {
          "equalTo" : "273"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Domains\" : [ {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : false,\n    \"ID\" : 1254177398357839090,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Julian Fritsch Sr.\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : false,\n    \"ID\" : 8230489058921722752,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Odis Cummings\"\n  }, {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : true,\n    \"ID\" : 7865925536986991939,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Miss Michel Gerhold\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 7142488587945936996,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Raleigh Rippin II\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 3547978292968809842,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Dorothy Heaney\"\n  } ],\n  \"TotalCount\" : 5379921856177090268\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "26d93760-3f6a-454b-9b71-68997b1c50ff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-03T14:19:57.762874Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Domains" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DomainInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    }
  } ]
}