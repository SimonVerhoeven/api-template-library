{
  "mappings" : [ {
    "id" : "64dcfd7c-1269-4353-bfda-a3e569da3544",
    "name" : "Push templates from one server to another - 500",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "64dcfd7c-1269-4353-bfda-a3e569da3544",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.447722Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates"
        }
      }
    }
  }, {
    "id" : "b9583024-f334-4377-9de5-39f0ca391fa3",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ipsum omnis quae dolorum necessitatibus aut doloribus. Et magni omnis dolorem expedita tempore. Aut in qui et quam. Doloremque asperiores ut in itaque. Sunt nihil id similique.\",\n  \"ErrorCode\" : 998707955257262300\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b9583024-f334-4377-9de5-39f0ca391fa3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.447697Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "0af5f691-fccb-43b5-9816-1009d84b6bcb",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 8281328237757133379,\n  \"Templates\" : [ {\n    \"Action\" : \"nza3hj3ncz0nkpj5vzyxatgshflq9x2n3a\",\n    \"Alias\" : \"qcbi3qbevmgad64dqsk4txh076v9w9syi9wdd7s51tz251d3\",\n    \"TemplateId\" : 3964174105046560157,\n    \"Name\" : \"Concha Bartoletti I\"\n  }, {\n    \"Action\" : \"snz2knp7me99zxzhosmqi4j5kgc5q9ox4vbufo8uunn7y11oqyztdvf3uxn9ays5izy2smeukxsdws4f05p7dngw85nrroijd7w3j7imkgtlxvmox6ffvue6f0lldgxee2cbn6avifd9wskail2\",\n    \"Alias\" : \"q4cjrcbqka7ukf6we7s7npfqnw94ewl0ym5zgyq54r5y3unltxly7ju2z8t7mb3gckqy4wi4uspl2ysku40acr7ob3e0x4k9a1tk7ngexmzspzd6qsfjic8f7x6f91bdoe\",\n    \"TemplateId\" : 1985019553986461572,\n    \"Name\" : \"Jefferey Wiza\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0af5f691-fccb-43b5-9816-1009d84b6bcb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.447576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Templates" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "Action" : {
                      "type" : "string"
                    },
                    "Alias" : {
                      "type" : "string"
                    },
                    "Name" : {
                      "type" : "string"
                    },
                    "TemplateId" : {
                      "type" : "integer"
                    }
                  }
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "49fe1c3a-6029-44ce-9262-c63bfac117d4",
    "name" : "Delete a Server - 500",
    "request" : {
      "urlPath" : "/servers/2014291516254620743",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "49fe1c3a-6029-44ce-9262-c63bfac117d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.447202Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    }
  }, {
    "id" : "7f305197-5fdb-4f05-a1fe-71f4085fcbd5",
    "name" : "Delete a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/438677122869038582",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Est nostrum eos quam. Assumenda aut et iste est. Rerum eius laudantium consequatur reprehenderit inventore ea a. Consequatur voluptatem commodi voluptatem.\",\n  \"ErrorCode\" : 1524959050793681765\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7f305197-5fdb-4f05-a1fe-71f4085fcbd5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.447172Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "80e94cea-8625-46df-b3e3-41696675d097",
    "name" : "Delete a Server - 200",
    "request" : {
      "urlPath" : "/servers/5070415847516445969",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "80e94cea-8625-46df-b3e3-41696675d097",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.44706Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    }
  }, {
    "id" : "669778a7-6763-45a2-98cc-2815a8f8dc06",
    "name" : "Edit a Server - 500",
    "request" : {
      "urlPath" : "/servers/4137234811362039412",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "669778a7-6763-45a2-98cc-2815a8f8dc06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.447034Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation"
        }
      }
    }
  }, {
    "id" : "9ba5077c-56e8-411a-b54f-7e3889fa39df",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/2452968513325687713",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Et accusamus quam labore consequatur. Vero officia sit consequatur tenetur quisquam corrupti molestiae. Eum consequatur laborum facilis nemo incidunt.\",\n  \"ErrorCode\" : 1398359523087610147\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9ba5077c-56e8-411a-b54f-7e3889fa39df",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.447007Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "c05c8693-3d5b-4b6f-8073-eb3e600f7ba8",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/1315898280344621092",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/022490\",\n  \"ApiTokens\" : [ \"p37fzu5jxsybu60ug6hqiydmenitstjoaa9u03c2dehxh23z3xear6w1h09zwylrsz9bcpoeonhn49y2ilv1xwl8cif6eq6mt29rx8ncabhxa\", \"fy07chdykww750887oar41nsx0hf7tu0wpwhruf3f1xp8qfrod6r06tafqm5dw5edv9fauqvzlr11a45y7lhnzudxfcfh4xnqz7udpuu7h86zzoc6grd8orhh85gd6h\" ],\n  \"ServerLink\" : \"vhedwf5z42n4f7bqmj4dp6693azdfb5btdstbw8xdcd0ek1qh8orrbi4ccx\",\n  \"Color\" : \"b8y8il9medcgp0glpy3j1ag3c3r89ffg8b8kd2hvzwzu21w3mps31v268erx3678ubscbkh9rnp419airn5kne6b5svys4nwmgm8qbmftp9zda8az3pnj5k36ul9wqu6c5mzdu3pjsdre21c7mx0qrph8rnrzkkg\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/098821\",\n  \"RawEmailEnabled\" : false,\n  \"TrackLinks\" : \"HtmlOnlyTracking\",\n  \"InboundHash\" : \"v7fgg4636ttleddoqch5eeuhl1342y2ke70zdch7406cprnvye72534jmg6znrzwgogaizv3bg03ptyxojyky9wc0j7vzbs8u27ocdk6qrpaen1h7fqrp5kh5ahpede9jdw65jhie7htci\",\n  \"InboundSpamThreshold\" : 5485306504785955508,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/636457\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/172734\",\n  \"InboundAddress\" : \"20mbwglkwdtbusl2x71yi0e7jpbz2k62tol346oijxb9e5hu4jpo6sual3uxvl0xggyoi4qbmrhmmfzeqha1o5\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/319835\",\n  \"Name\" : \"Brigid Windler Jr.\",\n  \"TrackOpens\" : true,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 8012671711040788209,\n  \"InboundDomain\" : \"bvkfoxdw480arjkv5hdl1lvneoh5edynhaa9k07dt0n2kd6hvm6ke5zyl2cqjuwg9ptiwad58ive2wm4s41skjl0c7fiy9ho1jue2tv0\",\n  \"SmtpApiActivated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c05c8693-3d5b-4b6f-8073-eb3e600f7ba8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.446901Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "8ddd8e77-3a1b-4ebf-b052-eb5222a60c99",
    "name" : "Get a Server - 500",
    "request" : {
      "urlPath" : "/servers/4200251326395358446",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "8ddd8e77-3a1b-4ebf-b052-eb5222a60c99",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.446279Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation"
        }
      }
    }
  }, {
    "id" : "f48e9160-dee6-4740-ad6b-5b90568b88d4",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/3407923489906571908",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Odit quo modi quis et dolor. Dolores labore dolore nesciunt iusto illum laborum libero. Quasi iure impedit.\",\n  \"ErrorCode\" : 7845421395989563388\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f48e9160-dee6-4740-ad6b-5b90568b88d4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.446251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "ff7270b6-fe97-4282-a394-3ec79f79d35b",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/6308328005498124333",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/912708\",\n  \"ApiTokens\" : [ \"npxcykdfg6aatervfnru1pnlj7bxpzlumthwtus43p03l06qde76ngtahi6wctr0ozi5nzyaxm0hk7k4bo\", \"rsth5ow4523ezksyl9wivjjtqnhq6ha9pbbiuba6ut7ezwhf7u6dg2egutrcp1y1dqu30jvpnqcd1westsyif8204ltvf3oing0iu0famzr9ciqqs4k3p4fnisa6gag87bflc0lwldvf9yu7elkal605\", \"b6nbqsdlfuu3xl2oc22gl8ves66vawp0kkkyi0ah90uu0yraavgt8g20fd870fczwwzbhm8quki1j55rg7azg77trdfq4ua9t6inqoc7lo2rhdfl\" ],\n  \"ServerLink\" : \"28bhvnouf9n6ssr2zihm6svisoygp\",\n  \"Color\" : \"fz3vsmxqxe8rgylcwa8r7f1af5b8bbaqknzxkkwcwufet5j5hrm2vkrjngxj9c91zxcumiow1ociahlyfjsn9rqkjni4hsxs4oerfja799oe62xehmklyd0g0650qruxody4fduv\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/986188\",\n  \"RawEmailEnabled\" : true,\n  \"TrackLinks\" : \"TextOnlyTracking\",\n  \"InboundHash\" : \"6lri0rhdssnzlp2buca0axdkz5ri8q35hht96l4a49gfbic6lvq3gubyz0qhbcpotsftdti75f9nrmjxur31cenvq97mxyutczsinvx9b4z95ozixddvfztyg8uvvyeisl9xbnvie296c6wj69tw4vw3pqooprxanv5ubh5wu9v99iye55d9w82bl2s2asi4vws\",\n  \"InboundSpamThreshold\" : 5524587896574111229,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/956657\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/175111\",\n  \"InboundAddress\" : \"7d4uo6ovsub0hi3990d19gkr37f1vfl524j3itnd6ksja5e0xd5tv8ble4m5tp03anhud7wpivau2z093k35hpd7w90rniw58r85mctasvdk0qvk0287aj243qeyus06asfe50nop82xwxbi92rsfqasm1vj9gn\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/042845\",\n  \"Name\" : \"Zachariah Lynch DVM\",\n  \"TrackOpens\" : false,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 6935561686513938677,\n  \"InboundDomain\" : \"cnjtjrobzpxlkvbtuiyqrpxp6j6c50pn136d7ihqez27ivi4w3qugmvp4xyfeekrd17u92x09z2d3lm6jqcqsqqpog24fhegc3oe4jgootkpd1jznglqf27en6ey4kffa5zzh24jngodjwok0oaq2o6kr8fsqf6sz16jz67thmeoqdul2oqy1fyax6sw\",\n  \"SmtpApiActivated\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ff7270b6-fe97-4282-a394-3ec79f79d35b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.446154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "af692963-357a-4a23-b827-85c37c6f155d",
    "name" : "Create a Server - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "af692963-357a-4a23-b827-85c37c6f155d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.445556Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer"
        }
      }
    }
  }, {
    "id" : "093bd653-15b9-44b5-9cc2-08647484b5d3",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Itaque culpa aut aperiam delectus soluta est modi. Quia laudantium consequuntur quia sunt dolor recusandae unde. Porro reiciendis saepe omnis et eaque. Vel delectus est sint suscipit.\",\n  \"ErrorCode\" : 5145250796087334476\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "093bd653-15b9-44b5-9cc2-08647484b5d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.44553Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "4cc52f64-3606-4ab2-beaf-811f0b55720f",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/012663\",\n  \"ApiTokens\" : [ \"omx2wkxdjacbobpx37lmz0mlrasf6ufwnv8ihriugadsj52n727aaynp6jlbg1ock1637urr507weyl5\", \"xui8akf9uske3jnk8lx5lsuf3u0a94zq6vpn525c7qm03imc9642yq8bzp1jpdxygix7kufimrbgo1u25kmfk9rqzxe837pz73etnhyswnme1zsvll82499dri4pxe0lgix3p2k10ffrg9mzvvtllt4swdi\", \"6rgn0a0dunlkkkzt9cna99r41z339j8ot7om7x5ss7boyux1eowgookt54oo1lx2p\", \"d7gjntygn7373bv14ni8bxkxq5sxghsje73kpjxw5449xyge2iuird635yiqzoc9ugcp7prdni0rch8adyyakzh5kbu6asis128s5bpkzu1ark11eq66o5qihgg4c4fv8p6fjsyh21p4c4jms50ch9sn8ojostibv9ohp4ena903e0w68f231jvkullv0t\", \"qf3b931cvrrir1n6v4h2tefec0462cf55zwjx3vgmsaot0zr1tqukmxcxee8uglgr9nnegj5copzdllqshpgv67yr4qdz9csr1igwcsvafzk7m9zfhtpimgu60kn4qbki23ezu2r\", \"ymrvs756rjq\", \"nmwsv3jan3ihpjqqmwn2xefxkd5as8865k77i3li3iy50lgbjfohvulcvl0li17wxtrcsmxbqn8ovuhrw0lhuwk0803cnrfuk7qbhnjxixdpunqsanm5llfcfljpmz5vdgix0ugn4zxb9vtqoke12neq32o\" ],\n  \"ServerLink\" : \"y2c91bd8mgjsqd2t35fse9bg5kvmpeefw4oc66hwa3y0o2fhbav8xpxiuq1sz1i530am1n1cpemhg71ijbi935bqli60ld5mh7oscn3g0kxq9f7woosglajsh\",\n  \"Color\" : \"azteywpi7xe817k2rktyj05rrsb2z4fyjpwmcs1dzs98pjn85scn87gt0i40lr8l8z8uat9sd1puqljwji2yj0y11b\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/845303\",\n  \"RawEmailEnabled\" : true,\n  \"TrackLinks\" : \"TextOnlyTracking\",\n  \"InboundHash\" : \"5ok8l00wc1j4bxkeidp9x7ogf6w55c9jvcv9ueqeyggq8m0kpuqjpfr2e9rju2bnvnylbxgt4vtqpqp80kkabmhgnl08c8xsn\",\n  \"InboundSpamThreshold\" : 8881815921787549929,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/548236\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/902239\",\n  \"InboundAddress\" : \"touvxj1ih38starrf0dv\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/809655\",\n  \"Name\" : \"Lesa Roob\",\n  \"TrackOpens\" : false,\n  \"PostFirstOpenOnly\" : false,\n  \"ID\" : 2029085775866961858,\n  \"InboundDomain\" : \"zbp6vw9oc9fcmv5gpwkryyoaawqg0upcwsglr29qfzo8b4w19xrmcn6u4hzuchqyjdzy04mptbb7caosvo5fpea92pbjxpzfa3vyv4c5\",\n  \"SmtpApiActivated\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cc52f64-3606-4ab2-beaf-811f0b55720f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.445414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "c1a6476c-76e9-4e14-8995-796897b8915b",
    "name" : "List servers - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "3693909687164827327"
        },
        "count" : {
          "equalTo" : "4590565711363494520"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c1a6476c-76e9-4e14-8995-796897b8915b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.444689Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers"
        }
      }
    }
  }, {
    "id" : "f7ccb615-2e68-4844-abd5-be550129238d",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "686177487086424300"
        },
        "count" : {
          "equalTo" : "5711458226508335537"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Delectus fuga nostrum. Quidem at eius sed ut voluptates voluptate deserunt. Officiis et eveniet deserunt repellendus vel.\",\n  \"ErrorCode\" : 4092953719132204504\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f7ccb615-2e68-4844-abd5-be550129238d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.444637Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "871b0405-e09a-4b55-98b5-04e95bf280bc",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "3065682684582642724"
        },
        "count" : {
          "equalTo" : "2612655354056382218"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 7189419324084473322,\n  \"Servers\" : [ {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/385530\",\n    \"ApiTokens\" : [ \"df6doqqfsj7o647r30fsr27kdxvgu4sti5gu9f9xpihvbh3rfm67lgf0\", \"5312wfhr7xjqc639jd29myksackz4d6astaadvcgds4chq29meecrz3876rdiz16gyi9ybol5v9z5zwy4kztg2avgr3eebw9g114t9a7s6un\" ],\n    \"ServerLink\" : \"pl4zlph23lkeockrl1i5f89f4sue0rbdez0wxewn8pq9m90e635v1ez1yiolswy31p75jdmmbq01tu3orexbzb2ng7f7tdr6sfsl6uv0sw6h4u7yafddx5i9mzsrzcijd8c9sm8ko6bzx0arlt6xffrgslebt\",\n    \"Color\" : \"93ji3qrr1k6wxjxx3r31gy2w844v2sco6esfvnhyczpkx5udzyflgrom217df9x8qgd09qnqyu25pec3chd7mt0j2wpinu2y\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/176213\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"HtmlAndTextTracking\",\n    \"InboundHash\" : \"wyoekgqxzmdges3wwv47x7p86lil4xx5ygr4ri8mx1jhvtodkn1q3tcbrob1le3y5rn1pbdsm53y4r4712ql69vclekqs9uyzadwa64um1mli33eeq6sisrolm61lh6iksxtubhpuvwgz89njougztzv6qtpk28d4bacpb9pmphqpnryd328d9rghwgyl\",\n    \"InboundSpamThreshold\" : 4903734827249482317,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/774813\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/082786\",\n    \"InboundAddress\" : \"3pxtz6bmv6212fzay56sap3agsd4rwgrl9j74hh33iv44cn38ofdv15q2njef37wwnxklrsnconvua2qxjexp620wbbntsfl0t6mp0lczzsn14nilcq249npqtdbqjntphhww5fahphpx2v3s93lo18lfdmzhxkl3c1mrtzpsk63ptqixm\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/247473\",\n    \"Name\" : \"Camila Wintheiser\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 7706953603643273261,\n    \"InboundDomain\" : \"poa9x\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/223480\",\n    \"ApiTokens\" : [ \"8m1v9x1musg8xm8ip1p85kgd0fvtbw75y9hw02gwp1hbivxibu4966b15mzeuax06lzizw9yw9lg3at2vo7hpojazyscj3h52l3weitvfu1fez2y8mufwts8ojb1jofdhbuvcakkq9oroeiyu55cy4q8nmj5mq3j3nvzqyif6kel4ua6hft7hickn\", \"107zxa8r3o3if14a4izb4r9k9tb827ffchr057s7bcsopekyg7qb1rb909cqsgbxyi\", \"jaad6g6y6gjjmokng1qssrasylyaadg59yu15j28hzmw30p56tk1gyjd228vo8qsdbfhmy4d71zq6e8qhh1pojn2bxxiatgcjte46yoz0pb1pcm2z3q1htszqkrhvtfyj9yj45icork8g3fiqy2key405rq6tgy417jqdwhnckksu72clj14\" ],\n    \"ServerLink\" : \"qvo1clpyr7jwfvp5awz4pt4i5eat2au4ui1alc5ushhwtti2jd72b7crz6xr39\",\n    \"Color\" : \"klljqb8tjxrsgu5p0yds0z9igi6qwefq8onjyeoyj3epdyd4oj55rz40uf2tymcol4t950jhscfyvklc38aikm3q5soho06jki3j13ws9iryhlrg6b\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/353013\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"HtmlOnlyTracking\",\n    \"InboundHash\" : \"ovg8ecrcoskeewia4uh9ibs6pls0pxgbgnfvctprpfpke031qe67vfvt74e1b9hb1gqox3xzcjsce2wmulazs027gkv9mu3yeqrwsvsk8ahtxmpk930tjwekczwtej3lv1vd64mapz60cdadd0slun63bi7vwt64sp467qvgr6p\",\n    \"InboundSpamThreshold\" : 8248468835523863782,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/420298\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/710804\",\n    \"InboundAddress\" : \"f4wo2lc1yk3nb9nusc96nuhb9ayf0savfw3e\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/625884\",\n    \"Name\" : \"Marg Hermiston\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 2627380043929950605,\n    \"InboundDomain\" : \"qb87q6u72y77g92w94dfjgta8qwhorjzpupg15v7qv91doj5wzhf32w3m07z2rhed2584s\",\n    \"SmtpApiActivated\" : false\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "871b0405-e09a-4b55-98b5-04e95bf280bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.444497Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Servers" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExtendedServerInfo"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : "The results of listing servers."
          }
        }
      }
    }
  }, {
    "id" : "c31b39ed-1e1c-477d-9634-7f8fa44dadec",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/senders/8959770590690496461/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "c31b39ed-1e1c-477d-9634-7f8fa44dadec",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.443311Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature"
        }
      }
    }
  }, {
    "id" : "08ecf1e4-58b8-4c49-b745-a737cdf96b0b",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/8332758065135605508/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Enim in voluptatibus dolorem non nam vero. Ratione qui quibusdam dolor. Cupiditate est quas repellat aliquam. Corrupti ratione et beatae. Porro officia earum amet odit inventore et similique.\",\n  \"ErrorCode\" : 6082331415717844927\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08ecf1e4-58b8-4c49-b745-a737cdf96b0b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.443283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "ae7e926a-4ed2-49b5-9696-671459aaf080",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/3328561130794878147/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Ranae.Swaniawski@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-08-06T14:48:06.442705Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"eqrm8wranptfzwgypq9ezf5tnvaeu25z1x9589vv4m2tb5mtx3any6zqnn86zyorbprwywwmw6vs1t3va85e3q1n4rly77ck8nf85dn2f8sdpg7rc\",\n  \"SPFTextValue\" : \"m0894y7trlqy9wz4l5zwwejvgjx97z09vfp9hwag0cx403b3hfs2bar5qb2mj4noq7q4qzgmptde5werwal2rij09y9lhbbw6g6pc00zr41ni5xeqz9tau00tqguymx33b201c6f4mqw0c7d0k226als0us06\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"5psj8lbhhqxs6pcbrcip6n8x6ip7skaf2e0d986ttpltk23etcm09zirvaurkctq2ca6mixu1jxmg7u3ges4hcmgo26t03yr5f06bofc6m1n45p01rixkr3leyfea45kw78hs9kpswwg2nlunzlsg\",\n  \"DKIMTestValue\" : \"imwgp7nubsw9ivu3a16gdch8899cp4ksjx42gtpn6q93e8d2zpq4ycf27frriinid45tnhozu5sf29ethw92cpoos00drjryhzz0ucdlad84c2m0\",\n  \"EmailAddress\" : \"Cristobal.Haag@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Miss Mark Reichert\",\n  \"ReturnPathDomain\" : \"1wbticgy27770gluqrj2nfeslote14mu3ntx66u0skea7pq5uw\",\n  \"ReturnPathDomainCNAMEValue\" : \"e4c53jyjc0teb2val605s5k0xdcdockj9gush93q6lba8hyv52kas7arf7zqanutsd1vl4bu9gf212h501igxks48s1zbb257b8ewttyxgsgye8pxjv9fts00lqqlrcyiuj1dzvj7vynygi778uc9i5rkjnygg8a2efllr811cq7uplz8cz1k27xm03olmmrdznhc0r\",\n  \"SPFHost\" : \"lvo6mky0kvd41co1\",\n  \"DKIMRevokedHost\" : \"3akgpr361p3vxppab92q6jpgpzji2yl07t1qdhuo5tefwz9ld4ogfewwmv6ig4ouhxit21ikwfh4drob56g1m8iwo8eahbvcmz5ht4bhnggkfalnsl4xp3sn5\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"qzwpmx1uzl83rtpro6xqk197gkpe5ltaldl8bn2\",\n  \"DKIMRevokedTextValue\" : \"8d5foani7gbr2omwdcywpkddnop4ft18exnegfqndpi87si6d7ryoskobcdgca4meqy7uw0hv\",\n  \"Confirmed\" : false,\n  \"ID\" : 1198727521365344171,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"0v2m5xpkqnnderfk616fupnrd0bq4kbao0gj88h62n9xh78vca4xkbgmvv9h926tx96zpzuc39oxqjq8550vwit1itmuceldafttnwj3vwpwynr75qir9jcqkent27g0xp4y6kh8llmflkpkkuzz8cnvefnpqbe45svqrk8etbtu63tr2h\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ae7e926a-4ed2-49b5-9696-671459aaf080",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.443154Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "e785e88c-46be-4af0-8a3f-bec8ff1b4b6b",
    "name" : "Resend Signature Confirmation Email - 500",
    "request" : {
      "urlPath" : "/senders/1909434894949998820/resend",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "e785e88c-46be-4af0-8a3f-bec8ff1b4b6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.442641Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail"
        }
      }
    }
  }, {
    "id" : "89f53f34-82da-42ef-b5ea-5bc77cc8d923",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/7271863203926358566/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Minus velit repudiandae consequatur aut est possimus error. Earum dolorem soluta doloremque laborum qui itaque. Dolorum dolorum corrupti labore quae. Hic laudantium enim minus. Voluptatem quibusdam al\",\n  \"ErrorCode\" : 3880125323627940971\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89f53f34-82da-42ef-b5ea-5bc77cc8d923",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.442613Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "c5c32f73-0c40-480b-85be-8f0d3875086c",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/2776578342299555507/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Labore perspiciatis dolorum eum recusandae. Molestiae est aspernatur modi iure. Quo quo accusamus veritatis velit. Et excepturi laboriosam quos quibusdam.\",\n  \"ErrorCode\" : 2536021405791349938\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c5c32f73-0c40-480b-85be-8f0d3875086c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.442512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "4c803eeb-5785-4cc2-8d9a-8ed4d54866cb",
    "name" : "Request a new DKIM Key - 500",
    "request" : {
      "urlPath" : "/senders/1645093951740550065/requestnewdkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4c803eeb-5785-4cc2-8d9a-8ed4d54866cb",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.442413Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature"
        }
      }
    }
  }, {
    "id" : "4ff5350e-04d6-457d-8f51-f74fb507162f",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/8120649581242532902/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Placeat minima perferendis corporis nostrum. Beatae corporis magnam temporibus dolorum doloremque sit. Rerum illum ipsum enim. Qui quod exercitationem tenetur sint rem voluptas laboriosam. Qui praesen\",\n  \"ErrorCode\" : 366699656393254219\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4ff5350e-04d6-457d-8f51-f74fb507162f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.442383Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "e45d1deb-8d7e-491d-84db-e65611f654aa",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/7569524615366781741/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Qui aut nesciunt exercitationem amet ad repellat aspernatur. Tempore maxime consequatur quia hic dolorum. Sint accusantium doloribus enim suscipit reiciendis odit libero. Repudiandae nesciunt repellen\",\n  \"ErrorCode\" : 6783977584954691863\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e45d1deb-8d7e-491d-84db-e65611f654aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.442251Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "ffcfe4d8-596e-4c0b-8861-c6a437aec303",
    "name" : "Delete a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/2119891844199477782",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ffcfe4d8-596e-4c0b-8861-c6a437aec303",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.442113Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature"
        }
      }
    }
  }, {
    "id" : "67f6b81d-a92f-4cf5-8c90-7198018bf779",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/4098590617489601584",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Architecto laboriosam deleniti quisquam. Reiciendis quia consectetur et sed facere sed numquam. Laborum et eligendi commodi dignissimos est.\",\n  \"ErrorCode\" : 6794013462730467265\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "67f6b81d-a92f-4cf5-8c90-7198018bf779",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.442086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "a1b9ff30-1dae-4edd-b8cb-8288d083aac5",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/1758708190647713641",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Temporibus nihil unde quam non voluptatem. Minima sed rerum a sit incidunt minima odio. Et dicta saepe sunt modi sit harum recusandae.\",\n  \"ErrorCode\" : 6992978603991943594\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a1b9ff30-1dae-4edd-b8cb-8288d083aac5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.441993Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "a7e9628d-d920-408f-85da-6475a8d89b58",
    "name" : "Update a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/6599369085483165614",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a7e9628d-d920-408f-85da-6475a8d89b58",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.441903Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature"
        }
      }
    }
  }, {
    "id" : "fe6e8af4-4194-4ec8-af89-1e12bf89cd66",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/7725858519376737707",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Commodi aut ut pariatur maiores excepturi placeat. Autem enim autem repudiandae non aut. Ut ut et voluptatibus. Earum debitis maxime soluta. Quis est nostrum optio accusantium.\",\n  \"ErrorCode\" : 5614879020885286760\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fe6e8af4-4194-4ec8-af89-1e12bf89cd66",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.441877Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "4f0d02e4-737e-4d3d-8135-fe85aa6cef9a",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/144877256066037384",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Annabell.Hauck@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-05-20T15:17:06.441421Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"jqb4lkqn7m1mcjn4bc4iojr41v7lmpl5un20txpbw4tjpi42ct3c9m6z3q4oujafvcp7er6i0xxaadt8x1vch8yjedcd2igvhb8gpzdk37huc2ljh854yy2g94n0gif8wzu7hg6hnd2t710l4uhoio6y1g0gpvj89l8u9silbk\",\n  \"SPFTextValue\" : \"8zry45am0ym1hu6jt581ppz0acrf2q15nzm7e3x0p8anu2ra1m9khkee86vb0m551178xvyqs3k2acjbv6p5yivupofysjr98gfacd7xs5brzg42bgfx70lh522xdw\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"7jpq72oxfnzq14hn13wlzn8na93\",\n  \"DKIMTestValue\" : \"6t3kks5au1wim62q24nctzicka9dd0a272mhfoa2sowj3kb959k7pszu9a2gp05vg826xbn8q07h332ppzl8dv20d7wqm3v850wgofhz8kclu3hgrndwpnv1b725805hh4wv966er89uc0286klacyysjkdmjh2mkvd6s407qgrxs18326t3oqjf2x\",\n  \"EmailAddress\" : \"Lory.Ziemann@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Owen Johnston\",\n  \"ReturnPathDomain\" : \"862skdt7yod9a3bdgada3vrddlli7i3tcsod0mz2w1yh4rcga591i82fr22wiz9rlo6rr88lacfeixiseefm512t8oy6z00upo55k4o2iunt32wqou0yitb1kqpnhyhxqdhrken3bpj8om6y5qfge14ojj8r94kbbg55ztpo1e1y8wr8r\",\n  \"ReturnPathDomainCNAMEValue\" : \"u4pms1ka84i6w5kvsy1e2mvrg7cmt38xnjyy4nx9a66olqjvxreq2l4e1lxb0l29xkz3z4rpj8d6rutw5m8w7hs3y0swd95d8on\",\n  \"SPFHost\" : \"kqom4zmd8c5p1tl88vswh7gciyllzxi9sd8i8sbf50d1hw0tgo6ah1euvqg30ric9p7k1girol71dqmonk9i93a0la6xeru4jm0ew2ekdo58qp16\",\n  \"DKIMRevokedHost\" : \"carvrtp71o3n7rnotdd3sko439n5aw2hw9n2xbysamxco8ihvgjbw1nmtmv9reo5facwuf0cac4d9tjxct3grtt8dd2giit6g7ohjx69uqgu3oxsnrtfetty6vk5su5\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"tnlnyd9fvid6r8ij0633vyetknfazwwj67zmfwadgaa3mgg5wahd6zslifm2621lg82\",\n  \"DKIMRevokedTextValue\" : \"t6bus4p017p47qefe3vr7rx8guud0uwoj474ktct88nf5qrwj0e1qpgclziffzc1hp2ecmsqpx5vzijvz2ucbk7va57hpeda004wvlqfbqfrtiuvq0f6qh5cfhi69gaj0rhmm425w7pxf6fto8d1m7b4wv4hvksj58tk4r7wu\",\n  \"Confirmed\" : false,\n  \"ID\" : 8677427493506123441,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"o1x7ektictcrlh5g29hmdg3yzd9rblxgxoapniwej5aw7addvub3wa3onbxdgg\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4f0d02e4-737e-4d3d-8135-fe85aa6cef9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.441774Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "d8475a01-3a0c-4677-a51f-e4485de0c0e4",
    "name" : "Get a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/7750563966861905584",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d8475a01-3a0c-4677-a51f-e4485de0c0e4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.441377Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature"
        }
      }
    }
  }, {
    "id" : "6a51d3e2-e38f-4523-818d-94e09f2b4867",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/318815654216319267",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Laudantium praesentium quas culpa non. Suscipit doloribus repellat consequatur illo at velit occaecati. Reprehenderit itaque eos quod. Natus magnam ipsam architecto odit fugiat.\",\n  \"ErrorCode\" : 8224020249220550676\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6a51d3e2-e38f-4523-818d-94e09f2b4867",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.441351Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "f9a25706-fccf-4127-809a-d50a993e7585",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/1794834381822635456",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Natashia.Herman@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-08-05T14:28:06.440907Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"84v6ggmna6sk4uxp2tu1e0wj98lf0jx\",\n  \"SPFTextValue\" : \"84l4\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"6yen4d\",\n  \"DKIMTestValue\" : \"m4wtnvwlwr0du6zzwg9cdgo0j6ms27movz4gbbb4xba1nd68aikms9myxx1x50rc81idcvqprwf27pes2dyq0tne8z9rejb4\",\n  \"EmailAddress\" : \"Reina.Nolan@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Jacqualine Weissnat\",\n  \"ReturnPathDomain\" : \"dzxahxzsfu5jebds8zpc8evrqj4ff4ii3yob1g4829toame4xysmi44p7rxt0m9whrujnatzmnjcq850oq6dlrrzywi\",\n  \"ReturnPathDomainCNAMEValue\" : \"cy1b6c0zprebwh5pkyoc9fdfrefc6k7t3kvdkw4unztnlur961ggyhcfbboek073ysmb5es0uir3x\",\n  \"SPFHost\" : \"9klssngkqp5b9myskbqzc13j1ful68kcm2bqbyfydgzixe7pc977fk42wtfme20r\",\n  \"DKIMRevokedHost\" : \"2c6qywa8zoe3t34bjefl5ygdxbkw7nmvgppzmo5cibiq07dnq33vw4ddsjujm\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"a3u1zrp9wxkzz1vv7c8mpzjnu3nx9lszg27o33oml6polwhptkfh9i5oey8ipkfx3nwyke3naa7i0oqf7818c25i75km15cdqzfke0cgu2a5drcr2sli6n5nfygkonbhqdyyxclxppooc6xkdp4\",\n  \"DKIMRevokedTextValue\" : \"32wn6nkhae6p76cdrhyg0scdxc7w37470pmmkuy4l5cl1khwmbkievuagrfojhmhufhsqazfh5zy0jel8qghh8cw7cm2q3ztxhpdz24x758evw051fcdhw4nh46qybvnpq1lcywin2fyadmeg6jhu92vvnmfhqtb9br\",\n  \"Confirmed\" : false,\n  \"ID\" : 7050024149999309527,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"2w5gqntxm894v4lwnzmb\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f9a25706-fccf-4127-809a-d50a993e7585",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.441252Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "202d9ba6-4fca-4902-b685-c908451edfa9",
    "name" : "Create a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "202d9ba6-4fca-4902-b685-c908451edfa9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.44086Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature"
        }
      }
    }
  }, {
    "id" : "52c2fa4f-2582-45ac-aff5-b4a289425489",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ut alias sunt saepe. Repudiandae quisquam qui et. Voluptates ipsum dolor quo aperiam porro hic. Voluptas sint voluptatibus aut sit. Iure provident excepturi asperiores sequi repudiandae.\",\n  \"ErrorCode\" : 4616654850003781334\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "52c2fa4f-2582-45ac-aff5-b4a289425489",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.440813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "4a96fd04-ddba-41b5-85e9-c9aca5a44949",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Dallas.Adams@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-05-18T17:18:06.440247Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"qvmj5x3j6wan6ib0rzilbxvplhob822flx4i5314tw1ascos6fo5itdq8lbwqtytdwv7lf71rld7udx59q07mr0cpl8hpmemcf907rpiw3lqnfwe4v19ra\",\n  \"SPFTextValue\" : \"7gqzmuocuiv5n1bvfd8xppfozmxgy9l6c7n94c3ylrvw9rdk4kxe5139urean28hyv6ouqogyjz5u9myzmvgoj35hrtcpuhjtpb86s\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"lrqkb6ymmv70208epyak9y00ee4rkeq7i0qnwb\",\n  \"DKIMTestValue\" : \"evdd9j3zsdad64nwi88abhhvpdfvfv7on3w8au6iline1n40m47t0tls7jfopjzr2o1csfzn99bh3cn7q8fv99stq9ghsnz\",\n  \"EmailAddress\" : \"Cyril.Johns@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Faye Bechtelar MD\",\n  \"ReturnPathDomain\" : \"os1t0dsinrhv5sjakqvkgjw6or6l6lns1p1hsd1msm5f\",\n  \"ReturnPathDomainCNAMEValue\" : \"rza3ais4r81r0v8faij4ydjpfjd3ns0v166xi7ncm992kwkcb1iufv593cx63v5d5lr8b7t5s6mmq2f3j1mngwwoockq7ybb0k044124ghs\",\n  \"SPFHost\" : \"q7mes3lkx4vnpcaz7vvei8s4ncgehmexxs4lan0dg91tmb1zynm\",\n  \"DKIMRevokedHost\" : \"vgg3hxzaqsipkp0vcm49oiqk3dhfwlxrngi4uatwr\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"7alc8ourtztn6ydm903oz7r7ikx08gfwmvzjbdkubmepkcz4scjzlmdmz5s7kjg267bqti7qnw8p6ajzm55089avv9poedycau72qpk\",\n  \"DKIMRevokedTextValue\" : \"6385smtbs5jkha0eynwyjik0mnmtdhj7g3g1d771p3tvptmhlxxhigjs263nnewkwovsk9r7l6umspvg8wn9h66tc5ucxyqzoopa8z9x6d9ymzvxtea28uss47w3vj1938mfuilnfur27mt2b6\",\n  \"Confirmed\" : false,\n  \"ID\" : 5125708999604685588,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"vvzowqeo02xuecvpoemklx7a51tj1yv78568dl4skwzfky1v4selzrwhdkjaf8qsmlc7hc49il5585u3ifj4vrgm1h200xd4eomr9lir9nzg8kl8vjud8kcl50w2wk1wqpeu4a2xbsd9o47rjwtoqesrdwgmutirriq2vy3om\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4a96fd04-ddba-41b5-85e9-c9aca5a44949",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.440709Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "75031829-ced3-424f-9e84-c329ed01d4d8",
    "name" : "List Sender Signatures - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4956832452340552213"
        },
        "count" : {
          "equalTo" : "165"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "75031829-ced3-424f-9e84-c329ed01d4d8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.440192Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures"
        }
      }
    }
  }, {
    "id" : "c73ab377-7ee0-43c9-af29-601f3e7c30da",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "307432994561642533"
        },
        "count" : {
          "equalTo" : "388"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ipsum in molestias accusantium similique fugiat. Enim temporibus voluptatem dolor ea excepturi vitae dolor. Dolore iusto totam unde.\",\n  \"ErrorCode\" : 6008134492069969788\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c73ab377-7ee0-43c9-af29-601f3e7c30da",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.440143Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "e215e4b9-07ae-4c64-ba1e-79aa1755670c",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4607255496376493492"
        },
        "count" : {
          "equalTo" : "132"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 2467392808376812226,\n  \"SenderSignatures\" : [ {\n    \"ReplyToEmailAddress\" : \"Barabara.Towne@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 6394571178688159659,\n    \"Domain\" : \"4nqcscgr7lk5asr5sdqcbyb0dyqcociz693mgtgtzvnivnwlll4ozmmeyywfj25rq3yc5kn0mitsywqyxfplqgri363t5vz2o2fea74v3m5ndz1hlwj0ea39hgit7\",\n    \"EmailAddress\" : \"Tamie.Lind@email.example.mocklab.io\",\n    \"Name\" : \"Marquis Donnelly\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e215e4b9-07ae-4c64-ba1e-79aa1755670c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.440028Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SenderSignatures" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SenderSignatureInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "0fd91a81-0a1b-4572-80c4-74fc5b733830",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/domains/6185885898299600124/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "0fd91a81-0a1b-4572-80c4-74fc5b733830",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.439808Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain"
        }
      }
    }
  }, {
    "id" : "982e4ede-f0d9-4c1d-88d7-f5e4b3103d11",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/3327151443860108991/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Illum dolorem possimus earum harum ab quos et. Numquam consectetur dolore sint nesciunt quos autem. Molestiae facere consectetur impedit quo ut sapiente. Qui sint et optio.\",\n  \"ErrorCode\" : 4420020166964604723\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "982e4ede-f0d9-4c1d-88d7-f5e4b3103d11",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.439781Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "a806a8ef-6de9-4250-806f-91b55ffbd7d9",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/8616488398252054337/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SPFTextValue\" : \"w6px4mh1liqsu3sze3ns39yy2kbgpqyg3b\",\n  \"SPFHost\" : \"pv05wr4b6t6bf08s0jhdkoop1gbukqquf48jg3zpwx8u3ai204kxelm7cggzq7ivp3wnx5v0bi6thzmue7syypxrr2sg08hjnaidq9anr3kesqpcl866xqxmhbiq1zbad5g8gnqa3oiq89yafl9xey8ni261q6kpz75ham1e5udliuc5fci\",\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a806a8ef-6de9-4250-806f-91b55ffbd7d9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.439688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "4e5328bd-b46c-452d-ab29-6e06887da04e",
    "name" : "Request DNS Verification for Return-Path - 500",
    "request" : {
      "urlPath" : "/domains/1402437191839957183/verifyreturnpath",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4e5328bd-b46c-452d-ab29-6e06887da04e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.439587Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain"
        }
      }
    }
  }, {
    "id" : "fa388ecb-c83f-4f65-b193-9fd0ce7c3fe2",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/936545404675304866/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Molestiae quasi dolorum iusto. Nam inventore eos quis atque ratione consequuntur. Placeat quibusdam dolore sed dolorem et ex. Ad atque quod autem. Nesciunt inventore inventore.\",\n  \"ErrorCode\" : 6992993450884647217\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa388ecb-c83f-4f65-b193-9fd0ce7c3fe2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.43956Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "36de9822-bb33-4718-9587-94c496fe560c",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/2128554963922029530/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-05-20T16:51:06.439157Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"vmxrjyl251rl51wt8tfoq879i3n23s3m80gdsq9o4av9ecxk6s164n33h6gbv0u99a9g8ua3kkj8a0neferjudnp0wgdxbuau1hgye01unruub4ri69giatveh5j1mlswnvyj0o5dbeuf37n3p9cadyufa726k4fui4ycqsay5t8rx4qbht4zbnwktjl\",\n  \"SPFTextValue\" : \"64ea2sdxnalcdyx9kv\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"x6uvsb8klrxd2peehogfa4b5gi65ctwu72tyjf75sop6xm1qj2nib6xxbze1hbfo0l87twu6jk1dpp5krfbiwrdlu44u84dnm6mjq90wg\",\n  \"DKIMTestValue\" : \"jup60bi2x388sdobz68dkheesabej0xnsiyuxrvpj66qo1h7cm8gaxh7w5av493xnre6ivdhvrfgl8wgp10u732q50isbig23l75v5rgmtrnjowm6ifom1qk7z3i57sf5bvghc1g7xmfzjmaiib5zas75dhczcwrtxgv68s5ru0rcntfq5j\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Franklyn Dach\",\n  \"ReturnPathDomain\" : \"xqi5vj5n527fzwwc8e7l755428yc0dn\",\n  \"ReturnPathDomainCNAMEValue\" : \"zfe3pfq2fpvgt12v7q4p61dhpm3ggeksxopnd9zhxn4ze5comaqyjtamf49q98g7ik63ebxtc5okr3iz3ubmrimencf3aanzzz0n6t363omiapi0l5ccvh7uieev5ili8540kbh0aumuggsv1w0lvan4fa1n0xea7zeiswzg2da8e4iwexx4zlhhaxejs\",\n  \"SPFHost\" : \"74d3rc8em7kxszl9u\",\n  \"DKIMRevokedHost\" : \"74v8b6kp4k2rwtcinv8um93e9p00cta4lzcwn731e5ao3l18t4g4ec4cg7w1jhanbgswwlmjy2r6ke0599en5irbavvmyo9n2v8k9su4cd8eudo9379liesvw3k91j3pdsggwflnbrvy\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"5zr9rf5zj7x75661d0wntdl9y4q0h55em4t86oi0fzn29yev3p5\",\n  \"DKIMRevokedTextValue\" : \"g84ojwzxr9aygq0cb86bc3w24akpnmhmni93f07h0yceb4dp1apmj1mh1ij5f7z607g8van0vu9sy9g2mfx2l4x8j7e6em4wqptjn7mk81w\",\n  \"ID\" : 933248685141235247,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "36de9822-bb33-4718-9587-94c496fe560c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.439465Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "756a1c7a-e56e-47ba-b44b-c4ec053d9c4e",
    "name" : "Request DNS Verification for DKIM - 500",
    "request" : {
      "urlPath" : "/domains/349281380938631930/verifydkim",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "756a1c7a-e56e-47ba-b44b-c4ec053d9c4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.439125Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain"
        }
      }
    }
  }, {
    "id" : "2a9dba15-3e89-4ee4-a3e9-cda4623ee357",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/7335840557384717346/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Corporis cum fugit suscipit exercitationem non. Ullam magni aut omnis minima sapiente ut. Officia pariatur magni non. Reprehenderit itaque qui nesciunt et qui expedita.\",\n  \"ErrorCode\" : 8915347971553653395\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2a9dba15-3e89-4ee4-a3e9-cda4623ee357",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.439098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "5332738a-4662-4ab2-8620-a4f89a44df64",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/5490087310685325621/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-07-23T16:28:06.438642Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"72842v8xtsopmd0g7mcozl4vntfsv2a9ps566779o459x1p3bq8n4gx8hgg2qp8oaoas6k8v369fikxvrillt2av\",\n  \"SPFTextValue\" : \"xiyhfgdq9qacctuncq7rg5ovg5zw9xt6nuy1f26aen85z0x3xod0es77kvme8mc5tnmcn3btu0khr0dy9g5uw93fksoq9ymforg2l07wj1uledpew1pdo7cljzj7c\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"wyc4q28judstsax4dqhetrmm3zjy2su3zd67qglldbucbm89jeg4mku9ndx3uz23naa799xzvkk8n5yc3zrjx66znqp0v4rusfan85eamdfigpvhe4k4od9cncj30bwxi6c22kl941xcxg2fg26za2k3zc7p6davd0mebzdlzyo3q9o60l9kc8rkqyiz\",\n  \"DKIMTestValue\" : \"5vb7vwoqu944h8qlnpqjbefi49r7ojo576pl4yyfs0hmco7hn1e9hl57ujt2i0ve51t0s2l28ly77ftc9gnm7yq14f5iy1qw\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Marcelino Marks\",\n  \"ReturnPathDomain\" : \"xxiy07vmzg4l6vy17uqlekz6u59pvesiix7726axz0jk8hurxwxq0h8g6cpprgwonj52fu2y0b4evz3xaj47zmvp3cl15ry21v0ms1u5c5g6ycdlbtx7fwkjj1am30c9dppslb5ayyn5qlfrmovrpf300nfnaalpu98qq71l224tayn9123ix64hsfgs1mohzzf\",\n  \"ReturnPathDomainCNAMEValue\" : \"sg9chfugu\",\n  \"SPFHost\" : \"98ju90vmfmahh00fdqtlq3wlspe87veikhdr2ucc3l5srnnfwpeygsixyxdlju7d1ry4mu4mvgd1tsr6ddz1bblehz5qhaameguilybbnhbvc6umq1\",\n  \"DKIMRevokedHost\" : \"gzvwahdjx0j5qq\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"472h5fx3k0hf73jzcy8ho00u8kz6s9ygd4x11q70esqdudtkrrgnrocvyoc2rcwpyx41c3tym2c932gz7fzaj74mntoux4kjrwrmiuhxi10mldioqecoomqpst4\",\n  \"DKIMRevokedTextValue\" : \"innujtqlu2gnkzyv15w6f1wp8y7yhqm416u22ko1d0prxrpt63zelfd6vbm9wtfwlkiy9e69dp3rr\",\n  \"ID\" : 8363610122457709608,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5332738a-4662-4ab2-8620-a4f89a44df64",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.439Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "66358b81-7938-488e-a612-96ce1b0def6c",
    "name" : "Rotate DKIM Key - 500",
    "request" : {
      "urlPath" : "/domains/7082568982080465338/rotatedkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "66358b81-7938-488e-a612-96ce1b0def6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.438604Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain"
        }
      }
    }
  }, {
    "id" : "56c08157-e3c5-4360-b333-36117ac95cc8",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/2153664784384858747/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Aut distinctio officia. Omnis id voluptatem dicta ad quisquam ipsam asperiores. Commodi ratione neque incidunt animi. Et quidem odit eius.\",\n  \"ErrorCode\" : 9157720174896712524\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "56c08157-e3c5-4360-b333-36117ac95cc8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.438576Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "6e2cdb02-cede-48d0-8c6e-703b400352f4",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/287840414787014538/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2023-01-25T13:38:06.43814Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"kqtetjl60xbq3jcd5wxim9ka\",\n  \"DKIMRevokedHost\" : \"7z1441zefqqc1wldqdi11y8wbi5qeqy6x8g25a6bsxq23ktng7bv908e\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"ht9mxph04npnvvx432j6e140jc3n82a4y7dnetryqwfio5c702ej6tid6yqg0m50oy8hmt5c4v3u0rcqlt7fr9t8vzr5\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"ftiffkzyqv6pe4hwnhcrxr7k4dimdigzq2eje3xtg8vskbv74sf94u4t0e5x0va62104fmek8eewgz677naawuyzw31c6eqg6kob6cp75wg4yfn8e0cbqwwjvpbkxxbt\",\n  \"DKIMRevokedTextValue\" : \"7lx70xusdpaa2fedtcgxv912okmgjcm6peue28msd44g2m1zz77i2iq9ft831xiz0jk8r3tjcnn9l21c04x7jwkmmga4yxfvso7tv6b9k4cqgq6681t8w1gvsugq1no8l87dzth7dgn34gfhyx1vb0xeamuje16oag3j\",\n  \"ID\" : 8184835174726662983,\n  \"DKIMTestValue\" : \"x6rekci2ms2tg6qeel12g224ghuaqg8cmxvlbtn0pfqzq12o77fuy7vbgqyo76g9d36b4788reqnnfilgn6gvgca\",\n  \"Name\" : \"Miss Hills III\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6e2cdb02-cede-48d0-8c6e-703b400352f4",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.438479Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "940e7ea3-01c9-41b9-b731-20c376fd6c85",
    "name" : "Delete a Domain - 500",
    "request" : {
      "urlPath" : "/domains/3492037915924477686",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "940e7ea3-01c9-41b9-b731-20c376fd6c85",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.438095Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain"
        }
      }
    }
  }, {
    "id" : "3f11d880-cd17-4dc7-8f5c-c6b2a13ac1ea",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/8354385670437230940",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Suscipit cumque iusto. Autem consequatur et beatae asperiores blanditiis fugit. Sapiente quam itaque excepturi nisi odio qui at. Aut explicabo velit est doloribus nihil iste voluptatem.\",\n  \"ErrorCode\" : 5547655162815067645\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3f11d880-cd17-4dc7-8f5c-c6b2a13ac1ea",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.438066Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "8e251bfb-3c0d-4023-a885-2ce1b568c87f",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/3537923385966050784",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Aliquam qui et exercitationem ut. Eveniet et asperiores ea commodi ad facere. Rerum deserunt ipsam rem at.\",\n  \"ErrorCode\" : 1003277524552149851\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8e251bfb-3c0d-4023-a885-2ce1b568c87f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.437967Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "79282903-57e7-4406-a71a-36c42c1ad883",
    "name" : "Update a Domain - 500",
    "request" : {
      "urlPath" : "/domains/7450214857217965436",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "79282903-57e7-4406-a71a-36c42c1ad883",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.437861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain"
        }
      }
    }
  }, {
    "id" : "3dae1790-548a-40e5-925a-301ef3015344",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/588833792587990223",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Corrupti soluta qui quis. Voluptatem maiores aut. Ut neque rerum. Ullam iste odit autem ullam voluptates. Vel neque repellendus et provident doloremque.\",\n  \"ErrorCode\" : 6232080759868846447\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3dae1790-548a-40e5-925a-301ef3015344",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.437824Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "283b1260-5611-4465-a6bc-af5cf68b3aa1",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/5030829577292794318",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-05-01T14:52:06.437346Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"udnq6pe33qjidp9idr9ayvp7cksd8ova999og8reacfr0hunkzmqnfdfjw82ua46u9iv4lzn7fnk6jwju8boz2ejfbtxcyjn78d55cmfnn376plqsb18zukrvock03oe2rzf92l99biyq271h08ijeswwcclc5rqey82qduu9oobgqksyy3yueod1\",\n  \"SPFTextValue\" : \"vatp3wyljohh2sahn7d84i22ntvran8ug1t0hsueo4media1izfcrv58la6toxj6doh6zzugij3s2kewailt4y6r7ne4kwxw68nrxydsg3cuv3jhss4j0d4hak0asbd2id0zrgv9e6o5ui0xrdgqtb0ydocijo75dvc3lx\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"rvfsloktgzbd42grty627rrkg1v1nd7u8pacyazm0nes9a8c6zuzvt98zlqggqlmry4zckmufzpi389gk930s0zhmyqlhl30keosvtip9bjz\",\n  \"DKIMTestValue\" : \"c43ikwcuus737x2s79419i9ri3t4j4aehzdbh\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Dominic Parker\",\n  \"ReturnPathDomain\" : \"dr9qanncn5ofaeflufyueyb5m78r6sbuy0pp6p2hk8krv6x5mylgum5klhjrai6kj64jx8z7\",\n  \"ReturnPathDomainCNAMEValue\" : \"so45y1a06nemiyt3odzyd2aiocqh963t7nk5a2ldrvy2654hph1efsmls0lw50b44ehjd66zv1uiyoauzj3jjqlv2kl57ntjcgon2sh\",\n  \"SPFHost\" : \"wb1mx6p4oo4ijip43pscc01kjhh831nbdyspfowzc0p7adem6gdntgia1q0ousrq7dc1tpk15or9nk2nvlx9pnqpyr36h87sgxoam5mmrqo1smrdigr9ugqp23mg6q8jtwmr5nte2462jgsjitlcmdye8hlpgpx8ucp8bsy0907k8incps\",\n  \"DKIMRevokedHost\" : \"q7ttqsvcky6t4xlfzl3tieodomyv9mwl4rqllsny6c8cxtug0o0csxv1q4fhz6fosigfo7a06mtvmuzlz08jbqjyc4sp81cdoozg125d89v5w05n5qrjo9p82z833bv4p2as62rufhrzhnjh\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"5lwgla6ddujb7czuv4j33v9d2iyrix5a7nwu1oiaiupxi5xkbyy2w7s6213c2ynzfb6vsn6nuubzb4o9o0qhpp5iy6frr0swdxkqkup2golrw9cfsj2xy7fcwg4j5hg0c1hofaci62j8kjkr3d49g2rieao4wtu5u7scofyf2rhjcb\",\n  \"DKIMRevokedTextValue\" : \"jndvb8kcwwbqo7him4c6w9ddgnleb9hd2bqsxn8i51eiga0043h06rsmzk53qwg28c31\",\n  \"ID\" : 3827450337027004566,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "283b1260-5611-4465-a6bc-af5cf68b3aa1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.437666Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "590f324c-9457-4fc1-9bd5-5b91399817d6",
    "name" : "Get a Domain - 500",
    "request" : {
      "urlPath" : "/domains/7254257972335882965",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "590f324c-9457-4fc1-9bd5-5b91399817d6",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.437312Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain"
        }
      }
    }
  }, {
    "id" : "47efa701-43b2-4bd3-b596-7af7a6319773",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/4141683913439141319",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Quas voluptates nobis. Vitae voluptatem totam sed libero qui labore ut. Animi accusantium accusamus exercitationem quas rerum voluptate placeat. Omnis voluptates autem. Vero quia dolores soluta molest\",\n  \"ErrorCode\" : 351471987866688397\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "47efa701-43b2-4bd3-b596-7af7a6319773",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.437283Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "992c441c-85ec-44f1-a4f9-50799bcd4296",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/6696127257127189951",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2023-01-31T14:18:06.436803Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"zqd3xgy8rfgb46huhm60dhpz82ur85lg5cxisyl2llgxj3bpu54ibfi62tckl0r0tijooe1jq74i0wqgqencdz6yimffypwm7i47siu0\",\n  \"SPFTextValue\" : \"86jfhgux20322n46eyn7g042polykvnixt7yursel45js8kzrzwvr34c9q8kpalrwane5mabbw3rd3wut1bpvw9ee9io79lcp99pmmsqwb9z6vt26fqn3ovej9pd60kygjznhnlhotfmllmd3tztz2cpqyzbzm5fkibnrsttuu59\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"vn7qd0ei9mn09\",\n  \"DKIMTestValue\" : \"jlm3havue6lozk0el3383o9vrohe2t47rir8wda1k8flzww8eqtoedqw9pp72uctnoy84r5ii07b\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Ellis Goldner\",\n  \"ReturnPathDomain\" : \"52kduvgg9ok727w4na695dexnftztxpjb5wdoo6deywwj4fytga9r12vkm4hpk0mv4xfjo0ss6fwvzvz0hla4c3x7grkygin34nfow5e1s34hkc8xtoypran3ve8\",\n  \"ReturnPathDomainCNAMEValue\" : \"0e7j8bwv2ynl2rlyl2tavwsog73f7e3y79f0z36jxyk04w78yobplfyze9ue\",\n  \"SPFHost\" : \"5t7jxhizgkhpaef7ufpd86y7yo6omw3bjmrvw8x63lmbxk\",\n  \"DKIMRevokedHost\" : \"n1soh7tsb9v4164ll9tmsplsh46spfw3tygp3pe1cu\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"5356wuhozqnprs6ti0qh3zn5pmva8gabf2ivwd1a7876u12w6jbsa2uusfjj6bdkn\",\n  \"DKIMRevokedTextValue\" : \"3p6pm6np6vgmqltoo2vo7f083t7f78gx9sl34q6dfa3x2r5kc01w8u94kj0pzdp5qpi6083uggb6coc2c18fcc7o6tfik7e6urzup4ydso65c0hjo9rsefjaywrf4m7ksrm2n6lppjhxvn8id90pkhncjkq45\",\n  \"ID\" : 5743447861640601854,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "992c441c-85ec-44f1-a4f9-50799bcd4296",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.437171Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "5f5c67e4-1bf3-4216-92fd-6c03025b821a",
    "name" : "Create a Domain - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "5f5c67e4-1bf3-4216-92fd-6c03025b821a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.436767Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain"
        }
      }
    }
  }, {
    "id" : "c945baad-1061-400f-97dc-f73b15707b6b",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Libero maiores occaecati sint tempora in ut. Et illo voluptatibus dolores. Vel nemo quis. Rem et porro.\",\n  \"ErrorCode\" : 6443029756011309132\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c945baad-1061-400f-97dc-f73b15707b6b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.43674Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "64d1f3d9-8f8e-4d0d-b14c-82e5f1d3aa6c",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2023-03-01T15:50:06.436184Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"v1ebxu5j91mv8ep7xl0tbzwtvs21alc4bip77ywcneynzneuyrlfdg72pxc2um62lz4138wh6or6tktrhwwr7xltjut5u97f74w7\",\n  \"SPFTextValue\" : \"gb7706ahrjal5biot2s5td7qdfwl79ekxp2ycgqt5gkxyt0v3e8bvdoc3rqxlx799vws5bwi83fq6ppvyjl7pb9oelfng81hw1dmc656i337xth8jf7fe8epgfyo3o38nz27dpve4nzs2wjxk08t77qlpwjf3ib91larfq72ntvpmkdwj81lwl3m\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"qnhu0os0em3d8dzdzmttynu53t3j7g4doyoc00842yu5siyfsxby96nkjcppcmda9qmekg09jckqyc587fulzjmkam4l8c3feqj2cqbb5wu6plsr4by9nty70he7ubc1z4nmohlwjb8jtcc5hrmp\",\n  \"DKIMTestValue\" : \"7hrs9pl1r7nl1h87my8ldc8d8e4uf79ozhgsjfm1dyjx2eebgpr8140wcn2rssb58wemqmbxt8tvnw6ghoxhxjfx9xkvhtq6ryxcwfqocv5qfhxqr1maduqob56zkr6xwe08w1ijemqpxxuob\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Sid Fritsch\",\n  \"ReturnPathDomain\" : \"mql1rtn5q0ctosmhpdaagqwjt1puzk0odyt2khop8519kspeo4rgh96dwpolll8aujd63lq3t93l0oen\",\n  \"ReturnPathDomainCNAMEValue\" : \"eem5cje65z2mfhh7crzq4xj23zfa1vm\",\n  \"SPFHost\" : \"zmn7og\",\n  \"DKIMRevokedHost\" : \"e63kej1c7hvlod4j083pm8552vvxha49kvx9ybdmwo9hjptott7q5k9wda252kza389idm2tv2emmyjneaht9jg45mwc8k\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"sp9i\",\n  \"DKIMRevokedTextValue\" : \"6xtapha73o8ddhutt1ax66p41llvhhuwmypt4hi5sn4jrbpojqcs06nl7ro807cwxo69b7fixs\",\n  \"ID\" : 8374930860939665119,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "64d1f3d9-8f8e-4d0d-b14c-82e5f1d3aa6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.436634Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    }
  }, {
    "id" : "16ad0c68-3aaa-45c2-8947-f4d64e3e0777",
    "name" : "List Domains - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "429929345260411135"
        },
        "count" : {
          "equalTo" : "497"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "16ad0c68-3aaa-45c2-8947-f4d64e3e0777",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.436136Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains"
        }
      }
    }
  }, {
    "id" : "09b39aae-8d90-4dd3-8ef8-bae8fc5fc878",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "1589991497779218480"
        },
        "count" : {
          "equalTo" : "93"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Voluptate provident officia. Veniam enim illum nisi distinctio ducimus tempora. Qui et sit facere. Perspiciatis ut sed est iste sed.\",\n  \"ErrorCode\" : 8899480621613669232\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "09b39aae-8d90-4dd3-8ef8-bae8fc5fc878",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.436085Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    }
  }, {
    "id" : "e4a382f3-b900-411e-ad99-554dab12a97e",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "5082080465145010029"
        },
        "count" : {
          "equalTo" : "456"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Domains\" : [ {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 6092575017715805655,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Meryl Grant\"\n  }, {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : true,\n    \"ID\" : 1820289284168259688,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Tanja Rippin\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 521417413608001062,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Archie Hickle\"\n  } ],\n  \"TotalCount\" : 2798980156087342259\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e4a382f3-b900-411e-ad99-554dab12a97e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-06T17:29:06.435922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Domains" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DomainInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    }
  } ]
}