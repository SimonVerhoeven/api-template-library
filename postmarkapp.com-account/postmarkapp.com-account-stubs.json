{
  "mappings" : [ {
    "id" : "1441e4d4-1982-3d41-86d0-82fc5cd35c36",
    "name" : "Push templates from one server to another - 500",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "1441e4d4-1982-3d41-86d0-82fc5cd35c36",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "pushTemplates"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "49d3d127-ca1b-38d8-a520-e21f4f78796e",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Aut quo blanditiis repudiandae dolorum. Maiores consequuntur voluptatem ratione sunt at. Aut soluta impedit voluptatem eligendi. Recusandae laborum quidem et eum dolorem perferendis.\",\n  \"ErrorCode\" : 7479170978613674456\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "49d3d127-ca1b-38d8-a520-e21f4f78796e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "a7583deb-c58a-3b2f-8bd0-314862edbf8a",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 5823029198499516311,\n  \"Templates\" : [ {\n    \"Action\" : \"t5ocoamo24t4cvpscee1i3uhilkggh86ixfjqqk060h6psclkphszst1b3h1j\",\n    \"Alias\" : \"36a0l6dvy0ikie8brf04h3y0u22jxlfqzxut8lybg6bn8cdn0sj8z51w8v8gna5myx5wqv4sbk83fkxpu1b203czft5g58ovzj0b4eoe5cht90fdk1cbg92dpgrl0i3rzex778llqqmddjs3ucu7kb7fs73hyy2ohz0wsf0mkvnumkb0m\",\n    \"TemplateId\" : 7906663159725990108,\n    \"Name\" : \"Catrina Kassulke\"\n  }, {\n    \"Action\" : \"0shm7z4800psxscx8tknvzbgxzb0lqenpl6bqeisqb5n3fc6iwkygo0kyhcy0s3ldg94xre0oposzwj617k749rmqv6ja7obsor2ylzi25rrdxxvp693zb3h7i719n7mqtkd06dij0mwt5x49bfa9ghe12xy4w9xut89npdiopkmocbuytiriyzfpmt\",\n    \"Alias\" : \"8e5ma625ts4met0jle1zye5hpe58vca4gpp7rlmoh9qsul6ftq0sn45h3c03lbfe160bfen2iqvqmhe036\",\n    \"TemplateId\" : 6009753936980735941,\n    \"Name\" : \"Gary Green DDS\"\n  }, {\n    \"Action\" : \"pvlyr8f5sk0ituq81vfalh2kh19lf4jjumtzdwokb1m3qjih0ke52gi82eirhryhkboannk7y3rbmeps20ok7t2fyz86nybxv4s2fyaqsgvaodojb476zzgzm10t53x0iq2r0971wbbzwlifm2lse7d6qi8hgu0m3eyqm870hohu2xw09ssptt82l8ldr5tzcvkiuapf\",\n    \"Alias\" : \"0565h3vhtbvz3atrbboilrr05nmx05my70c4bt0eyv5jevlkcm2cn1fqm2i0o9wdnuox9rc2\",\n    \"TemplateId\" : 2544852063397065634,\n    \"Name\" : \"Mrs. Trang Kihn\"\n  }, {\n    \"Action\" : \"6s0z72z2rsw85flb\",\n    \"Alias\" : \"ekezuu4ja0a666i1xgav5rn5gpmej8ycpujy\",\n    \"TemplateId\" : 5627788294823941878,\n    \"Name\" : \"Felicidad Ondricka I\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a7583deb-c58a-3b2f-8bd0-314862edbf8a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Templates" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "Action" : {
                      "type" : "string"
                    },
                    "Alias" : {
                      "type" : "string"
                    },
                    "Name" : {
                      "type" : "string"
                    },
                    "TemplateId" : {
                      "type" : "integer"
                    }
                  }
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "b3d7392e-81de-39e7-adb6-0d2316d00ed9",
    "name" : "Delete a Server - 500",
    "request" : {
      "urlPath" : "/servers/4865262109585178942",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b3d7392e-81de-39e7-adb6-0d2316d00ed9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "79ca313b-bb15-3d78-96c7-3ba150a0ae39",
    "name" : "Delete a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/6974439407260316907",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Quibusdam sint exercitationem beatae adipisci. Praesentium quasi omnis facilis mollitia corporis voluptatum. Eius consequatur earum at voluptatem minus natus aliquam. Rem tempore magnam incidunt minim\",\n  \"ErrorCode\" : 8351806191623562430\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79ca313b-bb15-3d78-96c7-3ba150a0ae39",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "e0062147-4673-39b7-ac57-ecd60363c69c",
    "name" : "Delete a Server - 200",
    "request" : {
      "urlPath" : "/servers/2079413095806477233",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "e0062147-4673-39b7-ac57-ecd60363c69c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "1bb5fc14-3d91-33ea-ab64-871f83d5c4ca",
    "name" : "Edit a Server - 500",
    "request" : {
      "urlPath" : "/servers/669289569807354306",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "1bb5fc14-3d91-33ea-ab64-871f83d5c4ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editServerInformation"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "246544f4-18d2-354f-9b1c-d86b611c9c5f",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/784224060932569592",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Culpa tempore est quo quidem hic necessitatibus. Eaque omnis debitis. Adipisci quaerat consequatur odio explicabo rerum ad praesentium.\",\n  \"ErrorCode\" : 3095337975501865052\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "246544f4-18d2-354f-9b1c-d86b611c9c5f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "0deeab40-3130-3260-8425-0e004484661a",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/1344331320905100755",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/900013\",\n  \"ApiTokens\" : [ \"u89arb5ek84fyecbongte7hdsn0fo97x20yjd97c0ptjrndzjej1sgvb2rq781rayjg7lmynp90uqnx2o6g1uy6tz8j7ofpg9gmceygda8kgs4hwrejccdw4ynmcibwbs0j6ypxaw7xdyo0pfq0jfizjrzdpkpkcyypbg7zw3ee5fdum1zfyynjmw5ik0h\", \"xpmbi8tn9kjk8jx83j3dkvff2pz4hyetz37g97t48if6b4wxb5jcbh3spn1ednvwupwzri9g55wk2roulvahuejg0c75o42hh6eldlk\", \"e0rtwll0rvb4drzjewl007779hv9fkrjqsvv95sl2l0507v78z9to6yx97757klsrnsno03qr80eqgoyt4kqdr508kan1b6vsqqufc9x6n12l69iceqkmjjx7j23pqc8zo9xto2krvwrcyemmpzb90dzq\" ],\n  \"ServerLink\" : \"lspy10qbbxjmof08buaij0muuh7snva6u0sew2fyqxjeu8kj0po7svmie72wk7hhs06e46vonm2ru7z29arntdjb94b3xom477z5q42tajpt5afkwhu0lc9o9nhpf92akuut2wljjqz4ssjxfaavy3dphh4ay4z0el71\",\n  \"Color\" : \"yk0qbo7cj2s2dnndyzejeo4kdeytxjr6uv2gbkrwtdnnep9k2bd7q9t07xvwj49nvu8o4jct4urk5vpwe2r4ia7bh8z4xz0km6nq3he\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/720234\",\n  \"RawEmailEnabled\" : false,\n  \"TrackLinks\" : \"HtmlOnlyTracking\",\n  \"InboundHash\" : \"87gvwbh41la0af8iuk9vrcet\",\n  \"InboundSpamThreshold\" : 6675292780425190865,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/786623\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/410558\",\n  \"InboundAddress\" : \"fm7ky8jx0jd0nmjv7i78oiqkmip052m7hys91vgebxwwn724ddiwmstv6yao4171wttwyi98lavz6dt3akm0fdxl8qsnwvaz0et212qra7iyktpdbbuc513q1b5q6asgz0bybi2zai5v2bugsb49n7fegmn35wk682p4vrq48dgdzyn9xb\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/920714\",\n  \"Name\" : \"Kimberly Cruickshank\",\n  \"TrackOpens\" : false,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 163482384024945119,\n  \"InboundDomain\" : \"8g37osf9ak2x7et1md1obzntf06cgu2ox6vguc3968p8me3m4rj3se2d7hxydhmppdbchsqizjuj3lhc2ljt92ejgjhgbebxf7l38ehae1w739j\",\n  \"SmtpApiActivated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0deeab40-3130-3260-8425-0e004484661a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "1aeb202c-8f10-3455-a3ca-e10a49098304",
    "name" : "Get a Server - 500",
    "request" : {
      "urlPath" : "/servers/1918929443018248930",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "1aeb202c-8f10-3455-a3ca-e10a49098304",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerInformation"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "e96fa7b4-7445-387a-b51e-4336bf82d813",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/1949845913756733457",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Iste doloremque amet sed ab nam aut. Et neque dolorum et numquam voluptatem quasi. Ad ut ut id quam.\",\n  \"ErrorCode\" : 2896612921758753429\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e96fa7b4-7445-387a-b51e-4336bf82d813",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "12a31f81-ea79-331b-b7c9-6cac135834fa",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/207945185744998069",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/246657\",\n  \"ApiTokens\" : [ \"rct81b1od9v16p01iz8ant50vujngssritvkudn618mdj\" ],\n  \"ServerLink\" : \"meln674cujgpsyeewy1xnq6p981zhdd\",\n  \"Color\" : \"74w9ptrlqatx6d9174jpgz0hn5ucwpxf2tguc85\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/591657\",\n  \"RawEmailEnabled\" : true,\n  \"TrackLinks\" : \"TextOnlyTracking\",\n  \"InboundHash\" : \"km4436xuwqvdcrr7j8yxjplfdggx86q76zpcjl9j7b8rgvm46c2r8ypi1jhu3g7q7f4puga5znz3fjqrj9t3phr4mioy71n2vf42ibjkwwlgt1784s062p8lj6fxcwjhfxikwiogtxayy0x63va\",\n  \"InboundSpamThreshold\" : 4443756228257036029,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/112454\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/287063\",\n  \"InboundAddress\" : \"y0hbvs7hyzx4pp8e681dpgxsuyfknyu6k95xvdaaprzspz05eq109erxegw61bs13ufera4ci5wsbfd5tnu8eg0kzrdbmwdv4ob7rc8m7d3i95zb4bqreku9o8ku6x2gy\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/587314\",\n  \"Name\" : \"Lucy Moen\",\n  \"TrackOpens\" : true,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 1325498417673309238,\n  \"InboundDomain\" : \"v5kaovyipjb4j8vqi5z414ve4kvi9fb2a4d30cttaclqwqrrdhtb80jvg03fw92tbufkblil5rszh5uqhr0kdv38\",\n  \"SmtpApiActivated\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "12a31f81-ea79-331b-b7c9-6cac135834fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "648002bb-6372-309c-84b5-e16d159f9266",
    "name" : "Create a Server - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "648002bb-6372-309c-84b5-e16d159f9266",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createServer"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "3aa04bbb-18d5-34be-8898-e5171d46e814",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Aliquid facilis excepturi cupiditate ad inventore. Odio facere voluptas in. Quas ut iste molestiae placeat et earum. Provident debitis soluta.\",\n  \"ErrorCode\" : 6307125142042728185\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3aa04bbb-18d5-34be-8898-e5171d46e814",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "4002d8db-bbfe-3ed2-9d40-e5cd30fd5408",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/011161\",\n  \"ApiTokens\" : [ \"z23ot9a8yakzzuj4e604negim603sclrhxh7z59soywsmlr5fpbvt9bgww9bnc0su8qoiz9wrzw1qyr3m1bidrwzhty8i43w43iq1vtkrd5j0vkyn7khol3hq0cpg5w0qg6ic0k4xuutnma37e3f2rs1hehjyj3m7ytz4sjdr8c1wgw4om7t5da3z1wqfay4lu\", \"ui3key6v8cvw9wg3ck5dtjkqgg7e78zgea37d0pftjnchu3zd8c6wwbcqjl2wdodgoe7m2ehhhpu5alplwikczvn99klfh1uwb1lyn5h8qlwwnmbi7n8scq1hwrvbj61q3h8k5mnz0g62wi8apgamzxkugmrxhdlq5n21ao34qxdgj8f7vc6rwk74s1q4tga40b8wf\", \"2slqr7d1hp12ofe8hd29adm1kegcn\" ],\n  \"ServerLink\" : \"ue4c1pzh85s5b5ffc4ku8cg9ql2cyetu5jnk1fxk3du325cd4lljvir72qoo9fmdo5rj0bt34j5m855pihoi3wu0t227bu93fljzifwnnv5vlb27bc677t6cf7ei58dh25k3eiqsia7pmf3f23zvguvf9kv023sn5ix3peoanqvc7igon4utmepkxoux0nwt\",\n  \"Color\" : \"fg5r7hnr7q6tl2spv35dn137k3as334q11h5g0x0ub305gi7dsgz0zewj9a0r2ku3f43qnuql10jujhjcwniybmls8drite38ymdnp7qx5lm4y8ipb4ev48x03p\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/838934\",\n  \"RawEmailEnabled\" : false,\n  \"TrackLinks\" : \"None\",\n  \"InboundHash\" : \"y2o1ksmj9oc48s8kilgnhcydy7a5mlip47kspesqxyx9am3d3rjvzsmvkazj\",\n  \"InboundSpamThreshold\" : 7730832502235881076,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/910237\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/347110\",\n  \"InboundAddress\" : \"i3kmqhzuceuvzv2yu29x3ky7dnvlbt09xy5esv8pr4ljpvz5lrjdq99ebukvk0n5f6mw9pe895g1gpis4scdfpsrreozzpj9lsfnzbao8\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/658582\",\n  \"Name\" : \"Numbers Shields\",\n  \"TrackOpens\" : true,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 4876193494984224693,\n  \"InboundDomain\" : \"9hnh5gb2zlfoi98g4wdzasm28m9da9vngrg618qakcsxshgf9zpj0p36vyoafg9wv08dartbag4wkkcz88qi8mms5nf5z8283gk13j88xdtylyq4hx9t3ve1ykno2h5ga8uz59jld6i3731uzc0j9cwsie2nl\",\n  \"SmtpApiActivated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4002d8db-bbfe-3ed2-9d40-e5cd30fd5408",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "46d6120a-9979-35aa-9668-649596de891d",
    "name" : "List servers - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "2784815221162149961"
        },
        "count" : {
          "equalTo" : "3218421842788426257"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "46d6120a-9979-35aa-9668-649596de891d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listServers"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "8ca07942-0707-3334-bc79-f1a22d3d208d",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4297955557185202374"
        },
        "count" : {
          "equalTo" : "8560784491388575016"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Odio omnis ut dolorem consequatur. Officiis quia quasi hic consequatur sed. Aperiam quaerat quos illo dolores aut quisquam. Sunt aperiam omnis mollitia. Et rerum adipisci qui amet nihil et.\",\n  \"ErrorCode\" : 8781743474465155765\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8ca07942-0707-3334-bc79-f1a22d3d208d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "9d597a04-bcaf-3def-a67a-bf0843a59c1d",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "7111150744178938850"
        },
        "count" : {
          "equalTo" : "2067289155546767481"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 5542956541159909523,\n  \"Servers\" : [ {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/330687\",\n    \"ApiTokens\" : [ \"0sulnzrxtlkedww3tn3d3td4o4y1teduao0qnr4ry1r279u6z6e2cab5aafoancf4ldo7fw5mjq1fiojzh12txt50d03nq2vofn7hjmjbcfayh20fo0ad2gylcn79dwi82gc8qbhmugd38ry1d39wociz4nv\", \"paejsdkg5yr4hymp8leddwh1qasfgp9yhes02tawoa5ij858pcrik5fu3sov0vt9j\", \"yexu9gqpoejyi0\" ],\n    \"ServerLink\" : \"n9xub52j0b158wbhzhin6b9zw1yu7mvkwjjf5eo7w4gy46pj38smjknmzlf4nyg3p3ueyjiqv1b1pdj41fisan52gj5cpab9oqls7mesnu29yn5a3e155d83znh96as8uv58zllqeabffbup2uw8z342ow6pmu\",\n    \"Color\" : \"3iv7nhlhgpsf0xi4ofbwkmzcjc8otn2de0wbcvh3e7h3t7v3vsgtax68fxbl1j8i232kleob4obxhnwwkb471pmnyxp9vk0ki4ht4uib8mn0h9wnktmwdzn1gurc6d6lyxbz943r22gskmhjh77zyikqpnomfbi6qr75yoq188imj29itjh8j339\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/709797\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"v12bdpp6r4m0rgic6m5cdql46ry5r9lxih89k0o7\",\n    \"InboundSpamThreshold\" : 3322255925796161698,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/708178\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/255849\",\n    \"InboundAddress\" : \"fxjvszzicd4fwsgr64ayvgn6lmcmqye84mzhmoi37g3miahor8puapjfykbzkcqi52sp2l8ykvrvg0t4x0h6cer82gh6ink56nhaox0fkhfzxm93thft7dk61ldlitf6y0xp8kyjaedy5ko6zan9edhc2ghx4xjg6r5d71vkccn84nigm84\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/168958\",\n    \"Name\" : \"Moriah Powlowski DDS\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 6510499747552608808,\n    \"InboundDomain\" : \"2x4fttpv0klfxm3ubt2f0xmvwgn5iv26hmu53ikjuoclfv5ik2qhl8r809nefukfrya26goiswai3tkmix862xfq1hwcbg6f6xh5dt9kh13elf5245ds1v24zrvsfwsl\",\n    \"SmtpApiActivated\" : true\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/286494\",\n    \"ApiTokens\" : [ \"lwb4fn7raxz1jw9qvkzsrzc28p93teaq8hejllrye2br0r1uz4vldkzx5kqukyp4ixo3txa1yli0d2n7gdbqdtvy52vqsg5he5fllkiea8fsezdl95ijuime1nynzje2154qvei7l4jfrwvue6ysn0ixcj5e77gjqcf9pd3hbliac\", \"dj9if5pnjoqeskoxk47osx7kajab5pjlc40nov9zga287y\", \"xa7to146hrlomi2bpoxzblxq0jd4hgbyiyshrvkq2j6346qperwyajvirbqqhkyhrl9indrwwsoogryic7wf158rxxa0ziv9n72p3dkkbzrh0sxaov7h90is1w5baztf7zmrc44be3bkrgzixori1xo9sw7na5h1fxzl7f2sy\" ],\n    \"ServerLink\" : \"ffn6wd6jn3neukvni3bq43p6wpnea9z6bj38f\",\n    \"Color\" : \"woglgtqiwl89mzgv6zif6zo4pdtfduih9apt1rg7l0j05bpikcdpzm94mwwtu8t3lvki3g5y600ti8swobwp8ew2l1sy00cxhwcfcpftwzkgfiwn9ejzl5lwqcd7fgmjhziorepuyc2om8pxjfl1udtweaesgmzlf2yyf7bs5scasv3wz93gnrqksq84xg\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/385932\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"None\",\n    \"InboundHash\" : \"of48p27pclveq61c6ej2znhhdveyezv9acozubzxfbqgier9il67q2wxnhjmfjbvbl721hh2lkdkl5sttvqap85o4qtmc3itf11rs5r8kov1moj0i0flmn2itg69ac2\",\n    \"InboundSpamThreshold\" : 30869331245201161,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/455860\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/944813\",\n    \"InboundAddress\" : \"ak4eikawm6num2eerh4dnrgg4v9xd5811yow6rbvt28tpxsiyfja5yblyjjktdmbtcq2b223bsw22vzj9rl5xod40cm6w9bcz7i4w78jw3yvg3o2jlkm4dq687h\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/764419\",\n    \"Name\" : \"Tequila Bosco\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 8201765547425693172,\n    \"InboundDomain\" : \"jaj223fjjfnq2k6h7ioo5zs0w8c7656nvgkihdmivp57ux7qn6nngzf7tjso7mnv7ih9mbaal0rylu29dofbbs1p287r4sxn5daz00fzupoqia7r2c7bpmd6eehomoa3v08vv4ld8w55h7dzjn00js5nzmz74qy8y4i\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/209680\",\n    \"ApiTokens\" : [ \"1i666v2yb8d0udwxtspgs3f187wm4x9hrhj9mvtr461usw9ybgw6g2yq1to8s00qm7xo3ec88e3wz3fh68ua7y5gyxpr3shn0m82hfx9sybzki0d9o6gcj21te1e7b4f5crk8ga6glgm3xehk4t69o4f2kcznj1x4hu1vr2060vhwk4zbpen52bo44w\", \"djx9ixbn16t13n1du9iw790j5h3irsa4imr799qhaxv5uidkw79fyjkx90k3xtqwu5a8te0lqxws37962cyftcxsbqy1mnsik5nbn5usrejymi28uk7ezwo8f9b4pdd9uu10vknxziks8jjuzv7q9wps5z55vfkqanzjf5h9cfsw4bur8c\", \"n6us7bveyecmqxsodq34jzq105yw65so6qrstg5hxm7q3otb8fflmpqbhemueepfem1361kcmvt23nmupf5i660vv3mpp93kjqccy2pyxc86s0o5xve4c87g42e6949r0p0k5ribmlm5yyepkum36tnjxb6p4i401rxbc\", \"ixsqmb2729am84myln38amje3l0cbbyxe0rzesgnlbdn8eum4zlw79j76q2qyi1p6lwq6yc3ypb02btgmbugrn\", \"e9kbzwz5xfe6nc1lnjht7hm8plevmuz3juzy8pddirn257z3333lktagbx1va6eljbc37q4pfb1dl0s9kyua10218bq7npy12sxlvzyo497hw6cg3u2gulmgvlig9rz0spq9p91oeohdtujom50c\" ],\n    \"ServerLink\" : \"dzx7stk69xxp4itl8s6k1i5osmf1man2ymtxzw2huv149dc3a4gxubblquks33eimh5ms7qoovy0o9zplqjvom28t1ahy761d48yzn83uvj3vv991izv17gkbsnodr2y\",\n    \"Color\" : \"l381kirstnllqac30pup3i0tiipenq8re86saa8p49w2dxmhyf6obq5il32txdomfwm0nue4ca7zfutmjzbqngl4bns8x18isd5y4r591b1yhpb7aed9k50dxfgk2o\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/667753\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"HtmlAndTextTracking\",\n    \"InboundHash\" : \"e5ck25ssaa4fxg625jul3lwrwmqe\",\n    \"InboundSpamThreshold\" : 7450766835880959843,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/449810\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/183230\",\n    \"InboundAddress\" : \"2lgtcfnx\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/223355\",\n    \"Name\" : \"Mr. Von Hansen\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 6753524360071374427,\n    \"InboundDomain\" : \"2iy432lwrj4mtahple6k0anet3plpjhbbens2rlx0tchukztuvwiljfbxp8fez1k5sq6h32fkpfbnyt1i74o3eh8lt0ddkz389ux8ty3mdw69s9fyw45j5l969o3a2py5fzdfyi\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/036201\",\n    \"ApiTokens\" : [ \"6v27nszc3jwiqpo3co0gsbuq8bswpezw4he79q1xpjua0932dp64id36f48yenr2tbsyl466vtxq13xxzd2zggoox\", \"50q3duyu6cbc1vg2\", \"td7pjkh9kvul7rvuc16gxn89kp2\", \"1arn95xiwa5enjevi9pni7bo6g5krl63mtkpla4gety2olyhas8yq7nttxc39svqslyv2eqk31454jhyv2rsatblgun4siwu1ae8ry1rech67q6qwotibsynd8m0pwz0f5rldyaj1tsje6qp99uvt5us66irzbmac92ij6tiuht4h\", \"0d1ac2vojmulevk1t6fqq4sr8m9mm2ayye34xwy9ir5cny4e1jowso7sea3p45a5alw09apz4c0vczpdesaveano9zzt04pk0xhbmtc\", \"ckhfw7dxmkb3ejsl6kgq7qk9je8zx3z0jp74l8la7f218egnneswnwsnser0qp0qgis4iw2fjf\", \"rr5xkm8v17tslso0d8a90w410q3tb3pgeyegr0gm2n55o3atjbenittw\" ],\n    \"ServerLink\" : \"mdkrqex8i5wwc23t2ctmwtl18ab8x307lruhhi1dgwlwzsh04x6nv5ea2r3h4fs6k2iu0elka5xs0ylq4u6l36hzqx9p303hqdkjwuso1cd0icc3yx0tmh9ggiwj950kklie75qew5h81\",\n    \"Color\" : \"dsnao340892nfjkd8k8bd75mimlocgha0yy537i0oy05ffv2hnxg2khzvz2w2ov2rxls1ewhlhawf1xos8gz5w6im1jvqtvvidts9ddz8a2ones75sdg0scv9635vb1zijd4n30ek1\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/099974\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"kwm66ygxos6ihfzv778g0evgpd1pp5lzkfk095dx52bh9u5yyn2x1gygfnhwvbv60ds6hove2v2xp59zn0w2e83v8o5zagtui6idjawo4hcbc9d61yes2mytc4ix1k5hhmhhzhin2ehqth\",\n    \"InboundSpamThreshold\" : 2547944150842088942,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/739062\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/673353\",\n    \"InboundAddress\" : \"iebbnbgy7ps2co43rfxkdm1cbx72lrywt0lwqiqiga6avh6uphso0j7yxasjupi9zrrdqgqfodc0cdi3z64zq72j9807803z80f2r0kh1ze0ss9m3npgzrrb261zeglhbemhl2mllzsd\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/223425\",\n    \"Name\" : \"Theodore Turner\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 4980264927357912084,\n    \"InboundDomain\" : \"86yor6safhh3ernvcfd4r29exf8i85u3kegrjtxzpswvjcwtfltsrlv5zy6d8lx2iz9liuptyz6f405phlml7laat35avaply7ypp\",\n    \"SmtpApiActivated\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d597a04-bcaf-3def-a67a-bf0843a59c1d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Servers" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExtendedServerInfo"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : "The results of listing servers."
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "f456cbcb-44ca-3e06-9c2f-722c82438480",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/senders/8932312343225596989/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "f456cbcb-44ca-3e06-9c2f-722c82438480",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "51f7926a-6756-34ce-8282-a43d9f63d863",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/2113912706924540661/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Magni id quia dicta odit consequatur distinctio. Repellat qui cupiditate. Cumque perferendis ipsam in commodi repellat.\",\n  \"ErrorCode\" : 4309624773154116375\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "51f7926a-6756-34ce-8282-a43d9f63d863",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "eea4960d-2c60-3aa0-a30f-71552f5faf9f",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/5094947360758663657/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Levi.Daniel@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-09-11T16:14:48.856281Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"dnhcwotsm1au109bqpoo1amejixhapl6x0e2y0v1tyho0fiv557ydamfd361r2dtgfw2t9xv01pcveehh841e8dbid7fiq976fi06a1h0b78sbc9m68zds691s7q8lt971w8462kk43b5h3ytp7m633pzs3l5v928dwq1n\",\n  \"SPFTextValue\" : \"ad1wduerv5schpldh3res74w50t0s6650o6g2gm8obrulv28lbvm5dti2rx389adf8qhlnosy2af5n994mb93u5wu27b5famafp07j7qtqwfxxy21n9gua871l3oxd60mbyg04fqawa5wsmq4v7figil06cti76nubu9z1ws0u4a4ysd50xtvyov7vnm9tevazs\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"ihkm2j1zxi\",\n  \"DKIMTestValue\" : \"14xsaco0l7fym9\",\n  \"EmailAddress\" : \"Leah.Pollich@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Lowell Turner\",\n  \"ReturnPathDomain\" : \"atn83vm25if6ourj5c52b3tlf\",\n  \"ReturnPathDomainCNAMEValue\" : \"jcv61h3u1t72l1xfxx5ro1qxdkvvnty3e3nhx3qx80ui\",\n  \"SPFHost\" : \"7cvcseaojexp73rcuz292qsimiy3f95w73gcwz17nl72jply4nybsnt8chhdm3p5cuxultwasgb3t7ki4hwx9k7taqu\",\n  \"DKIMRevokedHost\" : \"3b3ld9r4vtekoarib4rar4fkp1qquljo4rrwopzv18vgs3zfwdrrxvftalwq0eeny33znddzf7svuyzulslmacsyl1i5qzg0fyocntqyr3j88uncm5y9awx687f0nv75p2xifyxxiwjb9rydf84bka0i8zv\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"qoih5vwsigiz3i40ivrqx7kc68pxr5kziug1r07fb97tcndjn2zbmr5484ffcnrdm4f1s3voj2grqjwopmh1xbhbg7xrvp7z0oq0x8cqf7yq4l8s4vplcyo2ac5999pasjoqk6x3vgx5jam3w23zh1xpprkipc\",\n  \"DKIMRevokedTextValue\" : \"baq87kf1xgjxx64funtrjutndo877v5gwpmoffhdo2wl4tfmn5zvb\",\n  \"Confirmed\" : true,\n  \"ID\" : 9019313933617974061,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"azcwdtdpg1zpemm3x21bj2on3hzjg4fbrmmxdah86yb1pe6c1aa3ltmzel6klwvg4128xnznq2u0tkdfo46f67pbk3lzm5bipq7aby7hzq07vlvxhyyctcbi92hfauwc3teodfpj6176nr5d8g97zoi5uvm\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "eea4960d-2c60-3aa0-a30f-71552f5faf9f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "b858cf3d-dbd7-38a4-945a-f65c9b44582a",
    "name" : "Resend Signature Confirmation Email - 500",
    "request" : {
      "urlPath" : "/senders/8086478600357296253/resend",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b858cf3d-dbd7-38a4-945a-f65c9b44582a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "d1702047-a441-3b41-b97a-89097b766b06",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/4817782064431406277/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Dolorum ut consequatur unde. Doloribus odit qui et ipsum modi et. Asperiores est assumenda sequi qui sint. Voluptas sint explicabo blanditiis ipsa corrupti.\",\n  \"ErrorCode\" : 8747199419633575239\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d1702047-a441-3b41-b97a-89097b766b06",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "5a2d2392-6148-3f3e-a932-02e591b16646",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/2616842693236748660/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Voluptatem sint qui voluptates eveniet molestiae vel velit. Rerum at sint sed molestias ut. Et voluptas perspiciatis totam. Magnam qui sit.\",\n  \"ErrorCode\" : 6571649524531118632\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5a2d2392-6148-3f3e-a932-02e591b16646",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "a0bd7730-a086-373b-bf62-5fa85bc8775b",
    "name" : "Request a new DKIM Key - 500",
    "request" : {
      "urlPath" : "/senders/6216468263324303172/requestnewdkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a0bd7730-a086-373b-bf62-5fa85bc8775b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "7dad29d7-694b-3ea4-9138-ed9b72db357c",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/6245082884130941457/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Consequatur consequatur porro sit praesentium distinctio qui esse. Reprehenderit aspernatur dicta occaecati illum. Molestiae mollitia qui quia rem nihil placeat est.\",\n  \"ErrorCode\" : 8489175046904121841\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7dad29d7-694b-3ea4-9138-ed9b72db357c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "3a63e8a0-2c2d-3220-a2cb-12bf8812a123",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/6038771369623403221/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Sequi corporis quaerat velit id delectus corrupti. Aperiam magni officiis et amet. Asperiores eum ipsa placeat. Beatae veritatis dolorum.\",\n  \"ErrorCode\" : 2407108437421353707\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3a63e8a0-2c2d-3220-a2cb-12bf8812a123",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "0ed7cbc1-6e4a-326e-b67f-ca25b4ef32aa",
    "name" : "Delete a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/2424631574027676482",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "0ed7cbc1-6e4a-326e-b67f-ca25b4ef32aa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteSenderSignature"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "b2012ef6-7be2-3058-b731-8cc5068a6cb8",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/4785274142929058458",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Est natus asperiores quos quo non. Nemo blanditiis dolore quam reiciendis. Ut nostrum porro facilis.\",\n  \"ErrorCode\" : 9170535762540304711\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2012ef6-7be2-3058-b731-8cc5068a6cb8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "7a98baf1-5311-3b2f-8749-12be68f0a2b8",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/7123806218878090924",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Ad aliquam facere eum rerum. Mollitia nam unde et. Nulla dolorem sit sunt enim. Omnis aperiam qui tempore qui non. Veniam ipsa nobis dicta voluptates labore.\",\n  \"ErrorCode\" : 2101828919805006153\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7a98baf1-5311-3b2f-8749-12be68f0a2b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "b53b26ec-91b3-3e6b-a81e-6168ed68dcdd",
    "name" : "Update a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/3688139766208958501",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b53b26ec-91b3-3e6b-a81e-6168ed68dcdd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editSenderSignature"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "b74ed8e0-db37-3533-b5be-42683c38f5cc",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/4109077327744730923",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ex temporibus aut. Ea id aspernatur officia vero ab non nulla. Quo similique commodi.\",\n  \"ErrorCode\" : 8994636881333697846\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b74ed8e0-db37-3533-b5be-42683c38f5cc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "6385bcfd-8b2d-3e64-89c1-259ecc1ea132",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/8900202859407695662",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Shon.Wyman@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-12-29T13:20:48.855202Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"ah3hfmx81ivns7k62ys6op70j\",\n  \"SPFTextValue\" : \"u64ze21b2l7rjpm0gx0bf18a0waazxqyi2bv56coh4dt8ph9qzd1m\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"8rgjcnw4ust7w7uy80ip1gcxkhay1yizcdy80gqbtnoltzwf1dq8q7dnsoaml0y6nm9ed5ooeya89gzezvuqdvlzm9n5uoi6myqtpa3xembkc14jbndbxxnui4c0wztaotlwm26rbauyqj2agn4u9xs1p6fe3a3pdcmkx7\",\n  \"DKIMTestValue\" : \"6n6y0z1balgac498uv5rl6it0vkllnwk\",\n  \"EmailAddress\" : \"Jong.Heidenreich@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Houston Lakin DVM\",\n  \"ReturnPathDomain\" : \"qe3pbb5xbchi4pd2yqjqplkcd3pl68wa8bc2epm6mysmopcc8ma1z7zvey66hrtobxtuv8rkgnvdr4vnlhq9coopr3gcuusmwy9jzgoft3ub9swsugqiawx18c547824qxjo49wvln95f10nr4krx6dl7vw\",\n  \"ReturnPathDomainCNAMEValue\" : \"2210yb2iagvmjff74763jxvijkg5pz8wapyknhbdsguojhfp4fxt62aj93p1sicar70atpx2f43695zl608toup8vlz3i1plc4wgguq48c6g0zdcveal4pgcr862kcu49chszkg7qnhjh0zsyd7qovzcvxdw5nt\",\n  \"SPFHost\" : \"ke12xey39h6zl6g0n0tsmcbob8k5q0bav4dvc6lq7enfu4rerg2m752tndu4hudt5s4kntsei1jbgiyz0gveakuuhb5efqqkzg\",\n  \"DKIMRevokedHost\" : \"n79gu6fpw992zcuvbgla6tp0wu8tv78f0jnc1ovaa5yuyu8dfrzl2fhze0kut0nmwu2gj0rio9o5q78qrjzqoxj7d7ghw6h6ikkzt1kjm135a7ydtopwrujv29wnih3rbau92ghy3xntbu1gnvtsj3rfxtinigh48a13e8zv9mgyj7\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"sk3zjpj2uvts3rmm5jpox2fo5ghf8br3udkdr03uy9di84gpj8kpv59e4malamxg4q\",\n  \"DKIMRevokedTextValue\" : \"8n95w5his9mfpjfmb1h8r16dq9a5cld90c30skugp4h84c2zzgeenouwk46pkoamitt394pph7izt6r0f32s3rl1vhdxs48xxs88l2eafblom7af7fhlbl4nq748qoub6zfamhfb4ah75rwx2gn9r653x47ggsgs8osttli3\",\n  \"Confirmed\" : false,\n  \"ID\" : 7898712175488025485,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"6h49cn94h2134orz1d2bn24bk8h55x5cbqyfucb1a8zuo9mjf4zs8gynb2pp30acqt0cvozypu9bprww396zm4xma5nj8q9jls8pz05opg0xih4feaqjxkfcpuvlj1oyllci7yceg13kwvb348qe2m8csl9q8nnc2pf4u4p1omt0ea40xj0r95lmrie28bkm0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6385bcfd-8b2d-3e64-89c1-259ecc1ea132",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "b6fbeb66-c0ef-342e-9a81-42fc89b73b98",
    "name" : "Get a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/3941142559075062250",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "b6fbeb66-c0ef-342e-9a81-42fc89b73b98",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSenderSignature"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "7c5f4443-037e-3996-a831-4a2ad8c2f27d",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/7178819252648700573",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Vitae odio laboriosam nihil sint. Sequi provident harum quod laborum. Et totam error quasi.\",\n  \"ErrorCode\" : 577385542935363860\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7c5f4443-037e-3996-a831-4a2ad8c2f27d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "fc75bacd-c6b7-3879-93b1-5211b6a94a20",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/5442840307598158008",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Sal.Wehner@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2023-03-02T16:01:48.854694Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"8acpio8\",\n  \"SPFTextValue\" : \"1mz9ria4s9zn2nocpubazy9u41s50k5x4940wz1k2gp1jq29veopq3t2smgj6j3r7ya725sdhv5gn\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"5uofef\",\n  \"DKIMTestValue\" : \"s4luw463k8xvnvk4ilgog34o6b9xbnkgvc3szzk4qvh28bg4eoctaa4kl8ci4hb2x32eu8k40objlq388dz5nicaz5yvwieh0nmhprpzfi2l0ks4wodsdbjs814b7k2rivzg1q31j1w4\",\n  \"EmailAddress\" : \"Freddie.Wunsch@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Karine Murazik\",\n  \"ReturnPathDomain\" : \"584sl02rqeijnchpd1nh4gsjdbtpq803mv3i0xhljyyedbsakzslecvtlh01vrftwd2xq9xonuzcarpzn678xj20t82ptenec6z9ua2udu3zub5dt2q6vmn6mxfts2vema82o4d7698h94mwvvr0yg0d0k1lkrrhllfhg758ldz93ca3d9rcsetpmd6m9zo6\",\n  \"ReturnPathDomainCNAMEValue\" : \"pd1b9oxn4di1ta7alr8cg6dfdfe1mhs7jtilmdfpwur2yoxsykfknhmt4mq1pbefz3lnqb812hg6fko3jgscly9vr3xu9i7vhvw2c\",\n  \"SPFHost\" : \"790ap5ii6zzg1wq9exfczsqjcl6zdb87xnsh\",\n  \"DKIMRevokedHost\" : \"f9q1hr9fx4zhzo31ctzaytqc51ddsctode1u830uqofbrspjlor00t3k4oodeotowwwdvk9duy4k4uzmqb9uxt594jr2zhmi4k2z1vsq7b92qj8h39sl3wnwl68kbjo6tlokooe6z1bqp7wneumgnjdv9dv4imrp0rp37bpe2nxft2veaawsp63rrtuq7arxtralxnr4\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"fncudzc3bauxmvecerf1kdy7vh53jslzegn9g6lfvgy1lazvewm5del2q8rzih050gqud8kyjqf3mh0p0fqpv71s9d057fcp2qhhli6mon9grzl\",\n  \"DKIMRevokedTextValue\" : \"k94dq1nngg24qt9vnrm9j92a35luhmv5i5ba18iqdi8lc4nm0e1j2alx5p9xprchq2nmhcemh2o7qlr28yjzbj7io1bfr143r3lbw56qgvo2icdojmil6ib27\",\n  \"Confirmed\" : false,\n  \"ID\" : 6318388065631136663,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"b1tacimhxuit5zjvpsi97tjc32nqsdi72wjvkt912g4c43xjtpm03iim70hvfbxlxmmt60wmf\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fc75bacd-c6b7-3879-93b1-5211b6a94a20",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "bc64a529-e811-33b0-9131-948554b54710",
    "name" : "Create a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "bc64a529-e811-33b0-9131-948554b54710",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createSenderSignature"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "4cd36a33-d795-32c4-92d6-f79aa4addcce",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Mollitia aliquid minus non qui voluptatem laboriosam nam. Et porro perferendis. Rerum odio ratione expedita. Ipsum est rerum minus. Cum illum minima natus optio et.\",\n  \"ErrorCode\" : 4746460779749274807\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4cd36a33-d795-32c4-92d6-f79aa4addcce",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "d2327d66-624c-380e-87f0-1bf7bd4a60ae",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Crysta.Huels@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2023-02-15T13:11:48.854085Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"wjenf6lfkhf2hgx1q25bpiy4wlptpbc9sch81hgbhjuh53i6516xg037e9yfskrc7y0gz88bbgmri00sy0l7ht3dlsnttc6z22o9sf8n5c88k\",\n  \"SPFTextValue\" : \"lthvah4184byypuh9mc8mcl3lcnlwwmp8i7q9iog5sz4bkck66wje64uf03nmm5hc69uonrx15vzupt1bnagpvrlazm9zmasem8vswwz8yd1izqck32tnhnwds7rb6osuyvwwacr\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"1o02brot522emlegin33gyb6wcz5ko64wpl0kobbqeridjr02ivjpuzz0aensn67\",\n  \"DKIMTestValue\" : \"b76ov2hlmcyiqa1w2z4ioh7mv4hbyh3a1rct5l2bbavpa35j\",\n  \"EmailAddress\" : \"Tennie.Dare@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Ms. Vania Mayert\",\n  \"ReturnPathDomain\" : \"so1wyzawhhnnxo2aroexfb9sbni0wat7h5c8qywm4ldtel749ls1hifmvxokj3gb7zo6rnw18215gf4z4xbdyjzam3g1amgum\",\n  \"ReturnPathDomainCNAMEValue\" : \"0xi80b68oe\",\n  \"SPFHost\" : \"k8hqjwyjid346fvj61qisjwr1uuww2agpq3o8ku0un1egf2mgolf20ue235lnxgjrvjncyjutl56l9c\",\n  \"DKIMRevokedHost\" : \"qgx1fi8u48cbqpbpprglm1xqbbbtviy71t4hm11qsisyhv9k5h6lj510f2pxemper06enc804op\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"qop35hhnkcjt54sbkaq4j90xmy2ns07msuo\",\n  \"DKIMRevokedTextValue\" : \"bueikamvyu3k6csybpotyf1k9mmf7is8i13gfoq7fh86c1b1afrsomx8ibmt4r3i3n61wp283ph5x2m78jbylxux0esei0juca4nrs9gc91hgpx9ulk169vmro3ed7u7jgspr52jgqkqns9i701qj4\",\n  \"Confirmed\" : true,\n  \"ID\" : 4949583848872045324,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"k5tl1qju4j5r6rqrttntrneupevd48o9atg79hkc15en7809i5x4xbzqo36z9b\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "d2327d66-624c-380e-87f0-1bf7bd4a60ae",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "537f3db5-a0d3-372d-9877-4363fe330dff",
    "name" : "List Sender Signatures - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4135209440132332802"
        },
        "count" : {
          "equalTo" : "61"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "537f3db5-a0d3-372d-9877-4363fe330dff",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listSenderSignatures"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "5cbc57bb-080d-3fe2-9179-1a26875bf308",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "6761939399499375574"
        },
        "count" : {
          "equalTo" : "97"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Odio qui quos. Magnam reprehenderit est itaque suscipit tempora neque. Voluptatem natus nam et hic. Dolor deleniti dolor quisquam tempora. Iusto dolorem eum sed placeat blanditiis voluptatem qui.\",\n  \"ErrorCode\" : 5206139849293490295\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5cbc57bb-080d-3fe2-9179-1a26875bf308",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "55b59ca5-bbb5-3d24-870a-d0de56362968",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "2263937790172384149"
        },
        "count" : {
          "equalTo" : "132"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 6225666648819745312,\n  \"SenderSignatures\" : [ {\n    \"ReplyToEmailAddress\" : \"Candance.Kuhic@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 3923684416184399619,\n    \"Domain\" : \"9bx6pl44l7owpsoxpg8can6n0i3r3mn18zvd8r3z4kis0j29673vm78qx78b\",\n    \"EmailAddress\" : \"Hugo.Kuhlman@email.example.mocklab.io\",\n    \"Name\" : \"Spencer Lesch V\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Pinkie.Bergstrom@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 143171432422930056,\n    \"Domain\" : \"01uz4amywxjxq371yhrfou8dn1a2g4jywg18bwfvuio88y7ipst1kknxrd8bh7sack0g4zfk57oodm2rmhplr57v1cwya6mhzomffeg4kxlksowxk0aligbra3v81k50dzjiwmj56py02s5grqw3phfhgogc7ud\",\n    \"EmailAddress\" : \"Augustine.Emmerich@email.example.mocklab.io\",\n    \"Name\" : \"Renato Roob\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Dayle.Steuber@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 8049783310583823280,\n    \"Domain\" : \"538sqlpasod3nptnkv2l3ldudj4r777xxf5w0311zly1lurozj5buwzinmrybra2ohrhd3ts20wqj6l\",\n    \"EmailAddress\" : \"Tyrell.Stehr@email.example.mocklab.io\",\n    \"Name\" : \"Ima Monahan\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Vincent.Legros@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 8330646760325867626,\n    \"Domain\" : \"o8vb3tmspw6k4jw47dkpzlf037920113hmxnae987q8ocaouwlojij5kuqijt4t4ftrdaabazm4j3dmjon6zpi14582ligld7cpygtzw2rxevkhifseu7\",\n    \"EmailAddress\" : \"Galen.Lesch@email.example.mocklab.io\",\n    \"Name\" : \"Lucien Carter\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Elia.Rohan@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 4881120260086042650,\n    \"Domain\" : \"427hhejzqyog3iz3nlb5bkfej2lk7lfuvm3b97625oppvo3rup3z1eq9\",\n    \"EmailAddress\" : \"Keith.Wisoky@email.example.mocklab.io\",\n    \"Name\" : \"Ulysses Reichel\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Margarito.Jenkins@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 3907598746578581038,\n    \"Domain\" : \"gq0imavcj24jj2besvtlcdvprlgf0r11didpzwhjsaiyztummympnkdr98717ytzrrcqkm5a3l3bw8gz91zkp9c4arn79fag2p9xwjn1j1rrpkulwb1zubr6vaw20vlo1\",\n    \"EmailAddress\" : \"Brenton.Volkman@email.example.mocklab.io\",\n    \"Name\" : \"Eldridge Kunde\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "55b59ca5-bbb5-3d24-870a-d0de56362968",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SenderSignatures" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SenderSignatureInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "9e918fdf-3ee4-3434-a03b-54dd93bceddf",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/domains/3671857009872198650/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "9e918fdf-3ee4-3434-a03b-54dd93bceddf",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "08bfcd79-6a77-3ac6-8fc6-f35d086b0cc0",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/1597568274670688524/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Et voluptas vero sunt eveniet molestiae est. Quisquam velit rerum rerum aliquid voluptas. Dignissimos esse provident illo qui qui a. Qui accusantium ullam et atque cupiditate.\",\n  \"ErrorCode\" : 5924324020597637535\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "08bfcd79-6a77-3ac6-8fc6-f35d086b0cc0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "085a35ec-dbd4-32c8-89c5-8c82dcb643f2",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/1318813808777743379/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SPFTextValue\" : \"3jxzp8efcs3mlq2b0bcpwu1e53notm0rr56bymo632j9n\",\n  \"SPFHost\" : \"k3b769hklfvxhv3e3ym43qfendql9y5dwsr40hqy83j79x7seqd0revv7c7uycz6bip8n7t6bp174hkda7qse1kw1qvfbfo9l5\",\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "085a35ec-dbd4-32c8-89c5-8c82dcb643f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "0658a256-7679-337b-932b-cd95cf9370b3",
    "name" : "Request DNS Verification for Return-Path - 500",
    "request" : {
      "urlPath" : "/domains/7891724393008800353/verifyreturnpath",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "0658a256-7679-337b-932b-cd95cf9370b3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "ca6e0b4e-4595-3203-a658-f1d9a7ba5c7e",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/8133507302071716763/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Veniam a dolorem ullam. Praesentium est dolor repellat explicabo sunt quaerat vero. Repellendus accusantium repudiandae illo deserunt enim dolorem porro.\",\n  \"ErrorCode\" : 1657881182774183993\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ca6e0b4e-4595-3203-a658-f1d9a7ba5c7e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "8d951b5e-ab61-3b6d-b2fb-20c4fd689918",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/3112914226531612964/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-10-19T14:41:48.852495Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"2rdgk3yukrb4pzqxyo5p5440hoo0hdajh1ure4tv0f2z7kspgsegxru20esdyzninhk2qti226vnlvxcis3gqz3ovsc54nwmm6fdpz1sc4u0autyobi2vqc6g2sj92n3ocg7\",\n  \"SPFTextValue\" : \"k2zfm6mlqd3b9g31ss1nyhqhlwesuhaseaqije0jtf4sb6hq22w9tjfhlx8coyxf9oitk4mul79qq3ms2bxas5qj5tegvbiecim9frad2d5xne70dzdpgnhkxuj0gt9cfhug1ol94ltdpwhulzr3oktkz2wan85eypj8tvcqzfv365muc5beldvrkjk8orkkyusx0b\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"xnar9joro8pairwbj0b0bfzxmijupry3qudkyk9ivfmpuukvvbzawsqqloqyxcyde3rtfyw4b0v3e67cwbrrqoatazu2jx255qiqj12l2xvlfh3pij822vzd83rtrq54roh1vdyh52iygdehdv\",\n  \"DKIMTestValue\" : \"14mosvd6cp8pz9xuel2ovec9laxiaayz0v75xp7kba29k8jpnuspyq3wvc7bv468bm76cbqut3unj2f8\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Lekisha Gleichner\",\n  \"ReturnPathDomain\" : \"1raev1e0z7q67pjtwn92vo2depuqc9qt90oyn51ulx25mbxxz5kvrpc2c9bxixsi081a7iv7jtqt9y04zkbbo4bj8zms3ds9qe0ey08q1ap35jisc3n62qbuxrv2btq3fb185j0x09nj1zcwu6q\",\n  \"ReturnPathDomainCNAMEValue\" : \"v7985skux9o49a25xg4t91tu6lbmfrtyaz9yjk5kw3bf0y7cuv2bdysouuedm1vt3f20us1rnxrvkgvh3tm0whdxsn9hlzm552q4lorz4gx6mmb8wskblrpay6bc67zaqqv95krx4kwj96i2hloa4zbu5w3jvnaasdzf54j9nxc2hzqv63bgq11ap97z8jb8l\",\n  \"SPFHost\" : \"rsgnbxyj2wchxxqikoqmm268kd4f78oimk40ryoblc1w3a4kx6ohgpcnl3z2c9j2nyp70f7fqwg0gd4nyigvzvlgo32l1btxpjzaoiz2y9gv8vqqeecltcdra4ldsps2o093ant9d5ys\",\n  \"DKIMRevokedHost\" : \"zunqi0qsxvqeqnwppqqp9cumqeizgqjar3w7k63d9nob2gp0otl5vdbgvhce3d7vf92uwn2purqi98tnp0yc1bqj4exmnz5xi6471v8vnfuowsh2gk58ru0e3xtzdfk1tq52pm5fhu71\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"kbr4x1g3rv7v36053fobdcsut2rn9edae971d9hcjhi59cqqozcvs9bj95k4bw1n34o1r5v7btw9r3bz9yforhyl\",\n  \"DKIMRevokedTextValue\" : \"jtfk9yjmdl9zjiqs2ught4bv3yoq3ypczqzqdqmglcyniif07gasms788cn283nte58n0dnlfp1gpanjgdb4817ihynlmf6suln7dxmohl2qwfqeptw\",\n  \"ID\" : 8605675635443487496,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "8d951b5e-ab61-3b6d-b2fb-20c4fd689918",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "36567569-c857-3368-9f86-6cb342eab97b",
    "name" : "Request DNS Verification for DKIM - 500",
    "request" : {
      "urlPath" : "/domains/1349952305821908943/verifydkim",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "36567569-c857-3368-9f86-6cb342eab97b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "c9001998-f348-3b9f-9cda-d479d1a6b209",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/4355842503211778276/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Nesciunt quis voluptas non enim. Eos laborum iusto. Voluptates ut cum quam aut. Neque at provident dolorem eligendi laborum quos. In et qui ut.\",\n  \"ErrorCode\" : 8255021565969577284\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c9001998-f348-3b9f-9cda-d479d1a6b209",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "fd3434b5-a11e-3f33-8175-7210f725b15b",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/2530717674736525355/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-11-26T13:15:48.852032Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"r66t40encx9gc9kxugm2ar8q5o0e7mbk0pl9qkd59ka8femcr2yup3vylqggivwbujfbo8\",\n  \"SPFTextValue\" : \"za9vap1khq5i0\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"ve2gs4dl1xj64yjjvkh6v61x0aktrhlm51t792oom8crjpwxeb2a\",\n  \"DKIMTestValue\" : \"xdgz79dsl85n27fgmfdg9ayhtpif43ofttihpvvbrqh4pk6rbicpd8qig8jduxie3zfmp2tv4nlljqzcvlwblpn6g8e15c6yj0cinlurszgpw6c7j8u52kqxly47m6otwv3wrdnlii4tlbt8fj44za6i28nln4qhj3u4yqzfk5c4d6rja6onsrffss8qet\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Katrice Ondricka I\",\n  \"ReturnPathDomain\" : \"ffd76ymdqtbtmkgytww7fzj8htbcz28ykmuql05lkfratoi3m5cwimzi8nrpiag827myy24nok4ol6w4ea2spcaluvmt\",\n  \"ReturnPathDomainCNAMEValue\" : \"6jbz6h5glj1ejm49lciekbe9h2s395d84900q5j1qt4lbg4l10bd3oewfwx8mtj30gx9g35eynpk2a3emtipg2eoav67nfwwjejdy9d6xgjcyseggh7e844m3328fyfwkfedhdp7o9m8hdmg2iglbsr65he80nd40x14sgocvxwd9ryg\",\n  \"SPFHost\" : \"x2rxoxa3u39e1od91war1wt3563u5zbbpuarnzyldtwk8tuzs51ibac9srcuo6fv3ckhdh8np27dstiav6asrf7cxpmkxut6od0sjtp8lb97gmmxn4axsvakcll3xiomt163k20cwr639d\",\n  \"DKIMRevokedHost\" : \"6sunml5dfcburf9p8lfzn\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"7iuk6si8ymde02ve\",\n  \"DKIMRevokedTextValue\" : \"14d98zpaau0fx6e2tyrwotvhiw8z8mf3dobn3jjycfxlv200vb89im7he601fdrvuzv7kdk5o565y1rf3dhpir8y6pacbkiyrdfpoqidokjcyqznhhc54we50nnsh98wvrikaw312uo6oz4g228spkfvx8id431lscswos8l8ameo32i4syr\",\n  \"ID\" : 2227077298455308317,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fd3434b5-a11e-3f33-8175-7210f725b15b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "aef4e632-58c3-337b-88d4-039a7f220098",
    "name" : "Rotate DKIM Key - 500",
    "request" : {
      "urlPath" : "/domains/1839217840726690181/rotatedkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "aef4e632-58c3-337b-88d4-039a7f220098",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "c3a0e66f-0543-3a0a-96df-4cb08f969763",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/1626722183620220716/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Sequi et quia. Dolorem iure ut voluptatum molestias at rerum. Vel magnam optio voluptas veniam. Maiores rem maiores est. Atque doloribus ipsum sit laborum.\",\n  \"ErrorCode\" : 2751710370559164093\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c3a0e66f-0543-3a0a-96df-4cb08f969763",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "903f44f7-3b9e-3be1-9dda-f172f1ec5a4d",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/8064302453991647634/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-10-22T16:03:48.851599Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"58owthzy1m1klsh1xateyx1mm6w6o4864yw46fd11mp5vd0x0s2j72nhp5t4xcnzneb9qxu08dhk1ksgffnk8n5kbh09p3w2o58zy5ulkjc9rcr8wj9\",\n  \"DKIMRevokedHost\" : \"vich0bd7zfob2zaia9uubn7n6o2al6lgwq0xwp7ykbiel2x7z4vmq2hlnzlff1266fjq6ef1n6f3fiz0vvxtcfgm4mlh6yjjh9kclg9oo6rfnm1a5p2wuizkp1q4l32r9kzomx7z2sipa33xbajqy2zkmowrs5ry9gs185qeupk6q1c\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"xufx80npea4f2itudtz7zxut5irsisw1k640ftbrh9d7qdn8khap4811ggra8chojwzajsl6d\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"5sm6ojyzoct9yrq4r86pakzqag1pni41r5a13s3uw7zrkpfcuc4q7f16mx0mzewbzvui8h30tryxe57sm1j1w0bswxoq3nd7zxmrfvcjutl7m7m93cs1\",\n  \"DKIMRevokedTextValue\" : \"l9w3lc42gu605wgwj4693tiskk002swclj28lfce8weg0ovusm9lb147csscoyk6tcygf855\",\n  \"ID\" : 6973548251394347513,\n  \"DKIMTestValue\" : \"a4kkyw3wbnbqrhke7m48xwvclf7wl3y5rny1pzb73dg6a6zsgvnc9jtf9zzkjdenqk6a74gnw2nq4uc348peev2n8dzpn4lz2a8lrf15u9qtql3ex148nrxhubhgwhkmuu4rq97rxvkdkkb2w1fn0zbdbesdzfvo6wulv1yd5olt5e9y9124q7kaaisk\",\n  \"Name\" : \"Jose Kertzmann\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "903f44f7-3b9e-3be1-9dda-f172f1ec5a4d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "020a5be6-0308-3235-ba2b-cf0ade662053",
    "name" : "Delete a Domain - 500",
    "request" : {
      "urlPath" : "/domains/1270336872681290288",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "020a5be6-0308-3235-ba2b-cf0ade662053",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteDomain"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "89aeb3d0-53c2-3ec1-8e29-62f19217e2bc",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/1580342244328616132",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Rem perspiciatis libero eius ipsa. Dolor veniam magni enim molestias a optio optio. Quia architecto dolor quos.\",\n  \"ErrorCode\" : 3371859603502608180\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "89aeb3d0-53c2-3ec1-8e29-62f19217e2bc",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "df3bba6c-34fb-3305-babc-3ab6d7bd19a1",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/5126165575425952017",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Tempore adipisci aliquam eius molestias aut. Inventore sit sunt voluptas repellendus magni earum iusto. Et aperiam ut consequuntur omnis sint. Cumque vel doloremque eum.\",\n  \"ErrorCode\" : 5549013798832242812\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "df3bba6c-34fb-3305-babc-3ab6d7bd19a1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "d8cfc095-9ab6-30a6-b3c2-21fc27e587d3",
    "name" : "Update a Domain - 500",
    "request" : {
      "urlPath" : "/domains/1199193608855227095",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d8cfc095-9ab6-30a6-b3c2-21fc27e587d3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editDomain"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "6944d963-360c-307e-90da-306efd93906c",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/8591767942326663773",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Possimus officiis dolorem ut minus ipsa. Omnis magni animi ut. Aut quis ipsam qui beatae aperiam non. Et aliquid harum id officiis sunt qui. Dolorum non id illum autem.\",\n  \"ErrorCode\" : 1276420759478535386\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6944d963-360c-307e-90da-306efd93906c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "6cae5a67-198c-39c9-80aa-d36097ef8cb5",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/5677859742986019215",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-12-28T16:43:48.850945Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"6syf6cazr6jnv23cpmsps38bc9v4b2zupbfe4emtz0q7i7h33o8nge9g6zz07w8449\",\n  \"SPFTextValue\" : \"c6sr5lkecsbncdwtobxrfi4u6kqsot6uhk3x26i20sjwzj30vgcj879wfjcc5bvje1z9igwqepll3yfboueolisr363es0m2418culoutmpluuqrxibewbw7ba6ipgj7\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"k57e5ywginm02h2kr9b7v6imbvveiozu3n25gliljvw5nmf8or2vw86cqhgm9y7iffe352miegadyb668gkg1ixiq3h367qngufsjea9jn2o4wrfrc826l7fd892rxqkmaf8a5rppr379du1dxeop9sv0slvwmd51fgirjw62lqacaapyeav1202so\",\n  \"DKIMTestValue\" : \"2gpaigpd36svkhpcn64dtamfx9hhhgh0wsbdonwe0givmu\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Emelina Kilback\",\n  \"ReturnPathDomain\" : \"hzltv2p0lk9n696gzmbd9xx25qi67h58jztjtq1mvc4rls92qt7ead0mwq01zk9wsa5kfrw0btliz4g9c164p38qvctd9aovncnbzv7plq41y9zp0nji9rykh12s53pvqe1q70pp93cr13j8fabuqdpz3t0w8jlvyokbrgugi\",\n  \"ReturnPathDomainCNAMEValue\" : \"y0637qfhjp342td6m3jsd6gvxqgd4dvms2ls1o95elyhb8mick78kfgb10lv7t31sgq068hu95cdlimsr0jggopmrkuz4yszjaddzb00bmt0ucuwfue5e6mf67cnrhr9kkq56l9255168dxdrht1ssznnti9xe3rg6s3sxbxm4s0qibt4b8x\",\n  \"SPFHost\" : \"yv3c6p4ai8yjdo9c0c2za1ws4af5k2zo9zt4y2isgrtoq6wi4af6kwd7yojkyzrf80q93s3kn1gbt42uln5fpax89n2c35rih6e3h4sdsuvsj8mdr0gvhpltemejx14ps61m8mbj2hdmekw625jdgowq5y4ybhlx2ce68j8i7m\",\n  \"DKIMRevokedHost\" : \"lbxqf3eevspmqk6yiuxhxfkj6knl2wzbxagqmeo9xoiqx1cl739k21mrr3gl54rprdntf7wknhwepkk6klv1n1gabov3pn9xsc5olw2eakuixtgfjhirb43211d2x2z\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"6kunr8jkh7ouf5dk2y1zwgdatcdkkwzwsx9vy9zmic6atx6os57fojqdva2zkk9s4cjxr43a79s5vnulkw1uti9ocq9i69lm0dfepzx171tx6b3104z0svchyvdkbprmit49qomw4shzpxziytq4s0ome66mq1f08v1s2p6etfky99nyk1\",\n  \"DKIMRevokedTextValue\" : \"gvny5dmgi5djnagetz7vwy8ylenssq7vjtkvolpf2yg2ckgu6\",\n  \"ID\" : 7432406887002269391,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6cae5a67-198c-39c9-80aa-d36097ef8cb5",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "d10d9d5d-48db-3681-80c7-1222118c6841",
    "name" : "Get a Domain - 500",
    "request" : {
      "urlPath" : "/domains/3921825219885137434",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "d10d9d5d-48db-3681-80c7-1222118c6841",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getDomain"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "4d25f9eb-2523-3027-b8f9-1fe38752dc6c",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/6285588517313732021",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Qui expedita doloribus placeat. Eos modi voluptatem iste saepe repudiandae voluptate et. Tempora sit hic temporibus neque. Quo eum quo recusandae fuga vitae similique. Est quis molestiae.\",\n  \"ErrorCode\" : 3027401902997163543\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "4d25f9eb-2523-3027-b8f9-1fe38752dc6c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "97f6d92e-25ba-3c54-a81e-1c6e2460e8db",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/8055733785137291131",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-09-29T13:57:48.850477Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"ygvei61kyz05xcimivsy03rh6l2bv8eciz2warkys98mmrd8jiu9sz0wbzlanx8yxol1qjnvygrbx\",\n  \"SPFTextValue\" : \"nzf56eohrwvsvf0m2o7zyvb6intphtnmwavvyv2p3ugy3zd498v0wfmd7tobpw7j7n8fj6nct55w9u5vdrkl0e5pwjx15wwv8wsiz7xe2bj\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"6srvvkorly7t5kqqon21vk6xroqs2tfibwobcn9q3zfdicba8ih9ihbpnpyd8nlnjb5z266b4awk150t4j6z3skobhueloyowfa5s2ch09q0pkh6oy85jxqm3o4ntd4ebir4mam9b8q777hignxmdlosd2uslxr159579a\",\n  \"DKIMTestValue\" : \"89nds3qrjydjtrw1pyjijuuvzaqh0snewaetgfk8kvsj27yttstvatc5uh2uq788ci3ojdncr\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Miss Donnette Leannon\",\n  \"ReturnPathDomain\" : \"88r6wtbjwofu3bsnhgeqggqbfrg5p9vsf8bkfcm7ez0fjvyquxbeftpqmspmgptrat1sq7u8803mywmu85qnvnqaoar5qxg24xiii2f\",\n  \"ReturnPathDomainCNAMEValue\" : \"v8gvf2c5g91m\",\n  \"SPFHost\" : \"k1jb53ansfdd730sz8tmjle245a7xpp7of69kledy1rbffdkkr9t9esggfyhxxg5jcxv6d4l003a4tza2bkio6\",\n  \"DKIMRevokedHost\" : \"tbqc3y8svy3r64pqoh00\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"sledflnrujr12svni4v7b40a89algpd2xzows21urg86ltf7gfbhlslhzzgeihqe4omjr26xfrfg95vsye951xru9exi3m29e21h6tz4zm3rw1nmo5qv5bbhjih442svqr5jvbybh8dqphvg3t56je3db3ii5jsjdvdk\",\n  \"DKIMRevokedTextValue\" : \"wqxwwkbpq717yp9rv9am2tc1eqehuj4n2ev70wb5z00tjasoguklk4euplccvsb4oa7rl3fbd5ph2sowzx2yal1dmxmllsuqhs4nd2ftzaxy47a5gt82osrneghqsm74qvgky9csikwo5exsa2e8akzgge83crs9aw8xa4p0kqxoxaod\",\n  \"ID\" : 1927947794118289294,\n  \"SPFVerified\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "97f6d92e-25ba-3c54-a81e-1c6e2460e8db",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "cb31d202-04a1-36b3-ada8-7c683527ffde",
    "name" : "Create a Domain - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "cb31d202-04a1-36b3-ada8-7c683527ffde",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createDomain"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "6c42344f-ace5-348e-890e-f034383a1418",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Non excepturi facilis sit repellendus non aliquid enim. Sequi quo rerum. Molestias vel eum maxime est maiores nulla. Voluptatum numquam aut rerum quos quis odio. Quis neque error dolor voluptatem ipsu\",\n  \"ErrorCode\" : 2043170828844794807\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c42344f-ace5-348e-890e-f034383a1418",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "f92d4532-8b08-3fda-b9f1-b5dd69ece3f7",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-08-22T15:16:48.849906Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"yup88nr6weo4uzzaua40hjtnrlzqtkfdqq8gcmrmkobluoazoplsqhwfleifh38u0ns1wuiz83643122zjofe0ffwj39os7k4fzns7r2ennhm8tshyldoewe3i0mvu73tynehnru4fl8udgtfvk2tyg4zp5oaeq2pufq6820k8s50iyfd\",\n  \"SPFTextValue\" : \"dvxdg211f681sv0tpanmzkr2v5jqme8350aks3blg7ei9fykfcax98l27lm9poa9lf78u81z0b5dcwhqndq7bz5rn5xgs13c2ooglxwkpis98iprqn4ugsjdebauw27pwv0ztijzvv8ubavkww4rgzfzptijfybc\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"8242okvt1wdwrew1q1hx6wq1gyo9r4ebyvy1b53xuot1s2h3n9pfqip1em3rx9dmmrl5ump5m1x5zubsbifx5z0095mh2i61wfv9qzjwh6n\",\n  \"DKIMTestValue\" : \"c6975zkuemi3ekbibhotryul49ccgl3s5d011m3d2pjht89dcp75qx6fb2sgyk8u4r7ohq5m1ddhhsiflrz8s2n87ym1yfn9we\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Keren Cruickshank DDS\",\n  \"ReturnPathDomain\" : \"sent3o66u4aasbqqqp9kpokmegvuo2sty1scdw3ecbdmp8a0hriobzsaeou20m0d42fd\",\n  \"ReturnPathDomainCNAMEValue\" : \"bl35w1mmn677feolj6rcn2ym8evml7n07vl6zdq0bo3oc7vg0vq2omqj0rihm8xixrmlse2gnpadi90fhgh88klotrzp3vz2xi9n8do7ibxdyrv9qutjzrjt3gxunpskclz7i1nkptn0gekvn29h0rbgabwpziejh6bi4029mv57zl3wg6ug02j3jwpof9n4brlarab\",\n  \"SPFHost\" : \"r8vwnf5r5xbv77w5t8ytpiyhue1er041cex6a1y9ounnuwuzngjj7z312c4s1uewjxitp3sxupw0h4\",\n  \"DKIMRevokedHost\" : \"rvwnh2u7cfw1ampxapuxd5eu8fc91m6ngl5fh6a9z3coburqz0lkuyj9mnt8ay7qe8oyksivpnyk1vmzfos9apvjpmil2mtrigohgbmplqjcc7aegjvv3c1q4oo6lm50g47js22z95z2sck2oturjip1sun1fexsf8ryd\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"brqd675akyipmu0dy79ihpaq8e9o184g2jmze26l9dp0z41zdql1vqkklaxnpqdk7o\",\n  \"DKIMRevokedTextValue\" : \"gmbo9zlr1e67xdnubxidpcix9cxwav0aim5ybnllpjkflm4y486nkc0rk796g284ngsawspsd835m8w3zao2tf93qu96dok1c8ng6x77574bwbe5ns9gkr1quiw61d010tf8reaexdyzn8htcy0ao20jczn8jllx7\",\n  \"ID\" : 8538523230509912189,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f92d4532-8b08-3fda-b9f1-b5dd69ece3f7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "59975f39-5fa3-3e8f-b904-9b7469c45a42",
    "name" : "List Domains - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "8351734700670763058"
        },
        "count" : {
          "equalTo" : "164"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "59975f39-5fa3-3e8f-b904-9b7469c45a42",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listDomains"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "79f20bcf-7190-3ec3-92d3-a29a0147a5ca",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "4693060006662626985"
        },
        "count" : {
          "equalTo" : "197"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Praesentium qui et. Quaerat voluptatibus debitis cupiditate. Illum magni voluptas possimus sapiente non.\",\n  \"ErrorCode\" : 1119319887458716408\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "79f20bcf-7190-3ec3-92d3-a29a0147a5ca",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "1259b545-416b-32ce-84d6-6859e4a1d8b0",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "1308642805155547646"
        },
        "count" : {
          "equalTo" : "87"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Domains\" : [ {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : false,\n    \"ID\" : 2547276668239911997,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Carey Lockman\"\n  } ],\n  \"TotalCount\" : 2528103585003647820\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1259b545-416b-32ce-84d6-6859e4a1d8b0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Domains" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DomainInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 68
  } ]
}