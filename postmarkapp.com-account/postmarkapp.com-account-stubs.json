{
  "mappings" : [ {
    "id" : "1038ffad-a8f7-4057-8437-fe61dd03ac5d",
    "name" : "Push templates from one server to another - 500",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "1038ffad-a8f7-4057-8437-fe61dd03ac5d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.589438Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates"
        }
      }
    },
    "insertionIndex" : 0
  }, {
    "id" : "6dc02f46-d405-4866-9eda-66844217ebfd",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ut autem natus consequuntur. Quam deleniti inventore nihil doloribus. Rerum maxime tempore expedita et rem. Ipsam aliquam soluta nobis sunt molestiae eos debitis.\",\n  \"ErrorCode\" : 2930243924550063939\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6dc02f46-d405-4866-9eda-66844217ebfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.589414Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 1
  }, {
    "id" : "87e9fd4c-99a0-40d3-ab08-05ce7d3e88de",
    "name" : "Push templates from one server to another (application/json)",
    "request" : {
      "urlPath" : "/templates/push",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 4202975853078094906,\n  \"Templates\" : [ {\n    \"Action\" : \"wmfnztfti0zfnl7diume0mibt9pesafsd5bp2nlsl3zfjnc5a0q6kjoorl8k9y4l5nod9pc4bq7krrm3zsdcicc1a0\",\n    \"Alias\" : \"oy0mcsmif5dnax42n16d46m6gvbfcnulp758q23lx4tbbsuca3abi9iuzozu7nw5g84tx3xfy78exwll53elb1vbominajqlg0al5kkcfyjl9k6a4zyjub8lt79d4hcgfqyq5oowm\",\n    \"TemplateId\" : 1897717304202425035,\n    \"Name\" : \"Esteban Reynolds\"\n  }, {\n    \"Action\" : \"8h0b4leqc4tdqzduvw5gon7umcu0i7vikyo2ebe4ccdaw0yu8ksk7o8st102a2kmn78zy6pk8275wrjgioj89n70qijw\",\n    \"Alias\" : \"3piqemwihh798iidyke7q5o0gz3c0p42ejzopzzx96rckqwbourqb3bydqwz3tfy13a8loksg8yeeflmmnc8\",\n    \"TemplateId\" : 6459685923243949934,\n    \"Name\" : \"Mariano Kilback\"\n  }, {\n    \"Action\" : \"ewtosupu1de96i35apf2yk6rxj75rxqno0eipj4ha18ezyoxu6vvbui7c0mtuzf0cvm2rz3jrg5mizi0zsrfjuxssijidk4q6\",\n    \"Alias\" : \"609uch2r55c3yq452iplrcec00ypdtniipl3p88evd321bxyx3mjicmmufhx0g3chk0c5h8wixx0h1e7l9w8kan529bxlktxwadm8aohgkafxeqkm\",\n    \"TemplateId\" : 1472222866083718748,\n    \"Name\" : \"Napoleon Torphy\"\n  }, {\n    \"Action\" : \"gdn81xk4o8s\",\n    \"Alias\" : \"mtvs1jcmgumnh2ove3ls4wi5ahvciaxayyff8iweire9o82lkomdcg02sk8yrgdksf62ec16li6c0q1s7ntx5i4pwvocm8oo0htjjmt5ueq\",\n    \"TemplateId\" : 459131023624038359,\n    \"Name\" : \"Wilburn Swaniawski\"\n  }, {\n    \"Action\" : \"93uy44hrlfqifvomlgpjbfeqg9dhtwwskf4ehgjiw4sj67cel5bfd466jlch9un0mbv4taatdk8uot7nczgrz0hgviyt2yqq\",\n    \"Alias\" : \"hlizpovei4w4j8n3xvybji7qza2gz2rx20ugkwtonp5rhttyzutnwajern4btfh65cc1ftjn4892g4djcv8q6t94whn5awzj\",\n    \"TemplateId\" : 4553883636159862632,\n    \"Name\" : \"Marianela Bradtke\"\n  }, {\n    \"Action\" : \"23hzs95o2fs5dztdo7eit8sn0pnra1kswqleosjz96fwb03126j6slzq1s9ebfsgg75k31hrhy03kj6tp72886e58dxnnlw4r\",\n    \"Alias\" : \"cp8pa47t7uqp3oii6q1ct1eh0v597jnose44mylqo56w8x8hk0hye7hy8at5m3v5xbw2xpy7zcryi2797w6sdqph7b3qh09hd6w0urrh7gjf\",\n    \"TemplateId\" : 804601094321754683,\n    \"Name\" : \"Mrs. Johnny Kshlerin\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "87e9fd4c-99a0-40d3-ab08-05ce7d3e88de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.58928Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "pushTemplates",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Templates" : {
                "type" : "array",
                "items" : {
                  "type" : "object",
                  "properties" : {
                    "Action" : {
                      "type" : "string"
                    },
                    "Alias" : {
                      "type" : "string"
                    },
                    "Name" : {
                      "type" : "string"
                    },
                    "TemplateId" : {
                      "type" : "integer"
                    }
                  }
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 2
  }, {
    "id" : "82299a7b-5222-4dc6-93b8-aef43ff81829",
    "name" : "Delete a Server - 500",
    "request" : {
      "urlPath" : "/servers/7291307248050760497",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "82299a7b-5222-4dc6-93b8-aef43ff81829",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.588659Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    },
    "insertionIndex" : 3
  }, {
    "id" : "2878e6bb-86ed-4b85-9ccd-b79976edc510",
    "name" : "Delete a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/2295661781663130039",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Amet nesciunt labore at pariatur velit. Rerum magni non pariatur in nihil suscipit. Voluptatem ratione temporibus.\",\n  \"ErrorCode\" : 9016521549361086780\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2878e6bb-86ed-4b85-9ccd-b79976edc510",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.588633Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 4
  }, {
    "id" : "da72af69-c332-4218-a08e-34eb97c27966",
    "name" : "Delete a Server - 200",
    "request" : {
      "urlPath" : "/servers/4406849203248562460",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 200
    },
    "uuid" : "da72af69-c332-4218-a08e-34eb97c27966",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.588533Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteServer"
        }
      }
    },
    "insertionIndex" : 5
  }, {
    "id" : "0cc5d86e-6d5c-44e5-bcb0-64ffb5d9a3e3",
    "name" : "Edit a Server - 500",
    "request" : {
      "urlPath" : "/servers/7285092338964200616",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "0cc5d86e-6d5c-44e5-bcb0-64ffb5d9a3e3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.588508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation"
        }
      }
    },
    "insertionIndex" : 6
  }, {
    "id" : "775b7258-051c-4598-82cf-5f5d7d5a0e52",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/4371599599554882603",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Molestias nemo ipsa doloremque qui. Facilis beatae expedita eaque non. Quos nam quis dolores atque quo officiis. Veniam et deserunt quidem. Sit velit dolorem tempora eum molestiae perspiciatis.\",\n  \"ErrorCode\" : 5872865511861504748\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "775b7258-051c-4598-82cf-5f5d7d5a0e52",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.588481Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 7
  }, {
    "id" : "240973f2-2ec6-49e2-9074-19d0eefb682b",
    "name" : "Edit a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/1779854976402411684",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/430114\",\n  \"ApiTokens\" : [ \"pd948jgwhrks22t5rly1wxwekcrj\", \"ub8v243r5j7l0xdt0l3qmfwr9l4n2cuodypo8ojphnzw5xv5cey1lpnkfl1duw4xnz1pq4nxu1iqc29bafth7zosfqgmdqr\", \"m66vfv6b6h7yo75j9c0rdr5sxxr8l1vdhmvuxu79mjukziup8fpvrbgbtfk4frrwyz9fxpxfz209p3sih65mdfhbvd2welj5\", \"2zuvmn46g3bt3rtw3kigp7zkvxzy23fs6led1uq643mdf1lxkfwyspogqi775wt4txuj9cz68bfatgpiii8p60m9b5y1zs5468s8y5oeud2k5iulfxftbk2lxpp7yhz7plmcf40\", \"8kcxziv067r49hivo2ccc0bv7\", \"de9xvlku58tw98xh4wyn13rl32gu249g7s58wy4i0nlb3m6r3gj1d02prci2kyf17qoy2d0e2arm3dqv1q6zxb9k0mzc3mk68pcbdcp4dvt4lzzmh2zrpjemo7o0io2je44uuxvsfpxuu69mpd3z0zyv4ocpmnzk9n4sgiuw3lewl8a\", \"z9smhm8m2744i3ql5n2mwmb5ctu4jia63stsbo2lmtsvk9wim1kr9gm6llz8om14xht5kinptrs9tpa2iyisu5amaujtuj2ud0krve0auspzmqk7i02xw8t1pglwxijguuadp5xw7w9w5inum2b325czsvlwau9i6pr8xygbu81w8eyg2pie5iezp0rm857\", \"9v4kgt914kr3cj5ivirq50v5ippotrsopvuimmwiy2vtcnvitux9atowmlp9x59cj09y2mo8bkkfjjaozw60vyw9nj8590x5x9shgqpvp865trgl38g8jcjecyjupydqt2j7boart6eytvvjfjlc6z4vtj5let4rmzqn\" ],\n  \"ServerLink\" : \"gi2ulkuskd3jxpti80mp6y1ugr4uuppm1bnrnobqgl1p2cl0ywy7u65eslxbpecn067sq6mr12yndmcejti4ibydoinn111q4ylx3ul69cmmfrv7bs3qlswxdynmutkax1pyh1n8jyae8nnjyx0\",\n  \"Color\" : \"uvwibyqhub4lfho39zv3szrkz766mgiin2i3wywg2vx4dmfx49eabj68syxnknka3vh8i85v12jn48eh8ivyhovjqv3qp0tmw3x5xt2af8fz2\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/763194\",\n  \"RawEmailEnabled\" : true,\n  \"TrackLinks\" : \"HtmlOnlyTracking\",\n  \"InboundHash\" : \"o8txfqneucal5eo004291mgq0u3kh\",\n  \"InboundSpamThreshold\" : 4468880067494303283,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/219076\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/085777\",\n  \"InboundAddress\" : \"3x6adej2anqq4e1n5g64uvfkbbwnlhco20repstdpslskrcakc\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/919885\",\n  \"Name\" : \"Mrs. Danial Olson\",\n  \"TrackOpens\" : true,\n  \"PostFirstOpenOnly\" : false,\n  \"ID\" : 8521177732636223834,\n  \"InboundDomain\" : \"oeng9nockeb4eqp0umnv6va92frhpgw4eonac2g0b3v0nvwad7jfck04l1bsfx6fhwz4wy9zgb4cj6p7xj156v9v0gmv1mfg9zbv8ifw62qqp2jgdgwhbpwzrkn077fex7j2ymo8akkpo3epjldb3spwtt8p\",\n  \"SmtpApiActivated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "240973f2-2ec6-49e2-9074-19d0eefb682b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.588332Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 8
  }, {
    "id" : "edb8930a-a1e7-43a4-9d8a-bf88a21b4c78",
    "name" : "Get a Server - 500",
    "request" : {
      "urlPath" : "/servers/5195737004640715736",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "edb8930a-a1e7-43a4-9d8a-bf88a21b4c78",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.587688Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation"
        }
      }
    },
    "insertionIndex" : 9
  }, {
    "id" : "f83f1851-ae31-45c7-bb10-54efbca5a523",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/4504068532537132100",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Maiores doloribus numquam aliquid vitae animi ex autem. Fugiat reprehenderit consequuntur sit fugiat aut incidunt aspernatur. Quidem eos aspernatur rem necessitatibus. Autem et aliquam rerum vel occae\",\n  \"ErrorCode\" : 9094690240323592638\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "f83f1851-ae31-45c7-bb10-54efbca5a523",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.587661Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 10
  }, {
    "id" : "227f8971-19c4-4826-a30d-d06c5fbff6b8",
    "name" : "Get a Server (application/json)",
    "request" : {
      "urlPath" : "/servers/136783325818748717",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/712628\",\n  \"ApiTokens\" : [ \"9140yu9rezjf7sgfw4ikf44p0re17rdm6gkcjallxir0qu14m6wqqq3vsc0kekuda9q5qwrodrcvmf8ooa8icsd4l3obxaw4k\", \"h34uaq13p5\", \"8o53pdjmpbnqc2d8h0rffjvnob8pq9sm8r4kzhglghtby39pobbdhzwcveqefzbikciaequdiy0ibbkx8vj4uvlkliaz8eeexfa\", \"om06kta1bjy168c0i2nr0n0628sdvqve73by98bn66psag29hq5vhjhog610ugzfz7e3u2yamwst7smfwvo5fp6lhtw2ebp0txnb60i5ha7e8g9r1olxa0bjir5w1t64r\", \"9girs2u\", \"kgrxz5oddx21y6zf9iigpe1r6z5lwgxe844sgtpdczwf2vzfi4765ryoc3rje79xm9vym1koy3rilybc70idrbknkqjkw2h5cd2sfx5jxr6prqyu22yq2t9zukuum5f596tgoq4efkmkrgnc\" ],\n  \"ServerLink\" : \"0vqcs9eru3enslv5oozzkypxpg4lp81027j9flkfykybcgn8iobqtatn4hd9lslpysy5bj6cyb8zxxdd0ryozebrpeyrow9a79b\",\n  \"Color\" : \"q9rtcrz9oonror2i5tkfwpuql6l4ia9669l20dce62oufh731f32hbvuklk4uzmlix7q2aeznpewdyyejbd3pvq2332eny710m1cye8yt7l6d86n5u8kps9pq4bhgz0svcnd61smedx00ycn6v\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/477524\",\n  \"RawEmailEnabled\" : true,\n  \"TrackLinks\" : \"HtmlOnlyTracking\",\n  \"InboundHash\" : \"epmecatn1qkkraemntjbe5gulhnsab4wvjbz3y9irynq4rapunpyfme5yjj31gqqiqjqdlqv1g5m64n3qz1hkwxu8q516a3j39z6v7ictnosjlh6qjd6uzb5swyf53i9ntamyoml9lsjg6cm70wfhzbgd9eeyhd6h2lvhpqdpgw9dvz6bp\",\n  \"InboundSpamThreshold\" : 6109638130399352438,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/232598\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/572590\",\n  \"InboundAddress\" : \"ra8n3w7pce95oxb6jjuatysr3hd1sxsmzbnya9uzzuqkj4rtzxg0jqvwzduw1tfil0u5k\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/605881\",\n  \"Name\" : \"Rosendo Roob\",\n  \"TrackOpens\" : false,\n  \"PostFirstOpenOnly\" : true,\n  \"ID\" : 8381909358712636361,\n  \"InboundDomain\" : \"14fsv9wua33svmb6iz75923ho9xztdlo6yrlx9ob62wh8smea3ltspw7v26uhv4oi7cgxn\",\n  \"SmtpApiActivated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "227f8971-19c4-4826-a30d-d06c5fbff6b8",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.587512Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getServerInformation",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 11
  }, {
    "id" : "3b2aee19-a65b-402d-9d6f-9dd9ee716cfd",
    "name" : "Create a Server - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3b2aee19-a65b-402d-9d6f-9dd9ee716cfd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.586884Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer"
        }
      }
    },
    "insertionIndex" : 12
  }, {
    "id" : "ef8e6158-6376-4586-a6db-a567d6191699",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Ipsam aut non enim. Odit explicabo itaque sed sed sit. Voluptas exercitationem maiores voluptas ea autem sit et. Accusantium autem praesentium. Rerum aut molestias esse.\",\n  \"ErrorCode\" : 7945798718160686317\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ef8e6158-6376-4586-a6db-a567d6191699",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.58686Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 13
  }, {
    "id" : "2205ebc6-3ade-4279-8d83-201030ed9767",
    "name" : "Create a Server (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ClickHookUrl\" : \"https://web.example.mocklab.io/158570\",\n  \"ApiTokens\" : [ \"cbotzhr43y3jk2hsldij1um1773jg8mt0gf4s1irrpl52x6o6uj9yk907vt9dm0dmeff6rx6ajdwmz7hfw6uazkxrszp5atc3z7\", \"4wmvmm8aqtiofrc6r6faw4hobl2obvlwm4cxtw12qmtozwb5k8n16il048ezg513r9n0hvtm1ovmx86vms6xq\", \"4plfw6v1s1hjlpqj35dip131ec7qgvjzt599x8w23kl\" ],\n  \"ServerLink\" : \"fomkve9c7cmujhy4ohhp6ltilc67n07694w1bcxopf4rj6mmlhikurv9ofhiet00echag2mp3z5ty0tsv35f\",\n  \"Color\" : \"n65af0qlmph1r0isc3\",\n  \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/311494\",\n  \"RawEmailEnabled\" : false,\n  \"TrackLinks\" : \"TextOnlyTracking\",\n  \"InboundHash\" : \"pyw12rm9rq5xn0otk1wf7baixssd10flh07cki2p5hv6xby0f22d5pv6zuqo81j3pm57yo6js6xb9klhr3s44tiekzpd115tfedsk6oe3dvkd0w5tu8llh\",\n  \"InboundSpamThreshold\" : 3828672054951449700,\n  \"OpenHookUrl\" : \"https://web.example.mocklab.io/013020\",\n  \"BounceHookUrl\" : \"https://web.example.mocklab.io/370697\",\n  \"InboundAddress\" : \"ltarefx80\",\n  \"InboundHookUrl\" : \"https://web.example.mocklab.io/313917\",\n  \"Name\" : \"Candra Labadie V\",\n  \"TrackOpens\" : false,\n  \"PostFirstOpenOnly\" : false,\n  \"ID\" : 1551518171609090122,\n  \"InboundDomain\" : \"m5jrvi70mr5rpeoogc8i2k00qdu8v1toca1f6484xw7hhzrb6uiurz9l4mftri975fe8v\",\n  \"SmtpApiActivated\" : true\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2205ebc6-3ade-4279-8d83-201030ed9767",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.586713Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createServer",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ApiTokens" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "BounceHookUrl" : {
                "type" : "string"
              },
              "ClickHookUrl" : {
                "type" : "string"
              },
              "Color" : {
                "type" : "string"
              },
              "DeliveryHookUrl" : {
                "type" : "string"
              },
              "ID" : {
                "type" : "integer"
              },
              "InboundAddress" : {
                "type" : "string"
              },
              "InboundDomain" : {
                "type" : "string"
              },
              "InboundHash" : {
                "type" : "string"
              },
              "InboundHookUrl" : {
                "type" : "string"
              },
              "InboundSpamThreshold" : {
                "type" : "integer"
              },
              "Name" : {
                "type" : "string"
              },
              "OpenHookUrl" : {
                "type" : "string"
              },
              "PostFirstOpenOnly" : {
                "type" : "boolean"
              },
              "RawEmailEnabled" : {
                "type" : "boolean"
              },
              "ServerLink" : {
                "type" : "string"
              },
              "SmtpApiActivated" : {
                "type" : "boolean"
              },
              "TrackLinks" : {
                "type" : "string",
                "enum" : [ "None", "HtmlAndTextTracking", "HtmlOnlyTracking", "TextOnlyTracking" ]
              },
              "TrackOpens" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 14
  }, {
    "id" : "5d60cc6b-b7aa-4802-8d24-a857778d4726",
    "name" : "List servers - 500",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "2678248156326344891"
        },
        "count" : {
          "equalTo" : "2358726653623081701"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "5d60cc6b-b7aa-4802-8d24-a857778d4726",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.58605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers"
        }
      }
    },
    "insertionIndex" : 15
  }, {
    "id" : "6c69c994-1f59-4348-8855-d6f6cfa1c374",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "3252017564416089810"
        },
        "count" : {
          "equalTo" : "38019373365296024"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Voluptatem asperiores et alias sapiente nostrum modi. Veritatis ab et corporis nam maxime ratione. Ipsam laborum voluptatem at nihil doloremque consequatur.\",\n  \"ErrorCode\" : 6445079027711703623\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6c69c994-1f59-4348-8855-d6f6cfa1c374",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.585998Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 16
  }, {
    "id" : "2dd36710-7b1e-48ec-9944-8c3730b333f2",
    "name" : "List servers (application/json)",
    "request" : {
      "urlPath" : "/servers",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "3112443082270630656"
        },
        "count" : {
          "equalTo" : "7357228431718011514"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 5562588323447986713,\n  \"Servers\" : [ {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/062226\",\n    \"ApiTokens\" : [ \"co0dwwge8ub3hkmjdvrqygviu5dw3biv4291rbqr75z8l4d16flgflfryrzh3prwb852l3dxh59h1nla8blwqimkbg8wpqjql0y9qtddrs3vahmu6t74znjlnr1p5trhd8bkmdtsw0qtvttxl0kf0z7lw9s0nsitcbbvy6q06krb48qflwq6n2uq78zv0g55ax4\", \"zfrymnju42r8chx20yqomzeu9c9p4zlmbwl6yc9acg72kb0962ykxgzp9xmwuockdcsj9psj1423\", \"h13kre1cyp7euehte40ejc4d5l9y1od3pfm4sd8am3l0jaxgoi7jem1xkxssl533miu2yvgxfeqzr671t7cgldhgutbbd0\", \"vatttzzm6wuy81lwzzruge721\" ],\n    \"ServerLink\" : \"rhhhoizsv0hrgvwmoxtf4nvnl9cnxy54w14fso1sva9emsqd77fw5igqxc8g9m74vbyxrcynbj9u9f9r4bzj7lkxm9qvnadlq1t6eep32l2mkq209s1znb205or9vgi7fmoynt7xen5un7dgbulxkommaigxq5rhrqvekybihcc3\",\n    \"Color\" : \"5f4uezone1nm35piv4gukooydthnn7ymke64q8c9o4jtmqgw64emcxhm2pvgxs47pgow31j9x482ewnladaeeojuk1da6oksfmut4zou29309r5k9l8dnm5dgf5nyfaiwvp791d05uqd8w3ywys\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/507554\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"490edqg7c25g42zrtoev\",\n    \"InboundSpamThreshold\" : 2324645309370938810,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/528321\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/214035\",\n    \"InboundAddress\" : \"7ylu\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/012532\",\n    \"Name\" : \"Reyes Hettinger DDS\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 1548233429579729524,\n    \"InboundDomain\" : \"vxr126vwd7f85v0jj9bkyytqpq93ye3i2k6uq8vxbeytu4fx25tlawv50l4ns6x7772g7jhmwh64xg48dj7p2l55gd3ry27kdoufyfkrvk5qc18zo578m2magg9funh\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/630959\",\n    \"ApiTokens\" : [ \"u4qvkqzoa052bv3c2m4o3wix51aax7hg56huu4exsfwfxtvh4rztd3u69beno78gc6rw4yb4buj17wuz6kmt4w12dc9ru5rpwut6aeq35dv79r3uejjz8905luyam27khc6cymaisziz0\", \"jdpwfhcivr1mvuikfnhyr7wn5vhfzfaxwgy12fg6ygmnngna2vphkll36whchzc\", \"6ypgzqhozbw9wk6jgagv985n799lm8s85g2u2e9m1siqdwqt92o4wngmfrevcm4isnqzzt844cvmlk2co6hs307sexw5r6xyw4\", \"zv0a9iwutx683eichgjjw3lf5q64p5ftw7z0gjiqimcj5jgulnb64q2n3cdschq33miobov7rgo8u2tlk467rj7njofs24r586y0umi7er0gzfizvbcowamirfbssudsq9ammk0bo3yxeg7\", \"i26ysqe39dluo674x9blabls1vbzb70l2kea07kof1k01agllv01h98w7mz4rvynz45oawkhaojhhsw640h9fezrpq4d7yykw4\", \"bzhp0a77wbo1z0onmyhj3m1wavob90kysjx43gec5kqir33gqknzm0xwcawiqyzaedb6yt5k43fmjd4gcnl2ad4o5i702l9ye9pogtwphpq0zvg6y6a8rz40zs734uq7fsurif\", \"9luh3wjjsltb300n6qat6jjhozqdzlgaiix5ldpxssit0y5qnofujr9luj8ohyrcn5el6w175qizovw3u9954ane8g66hoq01ap3h5h9kn9twrgkmiusme2skyyda89fu8nxy5mezqzvwj6pp7o1salhrofm\", \"6hch\" ],\n    \"ServerLink\" : \"pbk1p5cm766zusfojxzt5fcdfvf3n0f21ervoz\",\n    \"Color\" : \"kyday8287pzndsqgqo2f4pdhm2m5gsgcgx3okj9y9u4snpamnya2ucznnhf3sqe0h299rkiipp6luhnxy3f1u4pnrh3zb01is4msaj25w6w9y0e\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/088615\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"None\",\n    \"InboundHash\" : \"q9z752m6kacg4dj2l1541ko1cni9qx927f6qn1j2vjvswy67ca7riy3svymh7i821nb3xzkc469lh02veakit07iauzpwonnlpwwmzasusqhesbujj0spoy8e3o97w0091wjvuu5b1hv8cqr8sb5cb2ud2imc2w7vb1kbcjoyuyfy4skss2lng0c1hobx\",\n    \"InboundSpamThreshold\" : 4843278394741027877,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/138021\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/169484\",\n    \"InboundAddress\" : \"eh2mzn9sxug4voly7rlnlfqx6t0vac5h2k7c9bzqu1rk3abph7p0tqljzxxae9e7sl74ki78prb3pe1wfmfo3\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/987147\",\n    \"Name\" : \"Myung Runolfsdottir\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 6419539847629152201,\n    \"InboundDomain\" : \"hdg9fx7fxes2hwmqohdnu7asrcyedc0auo24eyhhbuxgp\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/527590\",\n    \"ApiTokens\" : [ \"pfylhydki998kdem2lcmo7g3chzkb4hvk0732mzxh91vbgjszvtpeyodjve16zv39zm439yi12gvv04\" ],\n    \"ServerLink\" : \"fsx\",\n    \"Color\" : \"i22ar59ylv0b4iskuzazdnneoqppo\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/829806\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"45sfvnb2d5h3no0qe4xryxrngsk915hg3g4milxic2m03o8l49wm\",\n    \"InboundSpamThreshold\" : 5195530183601374281,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/294111\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/995439\",\n    \"InboundAddress\" : \"woqr05dmmb3iywijjjf9gtnuq6f9ynmw9201nflla74uoyqv8n7a036hr76uto6q3o7i581esw21y\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/104121\",\n    \"Name\" : \"Barrett Wyman\",\n    \"TrackOpens\" : false,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 5122895073409835130,\n    \"InboundDomain\" : \"gao62u7h3tp28gw4ahuzofn82fnsudyuek5aw7jmm1azzgf3gq4r0trw12l1stqz8npgc0cm3n1fod\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/935238\",\n    \"ApiTokens\" : [ \"3hbn7ng5rsej2zu8nusd454azamze7xhe1mx0lsg3ea97a5zrmlqbprhkdbm8r33od8e1pvcrs1284oo04kf\", \"41q60zaetki8kjzlu7xrhzmrit8uazr4mpt57n9xcuzsngx7etoyy9r73f2ws0jla29lowxjh3u81t28ryzr4psnujwonjdrhouorgwz22n97gx9onc2enp4hm6joebzx4tbx1ct5fjr4zv0hz9ahvdoma4xrfa\", \"6pc0nmykwk0dor68mnba9fdzt14eq57ygh88mc4swu0rsx\" ],\n    \"ServerLink\" : \"2ujvzuwcwisj0h7n7aq678cw3ikgt30029bvhej6gplfnq6qjgu7i3bhfl15kg1e1n\",\n    \"Color\" : \"o28twzamx4wzc0bmqcs73ib9hxulvzbf7zvo26pv2wnwenbiafptmfhbelht8xy22m0995vw8k0ri45wssqt0l1hhe9ox1rlo1eqr3lum8roy97l72usqp\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/628003\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"qbdc60anjhtayafza57kcvxjutb7dgrwwrxtaf28857r\",\n    \"InboundSpamThreshold\" : 8924485682748171877,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/112435\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/451555\",\n    \"InboundAddress\" : \"s0gzkrxkzymkqm1dxg74iajjpaqfl0rdxqzpxz93bp0ircdyn44mp7kfjdnsg6hq5q8s7j8lwzpatvyo292i6z6ojr50mgsew1v\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/418765\",\n    \"Name\" : \"Gaston Lesch\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 8779656448480615193,\n    \"InboundDomain\" : \"uywk1p23u3pwwsbwsvso0tmtwlpfhf9kutj8fw8wwbpsq7wydccren5tmhzmg3sfrc9n2ipohgi\",\n    \"SmtpApiActivated\" : true\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/464983\",\n    \"ApiTokens\" : [ \"blkeihvglltiriubkn1alb1o1sohh9q4x7shh1g9jqa8io0oo2imtj4ykehtsfincwkjvl620mof1q1yjl0geg3zzpkgojlp4bqa84jjiax0k9p1tao1dvp3e75yg12j1iwdlbgaq1zpwcvm\", \"j2k4of84osep27u12ix0f9cq0l9rlqp2opfstblq415hag73b6ui68ojuoo5unn85o7xofhq949s4g099tethj6gesbdrlkrhg4lk195d90yd5a2v35j0hdqsrea4gszfw7ni0ty9fous513mgr1u6ecs\", \"4k3wb85nmn9vx5uzraetmoxzlj7fqflkrxacc4n6ij7tq05oo4qav6eyjn3fa\", \"0t6oqrpt9zn8yls9m0fejub709spi0ppoyw6589ue0nhuuzcfo2g82r7k6ck3xbgubld9w1amaaid0w6kiqykgu0x5cobg1bf6wbaw7h5c5qpmzw54xpf7o6ffuxsaqtto1z0rezfib5r9squwenc4g8y6i3ovgkym\" ],\n    \"ServerLink\" : \"tg6iyg0o8r5xgkuyc2g80p4uddq7er3xv4hjbc5ah0rufsz3o8zekvisztn3nazr28lz4ek8pjlpzep1v0aqrsufl4u1f0dbfcsjp4b6705z5yxhfip0sxgds39xe7ovl10kyne00x0zr07ixzk73kplk19pdyda5bb3w35n8xa07kukcmno4mcbtim7z0\",\n    \"Color\" : \"uz42fchypd8krzxfx3gwbd35f3ov5\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/458132\",\n    \"RawEmailEnabled\" : false,\n    \"TrackLinks\" : \"None\",\n    \"InboundHash\" : \"zhgty912vfq5zdzrasv3mezdnpi5kldww9u5vid6zv7wggrmcycu5pob03yj7t2nznzh4jcujn46tlv1mp981f1hoh804k58tvlu8ih83ib\",\n    \"InboundSpamThreshold\" : 2088237541322519064,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/878237\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/598751\",\n    \"InboundAddress\" : \"xv9hye9ro4js59mcf3kuey25r8gl5zrpq7\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/927379\",\n    \"Name\" : \"Ms. Lucille Will\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 280075613508737891,\n    \"InboundDomain\" : \"wn0sb1ojnf8t1gsoed3w5jr9yficsr17hh6m0rv70yazgk\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/476419\",\n    \"ApiTokens\" : [ \"vhjqsnnpkt8dxg0jn5rft8iryws3adg9pyj1ek5do0n6uf1a5437d0gmx7zybcykc5iigsdcry76hj31vl5jjeua974xsplwuzb9v8up9x16hvfkeqqrsdr2r5y29p3aalerfknh307lv0snw0krsdm3tudclkpyc\", \"fmb63j6382vwv98dyjlta290qvpmvzotcet9q25n59scpo3wjaonod9yo4cv58g034qf89jkhspn7dq4010hrqrf3xxlku7zola70a1qruaphgdylz1zqq2jvd7\" ],\n    \"ServerLink\" : \"a30p9d5b\",\n    \"Color\" : \"ooxonikt4wba8x4i0q4jx3hh4r1ghg679ythzo1ggq9dxdzby0s2mvlke7vc0qj3w42cun9b38hjr9guszoew79hxhnp5sayyju5gmrcycxgg4xaelkarcix17fn8pily1z1xafwh4bca2ih69fmbens7\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/185472\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"HtmlOnlyTracking\",\n    \"InboundHash\" : \"iuowgr3a4v1fc8ijs4kkqzomzu7ez1aymqw9reyhjxi1zaz5up4cmkjoutuni2u3b4hhhm67nyvaf63m78qhoc6nxgs9k78y9vh3o850m1u2sdrc0cxmk5m894c9p1a3drp8vweggela\",\n    \"InboundSpamThreshold\" : 816782857011581015,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/090673\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/663617\",\n    \"InboundAddress\" : \"ip8isn14c3vbvnn7xmf805gvuk03gaxcjh4qwpp15hsa39d9bexph7tazo8ud2gsyji5ck3gwx0xfry3wiroo39a6lkb8sktzx1g1u6yubxaq7l029k0m\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/425888\",\n    \"Name\" : \"Annmarie Marquardt\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : true,\n    \"ID\" : 4978376958598321622,\n    \"InboundDomain\" : \"i85iyde17jgpzffdazzn2z925cdzs21wm1b9lfayf9366f73ceumh3yuauypw828wdsgaaqp4kqbb7fcuau3gjx6lq0iorq0nav7cfw7srd9wz\",\n    \"SmtpApiActivated\" : false\n  }, {\n    \"ClickHookUrl\" : \"https://web.example.mocklab.io/144655\",\n    \"ApiTokens\" : [ \"57zqm9yp84fkgbx1rz2nj1hwrpv58jwgad22y1fnt5bb75yzb4nxn4rtsw6a27bx277ca8jurwjz2830wt6p08mj7zjpkuoeirzemzqbt9mqjchvc4wejqesyapqgb34y7ezy8s1gn9m0bb\", \"mm32wgwvlzch6btt88jxjktcy01qizs5ut9d60if8pkvp1sntulol\", \"gdhxcgvwun\", \"15z9sfl0p9vlz0e35trwcyplmxey9rg2imeoe43534wbs3preriw2r0ngk8ab81psnl52ahy7kyrc7hvyv8fhorfrt932qqwwmezsute2jvlfrwxazg5bcd1b810jwc9thv6ojqunqphto1jy1v6\", \"vaq75mq21l4ebtl5ny3t3zqy15zyodfvikuvqcj4f68ftp0j2d9wezdewx9g89dh95jbcv2iozfc1ui33oflcblhyf\", \"kx5w71sbkmhi4d754aw1841hulisi9m2ch29oq6l7xxlythxsxe5qjhenafkidc\", \"k37eim4im0fqwvo333lzxifp7fqtrgmt4dnbngf2gic3nu9bl76vihkghsmi9jbxsw5uxpo5zgco4sf8w7\" ],\n    \"ServerLink\" : \"057gv7ip7b1ecziy19lu2fm9o32rvaemhds1ficwmxd1seydykc2uhgp9ohlyhkya7yxxs0laftvkmsb4v1yqsro0z7fvdcvy4nmwhrcuganutfor7rqmzisn0drp4q2e04xa9ourtl6kgo5cbc5z86h7m1rnl921iha37rulh8gxfu93omw4u25bm\",\n    \"Color\" : \"75keo2kdnt72ibod5kyb5gtm2im3wryplxhxqqgvz8lxdui5dhitfonigwdoowt9kd5jp81l3squ1in3dkmb7\",\n    \"DeliveryHookUrl\" : \"https://web.example.mocklab.io/014506\",\n    \"RawEmailEnabled\" : true,\n    \"TrackLinks\" : \"TextOnlyTracking\",\n    \"InboundHash\" : \"y0v0lwur30micjq466tlrr7oa311py15hfpz8s61z4y8o33ho7jump4wfg1zauccv0om41epi2zwe9wi0cnckao\",\n    \"InboundSpamThreshold\" : 2147587129035237191,\n    \"OpenHookUrl\" : \"https://web.example.mocklab.io/349249\",\n    \"BounceHookUrl\" : \"https://web.example.mocklab.io/194361\",\n    \"InboundAddress\" : \"nauzn1iblkcp9vmclp8lx4b11ni8n1u5wq6298x96k8ennhho0ztrk925uhs21hcin00s8j33vsfgt5w2kna9gdymy36uhn7y7mh6ote6ak3os6slpnz4ayhtoudsx7a4lbvro7ukb4\",\n    \"InboundHookUrl\" : \"https://web.example.mocklab.io/399268\",\n    \"Name\" : \"Ezekiel Spinka\",\n    \"TrackOpens\" : true,\n    \"PostFirstOpenOnly\" : false,\n    \"ID\" : 4857968683670237320,\n    \"InboundDomain\" : \"r7e4f8ygmzial08mxz6b6lo5hy0\",\n    \"SmtpApiActivated\" : true\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2dd36710-7b1e-48ec-9944-8c3730b333f2",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.585822Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listServers",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Servers" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/ExtendedServerInfo"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : "The results of listing servers."
          }
        }
      }
    },
    "insertionIndex" : 17
  }, {
    "id" : "8b30a777-49a1-43bc-990b-29048e91a338",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/senders/4056316762553516482/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "8b30a777-49a1-43bc-990b-29048e91a338",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.582346Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature"
        }
      }
    },
    "insertionIndex" : 18
  }, {
    "id" : "e022ccd0-9fb5-400a-b288-27661c948c4b",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/2608190126104448925/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Itaque aut voluptas et. Et eum dignissimos non facilis eaque non. Optio id tempore nihil. Dolores consequuntur animi.\",\n  \"ErrorCode\" : 6317334188609262172\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e022ccd0-9fb5-400a-b288-27661c948c4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.58232Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 19
  }, {
    "id" : "2fb7e198-a6b3-4536-b995-6252284df70f",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/senders/4914989284907536968/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Titus.Greenholt@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2023-01-26T11:52:07.581831Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"uxnqujrj78ab1sukksrfzhwxm1cbhba53q4dshgyqyqg22yv9muxpskkbr29i8jutep3rbl6w2bgx4ooxqnf\",\n  \"SPFTextValue\" : \"xs066qy1tyi2z8hqaqs6nze9bhm8fc8b83e3vlti5eq7fx4a2e8ygd1a7p6p2olnl0xv9bkohs3g9lkg6i33nrodobpk450y9f0arvp1lu2ux1fez286qv9inuc271xkfxp2zjan0v2pjtnxsiwunrf57qba\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"fm9qlawrevtc742a6unyj7f\",\n  \"DKIMTestValue\" : \"lj4qaiqi32xvt6lw4bxrygrwh3070xv6gtqlqtgmyu7guwyccjsqfsoi9j0s36ozivjepk9bkgei4xgeql4za6u0cwmfpdng\",\n  \"EmailAddress\" : \"Kemberly.Walter@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Lamar Bosco\",\n  \"ReturnPathDomain\" : \"4d7758m6dokzi806hj6q0n2oguud6va71vivmgcy8kwhwzmbieoju4dsp3ecvskkuprea3tutwav1jhu9vhdhba96j7e6kc4smw3pry9w0ylfcw0r9cft0cfftjd7wu6b668brbkcaw65f3vsxaii307cynirenr7aq3kuqp2z3czu727rzuw4\",\n  \"ReturnPathDomainCNAMEValue\" : \"fy871nxu3cwsds9ucxs85qw2uitjej7id6v694jlsbdt6k9s7kn6mp5dhnnl4ci669bvkvzxpbcxnmjzfdyorsm22u5gh6l\",\n  \"SPFHost\" : \"xi2og0xkuw72oo1a7q76bw5vhkcvfcetxhc4hp81wmr71fd4z6sqj0krcywjityh70t9l94dhqgqp7rugy3cb5xhdcfawnib7lm2rwcdu7xz0a5x507uh0ts62g23ow76tqh830oanzxs1t06gtu7sq0tfb5ojymfrmgowgilnyen\",\n  \"DKIMRevokedHost\" : \"dqgjunieepeetwk7ytynftif8pzt7frp5xr48enp87grr109tpt8h\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"nlvgfcy6iqhf9quhpyf5mchalfubqop299b0m5gbxbhr5t88t9elnbs8945a7ghefkq0iz1bn3k9pbjgespgud0mbsh0acvnw87ipypapmelhmx00nlha283v0falo2ik4v43ejs\",\n  \"DKIMRevokedTextValue\" : \"0smwvb3p09pusasymohfn1gh3b75e\",\n  \"Confirmed\" : true,\n  \"ID\" : 7203420416774578735,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"zn7btec43qky3ekmo04kzqqxkz0jjwu6cxdop2fn0fnrc7sfj2icty911cubn1g1m3spr3yhi0hsqtpchlj9h4lue3s94po2xw88h3gayao8jwuqlaz7y8icmpy1vcz9oxdh6v1as85st\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "2fb7e198-a6b3-4536-b995-6252284df70f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.582205Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 20
  }, {
    "id" : "1e5557a3-2a9b-400d-8395-7413c0dd7e2d",
    "name" : "Resend Signature Confirmation Email - 500",
    "request" : {
      "urlPath" : "/senders/7056250957196605484/resend",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "1e5557a3-2a9b-400d-8395-7413c0dd7e2d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.581777Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail"
        }
      }
    },
    "insertionIndex" : 21
  }, {
    "id" : "ce294387-4677-483a-8bea-773ef0c737fa",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/509329460270888047/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Iusto aut id reprehenderit. Laborum totam magni rerum nam aut quos. Rerum aut ducimus adipisci. Corrupti aliquam reiciendis reiciendis optio. Dolor aut laboriosam officiis minima explicabo nihil.\",\n  \"ErrorCode\" : 8208926914500800601\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ce294387-4677-483a-8bea-773ef0c737fa",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.581749Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 22
  }, {
    "id" : "cb1dd3a0-3228-4600-9b77-c3084ecc051d",
    "name" : "Resend Signature Confirmation Email (application/json)",
    "request" : {
      "urlPath" : "/senders/8008168195095800318/resend",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Aut magnam nihil quos. Doloremque tempore iste. Quo libero rem. Est eum ut maiores.\",\n  \"ErrorCode\" : 7347741036347637914\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "cb1dd3a0-3228-4600-9b77-c3084ecc051d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.581618Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "resendSenderSignatureConfirmationEmail",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 23
  }, {
    "id" : "451fa728-5a41-49a5-9d14-d57442a2c0b7",
    "name" : "Request a new DKIM Key - 500",
    "request" : {
      "urlPath" : "/senders/1918680703309449917/requestnewdkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "451fa728-5a41-49a5-9d14-d57442a2c0b7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.581518Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature"
        }
      }
    },
    "insertionIndex" : 24
  }, {
    "id" : "78ffb5df-052c-4edf-81dc-723c2474e239",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/5734390264285976911/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Et nesciunt omnis quis. Eum sapiente alias tempora. Amet animi laborum sapiente sit sapiente. Reprehenderit iusto doloribus quis nemo.\",\n  \"ErrorCode\" : 6411562807420983774\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "78ffb5df-052c-4edf-81dc-723c2474e239",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.581491Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 25
  }, {
    "id" : "6ca5fe02-5e08-4636-adbe-9fb2b2cf3984",
    "name" : "Request a new DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/senders/3009562755709004355/requestnewdkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Et et ex impedit ipsum natus aut aliquid. Quo qui non non labore aut. Nisi quibusdam fugit explicabo. Dolorem officia ut ipsa.\",\n  \"ErrorCode\" : 4423523885029591402\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "6ca5fe02-5e08-4636-adbe-9fb2b2cf3984",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.581378Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestNewDKIMKeyForSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 26
  }, {
    "id" : "17bfe52f-2e57-4ac3-8491-fbe653b37602",
    "name" : "Delete a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/1407789214596252061",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "17bfe52f-2e57-4ac3-8491-fbe653b37602",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.581256Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature"
        }
      }
    },
    "insertionIndex" : 27
  }, {
    "id" : "03e5904a-a480-4fe0-a3b7-28431651a132",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/3098823935805233198",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Corporis neque est. Voluptates ratione quam quam aut. Deserunt similique ut sed voluptatem deserunt voluptates placeat. Cumque recusandae nihil aut aliquam aspernatur. Voluptatibus qui tempore deserun\",\n  \"ErrorCode\" : 2126577691412348663\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03e5904a-a480-4fe0-a3b7-28431651a132",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.58123Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 28
  }, {
    "id" : "7ced5178-0d7f-4441-a81b-2e1f88b87af3",
    "name" : "Delete a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/4076705310605268180",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Quis enim mollitia. Rerum reiciendis asperiores cum illum similique dolor. Labore et ut maiores deleniti quaerat. Ut eos excepturi saepe.\",\n  \"ErrorCode\" : 8658612398613551953\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7ced5178-0d7f-4441-a81b-2e1f88b87af3",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.581104Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 29
  }, {
    "id" : "4a255de2-2d70-4af4-bf08-0171ea083f9a",
    "name" : "Update a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/6427264555208869648",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4a255de2-2d70-4af4-bf08-0171ea083f9a",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.580991Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature"
        }
      }
    },
    "insertionIndex" : 30
  }, {
    "id" : "80ead37e-0a5f-4dd7-80e9-58ce3ac2ca3d",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/4744694863110412049",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Maiores et sint debitis. Ut quia quia sit quo sit. Quaerat et voluptatem.\",\n  \"ErrorCode\" : 8818117450360959643\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "80ead37e-0a5f-4dd7-80e9-58ce3ac2ca3d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.580964Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 31
  }, {
    "id" : "9f97ba70-91fe-46b8-8335-6fd84e5e0b15",
    "name" : "Update a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/186022464598324064",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Starr.Hansen@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2023-02-23T08:59:07.580504Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"9ekbta5o583dsi4kcwsz4o4n30rbf1q4q5k625euoeki2unb55jmyli73w0ynpanirupumh0yno157h28wujudontw2xlhc81zbdej3coskxkvgy8ih3rw7dlqgfa9wbb5uu958gnsrvs4m655dtx2js2tty6dm8o2zv4oszx0mmsfg2791am7k826mospl88ti9bs\",\n  \"SPFTextValue\" : \"h0mu69fe5bpm5jsd1llnt95b63057rr2phpcap4s2y8w\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"kjg1sjtpa1z6si0t2nbvwn0tnsfbgdzxxpwa9qyp4xulwj28jq4shbgbm3ud\",\n  \"DKIMTestValue\" : \"rfbyyualrviul9e2q4joemezqeowtz0ji3du6cm8uludpzkv2a0ac3ce9va5plr0ohu2klfwqi3tikwqq1dzd754q5225r6q0ddgynx65irkyxfgjro2xghiczc71vqcraoyh\",\n  \"EmailAddress\" : \"Asha.Hickle@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Mrs. Branda Waelchi\",\n  \"ReturnPathDomain\" : \"5pc24fcqu4zvj7d7059dizgen3sqwmkky05znforydvb32fk8rs8sy0y5eqvniefx275opt3cjxutkfmvmeyx8s0s3w9ee9wiq54cpkj8d82z3xkix2g7u2zw2uiv344wu5g1uk3jmt1bqq306dg57wo4vz3sjrbcsp28wxilvkm3qxmy3vwrvhvs25l3\",\n  \"ReturnPathDomainCNAMEValue\" : \"qkqh0bcntmzr77yrf0m07htses52tf37vu1sa58x5fk0h2ijk5b9igr3nq54fqjacga8hqeh4vcr6l624tl72r3ikqbk1ecartdjidg01t4qa2us\",\n  \"SPFHost\" : \"pa4vkm4kajckmg7xm6rjcylrhfb11deaan50jawaci87ouf6kccgvbm30tu3zqlvsf3yzrlwhswksy60kqg8eqn83xmhi6kz01ml1qvtsvf\",\n  \"DKIMRevokedHost\" : \"dh1ktlk97\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"6rnv5916p7jwhqcb1dnnqrkw15vhsl9hb30noqa1teuxx59p2pohinjfzmrr5qtlb3rh1p0l8i0y5tm01el02v\",\n  \"DKIMRevokedTextValue\" : \"xbe7tqxf9iibz1gupcoflpn6emwxrbope8othtiapch6yxr2gdgqjktgz0r6wkz9sbffv6fo6s9lavykolzs67swifph61vxtamigwagx2iak4tvrtswmt\",\n  \"Confirmed\" : true,\n  \"ID\" : 7182308099532168670,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"2oc7ino1fw9zgg07r6dos3cdxonosv4ljypzzsrlp65fmub8tujgrf7faellrgxprjxwdgfzmsfe94sxv82cc1dyk11vh4i38ifp3co07a5s7iad1alho0uysfauy63vc\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9f97ba70-91fe-46b8-8335-6fd84e5e0b15",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.580861Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 32
  }, {
    "id" : "6402a14f-02c6-4ec8-ac0f-7fdfb605942f",
    "name" : "Get a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders/1670353669628023701",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "6402a14f-02c6-4ec8-ac0f-7fdfb605942f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.580457Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature"
        }
      }
    },
    "insertionIndex" : 33
  }, {
    "id" : "ecbc5c78-4fd1-49e1-98a1-1b1929556712",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/453353678390613696",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Dolorem deserunt nihil sequi doloribus. Hic excepturi velit et. Quo est neque autem deleniti amet fugiat.\",\n  \"ErrorCode\" : 5359984888473381038\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "ecbc5c78-4fd1-49e1-98a1-1b1929556712",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.580431Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 34
  }, {
    "id" : "e9febe97-b837-4832-be0d-7b3b8719d36e",
    "name" : "Get a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders/11280506197094783",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Crysta.Purdy@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-12-20T09:32:07.579971Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"z1c78encjs8o1kwqydfpvjbrojzoao8762qn55x83udtp9xq35xs\",\n  \"SPFTextValue\" : \"bn82vkvmnl9c0rog8158a3mp9xej1k86h41d3hztdsi7cqxbcj3k8wcp8e0b1rqf84pzneo0\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"nwt7dfi0tr6hgikvmsm0pn2yr6rk818tpzssgriycx34jdee31c57070hw2e59isw0eqe7wllnkvkw878gwg\",\n  \"DKIMTestValue\" : \"h43wj3wek4thc55goae6htgphd2kcxzd5tcu7thnb3te7bmkbyujk3dazn0cdd49ut8nqtbdsxafule5mjz2cfua9jlbgugtgwvdxtro3f3164h4gxx8q02k2svepeq4yqxbjpt28pgtizm1lk57mbe8goo3xl0\",\n  \"EmailAddress\" : \"Emery.Conroy@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Ollie Hermann\",\n  \"ReturnPathDomain\" : \"j3l1ve8e0ejzg4yoj0aqqap1hkvppm8zamjiksshhquoraqe4pdyspzjmr92cl5ed2fys4gjj5camoxaey8bf47imms5z6m3fxylifhgyr\",\n  \"ReturnPathDomainCNAMEValue\" : \"mwcr76nbmu55i7fub4ipvosc4id3mw9cqzo0utox2fn7sy44cczkazles7ynpyy50m0r3eakk5j1hoihon7wqokw8vawx24mnxk1m7dw7hgrhan3vgh5kdno9rhvxo1bzld5i68u9iycbt\",\n  \"SPFHost\" : \"490zn5d4dd7291z4vj5hgjc7xaaixha88mf9dq25iefqr7hcdqscia1ob9x\",\n  \"DKIMRevokedHost\" : \"83iks5vomaobdm0xyzw86dzkt3cbm44gr5wgd8ra16s0eq0kbcbdoylr1uglnups0q1amz9mnme4gz7apbgsxl11b48icngx\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"a43lrs3bzr4q6x113a45wq84ze4rdh9opqc20gw95d3rw2vmhg14zkmgzorj8wv37tnxodp1zdun2ljh1cb7kh8t2l7vh8urichdy34z8tt531xbo7e6ecphs6x8ve4g63d3chcf6nf6oct4awd0w7dy228qo1zaaqgak5dlhfh56kokxjdyv04ekpmsf42i6\",\n  \"DKIMRevokedTextValue\" : \"papl70phd2tym9drn659yfekn4hle17zma3ap8c90uusj30t2u0keusanh62bk3j0g0ngbteqqv40zqgsk44wq1ab9keeovz7qcgxcg75aws2qq99epf7bqpr25grosafqblmao4315io6tft5onz9zen9g67pmo8pd2rim6axzleuebkhzytxzq3193x9gru2\",\n  \"Confirmed\" : false,\n  \"ID\" : 1929558279499622396,\n  \"SPFVerified\" : false,\n  \"Domain\" : \"apdl9dg3a8puqosa71t6q3wb1b1m9ipr2fj2zplckxyzmzlr295teshqpu31qxgbdyywecvzjce6w404u0lnt0\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "e9febe97-b837-4832-be0d-7b3b8719d36e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.580319Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 35
  }, {
    "id" : "ff56142b-bbd1-4977-91ef-c05ab7703b2f",
    "name" : "Create a Sender Signature - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ff56142b-bbd1-4977-91ef-c05ab7703b2f",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.579922Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature"
        }
      }
    },
    "insertionIndex" : 36
  }, {
    "id" : "766f9837-cf1a-4700-97cc-21876338bee1",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Id praesentium nulla. Corporis aut earum. Nobis ducimus voluptatibus. Dolores sed ut et nemo architecto et.\",\n  \"ErrorCode\" : 1091776152048093996\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "766f9837-cf1a-4700-97cc-21876338bee1",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.579897Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 37
  }, {
    "id" : "a0471eae-a4a9-437b-aff1-f75a405a9592",
    "name" : "Create a Sender Signature (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"ReplyToEmailAddress\" : \"Millard.Sanford@email.example.mocklab.io\",\n  \"DKIMUpdateStatus\" : \"2022-03-20T10:11:07.579307Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"rc65zofp16hs5akk1y83qwg3muogo0itnrjwtt8c52ky06c494i7gnl7vgh54h7ojxnxc95u7jcropawiolusbjxykkamnm7u764faqpd4waen86thmp7bzdcz204e0\",\n  \"SPFTextValue\" : \"13o4de3ucibxuta6cvl43harc5t8pc26l9xmoua8q5kpn8tqvm7fc6adoavdhtd95mqmbxw6exbh780a5iw2poof8qkgrx\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"25un8m6mu2q6d1dch6mm4zy9qmn92iqiux9cgvooh756iduzhird1p9akpfyb1zpzolwzsld146e3zgn0hrssyp1gmzhqzbihaaj19lynauxxtj7hdtnfkbwleyqn3t2zk\",\n  \"DKIMTestValue\" : \"1ez9tzz8z5ln8p578ca2lso7xpcd12ih9o5s0i1u61yupn22bnz18hiw35w3aln78cedx93c59yzpqr7tax53o2tziiaeqn4gnfkgtdgqk3pszh985k97iuszwmnq0oha3ie9tyoaf4u7aca20cizit2obow0xl6xiwnhqft508adn34sgavs99jl80sf6g\",\n  \"EmailAddress\" : \"Ghislaine.Goodwin@email.example.mocklab.io\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Dr. Alberto Quitzon\",\n  \"ReturnPathDomain\" : \"zrcly42l00a4tuv6o1upk3e4hlnnja2i6dd7v53vshql05jsho4yd3thvi0dbeilf3kghtg8b31albu41plhhexva1ir7v594s5mheos310910xk5k7ypea5loy7w16q7txbv6vduk2wowswksuo237npcwjdg8hvizsqv1h3ckdx8rziuxxq7ei4s75khlhle06gjt4\",\n  \"ReturnPathDomainCNAMEValue\" : \"7q9xdcgu8q5czrihg7rva1dkvswj02quf79dklwcg5qm6e5ifizu68781hzdz8uazux1e4qshaxhas3x8w5ka7vsubua07vqj16tmg4sbhh1wkhvcd203qje6\",\n  \"SPFHost\" : \"e49v4ho6daziqk1hsswxkt0gxxm2oe3dhs81jwqp6wfcicfpht63ywi5h4173tedah9xtdm4uzqyywlrrt3l9se5q19uwi7lpd0uf090y3kalbafpu8nug5f5lq5n1tlr5wi7iy5lgsituyk0u12fp0bd0fywk4\",\n  \"DKIMRevokedHost\" : \"frp8povwovm9nt0v5cjrfrobjm7s9xxwl61v1zshom5xcf5hl0gv8w8arrx2ufzpj\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"pszdyq97w4vsvep1qvw3f8e67it08ibupgvewz7oz4y7umcr23e2yia8qtq4g55cgce09jucfeq9kipq95o0ehg76n6gqumt99dnhm4s1eqk6xfmlrgdbdc00pcw9yyw1f37zgqvf3jdoya2d6u\",\n  \"DKIMRevokedTextValue\" : \"0or9r9j694rns4s4onjynf0qfb5hwoygxczwj5vraasvkc87vkjr5hggh92pzu761bg4enobtqfsmo4lx3yj8tg6h3kdlg5exfed7lb59jorw\",\n  \"Confirmed\" : false,\n  \"ID\" : 5987750135207140781,\n  \"SPFVerified\" : true,\n  \"Domain\" : \"dsnr1496hu4rc2mw6gpd7hvvmfk31\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "a0471eae-a4a9-437b-aff1-f75a405a9592",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.579782Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createSenderSignature",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Confirmed" : {
                "type" : "boolean"
              },
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "Domain" : {
                "type" : "string"
              },
              "EmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReplyToEmailAddress" : {
                "type" : "string",
                "format" : "email"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 38
  }, {
    "id" : "2b0d4534-1497-4e34-8d99-826f3ba8941d",
    "name" : "List Sender Signatures - 500",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "581910402254824419"
        },
        "count" : {
          "equalTo" : "411"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "2b0d4534-1497-4e34-8d99-826f3ba8941d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.579248Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures"
        }
      }
    },
    "insertionIndex" : 39
  }, {
    "id" : "7135740b-23a4-4a03-8b05-01443fc7c9ac",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "8101837490525617150"
        },
        "count" : {
          "equalTo" : "6"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Et numquam fuga ut. Quidem minus aliquid magnam exercitationem distinctio. Sed corrupti molestiae ea.\",\n  \"ErrorCode\" : 4948297661074531658\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "7135740b-23a4-4a03-8b05-01443fc7c9ac",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.579198Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 40
  }, {
    "id" : "203022ec-7d59-45dc-9d5c-282233d7ab4b",
    "name" : "List Sender Signatures (application/json)",
    "request" : {
      "urlPath" : "/senders",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "1092580727543704068"
        },
        "count" : {
          "equalTo" : "399"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"TotalCount\" : 5665421724261257580,\n  \"SenderSignatures\" : [ {\n    \"ReplyToEmailAddress\" : \"Bernadette.Bergnaum@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 3847786237037132773,\n    \"Domain\" : \"00yhhqckkl733ves0lf59mfga3l537ansmalnl86s17th297521gwm5pklruhx4rcjflu4tql51t14jawliu0cu799aavc7h39e9mdnqfr27dx4klm3mv5z6ht5iwpmx6vxaxczlmysykrzbky644ggecdrt4\",\n    \"EmailAddress\" : \"Dinah.Marvin@email.example.mocklab.io\",\n    \"Name\" : \"Truman Borer\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Darrell.Wolff@email.example.mocklab.io\",\n    \"Confirmed\" : false,\n    \"ID\" : 4307963929589495060,\n    \"Domain\" : \"d2gfr9rwu7cmejg6wgibq9\",\n    \"EmailAddress\" : \"Vito.Yundt@email.example.mocklab.io\",\n    \"Name\" : \"Levi Stroman\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Cherie.Skiles@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 6145312266920003053,\n    \"Domain\" : \"tpvml9l8qleei0pec6tko84tres17m11sa2r30uap1js03i0y\",\n    \"EmailAddress\" : \"Salina.Kub@email.example.mocklab.io\",\n    \"Name\" : \"Alec Rogahn\"\n  }, {\n    \"ReplyToEmailAddress\" : \"Samual.Rolfson@email.example.mocklab.io\",\n    \"Confirmed\" : true,\n    \"ID\" : 4429322706147636417,\n    \"Domain\" : \"9aqwaxy5es6g09x1f1h5mvqvtbru3is4hmcy1g2747q9ataa\",\n    \"EmailAddress\" : \"Man.Heller@email.example.mocklab.io\",\n    \"Name\" : \"Mrs. Lashawnda Bernhard\"\n  } ]\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "203022ec-7d59-45dc-9d5c-282233d7ab4b",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.57907Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listSenderSignatures",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SenderSignatures" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/SenderSignatureInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 41
  }, {
    "id" : "15010a19-756c-46bd-a702-2830bff07238",
    "name" : "Request DNS Verification for SPF - 500",
    "request" : {
      "urlPath" : "/domains/2448512027011143089/verifyspf",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "15010a19-756c-46bd-a702-2830bff07238",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.578535Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 42
  }, {
    "id" : "9bf8fc35-e381-4078-ab0f-5d0c4ff711fe",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/549676711979360814/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Qui quod sit veritatis ab sapiente. Aperiam omnis officiis laborum voluptate dolore. Consequatur velit et. Harum odio modi ut sed. Quis tempore aliquid dolores.\",\n  \"ErrorCode\" : 7849870549025461005\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9bf8fc35-e381-4078-ab0f-5d0c4ff711fe",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.578508Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 43
  }, {
    "id" : "b8a8cf42-5927-41ed-be63-73c8176042f0",
    "name" : "Request DNS Verification for SPF (application/json)",
    "request" : {
      "urlPath" : "/domains/145590655437851057/verifyspf",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"SPFTextValue\" : \"6sk02nwip202iyr9cv5p0n\",\n  \"SPFHost\" : \"ms00b1vdnwm6x07wtdqd23g1lpwgz0mrlrwlmhnjca58sphbgihv2gu2ajzly6iwmcrp3434eeyftotr6bibowqcuz96pv3zrumelcb8theik9vmz89pitg2mrmedfy48q5n\",\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b8a8cf42-5927-41ed-be63-73c8176042f0",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.578386Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestSPFVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 44
  }, {
    "id" : "dac6e6cd-89b4-4a75-9398-a4c109004823",
    "name" : "Request DNS Verification for Return-Path - 500",
    "request" : {
      "urlPath" : "/domains/8657144739636751732/verifyreturnpath",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "dac6e6cd-89b4-4a75-9398-a4c109004823",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.578284Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 45
  }, {
    "id" : "0b96c73e-1375-42cd-97cb-96fb96858b96",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/5299930439598336408/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Recusandae est voluptate in aut alias porro repellendus. Ut amet voluptate. Et est quod voluptas. Nihil sequi enim. Vel assumenda laudantium quae doloribus eum.\",\n  \"ErrorCode\" : 5125875040565229680\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0b96c73e-1375-42cd-97cb-96fb96858b96",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.578257Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 46
  }, {
    "id" : "c1ed4511-1e77-4b4c-ab61-61add8964544",
    "name" : "Request DNS Verification for Return-Path (application/json)",
    "request" : {
      "urlPath" : "/domains/5258359205475842377/verifyreturnpath",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-09-25T11:09:07.577834Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"gxz3yedvlcacud10h0jfwzju7pwyqcenazm94ev07\",\n  \"SPFTextValue\" : \"7mh8srh2kdfsw\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"bpy7tc9zsc2dkfab9v2dq0gak849p1s5v1e5vd59wsyblit4s9gasgkdmrstcczvnbuqje6ul7kww2o8lbnuyu1h3jjnhhfvyb2wxdnqap673qm4sfs71gax2thd\",\n  \"DKIMTestValue\" : \"al6t4wrgytkns9gd\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"George Bins\",\n  \"ReturnPathDomain\" : \"5ziw518iao8l3xowu5nzi06wu3e2tx1qm0excuem078qc6lqs8y449kbgyi5lfae9n5ziax1cs4583rpa37cfisak1wcmcigvio2760n0uhl8t70wckzv4b4hohnybpx7e2inkq8zu7z4qfbb3c1v8bnjfsa7s8p9\",\n  \"ReturnPathDomainCNAMEValue\" : \"dvu8rpa633hkgkeyp3nmuj247dm9vmmjx06w4rvcy9e68zpkww2m85x53f906ciwpd2acipq408w337exjjwi1oo1g6a6vfcsmdo0cuv3webllwp7s2vvcbg9semith7uc8u3o80m5pip0wgybpckddzkfwlj6o931my\",\n  \"SPFHost\" : \"md7tu5ssrlzyc7chfw7shby0hu9ut4miibcuce40rcmzsoe97s8vekzmnny9k5jskyq410mi1wjme2ck8i31ljkcnbzdiu28oo7bzezdztcbi6hlk10az15ak6\",\n  \"DKIMRevokedHost\" : \"j2xa4i1chfjxjfvscgj06kxs24osfzxi8x877s7tzvr8d6383nq2qeh1y5hpweznj937cqmpp5gou\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"zlz2xw063l2dxpbpvudnx5kpt01va62l565lz0i9nathuxw2x05i6zgz3vp35a1n1dbtta6w23maoh9s8qniui1vr2cqwcujjzvrc2xegmwvtpyfz58w5ywh1jjrrvpucjq5w6\",\n  \"DKIMRevokedTextValue\" : \"v4ununtzxadkf1gqq0e91958nqx3c59fnpiiylx0idt0mx\",\n  \"ID\" : 3872215168700554204,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c1ed4511-1e77-4b4c-ab61-61add8964544",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.57813Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestReturnPathVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 47
  }, {
    "id" : "ae8d4656-e23a-46ce-b3d2-10e65fcc6ded",
    "name" : "Request DNS Verification for DKIM - 500",
    "request" : {
      "urlPath" : "/domains/2415915701091673800/verifydkim",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ae8d4656-e23a-46ce-b3d2-10e65fcc6ded",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.577801Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain"
        }
      }
    },
    "insertionIndex" : 48
  }, {
    "id" : "fa18f551-c7f5-4b63-84cb-bfe81b2eb980",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/8936394657925496035/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Et voluptates voluptatem voluptas ut molestias. Et fuga error at qui saepe. Dolorem sit ducimus qui id non ut maiores. Accusamus ut nulla aut non aperiam. Rerum voluptates doloribus at dolores perspic\",\n  \"ErrorCode\" : 2046531679944800905\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "fa18f551-c7f5-4b63-84cb-bfe81b2eb980",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.577773Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 49
  }, {
    "id" : "58996fd6-e6ad-4886-bf39-f8c5a84a005e",
    "name" : "Request DNS Verification for DKIM (application/json)",
    "request" : {
      "urlPath" : "/domains/8981428948757972183/verifydkim",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-06-30T10:34:07.577328Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"uv8flvwidin75valvua\",\n  \"SPFTextValue\" : \"be2gsepxpku8bdp0oh71fa4b14592cwrpejhdfuf1voh82usma48a5p1ks5ta3aw4ohyn0z3sqolp333vnoeac3fgtrx1brp95gm3j8g1ffb7n5w8fwvs8rtbrcqbgjcb3xyo093orc3pvgxk8jngg6brvajzbqv9vz3ggxg168x820w651fylu43r\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"ablxlso5do2g\",\n  \"DKIMTestValue\" : \"wwu9c4x5n0jua33gx5tyn3znygeop9p6nli2lthyg8bmcj7bich9pokb9r2a9sb26mupxjsuysfmwm4j1setex6\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Nellie Hickle\",\n  \"ReturnPathDomain\" : \"ikcr9ss2sg1lc4wzbmi3epfvgeqf35yzn826f8v2ndqhg5hanxywkgjfn12xu0ldrkjcecp4yw3ykf\",\n  \"ReturnPathDomainCNAMEValue\" : \"lliegyefgdazcajosu3szen3ggoapvm5hu10kwj825oyh5qdb28d8b183710hlpokitwzazkgs24lw92gve5th02e\",\n  \"SPFHost\" : \"j5mx7lr9pzrn9bq7e07z2uhlwfnqx3o4r3danms8tx5aa8ci2uqecshof3wcyqkssfag35gh8fm0kdakdk9w7pv3i49zizup\",\n  \"DKIMRevokedHost\" : \"zjhquxpi70wher61t4tf5ayzdl1lneqip243a6xkfcv6qxorcrwjf60daopa1x8bdt9qmpave6ca662n7fj3leydot528ivz5g\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"dridggdzcc2cg7txllao1wvjm8ivlfz8usd69yvsz1pf75tvy8dt2u3ngp14r666ey2bwa69e6gttmqpq75rwxxly6gomq2m6ncz9kxp2pdfmu4o8y09a07l60\",\n  \"DKIMRevokedTextValue\" : \"pj4rm1uqdh8egi9ka4pvl9dphscdm4h1efncj6mase08mhprnvbeclvks75xtuut1t1ilhri7x0of0clqpa1mccn\",\n  \"ID\" : 654584389424835849,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "58996fd6-e6ad-4886-bf39-f8c5a84a005e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.577622Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "requestDkimVerificationForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 50
  }, {
    "id" : "ee2f621b-27e0-4e03-a9fd-6d88370161c9",
    "name" : "Rotate DKIM Key - 500",
    "request" : {
      "urlPath" : "/domains/4745120686681207002/rotatedkim",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "ee2f621b-27e0-4e03-a9fd-6d88370161c9",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.577296Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain"
        }
      }
    },
    "insertionIndex" : 51
  }, {
    "id" : "5b985760-e0d0-439f-80d2-ad2a00f0693c",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/5215373264084311388/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Voluptas adipisci dolores veniam veniam. Velit qui recusandae a nihil ad eos. Ab blanditiis deleniti.\",\n  \"ErrorCode\" : 2814157593070330130\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "5b985760-e0d0-439f-80d2-ad2a00f0693c",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.577271Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 52
  }, {
    "id" : "9d5d96f2-fdab-4ad6-b814-e4dcd2b7e4e7",
    "name" : "Rotate DKIM Key (application/json)",
    "request" : {
      "urlPath" : "/domains/591006757548265317/rotatedkim",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-05-16T08:33:07.576887Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"feec30gv5cx7b6833ex6ahl0obyf5ou6khmhzq80ohmb32lj5exd9riohutxwcrl773vu8anun48dbttqwcsyrjjcwn723gz4pxn77fsqtfb5til0nk9utpmccx98qwjzr6jzajaaw34plp85gje\",\n  \"DKIMRevokedHost\" : \"7p5ut4unyxg7yz7f7xasxidj6a5wg56v5y0cdtt8\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"z74ijvo1ufqhhcrx34rsm65a9t4kn4oz0j0z778xk4rjwos0twrqg3g9\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"lheem05j53msyi2s0h4qc478l6es54lw1c9icfrmiht50p9br9or5gfqxi36v1m\",\n  \"DKIMRevokedTextValue\" : \"ael5j59hsbgw83frou03ajct0omd65gj1nkaz1ossujnaccftihwnj1rskbu27ft2nghy90nohzsxyq0sqh1u9hclls\",\n  \"ID\" : 7904184072683524718,\n  \"DKIMTestValue\" : \"8gpvx6vyu9jwg36kab180\",\n  \"Name\" : \"Julianne Rice I\"\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9d5d96f2-fdab-4ad6-b814-e4dcd2b7e4e7",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.57717Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "rotateDKIMKeyForDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 53
  }, {
    "id" : "4a64213d-b389-4d60-bfd5-17d6ed7bf091",
    "name" : "Delete a Domain - 500",
    "request" : {
      "urlPath" : "/domains/5045458357316162598",
      "method" : "DELETE"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "4a64213d-b389-4d60-bfd5-17d6ed7bf091",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.576846Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain"
        }
      }
    },
    "insertionIndex" : 54
  }, {
    "id" : "c978a70b-b2f6-4eee-a988-59465f191f0d",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/6866004750117150174",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Harum reprehenderit accusantium sunt ut sunt ipsa voluptas. Voluptas quo dolorem vel tempore quae. Et minima ipsa ut recusandae quis et distinctio. Sunt vel nemo sed similique.\",\n  \"ErrorCode\" : 3102403214330845675\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "c978a70b-b2f6-4eee-a988-59465f191f0d",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.576821Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 55
  }, {
    "id" : "03af49c3-b917-431f-bd62-a0abbe565a44",
    "name" : "Delete a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/3456422479949903018",
      "method" : "DELETE",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Message\" : \"Voluptatibus natus tempora velit. Officia delectus iure fuga earum nam saepe iste. Velit eius debitis inventore dolores porro facilis autem.\",\n  \"ErrorCode\" : 4687311136605683850\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "03af49c3-b917-431f-bd62-a0abbe565a44",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.576696Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "deleteDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 56
  }, {
    "id" : "3e3708f6-e411-49d5-b53a-6fff82b4b79e",
    "name" : "Update a Domain - 500",
    "request" : {
      "urlPath" : "/domains/4517426486569445697",
      "method" : "PUT"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "3e3708f6-e411-49d5-b53a-6fff82b4b79e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.576586Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain"
        }
      }
    },
    "insertionIndex" : 57
  }, {
    "id" : "b2d51ce8-2ca3-492c-99ff-6bd1af90e6fd",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/5259378292229010449",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Fuga qui velit magni repudiandae consectetur dignissimos tempora. A dolores omnis numquam. Sunt non voluptatibus vel nihil odit nobis voluptatem. Ratione voluptas voluptatem.\",\n  \"ErrorCode\" : 3696445191950773254\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2d51ce8-2ca3-492c-99ff-6bd1af90e6fd",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.57656Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 58
  }, {
    "id" : "317d3615-0944-4e52-85a4-5474ec6c7d4e",
    "name" : "Update a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/3832524175414362866",
      "method" : "PUT",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2023-01-16T08:56:07.576132Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"x54p1s4jxime4mmeobzf\",\n  \"SPFTextValue\" : \"myk1eiexo3j3g3tpon6luydc5moi445u2rchtgudidl8lcsnqbamvrz2262\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"q8g5dw34wlkexvzd9r00gl2uy0lc5olcdvwzgx\",\n  \"DKIMTestValue\" : \"fo8e3mme9wt29dp7g0yy9rvumm3rbvd3i0f5qal99itvu2nm5zr52crmk6ezico3xyv\",\n  \"ReturnPathDomainVerified\" : false,\n  \"Name\" : \"Gregoria Stamm\",\n  \"ReturnPathDomain\" : \"cln17v6pj8xiateaj2ql2qqfx9a4mzxjgr260dtybetbheikydv9rnetl1xu9yt4b6zj5e\",\n  \"ReturnPathDomainCNAMEValue\" : \"0wpb8plnzpcf78wudj3bdl5g29konpn71\",\n  \"SPFHost\" : \"rymivv0bklri4fq1q6bz11pwjyib3omq1c451nkkwu2bfhn8c2tfvxmjh16292artjfg4cuyeoexzsv9q8un7onu8f6dakjtm1ltqpfm\",\n  \"DKIMRevokedHost\" : \"qwk0rncmz8lzexaxx38tx1a8aoq5zxrwx1et2ya8d8gijzre09htxs8nyt0yh8\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"g0zvorq38rrrdsn5033pp49opnnfc706ryb8svug0taeev8siue1nnsb60yt1v8g9oxk1v\",\n  \"DKIMRevokedTextValue\" : \"0q5bifogec8y28rc31f1smyxhoskhgvp1013ohl97u3l6jibhlrteesocp51ikbd6q3ejgxsqjl9omg2jycyoezgt8mpzqhr97ky5ekyse7eqzb4chyt26fgdr5rt4xvhdv2seeqc5h82rlqol4a3z8xewypkcfseu1hssnkata2pv870wml0ryy\",\n  \"ID\" : 1050534794159152799,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "317d3615-0944-4e52-85a4-5474ec6c7d4e",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.576432Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "editDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 59
  }, {
    "id" : "843c2b22-bd6b-4bb3-8aba-779074563617",
    "name" : "Get a Domain - 500",
    "request" : {
      "urlPath" : "/domains/5486778148439568439",
      "method" : "GET"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "843c2b22-bd6b-4bb3-8aba-779074563617",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.576098Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain"
        }
      }
    },
    "insertionIndex" : 60
  }, {
    "id" : "b2b0557c-d841-40d5-a8ba-80da8238d9de",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/6028530229380011417",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Libero aliquam ut sit atque et. Quasi itaque voluptate iusto debitis. Sit error dignissimos perferendis ut ut.\",\n  \"ErrorCode\" : 3004473554723159298\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b2b0557c-d841-40d5-a8ba-80da8238d9de",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.576071Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 61
  }, {
    "id" : "0547f285-82f9-4a0f-a998-c22d8774ab02",
    "name" : "Get a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains/8719340368975559321",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2023-01-22T11:10:07.57564Z\",\n  \"DKIMVerified\" : false,\n  \"DKIMPendingTextValue\" : \"ptiq35ihoaw3yelz23mr69o9fn66hbk4sks5z8j008ufsnfzpgj7a8qeyfyt1cpsczygosnk2apqvtxibjvz8p16h2hnk4o7iy0ktjh9weti31u0qr5xt406q7nqb8skm9vaj32odi6cdpiochtjou8xz71\",\n  \"SPFTextValue\" : \"iy5bohsk3pgsoztr5tc8q6439ylmau8zespli2wkcbumdg3s6epvot3p411o5z6x9gnlrari6sj5b9h18puut4gf64y839psw09xk6ud439n2b\",\n  \"WeakDKIM\" : true,\n  \"DKIMHost\" : \"tdot87odhaq2lby3qanr515vnzgxpvcm14aomhna0akep1ywcotdd457uqhwh70jdx1anaq639155fs\",\n  \"DKIMTestValue\" : \"zmrhlxu3s4tto8cg7kb004rkzv6ispit6xtmdifirkwxx61w6e9helt1lztcam1ha7dsme2z2sv188zc1mwf3ytflgtf7al2t9gloetbssugp2on1us\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Dean Rempel\",\n  \"ReturnPathDomain\" : \"k24akjljq0191yeam86ztcmcsqgr5z06wq7yn791rphwhq7rhe3big59elplinb2n3rp8ootkbcyncuzx7323sdqucqky4xb9xcelf341cg3bg52daixiaro9vbofhqpyjmdg\",\n  \"ReturnPathDomainCNAMEValue\" : \"debbdb339ck4meulpb1dnprj07vmcptznhv51ro49dgmf\",\n  \"SPFHost\" : \"oipyby0o1e1km5jc4p1ipged9\",\n  \"DKIMRevokedHost\" : \"f0blyzp22piecke2xnt5kdxux1d0h0fe2qwlnow3lud6954y7fiz8cqwkyhhetwp3u2krld6o96mjnll1vvwd1zqfgt55h6drfie6qn85qxi4u87ji7\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : false,\n  \"DKIMPendingHost\" : \"m4x3k2zgdxom38dlgix56g9na2hpes2one4per5o1ctpbkxoozfl284doop8daow283u6wf5zcuslg3h3fgxud2qu49o4lr7ineqrnaqni9fqwr8tt\",\n  \"DKIMRevokedTextValue\" : \"pxd1htahmssttmhok5zg7cgxa3o60m959n99binu0tv\",\n  \"ID\" : 4564772874435741008,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "0547f285-82f9-4a0f-a998-c22d8774ab02",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.575955Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "getDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 62
  }, {
    "id" : "abb1534f-9ec8-4a82-bf27-265c07a98936",
    "name" : "Create a Domain - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST"
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "abb1534f-9ec8-4a82-bf27-265c07a98936",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.575605Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain"
        }
      }
    },
    "insertionIndex" : 63
  }, {
    "id" : "b21defb1-a183-4e12-84b3-559a1bd8ff92",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Facere mollitia et. Occaecati sed quisquam reprehenderit. Quia consequatur voluptates.\",\n  \"ErrorCode\" : 2400243896330289596\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "b21defb1-a183-4e12-84b3-559a1bd8ff92",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.575581Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 64
  }, {
    "id" : "9afd43ec-4ae6-4b96-86e8-79377027c616",
    "name" : "Create a Domain (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "POST",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"DKIMUpdateStatus\" : \"2022-05-13T10:45:07.575041Z\",\n  \"DKIMVerified\" : true,\n  \"DKIMPendingTextValue\" : \"w85ayf41emw2015xft1vull2oa5o2ccd38ro38haohkdrpbsocbv0lh7sz6om92bxcvfbfdo75vrlold5xhbf9db23bawvhhuz0lqp3u5aghoyu4ywvfnhixltxg0f1mln3x85na\",\n  \"SPFTextValue\" : \"a3csv3hpsx8q5fuf6m2cptwunmdu8y82xtyyikrazop9ck6p2n1u67i91y3tufkcb5bvulhkkitghyai3zl7eft81qelqfqcoi3nm5zrx9tn2wnpi5xkz12ivlw4mduo17pvy5zhy24idjobefre27rz1k3tottxpamx6cb80c460mao3bt2842l40kgec22hp2bda25\",\n  \"WeakDKIM\" : false,\n  \"DKIMHost\" : \"wn095ynuuwed2wyx5n3s8\",\n  \"DKIMTestValue\" : \"y4ny05p5l0ecadx52u2u3h8idyea6wrarktkd2nfckn9hfoj6hbb9x55ys9v9hsigt7h\",\n  \"ReturnPathDomainVerified\" : true,\n  \"Name\" : \"Andrew Nienow\",\n  \"ReturnPathDomain\" : \"wv3phl1hzkekknm0t7ax4menjz4aghe38b8xfupppmwurq08dxfgdckxmm8ambq4utc8359q66aoxkiyi7mz1g7uy5d3p10xi8e8t3hcml9qbvtfqi9yy6kun2xiujxabegj2rcah83fsj55ekym0jmokviysgxm72t1xjjim2drkul5u70a9jmufiug7web4\",\n  \"ReturnPathDomainCNAMEValue\" : \"wg5hmplfq4dcoqomq4acv72resda8qyi8pyudrgen2tmq93m5bdpv\",\n  \"SPFHost\" : \"87g6pfdzdfuubnsfpt0gekxe38jpjge5lkh7cux03vews2cb6yg2aqyi6bjidtja428rjw3ixq1uovjzvfvx7aqhifm6tqpxt6trbnvr9czh89dmlvyepom90ni9eik0kk2ijx878vel4vmbqfk970a8uvrvpkn5d61ul4o4aasd3rtww1lihi68h\",\n  \"DKIMRevokedHost\" : \"9tok9466sht27qy0rghr6ofre38t9206mqoc8r79ul8av8c9zt9oqmixpfkf00nybjrfmiqonuzb6rk6xoluqf6pqeb7cle5nceq9uzqd7v8zbocwg3a1e1ne4wd0y7\",\n  \"SafeToRemoveRevokedKeyFromDNS\" : true,\n  \"DKIMPendingHost\" : \"o6g32hmtjmrubucsr4zkenw5whngrf1m7w7b7vryydrlt31h2gxfh7hinpe9kadozz1fizdbgqnmikumt3helxook8onvjh1ue3xwffwxpjx76lzokqz2o20bb0ocq7wcqx3li9wd5sah4s5col34cpp6izxik9dbfme80jvtnek1xhv4yt2elf7rgka7vd\",\n  \"DKIMRevokedTextValue\" : \"5yy3zowxu2t43vn3nr\",\n  \"ID\" : 511090027810524568,\n  \"SPFVerified\" : false\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "9afd43ec-4ae6-4b96-86e8-79377027c616",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.575478Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "createDomain",
          "schema" : {
            "type" : "object",
            "properties" : {
              "DKIMHost" : {
                "type" : "string"
              },
              "DKIMPendingHost" : {
                "type" : "string"
              },
              "DKIMPendingTextValue" : {
                "type" : "string"
              },
              "DKIMRevokedHost" : {
                "type" : "string"
              },
              "DKIMRevokedTextValue" : {
                "type" : "string"
              },
              "DKIMTestValue" : {
                "type" : "string"
              },
              "DKIMUpdateStatus" : {
                "type" : "string"
              },
              "DKIMVerified" : {
                "type" : "boolean"
              },
              "ID" : {
                "type" : "integer",
                "format" : "int64"
              },
              "Name" : {
                "type" : "string"
              },
              "ReturnPathDomain" : {
                "type" : "string"
              },
              "ReturnPathDomainCNAMEValue" : {
                "type" : "string"
              },
              "ReturnPathDomainVerified" : {
                "type" : "boolean"
              },
              "SPFHost" : {
                "type" : "string"
              },
              "SPFTextValue" : {
                "type" : "string"
              },
              "SPFVerified" : {
                "type" : "boolean"
              },
              "SafeToRemoveRevokedKeyFromDNS" : {
                "type" : "boolean"
              },
              "WeakDKIM" : {
                "type" : "boolean"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 65
  }, {
    "id" : "a013193b-78ed-49d4-8d76-fe66e535c827",
    "name" : "List Domains - 500",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "queryParameters" : {
        "offset" : {
          "equalTo" : "623486386606957588"
        },
        "count" : {
          "equalTo" : "250"
        }
      }
    },
    "response" : {
      "status" : 500
    },
    "uuid" : "a013193b-78ed-49d4-8d76-fe66e535c827",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.574994Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains"
        }
      }
    },
    "insertionIndex" : 66
  }, {
    "id" : "1f720940-dbc8-4d0f-a376-2a82d4d70399",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "334079517903159974"
        },
        "count" : {
          "equalTo" : "498"
        }
      }
    },
    "response" : {
      "status" : 422,
      "body" : "{\n  \"Message\" : \"Rem temporibus similique sint tempore. Laboriosam quam veniam quasi quam ea occaecati necessitatibus. Autem ipsam ipsa voluptas.\",\n  \"ErrorCode\" : 6162604597821410625\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "1f720940-dbc8-4d0f-a376-2a82d4d70399",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.574944Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "ErrorCode" : {
                "type" : "integer"
              },
              "Message" : {
                "type" : "string"
              }
            },
            "description" : "A Postmark API error."
          }
        }
      }
    },
    "insertionIndex" : 67
  }, {
    "id" : "3ff9b124-1a2f-41a2-96de-f85327da6910",
    "name" : "List Domains (application/json)",
    "request" : {
      "urlPath" : "/domains",
      "method" : "GET",
      "headers" : {
        "Accept" : {
          "contains" : "application/json"
        }
      },
      "queryParameters" : {
        "offset" : {
          "equalTo" : "6425378362340850384"
        },
        "count" : {
          "equalTo" : "242"
        }
      }
    },
    "response" : {
      "status" : 200,
      "body" : "{\n  \"Domains\" : [ {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 7782330086131074051,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Dr. Buck Erdman\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 7426115573572823248,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Fredric Ward\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : false,\n    \"ID\" : 8131901144041043727,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Brittny Beer\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : true,\n    \"ID\" : 1110763267165963105,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : false,\n    \"Name\" : \"Shelley Ortiz\"\n  }, {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : true,\n    \"ID\" : 5657931097871818444,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Shelton Yost PhD\"\n  }, {\n    \"DKIMVerified\" : false,\n    \"WeakDKIM\" : false,\n    \"ID\" : 1862874537096295935,\n    \"SPFVerified\" : false,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Cristobal Hansen\"\n  }, {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : false,\n    \"ID\" : 5231727461929739375,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Alba Bergstrom\"\n  }, {\n    \"DKIMVerified\" : true,\n    \"WeakDKIM\" : true,\n    \"ID\" : 5184512270440644823,\n    \"SPFVerified\" : true,\n    \"ReturnPathDomainVerified\" : true,\n    \"Name\" : \"Lory Morar\"\n  } ],\n  \"TotalCount\" : 4494994887120084727\n}",
      "headers" : {
        "Content-Type" : "application/json"
      }
    },
    "uuid" : "3ff9b124-1a2f-41a2-96de-f85327da6910",
    "persistent" : true,
    "metadata" : {
      "mocklab" : {
        "created" : {
          "at" : "2023-03-13T11:55:07.574753Z",
          "via" : "OAS3_IMPORT"
        },
        "oas" : {
          "operationId" : "listDomains",
          "schema" : {
            "type" : "object",
            "properties" : {
              "Domains" : {
                "type" : "array",
                "items" : {
                  "$ref" : "#/components/schemas/DomainInformation"
                }
              },
              "TotalCount" : {
                "type" : "integer"
              }
            },
            "description" : ""
          }
        }
      }
    },
    "insertionIndex" : 68
  } ]
}